<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="805"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="805"> </text>
<g id="frames">
<g>
<title>all (15,444 samples, 100.00%)</title><rect x="10.0" y="771.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="782.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=13275] (3,669 samples, 23.76%)</title><rect x="10.0" y="755.0" width="280.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="766.0">[NIO Selector #0 tid=13275]</text>
</g>
<g>
<title>[unknown_Java] (7 samples, 0.05%)</title><rect x="10.3" y="739.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.3" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,658 samples, 23.69%)</title><rect x="10.8" y="739.0" width="279.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.8" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (15 samples, 0.10%)</title><rect x="12.2" y="723.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (15 samples, 0.10%)</title><rect x="12.2" y="707.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (551 samples, 3.57%)</title><rect x="13.4" y="723.0" width="42.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.4" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (6 samples, 0.04%)</title><rect x="13.9" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (6 samples, 0.04%)</title><rect x="13.9" y="691.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="16.9" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (538 samples, 3.48%)</title><rect x="14.4" y="707.0" width="41.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.4" y="718.0">one..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (450 samples, 2.91%)</title><rect x="16.5" y="691.0" width="34.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="19.5" y="702.0">.a..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (374 samples, 2.42%)</title><rect x="22.3" y="675.0" width="28.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="25.3" y="686.0">en..</text>
</g>
<g>
<title>do_syscall_64 (374 samples, 2.42%)</title><rect x="22.3" y="659.0" width="28.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="25.3" y="670.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (336 samples, 2.18%)</title><rect x="25.2" y="643.0" width="25.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="28.2" y="654.0">_..</text>
</g>
<g>
<title>do_epoll_wait (330 samples, 2.14%)</title><rect x="25.7" y="627.0" width="25.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="28.7" y="638.0">d..</text>
</g>
<g>
<title>__fget_light (16 samples, 0.10%)</title><rect x="26.1" y="611.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="29.1" y="622.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.06%)</title><rect x="26.7" y="595.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="29.7" y="606.0"></text>
</g>
<g>
<title>ep_poll (304 samples, 1.97%)</title><rect x="27.3" y="611.0" width="23.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="30.3" y="622.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (129 samples, 0.84%)</title><rect x="30.6" y="595.0" width="9.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="33.6" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (77 samples, 0.50%)</title><rect x="33.4" y="579.0" width="5.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="36.4" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (54 samples, 0.35%)</title><rect x="35.1" y="563.0" width="4.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="38.1" y="574.0"></text>
</g>
<g>
<title>sock_poll (52 samples, 0.34%)</title><rect x="35.3" y="547.0" width="4.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="38.3" y="558.0"></text>
</g>
<g>
<title>tcp_poll (30 samples, 0.19%)</title><rect x="37.0" y="531.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="40.0" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (7 samples, 0.05%)</title><rect x="38.7" y="515.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="41.7" y="526.0"></text>
</g>
<g>
<title>mutex_lock (13 samples, 0.08%)</title><rect x="39.3" y="579.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="42.3" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (133 samples, 0.86%)</title><rect x="40.4" y="595.0" width="10.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="43.4" y="606.0"></text>
</g>
<g>
<title>schedule (113 samples, 0.73%)</title><rect x="41.9" y="579.0" width="8.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="44.9" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (107 samples, 0.69%)</title><rect x="42.4" y="563.0" width="8.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="45.4" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (102 samples, 0.66%)</title><rect x="42.8" y="547.0" width="7.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="45.8" y="558.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.03%)</title><rect x="50.6" y="611.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="53.6" y="622.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (5 samples, 0.03%)</title><rect x="50.9" y="691.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="53.9" y="702.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.03%)</title><rect x="51.3" y="691.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="54.3" y="702.0"></text>
</g>
<g>
<title>__GI___clock_gettime (20 samples, 0.13%)</title><rect x="51.6" y="691.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="54.6" y="702.0"></text>
</g>
<g>
<title>[vdso] (9 samples, 0.06%)</title><rect x="52.4" y="675.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="55.4" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (10 samples, 0.06%)</title><rect x="53.1" y="691.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="56.1" y="702.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (16 samples, 0.10%)</title><rect x="54.1" y="691.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="57.1" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,073 samples, 19.90%)</title><rect x="55.5" y="723.0" width="234.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.5" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,062 samples, 19.83%)</title><rect x="56.1" y="707.0" width="234.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.1" y="718.0">one/nio/http/HttpSession.proces..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,575 samples, 16.67%)</title><rect x="56.1" y="691.0" width="196.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="59.1" y="702.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="59.6" y="675.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="62.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,313 samples, 14.98%)</title><rect x="60.0" y="675.0" width="176.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.0" y="686.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,308 samples, 14.94%)</title><rect x="60.4" y="659.0" width="176.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="63.4" y="670.0">one/nio/http/HttpServer..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2,271 samples, 14.70%)</title><rect x="60.4" y="643.0" width="173.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.4" y="654.0">RequestHandler1_entity..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,964 samples, 12.72%)</title><rect x="60.4" y="627.0" width="150.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.4" y="638.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (39 samples, 0.25%)</title><rect x="60.7" y="611.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (35 samples, 0.23%)</title><rect x="61.0" y="595.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.06%)</title><rect x="62.5" y="579.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="65.5" y="590.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (9 samples, 0.06%)</title><rect x="62.6" y="563.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (9 samples, 0.06%)</title><rect x="62.6" y="547.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.6" y="558.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (6 samples, 0.04%)</title><rect x="62.8" y="531.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.8" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.04%)</title><rect x="63.3" y="579.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="66.3" y="590.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.03%)</title><rect x="63.4" y="563.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="66.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,911 samples, 12.37%)</title><rect x="63.7" y="611.0" width="146.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.7" y="622.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (66 samples, 0.43%)</title><rect x="63.8" y="595.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="66.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (48 samples, 0.31%)</title><rect x="65.1" y="579.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="68.1" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (17 samples, 0.11%)</title><rect x="65.8" y="563.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (10 samples, 0.06%)</title><rect x="66.3" y="547.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (4 samples, 0.03%)</title><rect x="66.8" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="69.8" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (22 samples, 0.14%)</title><rect x="67.1" y="563.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.1" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (21 samples, 0.14%)</title><rect x="67.2" y="547.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (8 samples, 0.05%)</title><rect x="67.9" y="531.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.9" y="542.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (5 samples, 0.03%)</title><rect x="68.0" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.0" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,844 samples, 11.94%)</title><rect x="68.8" y="595.0" width="140.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.8" y="606.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,844 samples, 11.94%)</title><rect x="68.8" y="579.0" width="140.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="71.8" y="590.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,842 samples, 11.93%)</title><rect x="68.9" y="563.0" width="140.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.9" y="574.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,840 samples, 11.91%)</title><rect x="69.1" y="547.0" width="140.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.1" y="558.0">one/nio/net/Native..</text>
</g>
<g>
<title>.annobin_send.c (1,800 samples, 11.66%)</title><rect x="69.9" y="531.0" width="137.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="72.9" y="542.0">.annobin_send.c</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,712 samples, 11.09%)</title><rect x="76.6" y="515.0" width="130.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="79.6" y="526.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (1,712 samples, 11.09%)</title><rect x="76.6" y="499.0" width="130.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="79.6" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,690 samples, 10.94%)</title><rect x="78.2" y="483.0" width="129.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="81.2" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,686 samples, 10.92%)</title><rect x="78.5" y="467.0" width="128.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="81.5" y="478.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (5 samples, 0.03%)</title><rect x="79.1" y="451.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="82.1" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (1,663 samples, 10.77%)</title><rect x="79.5" y="451.0" width="127.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="82.5" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (10 samples, 0.06%)</title><rect x="79.8" y="435.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="82.8" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (8 samples, 0.05%)</title><rect x="80.0" y="419.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="83.0" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,648 samples, 10.67%)</title><rect x="80.6" y="435.0" width="125.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="83.6" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.03%)</title><rect x="81.3" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="84.3" y="430.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.04%)</title><rect x="81.6" y="419.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="84.6" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,629 samples, 10.55%)</title><rect x="82.0" y="419.0" width="124.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="85.0" y="430.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>__check_object_size (13 samples, 0.08%)</title><rect x="83.1" y="403.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="86.1" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (7 samples, 0.05%)</title><rect x="83.5" y="387.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="86.5" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1,505 samples, 9.74%)</title><rect x="84.1" y="403.0" width="115.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="87.1" y="414.0">__tcp_push_pen..</text>
</g>
<g>
<title>tcp_write_xmit (1,502 samples, 9.73%)</title><rect x="84.3" y="387.0" width="114.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="87.3" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (1,453 samples, 9.41%)</title><rect x="86.0" y="371.0" width="111.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="89.0" y="382.0">__tcp_transmi..</text>
</g>
<g>
<title>__ip_queue_xmit (1,407 samples, 9.11%)</title><rect x="87.2" y="355.0" width="107.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="90.2" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (16 samples, 0.10%)</title><rect x="87.6" y="339.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="90.6" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (11 samples, 0.07%)</title><rect x="88.0" y="323.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="91.0" y="334.0"></text>
</g>
<g>
<title>ip_local_out (281 samples, 1.82%)</title><rect x="88.9" y="339.0" width="21.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="91.9" y="350.0">i..</text>
</g>
<g>
<title>__ip_local_out (280 samples, 1.81%)</title><rect x="88.9" y="323.0" width="21.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="91.9" y="334.0">_..</text>
</g>
<g>
<title>ip_send_check (7 samples, 0.05%)</title><rect x="89.2" y="307.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="92.2" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (270 samples, 1.75%)</title><rect x="89.7" y="307.0" width="20.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="92.7" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (77 samples, 0.50%)</title><rect x="90.1" y="291.0" width="5.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="93.1" y="302.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (6 samples, 0.04%)</title><rect x="96.0" y="291.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="99.0" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (22 samples, 0.14%)</title><rect x="96.4" y="291.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="99.4" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (16 samples, 0.10%)</title><rect x="96.9" y="275.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="99.9" y="286.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (14 samples, 0.09%)</title><rect x="98.1" y="291.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="101.1" y="302.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (5 samples, 0.03%)</title><rect x="99.2" y="291.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="102.2" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (14 samples, 0.09%)</title><rect x="99.5" y="291.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="102.5" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (6 samples, 0.04%)</title><rect x="100.6" y="291.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="103.6" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (100 samples, 0.65%)</title><rect x="101.1" y="291.0" width="7.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="104.1" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (21 samples, 0.14%)</title><rect x="102.5" y="275.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="105.5" y="286.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (7 samples, 0.05%)</title><rect x="104.1" y="275.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="107.1" y="286.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (7 samples, 0.05%)</title><rect x="104.7" y="275.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="107.7" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (34 samples, 0.22%)</title><rect x="105.2" y="275.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="108.2" y="286.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (8 samples, 0.05%)</title><rect x="107.2" y="259.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="110.2" y="270.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (12 samples, 0.08%)</title><rect x="107.8" y="275.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="110.8" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (16 samples, 0.10%)</title><rect x="108.7" y="291.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="111.7" y="302.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (5 samples, 0.03%)</title><rect x="109.4" y="275.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="112.4" y="286.0"></text>
</g>
<g>
<title>selinux_ipv4_output (5 samples, 0.03%)</title><rect x="109.9" y="291.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="112.9" y="302.0"></text>
</g>
<g>
<title>ip_output (1,105 samples, 7.15%)</title><rect x="110.3" y="339.0" width="84.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="113.3" y="350.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (1,026 samples, 6.64%)</title><rect x="110.6" y="323.0" width="78.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="113.6" y="334.0">ip_finish..</text>
</g>
<g>
<title>__dev_queue_xmit (83 samples, 0.54%)</title><rect x="111.8" y="307.0" width="6.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="114.8" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (52 samples, 0.34%)</title><rect x="113.4" y="291.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="116.4" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (47 samples, 0.30%)</title><rect x="113.8" y="275.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="116.8" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (6 samples, 0.04%)</title><rect x="114.3" y="259.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="117.3" y="270.0"></text>
</g>
<g>
<title>netif_rx (23 samples, 0.15%)</title><rect x="114.8" y="259.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="117.8" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (23 samples, 0.15%)</title><rect x="114.8" y="243.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="117.8" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (12 samples, 0.08%)</title><rect x="115.1" y="227.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="118.1" y="238.0"></text>
</g>
<g>
<title>ktime_get_with_offset (7 samples, 0.05%)</title><rect x="116.0" y="227.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="119.0" y="238.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.03%)</title><rect x="116.2" y="211.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="119.2" y="222.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (4 samples, 0.03%)</title><rect x="116.7" y="259.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="119.7" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (5 samples, 0.03%)</title><rect x="117.0" y="259.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="120.0" y="270.0"></text>
</g>
<g>
<title>validate_xmit_skb (7 samples, 0.05%)</title><rect x="117.6" y="291.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="120.6" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (927 samples, 6.00%)</title><rect x="118.1" y="307.0" width="70.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="121.1" y="318.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.0 (924 samples, 5.98%)</title><rect x="118.3" y="291.0" width="70.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="121.3" y="302.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (907 samples, 5.87%)</title><rect x="119.6" y="275.0" width="69.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="122.6" y="286.0">do_soft..</text>
</g>
<g>
<title>__softirqentry_text_start (907 samples, 5.87%)</title><rect x="119.6" y="259.0" width="69.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="122.6" y="270.0">__softi..</text>
</g>
<g>
<title>net_rx_action (888 samples, 5.75%)</title><rect x="120.9" y="243.0" width="67.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="123.9" y="254.0">net_rx_..</text>
</g>
<g>
<title>__kfree_skb_flush (6 samples, 0.04%)</title><rect x="121.6" y="227.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="124.6" y="238.0"></text>
</g>
<g>
<title>process_backlog (872 samples, 5.65%)</title><rect x="122.2" y="227.0" width="66.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="125.2" y="238.0">process..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (856 samples, 5.54%)</title><rect x="123.4" y="211.0" width="65.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="126.4" y="222.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (9 samples, 0.06%)</title><rect x="123.5" y="195.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="126.5" y="206.0"></text>
</g>
<g>
<title>ip_rcv (845 samples, 5.47%)</title><rect x="124.2" y="195.0" width="64.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="127.2" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (674 samples, 4.36%)</title><rect x="125.0" y="179.0" width="51.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="128.0" y="190.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (585 samples, 3.79%)</title><rect x="125.5" y="163.0" width="44.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="128.5" y="174.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (581 samples, 3.76%)</title><rect x="125.8" y="147.0" width="44.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="128.8" y="158.0">ip_p..</text>
</g>
<g>
<title>raw_local_deliver (5 samples, 0.03%)</title><rect x="126.4" y="131.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="129.4" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (568 samples, 3.68%)</title><rect x="126.8" y="131.0" width="43.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="129.8" y="142.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (22 samples, 0.14%)</title><rect x="128.0" y="115.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="131.0" y="126.0"></text>
</g>
<g>
<title>_raw_spin_lock (5 samples, 0.03%)</title><rect x="129.7" y="115.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="132.7" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (14 samples, 0.09%)</title><rect x="130.1" y="115.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="133.1" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (13 samples, 0.08%)</title><rect x="130.2" y="99.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="133.2" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (11 samples, 0.07%)</title><rect x="130.3" y="83.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="133.3" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (508 samples, 3.29%)</title><rect x="131.3" y="115.0" width="38.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="134.3" y="126.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (503 samples, 3.26%)</title><rect x="131.6" y="99.0" width="38.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="134.6" y="110.0">tcp..</text>
</g>
<g>
<title>sk_reset_timer (14 samples, 0.09%)</title><rect x="132.0" y="83.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="135.0" y="94.0"></text>
</g>
<g>
<title>mod_timer (14 samples, 0.09%)</title><rect x="132.0" y="67.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="135.0" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.07%)</title><rect x="132.2" y="51.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="135.2" y="62.0"></text>
</g>
<g>
<title>tcp_ack (130 samples, 0.84%)</title><rect x="133.1" y="83.0" width="9.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="136.1" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (31 samples, 0.20%)</title><rect x="135.7" y="67.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="138.7" y="78.0"></text>
</g>
<g>
<title>__slab_free (8 samples, 0.05%)</title><rect x="135.7" y="51.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="138.7" y="62.0"></text>
</g>
<g>
<title>kfree (10 samples, 0.06%)</title><rect x="136.3" y="51.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="139.3" y="62.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.06%)</title><rect x="137.4" y="51.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="140.4" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (6 samples, 0.04%)</title><rect x="138.3" y="67.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="141.3" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (7 samples, 0.05%)</title><rect x="138.7" y="67.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="141.7" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (12 samples, 0.08%)</title><rect x="139.3" y="67.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="142.3" y="78.0"></text>
</g>
<g>
<title>__slab_free (6 samples, 0.04%)</title><rect x="139.7" y="51.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="142.7" y="62.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (5 samples, 0.03%)</title><rect x="140.5" y="67.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="143.5" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (6 samples, 0.04%)</title><rect x="142.0" y="67.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="145.0" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (7 samples, 0.05%)</title><rect x="142.5" y="67.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="145.5" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.03%)</title><rect x="143.0" y="83.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="146.0" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (341 samples, 2.21%)</title><rect x="143.3" y="83.0" width="26.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="146.3" y="94.0">t..</text>
</g>
<g>
<title>sock_def_readable (311 samples, 2.01%)</title><rect x="144.5" y="67.0" width="23.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="147.5" y="78.0">s..</text>
</g>
<g>
<title>__wake_up_common_lock (296 samples, 1.92%)</title><rect x="145.6" y="51.0" width="22.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="148.6" y="62.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (293 samples, 1.90%)</title><rect x="145.8" y="35.0" width="22.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="148.8" y="46.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (9 samples, 0.06%)</title><rect x="168.2" y="67.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="171.2" y="78.0"></text>
</g>
<g>
<title>tcp_queue_rcv (6 samples, 0.04%)</title><rect x="168.9" y="67.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="171.9" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (8 samples, 0.05%)</title><rect x="169.4" y="83.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="172.4" y="94.0"></text>
</g>
<g>
<title>ktime_get (7 samples, 0.05%)</title><rect x="169.5" y="67.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="172.5" y="78.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.04%)</title><rect x="169.5" y="51.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="172.5" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (82 samples, 0.53%)</title><rect x="170.2" y="163.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="173.2" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (60 samples, 0.39%)</title><rect x="170.6" y="147.0" width="4.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="173.6" y="158.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (10 samples, 0.06%)</title><rect x="174.0" y="131.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="177.0" y="142.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (5 samples, 0.03%)</title><rect x="174.8" y="131.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="177.8" y="142.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (6 samples, 0.04%)</title><rect x="175.6" y="147.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="178.6" y="158.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (4 samples, 0.03%)</title><rect x="175.7" y="131.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="178.7" y="142.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (7 samples, 0.05%)</title><rect x="176.5" y="179.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="179.5" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 0.03%)</title><rect x="177.0" y="179.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="180.0" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (5 samples, 0.03%)</title><rect x="177.0" y="163.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="180.0" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (149 samples, 0.96%)</title><rect x="177.4" y="179.0" width="11.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="180.4" y="190.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (8 samples, 0.05%)</title><rect x="178.3" y="163.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="181.3" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (110 samples, 0.71%)</title><rect x="178.9" y="163.0" width="8.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="181.9" y="174.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.03%)</title><rect x="187.3" y="163.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="190.3" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (4 samples, 0.03%)</title><rect x="187.7" y="163.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="190.7" y="174.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (5 samples, 0.03%)</title><rect x="188.4" y="163.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="191.4" y="174.0"></text>
</g>
<g>
<title>ip_finish_output (12 samples, 0.08%)</title><rect x="189.0" y="323.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="192.0" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (63 samples, 0.41%)</title><rect x="189.9" y="323.0" width="4.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="192.9" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (21 samples, 0.14%)</title><rect x="190.1" y="307.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="193.1" y="318.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (5 samples, 0.03%)</title><rect x="191.9" y="307.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="194.9" y="318.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (13 samples, 0.08%)</title><rect x="192.3" y="307.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="195.3" y="318.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (9 samples, 0.06%)</title><rect x="192.6" y="291.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="195.6" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (5 samples, 0.03%)</title><rect x="193.3" y="307.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="196.3" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute (8 samples, 0.05%)</title><rect x="193.7" y="307.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="196.7" y="318.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (6 samples, 0.04%)</title><rect x="194.3" y="307.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="197.3" y="318.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.03%)</title><rect x="194.7" y="355.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="197.7" y="366.0"></text>
</g>
<g>
<title>__copy_skb_header (4 samples, 0.03%)</title><rect x="194.8" y="339.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="197.8" y="350.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (7 samples, 0.05%)</title><rect x="195.3" y="355.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="198.3" y="366.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.03%)</title><rect x="195.9" y="355.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="198.9" y="366.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (5 samples, 0.03%)</title><rect x="196.3" y="355.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="199.3" y="366.0"></text>
</g>
<g>
<title>tcp_v4_send_check (4 samples, 0.03%)</title><rect x="196.7" y="355.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="199.7" y="366.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.03%)</title><rect x="197.0" y="371.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="200.0" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (14 samples, 0.09%)</title><rect x="197.5" y="371.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="200.5" y="382.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.03%)</title><rect x="198.2" y="355.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="201.2" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (6 samples, 0.04%)</title><rect x="198.6" y="371.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="201.6" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.04%)</title><rect x="199.1" y="403.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="202.1" y="414.0"></text>
</g>
<g>
<title>copyin (4 samples, 0.03%)</title><rect x="199.2" y="387.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="202.2" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (61 samples, 0.39%)</title><rect x="199.6" y="403.0" width="4.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="202.6" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (58 samples, 0.38%)</title><rect x="199.7" y="387.0" width="4.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="202.7" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (10 samples, 0.06%)</title><rect x="200.1" y="371.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="203.1" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (8 samples, 0.05%)</title><rect x="200.2" y="355.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="203.2" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (32 samples, 0.21%)</title><rect x="200.9" y="371.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="203.9" y="382.0"></text>
</g>
<g>
<title>ksize (11 samples, 0.07%)</title><rect x="203.3" y="371.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="206.3" y="382.0"></text>
</g>
<g>
<title>tcp_push (6 samples, 0.04%)</title><rect x="204.5" y="403.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="207.5" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (15 samples, 0.10%)</title><rect x="205.1" y="403.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="208.1" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (13 samples, 0.08%)</title><rect x="205.2" y="387.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="208.2" y="398.0"></text>
</g>
<g>
<title>sockfd_lookup_light (11 samples, 0.07%)</title><rect x="206.5" y="451.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="209.5" y="462.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.06%)</title><rect x="206.7" y="435.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="209.7" y="446.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.05%)</title><rect x="206.8" y="419.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="209.8" y="430.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.14%)</title><rect x="207.6" y="531.0" width="1.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="210.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.14%)</title><rect x="207.6" y="515.0" width="1.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="210.6" y="526.0"></text>
</g>
<g>
<title>.annobin_send.c (5 samples, 0.03%)</title><rect x="207.6" y="499.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="210.6" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (13 samples, 0.08%)</title><rect x="208.0" y="499.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="211.0" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.03%)</title><rect x="208.6" y="483.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="211.6" y="494.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.03%)</title><rect x="209.3" y="531.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="212.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.05%)</title><rect x="209.7" y="611.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (18 samples, 0.12%)</title><rect x="210.5" y="627.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="213.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.03%)</title><rect x="211.3" y="611.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="214.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (289 samples, 1.87%)</title><rect x="211.9" y="627.0" width="22.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="214.9" y="638.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.10%)</title><rect x="212.2" y="611.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="215.2" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (16 samples, 0.10%)</title><rect x="212.2" y="595.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.2" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (15 samples, 0.10%)</title><rect x="212.2" y="579.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="215.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.06%)</title><rect x="212.6" y="563.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="215.6" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="212.9" y="547.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="215.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.03%)</title><rect x="213.1" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="216.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (12 samples, 0.08%)</title><rect x="213.4" y="611.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (257 samples, 1.66%)</title><rect x="214.3" y="611.0" width="19.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="217.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (254 samples, 1.64%)</title><rect x="214.5" y="595.0" width="19.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="217.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (227 samples, 1.47%)</title><rect x="214.8" y="579.0" width="17.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="217.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (226 samples, 1.46%)</title><rect x="214.8" y="563.0" width="17.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="217.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (226 samples, 1.46%)</title><rect x="214.8" y="547.0" width="17.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="217.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (14 samples, 0.09%)</title><rect x="217.3" y="531.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="220.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (14 samples, 0.09%)</title><rect x="217.3" y="515.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (43 samples, 0.28%)</title><rect x="218.6" y="531.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="221.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (8 samples, 0.05%)</title><rect x="221.9" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="224.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (124 samples, 0.80%)</title><rect x="222.5" y="531.0" width="9.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="225.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (120 samples, 0.78%)</title><rect x="222.8" y="515.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="225.8" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (85 samples, 0.55%)</title><rect x="225.4" y="499.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="228.4" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (13 samples, 0.08%)</title><rect x="226.1" y="483.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="229.1" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (32 samples, 0.21%)</title><rect x="227.1" y="483.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.1" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (11 samples, 0.07%)</title><rect x="228.7" y="467.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="231.7" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (30 samples, 0.19%)</title><rect x="229.6" y="483.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="232.6" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (27 samples, 0.17%)</title><rect x="229.7" y="467.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="232.7" y="478.0"></text>
</g>
<g>
<title>vectorizedMismatch (26 samples, 0.17%)</title><rect x="229.8" y="451.0" width="2.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="232.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (24 samples, 0.16%)</title><rect x="232.1" y="579.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="235.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.&lt;init&gt; (9 samples, 0.06%)</title><rect x="233.0" y="563.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (16 samples, 0.10%)</title><rect x="233.9" y="643.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.9" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (16 samples, 0.10%)</title><rect x="233.9" y="627.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="236.9" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (13 samples, 0.08%)</title><rect x="233.9" y="611.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="236.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.equals (9 samples, 0.06%)</title><rect x="234.2" y="595.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (20 samples, 0.13%)</title><rect x="235.2" y="643.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="238.2" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.12%)</title><rect x="235.2" y="627.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (9 samples, 0.06%)</title><rect x="235.2" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.2" y="622.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (8 samples, 0.05%)</title><rect x="235.3" y="595.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="238.3" y="606.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.03%)</title><rect x="235.5" y="579.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="238.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (9 samples, 0.06%)</title><rect x="236.0" y="611.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="239.0" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.03%)</title><rect x="236.2" y="595.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="239.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (86 samples, 0.56%)</title><rect x="236.7" y="675.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="239.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (31 samples, 0.20%)</title><rect x="236.9" y="659.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="239.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (19 samples, 0.12%)</title><rect x="237.8" y="643.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="240.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (19 samples, 0.12%)</title><rect x="237.8" y="627.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="240.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (17 samples, 0.11%)</title><rect x="238.0" y="611.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.0" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (52 samples, 0.34%)</title><rect x="239.3" y="659.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="242.3" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (52 samples, 0.34%)</title><rect x="239.3" y="643.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="242.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (50 samples, 0.32%)</title><rect x="239.4" y="627.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="242.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 0.18%)</title><rect x="240.0" y="611.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="243.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.05%)</title><rect x="241.5" y="595.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="244.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (15 samples, 0.10%)</title><rect x="242.1" y="611.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="245.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (14 samples, 0.09%)</title><rect x="242.2" y="595.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="245.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (23 samples, 0.15%)</title><rect x="243.3" y="675.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="246.3" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (20 samples, 0.13%)</title><rect x="243.3" y="659.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="246.3" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (20 samples, 0.13%)</title><rect x="243.3" y="643.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.charAt (17 samples, 0.11%)</title><rect x="243.5" y="627.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="246.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (7 samples, 0.05%)</title><rect x="244.0" y="611.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="247.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (36 samples, 0.23%)</title><rect x="245.1" y="675.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="248.1" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (22 samples, 0.14%)</title><rect x="245.6" y="659.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="248.6" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (20 samples, 0.13%)</title><rect x="245.7" y="643.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="248.7" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="246.9" y="627.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="249.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.05%)</title><rect x="247.2" y="659.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.03%)</title><rect x="247.5" y="643.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="250.5" y="654.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.03%)</title><rect x="247.8" y="675.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.8" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (61 samples, 0.39%)</title><rect x="248.2" y="675.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.2" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (60 samples, 0.39%)</title><rect x="248.2" y="659.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="251.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (46 samples, 0.30%)</title><rect x="248.7" y="643.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (40 samples, 0.26%)</title><rect x="248.7" y="627.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="251.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (6 samples, 0.04%)</title><rect x="251.7" y="627.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="254.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (4 samples, 0.03%)</title><rect x="251.9" y="611.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.03%)</title><rect x="251.9" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="254.9" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (8 samples, 0.05%)</title><rect x="252.2" y="643.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="255.2" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (487 samples, 3.15%)</title><rect x="252.9" y="691.0" width="37.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="255.9" y="702.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (486 samples, 3.15%)</title><rect x="252.9" y="675.0" width="37.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.9" y="686.0">one..</text>
</g>
<g>
<title>[unknown] (95 samples, 0.62%)</title><rect x="254.1" y="659.0" width="7.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="257.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (95 samples, 0.62%)</title><rect x="254.1" y="643.0" width="7.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="257.1" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (79 samples, 0.51%)</title><rect x="254.1" y="627.0" width="6.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="257.1" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.03%)</title><rect x="254.5" y="611.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="257.5" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.03%)</title><rect x="254.9" y="611.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="257.9" y="622.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (12 samples, 0.08%)</title><rect x="255.6" y="611.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="258.6" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (45 samples, 0.29%)</title><rect x="256.6" y="611.0" width="3.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="259.6" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (16 samples, 0.10%)</title><rect x="256.9" y="595.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="259.9" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (11 samples, 0.07%)</title><rect x="258.2" y="595.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="261.2" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (13 samples, 0.08%)</title><rect x="259.0" y="595.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="262.0" y="606.0"></text>
</g>
<g>
<title>__libc_recv (7 samples, 0.05%)</title><rect x="260.2" y="627.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="263.2" y="638.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.03%)</title><rect x="260.7" y="627.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="263.7" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.03%)</title><rect x="261.1" y="627.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="264.1" y="638.0"></text>
</g>
<g>
<title>__libc_recv (373 samples, 2.42%)</title><rect x="261.4" y="659.0" width="28.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="264.4" y="670.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (288 samples, 1.86%)</title><rect x="267.9" y="643.0" width="22.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="270.9" y="654.0">e..</text>
</g>
<g>
<title>do_syscall_64 (288 samples, 1.86%)</title><rect x="267.9" y="627.0" width="22.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="270.9" y="638.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (250 samples, 1.62%)</title><rect x="270.8" y="611.0" width="19.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="273.8" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (246 samples, 1.59%)</title><rect x="271.1" y="595.0" width="18.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="274.1" y="606.0"></text>
</g>
<g>
<title>import_single_range (5 samples, 0.03%)</title><rect x="271.8" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="274.8" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (161 samples, 1.04%)</title><rect x="272.1" y="579.0" width="12.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="275.1" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (160 samples, 1.04%)</title><rect x="272.2" y="563.0" width="12.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="275.2" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (19 samples, 0.12%)</title><rect x="275.9" y="547.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="278.9" y="558.0"></text>
</g>
<g>
<title>skb_release_all (15 samples, 0.10%)</title><rect x="276.0" y="531.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="279.0" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (15 samples, 0.10%)</title><rect x="276.0" y="515.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="279.0" y="526.0"></text>
</g>
<g>
<title>sock_rfree (14 samples, 0.09%)</title><rect x="276.1" y="499.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="279.1" y="510.0"></text>
</g>
<g>
<title>lock_sock_nested (8 samples, 0.05%)</title><rect x="277.5" y="547.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="280.5" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.04%)</title><rect x="277.6" y="531.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="280.6" y="542.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.03%)</title><rect x="278.1" y="547.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="281.1" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (49 samples, 0.32%)</title><rect x="278.4" y="547.0" width="3.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="281.4" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (49 samples, 0.32%)</title><rect x="278.4" y="531.0" width="3.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="281.4" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (12 samples, 0.08%)</title><rect x="278.7" y="515.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="281.7" y="526.0"></text>
</g>
<g>
<title>copyout (12 samples, 0.08%)</title><rect x="278.7" y="499.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="281.7" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (11 samples, 0.07%)</title><rect x="278.8" y="483.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="281.8" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (33 samples, 0.21%)</title><rect x="279.6" y="515.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="282.6" y="526.0"></text>
</g>
<g>
<title>__check_object_size (29 samples, 0.19%)</title><rect x="279.9" y="499.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="282.9" y="510.0"></text>
</g>
<g>
<title>__check_heap_object (8 samples, 0.05%)</title><rect x="280.4" y="483.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="283.4" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (13 samples, 0.08%)</title><rect x="281.0" y="483.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="284.0" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (8 samples, 0.05%)</title><rect x="282.2" y="547.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="285.2" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (4 samples, 0.03%)</title><rect x="282.5" y="531.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="285.5" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (12 samples, 0.08%)</title><rect x="282.8" y="547.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="285.8" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (10 samples, 0.06%)</title><rect x="282.9" y="531.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="285.9" y="542.0"></text>
</g>
<g>
<title>ktime_get (6 samples, 0.04%)</title><rect x="283.2" y="515.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="286.2" y="526.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.03%)</title><rect x="283.4" y="499.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="286.4" y="510.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (10 samples, 0.06%)</title><rect x="283.7" y="547.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="286.7" y="558.0"></text>
</g>
<g>
<title>sock_recvmsg (45 samples, 0.29%)</title><rect x="284.4" y="579.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="287.4" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (44 samples, 0.28%)</title><rect x="284.5" y="563.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="287.5" y="574.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (5 samples, 0.03%)</title><rect x="284.6" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="287.6" y="558.0"></text>
</g>
<g>
<title>sock_has_perm (38 samples, 0.25%)</title><rect x="285.0" y="547.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="288.0" y="558.0"></text>
</g>
<g>
<title>avc_has_perm (18 samples, 0.12%)</title><rect x="286.5" y="531.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="289.5" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (26 samples, 0.17%)</title><rect x="287.9" y="579.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="290.9" y="590.0"></text>
</g>
<g>
<title>__fget_light (24 samples, 0.16%)</title><rect x="288.0" y="563.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="291.0" y="574.0"></text>
</g>
<g>
<title>__fget (16 samples, 0.10%)</title><rect x="288.6" y="547.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="291.6" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=13276] (3,672 samples, 23.78%)</title><rect x="290.3" y="755.0" width="280.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="293.3" y="766.0">[NIO Selector #1 tid=13276]</text>
</g>
<g>
<title>[unknown_Java] (8 samples, 0.05%)</title><rect x="290.6" y="739.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="293.6" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,660 samples, 23.70%)</title><rect x="291.2" y="739.0" width="279.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="294.2" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (520 samples, 3.37%)</title><rect x="291.7" y="723.0" width="39.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="294.7" y="734.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (10 samples, 0.06%)</title><rect x="292.9" y="707.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (5 samples, 0.03%)</title><rect x="293.3" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="296.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (494 samples, 3.20%)</title><rect x="293.7" y="707.0" width="37.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="296.7" y="718.0">one..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (395 samples, 2.56%)</title><rect x="296.1" y="691.0" width="30.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="299.1" y="702.0">.a..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (319 samples, 2.07%)</title><rect x="301.9" y="675.0" width="24.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="304.9" y="686.0">e..</text>
</g>
<g>
<title>do_syscall_64 (319 samples, 2.07%)</title><rect x="301.9" y="659.0" width="24.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="304.9" y="670.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (289 samples, 1.87%)</title><rect x="304.2" y="643.0" width="22.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="307.2" y="654.0">_..</text>
</g>
<g>
<title>do_epoll_wait (283 samples, 1.83%)</title><rect x="304.6" y="627.0" width="21.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="307.6" y="638.0">d..</text>
</g>
<g>
<title>__fget_light (14 samples, 0.09%)</title><rect x="305.3" y="611.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="308.3" y="622.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.07%)</title><rect x="305.5" y="595.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="308.5" y="606.0"></text>
</g>
<g>
<title>ep_poll (258 samples, 1.67%)</title><rect x="306.4" y="611.0" width="19.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="309.4" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (116 samples, 0.75%)</title><rect x="308.9" y="595.0" width="8.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="311.9" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (69 samples, 0.45%)</title><rect x="311.3" y="579.0" width="5.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="314.3" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (56 samples, 0.36%)</title><rect x="312.3" y="563.0" width="4.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="315.3" y="574.0"></text>
</g>
<g>
<title>sock_poll (52 samples, 0.34%)</title><rect x="312.6" y="547.0" width="4.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="315.6" y="558.0"></text>
</g>
<g>
<title>tcp_poll (25 samples, 0.16%)</title><rect x="314.7" y="531.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="317.7" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (5 samples, 0.03%)</title><rect x="316.2" y="515.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="319.2" y="526.0"></text>
</g>
<g>
<title>mutex_lock (9 samples, 0.06%)</title><rect x="316.6" y="579.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="319.6" y="590.0"></text>
</g>
<g>
<title>mutex_unlock (6 samples, 0.04%)</title><rect x="317.3" y="579.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="320.3" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (108 samples, 0.70%)</title><rect x="317.8" y="595.0" width="8.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="320.8" y="606.0"></text>
</g>
<g>
<title>schedule (96 samples, 0.62%)</title><rect x="318.8" y="579.0" width="7.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="321.8" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (93 samples, 0.60%)</title><rect x="319.0" y="563.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="322.0" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (88 samples, 0.57%)</title><rect x="319.4" y="547.0" width="6.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="322.4" y="558.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (10 samples, 0.06%)</title><rect x="326.2" y="691.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="329.2" y="702.0"></text>
</g>
<g>
<title>__GI___clock_gettime (29 samples, 0.19%)</title><rect x="327.2" y="691.0" width="2.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="330.2" y="702.0"></text>
</g>
<g>
<title>[vdso] (13 samples, 0.08%)</title><rect x="328.5" y="675.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="331.5" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (13 samples, 0.08%)</title><rect x="329.4" y="691.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="332.4" y="702.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (10 samples, 0.06%)</title><rect x="330.7" y="691.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="333.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,134 samples, 20.29%)</title><rect x="331.4" y="723.0" width="239.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="334.4" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,122 samples, 20.21%)</title><rect x="332.0" y="707.0" width="238.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="335.0" y="718.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,602 samples, 16.85%)</title><rect x="332.4" y="691.0" width="198.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="335.4" y="702.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,337 samples, 15.13%)</title><rect x="336.6" y="675.0" width="178.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.6" y="686.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,335 samples, 15.12%)</title><rect x="336.7" y="659.0" width="178.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.7" y="670.0">one/nio/http/HttpServer..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2,289 samples, 14.82%)</title><rect x="336.8" y="643.0" width="174.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="339.8" y="654.0">RequestHandler1_entity..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,990 samples, 12.89%)</title><rect x="336.9" y="627.0" width="152.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="339.9" y="638.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (39 samples, 0.25%)</title><rect x="337.3" y="611.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (37 samples, 0.24%)</title><rect x="337.5" y="595.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="340.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.04%)</title><rect x="339.1" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="342.1" y="590.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (6 samples, 0.04%)</title><rect x="339.1" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.1" y="574.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (6 samples, 0.04%)</title><rect x="339.1" y="547.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.1" y="558.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (4 samples, 0.03%)</title><rect x="339.2" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.2" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (10 samples, 0.06%)</title><rect x="339.5" y="579.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="342.5" y="590.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.05%)</title><rect x="339.7" y="563.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="342.7" y="574.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.05%)</title><rect x="339.8" y="547.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="342.8" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,928 samples, 12.48%)</title><rect x="340.3" y="611.0" width="147.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="343.3" y="622.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (66 samples, 0.43%)</title><rect x="340.3" y="595.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="343.3" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (51 samples, 0.33%)</title><rect x="341.4" y="579.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="344.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (16 samples, 0.10%)</title><rect x="341.9" y="563.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="344.9" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.05%)</title><rect x="342.5" y="547.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="345.5" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (29 samples, 0.19%)</title><rect x="343.1" y="563.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="346.1" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (29 samples, 0.19%)</title><rect x="343.1" y="547.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="346.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (10 samples, 0.06%)</title><rect x="344.3" y="531.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="347.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (6 samples, 0.04%)</title><rect x="344.3" y="515.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="347.3" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,862 samples, 12.06%)</title><rect x="345.3" y="595.0" width="142.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="348.3" y="606.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,862 samples, 12.06%)</title><rect x="345.3" y="579.0" width="142.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="348.3" y="590.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,859 samples, 12.04%)</title><rect x="345.4" y="563.0" width="142.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.4" y="574.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,859 samples, 12.04%)</title><rect x="345.4" y="547.0" width="142.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="348.4" y="558.0">one/nio/net/Native..</text>
</g>
<g>
<title>.annobin_send.c (1,807 samples, 11.70%)</title><rect x="346.6" y="531.0" width="138.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="349.6" y="542.0">.annobin_send.c</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (9 samples, 0.06%)</title><rect x="350.8" y="515.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="353.8" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,743 samples, 11.29%)</title><rect x="351.5" y="515.0" width="133.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="354.5" y="526.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (1,743 samples, 11.29%)</title><rect x="351.5" y="499.0" width="133.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="354.5" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,717 samples, 11.12%)</title><rect x="353.4" y="483.0" width="131.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="356.4" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,713 samples, 11.09%)</title><rect x="353.7" y="467.0" width="130.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="356.7" y="478.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (1,692 samples, 10.96%)</title><rect x="354.7" y="451.0" width="129.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="357.7" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (13 samples, 0.08%)</title><rect x="354.9" y="435.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="357.9" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (10 samples, 0.06%)</title><rect x="355.1" y="419.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="358.1" y="430.0"></text>
</g>
<g>
<title>avc_has_perm (4 samples, 0.03%)</title><rect x="355.6" y="403.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="358.6" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,676 samples, 10.85%)</title><rect x="355.9" y="435.0" width="128.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="358.9" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (6 samples, 0.04%)</title><rect x="356.0" y="419.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="359.0" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.03%)</title><rect x="356.0" y="403.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="359.0" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,668 samples, 10.80%)</title><rect x="356.5" y="419.0" width="127.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="359.5" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (13 samples, 0.08%)</title><rect x="357.7" y="403.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="360.7" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (8 samples, 0.05%)</title><rect x="358.1" y="387.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="361.1" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1,524 samples, 9.87%)</title><rect x="358.7" y="403.0" width="116.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="361.7" y="414.0">__tcp_push_pen..</text>
</g>
<g>
<title>tcp_write_xmit (1,523 samples, 9.86%)</title><rect x="358.8" y="387.0" width="116.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="361.8" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (1,472 samples, 9.53%)</title><rect x="359.8" y="371.0" width="112.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="362.8" y="382.0">__tcp_transmit..</text>
</g>
<g>
<title>__ip_queue_xmit (1,406 samples, 9.10%)</title><rect x="361.5" y="355.0" width="107.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="364.5" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (11 samples, 0.07%)</title><rect x="362.0" y="339.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="365.0" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (8 samples, 0.05%)</title><rect x="362.2" y="323.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="365.2" y="334.0"></text>
</g>
<g>
<title>ip_local_out (300 samples, 1.94%)</title><rect x="362.8" y="339.0" width="23.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="365.8" y="350.0">i..</text>
</g>
<g>
<title>__ip_local_out (300 samples, 1.94%)</title><rect x="362.8" y="323.0" width="23.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="365.8" y="334.0">_..</text>
</g>
<g>
<title>ip_send_check (6 samples, 0.04%)</title><rect x="363.1" y="307.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="366.1" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (291 samples, 1.88%)</title><rect x="363.5" y="307.0" width="22.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="366.5" y="318.0">n..</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (87 samples, 0.56%)</title><rect x="364.1" y="291.0" width="6.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="367.1" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (30 samples, 0.19%)</title><rect x="370.9" y="291.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="373.9" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (22 samples, 0.14%)</title><rect x="371.5" y="275.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="374.5" y="286.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (7 samples, 0.05%)</title><rect x="373.2" y="291.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="376.2" y="302.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (5 samples, 0.03%)</title><rect x="373.8" y="291.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="376.8" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (11 samples, 0.07%)</title><rect x="374.1" y="291.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="377.1" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (16 samples, 0.10%)</title><rect x="375.0" y="291.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="378.0" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (100 samples, 0.65%)</title><rect x="376.2" y="291.0" width="7.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="379.2" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (20 samples, 0.13%)</title><rect x="377.7" y="275.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="380.7" y="286.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (4 samples, 0.03%)</title><rect x="379.2" y="275.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="382.2" y="286.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (7 samples, 0.05%)</title><rect x="379.5" y="275.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="382.5" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (42 samples, 0.27%)</title><rect x="380.0" y="275.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="383.0" y="286.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (10 samples, 0.06%)</title><rect x="382.5" y="259.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="385.5" y="270.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (8 samples, 0.05%)</title><rect x="383.2" y="275.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="386.2" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (17 samples, 0.11%)</title><rect x="383.9" y="291.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="386.9" y="302.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (8 samples, 0.05%)</title><rect x="384.2" y="275.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="387.2" y="286.0"></text>
</g>
<g>
<title>selinux_ipv4_output (8 samples, 0.05%)</title><rect x="385.1" y="291.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="388.1" y="302.0"></text>
</g>
<g>
<title>netlbl_enabled (4 samples, 0.03%)</title><rect x="385.5" y="275.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="388.5" y="286.0"></text>
</g>
<g>
<title>ip_output (1,088 samples, 7.04%)</title><rect x="385.8" y="339.0" width="83.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="388.8" y="350.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (1,005 samples, 6.51%)</title><rect x="386.1" y="323.0" width="76.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="389.1" y="334.0">ip_finis..</text>
</g>
<g>
<title>__dev_queue_xmit (82 samples, 0.53%)</title><rect x="387.1" y="307.0" width="6.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="390.1" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (57 samples, 0.37%)</title><rect x="388.4" y="291.0" width="4.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="391.4" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (53 samples, 0.34%)</title><rect x="388.7" y="275.0" width="4.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="391.7" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (13 samples, 0.08%)</title><rect x="389.1" y="259.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="392.1" y="270.0"></text>
</g>
<g>
<title>netif_rx (20 samples, 0.13%)</title><rect x="390.1" y="259.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="393.1" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (20 samples, 0.13%)</title><rect x="390.1" y="243.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="393.1" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (12 samples, 0.08%)</title><rect x="390.3" y="227.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="393.3" y="238.0"></text>
</g>
<g>
<title>ktime_get_with_offset (5 samples, 0.03%)</title><rect x="391.3" y="227.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="394.3" y="238.0"></text>
</g>
<g>
<title>tcp_wfree (10 samples, 0.06%)</title><rect x="392.0" y="259.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="395.0" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (907 samples, 5.87%)</title><rect x="393.4" y="307.0" width="69.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="396.4" y="318.0">__local..</text>
</g>
<g>
<title>do_softirq.part.0 (907 samples, 5.87%)</title><rect x="393.4" y="291.0" width="69.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="396.4" y="302.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (898 samples, 5.81%)</title><rect x="394.1" y="275.0" width="68.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="397.1" y="286.0">do_soft..</text>
</g>
<g>
<title>__softirqentry_text_start (898 samples, 5.81%)</title><rect x="394.1" y="259.0" width="68.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="397.1" y="270.0">__softi..</text>
</g>
<g>
<title>net_rx_action (872 samples, 5.65%)</title><rect x="396.1" y="243.0" width="66.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="399.1" y="254.0">net_rx_..</text>
</g>
<g>
<title>__kfree_skb_flush (7 samples, 0.05%)</title><rect x="397.0" y="227.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="400.0" y="238.0"></text>
</g>
<g>
<title>process_backlog (852 samples, 5.52%)</title><rect x="397.6" y="227.0" width="65.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="400.6" y="238.0">process..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (833 samples, 5.39%)</title><rect x="399.1" y="211.0" width="63.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="402.1" y="222.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (20 samples, 0.13%)</title><rect x="399.4" y="195.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="402.4" y="206.0"></text>
</g>
<g>
<title>ip_rcv (809 samples, 5.24%)</title><rect x="400.9" y="195.0" width="61.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="403.9" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (657 samples, 4.25%)</title><rect x="401.7" y="179.0" width="50.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="404.7" y="190.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (546 samples, 3.54%)</title><rect x="402.6" y="163.0" width="41.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="405.6" y="174.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (545 samples, 3.53%)</title><rect x="402.7" y="147.0" width="41.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="405.7" y="158.0">ip_..</text>
</g>
<g>
<title>tcp_v4_rcv (542 samples, 3.51%)</title><rect x="403.0" y="131.0" width="41.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="406.0" y="142.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (30 samples, 0.19%)</title><rect x="404.1" y="115.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="407.1" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (4 samples, 0.03%)</title><rect x="406.1" y="99.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="409.1" y="110.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (10 samples, 0.06%)</title><rect x="406.5" y="115.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="409.5" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (10 samples, 0.06%)</title><rect x="406.5" y="99.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="409.5" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (7 samples, 0.05%)</title><rect x="406.7" y="83.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="409.7" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (482 samples, 3.12%)</title><rect x="407.3" y="115.0" width="36.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="410.3" y="126.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (479 samples, 3.10%)</title><rect x="407.5" y="99.0" width="36.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="410.5" y="110.0">tcp..</text>
</g>
<g>
<title>sk_reset_timer (11 samples, 0.07%)</title><rect x="407.9" y="83.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="410.9" y="94.0"></text>
</g>
<g>
<title>mod_timer (11 samples, 0.07%)</title><rect x="407.9" y="67.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="410.9" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.06%)</title><rect x="408.1" y="51.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="411.1" y="62.0"></text>
</g>
<g>
<title>tcp_ack (132 samples, 0.85%)</title><rect x="408.8" y="83.0" width="10.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="411.8" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (36 samples, 0.23%)</title><rect x="411.7" y="67.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="414.7" y="78.0"></text>
</g>
<g>
<title>__slab_free (13 samples, 0.08%)</title><rect x="411.7" y="51.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="414.7" y="62.0"></text>
</g>
<g>
<title>kfree (11 samples, 0.07%)</title><rect x="412.7" y="51.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="415.7" y="62.0"></text>
</g>
<g>
<title>skb_release_data (11 samples, 0.07%)</title><rect x="413.6" y="51.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="416.6" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (6 samples, 0.04%)</title><rect x="414.6" y="67.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="417.6" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (5 samples, 0.03%)</title><rect x="415.0" y="67.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="418.0" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.04%)</title><rect x="415.4" y="67.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="418.4" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (5 samples, 0.03%)</title><rect x="416.4" y="67.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="419.4" y="78.0"></text>
</g>
<g>
<title>tcp_newly_delivered (5 samples, 0.03%)</title><rect x="416.8" y="67.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="419.8" y="78.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (6 samples, 0.04%)</title><rect x="417.5" y="67.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="420.5" y="78.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.03%)</title><rect x="418.0" y="67.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="421.0" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (4 samples, 0.03%)</title><rect x="418.5" y="67.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="421.5" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (8 samples, 0.05%)</title><rect x="418.8" y="83.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="421.8" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (310 samples, 2.01%)</title><rect x="419.5" y="83.0" width="23.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="422.5" y="94.0">t..</text>
</g>
<g>
<title>sock_def_readable (293 samples, 1.90%)</title><rect x="420.2" y="67.0" width="22.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="423.2" y="78.0">s..</text>
</g>
<g>
<title>__wake_up_common_lock (278 samples, 1.80%)</title><rect x="421.4" y="51.0" width="21.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="424.4" y="62.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (277 samples, 1.79%)</title><rect x="421.4" y="35.0" width="21.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="424.4" y="46.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.03%)</title><rect x="442.6" y="67.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="445.6" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (8 samples, 0.05%)</title><rect x="443.1" y="83.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="446.1" y="94.0"></text>
</g>
<g>
<title>ktime_get (7 samples, 0.05%)</title><rect x="443.2" y="67.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="446.2" y="78.0"></text>
</g>
<g>
<title>read_tsc (7 samples, 0.05%)</title><rect x="443.2" y="51.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="446.2" y="62.0"></text>
</g>
<g>
<title>tcp_urg (4 samples, 0.03%)</title><rect x="443.8" y="83.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="446.8" y="94.0"></text>
</g>
<g>
<title>nf_hook_slow (98 samples, 0.63%)</title><rect x="444.4" y="163.0" width="7.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="447.4" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (77 samples, 0.50%)</title><rect x="445.2" y="147.0" width="5.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="448.2" y="158.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (8 samples, 0.05%)</title><rect x="449.9" y="131.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="452.9" y="142.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (7 samples, 0.05%)</title><rect x="450.6" y="131.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="453.6" y="142.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (8 samples, 0.05%)</title><rect x="451.9" y="179.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="454.9" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.03%)</title><rect x="452.5" y="179.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="455.5" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (130 samples, 0.84%)</title><rect x="452.8" y="179.0" width="9.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="455.8" y="190.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (12 samples, 0.08%)</title><rect x="453.3" y="163.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="456.3" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (88 samples, 0.57%)</title><rect x="454.2" y="163.0" width="6.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="457.2" y="174.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (6 samples, 0.04%)</title><rect x="461.8" y="163.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="464.8" y="174.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (6 samples, 0.04%)</title><rect x="462.2" y="163.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="465.2" y="174.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (4 samples, 0.03%)</title><rect x="462.4" y="147.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="465.4" y="158.0"></text>
</g>
<g>
<title>ip_finish_output (9 samples, 0.06%)</title><rect x="462.9" y="323.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="465.9" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (70 samples, 0.45%)</title><rect x="463.5" y="323.0" width="5.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="466.5" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (29 samples, 0.19%)</title><rect x="463.7" y="307.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="466.7" y="318.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.03%)</title><rect x="465.9" y="307.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="468.9" y="318.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (5 samples, 0.03%)</title><rect x="466.2" y="307.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="469.2" y="318.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (13 samples, 0.08%)</title><rect x="466.6" y="307.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="469.6" y="318.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (12 samples, 0.08%)</title><rect x="466.7" y="291.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="469.7" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (4 samples, 0.03%)</title><rect x="467.6" y="307.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="470.6" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute (10 samples, 0.06%)</title><rect x="467.9" y="307.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="470.9" y="318.0"></text>
</g>
<g>
<title>selinux_peerlbl_enabled (4 samples, 0.03%)</title><rect x="468.4" y="291.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="471.4" y="302.0"></text>
</g>
<g>
<title>__skb_clone (10 samples, 0.06%)</title><rect x="468.9" y="355.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="471.9" y="366.0"></text>
</g>
<g>
<title>__tcp_select_window (4 samples, 0.03%)</title><rect x="469.7" y="355.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="472.7" y="366.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (5 samples, 0.03%)</title><rect x="470.0" y="355.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="473.0" y="366.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.03%)</title><rect x="470.7" y="355.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="473.7" y="366.0"></text>
</g>
<g>
<title>tcp_established_options (4 samples, 0.03%)</title><rect x="471.1" y="355.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="474.1" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (4 samples, 0.03%)</title><rect x="471.5" y="355.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="474.5" y="366.0"></text>
</g>
<g>
<title>tcp_v4_send_check (6 samples, 0.04%)</title><rect x="471.8" y="355.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="474.8" y="366.0"></text>
</g>
<g>
<title>ktime_get (8 samples, 0.05%)</title><rect x="472.3" y="371.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="475.3" y="382.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.03%)</title><rect x="472.5" y="355.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="475.5" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (19 samples, 0.12%)</title><rect x="472.9" y="371.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="475.9" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.06%)</title><rect x="473.1" y="355.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="476.1" y="366.0"></text>
</g>
<g>
<title>mod_timer (9 samples, 0.06%)</title><rect x="473.1" y="339.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="476.1" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.03%)</title><rect x="473.4" y="323.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="476.4" y="334.0"></text>
</g>
<g>
<title>tcp_rearm_rto (6 samples, 0.04%)</title><rect x="473.9" y="355.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="476.9" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (9 samples, 0.06%)</title><rect x="474.3" y="371.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="477.3" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (9 samples, 0.06%)</title><rect x="475.2" y="403.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="478.2" y="414.0"></text>
</g>
<g>
<title>copyin (7 samples, 0.05%)</title><rect x="475.3" y="387.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="478.3" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.03%)</title><rect x="475.5" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="478.5" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (60 samples, 0.39%)</title><rect x="475.8" y="403.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="478.8" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (58 samples, 0.38%)</title><rect x="476.0" y="387.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="479.0" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (24 samples, 0.16%)</title><rect x="476.5" y="371.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="479.5" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (23 samples, 0.15%)</title><rect x="476.6" y="355.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="479.6" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (23 samples, 0.15%)</title><rect x="478.4" y="371.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="481.4" y="382.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.03%)</title><rect x="480.1" y="371.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="483.1" y="382.0"></text>
</g>
<g>
<title>tcp_push (4 samples, 0.03%)</title><rect x="480.7" y="403.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="483.7" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (29 samples, 0.19%)</title><rect x="481.2" y="403.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="484.2" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (25 samples, 0.16%)</title><rect x="481.5" y="387.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="484.5" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (10 samples, 0.06%)</title><rect x="482.5" y="371.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="485.5" y="382.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (7 samples, 0.05%)</title><rect x="483.4" y="403.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="486.4" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.06%)</title><rect x="483.9" y="451.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="486.9" y="462.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.06%)</title><rect x="483.9" y="435.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="486.9" y="446.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.04%)</title><rect x="484.2" y="419.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="487.2" y="430.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (8 samples, 0.05%)</title><rect x="484.7" y="531.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="487.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.14%)</title><rect x="485.3" y="531.0" width="1.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="488.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.14%)</title><rect x="485.3" y="515.0" width="1.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="488.3" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (18 samples, 0.12%)</title><rect x="485.5" y="499.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="488.5" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (9 samples, 0.06%)</title><rect x="486.2" y="483.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="489.2" y="494.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.03%)</title><rect x="486.2" y="467.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="489.2" y="478.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.04%)</title><rect x="487.0" y="531.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="490.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (13 samples, 0.08%)</title><rect x="487.6" y="611.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.05%)</title><rect x="487.9" y="595.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="490.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.05%)</title><rect x="488.0" y="579.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="491.0" y="590.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (4 samples, 0.03%)</title><rect x="488.6" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="491.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (21 samples, 0.14%)</title><rect x="488.9" y="627.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="491.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.03%)</title><rect x="489.7" y="611.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="492.7" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.03%)</title><rect x="490.1" y="611.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="493.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.03%)</title><rect x="490.2" y="595.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="493.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.03%)</title><rect x="490.2" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="493.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (277 samples, 1.79%)</title><rect x="490.5" y="627.0" width="21.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="493.5" y="638.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.07%)</title><rect x="491.4" y="611.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.4" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (11 samples, 0.07%)</title><rect x="491.4" y="595.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="494.4" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (10 samples, 0.06%)</title><rect x="491.4" y="579.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="494.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="491.6" y="563.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.6" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="491.7" y="547.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="494.7" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="491.8" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="494.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (9 samples, 0.06%)</title><rect x="492.2" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (246 samples, 1.59%)</title><rect x="492.9" y="611.0" width="18.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="495.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (236 samples, 1.53%)</title><rect x="493.6" y="595.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="496.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (212 samples, 1.37%)</title><rect x="493.8" y="579.0" width="16.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="496.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (211 samples, 1.37%)</title><rect x="493.8" y="563.0" width="16.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="496.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (210 samples, 1.36%)</title><rect x="493.9" y="547.0" width="16.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="496.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (11 samples, 0.07%)</title><rect x="495.5" y="531.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="498.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (10 samples, 0.06%)</title><rect x="495.6" y="515.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="498.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (45 samples, 0.29%)</title><rect x="496.5" y="531.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="499.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (19 samples, 0.12%)</title><rect x="499.9" y="531.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="502.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (4 samples, 0.03%)</title><rect x="500.4" y="515.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="503.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 0.05%)</title><rect x="500.7" y="515.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="503.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.04%)</title><rect x="500.9" y="499.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="503.9" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="501.0" y="483.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="504.0" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.03%)</title><rect x="501.1" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="504.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (111 samples, 0.72%)</title><rect x="501.4" y="531.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="504.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (103 samples, 0.67%)</title><rect x="502.0" y="515.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="505.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (73 samples, 0.47%)</title><rect x="504.3" y="499.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="507.3" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.03%)</title><rect x="504.8" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="507.8" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (9 samples, 0.06%)</title><rect x="505.1" y="483.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.1" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (28 samples, 0.18%)</title><rect x="505.8" y="483.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="508.8" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (10 samples, 0.06%)</title><rect x="507.2" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="510.2" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (25 samples, 0.16%)</title><rect x="507.9" y="483.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.9" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (21 samples, 0.14%)</title><rect x="508.0" y="467.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="511.0" y="478.0"></text>
</g>
<g>
<title>vectorizedMismatch (19 samples, 0.12%)</title><rect x="508.2" y="451.0" width="1.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="511.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (22 samples, 0.14%)</title><rect x="510.0" y="579.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="513.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.&lt;init&gt; (11 samples, 0.07%)</title><rect x="510.4" y="563.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="513.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.sizeInBytes (4 samples, 0.03%)</title><rect x="511.2" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="514.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (21 samples, 0.14%)</title><rect x="511.8" y="643.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="514.8" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (20 samples, 0.13%)</title><rect x="511.9" y="627.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="514.9" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (17 samples, 0.11%)</title><rect x="512.1" y="611.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.equals (9 samples, 0.06%)</title><rect x="512.7" y="595.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="515.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (22 samples, 0.14%)</title><rect x="513.4" y="643.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.14%)</title><rect x="513.5" y="627.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="516.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (9 samples, 0.06%)</title><rect x="513.5" y="611.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="516.5" y="622.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.04%)</title><rect x="513.7" y="595.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="516.7" y="606.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.03%)</title><rect x="513.9" y="579.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="516.9" y="590.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.03%)</title><rect x="513.9" y="563.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="516.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.08%)</title><rect x="514.2" y="611.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (87 samples, 0.56%)</title><rect x="515.1" y="675.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (30 samples, 0.19%)</title><rect x="515.3" y="659.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="518.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (20 samples, 0.13%)</title><rect x="516.0" y="643.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (18 samples, 0.12%)</title><rect x="516.2" y="627.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.2" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (17 samples, 0.11%)</title><rect x="516.3" y="611.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="519.3" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (55 samples, 0.36%)</title><rect x="517.6" y="659.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="520.6" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (55 samples, 0.36%)</title><rect x="517.6" y="643.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.6" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (54 samples, 0.35%)</title><rect x="517.6" y="627.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (35 samples, 0.23%)</title><rect x="518.3" y="611.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="521.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (15 samples, 0.10%)</title><rect x="519.9" y="595.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="522.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (10 samples, 0.06%)</title><rect x="521.0" y="611.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="524.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (8 samples, 0.05%)</title><rect x="521.1" y="595.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="524.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (10 samples, 0.06%)</title><rect x="521.8" y="675.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="524.8" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (10 samples, 0.06%)</title><rect x="521.8" y="659.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="524.8" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (9 samples, 0.06%)</title><rect x="521.8" y="643.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.charAt (9 samples, 0.06%)</title><rect x="521.8" y="627.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (42 samples, 0.27%)</title><rect x="522.7" y="675.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.03%)</title><rect x="522.9" y="659.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="525.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (29 samples, 0.19%)</title><rect x="523.3" y="659.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="526.3" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (26 samples, 0.17%)</title><rect x="523.5" y="643.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="526.5" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (5 samples, 0.03%)</title><rect x="524.7" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="527.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (5 samples, 0.03%)</title><rect x="524.7" y="611.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.7" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (5 samples, 0.03%)</title><rect x="524.7" y="595.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="527.7" y="606.0"></text>
</g>
<g>
<title>jbyte_arraycopy (4 samples, 0.03%)</title><rect x="525.0" y="627.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="528.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.03%)</title><rect x="525.5" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="528.5" y="670.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.04%)</title><rect x="525.9" y="675.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.9" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (64 samples, 0.41%)</title><rect x="526.3" y="675.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.3" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (64 samples, 0.41%)</title><rect x="526.3" y="659.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="529.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (51 samples, 0.33%)</title><rect x="527.0" y="643.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="530.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (41 samples, 0.27%)</title><rect x="527.0" y="627.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.06%)</title><rect x="529.5" y="611.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="532.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (10 samples, 0.06%)</title><rect x="530.2" y="627.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="533.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (10 samples, 0.06%)</title><rect x="530.2" y="611.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.06%)</title><rect x="530.2" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="533.2" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.03%)</title><rect x="530.9" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="533.9" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (514 samples, 3.33%)</title><rect x="531.2" y="691.0" width="39.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.2" y="702.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (514 samples, 3.33%)</title><rect x="531.2" y="675.0" width="39.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.2" y="686.0">one..</text>
</g>
<g>
<title>[unknown] (103 samples, 0.67%)</title><rect x="533.1" y="659.0" width="7.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="536.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (103 samples, 0.67%)</title><rect x="533.1" y="643.0" width="7.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="536.1" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (88 samples, 0.57%)</title><rect x="533.1" y="627.0" width="6.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="536.1" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (10 samples, 0.06%)</title><rect x="533.5" y="611.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="536.5" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.03%)</title><rect x="534.2" y="611.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="537.2" y="622.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (17 samples, 0.11%)</title><rect x="534.9" y="611.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="537.9" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (46 samples, 0.30%)</title><rect x="536.4" y="611.0" width="3.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="539.4" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (15 samples, 0.10%)</title><rect x="537.0" y="595.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="540.0" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.03%)</title><rect x="538.2" y="595.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="541.2" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (18 samples, 0.12%)</title><rect x="538.5" y="595.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="541.5" y="606.0"></text>
</g>
<g>
<title>__libc_recv (6 samples, 0.04%)</title><rect x="539.9" y="627.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="542.9" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.05%)</title><rect x="540.5" y="627.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="543.5" y="638.0"></text>
</g>
<g>
<title>__libc_recv (383 samples, 2.48%)</title><rect x="541.0" y="659.0" width="29.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="544.0" y="670.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (321 samples, 2.08%)</title><rect x="545.8" y="643.0" width="24.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="548.8" y="654.0">e..</text>
</g>
<g>
<title>do_syscall_64 (321 samples, 2.08%)</title><rect x="545.8" y="627.0" width="24.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="548.8" y="638.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (279 samples, 1.81%)</title><rect x="549.0" y="611.0" width="21.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="552.0" y="622.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (267 samples, 1.73%)</title><rect x="549.9" y="595.0" width="20.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="552.9" y="606.0"></text>
</g>
<g>
<title>import_single_range (6 samples, 0.04%)</title><rect x="550.6" y="579.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="553.6" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (184 samples, 1.19%)</title><rect x="551.0" y="579.0" width="14.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="554.0" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (183 samples, 1.18%)</title><rect x="551.1" y="563.0" width="14.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="554.1" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (18 samples, 0.12%)</title><rect x="555.5" y="547.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="558.5" y="558.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.06%)</title><rect x="555.5" y="531.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="558.5" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (10 samples, 0.06%)</title><rect x="555.5" y="515.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="558.5" y="526.0"></text>
</g>
<g>
<title>sock_rfree (8 samples, 0.05%)</title><rect x="555.6" y="499.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="558.6" y="510.0"></text>
</g>
<g>
<title>skb_release_data (8 samples, 0.05%)</title><rect x="556.2" y="531.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="559.2" y="542.0"></text>
</g>
<g>
<title>lock_sock_nested (8 samples, 0.05%)</title><rect x="557.3" y="547.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="560.3" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.04%)</title><rect x="557.4" y="531.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="560.4" y="542.0"></text>
</g>
<g>
<title>ns_to_timespec64 (4 samples, 0.03%)</title><rect x="557.9" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="560.9" y="558.0"></text>
</g>
<g>
<title>release_sock (7 samples, 0.05%)</title><rect x="558.2" y="547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="561.2" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (55 samples, 0.36%)</title><rect x="558.7" y="547.0" width="4.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="561.7" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (54 samples, 0.35%)</title><rect x="558.8" y="531.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="561.8" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (17 samples, 0.11%)</title><rect x="559.0" y="515.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="562.0" y="526.0"></text>
</g>
<g>
<title>copyout (15 samples, 0.10%)</title><rect x="559.2" y="499.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="562.2" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (15 samples, 0.10%)</title><rect x="559.2" y="483.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="562.2" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (34 samples, 0.22%)</title><rect x="560.3" y="515.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="563.3" y="526.0"></text>
</g>
<g>
<title>__check_object_size (31 samples, 0.20%)</title><rect x="560.6" y="499.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="563.6" y="510.0"></text>
</g>
<g>
<title>__check_heap_object (4 samples, 0.03%)</title><rect x="561.2" y="483.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="564.2" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (14 samples, 0.09%)</title><rect x="561.5" y="483.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="564.5" y="494.0"></text>
</g>
<g>
<title>check_stack_object (5 samples, 0.03%)</title><rect x="562.6" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="565.6" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (12 samples, 0.08%)</title><rect x="562.9" y="547.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="565.9" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (9 samples, 0.06%)</title><rect x="563.9" y="547.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="566.9" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (7 samples, 0.05%)</title><rect x="564.0" y="531.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="567.0" y="542.0"></text>
</g>
<g>
<title>ktime_get (6 samples, 0.04%)</title><rect x="564.1" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="567.1" y="526.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.03%)</title><rect x="564.2" y="499.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="567.2" y="510.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (7 samples, 0.05%)</title><rect x="564.5" y="547.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="567.5" y="558.0"></text>
</g>
<g>
<title>sock_recvmsg (44 samples, 0.28%)</title><rect x="565.1" y="579.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="568.1" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (44 samples, 0.28%)</title><rect x="565.1" y="563.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="568.1" y="574.0"></text>
</g>
<g>
<title>sock_has_perm (39 samples, 0.25%)</title><rect x="565.5" y="547.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="568.5" y="558.0"></text>
</g>
<g>
<title>avc_has_perm (22 samples, 0.14%)</title><rect x="566.8" y="531.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="569.8" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (24 samples, 0.16%)</title><rect x="568.4" y="579.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="571.4" y="590.0"></text>
</g>
<g>
<title>__fget_light (20 samples, 0.13%)</title><rect x="568.8" y="563.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="571.8" y="574.0"></text>
</g>
<g>
<title>__fget (14 samples, 0.09%)</title><rect x="569.2" y="547.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="572.2" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.03%)</title><rect x="570.5" y="707.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="573.5" y="718.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.03%)</title><rect x="570.6" y="691.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="573.6" y="702.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.03%)</title><rect x="570.6" y="675.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="573.6" y="686.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=13277] (3,725 samples, 24.12%)</title><rect x="570.9" y="755.0" width="284.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="573.9" y="766.0">[NIO Selector #2 tid=13277]</text>
</g>
<g>
<title>[unknown_Java] (10 samples, 0.06%)</title><rect x="571.0" y="739.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="574.0" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.03%)</title><rect x="571.5" y="723.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="574.5" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,713 samples, 24.04%)</title><rect x="571.8" y="739.0" width="283.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="574.8" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (14 samples, 0.09%)</title><rect x="572.6" y="723.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="575.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (13 samples, 0.08%)</title><rect x="572.6" y="707.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.6" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (520 samples, 3.37%)</title><rect x="573.6" y="723.0" width="39.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="576.6" y="734.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (512 samples, 3.32%)</title><rect x="574.3" y="707.0" width="39.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="577.3" y="718.0">one..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (417 samples, 2.70%)</title><rect x="575.9" y="691.0" width="31.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="578.9" y="702.0">.a..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (325 samples, 2.10%)</title><rect x="582.9" y="675.0" width="24.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="585.9" y="686.0">e..</text>
</g>
<g>
<title>do_syscall_64 (325 samples, 2.10%)</title><rect x="582.9" y="659.0" width="24.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="585.9" y="670.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (305 samples, 1.97%)</title><rect x="584.3" y="643.0" width="23.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="587.3" y="654.0">_..</text>
</g>
<g>
<title>do_epoll_wait (300 samples, 1.94%)</title><rect x="584.7" y="627.0" width="22.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="587.7" y="638.0">d..</text>
</g>
<g>
<title>__fget_light (15 samples, 0.10%)</title><rect x="585.2" y="611.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="588.2" y="622.0"></text>
</g>
<g>
<title>__fget (14 samples, 0.09%)</title><rect x="585.3" y="595.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="588.3" y="606.0"></text>
</g>
<g>
<title>ep_poll (272 samples, 1.76%)</title><rect x="586.3" y="611.0" width="20.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="589.3" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (121 samples, 0.78%)</title><rect x="588.8" y="595.0" width="9.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="591.8" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (72 samples, 0.47%)</title><rect x="591.4" y="579.0" width="5.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="594.4" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (54 samples, 0.35%)</title><rect x="592.8" y="563.0" width="4.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="595.8" y="574.0"></text>
</g>
<g>
<title>sock_poll (47 samples, 0.30%)</title><rect x="593.4" y="547.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="596.4" y="558.0"></text>
</g>
<g>
<title>tcp_poll (27 samples, 0.17%)</title><rect x="594.9" y="531.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="597.9" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (7 samples, 0.05%)</title><rect x="596.4" y="515.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="599.4" y="526.0"></text>
</g>
<g>
<title>mutex_lock (9 samples, 0.06%)</title><rect x="596.9" y="579.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="599.9" y="590.0"></text>
</g>
<g>
<title>mutex_unlock (5 samples, 0.03%)</title><rect x="597.6" y="579.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="600.6" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (119 samples, 0.77%)</title><rect x="598.0" y="595.0" width="9.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="601.0" y="606.0"></text>
</g>
<g>
<title>schedule (100 samples, 0.65%)</title><rect x="599.5" y="579.0" width="7.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="602.5" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (95 samples, 0.62%)</title><rect x="599.8" y="563.0" width="7.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="602.8" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (90 samples, 0.58%)</title><rect x="600.2" y="547.0" width="6.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="603.2" y="558.0"></text>
</g>
<g>
<title>fput_many (6 samples, 0.04%)</title><rect x="607.2" y="611.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="610.2" y="622.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (8 samples, 0.05%)</title><rect x="607.7" y="691.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="610.7" y="702.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.03%)</title><rect x="608.3" y="691.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="611.3" y="702.0"></text>
</g>
<g>
<title>__GI___clock_gettime (31 samples, 0.20%)</title><rect x="608.6" y="691.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="611.6" y="702.0"></text>
</g>
<g>
<title>[vdso] (16 samples, 0.10%)</title><rect x="609.8" y="675.0" width="1.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="612.8" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (9 samples, 0.06%)</title><rect x="611.0" y="691.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="614.0" y="702.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (4 samples, 0.03%)</title><rect x="611.7" y="691.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="614.7" y="702.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (15 samples, 0.10%)</title><rect x="612.0" y="691.0" width="1.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="615.0" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,169 samples, 20.52%)</title><rect x="613.4" y="723.0" width="242.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="616.4" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,155 samples, 20.43%)</title><rect x="613.9" y="707.0" width="241.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="616.9" y="718.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,651 samples, 17.17%)</title><rect x="614.3" y="691.0" width="202.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.3" y="702.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,422 samples, 15.68%)</title><rect x="617.8" y="675.0" width="185.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="620.8" y="686.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,419 samples, 15.66%)</title><rect x="618.0" y="659.0" width="184.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="621.0" y="670.0">one/nio/http/HttpServer...</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2,378 samples, 15.40%)</title><rect x="618.0" y="643.0" width="181.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="621.0" y="654.0">RequestHandler1_entity...</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,046 samples, 13.25%)</title><rect x="618.1" y="627.0" width="156.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="621.1" y="638.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (34 samples, 0.22%)</title><rect x="618.6" y="611.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="621.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (30 samples, 0.19%)</title><rect x="618.9" y="595.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.03%)</title><rect x="620.0" y="579.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="623.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.05%)</title><rect x="620.4" y="579.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="623.4" y="590.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (6 samples, 0.04%)</title><rect x="620.5" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="623.5" y="574.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (6 samples, 0.04%)</title><rect x="620.5" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.5" y="558.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (6 samples, 0.04%)</title><rect x="620.5" y="531.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,001 samples, 12.96%)</title><rect x="621.2" y="611.0" width="152.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.2" y="622.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (53 samples, 0.34%)</title><rect x="621.2" y="595.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.2" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (35 samples, 0.23%)</title><rect x="622.6" y="579.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="625.6" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (15 samples, 0.10%)</title><rect x="622.9" y="563.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="625.9" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.03%)</title><rect x="623.7" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="626.7" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (16 samples, 0.10%)</title><rect x="624.1" y="563.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="627.1" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (16 samples, 0.10%)</title><rect x="624.1" y="547.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="627.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.03%)</title><rect x="624.9" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.9" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,948 samples, 12.61%)</title><rect x="625.3" y="595.0" width="148.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="628.3" y="606.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,948 samples, 12.61%)</title><rect x="625.3" y="579.0" width="148.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.3" y="590.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,948 samples, 12.61%)</title><rect x="625.3" y="563.0" width="148.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.3" y="574.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,948 samples, 12.61%)</title><rect x="625.3" y="547.0" width="148.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="628.3" y="558.0">one/nio/net/NativeS..</text>
</g>
<g>
<title>.annobin_send.c (1,901 samples, 12.31%)</title><rect x="625.9" y="531.0" width="145.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="628.9" y="542.0">.annobin_send.c</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (8 samples, 0.05%)</title><rect x="631.2" y="515.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="634.2" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,821 samples, 11.79%)</title><rect x="632.0" y="515.0" width="139.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="635.0" y="526.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (1,821 samples, 11.79%)</title><rect x="632.0" y="499.0" width="139.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="635.0" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,793 samples, 11.61%)</title><rect x="633.9" y="483.0" width="137.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="636.9" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,789 samples, 11.58%)</title><rect x="634.2" y="467.0" width="136.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="637.2" y="478.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (1,770 samples, 11.46%)</title><rect x="635.2" y="451.0" width="135.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="638.2" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (5 samples, 0.03%)</title><rect x="635.5" y="435.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="638.5" y="446.0"></text>
</g>
<g>
<title>security_socket_sendmsg (12 samples, 0.08%)</title><rect x="635.8" y="435.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="638.8" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (8 samples, 0.05%)</title><rect x="636.1" y="419.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="639.1" y="430.0"></text>
</g>
<g>
<title>avc_has_perm (5 samples, 0.03%)</title><rect x="636.4" y="403.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="639.4" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,750 samples, 11.33%)</title><rect x="636.8" y="435.0" width="133.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="639.8" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.04%)</title><rect x="637.3" y="419.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="640.3" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.03%)</title><rect x="637.4" y="403.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="640.4" y="414.0"></text>
</g>
<g>
<title>release_sock (8 samples, 0.05%)</title><rect x="637.7" y="419.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="640.7" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,729 samples, 11.20%)</title><rect x="638.4" y="419.0" width="132.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="641.4" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (7 samples, 0.05%)</title><rect x="639.3" y="403.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="642.3" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.03%)</title><rect x="639.5" y="387.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="642.5" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1,606 samples, 10.40%)</title><rect x="639.9" y="403.0" width="122.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="642.9" y="414.0">__tcp_push_pend..</text>
</g>
<g>
<title>tcp_write_xmit (1,604 samples, 10.39%)</title><rect x="640.0" y="387.0" width="122.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="643.0" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (1,552 samples, 10.05%)</title><rect x="641.4" y="371.0" width="118.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="644.4" y="382.0">__tcp_transmit..</text>
</g>
<g>
<title>__ip_queue_xmit (1,494 samples, 9.67%)</title><rect x="643.2" y="355.0" width="114.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="646.2" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (13 samples, 0.08%)</title><rect x="643.9" y="339.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="646.9" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (8 samples, 0.05%)</title><rect x="644.2" y="323.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="647.2" y="334.0"></text>
</g>
<g>
<title>ip_local_out (298 samples, 1.93%)</title><rect x="644.8" y="339.0" width="22.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="647.8" y="350.0">i..</text>
</g>
<g>
<title>__ip_local_out (298 samples, 1.93%)</title><rect x="644.8" y="323.0" width="22.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="647.8" y="334.0">_..</text>
</g>
<g>
<title>ip_send_check (7 samples, 0.05%)</title><rect x="645.1" y="307.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="648.1" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (288 samples, 1.86%)</title><rect x="645.6" y="307.0" width="22.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="648.6" y="318.0">n..</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (92 samples, 0.60%)</title><rect x="646.4" y="291.0" width="7.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="649.4" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (34 samples, 0.22%)</title><rect x="653.6" y="291.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="656.6" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (24 samples, 0.16%)</title><rect x="654.4" y="275.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="657.4" y="286.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (8 samples, 0.05%)</title><rect x="656.2" y="291.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="659.2" y="302.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (7 samples, 0.05%)</title><rect x="656.8" y="291.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="659.8" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (10 samples, 0.06%)</title><rect x="657.4" y="291.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="660.4" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (9 samples, 0.06%)</title><rect x="658.1" y="291.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="661.1" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (95 samples, 0.62%)</title><rect x="658.8" y="291.0" width="7.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="661.8" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (17 samples, 0.11%)</title><rect x="660.5" y="275.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="663.5" y="286.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (6 samples, 0.04%)</title><rect x="662.0" y="275.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="665.0" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (35 samples, 0.23%)</title><rect x="662.5" y="275.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="665.5" y="286.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (4 samples, 0.03%)</title><rect x="664.4" y="259.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="667.4" y="270.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (6 samples, 0.04%)</title><rect x="664.7" y="259.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="667.7" y="270.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (12 samples, 0.08%)</title><rect x="665.2" y="275.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="668.2" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (15 samples, 0.10%)</title><rect x="666.1" y="291.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="669.1" y="302.0"></text>
</g>
<g>
<title>selinux_ipv4_output (5 samples, 0.03%)</title><rect x="667.2" y="291.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="670.2" y="302.0"></text>
</g>
<g>
<title>ip_output (1,175 samples, 7.61%)</title><rect x="667.6" y="339.0" width="89.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="670.6" y="350.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (1,094 samples, 7.08%)</title><rect x="668.1" y="323.0" width="83.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="671.1" y="334.0">ip_finish..</text>
</g>
<g>
<title>__dev_queue_xmit (100 samples, 0.65%)</title><rect x="669.5" y="307.0" width="7.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="672.5" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (66 samples, 0.43%)</title><rect x="671.4" y="291.0" width="5.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="674.4" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (61 samples, 0.39%)</title><rect x="671.7" y="275.0" width="4.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="674.7" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (9 samples, 0.06%)</title><rect x="672.0" y="259.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="675.0" y="270.0"></text>
</g>
<g>
<title>netif_rx (36 samples, 0.23%)</title><rect x="672.7" y="259.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="675.7" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (34 samples, 0.22%)</title><rect x="672.9" y="243.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="675.9" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (13 samples, 0.08%)</title><rect x="673.7" y="227.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="676.7" y="238.0"></text>
</g>
<g>
<title>ktime_get_with_offset (10 samples, 0.06%)</title><rect x="674.7" y="227.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="677.7" y="238.0"></text>
</g>
<g>
<title>tcp_wfree (9 samples, 0.06%)</title><rect x="675.7" y="259.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="678.7" y="270.0"></text>
</g>
<g>
<title>netdev_pick_tx (4 samples, 0.03%)</title><rect x="676.4" y="291.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="679.4" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.03%)</title><rect x="676.7" y="291.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="679.7" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (975 samples, 6.31%)</title><rect x="677.2" y="307.0" width="74.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="680.2" y="318.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.0 (974 samples, 6.31%)</title><rect x="677.2" y="291.0" width="74.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="680.2" y="302.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (967 samples, 6.26%)</title><rect x="677.8" y="275.0" width="73.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="680.8" y="286.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (967 samples, 6.26%)</title><rect x="677.8" y="259.0" width="73.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="680.8" y="270.0">__softir..</text>
</g>
<g>
<title>net_rx_action (944 samples, 6.11%)</title><rect x="679.5" y="243.0" width="72.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="682.5" y="254.0">net_rx_a..</text>
</g>
<g>
<title>__kfree_skb_flush (4 samples, 0.03%)</title><rect x="680.8" y="227.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="683.8" y="238.0"></text>
</g>
<g>
<title>process_backlog (922 samples, 5.97%)</title><rect x="681.2" y="227.0" width="70.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="684.2" y="238.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (908 samples, 5.88%)</title><rect x="682.3" y="211.0" width="69.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="685.3" y="222.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (18 samples, 0.12%)</title><rect x="682.4" y="195.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="685.4" y="206.0"></text>
</g>
<g>
<title>ip_rcv (889 samples, 5.76%)</title><rect x="683.7" y="195.0" width="68.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="686.7" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (702 samples, 4.55%)</title><rect x="684.2" y="179.0" width="53.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="687.2" y="190.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (607 samples, 3.93%)</title><rect x="684.4" y="163.0" width="46.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="687.4" y="174.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (601 samples, 3.89%)</title><rect x="684.9" y="147.0" width="45.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="687.9" y="158.0">ip_p..</text>
</g>
<g>
<title>raw_local_deliver (5 samples, 0.03%)</title><rect x="685.3" y="131.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="688.3" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (590 samples, 3.82%)</title><rect x="685.7" y="131.0" width="45.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="688.7" y="142.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (23 samples, 0.15%)</title><rect x="687.5" y="115.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="690.5" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (10 samples, 0.06%)</title><rect x="689.2" y="115.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="692.2" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (8 samples, 0.05%)</title><rect x="689.4" y="99.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="692.4" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (5 samples, 0.03%)</title><rect x="689.6" y="83.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="692.6" y="94.0"></text>
</g>
<g>
<title>sock_put (5 samples, 0.03%)</title><rect x="690.0" y="115.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="693.0" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (525 samples, 3.40%)</title><rect x="690.4" y="115.0" width="40.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="693.4" y="126.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (520 samples, 3.37%)</title><rect x="690.8" y="99.0" width="39.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="693.8" y="110.0">tcp..</text>
</g>
<g>
<title>sk_reset_timer (16 samples, 0.10%)</title><rect x="691.3" y="83.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="694.3" y="94.0"></text>
</g>
<g>
<title>mod_timer (16 samples, 0.10%)</title><rect x="691.3" y="67.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="694.3" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.09%)</title><rect x="691.4" y="51.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="694.4" y="62.0"></text>
</g>
<g>
<title>tcp_ack (123 samples, 0.80%)</title><rect x="692.5" y="83.0" width="9.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="695.5" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (34 samples, 0.22%)</title><rect x="694.7" y="67.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="697.7" y="78.0"></text>
</g>
<g>
<title>__slab_free (8 samples, 0.05%)</title><rect x="694.7" y="51.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="697.7" y="62.0"></text>
</g>
<g>
<title>kfree (8 samples, 0.05%)</title><rect x="695.4" y="51.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="698.4" y="62.0"></text>
</g>
<g>
<title>skb_release_data (16 samples, 0.10%)</title><rect x="696.1" y="51.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="699.1" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (6 samples, 0.04%)</title><rect x="697.5" y="67.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="700.5" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (5 samples, 0.03%)</title><rect x="698.0" y="67.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="701.0" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (11 samples, 0.07%)</title><rect x="698.3" y="67.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="701.3" y="78.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.03%)</title><rect x="698.8" y="51.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="701.8" y="62.0"></text>
</g>
<g>
<title>rb_erase (9 samples, 0.06%)</title><rect x="699.4" y="67.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="702.4" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (7 samples, 0.05%)</title><rect x="701.1" y="67.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="704.1" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (4 samples, 0.03%)</title><rect x="701.6" y="67.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="704.6" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (5 samples, 0.03%)</title><rect x="701.9" y="83.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="704.9" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (359 samples, 2.32%)</title><rect x="702.3" y="83.0" width="27.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="705.3" y="94.0">t..</text>
</g>
<g>
<title>dst_release (4 samples, 0.03%)</title><rect x="703.0" y="67.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="706.0" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (333 samples, 2.16%)</title><rect x="703.4" y="67.0" width="25.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="706.4" y="78.0">s..</text>
</g>
<g>
<title>__wake_up_common_lock (330 samples, 2.14%)</title><rect x="703.6" y="51.0" width="25.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="706.6" y="62.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (328 samples, 2.12%)</title><rect x="703.8" y="35.0" width="25.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="706.8" y="46.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (9 samples, 0.06%)</title><rect x="728.8" y="67.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="731.8" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (7 samples, 0.05%)</title><rect x="729.7" y="83.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="732.7" y="94.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (4 samples, 0.03%)</title><rect x="730.5" y="115.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="733.5" y="126.0"></text>
</g>
<g>
<title>nf_hook_slow (92 samples, 0.60%)</title><rect x="730.8" y="163.0" width="7.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="733.8" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (68 samples, 0.44%)</title><rect x="731.1" y="147.0" width="5.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="734.1" y="158.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (13 samples, 0.08%)</title><rect x="734.8" y="131.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="737.8" y="142.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (7 samples, 0.05%)</title><rect x="735.8" y="131.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="738.8" y="142.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (5 samples, 0.03%)</title><rect x="736.4" y="147.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="739.4" y="158.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (4 samples, 0.03%)</title><rect x="736.8" y="147.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="739.8" y="158.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (4 samples, 0.03%)</title><rect x="737.1" y="147.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="740.1" y="158.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (9 samples, 0.06%)</title><rect x="737.8" y="179.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="740.8" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 0.03%)</title><rect x="738.5" y="179.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="741.5" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (167 samples, 1.08%)</title><rect x="738.9" y="179.0" width="12.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="741.9" y="190.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (9 samples, 0.06%)</title><rect x="739.4" y="163.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="742.4" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (122 samples, 0.79%)</title><rect x="740.1" y="163.0" width="9.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="743.1" y="174.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (6 samples, 0.04%)</title><rect x="749.4" y="163.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="752.4" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (5 samples, 0.03%)</title><rect x="749.9" y="163.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="752.9" y="174.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (4 samples, 0.03%)</title><rect x="750.4" y="163.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="753.4" y="174.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (12 samples, 0.08%)</title><rect x="750.7" y="163.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="753.7" y="174.0"></text>
</g>
<g>
<title>ip_finish_output (9 samples, 0.06%)</title><rect x="751.7" y="323.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="754.7" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (66 samples, 0.43%)</title><rect x="752.4" y="323.0" width="5.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="755.4" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (19 samples, 0.12%)</title><rect x="752.7" y="307.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="755.7" y="318.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (8 samples, 0.05%)</title><rect x="754.2" y="307.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="757.2" y="318.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (15 samples, 0.10%)</title><rect x="754.8" y="307.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="757.8" y="318.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (12 samples, 0.08%)</title><rect x="755.0" y="291.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="758.0" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute (15 samples, 0.10%)</title><rect x="756.2" y="307.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="759.2" y="318.0"></text>
</g>
<g>
<title>selinux_peerlbl_enabled (4 samples, 0.03%)</title><rect x="757.0" y="291.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="760.0" y="302.0"></text>
</g>
<g>
<title>__skb_clone (9 samples, 0.06%)</title><rect x="757.4" y="355.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="760.4" y="366.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (4 samples, 0.03%)</title><rect x="758.4" y="355.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="761.4" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (4 samples, 0.03%)</title><rect x="759.2" y="355.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="762.2" y="366.0"></text>
</g>
<g>
<title>tcp_v4_send_check (7 samples, 0.05%)</title><rect x="759.5" y="355.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="762.5" y="366.0"></text>
</g>
<g>
<title>ktime_get (6 samples, 0.04%)</title><rect x="760.0" y="371.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="763.0" y="382.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.03%)</title><rect x="760.1" y="355.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="763.1" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (15 samples, 0.10%)</title><rect x="760.5" y="371.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="763.5" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.05%)</title><rect x="760.7" y="355.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="763.7" y="366.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.05%)</title><rect x="760.7" y="339.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="763.7" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.03%)</title><rect x="760.9" y="323.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="763.9" y="334.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.03%)</title><rect x="761.3" y="355.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="764.3" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (13 samples, 0.08%)</title><rect x="761.6" y="371.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="764.6" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (9 samples, 0.06%)</title><rect x="762.6" y="403.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="765.6" y="414.0"></text>
</g>
<g>
<title>copyin (6 samples, 0.04%)</title><rect x="762.7" y="387.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="765.7" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.04%)</title><rect x="762.7" y="371.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="765.7" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (45 samples, 0.29%)</title><rect x="763.3" y="403.0" width="3.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="766.3" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (43 samples, 0.28%)</title><rect x="763.4" y="387.0" width="3.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="766.4" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (10 samples, 0.06%)</title><rect x="764.0" y="371.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="767.0" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (9 samples, 0.06%)</title><rect x="764.1" y="355.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="767.1" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (19 samples, 0.12%)</title><rect x="764.8" y="371.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="767.8" y="382.0"></text>
</g>
<g>
<title>should_failslab (4 samples, 0.03%)</title><rect x="766.0" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="769.0" y="366.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.03%)</title><rect x="766.3" y="371.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="769.3" y="382.0"></text>
</g>
<g>
<title>skb_entail (9 samples, 0.06%)</title><rect x="766.7" y="403.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="769.7" y="414.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (5 samples, 0.03%)</title><rect x="767.9" y="403.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="770.9" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (26 samples, 0.17%)</title><rect x="768.2" y="403.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="771.2" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (23 samples, 0.15%)</title><rect x="768.5" y="387.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="771.5" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (10 samples, 0.06%)</title><rect x="769.4" y="371.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="772.4" y="382.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.04%)</title><rect x="770.5" y="451.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="773.5" y="462.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.04%)</title><rect x="770.5" y="435.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="773.5" y="446.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.03%)</title><rect x="770.6" y="419.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="773.6" y="430.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.21%)</title><rect x="771.4" y="531.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="774.4" y="542.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.21%)</title><rect x="771.4" y="515.0" width="2.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="774.4" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (23 samples, 0.15%)</title><rect x="771.5" y="499.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="774.5" y="510.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (9 samples, 0.06%)</title><rect x="771.9" y="483.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="774.9" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.05%)</title><rect x="772.6" y="483.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="775.6" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.03%)</title><rect x="772.7" y="467.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="775.7" y="478.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.03%)</title><rect x="773.5" y="499.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="776.5" y="510.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.03%)</title><rect x="773.8" y="531.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="776.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.03%)</title><rect x="774.1" y="611.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (16 samples, 0.10%)</title><rect x="774.4" y="627.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="777.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.05%)</title><rect x="774.9" y="611.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="777.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (314 samples, 2.03%)</title><rect x="775.7" y="627.0" width="23.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="778.7" y="638.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (13 samples, 0.08%)</title><rect x="776.6" y="611.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="779.6" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (12 samples, 0.08%)</title><rect x="776.6" y="595.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="779.6" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.06%)</title><rect x="776.9" y="579.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="779.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.06%)</title><rect x="776.9" y="563.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.9" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="777.3" y="547.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.3" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.03%)</title><rect x="777.3" y="531.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.05%)</title><rect x="777.6" y="611.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (281 samples, 1.82%)</title><rect x="778.2" y="611.0" width="21.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.2" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (272 samples, 1.76%)</title><rect x="778.9" y="595.0" width="20.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (257 samples, 1.66%)</title><rect x="778.9" y="579.0" width="19.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (256 samples, 1.66%)</title><rect x="778.9" y="563.0" width="19.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="781.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (256 samples, 1.66%)</title><rect x="778.9" y="547.0" width="19.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="781.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (20 samples, 0.13%)</title><rect x="780.4" y="531.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="783.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (18 samples, 0.12%)</title><rect x="780.5" y="515.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="783.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (77 samples, 0.50%)</title><rect x="782.1" y="531.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="785.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (5 samples, 0.03%)</title><rect x="788.1" y="531.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (130 samples, 0.84%)</title><rect x="788.5" y="531.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="791.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (120 samples, 0.78%)</title><rect x="789.3" y="515.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="792.3" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (96 samples, 0.62%)</title><rect x="791.1" y="499.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="794.1" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.03%)</title><rect x="791.3" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="794.3" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (8 samples, 0.05%)</title><rect x="791.7" y="483.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.7" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (29 samples, 0.19%)</title><rect x="792.3" y="483.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="795.3" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (10 samples, 0.06%)</title><rect x="793.8" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="796.8" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (51 samples, 0.33%)</title><rect x="794.5" y="483.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="797.5" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (45 samples, 0.29%)</title><rect x="794.7" y="467.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="797.7" y="478.0"></text>
</g>
<g>
<title>vectorizedMismatch (41 samples, 0.27%)</title><rect x="795.0" y="451.0" width="3.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="798.0" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (4 samples, 0.03%)</title><rect x="798.1" y="467.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="801.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (15 samples, 0.10%)</title><rect x="798.5" y="579.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="801.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.&lt;init&gt; (6 samples, 0.04%)</title><rect x="798.8" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="801.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (17 samples, 0.11%)</title><rect x="799.7" y="643.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="802.7" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (16 samples, 0.10%)</title><rect x="799.8" y="627.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="802.8" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (15 samples, 0.10%)</title><rect x="799.9" y="611.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="802.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.equals (8 samples, 0.05%)</title><rect x="800.4" y="595.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="803.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (23 samples, 0.15%)</title><rect x="801.0" y="643.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="804.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.15%)</title><rect x="801.0" y="627.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (9 samples, 0.06%)</title><rect x="801.3" y="611.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="804.3" y="622.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.05%)</title><rect x="801.4" y="595.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="804.4" y="606.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.04%)</title><rect x="801.5" y="579.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="804.5" y="590.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.03%)</title><rect x="801.6" y="563.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="804.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.06%)</title><rect x="802.0" y="611.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="805.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (5 samples, 0.03%)</title><rect x="802.4" y="595.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="805.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (76 samples, 0.49%)</title><rect x="802.9" y="675.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="805.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (37 samples, 0.24%)</title><rect x="803.1" y="659.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="806.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (21 samples, 0.14%)</title><rect x="804.3" y="643.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (21 samples, 0.14%)</title><rect x="804.3" y="627.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (20 samples, 0.13%)</title><rect x="804.4" y="611.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="807.4" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 0.23%)</title><rect x="805.9" y="659.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.9" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (36 samples, 0.23%)</title><rect x="805.9" y="643.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="808.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (36 samples, 0.23%)</title><rect x="805.9" y="627.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="808.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (17 samples, 0.11%)</title><rect x="806.3" y="611.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (8 samples, 0.05%)</title><rect x="807.0" y="595.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="810.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (14 samples, 0.09%)</title><rect x="807.6" y="611.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="810.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (12 samples, 0.08%)</title><rect x="807.7" y="595.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="810.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (11 samples, 0.07%)</title><rect x="808.7" y="675.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="811.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (10 samples, 0.06%)</title><rect x="808.7" y="659.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.7" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (10 samples, 0.06%)</title><rect x="808.7" y="643.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.04%)</title><rect x="809.0" y="627.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="812.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (36 samples, 0.23%)</title><rect x="809.7" y="675.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (29 samples, 0.19%)</title><rect x="810.0" y="659.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.0" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (27 samples, 0.17%)</title><rect x="810.1" y="643.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.1" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.03%)</title><rect x="811.4" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="814.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.03%)</title><rect x="811.4" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="814.4" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (4 samples, 0.03%)</title><rect x="811.4" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="814.4" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="811.9" y="627.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="814.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.03%)</title><rect x="812.2" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="815.2" y="670.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.03%)</title><rect x="812.5" y="675.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="815.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (52 samples, 0.34%)</title><rect x="812.9" y="675.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="815.9" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (51 samples, 0.33%)</title><rect x="812.9" y="659.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="815.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (31 samples, 0.20%)</title><rect x="814.1" y="643.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="817.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.14%)</title><rect x="814.1" y="627.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="817.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (9 samples, 0.06%)</title><rect x="815.8" y="627.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="818.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (9 samples, 0.06%)</title><rect x="815.8" y="611.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="818.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.06%)</title><rect x="815.8" y="595.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.8" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 0.03%)</title><rect x="816.5" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="819.5" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (499 samples, 3.23%)</title><rect x="816.8" y="691.0" width="38.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.8" y="702.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (497 samples, 3.22%)</title><rect x="817.0" y="675.0" width="38.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="820.0" y="686.0">one..</text>
</g>
<g>
<title>[unknown] (81 samples, 0.52%)</title><rect x="818.7" y="659.0" width="6.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="821.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 0.52%)</title><rect x="818.7" y="643.0" width="6.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="821.7" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (65 samples, 0.42%)</title><rect x="818.7" y="627.0" width="5.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="821.7" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (11 samples, 0.07%)</title><rect x="818.8" y="611.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="821.8" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.03%)</title><rect x="819.7" y="611.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="822.7" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (4 samples, 0.03%)</title><rect x="820.3" y="611.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="823.3" y="622.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (14 samples, 0.09%)</title><rect x="820.6" y="611.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="823.6" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (24 samples, 0.16%)</title><rect x="821.7" y="611.0" width="1.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="824.7" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.03%)</title><rect x="822.0" y="595.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="825.0" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (10 samples, 0.06%)</title><rect x="822.3" y="595.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="825.3" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (6 samples, 0.04%)</title><rect x="823.1" y="595.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="826.1" y="606.0"></text>
</g>
<g>
<title>__libc_recv (6 samples, 0.04%)</title><rect x="823.7" y="627.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="826.7" y="638.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.03%)</title><rect x="824.2" y="627.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="827.2" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.03%)</title><rect x="824.6" y="627.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="827.6" y="638.0"></text>
</g>
<g>
<title>__libc_recv (389 samples, 2.52%)</title><rect x="824.9" y="659.0" width="29.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="827.9" y="670.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (299 samples, 1.94%)</title><rect x="831.8" y="643.0" width="22.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="834.8" y="654.0">e..</text>
</g>
<g>
<title>do_syscall_64 (299 samples, 1.94%)</title><rect x="831.8" y="627.0" width="22.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="834.8" y="638.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (255 samples, 1.65%)</title><rect x="835.2" y="611.0" width="19.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="838.2" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (250 samples, 1.62%)</title><rect x="835.6" y="595.0" width="19.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="838.6" y="606.0"></text>
</g>
<g>
<title>inet_recvmsg (161 samples, 1.04%)</title><rect x="836.4" y="579.0" width="12.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="839.4" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (158 samples, 1.02%)</title><rect x="836.6" y="563.0" width="12.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="839.6" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (17 samples, 0.11%)</title><rect x="839.7" y="547.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="842.7" y="558.0"></text>
</g>
<g>
<title>skb_release_all (11 samples, 0.07%)</title><rect x="839.7" y="531.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="842.7" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (10 samples, 0.06%)</title><rect x="839.8" y="515.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="842.8" y="526.0"></text>
</g>
<g>
<title>sock_rfree (9 samples, 0.06%)</title><rect x="839.8" y="499.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="842.8" y="510.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.04%)</title><rect x="840.5" y="531.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="843.5" y="542.0"></text>
</g>
<g>
<title>lock_sock_nested (7 samples, 0.05%)</title><rect x="841.6" y="547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="844.6" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.04%)</title><rect x="841.7" y="531.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="844.7" y="542.0"></text>
</g>
<g>
<title>release_sock (10 samples, 0.06%)</title><rect x="842.2" y="547.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="845.2" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (6 samples, 0.04%)</title><rect x="842.5" y="531.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="845.5" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (51 samples, 0.33%)</title><rect x="843.0" y="547.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="846.0" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (50 samples, 0.32%)</title><rect x="843.0" y="531.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="846.0" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (17 samples, 0.11%)</title><rect x="843.3" y="515.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="846.3" y="526.0"></text>
</g>
<g>
<title>copyout (15 samples, 0.10%)</title><rect x="843.4" y="499.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="846.4" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (13 samples, 0.08%)</title><rect x="843.6" y="483.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="846.6" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (30 samples, 0.19%)</title><rect x="844.6" y="515.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="847.6" y="526.0"></text>
</g>
<g>
<title>__check_object_size (27 samples, 0.17%)</title><rect x="844.8" y="499.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="847.8" y="510.0"></text>
</g>
<g>
<title>__check_heap_object (9 samples, 0.06%)</title><rect x="845.3" y="483.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="848.3" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (10 samples, 0.06%)</title><rect x="846.0" y="483.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="849.0" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (7 samples, 0.05%)</title><rect x="846.9" y="547.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="849.9" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (4 samples, 0.03%)</title><rect x="847.1" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="850.1" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (12 samples, 0.08%)</title><rect x="847.4" y="547.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="850.4" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (12 samples, 0.08%)</title><rect x="847.4" y="531.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="850.4" y="542.0"></text>
</g>
<g>
<title>ktime_get (7 samples, 0.05%)</title><rect x="847.8" y="515.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="850.8" y="526.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.04%)</title><rect x="847.9" y="499.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="850.9" y="510.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (5 samples, 0.03%)</title><rect x="848.3" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="851.3" y="558.0"></text>
</g>
<g>
<title>sock_recvmsg (41 samples, 0.27%)</title><rect x="848.7" y="579.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="851.7" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (40 samples, 0.26%)</title><rect x="848.8" y="563.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="851.8" y="574.0"></text>
</g>
<g>
<title>sock_has_perm (37 samples, 0.24%)</title><rect x="849.0" y="547.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="852.0" y="558.0"></text>
</g>
<g>
<title>avc_has_perm (13 samples, 0.08%)</title><rect x="850.8" y="531.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="853.8" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (37 samples, 0.24%)</title><rect x="851.8" y="579.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="854.8" y="590.0"></text>
</g>
<g>
<title>__fget_light (36 samples, 0.23%)</title><rect x="851.9" y="563.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="854.9" y="574.0"></text>
</g>
<g>
<title>__fget (22 samples, 0.14%)</title><rect x="853.0" y="547.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="856.0" y="558.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.03%)</title><rect x="854.7" y="659.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="857.7" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.05%)</title><rect x="855.0" y="707.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="858.0" y="718.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.05%)</title><rect x="855.0" y="691.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="858.0" y="702.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.04%)</title><rect x="855.0" y="675.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="858.0" y="686.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=13278] (3,667 samples, 23.74%)</title><rect x="855.5" y="755.0" width="280.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="858.5" y="766.0">[NIO Selector #3 tid=13278]</text>
</g>
<g>
<title>[unknown_Java] (16 samples, 0.10%)</title><rect x="855.8" y="739.0" width="1.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="858.8" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.05%)</title><rect x="856.5" y="723.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="859.5" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,647 samples, 23.61%)</title><rect x="857.0" y="739.0" width="278.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="860.0" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (560 samples, 3.63%)</title><rect x="857.9" y="723.0" width="42.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="860.9" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (17 samples, 0.11%)</title><rect x="858.6" y="707.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="861.6" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (11 samples, 0.07%)</title><rect x="859.0" y="691.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="862.0" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (533 samples, 3.45%)</title><rect x="859.9" y="707.0" width="40.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="862.9" y="718.0">one..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (436 samples, 2.82%)</title><rect x="861.5" y="691.0" width="33.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="864.5" y="702.0">.a..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (353 samples, 2.29%)</title><rect x="867.9" y="675.0" width="26.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="870.9" y="686.0">e..</text>
</g>
<g>
<title>do_syscall_64 (353 samples, 2.29%)</title><rect x="867.9" y="659.0" width="26.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="870.9" y="670.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (326 samples, 2.11%)</title><rect x="869.9" y="643.0" width="24.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="872.9" y="654.0">_..</text>
</g>
<g>
<title>do_epoll_wait (326 samples, 2.11%)</title><rect x="869.9" y="627.0" width="24.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="872.9" y="638.0">d..</text>
</g>
<g>
<title>__fget_light (11 samples, 0.07%)</title><rect x="870.6" y="611.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="873.6" y="622.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.07%)</title><rect x="870.6" y="595.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="873.6" y="606.0"></text>
</g>
<g>
<title>ep_poll (298 samples, 1.93%)</title><rect x="871.5" y="611.0" width="22.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="874.5" y="622.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (142 samples, 0.92%)</title><rect x="873.8" y="595.0" width="10.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="876.8" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (90 samples, 0.58%)</title><rect x="876.7" y="579.0" width="6.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="879.7" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (72 samples, 0.47%)</title><rect x="878.1" y="563.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="881.1" y="574.0"></text>
</g>
<g>
<title>sock_poll (61 samples, 0.39%)</title><rect x="879.0" y="547.0" width="4.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="882.0" y="558.0"></text>
</g>
<g>
<title>tcp_poll (31 samples, 0.20%)</title><rect x="881.2" y="531.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="884.2" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (10 samples, 0.06%)</title><rect x="882.9" y="515.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="885.9" y="526.0"></text>
</g>
<g>
<title>mutex_lock (10 samples, 0.06%)</title><rect x="883.6" y="579.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="886.6" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (126 samples, 0.82%)</title><rect x="884.6" y="595.0" width="9.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="887.6" y="606.0"></text>
</g>
<g>
<title>schedule (101 samples, 0.65%)</title><rect x="886.5" y="579.0" width="7.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="889.5" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (91 samples, 0.59%)</title><rect x="887.3" y="563.0" width="6.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="890.3" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (87 samples, 0.56%)</title><rect x="887.6" y="547.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="890.6" y="558.0"></text>
</g>
<g>
<title>fput_many (7 samples, 0.05%)</title><rect x="894.3" y="611.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="897.3" y="622.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (10 samples, 0.06%)</title><rect x="894.8" y="691.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="897.8" y="702.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.03%)</title><rect x="895.6" y="691.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="898.6" y="702.0"></text>
</g>
<g>
<title>__GI___clock_gettime (26 samples, 0.17%)</title><rect x="895.9" y="691.0" width="2.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="898.9" y="702.0"></text>
</g>
<g>
<title>[vdso] (12 samples, 0.08%)</title><rect x="897.0" y="675.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="900.0" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (9 samples, 0.06%)</title><rect x="897.9" y="691.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="900.9" y="702.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (22 samples, 0.14%)</title><rect x="898.8" y="691.0" width="1.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="901.8" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,076 samples, 19.92%)</title><rect x="900.7" y="723.0" width="235.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="903.7" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,064 samples, 19.84%)</title><rect x="901.3" y="707.0" width="234.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="904.3" y="718.0">one/nio/http/HttpSession.proces..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,586 samples, 16.74%)</title><rect x="901.5" y="691.0" width="197.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="904.5" y="702.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,330 samples, 15.09%)</title><rect x="905.7" y="675.0" width="178.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.7" y="686.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,328 samples, 15.07%)</title><rect x="905.8" y="659.0" width="177.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="908.8" y="670.0">one/nio/http/HttpServer..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2,287 samples, 14.81%)</title><rect x="905.8" y="643.0" width="174.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.8" y="654.0">RequestHandler1_entity..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,988 samples, 12.87%)</title><rect x="905.8" y="627.0" width="151.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="908.8" y="638.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (43 samples, 0.28%)</title><rect x="906.1" y="611.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="909.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (39 samples, 0.25%)</title><rect x="906.4" y="595.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="909.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.03%)</title><rect x="907.8" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="910.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.08%)</title><rect x="908.2" y="579.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="911.2" y="590.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (10 samples, 0.06%)</title><rect x="908.4" y="563.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="911.4" y="574.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (10 samples, 0.06%)</title><rect x="908.4" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="911.4" y="558.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (5 samples, 0.03%)</title><rect x="908.4" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="911.4" y="542.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (5 samples, 0.03%)</title><rect x="908.8" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="911.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,931 samples, 12.50%)</title><rect x="909.4" y="611.0" width="147.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="912.4" y="622.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (67 samples, 0.43%)</title><rect x="909.4" y="595.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="912.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (44 samples, 0.28%)</title><rect x="911.1" y="579.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="914.1" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (9 samples, 0.06%)</title><rect x="911.9" y="563.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="914.9" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.03%)</title><rect x="912.1" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="915.1" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (25 samples, 0.16%)</title><rect x="912.6" y="563.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="915.6" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (25 samples, 0.16%)</title><rect x="912.6" y="547.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="915.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.05%)</title><rect x="913.8" y="531.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="916.8" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,864 samples, 12.07%)</title><rect x="914.5" y="595.0" width="142.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="917.5" y="606.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,864 samples, 12.07%)</title><rect x="914.5" y="579.0" width="142.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="917.5" y="590.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,862 samples, 12.06%)</title><rect x="914.6" y="563.0" width="142.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="917.6" y="574.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,861 samples, 12.05%)</title><rect x="914.6" y="547.0" width="142.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="917.6" y="558.0">one/nio/net/Native..</text>
</g>
<g>
<title>.annobin_send.c (1,811 samples, 11.73%)</title><rect x="915.4" y="531.0" width="138.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="918.4" y="542.0">.annobin_send.c</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (6 samples, 0.04%)</title><rect x="919.5" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="922.5" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,750 samples, 11.33%)</title><rect x="920.1" y="515.0" width="133.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="923.1" y="526.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (1,750 samples, 11.33%)</title><rect x="920.1" y="499.0" width="133.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="923.1" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,733 samples, 11.22%)</title><rect x="921.3" y="483.0" width="132.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="924.3" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,728 samples, 11.19%)</title><rect x="921.7" y="467.0" width="132.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="924.7" y="478.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (1,715 samples, 11.10%)</title><rect x="922.3" y="451.0" width="131.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="925.3" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (16 samples, 0.10%)</title><rect x="922.4" y="435.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="925.4" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (12 samples, 0.08%)</title><rect x="922.7" y="419.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="925.7" y="430.0"></text>
</g>
<g>
<title>avc_has_perm (5 samples, 0.03%)</title><rect x="923.3" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="926.3" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,697 samples, 10.99%)</title><rect x="923.7" y="435.0" width="129.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="926.7" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (8 samples, 0.05%)</title><rect x="924.3" y="419.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="927.3" y="430.0"></text>
</g>
<g>
<title>tcp_release_cb (6 samples, 0.04%)</title><rect x="924.4" y="403.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="927.4" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,681 samples, 10.88%)</title><rect x="924.9" y="419.0" width="128.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="927.9" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (9 samples, 0.06%)</title><rect x="926.2" y="403.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="929.2" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (8 samples, 0.05%)</title><rect x="926.3" y="387.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="929.3" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1,563 samples, 10.12%)</title><rect x="926.9" y="403.0" width="119.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="929.9" y="414.0">__tcp_push_pend..</text>
</g>
<g>
<title>tcp_write_xmit (1,562 samples, 10.11%)</title><rect x="927.0" y="387.0" width="119.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="930.0" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (1,524 samples, 9.87%)</title><rect x="928.1" y="371.0" width="116.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="931.1" y="382.0">__tcp_transmit..</text>
</g>
<g>
<title>__ip_queue_xmit (1,468 samples, 9.51%)</title><rect x="929.6" y="355.0" width="112.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="932.6" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (12 samples, 0.08%)</title><rect x="930.2" y="339.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="933.2" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (10 samples, 0.06%)</title><rect x="930.4" y="323.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="933.4" y="334.0"></text>
</g>
<g>
<title>ip_local_out (305 samples, 1.97%)</title><rect x="931.2" y="339.0" width="23.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="934.2" y="350.0">i..</text>
</g>
<g>
<title>__ip_local_out (304 samples, 1.97%)</title><rect x="931.3" y="323.0" width="23.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="934.3" y="334.0">_..</text>
</g>
<g>
<title>ip_send_check (6 samples, 0.04%)</title><rect x="931.3" y="307.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="934.3" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (298 samples, 1.93%)</title><rect x="931.8" y="307.0" width="22.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="934.8" y="318.0">n..</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (90 samples, 0.58%)</title><rect x="932.5" y="291.0" width="6.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="935.5" y="302.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (6 samples, 0.04%)</title><rect x="939.4" y="291.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="942.4" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (30 samples, 0.19%)</title><rect x="939.8" y="291.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="942.8" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (19 samples, 0.12%)</title><rect x="940.7" y="275.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="943.7" y="286.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (14 samples, 0.09%)</title><rect x="942.1" y="291.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="945.1" y="302.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (8 samples, 0.05%)</title><rect x="943.2" y="291.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="946.2" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (9 samples, 0.06%)</title><rect x="943.8" y="291.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="946.8" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (11 samples, 0.07%)</title><rect x="944.5" y="291.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="947.5" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (99 samples, 0.64%)</title><rect x="945.4" y="291.0" width="7.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="948.4" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (23 samples, 0.15%)</title><rect x="946.9" y="275.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="949.9" y="286.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (7 samples, 0.05%)</title><rect x="948.7" y="275.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="951.7" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (38 samples, 0.25%)</title><rect x="949.2" y="275.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="952.2" y="286.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (6 samples, 0.04%)</title><rect x="951.2" y="259.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="954.2" y="270.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (5 samples, 0.03%)</title><rect x="951.8" y="259.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="954.8" y="270.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (10 samples, 0.06%)</title><rect x="952.2" y="275.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="955.2" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (17 samples, 0.11%)</title><rect x="952.9" y="291.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="955.9" y="302.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (8 samples, 0.05%)</title><rect x="953.4" y="275.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="956.4" y="286.0"></text>
</g>
<g>
<title>selinux_ipv4_output (4 samples, 0.03%)</title><rect x="954.2" y="291.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="957.2" y="302.0"></text>
</g>
<g>
<title>ip_output (1,142 samples, 7.39%)</title><rect x="954.5" y="339.0" width="87.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="957.5" y="350.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (1,044 samples, 6.76%)</title><rect x="955.4" y="323.0" width="79.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="958.4" y="334.0">ip_finish..</text>
</g>
<g>
<title>__dev_queue_xmit (75 samples, 0.49%)</title><rect x="956.4" y="307.0" width="5.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="959.4" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (55 samples, 0.36%)</title><rect x="957.8" y="291.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="960.8" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (50 samples, 0.32%)</title><rect x="958.2" y="275.0" width="3.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="961.2" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (7 samples, 0.05%)</title><rect x="958.5" y="259.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="961.5" y="270.0"></text>
</g>
<g>
<title>netif_rx (28 samples, 0.18%)</title><rect x="959.0" y="259.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="962.0" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (28 samples, 0.18%)</title><rect x="959.0" y="243.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="962.0" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (15 samples, 0.10%)</title><rect x="959.6" y="227.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="962.6" y="238.0"></text>
</g>
<g>
<title>ktime_get_with_offset (6 samples, 0.04%)</title><rect x="960.7" y="227.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="963.7" y="238.0"></text>
</g>
<g>
<title>tcp_wfree (5 samples, 0.03%)</title><rect x="961.6" y="259.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="964.6" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (955 samples, 6.18%)</title><rect x="962.2" y="307.0" width="72.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="965.2" y="318.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.0 (954 samples, 6.18%)</title><rect x="962.2" y="291.0" width="72.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="965.2" y="302.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (943 samples, 6.11%)</title><rect x="963.1" y="275.0" width="72.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="966.1" y="286.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (943 samples, 6.11%)</title><rect x="963.1" y="259.0" width="72.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="966.1" y="270.0">__softir..</text>
</g>
<g>
<title>net_rx_action (910 samples, 5.89%)</title><rect x="965.3" y="243.0" width="69.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="968.3" y="254.0">net_rx_..</text>
</g>
<g>
<title>process_backlog (900 samples, 5.83%)</title><rect x="966.1" y="227.0" width="68.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="969.1" y="238.0">process..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (880 samples, 5.70%)</title><rect x="967.6" y="211.0" width="67.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="970.6" y="222.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (11 samples, 0.07%)</title><rect x="967.7" y="195.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="970.7" y="206.0"></text>
</g>
<g>
<title>ip_rcv (868 samples, 5.62%)</title><rect x="968.5" y="195.0" width="66.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="971.5" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (711 samples, 4.60%)</title><rect x="969.1" y="179.0" width="54.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="972.1" y="190.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (592 samples, 3.83%)</title><rect x="969.6" y="163.0" width="45.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="972.6" y="174.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (590 samples, 3.82%)</title><rect x="969.7" y="147.0" width="45.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="972.7" y="158.0">ip_p..</text>
</g>
<g>
<title>raw_local_deliver (5 samples, 0.03%)</title><rect x="970.3" y="131.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="973.3" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (577 samples, 3.74%)</title><rect x="970.7" y="131.0" width="44.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="973.7" y="142.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (34 samples, 0.22%)</title><rect x="971.9" y="115.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="974.9" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (8 samples, 0.05%)</title><rect x="973.9" y="99.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="976.9" y="110.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (9 samples, 0.06%)</title><rect x="974.7" y="115.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="977.7" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (9 samples, 0.06%)</title><rect x="974.7" y="99.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="977.7" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (7 samples, 0.05%)</title><rect x="974.8" y="83.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="977.8" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (515 samples, 3.33%)</title><rect x="975.4" y="115.0" width="39.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="978.4" y="126.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (513 samples, 3.32%)</title><rect x="975.5" y="99.0" width="39.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="978.5" y="110.0">tcp..</text>
</g>
<g>
<title>sk_reset_timer (13 samples, 0.08%)</title><rect x="976.0" y="83.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="979.0" y="94.0"></text>
</g>
<g>
<title>mod_timer (13 samples, 0.08%)</title><rect x="976.0" y="67.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="979.0" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.05%)</title><rect x="976.2" y="51.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="979.2" y="62.0"></text>
</g>
<g>
<title>tcp_ack (134 samples, 0.87%)</title><rect x="977.0" y="83.0" width="10.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="980.0" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (25 samples, 0.16%)</title><rect x="980.7" y="67.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="983.7" y="78.0"></text>
</g>
<g>
<title>__slab_free (6 samples, 0.04%)</title><rect x="980.9" y="51.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="983.9" y="62.0"></text>
</g>
<g>
<title>skb_release_data (12 samples, 0.08%)</title><rect x="981.7" y="51.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="984.7" y="62.0"></text>
</g>
<g>
<title>__list_del_entry_valid (4 samples, 0.03%)</title><rect x="982.6" y="67.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="985.6" y="78.0"></text>
</g>
<g>
<title>bictcp_acked (5 samples, 0.03%)</title><rect x="982.9" y="67.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="985.9" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (7 samples, 0.05%)</title><rect x="983.3" y="67.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="986.3" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (11 samples, 0.07%)</title><rect x="983.9" y="67.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="986.9" y="78.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.03%)</title><rect x="984.5" y="51.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="987.5" y="62.0"></text>
</g>
<g>
<title>rb_erase (5 samples, 0.03%)</title><rect x="984.9" y="67.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="987.9" y="78.0"></text>
</g>
<g>
<title>tcp_rearm_rto (6 samples, 0.04%)</title><rect x="986.2" y="67.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="989.2" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (5 samples, 0.03%)</title><rect x="986.6" y="67.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="989.6" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (5 samples, 0.03%)</title><rect x="987.2" y="83.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="990.2" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (342 samples, 2.21%)</title><rect x="987.6" y="83.0" width="26.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="990.6" y="94.0">t..</text>
</g>
<g>
<title>sock_def_readable (321 samples, 2.08%)</title><rect x="988.3" y="67.0" width="24.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="991.3" y="78.0">s..</text>
</g>
<g>
<title>__wake_up_common_lock (307 samples, 1.99%)</title><rect x="989.4" y="51.0" width="23.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="992.4" y="62.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (302 samples, 1.96%)</title><rect x="989.7" y="35.0" width="23.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="992.7" y="46.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (7 samples, 0.05%)</title><rect x="1012.8" y="67.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1015.8" y="78.0"></text>
</g>
<g>
<title>tcp_queue_rcv (5 samples, 0.03%)</title><rect x="1013.4" y="67.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1016.4" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (13 samples, 0.08%)</title><rect x="1013.7" y="83.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1016.7" y="94.0"></text>
</g>
<g>
<title>ktime_get (7 samples, 0.05%)</title><rect x="1014.2" y="67.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1017.2" y="78.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.04%)</title><rect x="1014.3" y="51.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1017.3" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (113 samples, 0.73%)</title><rect x="1014.8" y="163.0" width="8.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1017.8" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (92 samples, 0.60%)</title><rect x="1015.0" y="147.0" width="7.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1018.0" y="158.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (11 samples, 0.07%)</title><rect x="1020.8" y="131.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1023.8" y="142.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (5 samples, 0.03%)</title><rect x="1021.7" y="131.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1024.7" y="142.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.03%)</title><rect x="1022.1" y="147.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1025.1" y="158.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (4 samples, 0.03%)</title><rect x="1022.7" y="147.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1025.7" y="158.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (4 samples, 0.03%)</title><rect x="1022.7" y="131.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1025.7" y="142.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (4 samples, 0.03%)</title><rect x="1023.1" y="147.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1026.1" y="158.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (7 samples, 0.05%)</title><rect x="1023.4" y="179.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1026.4" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish (6 samples, 0.04%)</title><rect x="1024.0" y="179.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1027.0" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (136 samples, 0.88%)</title><rect x="1024.4" y="179.0" width="10.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1027.4" y="190.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (5 samples, 0.03%)</title><rect x="1024.9" y="163.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1027.9" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (106 samples, 0.69%)</title><rect x="1025.3" y="163.0" width="8.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1028.3" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (5 samples, 0.03%)</title><rect x="1033.6" y="163.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1036.6" y="174.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (6 samples, 0.04%)</title><rect x="1034.1" y="163.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1037.1" y="174.0"></text>
</g>
<g>
<title>ip_finish_output (12 samples, 0.08%)</title><rect x="1035.2" y="323.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1038.2" y="334.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.03%)</title><rect x="1035.8" y="307.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1038.8" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (74 samples, 0.48%)</title><rect x="1036.1" y="323.0" width="5.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1039.1" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (28 samples, 0.18%)</title><rect x="1036.5" y="307.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1039.5" y="318.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (6 samples, 0.04%)</title><rect x="1038.8" y="307.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1041.8" y="318.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (11 samples, 0.07%)</title><rect x="1039.3" y="307.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1042.3" y="318.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (8 samples, 0.05%)</title><rect x="1039.5" y="291.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1042.5" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (8 samples, 0.05%)</title><rect x="1040.1" y="307.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1043.1" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute (14 samples, 0.09%)</title><rect x="1040.7" y="307.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1043.7" y="318.0"></text>
</g>
<g>
<title>selinux_peerlbl_enabled (7 samples, 0.05%)</title><rect x="1041.2" y="291.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1044.2" y="302.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.03%)</title><rect x="1041.8" y="355.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1044.8" y="366.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (6 samples, 0.04%)</title><rect x="1042.5" y="355.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1045.5" y="366.0"></text>
</g>
<g>
<title>ip_queue_xmit (5 samples, 0.03%)</title><rect x="1042.9" y="355.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1045.9" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (4 samples, 0.03%)</title><rect x="1043.8" y="355.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1046.8" y="366.0"></text>
</g>
<g>
<title>tcp_v4_send_check (6 samples, 0.04%)</title><rect x="1044.1" y="355.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1047.1" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (13 samples, 0.08%)</title><rect x="1044.8" y="371.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1047.8" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.04%)</title><rect x="1045.1" y="355.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1048.1" y="366.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.04%)</title><rect x="1045.1" y="339.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1048.1" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.03%)</title><rect x="1045.2" y="323.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1048.2" y="334.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (6 samples, 0.04%)</title><rect x="1045.8" y="371.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1048.8" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (13 samples, 0.08%)</title><rect x="1046.4" y="403.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1049.4" y="414.0"></text>
</g>
<g>
<title>copyin (8 samples, 0.05%)</title><rect x="1046.7" y="387.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1049.7" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.03%)</title><rect x="1047.0" y="371.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1050.0" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (43 samples, 0.28%)</title><rect x="1047.4" y="403.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1050.4" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (41 samples, 0.27%)</title><rect x="1047.5" y="387.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1050.5" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (13 samples, 0.08%)</title><rect x="1047.8" y="371.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1050.8" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (11 samples, 0.07%)</title><rect x="1048.0" y="355.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1051.0" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (18 samples, 0.12%)</title><rect x="1048.8" y="371.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1051.8" y="382.0"></text>
</g>
<g>
<title>ksize (6 samples, 0.04%)</title><rect x="1050.2" y="371.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1053.2" y="382.0"></text>
</g>
<g>
<title>skb_entail (8 samples, 0.05%)</title><rect x="1050.6" y="403.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1053.6" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (15 samples, 0.10%)</title><rect x="1051.6" y="403.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1054.6" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (12 samples, 0.08%)</title><rect x="1051.8" y="387.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1054.8" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (7 samples, 0.05%)</title><rect x="1052.2" y="371.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1055.2" y="382.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (5 samples, 0.03%)</title><rect x="1052.9" y="403.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1055.9" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.03%)</title><rect x="1053.3" y="451.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1056.3" y="462.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.03%)</title><rect x="1053.3" y="435.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1056.3" y="446.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.03%)</title><rect x="1053.4" y="419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1056.4" y="430.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.03%)</title><rect x="1053.8" y="531.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1056.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.20%)</title><rect x="1054.2" y="531.0" width="2.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1057.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.20%)</title><rect x="1054.2" y="515.0" width="2.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1057.2" y="526.0"></text>
</g>
<g>
<title>.annobin_send.c (4 samples, 0.03%)</title><rect x="1054.2" y="499.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1057.2" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (21 samples, 0.14%)</title><rect x="1054.5" y="499.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1057.5" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (10 samples, 0.06%)</title><rect x="1055.3" y="483.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1058.3" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (5 samples, 0.03%)</title><rect x="1055.7" y="467.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1058.7" y="478.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.03%)</title><rect x="1056.5" y="531.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1059.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.05%)</title><rect x="1056.9" y="611.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1059.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.04%)</title><rect x="1056.9" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1059.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.03%)</title><rect x="1057.0" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1060.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (23 samples, 0.15%)</title><rect x="1057.7" y="627.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1060.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.04%)</title><rect x="1058.6" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1061.6" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.03%)</title><rect x="1059.0" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1062.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.03%)</title><rect x="1059.0" y="595.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1062.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.03%)</title><rect x="1059.0" y="579.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1062.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.03%)</title><rect x="1059.1" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1062.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (276 samples, 1.79%)</title><rect x="1059.4" y="627.0" width="21.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1062.4" y="638.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.09%)</title><rect x="1060.3" y="611.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1063.3" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.09%)</title><rect x="1060.3" y="595.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1063.3" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (13 samples, 0.08%)</title><rect x="1060.3" y="579.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1063.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.08%)</title><rect x="1060.4" y="563.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1063.4" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1061.0" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1064.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.03%)</title><rect x="1061.0" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1061.3" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1064.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (246 samples, 1.59%)</title><rect x="1061.7" y="611.0" width="18.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (243 samples, 1.57%)</title><rect x="1061.9" y="595.0" width="18.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (216 samples, 1.40%)</title><rect x="1061.9" y="579.0" width="16.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1064.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (216 samples, 1.40%)</title><rect x="1061.9" y="563.0" width="16.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (216 samples, 1.40%)</title><rect x="1061.9" y="547.0" width="16.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (9 samples, 0.06%)</title><rect x="1063.5" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1066.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (9 samples, 0.06%)</title><rect x="1063.5" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1066.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (47 samples, 0.30%)</title><rect x="1064.2" y="531.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1067.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (4 samples, 0.03%)</title><rect x="1068.0" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1071.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (132 samples, 0.85%)</title><rect x="1068.3" y="531.0" width="10.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1071.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (126 samples, 0.82%)</title><rect x="1068.7" y="515.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1071.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (96 samples, 0.62%)</title><rect x="1071.0" y="499.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1074.0" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.03%)</title><rect x="1071.6" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1074.6" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (9 samples, 0.06%)</title><rect x="1071.9" y="483.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1074.9" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (47 samples, 0.30%)</title><rect x="1072.6" y="483.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1075.6" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (19 samples, 0.12%)</title><rect x="1074.7" y="467.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1077.7" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (29 samples, 0.19%)</title><rect x="1076.2" y="483.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1079.2" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (23 samples, 0.15%)</title><rect x="1076.5" y="467.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1079.5" y="478.0"></text>
</g>
<g>
<title>vectorizedMismatch (20 samples, 0.13%)</title><rect x="1076.8" y="451.0" width="1.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1079.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (27 samples, 0.17%)</title><rect x="1078.4" y="579.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1081.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.&lt;init&gt; (13 samples, 0.08%)</title><rect x="1079.1" y="563.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1082.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (16 samples, 0.10%)</title><rect x="1080.7" y="643.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1083.7" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (16 samples, 0.10%)</title><rect x="1080.7" y="627.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1083.7" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (13 samples, 0.08%)</title><rect x="1080.8" y="611.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1083.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.equals (7 samples, 0.05%)</title><rect x="1081.3" y="595.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1084.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (22 samples, 0.14%)</title><rect x="1082.0" y="643.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1085.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (21 samples, 0.14%)</title><rect x="1082.0" y="627.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1085.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (4 samples, 0.03%)</title><rect x="1082.2" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1085.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (15 samples, 0.10%)</title><rect x="1082.5" y="611.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1085.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (5 samples, 0.03%)</title><rect x="1083.3" y="595.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1086.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (86 samples, 0.56%)</title><rect x="1083.7" y="675.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1086.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (34 samples, 0.22%)</title><rect x="1083.9" y="659.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1086.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (19 samples, 0.12%)</title><rect x="1085.0" y="643.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1088.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (19 samples, 0.12%)</title><rect x="1085.0" y="627.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1088.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (18 samples, 0.12%)</title><rect x="1085.1" y="611.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1088.1" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (50 samples, 0.32%)</title><rect x="1086.5" y="659.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1089.5" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (50 samples, 0.32%)</title><rect x="1086.5" y="643.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1089.5" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (50 samples, 0.32%)</title><rect x="1086.5" y="627.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1089.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (39 samples, 0.25%)</title><rect x="1086.9" y="611.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1089.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10 samples, 0.06%)</title><rect x="1089.1" y="595.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1092.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (6 samples, 0.04%)</title><rect x="1089.8" y="611.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1092.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (4 samples, 0.03%)</title><rect x="1090.0" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1093.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (22 samples, 0.14%)</title><rect x="1090.3" y="675.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1093.3" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (20 samples, 0.13%)</title><rect x="1090.4" y="659.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1093.4" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (20 samples, 0.13%)</title><rect x="1090.4" y="643.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1093.4" y="654.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (4 samples, 0.03%)</title><rect x="1090.9" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1093.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.charAt (10 samples, 0.06%)</title><rect x="1091.2" y="627.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1094.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (6 samples, 0.04%)</title><rect x="1091.4" y="611.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1094.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (40 samples, 0.26%)</title><rect x="1092.2" y="675.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1095.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (27 samples, 0.17%)</title><rect x="1093.0" y="659.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1096.0" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (27 samples, 0.17%)</title><rect x="1093.0" y="643.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1096.0" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.03%)</title><rect x="1094.0" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1097.0" y="638.0"></text>
</g>
<g>
<title>jbyte_arraycopy (5 samples, 0.03%)</title><rect x="1094.6" y="627.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1097.6" y="638.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.03%)</title><rect x="1095.3" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1098.3" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (46 samples, 0.30%)</title><rect x="1095.6" y="675.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.6" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (46 samples, 0.30%)</title><rect x="1095.6" y="659.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.6" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 0.24%)</title><rect x="1095.9" y="643.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 0.21%)</title><rect x="1095.9" y="627.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (5 samples, 0.03%)</title><rect x="1098.4" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1101.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (5 samples, 0.03%)</title><rect x="1098.4" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1101.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.03%)</title><rect x="1098.5" y="595.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1101.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.03%)</title><rect x="1098.8" y="643.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1101.8" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (476 samples, 3.08%)</title><rect x="1099.1" y="691.0" width="36.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1102.1" y="702.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (476 samples, 3.08%)</title><rect x="1099.1" y="675.0" width="36.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1102.1" y="686.0">one..</text>
</g>
<g>
<title>[unknown] (87 samples, 0.56%)</title><rect x="1100.0" y="659.0" width="6.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1103.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 0.56%)</title><rect x="1100.0" y="643.0" width="6.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1103.0" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (72 samples, 0.47%)</title><rect x="1100.0" y="627.0" width="5.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1103.0" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (6 samples, 0.04%)</title><rect x="1100.1" y="611.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1103.1" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (7 samples, 0.05%)</title><rect x="1100.9" y="611.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1103.9" y="622.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (12 samples, 0.08%)</title><rect x="1101.4" y="611.0" width="1.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1104.4" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (37 samples, 0.24%)</title><rect x="1102.5" y="611.0" width="2.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1105.5" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (9 samples, 0.06%)</title><rect x="1103.7" y="595.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1106.7" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.03%)</title><rect x="1104.4" y="595.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1107.4" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (7 samples, 0.05%)</title><rect x="1104.8" y="595.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1107.8" y="606.0"></text>
</g>
<g>
<title>__libc_recv (6 samples, 0.04%)</title><rect x="1105.5" y="627.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1108.5" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.05%)</title><rect x="1106.1" y="627.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1109.1" y="638.0"></text>
</g>
<g>
<title>__libc_recv (377 samples, 2.44%)</title><rect x="1106.6" y="659.0" width="28.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1109.6" y="670.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (284 samples, 1.84%)</title><rect x="1113.7" y="643.0" width="21.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1116.7" y="654.0">e..</text>
</g>
<g>
<title>do_syscall_64 (284 samples, 1.84%)</title><rect x="1113.7" y="627.0" width="21.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1116.7" y="638.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (240 samples, 1.55%)</title><rect x="1117.1" y="611.0" width="18.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1120.1" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (235 samples, 1.52%)</title><rect x="1117.5" y="595.0" width="17.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1120.5" y="606.0"></text>
</g>
<g>
<title>fput_many (8 samples, 0.05%)</title><rect x="1117.8" y="579.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1120.8" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (148 samples, 0.96%)</title><rect x="1118.6" y="579.0" width="11.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1121.6" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (145 samples, 0.94%)</title><rect x="1118.9" y="563.0" width="11.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1121.9" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (15 samples, 0.10%)</title><rect x="1121.6" y="547.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1124.6" y="558.0"></text>
</g>
<g>
<title>skb_release_all (12 samples, 0.08%)</title><rect x="1121.6" y="531.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1124.6" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (12 samples, 0.08%)</title><rect x="1121.6" y="515.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1124.6" y="526.0"></text>
</g>
<g>
<title>sock_rfree (10 samples, 0.06%)</title><rect x="1121.8" y="499.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1124.8" y="510.0"></text>
</g>
<g>
<title>lock_sock_nested (7 samples, 0.05%)</title><rect x="1123.0" y="547.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1126.0" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.04%)</title><rect x="1123.1" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1126.1" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (54 samples, 0.35%)</title><rect x="1123.8" y="547.0" width="4.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1126.8" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (54 samples, 0.35%)</title><rect x="1123.8" y="531.0" width="4.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1126.8" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (28 samples, 0.18%)</title><rect x="1123.8" y="515.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1126.8" y="526.0"></text>
</g>
<g>
<title>copyout (26 samples, 0.17%)</title><rect x="1124.0" y="499.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1127.0" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (26 samples, 0.17%)</title><rect x="1124.0" y="483.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1127.0" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (25 samples, 0.16%)</title><rect x="1126.0" y="515.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1129.0" y="526.0"></text>
</g>
<g>
<title>__check_object_size (22 samples, 0.14%)</title><rect x="1126.2" y="499.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1129.2" y="510.0"></text>
</g>
<g>
<title>__check_heap_object (8 samples, 0.05%)</title><rect x="1126.6" y="483.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1129.6" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (7 samples, 0.05%)</title><rect x="1127.2" y="483.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1130.2" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (5 samples, 0.03%)</title><rect x="1127.9" y="547.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1130.9" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (13 samples, 0.08%)</title><rect x="1128.3" y="547.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1131.3" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (12 samples, 0.08%)</title><rect x="1128.3" y="531.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1131.3" y="542.0"></text>
</g>
<g>
<title>ktime_get (8 samples, 0.05%)</title><rect x="1128.6" y="515.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1131.6" y="526.0"></text>
</g>
<g>
<title>read_tsc (7 samples, 0.05%)</title><rect x="1128.7" y="499.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1131.7" y="510.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (9 samples, 0.06%)</title><rect x="1129.3" y="547.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1132.3" y="558.0"></text>
</g>
<g>
<title>sock_recvmsg (45 samples, 0.29%)</title><rect x="1129.9" y="579.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1132.9" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (44 samples, 0.28%)</title><rect x="1130.0" y="563.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1133.0" y="574.0"></text>
</g>
<g>
<title>sock_has_perm (41 samples, 0.27%)</title><rect x="1130.3" y="547.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1133.3" y="558.0"></text>
</g>
<g>
<title>avc_has_perm (16 samples, 0.10%)</title><rect x="1132.2" y="531.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1135.2" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (27 samples, 0.17%)</title><rect x="1133.4" y="579.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1136.4" y="590.0"></text>
</g>
<g>
<title>__fget_light (25 samples, 0.16%)</title><rect x="1133.5" y="563.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1136.5" y="574.0"></text>
</g>
<g>
<title>__fget (14 samples, 0.09%)</title><rect x="1134.4" y="547.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1137.4" y="558.0"></text>
</g>
<g>
<title>[pool-1-thread-1 tid=13273] (135 samples, 0.87%)</title><rect x="1135.7" y="755.0" width="10.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1138.7" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.run (131 samples, 0.85%)</title><rect x="1135.9" y="739.0" width="10.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1138.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (131 samples, 0.85%)</title><rect x="1135.9" y="723.0" width="10.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (131 samples, 0.85%)</title><rect x="1135.9" y="707.0" width="10.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1138.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (131 samples, 0.85%)</title><rect x="1135.9" y="691.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1138.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (131 samples, 0.85%)</title><rect x="1135.9" y="675.0" width="10.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1138.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (130 samples, 0.84%)</title><rect x="1136.0" y="659.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1139.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4 samples, 0.03%)</title><rect x="1136.7" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1139.7" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.03%)</title><rect x="1136.7" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1139.7" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.03%)</title><rect x="1136.7" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1139.7" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="1136.7" y="595.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1139.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.03%)</title><rect x="1136.7" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1139.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (114 samples, 0.74%)</title><rect x="1137.2" y="643.0" width="8.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1140.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (108 samples, 0.70%)</title><rect x="1137.6" y="627.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1140.6" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (4 samples, 0.03%)</title><rect x="1137.7" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1140.7" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (4 samples, 0.03%)</title><rect x="1137.7" y="595.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (99 samples, 0.64%)</title><rect x="1138.0" y="611.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1141.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (99 samples, 0.64%)</title><rect x="1138.0" y="595.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1141.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (99 samples, 0.64%)</title><rect x="1138.0" y="579.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1141.0" y="590.0"></text>
</g>
<g>
<title>__libc_write (95 samples, 0.62%)</title><rect x="1138.1" y="563.0" width="7.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1141.1" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (60 samples, 0.39%)</title><rect x="1140.8" y="547.0" width="4.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1143.8" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (60 samples, 0.39%)</title><rect x="1140.8" y="531.0" width="4.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1143.8" y="542.0"></text>
</g>
<g>
<title>ksys_write (43 samples, 0.28%)</title><rect x="1142.1" y="515.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1145.1" y="526.0"></text>
</g>
<g>
<title>vfs_write (35 samples, 0.23%)</title><rect x="1142.7" y="499.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1145.7" y="510.0"></text>
</g>
<g>
<title>new_sync_write (28 samples, 0.18%)</title><rect x="1142.9" y="483.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1145.9" y="494.0"></text>
</g>
<g>
<title>generic_file_write_iter (27 samples, 0.17%)</title><rect x="1142.9" y="467.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1145.9" y="478.0"></text>
</g>
<g>
<title>__generic_file_write_iter (21 samples, 0.14%)</title><rect x="1143.0" y="451.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1146.0" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (21 samples, 0.14%)</title><rect x="1143.0" y="435.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1146.0" y="446.0"></text>
</g>
<g>
<title>shmem_write_begin (10 samples, 0.06%)</title><rect x="1143.5" y="419.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1146.5" y="430.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (9 samples, 0.06%)</title><rect x="1143.6" y="403.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1146.6" y="414.0"></text>
</g>
<g>
<title>find_lock_entry (4 samples, 0.03%)</title><rect x="1143.9" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1146.9" y="398.0"></text>
</g>
<g>
<title>shmem_write_end (4 samples, 0.03%)</title><rect x="1144.3" y="419.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1147.3" y="430.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.03%)</title><rect x="1145.0" y="483.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1148.0" y="494.0"></text>
</g>
<g>
<title>selinux_file_permission (4 samples, 0.03%)</title><rect x="1145.1" y="467.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1148.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.03%)</title><rect x="1145.5" y="611.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1148.5" y="622.0"></text>
</g>
<g>
<title>[tid=13253] (62 samples, 0.40%)</title><rect x="1146.0" y="755.0" width="4.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1149.0" y="766.0"></text>
</g>
<g>
<title>start_thread (62 samples, 0.40%)</title><rect x="1146.0" y="739.0" width="4.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1149.0" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (62 samples, 0.40%)</title><rect x="1146.0" y="723.0" width="4.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1149.0" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (62 samples, 0.40%)</title><rect x="1146.0" y="707.0" width="4.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1149.0" y="718.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (61 samples, 0.39%)</title><rect x="1146.1" y="691.0" width="4.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1149.1" y="702.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (51 samples, 0.33%)</title><rect x="1146.1" y="675.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1149.1" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (45 samples, 0.29%)</title><rect x="1146.1" y="659.0" width="3.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1149.1" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (28 samples, 0.18%)</title><rect x="1147.4" y="643.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1150.4" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (6 samples, 0.04%)</title><rect x="1149.0" y="627.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1152.0" y="638.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.04%)</title><rect x="1149.5" y="659.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1152.5" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (9 samples, 0.06%)</title><rect x="1150.0" y="675.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1153.0" y="686.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (9 samples, 0.06%)</title><rect x="1150.0" y="659.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1153.0" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (9 samples, 0.06%)</title><rect x="1150.0" y="643.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.0" y="654.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (9 samples, 0.06%)</title><rect x="1150.0" y="627.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1153.0" y="638.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (9 samples, 0.06%)</title><rect x="1150.0" y="611.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1153.0" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (9 samples, 0.06%)</title><rect x="1150.0" y="595.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1153.0" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 0.04%)</title><rect x="1150.2" y="579.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1153.2" y="590.0"></text>
</g>
<g>
<title>[tid=13255] (18 samples, 0.12%)</title><rect x="1150.7" y="755.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1153.7" y="766.0"></text>
</g>
<g>
<title>start_thread (18 samples, 0.12%)</title><rect x="1150.7" y="739.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1153.7" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (18 samples, 0.12%)</title><rect x="1150.7" y="723.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1153.7" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (18 samples, 0.12%)</title><rect x="1150.7" y="707.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1153.7" y="718.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (10 samples, 0.06%)</title><rect x="1150.7" y="691.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1153.7" y="702.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (9 samples, 0.06%)</title><rect x="1150.8" y="675.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.8" y="686.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (5 samples, 0.03%)</title><rect x="1151.1" y="659.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1154.1" y="670.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (4 samples, 0.03%)</title><rect x="1151.2" y="643.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1154.2" y="654.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (6 samples, 0.04%)</title><rect x="1151.6" y="691.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1154.6" y="702.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (6 samples, 0.04%)</title><rect x="1151.6" y="675.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1154.6" y="686.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (6 samples, 0.04%)</title><rect x="1151.6" y="659.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1154.6" y="670.0"></text>
</g>
<g>
<title>[tid=13257] (4 samples, 0.03%)</title><rect x="1152.1" y="755.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1155.1" y="766.0"></text>
</g>
<g>
<title>[tid=13258] (5 samples, 0.03%)</title><rect x="1152.4" y="755.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1155.4" y="766.0"></text>
</g>
<g>
<title>[tid=13262] (251 samples, 1.63%)</title><rect x="1152.8" y="755.0" width="19.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1155.8" y="766.0"></text>
</g>
<g>
<title>start_thread (245 samples, 1.59%)</title><rect x="1153.2" y="739.0" width="18.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1156.2" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (245 samples, 1.59%)</title><rect x="1153.2" y="723.0" width="18.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1156.2" y="734.0"></text>
</g>
<g>
<title>JavaThread::run() (245 samples, 1.59%)</title><rect x="1153.2" y="707.0" width="18.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1156.2" y="718.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (245 samples, 1.59%)</title><rect x="1153.2" y="691.0" width="18.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1156.2" y="702.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (245 samples, 1.59%)</title><rect x="1153.2" y="675.0" width="18.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.2" y="686.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (245 samples, 1.59%)</title><rect x="1153.2" y="659.0" width="18.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.2" y="670.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (245 samples, 1.59%)</title><rect x="1153.2" y="643.0" width="18.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1156.2" y="654.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (245 samples, 1.59%)</title><rect x="1153.2" y="627.0" width="18.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1156.2" y="638.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (121 samples, 0.78%)</title><rect x="1153.2" y="611.0" width="9.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1156.2" y="622.0"></text>
</g>
<g>
<title>Compile::Output() (5 samples, 0.03%)</title><rect x="1153.2" y="595.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.2" y="606.0"></text>
</g>
<g>
<title>Matcher::match() (7 samples, 0.05%)</title><rect x="1153.9" y="595.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1156.9" y="606.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (7 samples, 0.05%)</title><rect x="1153.9" y="579.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1156.9" y="590.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (4 samples, 0.03%)</title><rect x="1154.1" y="563.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1157.1" y="574.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (14 samples, 0.09%)</title><rect x="1154.5" y="595.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.5" y="606.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (14 samples, 0.09%)</title><rect x="1154.5" y="579.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1157.5" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (4 samples, 0.03%)</title><rect x="1155.0" y="563.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1158.0" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (91 samples, 0.59%)</title><rect x="1155.5" y="595.0" width="7.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1158.5" y="606.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (9 samples, 0.06%)</title><rect x="1156.0" y="579.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.0" y="590.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (7 samples, 0.05%)</title><rect x="1156.2" y="563.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1159.2" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (6 samples, 0.04%)</title><rect x="1156.7" y="579.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.7" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (9 samples, 0.06%)</title><rect x="1157.1" y="579.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1160.1" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (26 samples, 0.17%)</title><rect x="1157.8" y="579.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1160.8" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (15 samples, 0.10%)</title><rect x="1158.1" y="563.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.1" y="574.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.03%)</title><rect x="1158.9" y="547.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1161.9" y="558.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (7 samples, 0.05%)</title><rect x="1159.2" y="563.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1162.2" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (6 samples, 0.04%)</title><rect x="1159.9" y="579.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1162.9" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (9 samples, 0.06%)</title><rect x="1160.5" y="579.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.5" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (4 samples, 0.03%)</title><rect x="1160.7" y="563.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1163.7" y="574.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (4 samples, 0.03%)</title><rect x="1161.3" y="579.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1164.3" y="590.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (7 samples, 0.05%)</title><rect x="1162.0" y="579.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1165.0" y="590.0"></text>
</g>
<g>
<title>Compile::Optimize() (98 samples, 0.63%)</title><rect x="1162.5" y="611.0" width="7.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.5" y="622.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (4 samples, 0.03%)</title><rect x="1162.5" y="595.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1165.5" y="606.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (4 samples, 0.03%)</title><rect x="1162.5" y="579.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1165.5" y="590.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (68 samples, 0.44%)</title><rect x="1163.1" y="595.0" width="5.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.1" y="606.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (7 samples, 0.05%)</title><rect x="1163.4" y="579.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.4" y="590.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (5 samples, 0.03%)</title><rect x="1163.9" y="579.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.9" y="590.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (35 samples, 0.23%)</title><rect x="1164.3" y="579.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1167.3" y="590.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (31 samples, 0.20%)</title><rect x="1164.6" y="563.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1167.6" y="574.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (30 samples, 0.19%)</title><rect x="1164.6" y="547.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1167.6" y="558.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (26 samples, 0.17%)</title><rect x="1164.9" y="531.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1167.9" y="542.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (4 samples, 0.03%)</title><rect x="1167.2" y="579.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1170.2" y="590.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (8 samples, 0.05%)</title><rect x="1167.5" y="579.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1170.5" y="590.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (7 samples, 0.05%)</title><rect x="1167.5" y="563.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1170.5" y="574.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (19 samples, 0.12%)</title><rect x="1168.3" y="595.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1171.3" y="606.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (17 samples, 0.11%)</title><rect x="1168.5" y="579.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1171.5" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (24 samples, 0.16%)</title><rect x="1170.1" y="611.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1173.1" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (24 samples, 0.16%)</title><rect x="1170.1" y="595.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1173.1" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (24 samples, 0.16%)</title><rect x="1170.1" y="579.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1173.1" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (24 samples, 0.16%)</title><rect x="1170.1" y="563.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1173.1" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (23 samples, 0.15%)</title><rect x="1170.1" y="547.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1173.1" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (21 samples, 0.14%)</title><rect x="1170.1" y="531.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.1" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (19 samples, 0.12%)</title><rect x="1170.2" y="515.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.2" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (19 samples, 0.12%)</title><rect x="1170.2" y="499.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.2" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (18 samples, 0.12%)</title><rect x="1170.3" y="483.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.3" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (18 samples, 0.12%)</title><rect x="1170.3" y="467.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.3" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (18 samples, 0.12%)</title><rect x="1170.3" y="451.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.3" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (14 samples, 0.09%)</title><rect x="1170.4" y="435.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1173.4" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.07%)</title><rect x="1170.5" y="419.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1173.5" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.07%)</title><rect x="1170.5" y="403.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.5" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.06%)</title><rect x="1170.5" y="387.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1173.5" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.06%)</title><rect x="1170.5" y="371.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.5" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.06%)</title><rect x="1170.5" y="355.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.5" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.04%)</title><rect x="1170.6" y="339.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1173.6" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.03%)</title><rect x="1170.7" y="323.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1173.7" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.03%)</title><rect x="1170.7" y="307.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1173.7" y="318.0"></text>
</g>
<g>
<title>[tid=13263] (26 samples, 0.17%)</title><rect x="1172.0" y="755.0" width="2.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1175.0" y="766.0"></text>
</g>
<g>
<title>start_thread (24 samples, 0.16%)</title><rect x="1172.1" y="739.0" width="1.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1175.1" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (24 samples, 0.16%)</title><rect x="1172.1" y="723.0" width="1.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1175.1" y="734.0"></text>
</g>
<g>
<title>JavaThread::run() (24 samples, 0.16%)</title><rect x="1172.1" y="707.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.1" y="718.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (24 samples, 0.16%)</title><rect x="1172.1" y="691.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1175.1" y="702.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (24 samples, 0.16%)</title><rect x="1172.1" y="675.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.1" y="686.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (22 samples, 0.14%)</title><rect x="1172.1" y="659.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.1" y="670.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (22 samples, 0.14%)</title><rect x="1172.1" y="643.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.1" y="654.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (22 samples, 0.14%)</title><rect x="1172.1" y="627.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1175.1" y="638.0"></text>
</g>
<g>
<title>Compilation::compile_method() (22 samples, 0.14%)</title><rect x="1172.1" y="611.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.1" y="622.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (21 samples, 0.14%)</title><rect x="1172.1" y="595.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.1" y="606.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (10 samples, 0.06%)</title><rect x="1172.1" y="579.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1175.1" y="590.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (7 samples, 0.05%)</title><rect x="1172.2" y="563.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.2" y="574.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (7 samples, 0.05%)</title><rect x="1172.2" y="547.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.2" y="558.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (7 samples, 0.05%)</title><rect x="1172.2" y="531.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.2" y="542.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (4 samples, 0.03%)</title><rect x="1172.4" y="515.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.4" y="526.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (4 samples, 0.03%)</title><rect x="1172.4" y="499.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.4" y="510.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (4 samples, 0.03%)</title><rect x="1172.4" y="483.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.4" y="494.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 0.03%)</title><rect x="1172.4" y="467.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.4" y="478.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 0.03%)</title><rect x="1172.4" y="451.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.4" y="462.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (4 samples, 0.03%)</title><rect x="1172.4" y="435.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.4" y="446.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (4 samples, 0.03%)</title><rect x="1172.4" y="419.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.4" y="430.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (4 samples, 0.03%)</title><rect x="1172.4" y="403.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.4" y="414.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 0.03%)</title><rect x="1172.4" y="387.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.4" y="398.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (4 samples, 0.03%)</title><rect x="1172.9" y="579.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.9" y="590.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (7 samples, 0.05%)</title><rect x="1173.2" y="579.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.2" y="590.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (5 samples, 0.03%)</title><rect x="1173.2" y="563.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1176.2" y="574.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (5 samples, 0.03%)</title><rect x="1173.2" y="547.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1176.2" y="558.0"></text>
</g>
<g>
<title>[tid=13266] (13 samples, 0.08%)</title><rect x="1174.2" y="755.0" width="1.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1177.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.03%)</title><rect x="1174.2" y="739.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1177.2" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (4 samples, 0.03%)</title><rect x="1174.2" y="723.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1177.2" y="734.0"></text>
</g>
<g>
<title>start_thread (8 samples, 0.05%)</title><rect x="1174.6" y="739.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1177.6" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (8 samples, 0.05%)</title><rect x="1174.6" y="723.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1177.6" y="734.0"></text>
</g>
<g>
<title>WatcherThread::run() (7 samples, 0.05%)</title><rect x="1174.6" y="707.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1177.6" y="718.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (7 samples, 0.05%)</title><rect x="1174.6" y="691.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1177.6" y="702.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (6 samples, 0.04%)</title><rect x="1174.7" y="675.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.7" y="686.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (4 samples, 0.03%)</title><rect x="1174.8" y="659.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.8" y="670.0"></text>
</g>
<g>
<title>[tid=13407] (65 samples, 0.42%)</title><rect x="1175.2" y="755.0" width="4.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1178.2" y="766.0"></text>
</g>
<g>
<title>start_thread (64 samples, 0.41%)</title><rect x="1175.3" y="739.0" width="4.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1178.3" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (64 samples, 0.41%)</title><rect x="1175.3" y="723.0" width="4.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1178.3" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (64 samples, 0.41%)</title><rect x="1175.3" y="707.0" width="4.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.3" y="718.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (63 samples, 0.41%)</title><rect x="1175.3" y="691.0" width="4.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.3" y="702.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (50 samples, 0.32%)</title><rect x="1175.3" y="675.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1178.3" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (44 samples, 0.28%)</title><rect x="1175.3" y="659.0" width="3.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.3" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (32 samples, 0.21%)</title><rect x="1176.2" y="643.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.2" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (6 samples, 0.04%)</title><rect x="1178.2" y="627.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.2" y="638.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.03%)</title><rect x="1178.7" y="659.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1181.7" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (11 samples, 0.07%)</title><rect x="1179.1" y="675.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.1" y="686.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (11 samples, 0.07%)</title><rect x="1179.1" y="659.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.1" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (11 samples, 0.07%)</title><rect x="1179.1" y="643.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1182.1" y="654.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (11 samples, 0.07%)</title><rect x="1179.1" y="627.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.1" y="638.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (11 samples, 0.07%)</title><rect x="1179.1" y="611.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.1" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (8 samples, 0.05%)</title><rect x="1179.1" y="595.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.1" y="606.0"></text>
</g>
<g>
<title>[tid=13408] (64 samples, 0.41%)</title><rect x="1180.1" y="755.0" width="4.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1183.1" y="766.0"></text>
</g>
<g>
<title>start_thread (64 samples, 0.41%)</title><rect x="1180.1" y="739.0" width="4.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1183.1" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (64 samples, 0.41%)</title><rect x="1180.1" y="723.0" width="4.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1183.1" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (64 samples, 0.41%)</title><rect x="1180.1" y="707.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.1" y="718.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (62 samples, 0.40%)</title><rect x="1180.2" y="691.0" width="4.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.2" y="702.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (51 samples, 0.33%)</title><rect x="1180.2" y="675.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.2" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (47 samples, 0.30%)</title><rect x="1180.2" y="659.0" width="3.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.2" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (31 samples, 0.20%)</title><rect x="1181.4" y="643.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.4" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (6 samples, 0.04%)</title><rect x="1183.4" y="627.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.4" y="638.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.03%)</title><rect x="1183.8" y="659.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1186.8" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (10 samples, 0.06%)</title><rect x="1184.1" y="675.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.1" y="686.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (10 samples, 0.06%)</title><rect x="1184.1" y="659.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.1" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (10 samples, 0.06%)</title><rect x="1184.1" y="643.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.1" y="654.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (10 samples, 0.06%)</title><rect x="1184.1" y="627.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.1" y="638.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (10 samples, 0.06%)</title><rect x="1184.1" y="611.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.1" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (8 samples, 0.05%)</title><rect x="1184.1" y="595.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.1" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.03%)</title><rect x="1184.4" y="579.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.4" y="590.0"></text>
</g>
<g>
<title>[tid=13409] (65 samples, 0.42%)</title><rect x="1185.0" y="755.0" width="5.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1188.0" y="766.0"></text>
</g>
<g>
<title>start_thread (65 samples, 0.42%)</title><rect x="1185.0" y="739.0" width="5.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1188.0" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (65 samples, 0.42%)</title><rect x="1185.0" y="723.0" width="5.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1188.0" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (65 samples, 0.42%)</title><rect x="1185.0" y="707.0" width="5.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.0" y="718.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (64 samples, 0.41%)</title><rect x="1185.1" y="691.0" width="4.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.1" y="702.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (47 samples, 0.30%)</title><rect x="1185.1" y="675.0" width="3.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.1" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (42 samples, 0.27%)</title><rect x="1185.1" y="659.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.1" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (28 samples, 0.18%)</title><rect x="1186.2" y="643.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.2" y="654.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.03%)</title><rect x="1188.3" y="659.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1191.3" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (15 samples, 0.10%)</title><rect x="1188.7" y="675.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.7" y="686.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (15 samples, 0.10%)</title><rect x="1188.7" y="659.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.7" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (15 samples, 0.10%)</title><rect x="1188.7" y="643.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.7" y="654.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (15 samples, 0.10%)</title><rect x="1188.7" y="627.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.7" y="638.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (15 samples, 0.10%)</title><rect x="1188.7" y="611.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.7" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (14 samples, 0.09%)</title><rect x="1188.7" y="595.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.7" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (9 samples, 0.06%)</title><rect x="1189.1" y="579.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.1" y="590.0"></text>
</g>
</g>
</svg>
