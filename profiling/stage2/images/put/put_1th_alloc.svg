<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="309"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="309"> </text>
<g id="frames">
<g>
<title>all (13,949 samples, 100.00%)</title><rect x="10.0" y="275.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="286.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=1798] (4,676 samples, 33.52%)</title><rect x="10.2" y="259.0" width="395.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.2" y="270.0">[NIO Selector #0 tid=1798]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (4,676 samples, 33.52%)</title><rect x="10.2" y="243.0" width="395.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.2" y="254.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (12 samples, 0.09%)</title><rect x="10.2" y="227.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.2" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (11 samples, 0.08%)</title><rect x="10.3" y="211.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="13.3" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (4,664 samples, 33.44%)</title><rect x="11.2" y="227.0" width="394.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.2" y="238.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (4,664 samples, 33.44%)</title><rect x="11.2" y="211.0" width="394.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.2" y="222.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4,664 samples, 33.44%)</title><rect x="11.2" y="195.0" width="394.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.2" y="206.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,189 samples, 15.69%)</title><rect x="11.2" y="179.0" width="185.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.2" y="190.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,189 samples, 15.69%)</title><rect x="11.2" y="163.0" width="185.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.2" y="174.0">one/nio/http/HttpServer...</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,965 samples, 14.09%)</title><rect x="11.2" y="147.0" width="166.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.2" y="158.0">RequestHandler1_entit..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (521 samples, 3.74%)</title><rect x="11.2" y="131.0" width="44.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.2" y="142.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (521 samples, 3.74%)</title><rect x="11.2" y="115.0" width="44.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.2" y="126.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (356 samples, 2.55%)</title><rect x="11.2" y="99.0" width="30.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.2" y="110.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (356 samples, 2.55%)</title><rect x="11.2" y="83.0" width="30.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.2" y="94.0">on..</text>
</g>
<g>
<title>byte[] (356 samples, 2.55%)</title><rect x="11.2" y="67.0" width="30.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="14.2" y="78.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.write (165 samples, 1.18%)</title><rect x="41.3" y="99.0" width="14.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="44.3" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (165 samples, 1.18%)</title><rect x="41.3" y="83.0" width="14.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="44.3" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (216 samples, 1.55%)</title><rect x="55.3" y="131.0" width="18.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (216 samples, 1.55%)</title><rect x="55.3" y="115.0" width="18.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="58.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (216 samples, 1.55%)</title><rect x="55.3" y="99.0" width="18.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String (101 samples, 0.72%)</title><rect x="55.3" y="83.0" width="8.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="58.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (115 samples, 0.82%)</title><rect x="63.8" y="83.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.8" y="94.0"></text>
</g>
<g>
<title>byte[] (115 samples, 0.82%)</title><rect x="63.8" y="67.0" width="9.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="66.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (1,228 samples, 8.80%)</title><rect x="73.5" y="131.0" width="103.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.5" y="142.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/String.getBytes (140 samples, 1.00%)</title><rect x="73.5" y="115.0" width="11.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (140 samples, 1.00%)</title><rect x="73.5" y="99.0" width="11.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.5" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (140 samples, 1.00%)</title><rect x="73.5" y="83.0" width="11.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (140 samples, 1.00%)</title><rect x="73.5" y="67.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.5" y="78.0"></text>
</g>
<g>
<title>byte[] (140 samples, 1.00%)</title><rect x="73.5" y="51.0" width="11.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="76.5" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (372 samples, 2.67%)</title><rect x="85.4" y="115.0" width="31.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="88.4" y="126.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (372 samples, 2.67%)</title><rect x="85.4" y="99.0" width="31.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="88.4" y="110.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (372 samples, 2.67%)</title><rect x="85.4" y="83.0" width="31.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="88.4" y="94.0">ja..</text>
</g>
<g>
<title>one.nio.http.Response (60 samples, 0.43%)</title><rect x="116.8" y="115.0" width="5.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="119.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (395 samples, 2.83%)</title><rect x="121.9" y="115.0" width="33.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.9" y="126.0">on..</text>
</g>
<g>
<title>byte[] (149 samples, 1.07%)</title><rect x="121.9" y="99.0" width="12.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="124.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (143 samples, 1.03%)</title><rect x="134.5" y="99.0" width="12.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="137.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (102 samples, 0.73%)</title><rect x="146.6" y="99.0" width="8.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="149.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (261 samples, 1.87%)</title><rect x="155.3" y="115.0" width="22.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.3" y="126.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (261 samples, 1.87%)</title><rect x="155.3" y="99.0" width="22.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="158.3" y="110.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (261 samples, 1.87%)</title><rect x="155.3" y="83.0" width="22.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.3" y="94.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (3 samples, 0.02%)</title><rect x="155.3" y="67.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="158.3" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (3 samples, 0.02%)</title><rect x="155.3" y="51.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="158.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (168 samples, 1.20%)</title><rect x="155.6" y="67.0" width="14.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="158.6" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (168 samples, 1.20%)</title><rect x="155.6" y="51.0" width="14.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="158.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (90 samples, 0.65%)</title><rect x="169.8" y="67.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="172.8" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (90 samples, 0.65%)</title><rect x="169.8" y="51.0" width="7.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="172.8" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (224 samples, 1.61%)</title><rect x="177.4" y="147.0" width="19.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="180.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (224 samples, 1.61%)</title><rect x="177.4" y="131.0" width="19.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="180.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (224 samples, 1.61%)</title><rect x="177.4" y="115.0" width="19.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.4" y="126.0"></text>
</g>
<g>
<title>java.lang.String (122 samples, 0.87%)</title><rect x="177.4" y="99.0" width="10.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="180.4" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (102 samples, 0.73%)</title><rect x="187.7" y="99.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="190.7" y="110.0"></text>
</g>
<g>
<title>byte[] (102 samples, 0.73%)</title><rect x="187.7" y="83.0" width="8.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="190.7" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,235 samples, 8.85%)</title><rect x="196.4" y="179.0" width="104.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="199.4" y="190.0">one/nio/http..</text>
</g>
<g>
<title>one.nio.http.Request (201 samples, 1.44%)</title><rect x="196.4" y="163.0" width="17.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="199.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (328 samples, 2.35%)</title><rect x="213.4" y="163.0" width="27.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="216.4" y="174.0">o..</text>
</g>
<g>
<title>java.lang.String[] (328 samples, 2.35%)</title><rect x="213.4" y="147.0" width="27.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="216.4" y="158.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (706 samples, 5.06%)</title><rect x="241.1" y="163.0" width="59.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="244.1" y="174.0">one/ni..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (706 samples, 5.06%)</title><rect x="241.1" y="147.0" width="59.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="244.1" y="158.0">one/ni..</text>
</g>
<g>
<title>char[] (377 samples, 2.70%)</title><rect x="241.1" y="131.0" width="31.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="244.1" y="142.0">ch..</text>
</g>
<g>
<title>java.lang.String (87 samples, 0.62%)</title><rect x="273.0" y="131.0" width="7.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="276.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (242 samples, 1.73%)</title><rect x="280.4" y="131.0" width="20.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="283.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (242 samples, 1.73%)</title><rect x="280.4" y="115.0" width="20.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="283.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (242 samples, 1.73%)</title><rect x="280.4" y="99.0" width="20.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="283.4" y="110.0"></text>
</g>
<g>
<title>byte[] (242 samples, 1.73%)</title><rect x="280.4" y="83.0" width="20.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="283.4" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (91 samples, 0.65%)</title><rect x="300.8" y="179.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="303.8" y="190.0"></text>
</g>
<g>
<title>byte[] (91 samples, 0.65%)</title><rect x="300.8" y="163.0" width="7.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="303.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (248 samples, 1.78%)</title><rect x="308.5" y="179.0" width="21.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="311.5" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (248 samples, 1.78%)</title><rect x="308.5" y="163.0" width="21.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.5" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (248 samples, 1.78%)</title><rect x="308.5" y="147.0" width="21.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="311.5" y="158.0"></text>
</g>
<g>
<title>java.lang.String (157 samples, 1.13%)</title><rect x="308.5" y="131.0" width="13.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="311.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (91 samples, 0.65%)</title><rect x="321.8" y="131.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="324.8" y="142.0"></text>
</g>
<g>
<title>byte[] (91 samples, 0.65%)</title><rect x="321.8" y="115.0" width="7.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="324.8" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (901 samples, 6.46%)</title><rect x="329.5" y="179.0" width="76.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="332.5" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (901 samples, 6.46%)</title><rect x="329.5" y="163.0" width="76.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="332.5" y="174.0">one/nio/..</text>
</g>
<g>
<title>char[] (504 samples, 3.61%)</title><rect x="329.5" y="147.0" width="42.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="332.5" y="158.0">char[]</text>
</g>
<g>
<title>java.lang.String (129 samples, 0.92%)</title><rect x="372.1" y="147.0" width="11.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="375.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (268 samples, 1.92%)</title><rect x="383.1" y="147.0" width="22.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="386.1" y="158.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (268 samples, 1.92%)</title><rect x="383.1" y="131.0" width="22.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="386.1" y="142.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (268 samples, 1.92%)</title><rect x="383.1" y="115.0" width="22.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="386.1" y="126.0">j..</text>
</g>
<g>
<title>byte[] (268 samples, 1.92%)</title><rect x="383.1" y="99.0" width="22.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="386.1" y="110.0">b..</text>
</g>
<g>
<title>[NIO Selector #1 tid=1799] (4,194 samples, 30.07%)</title><rect x="405.7" y="259.0" width="354.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="408.7" y="270.0">[NIO Selector #1 tid=1799]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (4,194 samples, 30.07%)</title><rect x="405.7" y="243.0" width="354.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="408.7" y="254.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (183 samples, 1.31%)</title><rect x="405.7" y="227.0" width="15.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="408.7" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (182 samples, 1.30%)</title><rect x="405.8" y="211.0" width="15.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="408.8" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (4,011 samples, 28.75%)</title><rect x="421.2" y="227.0" width="339.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="424.2" y="238.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (4,011 samples, 28.75%)</title><rect x="421.2" y="211.0" width="339.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.2" y="222.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4,011 samples, 28.75%)</title><rect x="421.2" y="195.0" width="339.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="424.2" y="206.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,925 samples, 13.80%)</title><rect x="421.2" y="179.0" width="162.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="424.2" y="190.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,925 samples, 13.80%)</title><rect x="421.2" y="163.0" width="162.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="424.2" y="174.0">one/nio/http/HttpServ..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,740 samples, 12.47%)</title><rect x="421.2" y="147.0" width="147.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="424.2" y="158.0">RequestHandler1_ent..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (418 samples, 3.00%)</title><rect x="421.2" y="131.0" width="35.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.2" y="142.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (418 samples, 3.00%)</title><rect x="421.2" y="115.0" width="35.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.2" y="126.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (298 samples, 2.14%)</title><rect x="421.2" y="99.0" width="25.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.2" y="110.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (298 samples, 2.14%)</title><rect x="421.2" y="83.0" width="25.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.2" y="94.0">o..</text>
</g>
<g>
<title>byte[] (296 samples, 2.12%)</title><rect x="421.2" y="67.0" width="25.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="424.2" y="78.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (120 samples, 0.86%)</title><rect x="446.4" y="99.0" width="10.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.4" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (120 samples, 0.86%)</title><rect x="446.4" y="83.0" width="10.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="449.4" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (192 samples, 1.38%)</title><rect x="456.6" y="131.0" width="16.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="459.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (191 samples, 1.37%)</title><rect x="456.7" y="115.0" width="16.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="459.7" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (191 samples, 1.37%)</title><rect x="456.7" y="99.0" width="16.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="459.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (83 samples, 0.60%)</title><rect x="456.7" y="83.0" width="7.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="459.7" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (108 samples, 0.77%)</title><rect x="463.7" y="83.0" width="9.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.7" y="94.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.77%)</title><rect x="463.7" y="67.0" width="9.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="466.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (1,130 samples, 8.10%)</title><rect x="472.8" y="131.0" width="95.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="475.8" y="142.0">ru/mail/pol..</text>
</g>
<g>
<title>java/lang/String.getBytes (106 samples, 0.76%)</title><rect x="472.8" y="115.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="475.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (106 samples, 0.76%)</title><rect x="472.8" y="99.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="475.8" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (106 samples, 0.76%)</title><rect x="472.8" y="83.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="475.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (106 samples, 0.76%)</title><rect x="472.8" y="67.0" width="9.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="475.8" y="78.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.76%)</title><rect x="472.8" y="51.0" width="9.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="475.8" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (328 samples, 2.35%)</title><rect x="481.8" y="115.0" width="27.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.8" y="126.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (328 samples, 2.35%)</title><rect x="481.8" y="99.0" width="27.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.8" y="110.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (328 samples, 2.35%)</title><rect x="481.8" y="83.0" width="27.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="484.8" y="94.0">j..</text>
</g>
<g>
<title>one.nio.http.Response (80 samples, 0.57%)</title><rect x="509.5" y="115.0" width="6.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="512.5" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (330 samples, 2.37%)</title><rect x="516.3" y="115.0" width="27.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.3" y="126.0">o..</text>
</g>
<g>
<title>byte[] (143 samples, 1.03%)</title><rect x="516.3" y="99.0" width="12.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="519.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (98 samples, 0.70%)</title><rect x="528.4" y="99.0" width="8.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="531.4" y="110.0"></text>
</g>
<g>
<title>java.lang.String (89 samples, 0.64%)</title><rect x="536.7" y="99.0" width="7.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="539.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (286 samples, 2.05%)</title><rect x="544.2" y="115.0" width="24.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="547.2" y="126.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (286 samples, 2.05%)</title><rect x="544.2" y="99.0" width="24.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.2" y="110.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (286 samples, 2.05%)</title><rect x="544.2" y="83.0" width="24.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.2" y="94.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (107 samples, 0.77%)</title><rect x="544.2" y="67.0" width="9.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (107 samples, 0.77%)</title><rect x="544.2" y="51.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="547.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (38 samples, 0.27%)</title><rect x="544.2" y="35.0" width="3.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="547.2" y="46.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (69 samples, 0.49%)</title><rect x="547.4" y="35.0" width="5.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="550.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (94 samples, 0.67%)</title><rect x="553.3" y="67.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="556.3" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (94 samples, 0.67%)</title><rect x="553.3" y="51.0" width="7.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="556.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (85 samples, 0.61%)</title><rect x="561.2" y="67.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.2" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (85 samples, 0.61%)</title><rect x="561.2" y="51.0" width="7.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="564.2" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (185 samples, 1.33%)</title><rect x="568.4" y="147.0" width="15.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="571.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (185 samples, 1.33%)</title><rect x="568.4" y="131.0" width="15.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="571.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (185 samples, 1.33%)</title><rect x="568.4" y="115.0" width="15.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="571.4" y="126.0"></text>
</g>
<g>
<title>java.lang.String (94 samples, 0.67%)</title><rect x="568.4" y="99.0" width="8.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="571.4" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (91 samples, 0.65%)</title><rect x="576.4" y="99.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="579.4" y="110.0"></text>
</g>
<g>
<title>byte[] (91 samples, 0.65%)</title><rect x="576.4" y="83.0" width="7.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="579.4" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,018 samples, 7.30%)</title><rect x="584.1" y="179.0" width="86.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="587.1" y="190.0">one/nio/ht..</text>
</g>
<g>
<title>one.nio.http.Request (141 samples, 1.01%)</title><rect x="584.1" y="163.0" width="11.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="587.1" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (292 samples, 2.09%)</title><rect x="596.0" y="163.0" width="24.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="599.0" y="174.0">o..</text>
</g>
<g>
<title>java.lang.String[] (292 samples, 2.09%)</title><rect x="596.0" y="147.0" width="24.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="599.0" y="158.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (585 samples, 4.19%)</title><rect x="620.7" y="163.0" width="49.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="623.7" y="174.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (585 samples, 4.19%)</title><rect x="620.7" y="147.0" width="49.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="623.7" y="158.0">one/n..</text>
</g>
<g>
<title>char[] (299 samples, 2.14%)</title><rect x="620.7" y="131.0" width="25.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="623.7" y="142.0">c..</text>
</g>
<g>
<title>java.lang.String (131 samples, 0.94%)</title><rect x="646.1" y="131.0" width="11.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="649.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (154 samples, 1.10%)</title><rect x="657.1" y="131.0" width="13.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (154 samples, 1.10%)</title><rect x="657.1" y="115.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="660.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (154 samples, 1.10%)</title><rect x="657.1" y="99.0" width="13.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="660.1" y="110.0"></text>
</g>
<g>
<title>byte[] (154 samples, 1.10%)</title><rect x="657.1" y="83.0" width="13.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="660.1" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (106 samples, 0.76%)</title><rect x="670.2" y="179.0" width="8.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.2" y="190.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.76%)</title><rect x="670.2" y="163.0" width="8.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="673.2" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (156 samples, 1.12%)</title><rect x="679.1" y="179.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.1" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (156 samples, 1.12%)</title><rect x="679.1" y="163.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="682.1" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (156 samples, 1.12%)</title><rect x="679.1" y="147.0" width="13.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.1" y="158.0"></text>
</g>
<g>
<title>java.lang.String (89 samples, 0.64%)</title><rect x="679.1" y="131.0" width="7.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="682.1" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (67 samples, 0.48%)</title><rect x="686.7" y="131.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.7" y="142.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.48%)</title><rect x="686.7" y="115.0" width="5.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="689.7" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (806 samples, 5.78%)</title><rect x="692.3" y="179.0" width="68.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.3" y="190.0">one/nio..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (806 samples, 5.78%)</title><rect x="692.3" y="163.0" width="68.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.3" y="174.0">one/nio..</text>
</g>
<g>
<title>char[] (344 samples, 2.47%)</title><rect x="692.3" y="147.0" width="29.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="695.3" y="158.0">ch..</text>
</g>
<g>
<title>java.lang.String (191 samples, 1.37%)</title><rect x="721.4" y="147.0" width="16.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="724.4" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (271 samples, 1.94%)</title><rect x="737.6" y="147.0" width="22.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="740.6" y="158.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (271 samples, 1.94%)</title><rect x="737.6" y="131.0" width="22.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.6" y="142.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (271 samples, 1.94%)</title><rect x="737.6" y="115.0" width="22.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.6" y="126.0">j..</text>
</g>
<g>
<title>byte[] (271 samples, 1.94%)</title><rect x="737.6" y="99.0" width="22.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="740.6" y="110.0">b..</text>
</g>
<g>
<title>[NIO Selector #3 tid=1801] (4,089 samples, 29.31%)</title><rect x="760.6" y="259.0" width="345.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="763.6" y="270.0">[NIO Selector #3 tid=1801]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (4,089 samples, 29.31%)</title><rect x="760.6" y="243.0" width="345.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="763.6" y="254.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (171 samples, 1.23%)</title><rect x="760.6" y="227.0" width="14.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="763.6" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (170 samples, 1.22%)</title><rect x="760.7" y="211.0" width="14.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="763.7" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,918 samples, 28.09%)</title><rect x="775.1" y="227.0" width="331.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="778.1" y="238.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3,918 samples, 28.09%)</title><rect x="775.1" y="211.0" width="331.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.1" y="222.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,918 samples, 28.09%)</title><rect x="775.1" y="195.0" width="331.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.1" y="206.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,782 samples, 12.78%)</title><rect x="775.1" y="179.0" width="150.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="778.1" y="190.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,782 samples, 12.78%)</title><rect x="775.1" y="163.0" width="150.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.1" y="174.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,593 samples, 11.42%)</title><rect x="775.1" y="147.0" width="134.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="778.1" y="158.0">RequestHandler1_e..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (414 samples, 2.97%)</title><rect x="775.1" y="131.0" width="35.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="778.1" y="142.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (414 samples, 2.97%)</title><rect x="775.1" y="115.0" width="35.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="778.1" y="126.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (298 samples, 2.14%)</title><rect x="775.1" y="99.0" width="25.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="778.1" y="110.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (298 samples, 2.14%)</title><rect x="775.1" y="83.0" width="25.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="778.1" y="94.0">o..</text>
</g>
<g>
<title>byte[] (293 samples, 2.10%)</title><rect x="775.1" y="67.0" width="24.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="778.1" y="78.0">b..</text>
</g>
<g>
<title>byte[] (5 samples, 0.04%)</title><rect x="799.9" y="67.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="802.9" y="78.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (116 samples, 0.83%)</title><rect x="800.3" y="99.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="803.3" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (116 samples, 0.83%)</title><rect x="800.3" y="83.0" width="9.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="803.3" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (193 samples, 1.38%)</title><rect x="810.1" y="131.0" width="16.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="813.1" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (193 samples, 1.38%)</title><rect x="810.1" y="115.0" width="16.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.1" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (193 samples, 1.38%)</title><rect x="810.1" y="99.0" width="16.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (72 samples, 0.52%)</title><rect x="810.1" y="83.0" width="6.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="813.1" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (121 samples, 0.87%)</title><rect x="816.2" y="83.0" width="10.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="819.2" y="94.0"></text>
</g>
<g>
<title>byte[] (121 samples, 0.87%)</title><rect x="816.2" y="67.0" width="10.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="819.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (986 samples, 7.07%)</title><rect x="826.4" y="131.0" width="83.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="829.4" y="142.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/String.getBytes (86 samples, 0.62%)</title><rect x="826.4" y="115.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="829.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (86 samples, 0.62%)</title><rect x="826.4" y="99.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="829.4" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (86 samples, 0.62%)</title><rect x="826.4" y="83.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.4" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (86 samples, 0.62%)</title><rect x="826.4" y="67.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="829.4" y="78.0"></text>
</g>
<g>
<title>byte[] (86 samples, 0.62%)</title><rect x="826.4" y="51.0" width="7.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="829.4" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (320 samples, 2.29%)</title><rect x="833.7" y="115.0" width="27.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="836.7" y="126.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (320 samples, 2.29%)</title><rect x="833.7" y="99.0" width="27.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="836.7" y="110.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (320 samples, 2.29%)</title><rect x="833.7" y="83.0" width="27.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="836.7" y="94.0">j..</text>
</g>
<g>
<title>one.nio.http.Response (75 samples, 0.54%)</title><rect x="860.8" y="115.0" width="6.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="863.8" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (323 samples, 2.32%)</title><rect x="867.1" y="115.0" width="27.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="870.1" y="126.0">o..</text>
</g>
<g>
<title>byte[] (137 samples, 0.98%)</title><rect x="867.1" y="99.0" width="11.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="870.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (104 samples, 0.75%)</title><rect x="878.7" y="99.0" width="8.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="881.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (81 samples, 0.58%)</title><rect x="887.5" y="99.0" width="6.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="890.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (182 samples, 1.30%)</title><rect x="894.4" y="115.0" width="15.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="897.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (182 samples, 1.30%)</title><rect x="894.4" y="99.0" width="15.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="897.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (182 samples, 1.30%)</title><rect x="894.4" y="83.0" width="15.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="897.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (3 samples, 0.02%)</title><rect x="894.4" y="67.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="897.4" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (3 samples, 0.02%)</title><rect x="894.4" y="51.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="897.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (89 samples, 0.64%)</title><rect x="894.7" y="67.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="897.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (89 samples, 0.64%)</title><rect x="894.7" y="51.0" width="7.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="897.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (90 samples, 0.65%)</title><rect x="902.2" y="67.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.2" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (90 samples, 0.65%)</title><rect x="902.2" y="51.0" width="7.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="905.2" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (189 samples, 1.35%)</title><rect x="909.8" y="147.0" width="16.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="912.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (189 samples, 1.35%)</title><rect x="909.8" y="131.0" width="16.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="912.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (189 samples, 1.35%)</title><rect x="909.8" y="115.0" width="16.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="912.8" y="126.0"></text>
</g>
<g>
<title>java.lang.String (77 samples, 0.55%)</title><rect x="909.8" y="99.0" width="6.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="912.8" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (112 samples, 0.80%)</title><rect x="916.3" y="99.0" width="9.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="919.3" y="110.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.80%)</title><rect x="916.3" y="83.0" width="9.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="919.3" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (986 samples, 7.07%)</title><rect x="925.8" y="179.0" width="83.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="928.8" y="190.0">one/nio/h..</text>
</g>
<g>
<title>one.nio.http.Request (142 samples, 1.02%)</title><rect x="925.8" y="163.0" width="12.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="928.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (260 samples, 1.86%)</title><rect x="937.8" y="163.0" width="22.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="940.8" y="174.0">o..</text>
</g>
<g>
<title>java.lang.String[] (260 samples, 1.86%)</title><rect x="937.8" y="147.0" width="22.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="940.8" y="158.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (584 samples, 4.19%)</title><rect x="959.8" y="163.0" width="49.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="962.8" y="174.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (584 samples, 4.19%)</title><rect x="959.8" y="147.0" width="49.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="962.8" y="158.0">one/n..</text>
</g>
<g>
<title>char[] (301 samples, 2.16%)</title><rect x="959.8" y="131.0" width="25.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="962.8" y="142.0">c..</text>
</g>
<g>
<title>java.lang.String (79 samples, 0.57%)</title><rect x="985.3" y="131.0" width="6.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="988.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (204 samples, 1.46%)</title><rect x="992.0" y="131.0" width="17.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="995.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (204 samples, 1.46%)</title><rect x="992.0" y="115.0" width="17.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="995.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (204 samples, 1.46%)</title><rect x="992.0" y="99.0" width="17.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="995.0" y="110.0"></text>
</g>
<g>
<title>byte[] (204 samples, 1.46%)</title><rect x="992.0" y="83.0" width="17.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="995.0" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (115 samples, 0.82%)</title><rect x="1009.2" y="179.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1012.2" y="190.0"></text>
</g>
<g>
<title>byte[] (115 samples, 0.82%)</title><rect x="1009.2" y="163.0" width="9.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1012.2" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (179 samples, 1.28%)</title><rect x="1019.0" y="179.0" width="15.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1022.0" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (179 samples, 1.28%)</title><rect x="1019.0" y="163.0" width="15.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1022.0" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (179 samples, 1.28%)</title><rect x="1019.0" y="147.0" width="15.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1022.0" y="158.0"></text>
</g>
<g>
<title>java.lang.String (69 samples, 0.49%)</title><rect x="1019.0" y="131.0" width="5.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1022.0" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (110 samples, 0.79%)</title><rect x="1024.8" y="131.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1027.8" y="142.0"></text>
</g>
<g>
<title>byte[] (110 samples, 0.79%)</title><rect x="1024.8" y="115.0" width="9.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1027.8" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (856 samples, 6.14%)</title><rect x="1034.1" y="179.0" width="72.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1037.1" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (856 samples, 6.14%)</title><rect x="1034.1" y="163.0" width="72.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1037.1" y="174.0">one/nio/..</text>
</g>
<g>
<title>char[] (384 samples, 2.75%)</title><rect x="1034.1" y="147.0" width="32.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1037.1" y="158.0">ch..</text>
</g>
<g>
<title>java.lang.String (141 samples, 1.01%)</title><rect x="1066.6" y="147.0" width="11.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1069.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (331 samples, 2.37%)</title><rect x="1078.5" y="147.0" width="28.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1081.5" y="158.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (331 samples, 2.37%)</title><rect x="1078.5" y="131.0" width="28.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1081.5" y="142.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (331 samples, 2.37%)</title><rect x="1078.5" y="115.0" width="28.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1081.5" y="126.0">ja..</text>
</g>
<g>
<title>byte[] (331 samples, 2.37%)</title><rect x="1078.5" y="99.0" width="28.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1081.5" y="110.0">by..</text>
</g>
<g>
<title>[pool-1-thread-1 tid=1796] (986 samples, 7.07%)</title><rect x="1106.5" y="259.0" width="83.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1109.5" y="270.0">[pool-1-t..</text>
</g>
<g>
<title>java/lang/Thread.run (986 samples, 7.07%)</title><rect x="1106.5" y="243.0" width="83.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1109.5" y="254.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (986 samples, 7.07%)</title><rect x="1106.5" y="227.0" width="83.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1109.5" y="238.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (986 samples, 7.07%)</title><rect x="1106.5" y="211.0" width="83.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1109.5" y="222.0">java/util..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (986 samples, 7.07%)</title><rect x="1106.5" y="195.0" width="83.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1109.5" y="206.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (986 samples, 7.07%)</title><rect x="1106.5" y="179.0" width="83.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1109.5" y="190.0">ru/mail/p..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (10 samples, 0.07%)</title><rect x="1106.5" y="163.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1109.5" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (10 samples, 0.07%)</title><rect x="1106.5" y="147.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1109.5" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.06%)</title><rect x="1106.6" y="131.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1109.6" y="142.0"></text>
</g>
<g>
<title>java/nio/file/Path.of (5 samples, 0.04%)</title><rect x="1107.4" y="163.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1110.4" y="174.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystem.getPath (5 samples, 0.04%)</title><rect x="1107.4" y="147.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1110.4" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 0.04%)</title><rect x="1107.4" y="131.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1110.4" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.04%)</title><rect x="1107.4" y="115.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1110.4" y="126.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 0.04%)</title><rect x="1107.4" y="99.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1110.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (970 samples, 6.95%)</title><rect x="1107.9" y="163.0" width="82.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1110.9" y="174.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/Long.valueOf (130 samples, 0.93%)</title><rect x="1107.9" y="147.0" width="11.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1110.9" y="158.0"></text>
</g>
<g>
<title>java.lang.Long (130 samples, 0.93%)</title><rect x="1107.9" y="131.0" width="11.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1110.9" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (663 samples, 4.75%)</title><rect x="1118.9" y="147.0" width="56.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1121.9" y="158.0">java/n..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (426 samples, 3.05%)</title><rect x="1118.9" y="131.0" width="36.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1121.9" y="142.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (237 samples, 1.70%)</title><rect x="1154.9" y="131.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.9" y="142.0"></text>
</g>
<g>
<title>byte[] (227 samples, 1.63%)</title><rect x="1154.9" y="115.0" width="19.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1157.9" y="126.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.07%)</title><rect x="1174.1" y="115.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1177.1" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (43 samples, 0.31%)</title><rect x="1174.9" y="147.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1177.9" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (43 samples, 0.31%)</title><rect x="1174.9" y="131.0" width="3.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1177.9" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (34 samples, 0.24%)</title><rect x="1178.7" y="147.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1181.7" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (34 samples, 0.24%)</title><rect x="1178.7" y="131.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1181.7" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (34 samples, 0.24%)</title><rect x="1178.7" y="115.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1181.7" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (34 samples, 0.24%)</title><rect x="1178.7" y="99.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1181.7" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (34 samples, 0.24%)</title><rect x="1178.7" y="83.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1181.7" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (30 samples, 0.22%)</title><rect x="1178.7" y="67.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1181.7" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.03%)</title><rect x="1181.2" y="67.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1184.2" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (3 samples, 0.02%)</title><rect x="1181.3" y="51.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1184.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (27 samples, 0.19%)</title><rect x="1181.5" y="147.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1184.5" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (27 samples, 0.19%)</title><rect x="1181.5" y="131.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1184.5" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (27 samples, 0.19%)</title><rect x="1181.5" y="115.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1184.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (72 samples, 0.52%)</title><rect x="1183.8" y="147.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1186.8" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (72 samples, 0.52%)</title><rect x="1183.8" y="131.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1186.8" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (72 samples, 0.52%)</title><rect x="1183.8" y="115.0" width="6.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1186.8" y="126.0"></text>
</g>
</g>
</svg>
