<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1126" onload="init(evt)" viewBox="0 0 1200 1126" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1109"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1109"> </text>
<g id="frames">
<g>
<title>all (4,202 samples, 100.00%)</title><rect x="10.0" y="1075.0" width="1180.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="1086.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=13275] (1,005 samples, 23.92%)</title><rect x="10.0" y="1059.0" width="282.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="1070.0">[NIO Selector #0 tid=13275]</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="10.0" y="1043.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.0" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="10.0" y="1027.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="10.0" y="1011.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="10.0" y="995.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="10.0" y="979.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="10.0" y="963.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>[unknown_Java] (14 samples, 0.33%)</title><rect x="10.3" y="1043.0" width="3.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="13.9" y="1027.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="16.9" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="13.9" y="1011.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="16.9" y="1022.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (990 samples, 23.56%)</title><rect x="14.2" y="1043.0" width="278.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.2" y="1054.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.10%)</title><rect x="14.8" y="1027.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.10%)</title><rect x="14.8" y="1011.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (128 samples, 3.05%)</title><rect x="15.9" y="1027.0" width="35.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.9" y="1038.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (127 samples, 3.02%)</title><rect x="16.2" y="1011.0" width="35.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.2" y="1022.0">one..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (101 samples, 2.40%)</title><rect x="18.1" y="995.0" width="28.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="21.1" y="1006.0">.a..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (79 samples, 1.88%)</title><rect x="24.3" y="979.0" width="22.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="27.3" y="990.0">e..</text>
</g>
<g>
<title>do_syscall_64 (79 samples, 1.88%)</title><rect x="24.3" y="963.0" width="22.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="27.3" y="974.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (75 samples, 1.78%)</title><rect x="25.4" y="947.0" width="21.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="28.4" y="958.0">_..</text>
</g>
<g>
<title>do_epoll_wait (74 samples, 1.76%)</title><rect x="25.7" y="931.0" width="20.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="28.7" y="942.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="25.7" y="915.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="28.7" y="926.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="25.7" y="899.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="28.7" y="910.0"></text>
</g>
<g>
<title>ep_poll (69 samples, 1.64%)</title><rect x="26.6" y="915.0" width="19.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="29.6" y="926.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (36 samples, 0.86%)</title><rect x="27.4" y="899.0" width="10.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="30.4" y="910.0"></text>
</g>
<g>
<title>ep_send_events_proc (20 samples, 0.48%)</title><rect x="31.3" y="883.0" width="5.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="34.3" y="894.0"></text>
</g>
<g>
<title>__list_add_valid (1 samples, 0.02%)</title><rect x="32.2" y="867.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="35.2" y="878.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (16 samples, 0.38%)</title><rect x="32.5" y="867.0" width="4.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="35.5" y="878.0"></text>
</g>
<g>
<title>sock_poll (15 samples, 0.36%)</title><rect x="32.7" y="851.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="35.7" y="862.0"></text>
</g>
<g>
<title>tcp_poll (8 samples, 0.19%)</title><rect x="34.7" y="835.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="37.7" y="846.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="36.7" y="819.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="39.7" y="830.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.05%)</title><rect x="37.0" y="883.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="40.0" y="894.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (30 samples, 0.71%)</title><rect x="37.5" y="899.0" width="8.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="40.5" y="910.0"></text>
</g>
<g>
<title>schedule (25 samples, 0.59%)</title><rect x="38.9" y="883.0" width="7.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="41.9" y="894.0"></text>
</g>
<g>
<title>__sched_text_start (23 samples, 0.55%)</title><rect x="39.5" y="867.0" width="6.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="42.5" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (23 samples, 0.55%)</title><rect x="39.5" y="851.0" width="6.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="42.5" y="862.0"></text>
</g>
<g>
<title>__mmdrop (1 samples, 0.02%)</title><rect x="45.7" y="835.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="48.7" y="846.0"></text>
</g>
<g>
<title>__free_pages_ok (1 samples, 0.02%)</title><rect x="45.7" y="819.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="48.7" y="830.0"></text>
</g>
<g>
<title>__memcg_kmem_uncharge (1 samples, 0.02%)</title><rect x="45.7" y="803.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="48.7" y="814.0"></text>
</g>
<g>
<title>page_counter_uncharge (1 samples, 0.02%)</title><rect x="45.7" y="787.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="48.7" y="798.0"></text>
</g>
<g>
<title>page_counter_cancel (1 samples, 0.02%)</title><rect x="45.7" y="771.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="48.7" y="782.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="45.9" y="915.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="48.9" y="926.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="46.2" y="915.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="49.2" y="926.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="46.5" y="995.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="49.5" y="1006.0"></text>
</g>
<g>
<title>__GI___clock_gettime (6 samples, 0.14%)</title><rect x="47.3" y="995.0" width="1.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="50.3" y="1006.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.10%)</title><rect x="47.9" y="979.0" width="1.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="50.9" y="990.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="49.0" y="995.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="52.0" y="1006.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.05%)</title><rect x="49.3" y="995.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="52.3" y="1006.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (7 samples, 0.17%)</title><rect x="49.9" y="995.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="52.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (856 samples, 20.37%)</title><rect x="51.8" y="1027.0" width="240.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.8" y="1038.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (851 samples, 20.25%)</title><rect x="52.4" y="1011.0" width="239.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="55.4" y="1022.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (708 samples, 16.85%)</title><rect x="52.7" y="995.0" width="198.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.7" y="1006.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (646 samples, 15.37%)</title><rect x="58.9" y="979.0" width="181.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.9" y="990.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (644 samples, 15.33%)</title><rect x="59.4" y="963.0" width="180.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.4" y="974.0">one/nio/http/HttpServer..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (632 samples, 15.04%)</title><rect x="59.4" y="947.0" width="177.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.4" y="958.0">RequestHandler1_entity...</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (522 samples, 12.42%)</title><rect x="59.4" y="931.0" width="146.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.4" y="942.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.10%)</title><rect x="60.5" y="915.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="63.5" y="926.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.10%)</title><rect x="60.5" y="899.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="63.5" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.10%)</title><rect x="60.5" y="883.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.5" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (514 samples, 12.23%)</title><rect x="61.7" y="915.0" width="144.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.7" y="926.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (15 samples, 0.36%)</title><rect x="61.7" y="899.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="64.7" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="62.5" y="883.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="65.5" y="894.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="62.8" y="883.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="65.8" y="894.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (10 samples, 0.24%)</title><rect x="63.1" y="883.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.1" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.17%)</title><rect x="63.1" y="867.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.05%)</title><rect x="64.5" y="851.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="64.8" y="835.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="67.8" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.07%)</title><rect x="65.0" y="867.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.0" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.07%)</title><rect x="65.0" y="851.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.05%)</title><rect x="65.3" y="835.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.05%)</title><rect x="65.3" y="819.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.3" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (499 samples, 11.88%)</title><rect x="65.9" y="899.0" width="140.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="68.9" y="910.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session.write (497 samples, 11.83%)</title><rect x="66.4" y="883.0" width="139.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.4" y="894.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (495 samples, 11.78%)</title><rect x="66.7" y="867.0" width="139.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.7" y="878.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (494 samples, 11.76%)</title><rect x="67.0" y="851.0" width="138.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.0" y="862.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>.annobin_send.c (485 samples, 11.54%)</title><rect x="67.6" y="835.0" width="136.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="70.6" y="846.0">.annobin_send.c</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.10%)</title><rect x="72.3" y="819.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="75.3" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (464 samples, 11.04%)</title><rect x="73.5" y="819.0" width="130.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="76.5" y="830.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (464 samples, 11.04%)</title><rect x="73.5" y="803.0" width="130.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="76.5" y="814.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (458 samples, 10.90%)</title><rect x="75.1" y="787.0" width="128.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="78.1" y="798.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (456 samples, 10.85%)</title><rect x="75.7" y="771.0" width="128.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="78.7" y="782.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="76.3" y="755.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="79.3" y="766.0"></text>
</g>
<g>
<title>sock_sendmsg (451 samples, 10.73%)</title><rect x="76.6" y="755.0" width="126.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="79.6" y="766.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.10%)</title><rect x="76.8" y="739.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="79.8" y="750.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (2 samples, 0.05%)</title><rect x="76.8" y="723.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="79.8" y="734.0"></text>
</g>
<g>
<title>sock_has_perm (2 samples, 0.05%)</title><rect x="77.4" y="723.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="80.4" y="734.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.05%)</title><rect x="77.4" y="707.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="80.4" y="718.0"></text>
</g>
<g>
<title>tcp_sendmsg (446 samples, 10.61%)</title><rect x="78.0" y="739.0" width="125.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="81.0" y="750.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="78.0" y="723.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="81.0" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="78.0" y="707.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="81.0" y="718.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="78.2" y="723.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="81.2" y="734.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (444 samples, 10.57%)</title><rect x="78.5" y="723.0" width="124.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="81.5" y="734.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.10%)</title><rect x="79.1" y="707.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="82.1" y="718.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="79.4" y="691.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="82.4" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="79.6" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="82.6" y="702.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.02%)</title><rect x="79.9" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="82.9" y="702.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (401 samples, 9.54%)</title><rect x="80.2" y="707.0" width="112.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="83.2" y="718.0">__tcp_push_pen..</text>
</g>
<g>
<title>tcp_write_xmit (401 samples, 9.54%)</title><rect x="80.2" y="691.0" width="112.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="83.2" y="702.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (386 samples, 9.19%)</title><rect x="81.9" y="675.0" width="108.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="84.9" y="686.0">__tcp_transmi..</text>
</g>
<g>
<title>__ip_queue_xmit (371 samples, 8.83%)</title><rect x="84.1" y="659.0" width="104.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="87.1" y="670.0">__ip_queue_x..</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.10%)</title><rect x="85.0" y="643.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="88.0" y="654.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="85.5" y="627.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="88.5" y="638.0"></text>
</g>
<g>
<title>ip_local_out (80 samples, 1.90%)</title><rect x="86.1" y="643.0" width="22.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="89.1" y="654.0">i..</text>
</g>
<g>
<title>__ip_local_out (79 samples, 1.88%)</title><rect x="86.4" y="627.0" width="22.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="89.4" y="638.0">_..</text>
</g>
<g>
<title>ip_send_check (2 samples, 0.05%)</title><rect x="86.4" y="611.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="89.4" y="622.0"></text>
</g>
<g>
<title>nf_hook_slow (77 samples, 1.83%)</title><rect x="86.9" y="611.0" width="21.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="89.9" y="622.0">n..</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (25 samples, 0.59%)</title><rect x="87.2" y="595.0" width="7.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="90.2" y="606.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (3 samples, 0.07%)</title><rect x="94.2" y="595.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="97.2" y="606.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (7 samples, 0.17%)</title><rect x="95.1" y="595.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="98.1" y="606.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.14%)</title><rect x="95.4" y="579.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="98.4" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="96.8" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="99.8" y="574.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (1 samples, 0.02%)</title><rect x="97.1" y="595.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="100.1" y="606.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (1 samples, 0.02%)</title><rect x="97.3" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="100.3" y="606.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (4 samples, 0.10%)</title><rect x="97.6" y="595.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="100.6" y="606.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (25 samples, 0.59%)</title><rect x="98.7" y="595.0" width="7.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="101.7" y="606.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (5 samples, 0.12%)</title><rect x="99.6" y="579.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="102.6" y="590.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (2 samples, 0.05%)</title><rect x="101.0" y="579.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="104.0" y="590.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (1 samples, 0.02%)</title><rect x="101.5" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="104.5" y="590.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (10 samples, 0.24%)</title><rect x="101.8" y="579.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="104.8" y="590.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (4 samples, 0.10%)</title><rect x="103.5" y="563.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="106.5" y="574.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (4 samples, 0.10%)</title><rect x="104.6" y="579.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="107.6" y="590.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (6 samples, 0.14%)</title><rect x="105.8" y="595.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="108.8" y="606.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="106.6" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="109.6" y="590.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (2 samples, 0.05%)</title><rect x="106.9" y="579.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="109.9" y="590.0"></text>
</g>
<g>
<title>selinux_ipv4_output (4 samples, 0.10%)</title><rect x="107.4" y="595.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="110.4" y="606.0"></text>
</g>
<g>
<title>netlbl_enabled (2 samples, 0.05%)</title><rect x="108.0" y="579.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="111.0" y="590.0"></text>
</g>
<g>
<title>ip_output (284 samples, 6.76%)</title><rect x="108.6" y="643.0" width="79.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="111.6" y="654.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (270 samples, 6.43%)</title><rect x="108.8" y="627.0" width="75.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="111.8" y="638.0">ip_finis..</text>
</g>
<g>
<title>__dev_queue_xmit (19 samples, 0.45%)</title><rect x="110.3" y="611.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="113.3" y="622.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (11 samples, 0.26%)</title><rect x="112.2" y="595.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="115.2" y="606.0"></text>
</g>
<g>
<title>loopback_xmit (10 samples, 0.24%)</title><rect x="112.5" y="579.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="115.5" y="590.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="113.1" y="563.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="116.1" y="574.0"></text>
</g>
<g>
<title>netif_rx (7 samples, 0.17%)</title><rect x="113.3" y="563.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="116.3" y="574.0"></text>
</g>
<g>
<title>netif_rx_internal (7 samples, 0.17%)</title><rect x="113.3" y="547.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="116.3" y="558.0"></text>
</g>
<g>
<title>enqueue_to_backlog (7 samples, 0.17%)</title><rect x="113.3" y="531.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="116.3" y="542.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="115.3" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="118.3" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (246 samples, 5.85%)</title><rect x="115.6" y="611.0" width="69.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="118.6" y="622.0">__local..</text>
</g>
<g>
<title>do_softirq.part.0 (244 samples, 5.81%)</title><rect x="116.1" y="595.0" width="68.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="119.1" y="606.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (239 samples, 5.69%)</title><rect x="117.6" y="579.0" width="67.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="120.6" y="590.0">do_soft..</text>
</g>
<g>
<title>__softirqentry_text_start (239 samples, 5.69%)</title><rect x="117.6" y="563.0" width="67.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="120.6" y="574.0">__softi..</text>
</g>
<g>
<title>net_rx_action (230 samples, 5.47%)</title><rect x="120.1" y="547.0" width="64.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="123.1" y="558.0">net_rx_..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.05%)</title><rect x="121.2" y="531.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="124.2" y="542.0"></text>
</g>
<g>
<title>__list_del_entry_valid (1 samples, 0.02%)</title><rect x="121.8" y="531.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="124.8" y="542.0"></text>
</g>
<g>
<title>process_backlog (223 samples, 5.31%)</title><rect x="122.0" y="531.0" width="62.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="125.0" y="542.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (217 samples, 5.16%)</title><rect x="123.7" y="515.0" width="61.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="126.7" y="526.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.10%)</title><rect x="123.7" y="499.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="126.7" y="510.0"></text>
</g>
<g>
<title>ip_rcv (213 samples, 5.07%)</title><rect x="124.9" y="499.0" width="59.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="127.9" y="510.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (165 samples, 3.93%)</title><rect x="125.1" y="483.0" width="46.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="128.1" y="494.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (139 samples, 3.31%)</title><rect x="125.7" y="467.0" width="39.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="128.7" y="478.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (138 samples, 3.28%)</title><rect x="126.0" y="451.0" width="38.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="129.0" y="462.0">ip_..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.05%)</title><rect x="126.5" y="435.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="129.5" y="446.0"></text>
</g>
<g>
<title>tcp_v4_rcv (134 samples, 3.19%)</title><rect x="127.1" y="435.0" width="37.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="130.1" y="446.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.12%)</title><rect x="127.7" y="419.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="130.7" y="430.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.05%)</title><rect x="128.5" y="403.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="131.5" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="129.1" y="419.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="132.1" y="430.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (125 samples, 2.97%)</title><rect x="129.3" y="419.0" width="35.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="132.3" y="430.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (125 samples, 2.97%)</title><rect x="129.3" y="403.0" width="35.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="132.3" y="414.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="129.9" y="387.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="132.9" y="398.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="130.2" y="387.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="133.2" y="398.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="130.2" y="371.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="133.2" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="130.5" y="355.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="133.5" y="366.0"></text>
</g>
<g>
<title>tcp_ack (19 samples, 0.45%)</title><rect x="130.8" y="387.0" width="5.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="133.8" y="398.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.14%)</title><rect x="131.9" y="371.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="134.9" y="382.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.07%)</title><rect x="131.9" y="355.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="134.9" y="366.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="132.7" y="355.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="135.7" y="366.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="132.7" y="339.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="135.7" y="350.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="133.0" y="355.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="136.0" y="366.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.07%)</title><rect x="133.6" y="371.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="136.6" y="382.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="134.4" y="371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="137.4" y="382.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.05%)</title><rect x="134.7" y="371.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="137.7" y="382.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="135.0" y="355.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="138.0" y="366.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.02%)</title><rect x="135.2" y="371.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="138.2" y="382.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="135.5" y="371.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="138.5" y="382.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="135.8" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="138.8" y="382.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.07%)</title><rect x="136.1" y="387.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="139.1" y="398.0"></text>
</g>
<g>
<title>tcp_data_queue (95 samples, 2.26%)</title><rect x="136.9" y="387.0" width="26.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="139.9" y="398.0">t..</text>
</g>
<g>
<title>sock_def_readable (87 samples, 2.07%)</title><rect x="138.6" y="371.0" width="24.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="141.6" y="382.0">s..</text>
</g>
<g>
<title>__wake_up_common_lock (84 samples, 2.00%)</title><rect x="139.5" y="355.0" width="23.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="142.5" y="366.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (84 samples, 2.00%)</title><rect x="139.5" y="339.0" width="23.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="142.5" y="350.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.05%)</title><rect x="163.0" y="371.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="166.0" y="382.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="163.6" y="387.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="166.6" y="398.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="163.9" y="371.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="166.9" y="382.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="163.9" y="355.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="166.9" y="366.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.02%)</title><rect x="164.2" y="387.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="167.2" y="398.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="164.5" y="419.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="167.5" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (24 samples, 0.57%)</title><rect x="164.7" y="467.0" width="6.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="167.7" y="478.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (20 samples, 0.48%)</title><rect x="165.0" y="451.0" width="5.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="168.0" y="462.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (3 samples, 0.07%)</title><rect x="168.7" y="435.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="171.7" y="446.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (4 samples, 0.10%)</title><rect x="169.5" y="435.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="172.5" y="446.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (1 samples, 0.02%)</title><rect x="170.6" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="173.6" y="462.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="170.9" y="451.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="173.9" y="462.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (1 samples, 0.02%)</title><rect x="171.2" y="451.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="174.2" y="462.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.07%)</title><rect x="171.5" y="483.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="174.5" y="494.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="172.3" y="483.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="175.3" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (43 samples, 1.02%)</title><rect x="172.6" y="483.0" width="12.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="175.6" y="494.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="172.6" y="467.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="175.6" y="478.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (3 samples, 0.07%)</title><rect x="172.9" y="467.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="175.9" y="478.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (30 samples, 0.71%)</title><rect x="173.7" y="467.0" width="8.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="176.7" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="181.9" y="451.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="184.9" y="462.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (1 samples, 0.02%)</title><rect x="182.1" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="185.1" y="478.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (2 samples, 0.05%)</title><rect x="182.4" y="467.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="185.4" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (2 samples, 0.05%)</title><rect x="183.0" y="467.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="186.0" y="478.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (4 samples, 0.10%)</title><rect x="183.5" y="467.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="186.5" y="478.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="183.8" y="451.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="186.8" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="184.1" y="451.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="187.1" y="462.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (1 samples, 0.02%)</title><rect x="184.4" y="451.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="187.4" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.31%)</title><rect x="184.7" y="627.0" width="3.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="187.7" y="638.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.12%)</title><rect x="185.0" y="611.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="188.0" y="622.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (1 samples, 0.02%)</title><rect x="186.4" y="611.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="189.4" y="622.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (2 samples, 0.05%)</title><rect x="186.6" y="611.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="189.6" y="622.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (1 samples, 0.02%)</title><rect x="186.9" y="595.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="189.9" y="606.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (1 samples, 0.02%)</title><rect x="187.2" y="611.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="190.2" y="622.0"></text>
</g>
<g>
<title>selinux_ip_postroute (3 samples, 0.07%)</title><rect x="187.5" y="611.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="190.5" y="622.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.07%)</title><rect x="188.3" y="659.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="191.3" y="670.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="188.9" y="643.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="191.9" y="654.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.05%)</title><rect x="189.2" y="659.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="192.2" y="670.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.02%)</title><rect x="189.7" y="659.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="192.7" y="670.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="190.0" y="659.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="193.0" y="670.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.05%)</title><rect x="190.3" y="675.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="193.3" y="686.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="190.6" y="659.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="193.6" y="670.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.02%)</title><rect x="190.8" y="675.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="193.8" y="686.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.07%)</title><rect x="191.1" y="675.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="194.1" y="686.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="191.4" y="659.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="194.4" y="670.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="191.4" y="643.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="194.4" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="191.4" y="627.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="194.4" y="638.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="191.7" y="659.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="194.7" y="670.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="191.7" y="643.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="194.7" y="654.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.05%)</title><rect x="192.0" y="675.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="195.0" y="686.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.02%)</title><rect x="192.5" y="675.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="195.5" y="686.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.12%)</title><rect x="192.8" y="707.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="195.8" y="718.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.05%)</title><rect x="193.4" y="691.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="196.4" y="702.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.05%)</title><rect x="193.4" y="675.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="196.4" y="686.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="193.9" y="691.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="196.9" y="702.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (20 samples, 0.48%)</title><rect x="194.2" y="707.0" width="5.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="197.2" y="718.0"></text>
</g>
<g>
<title>__alloc_skb (19 samples, 0.45%)</title><rect x="194.2" y="691.0" width="5.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="197.2" y="702.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (9 samples, 0.21%)</title><rect x="194.8" y="675.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="197.8" y="686.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (8 samples, 0.19%)</title><rect x="195.1" y="659.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="198.1" y="670.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="197.0" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="200.0" y="654.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.12%)</title><rect x="197.3" y="675.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="200.3" y="686.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.02%)</title><rect x="198.4" y="659.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="201.4" y="670.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.07%)</title><rect x="198.7" y="675.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="201.7" y="686.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="199.6" y="691.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="202.6" y="702.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.05%)</title><rect x="199.8" y="707.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="202.8" y="718.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.02%)</title><rect x="200.1" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="203.1" y="702.0"></text>
</g>
<g>
<title>tcp_send_mss (9 samples, 0.21%)</title><rect x="200.4" y="707.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="203.4" y="718.0"></text>
</g>
<g>
<title>tcp_current_mss (9 samples, 0.21%)</title><rect x="200.4" y="691.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="203.4" y="702.0"></text>
</g>
<g>
<title>ipv4_mtu (5 samples, 0.12%)</title><rect x="201.5" y="675.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="204.5" y="686.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="202.9" y="707.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="205.9" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.05%)</title><rect x="203.2" y="755.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="206.2" y="766.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="203.2" y="739.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="206.2" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="203.5" y="723.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="206.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="203.8" y="835.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="206.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="203.8" y="819.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="206.8" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.10%)</title><rect x="203.8" y="803.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="206.8" y="814.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="204.0" y="787.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="207.0" y="798.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="204.3" y="787.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="207.3" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="204.6" y="771.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="207.6" y="782.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.07%)</title><rect x="204.9" y="835.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="207.9" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="205.7" y="867.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="208.7" y="878.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="205.7" y="851.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="208.7" y="862.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="205.7" y="835.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="208.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.14%)</title><rect x="206.0" y="931.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="209.0" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="206.0" y="915.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="209.0" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="206.0" y="899.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.0" y="910.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (3 samples, 0.07%)</title><rect x="206.6" y="915.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="209.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.05%)</title><rect x="206.6" y="899.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.6" y="910.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.02%)</title><rect x="207.1" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="210.1" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="207.4" y="915.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="210.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (104 samples, 2.48%)</title><rect x="207.7" y="931.0" width="29.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.7" y="942.0">ru..</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.07%)</title><rect x="208.0" y="915.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="211.0" y="926.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.07%)</title><rect x="208.0" y="899.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="211.0" y="910.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.07%)</title><rect x="208.0" y="883.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="211.0" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.12%)</title><rect x="208.8" y="915.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.8" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (2 samples, 0.05%)</title><rect x="210.2" y="915.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="213.2" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (2 samples, 0.05%)</title><rect x="210.2" y="899.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="213.2" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (2 samples, 0.05%)</title><rect x="210.2" y="883.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="213.2" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.&lt;init&gt; (2 samples, 0.05%)</title><rect x="210.2" y="867.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="213.2" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.&lt;init&gt; (2 samples, 0.05%)</title><rect x="210.2" y="851.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="213.2" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (93 samples, 2.21%)</title><rect x="210.8" y="915.0" width="26.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="213.8" y="926.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (93 samples, 2.21%)</title><rect x="210.8" y="899.0" width="26.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="213.8" y="910.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (92 samples, 2.19%)</title><rect x="211.1" y="883.0" width="25.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.1" y="894.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (91 samples, 2.17%)</title><rect x="211.3" y="867.0" width="25.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="214.3" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (91 samples, 2.17%)</title><rect x="211.3" y="851.0" width="25.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.3" y="862.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.12%)</title><rect x="211.9" y="835.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.9" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.12%)</title><rect x="211.9" y="819.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="214.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (32 samples, 0.76%)</title><rect x="213.3" y="835.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="216.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.05%)</title><rect x="222.3" y="835.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="225.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.02%)</title><rect x="222.6" y="819.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="225.6" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="222.6" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="225.6" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="222.6" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.6" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="222.6" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="225.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (50 samples, 1.19%)</title><rect x="222.9" y="835.0" width="14.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="225.9" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (49 samples, 1.17%)</title><rect x="223.1" y="819.0" width="13.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="226.1" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (38 samples, 0.90%)</title><rect x="226.2" y="803.0" width="10.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="229.2" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="227.6" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.6" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.05%)</title><rect x="227.9" y="787.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.9" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (29 samples, 0.69%)</title><rect x="228.5" y="787.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="231.5" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (14 samples, 0.33%)</title><rect x="231.3" y="771.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="234.3" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="233.8" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="236.8" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.10%)</title><rect x="234.1" y="755.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (3 samples, 0.07%)</title><rect x="235.2" y="771.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (1 samples, 0.02%)</title><rect x="235.8" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="238.8" y="766.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="236.1" y="771.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="239.1" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="236.6" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="239.6" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="236.6" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="239.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (2 samples, 0.05%)</title><rect x="236.9" y="947.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="239.9" y="958.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.17%)</title><rect x="237.5" y="947.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="240.5" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.17%)</title><rect x="237.5" y="931.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="240.5" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.10%)</title><rect x="237.5" y="915.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="240.5" y="926.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.02%)</title><rect x="238.3" y="899.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="241.3" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.07%)</title><rect x="238.6" y="915.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="241.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.07%)</title><rect x="238.6" y="899.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="241.6" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="239.1" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.1" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.07%)</title><rect x="239.4" y="947.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="242.4" y="958.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.07%)</title><rect x="239.4" y="931.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.4" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="239.4" y="915.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="242.4" y="926.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="239.7" y="899.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="242.7" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (30 samples, 0.71%)</title><rect x="240.3" y="979.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="243.3" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.05%)</title><rect x="245.0" y="963.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="248.0" y="974.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="245.0" y="947.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="248.0" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="245.0" y="931.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.0" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="245.0" y="915.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="248.0" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.10%)</title><rect x="245.6" y="963.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="248.6" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.10%)</title><rect x="245.6" y="947.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="248.6" y="958.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.02%)</title><rect x="246.4" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.4" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (7 samples, 0.17%)</title><rect x="246.7" y="963.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="249.7" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.07%)</title><rect x="248.7" y="979.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="251.7" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.17%)</title><rect x="249.5" y="979.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.5" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.17%)</title><rect x="249.5" y="963.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.5" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (142 samples, 3.38%)</title><rect x="251.5" y="995.0" width="39.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="254.5" y="1006.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (142 samples, 3.38%)</title><rect x="251.5" y="979.0" width="39.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="254.5" y="990.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.02%)</title><rect x="253.5" y="963.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="256.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.62%)</title><rect x="253.8" y="963.0" width="7.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="256.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.62%)</title><rect x="253.8" y="947.0" width="7.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="256.8" y="958.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (21 samples, 0.50%)</title><rect x="253.8" y="931.0" width="5.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="256.8" y="942.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="253.8" y="915.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="256.8" y="926.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="254.0" y="915.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="257.0" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="254.6" y="915.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="257.6" y="926.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.07%)</title><rect x="254.9" y="915.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="257.9" y="926.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (14 samples, 0.33%)</title><rect x="255.7" y="915.0" width="3.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="258.7" y="926.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (7 samples, 0.17%)</title><rect x="256.6" y="899.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="259.6" y="910.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="258.5" y="899.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="261.5" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.05%)</title><rect x="259.1" y="899.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="262.1" y="910.0"></text>
</g>
<g>
<title>__libc_recv (3 samples, 0.07%)</title><rect x="259.6" y="931.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="262.6" y="942.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.05%)</title><rect x="260.5" y="931.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="263.5" y="942.0"></text>
</g>
<g>
<title>__libc_recv (108 samples, 2.57%)</title><rect x="261.1" y="963.0" width="30.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="264.1" y="974.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (80 samples, 1.90%)</title><rect x="268.9" y="947.0" width="22.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="271.9" y="958.0">e..</text>
</g>
<g>
<title>do_syscall_64 (80 samples, 1.90%)</title><rect x="268.9" y="931.0" width="22.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="271.9" y="942.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (67 samples, 1.59%)</title><rect x="272.6" y="915.0" width="18.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="275.6" y="926.0"></text>
</g>
<g>
<title>__sys_recvfrom (67 samples, 1.59%)</title><rect x="272.6" y="899.0" width="18.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="275.6" y="910.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="272.8" y="883.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="275.8" y="894.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="273.1" y="883.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="276.1" y="894.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.05%)</title><rect x="273.4" y="883.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="276.4" y="894.0"></text>
</g>
<g>
<title>inet_recvmsg (36 samples, 0.86%)</title><rect x="274.0" y="883.0" width="10.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="277.0" y="894.0"></text>
</g>
<g>
<title>tcp_recvmsg (36 samples, 0.86%)</title><rect x="274.0" y="867.0" width="10.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="277.0" y="878.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.07%)</title><rect x="275.9" y="851.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="278.9" y="862.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="275.9" y="835.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="278.9" y="846.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="275.9" y="819.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="278.9" y="830.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.02%)</title><rect x="275.9" y="803.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="278.9" y="814.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="276.2" y="835.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="279.2" y="846.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="276.8" y="851.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="279.8" y="862.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="277.1" y="851.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="280.1" y="862.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="277.3" y="851.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="280.3" y="862.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="277.3" y="835.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="280.3" y="846.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (13 samples, 0.31%)</title><rect x="277.6" y="851.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="280.6" y="862.0"></text>
</g>
<g>
<title>__skb_datagram_iter (13 samples, 0.31%)</title><rect x="277.6" y="835.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="280.6" y="846.0"></text>
</g>
<g>
<title>_copy_to_iter (6 samples, 0.14%)</title><rect x="277.6" y="819.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="280.6" y="830.0"></text>
</g>
<g>
<title>copyout (6 samples, 0.14%)</title><rect x="277.6" y="803.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="280.6" y="814.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.12%)</title><rect x="277.9" y="787.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="280.9" y="798.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.17%)</title><rect x="279.3" y="819.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="282.3" y="830.0"></text>
</g>
<g>
<title>__check_object_size (7 samples, 0.17%)</title><rect x="279.3" y="803.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="282.3" y="814.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.10%)</title><rect x="279.9" y="787.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="282.9" y="798.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.02%)</title><rect x="281.0" y="787.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="284.0" y="798.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (5 samples, 0.12%)</title><rect x="281.3" y="851.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="284.3" y="862.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.05%)</title><rect x="282.1" y="835.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="285.1" y="846.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.07%)</title><rect x="282.7" y="851.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="285.7" y="862.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.07%)</title><rect x="282.7" y="835.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="285.7" y="846.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="283.2" y="819.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="286.2" y="830.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (2 samples, 0.05%)</title><rect x="283.5" y="851.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="286.5" y="862.0"></text>
</g>
<g>
<title>sock_recvmsg (17 samples, 0.40%)</title><rect x="284.1" y="883.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="287.1" y="894.0"></text>
</g>
<g>
<title>security_socket_recvmsg (17 samples, 0.40%)</title><rect x="284.1" y="867.0" width="4.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="287.1" y="878.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (1 samples, 0.02%)</title><rect x="284.6" y="851.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="287.6" y="862.0"></text>
</g>
<g>
<title>sock_has_perm (14 samples, 0.33%)</title><rect x="284.9" y="851.0" width="4.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="287.9" y="862.0"></text>
</g>
<g>
<title>avc_has_perm (10 samples, 0.24%)</title><rect x="286.0" y="835.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="289.0" y="846.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.21%)</title><rect x="288.9" y="883.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="291.9" y="894.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.21%)</title><rect x="288.9" y="867.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="291.9" y="878.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.19%)</title><rect x="289.1" y="851.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="292.1" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.07%)</title><rect x="291.4" y="1011.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="294.4" y="1022.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.07%)</title><rect x="291.4" y="995.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="294.4" y="1006.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="291.7" y="979.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="294.7" y="990.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=13276] (998 samples, 23.75%)</title><rect x="292.2" y="1059.0" width="280.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="295.2" y="1070.0">[NIO Selector #1 tid=13276]</text>
</g>
<g>
<title>[unknown_Java] (11 samples, 0.26%)</title><rect x="292.2" y="1043.0" width="3.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="295.2" y="1054.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="295.0" y="1027.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="298.0" y="1038.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (987 samples, 23.49%)</title><rect x="295.3" y="1043.0" width="277.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.3" y="1054.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (167 samples, 3.97%)</title><rect x="296.2" y="1027.0" width="46.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="299.2" y="1038.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (5 samples, 0.12%)</title><rect x="296.7" y="1011.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="299.7" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.07%)</title><rect x="297.3" y="995.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="300.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (160 samples, 3.81%)</title><rect x="298.1" y="1011.0" width="45.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="301.1" y="1022.0">one/..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (127 samples, 3.02%)</title><rect x="300.6" y="995.0" width="35.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="303.6" y="1006.0">.an..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (105 samples, 2.50%)</title><rect x="306.8" y="979.0" width="29.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="309.8" y="990.0">en..</text>
</g>
<g>
<title>do_syscall_64 (105 samples, 2.50%)</title><rect x="306.8" y="963.0" width="29.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="309.8" y="974.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (95 samples, 2.26%)</title><rect x="309.6" y="947.0" width="26.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="312.6" y="958.0">_..</text>
</g>
<g>
<title>do_epoll_wait (95 samples, 2.26%)</title><rect x="309.6" y="931.0" width="26.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="312.6" y="942.0">d..</text>
</g>
<g>
<title>__fget_light (5 samples, 0.12%)</title><rect x="309.9" y="915.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="312.9" y="926.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.12%)</title><rect x="309.9" y="899.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="312.9" y="910.0"></text>
</g>
<g>
<title>ep_poll (83 samples, 1.98%)</title><rect x="311.3" y="915.0" width="23.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="314.3" y="926.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (36 samples, 0.86%)</title><rect x="314.4" y="899.0" width="10.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="317.4" y="910.0"></text>
</g>
<g>
<title>ep_send_events_proc (21 samples, 0.50%)</title><rect x="317.5" y="883.0" width="5.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="320.5" y="894.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (18 samples, 0.43%)</title><rect x="318.3" y="867.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="321.3" y="878.0"></text>
</g>
<g>
<title>sock_poll (17 samples, 0.40%)</title><rect x="318.6" y="851.0" width="4.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="321.6" y="862.0"></text>
</g>
<g>
<title>tcp_poll (10 samples, 0.24%)</title><rect x="320.6" y="835.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="323.6" y="846.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="323.1" y="819.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="326.1" y="830.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.05%)</title><rect x="323.4" y="883.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="326.4" y="894.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.05%)</title><rect x="324.0" y="883.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="327.0" y="894.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (36 samples, 0.86%)</title><rect x="324.5" y="899.0" width="10.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="327.5" y="910.0"></text>
</g>
<g>
<title>schedule (34 samples, 0.81%)</title><rect x="325.1" y="883.0" width="9.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="328.1" y="894.0"></text>
</g>
<g>
<title>__sched_text_start (29 samples, 0.69%)</title><rect x="326.5" y="867.0" width="8.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="329.5" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (28 samples, 0.67%)</title><rect x="326.8" y="851.0" width="7.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="329.8" y="862.0"></text>
</g>
<g>
<title>fput_many (6 samples, 0.14%)</title><rect x="334.6" y="915.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="337.6" y="926.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.05%)</title><rect x="336.3" y="995.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="339.3" y="1006.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="336.9" y="995.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="339.9" y="1006.0"></text>
</g>
<g>
<title>__GI___clock_gettime (16 samples, 0.38%)</title><rect x="337.7" y="995.0" width="4.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="340.7" y="1006.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.10%)</title><rect x="341.1" y="979.0" width="1.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="344.1" y="990.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="342.2" y="995.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="345.2" y="1006.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="342.5" y="995.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="345.5" y="1006.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="342.8" y="995.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="345.8" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (817 samples, 19.44%)</title><rect x="343.1" y="1027.0" width="229.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="346.1" y="1038.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (815 samples, 19.40%)</title><rect x="343.3" y="1011.0" width="228.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="346.3" y="1022.0">one/nio/http/HttpSession.proce..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (676 samples, 16.09%)</title><rect x="343.6" y="995.0" width="189.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="346.6" y="1006.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (619 samples, 14.73%)</title><rect x="349.8" y="979.0" width="173.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="352.8" y="990.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (619 samples, 14.73%)</title><rect x="349.8" y="963.0" width="173.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="352.8" y="974.0">one/nio/http/HttpServe..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (614 samples, 14.61%)</title><rect x="349.8" y="947.0" width="172.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.8" y="958.0">RequestHandler1_entity..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (515 samples, 12.26%)</title><rect x="349.8" y="931.0" width="144.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.8" y="942.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (510 samples, 12.14%)</title><rect x="351.2" y="915.0" width="143.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="354.2" y="926.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (17 samples, 0.40%)</title><rect x="351.2" y="899.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="354.2" y="910.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="351.8" y="883.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="354.8" y="894.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (14 samples, 0.33%)</title><rect x="352.0" y="883.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="355.0" y="894.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.02%)</title><rect x="352.3" y="867.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="355.3" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.10%)</title><rect x="352.6" y="867.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="355.6" y="878.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="353.4" y="851.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="356.4" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="353.4" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="356.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.19%)</title><rect x="353.7" y="867.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.19%)</title><rect x="353.7" y="851.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="356.7" y="862.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (1 samples, 0.02%)</title><rect x="355.7" y="835.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="358.7" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (493 samples, 11.73%)</title><rect x="356.0" y="899.0" width="138.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="359.0" y="910.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/Session.write (492 samples, 11.71%)</title><rect x="356.2" y="883.0" width="138.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="359.2" y="894.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (490 samples, 11.66%)</title><rect x="356.2" y="867.0" width="137.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="359.2" y="878.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (490 samples, 11.66%)</title><rect x="356.2" y="851.0" width="137.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.2" y="862.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>.annobin_send.c (475 samples, 11.30%)</title><rect x="356.8" y="835.0" width="133.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="359.8" y="846.0">.annobin_send.c</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.10%)</title><rect x="361.0" y="819.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="364.0" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (456 samples, 10.85%)</title><rect x="362.1" y="819.0" width="128.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="365.1" y="830.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>do_syscall_64 (456 samples, 10.85%)</title><rect x="362.1" y="803.0" width="128.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="365.1" y="814.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (448 samples, 10.66%)</title><rect x="364.4" y="787.0" width="125.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="367.4" y="798.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (446 samples, 10.61%)</title><rect x="365.0" y="771.0" width="125.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="368.0" y="782.0">__sys_sendto</text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="365.2" y="755.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="368.2" y="766.0"></text>
</g>
<g>
<title>sock_sendmsg (443 samples, 10.54%)</title><rect x="365.5" y="755.0" width="124.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="368.5" y="766.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.05%)</title><rect x="365.8" y="739.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="368.8" y="750.0"></text>
</g>
<g>
<title>sock_has_perm (2 samples, 0.05%)</title><rect x="365.8" y="723.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="368.8" y="734.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.02%)</title><rect x="366.1" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="369.1" y="718.0"></text>
</g>
<g>
<title>tcp_sendmsg (440 samples, 10.47%)</title><rect x="366.4" y="739.0" width="123.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="369.4" y="750.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.05%)</title><rect x="366.6" y="723.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="369.6" y="734.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="366.9" y="707.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="369.9" y="718.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="366.9" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="369.9" y="702.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="367.2" y="723.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="370.2" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="367.2" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="370.2" y="718.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (436 samples, 10.38%)</title><rect x="367.5" y="723.0" width="122.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="370.5" y="734.0">tcp_sendmsg_loc..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.07%)</title><rect x="368.3" y="707.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="371.3" y="718.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.07%)</title><rect x="368.3" y="691.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="371.3" y="702.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (402 samples, 9.57%)</title><rect x="369.2" y="707.0" width="112.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="372.2" y="718.0">__tcp_push_pen..</text>
</g>
<g>
<title>tcp_write_xmit (401 samples, 9.54%)</title><rect x="369.4" y="691.0" width="112.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="372.4" y="702.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (383 samples, 9.11%)</title><rect x="371.4" y="675.0" width="107.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="374.4" y="686.0">__tcp_transmi..</text>
</g>
<g>
<title>__ip_queue_xmit (372 samples, 8.85%)</title><rect x="373.4" y="659.0" width="104.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="376.4" y="670.0">__ip_queue_x..</text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.07%)</title><rect x="375.1" y="643.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="378.1" y="654.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="375.3" y="627.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="378.3" y="638.0"></text>
</g>
<g>
<title>ip_local_out (67 samples, 1.59%)</title><rect x="375.9" y="643.0" width="18.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="378.9" y="654.0"></text>
</g>
<g>
<title>__ip_local_out (67 samples, 1.59%)</title><rect x="375.9" y="627.0" width="18.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="378.9" y="638.0"></text>
</g>
<g>
<title>ip_send_check (3 samples, 0.07%)</title><rect x="375.9" y="611.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="378.9" y="622.0"></text>
</g>
<g>
<title>nf_hook_slow (64 samples, 1.52%)</title><rect x="376.7" y="611.0" width="18.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="379.7" y="622.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (22 samples, 0.52%)</title><rect x="376.7" y="595.0" width="6.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="379.7" y="606.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (1 samples, 0.02%)</title><rect x="382.9" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="385.9" y="606.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (6 samples, 0.14%)</title><rect x="383.2" y="595.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="386.2" y="606.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.07%)</title><rect x="384.1" y="579.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="387.1" y="590.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (2 samples, 0.05%)</title><rect x="384.9" y="595.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="387.9" y="606.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (2 samples, 0.05%)</title><rect x="385.5" y="595.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="388.5" y="606.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (1 samples, 0.02%)</title><rect x="386.0" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="389.0" y="606.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (1 samples, 0.02%)</title><rect x="386.3" y="595.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="389.3" y="606.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (22 samples, 0.52%)</title><rect x="386.6" y="595.0" width="6.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="389.6" y="606.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (4 samples, 0.10%)</title><rect x="388.0" y="579.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="391.0" y="590.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (1 samples, 0.02%)</title><rect x="389.1" y="579.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="392.1" y="590.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (1 samples, 0.02%)</title><rect x="389.4" y="579.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="392.4" y="590.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (9 samples, 0.21%)</title><rect x="389.7" y="579.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="392.7" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.05%)</title><rect x="391.4" y="563.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="394.4" y="574.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (1 samples, 0.02%)</title><rect x="391.9" y="563.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="394.9" y="574.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (2 samples, 0.05%)</title><rect x="392.2" y="579.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="395.2" y="590.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (4 samples, 0.10%)</title><rect x="392.8" y="595.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="395.8" y="606.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="392.8" y="579.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="395.8" y="590.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (3 samples, 0.07%)</title><rect x="393.0" y="579.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="396.0" y="590.0"></text>
</g>
<g>
<title>selinux_ipv4_output (3 samples, 0.07%)</title><rect x="393.9" y="595.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="396.9" y="606.0"></text>
</g>
<g>
<title>ip_output (296 samples, 7.04%)</title><rect x="394.7" y="643.0" width="83.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="397.7" y="654.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (277 samples, 6.59%)</title><rect x="395.3" y="627.0" width="77.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="398.3" y="638.0">ip_finish..</text>
</g>
<g>
<title>__dev_queue_xmit (25 samples, 0.59%)</title><rect x="395.8" y="611.0" width="7.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="398.8" y="622.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (14 samples, 0.33%)</title><rect x="398.4" y="595.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="401.4" y="606.0"></text>
</g>
<g>
<title>loopback_xmit (12 samples, 0.29%)</title><rect x="398.9" y="579.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="401.9" y="590.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="399.2" y="563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="402.2" y="574.0"></text>
</g>
<g>
<title>netif_rx (7 samples, 0.17%)</title><rect x="399.5" y="563.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="402.5" y="574.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.14%)</title><rect x="399.8" y="547.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="402.8" y="558.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.07%)</title><rect x="399.8" y="531.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="402.8" y="542.0"></text>
</g>
<g>
<title>ktime_get_with_offset (3 samples, 0.07%)</title><rect x="400.6" y="531.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="403.6" y="542.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="401.2" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="404.2" y="526.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.07%)</title><rect x="401.5" y="563.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="404.5" y="574.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="402.3" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="405.3" y="606.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="402.6" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="405.6" y="606.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="402.6" y="579.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="405.6" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (250 samples, 5.95%)</title><rect x="402.9" y="611.0" width="70.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="405.9" y="622.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.0 (250 samples, 5.95%)</title><rect x="402.9" y="595.0" width="70.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="405.9" y="606.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (249 samples, 5.93%)</title><rect x="403.1" y="579.0" width="70.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="406.1" y="590.0">do_soft..</text>
</g>
<g>
<title>__softirqentry_text_start (249 samples, 5.93%)</title><rect x="403.1" y="563.0" width="70.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="406.1" y="574.0">__softi..</text>
</g>
<g>
<title>net_rx_action (240 samples, 5.71%)</title><rect x="405.4" y="547.0" width="67.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="408.4" y="558.0">net_rx_..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="406.0" y="531.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="409.0" y="542.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="406.2" y="531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="409.2" y="542.0"></text>
</g>
<g>
<title>process_backlog (236 samples, 5.62%)</title><rect x="406.5" y="531.0" width="66.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="409.5" y="542.0">process..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (231 samples, 5.50%)</title><rect x="407.9" y="515.0" width="64.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="410.9" y="526.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="407.9" y="499.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="410.9" y="510.0"></text>
</g>
<g>
<title>ip_rcv (230 samples, 5.47%)</title><rect x="408.2" y="499.0" width="64.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="411.2" y="510.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (179 samples, 4.26%)</title><rect x="408.8" y="483.0" width="50.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="411.8" y="494.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (151 samples, 3.59%)</title><rect x="409.9" y="467.0" width="42.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="412.9" y="478.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (151 samples, 3.59%)</title><rect x="409.9" y="451.0" width="42.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="412.9" y="462.0">ip_p..</text>
</g>
<g>
<title>tcp_v4_rcv (147 samples, 3.50%)</title><rect x="411.0" y="435.0" width="41.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="414.0" y="446.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.19%)</title><rect x="412.1" y="419.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="415.1" y="430.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.07%)</title><rect x="413.5" y="403.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="416.5" y="414.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.07%)</title><rect x="414.4" y="419.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="417.4" y="430.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.07%)</title><rect x="414.4" y="403.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="417.4" y="414.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (3 samples, 0.07%)</title><rect x="414.4" y="387.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="417.4" y="398.0"></text>
</g>
<g>
<title>selinux_peerlbl_enabled (1 samples, 0.02%)</title><rect x="414.9" y="371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="417.9" y="382.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.02%)</title><rect x="415.2" y="419.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="418.2" y="430.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (130 samples, 3.09%)</title><rect x="415.5" y="419.0" width="36.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="418.5" y="430.0">tcp..</text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="415.5" y="403.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="418.5" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_established (129 samples, 3.07%)</title><rect x="415.8" y="403.0" width="36.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="418.8" y="414.0">tcp..</text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.12%)</title><rect x="416.1" y="387.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="419.1" y="398.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.12%)</title><rect x="416.1" y="371.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="419.1" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.12%)</title><rect x="416.1" y="355.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="419.1" y="366.0"></text>
</g>
<g>
<title>tcp_ack (38 samples, 0.90%)</title><rect x="417.5" y="387.0" width="10.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="420.5" y="398.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.21%)</title><rect x="419.7" y="371.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="422.7" y="382.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.07%)</title><rect x="419.7" y="355.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="422.7" y="366.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.14%)</title><rect x="420.6" y="355.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="423.6" y="366.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.05%)</title><rect x="422.2" y="371.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="425.2" y="382.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.02%)</title><rect x="422.8" y="371.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="425.8" y="382.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.07%)</title><rect x="423.1" y="371.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="426.1" y="382.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="423.4" y="355.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="426.4" y="366.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="423.9" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="426.9" y="382.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.07%)</title><rect x="424.2" y="371.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="427.2" y="382.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.02%)</title><rect x="425.0" y="371.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="428.0" y="382.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="425.3" y="371.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="428.3" y="382.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.05%)</title><rect x="425.6" y="371.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="428.6" y="382.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.05%)</title><rect x="426.2" y="371.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="429.2" y="382.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.07%)</title><rect x="426.7" y="371.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="429.7" y="382.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.05%)</title><rect x="427.6" y="371.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="430.6" y="382.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="428.1" y="387.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="431.1" y="398.0"></text>
</g>
<g>
<title>tcp_data_queue (81 samples, 1.93%)</title><rect x="428.4" y="387.0" width="22.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="431.4" y="398.0">t..</text>
</g>
<g>
<title>dst_release (2 samples, 0.05%)</title><rect x="428.4" y="371.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="431.4" y="382.0"></text>
</g>
<g>
<title>sock_def_readable (76 samples, 1.81%)</title><rect x="429.0" y="371.0" width="21.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="432.0" y="382.0">s..</text>
</g>
<g>
<title>__wake_up_common_lock (73 samples, 1.74%)</title><rect x="429.8" y="355.0" width="20.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="432.8" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (73 samples, 1.74%)</title><rect x="429.8" y="339.0" width="20.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="432.8" y="350.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.05%)</title><rect x="450.3" y="371.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="453.3" y="382.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="450.9" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="453.9" y="382.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="451.2" y="387.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="454.2" y="398.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="451.4" y="371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="454.4" y="382.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="451.7" y="387.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="454.7" y="398.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="452.0" y="419.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="455.0" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (24 samples, 0.57%)</title><rect x="452.3" y="467.0" width="6.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="455.3" y="478.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (21 samples, 0.50%)</title><rect x="452.3" y="451.0" width="5.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="455.3" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.05%)</title><rect x="455.9" y="435.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="458.9" y="446.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (5 samples, 0.12%)</title><rect x="456.5" y="435.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="459.5" y="446.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (1 samples, 0.02%)</title><rect x="457.9" y="435.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="460.9" y="446.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (1 samples, 0.02%)</title><rect x="458.2" y="451.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="461.2" y="462.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (2 samples, 0.05%)</title><rect x="458.5" y="451.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="461.5" y="462.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (3 samples, 0.07%)</title><rect x="459.0" y="483.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="462.0" y="494.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.05%)</title><rect x="459.9" y="483.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="462.9" y="494.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.02%)</title><rect x="460.2" y="467.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="463.2" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (44 samples, 1.05%)</title><rect x="460.4" y="483.0" width="12.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="463.4" y="494.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (1 samples, 0.02%)</title><rect x="460.4" y="467.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="463.4" y="478.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (37 samples, 0.88%)</title><rect x="460.7" y="467.0" width="10.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="463.7" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (1 samples, 0.02%)</title><rect x="471.1" y="467.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="474.1" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (1 samples, 0.02%)</title><rect x="471.4" y="467.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="474.4" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (3 samples, 0.07%)</title><rect x="471.7" y="467.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="474.7" y="478.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (1 samples, 0.02%)</title><rect x="472.5" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="475.5" y="478.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="472.8" y="547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="475.8" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="472.8" y="531.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="475.8" y="542.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.07%)</title><rect x="473.1" y="627.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="476.1" y="638.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="473.6" y="611.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="476.6" y="622.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.33%)</title><rect x="473.9" y="627.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="476.9" y="638.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.07%)</title><rect x="473.9" y="611.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="476.9" y="622.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.05%)</title><rect x="474.8" y="611.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="477.8" y="622.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (2 samples, 0.05%)</title><rect x="475.3" y="611.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="478.3" y="622.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (2 samples, 0.05%)</title><rect x="475.3" y="595.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="478.3" y="606.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (5 samples, 0.12%)</title><rect x="475.9" y="611.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="478.9" y="622.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="477.0" y="595.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="480.0" y="606.0"></text>
</g>
<g>
<title>selinux_ip_postroute (1 samples, 0.02%)</title><rect x="477.3" y="611.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="480.3" y="622.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (1 samples, 0.02%)</title><rect x="477.6" y="611.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="480.6" y="622.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.02%)</title><rect x="477.8" y="659.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="480.8" y="670.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="477.8" y="643.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="480.8" y="654.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.05%)</title><rect x="478.1" y="659.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="481.1" y="670.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.02%)</title><rect x="478.7" y="659.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="481.7" y="670.0"></text>
</g>
<g>
<title>__list_del_entry_valid (1 samples, 0.02%)</title><rect x="478.7" y="643.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="481.7" y="654.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.07%)</title><rect x="479.0" y="675.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="482.0" y="686.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.07%)</title><rect x="479.0" y="659.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="482.0" y="670.0"></text>
</g>
<g>
<title>tcp_chrono_stop (2 samples, 0.05%)</title><rect x="479.8" y="675.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="482.8" y="686.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.14%)</title><rect x="480.4" y="675.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="483.4" y="686.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.12%)</title><rect x="480.7" y="659.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="483.7" y="670.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.10%)</title><rect x="480.9" y="643.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="483.9" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.10%)</title><rect x="480.9" y="627.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="483.9" y="638.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.05%)</title><rect x="482.1" y="707.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="485.1" y="718.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.05%)</title><rect x="482.1" y="691.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="485.1" y="702.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.05%)</title><rect x="482.1" y="675.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="485.1" y="686.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (15 samples, 0.36%)</title><rect x="482.6" y="707.0" width="4.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="485.6" y="718.0"></text>
</g>
<g>
<title>__alloc_skb (15 samples, 0.36%)</title><rect x="482.6" y="691.0" width="4.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="485.6" y="702.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (6 samples, 0.14%)</title><rect x="482.9" y="675.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="485.9" y="686.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.14%)</title><rect x="482.9" y="659.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="485.9" y="670.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="484.0" y="643.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="487.0" y="654.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="484.3" y="643.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="487.3" y="654.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (8 samples, 0.19%)</title><rect x="484.6" y="675.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="487.6" y="686.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.05%)</title><rect x="486.3" y="659.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="489.3" y="670.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="486.8" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="489.8" y="718.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.02%)</title><rect x="487.1" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="490.1" y="718.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="487.4" y="707.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="490.4" y="718.0"></text>
</g>
<g>
<title>tcp_send_mss (7 samples, 0.17%)</title><rect x="487.7" y="707.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="490.7" y="718.0"></text>
</g>
<g>
<title>tcp_current_mss (7 samples, 0.17%)</title><rect x="487.7" y="691.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="490.7" y="702.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.07%)</title><rect x="488.8" y="675.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="491.8" y="686.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="489.6" y="707.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="492.6" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="489.9" y="755.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="492.9" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="489.9" y="739.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="492.9" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="489.9" y="723.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="492.9" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.05%)</title><rect x="490.2" y="835.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="493.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.21%)</title><rect x="490.8" y="835.0" width="2.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="493.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.21%)</title><rect x="490.8" y="819.0" width="2.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="493.8" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.12%)</title><rect x="490.8" y="803.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="493.8" y="814.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="490.8" y="787.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="493.8" y="798.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.07%)</title><rect x="491.3" y="787.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="494.3" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="491.3" y="771.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="494.3" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="491.6" y="771.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="494.6" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="491.9" y="771.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="494.9" y="782.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="492.2" y="803.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="495.2" y="814.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="492.4" y="803.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="495.4" y="814.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="492.7" y="803.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="495.7" y="814.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.05%)</title><rect x="493.3" y="835.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="496.3" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="493.9" y="867.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="496.9" y="878.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="493.9" y="851.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="496.9" y="862.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="493.9" y="835.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="496.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (15 samples, 0.36%)</title><rect x="494.4" y="931.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="497.4" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.19%)</title><rect x="494.4" y="915.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.4" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.19%)</title><rect x="494.4" y="899.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="497.4" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.10%)</title><rect x="495.5" y="883.0" width="1.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="498.5" y="894.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="496.7" y="915.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="499.7" y="926.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="496.7" y="899.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="499.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (3 samples, 0.07%)</title><rect x="496.9" y="915.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="499.9" y="926.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.02%)</title><rect x="497.5" y="899.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="497.8" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="500.8" y="926.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.02%)</title><rect x="497.8" y="899.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="500.8" y="910.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.05%)</title><rect x="498.1" y="915.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="501.1" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="498.1" y="899.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="501.1" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="498.1" y="883.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="501.1" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="498.3" y="867.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="501.3" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (84 samples, 2.00%)</title><rect x="498.6" y="931.0" width="23.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.6" y="942.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="498.6" y="915.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.6" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="498.9" y="899.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.9" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.05%)</title><rect x="499.2" y="915.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.2" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (80 samples, 1.90%)</title><rect x="499.7" y="915.0" width="22.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="502.7" y="926.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (80 samples, 1.90%)</title><rect x="499.7" y="899.0" width="22.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="502.7" y="910.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (78 samples, 1.86%)</title><rect x="499.7" y="883.0" width="22.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="502.7" y="894.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (74 samples, 1.76%)</title><rect x="499.7" y="867.0" width="20.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="502.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (74 samples, 1.76%)</title><rect x="499.7" y="851.0" width="20.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="502.7" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.07%)</title><rect x="501.4" y="835.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="504.4" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.07%)</title><rect x="501.4" y="819.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="504.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (26 samples, 0.62%)</title><rect x="502.3" y="835.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="505.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (1 samples, 0.02%)</title><rect x="509.6" y="835.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="512.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (38 samples, 0.90%)</title><rect x="509.9" y="835.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.9" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (38 samples, 0.90%)</title><rect x="509.9" y="819.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="512.9" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (32 samples, 0.76%)</title><rect x="511.5" y="803.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.5" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="512.4" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.4" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (26 samples, 0.62%)</title><rect x="512.7" y="787.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (4 samples, 0.10%)</title><rect x="515.8" y="771.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="518.8" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (8 samples, 0.19%)</title><rect x="516.9" y="771.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.9" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.05%)</title><rect x="518.0" y="755.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="521.0" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.05%)</title><rect x="518.6" y="755.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="521.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (2 samples, 0.05%)</title><rect x="519.1" y="771.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="522.1" y="782.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="519.4" y="755.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="522.4" y="766.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="519.7" y="771.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="522.7" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="520.0" y="787.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="523.0" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="520.0" y="771.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="523.0" y="782.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="520.2" y="787.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="523.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.tombstone (4 samples, 0.10%)</title><rect x="520.5" y="867.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="523.5" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.&lt;init&gt; (4 samples, 0.10%)</title><rect x="520.5" y="851.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="523.5" y="862.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="520.8" y="835.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="523.8" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="521.4" y="835.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="524.4" y="846.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="521.4" y="819.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="524.4" y="830.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="521.4" y="803.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="524.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (2 samples, 0.05%)</title><rect x="521.7" y="883.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.7" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.sizeInBytes (1 samples, 0.02%)</title><rect x="521.7" y="867.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="524.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (1 samples, 0.02%)</title><rect x="521.7" y="851.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.7" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getSizeOfFlushedRow (1 samples, 0.02%)</title><rect x="521.9" y="867.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.9" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.02%)</title><rect x="521.9" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="524.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.02%)</title><rect x="522.2" y="947.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="525.2" y="958.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.10%)</title><rect x="522.5" y="947.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="525.5" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.10%)</title><rect x="522.5" y="931.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="525.5" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.10%)</title><rect x="522.5" y="915.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="525.5" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (22 samples, 0.52%)</title><rect x="523.6" y="979.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="526.6" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.21%)</title><rect x="525.3" y="963.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="528.3" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.21%)</title><rect x="525.3" y="947.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="528.3" y="958.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (3 samples, 0.07%)</title><rect x="527.0" y="931.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="530.0" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (7 samples, 0.17%)</title><rect x="527.8" y="963.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.8" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.14%)</title><rect x="529.8" y="979.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="532.8" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.10%)</title><rect x="530.4" y="963.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="533.4" y="974.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="530.4" y="947.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="533.4" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.07%)</title><rect x="530.6" y="947.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.6" y="958.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.05%)</title><rect x="530.9" y="931.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="533.9" y="942.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.05%)</title><rect x="530.9" y="915.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="533.9" y="926.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.05%)</title><rect x="530.9" y="899.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="533.9" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.17%)</title><rect x="531.5" y="979.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="534.5" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.17%)</title><rect x="531.5" y="963.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="534.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="532.9" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="535.9" y="958.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="532.9" y="931.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="535.9" y="942.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.02%)</title><rect x="532.9" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="535.9" y="926.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.02%)</title><rect x="533.2" y="947.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="536.2" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (138 samples, 3.28%)</title><rect x="533.4" y="995.0" width="38.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="536.4" y="1006.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (135 samples, 3.21%)</title><rect x="534.0" y="979.0" width="37.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="537.0" y="990.0">one..</text>
</g>
<g>
<title>[unknown] (18 samples, 0.43%)</title><rect x="534.9" y="963.0" width="5.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="537.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.43%)</title><rect x="534.9" y="947.0" width="5.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="537.9" y="958.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (15 samples, 0.36%)</title><rect x="534.9" y="931.0" width="4.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="537.9" y="942.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.07%)</title><rect x="534.9" y="915.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="537.9" y="926.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="535.7" y="915.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="538.7" y="926.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.07%)</title><rect x="536.0" y="915.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="539.0" y="926.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.19%)</title><rect x="536.8" y="915.0" width="2.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="539.8" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (4 samples, 0.10%)</title><rect x="537.9" y="899.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="540.9" y="910.0"></text>
</g>
<g>
<title>__libc_recv (1 samples, 0.02%)</title><rect x="539.1" y="931.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="542.1" y="942.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="539.3" y="931.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="542.3" y="942.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="539.6" y="931.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="542.6" y="942.0"></text>
</g>
<g>
<title>__libc_recv (112 samples, 2.67%)</title><rect x="539.9" y="963.0" width="31.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="542.9" y="974.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (85 samples, 2.02%)</title><rect x="547.5" y="947.0" width="23.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="550.5" y="958.0">e..</text>
</g>
<g>
<title>do_syscall_64 (85 samples, 2.02%)</title><rect x="547.5" y="931.0" width="23.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="550.5" y="942.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (76 samples, 1.81%)</title><rect x="550.0" y="915.0" width="21.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="553.0" y="926.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (74 samples, 1.76%)</title><rect x="550.6" y="899.0" width="20.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="553.6" y="910.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="550.9" y="883.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="553.9" y="894.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.05%)</title><rect x="551.1" y="883.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="554.1" y="894.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="551.4" y="867.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="554.4" y="878.0"></text>
</g>
<g>
<title>inet_recvmsg (50 samples, 1.19%)</title><rect x="551.7" y="883.0" width="14.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="554.7" y="894.0"></text>
</g>
<g>
<title>tcp_recvmsg (48 samples, 1.14%)</title><rect x="552.3" y="867.0" width="13.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="555.3" y="878.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.19%)</title><rect x="555.3" y="851.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="558.3" y="862.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.12%)</title><rect x="555.6" y="835.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="558.6" y="846.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.12%)</title><rect x="555.6" y="819.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="558.6" y="830.0"></text>
</g>
<g>
<title>sock_rfree (5 samples, 0.12%)</title><rect x="555.6" y="803.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="558.6" y="814.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="557.0" y="835.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="560.0" y="846.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.05%)</title><rect x="557.6" y="851.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="560.6" y="862.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="557.6" y="835.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="560.6" y="846.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="557.6" y="819.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="560.6" y="830.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="557.9" y="835.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="560.9" y="846.0"></text>
</g>
<g>
<title>ns_to_timespec64 (1 samples, 0.02%)</title><rect x="558.2" y="851.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="561.2" y="862.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="558.4" y="851.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="561.4" y="862.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="558.4" y="835.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="561.4" y="846.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (18 samples, 0.43%)</title><rect x="558.7" y="851.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="561.7" y="862.0"></text>
</g>
<g>
<title>__skb_datagram_iter (18 samples, 0.43%)</title><rect x="558.7" y="835.0" width="5.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="561.7" y="846.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.12%)</title><rect x="559.0" y="819.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="562.0" y="830.0"></text>
</g>
<g>
<title>copyout (5 samples, 0.12%)</title><rect x="559.0" y="803.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="562.0" y="814.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.12%)</title><rect x="559.0" y="787.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="562.0" y="798.0"></text>
</g>
<g>
<title>simple_copy_to_iter (12 samples, 0.29%)</title><rect x="560.4" y="819.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="563.4" y="830.0"></text>
</g>
<g>
<title>__check_object_size (11 samples, 0.26%)</title><rect x="560.7" y="803.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="563.7" y="814.0"></text>
</g>
<g>
<title>__check_heap_object (3 samples, 0.07%)</title><rect x="561.0" y="787.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="564.0" y="798.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.14%)</title><rect x="561.8" y="787.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="564.8" y="798.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.02%)</title><rect x="563.5" y="787.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="566.5" y="798.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="563.8" y="851.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="566.8" y="862.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="563.8" y="835.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="566.8" y="846.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.07%)</title><rect x="564.1" y="851.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="567.1" y="862.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="564.6" y="835.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="567.6" y="846.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (3 samples, 0.07%)</title><rect x="564.9" y="851.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="567.9" y="862.0"></text>
</g>
<g>
<title>sock_recvmsg (16 samples, 0.38%)</title><rect x="565.7" y="883.0" width="4.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="568.7" y="894.0"></text>
</g>
<g>
<title>security_socket_recvmsg (16 samples, 0.38%)</title><rect x="565.7" y="867.0" width="4.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="568.7" y="878.0"></text>
</g>
<g>
<title>sock_has_perm (15 samples, 0.36%)</title><rect x="566.0" y="851.0" width="4.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="569.0" y="862.0"></text>
</g>
<g>
<title>avc_has_perm (9 samples, 0.21%)</title><rect x="567.7" y="835.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="570.7" y="846.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.10%)</title><rect x="570.2" y="883.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="573.2" y="894.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.10%)</title><rect x="570.2" y="867.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="573.2" y="878.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.10%)</title><rect x="570.2" y="851.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="573.2" y="862.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.05%)</title><rect x="571.4" y="963.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="574.4" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.02%)</title><rect x="571.9" y="979.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="574.9" y="990.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="572.2" y="1011.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="575.2" y="1022.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="572.2" y="995.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="575.2" y="1006.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="572.2" y="979.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="575.2" y="990.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=13277] (1,000 samples, 23.80%)</title><rect x="572.5" y="1059.0" width="280.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="575.5" y="1070.0">[NIO Selector #2 tid=13277]</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="572.5" y="1043.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="575.5" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="572.8" y="1043.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="575.8" y="1054.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="572.8" y="1027.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="575.8" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="572.8" y="1011.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="575.8" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="572.8" y="995.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="575.8" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="572.8" y="979.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="575.8" y="990.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="572.8" y="963.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="575.8" y="974.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="573.0" y="1043.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="576.0" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="573.0" y="1027.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="576.0" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="573.0" y="1011.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="576.0" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="573.0" y="995.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="576.0" y="1006.0"></text>
</g>
<g>
<title>[unknown_Java] (8 samples, 0.19%)</title><rect x="573.3" y="1043.0" width="2.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="576.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="574.7" y="1027.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="577.7" y="1038.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.07%)</title><rect x="574.7" y="1011.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="577.7" y="1022.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (989 samples, 23.54%)</title><rect x="575.6" y="1043.0" width="277.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.6" y="1054.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (3 samples, 0.07%)</title><rect x="575.6" y="1027.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="578.6" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (8 samples, 0.19%)</title><rect x="576.4" y="1027.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="579.4" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (8 samples, 0.19%)</title><rect x="576.4" y="1011.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="579.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (145 samples, 3.45%)</title><rect x="578.7" y="1027.0" width="40.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="581.7" y="1038.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.02%)</title><rect x="578.7" y="1011.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="581.7" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.02%)</title><rect x="578.7" y="995.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="581.7" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (144 samples, 3.43%)</title><rect x="578.9" y="1011.0" width="40.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="581.9" y="1022.0">one..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (114 samples, 2.71%)</title><rect x="581.7" y="995.0" width="32.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="584.7" y="1006.0">.a..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (93 samples, 2.21%)</title><rect x="587.6" y="979.0" width="26.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="590.6" y="990.0">e..</text>
</g>
<g>
<title>do_syscall_64 (93 samples, 2.21%)</title><rect x="587.6" y="963.0" width="26.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="590.6" y="974.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (86 samples, 2.05%)</title><rect x="589.6" y="947.0" width="24.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="592.6" y="958.0">_..</text>
</g>
<g>
<title>do_epoll_wait (84 samples, 2.00%)</title><rect x="590.2" y="931.0" width="23.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="593.2" y="942.0">d..</text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="590.7" y="915.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="593.7" y="926.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="590.7" y="899.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="593.7" y="910.0"></text>
</g>
<g>
<title>ep_poll (79 samples, 1.88%)</title><rect x="591.0" y="915.0" width="22.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="594.0" y="926.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (41 samples, 0.98%)</title><rect x="593.8" y="899.0" width="11.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="596.8" y="910.0"></text>
</g>
<g>
<title>ep_send_events_proc (23 samples, 0.55%)</title><rect x="596.3" y="883.0" width="6.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="599.3" y="894.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (19 samples, 0.45%)</title><rect x="597.5" y="867.0" width="5.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="600.5" y="878.0"></text>
</g>
<g>
<title>sock_poll (16 samples, 0.38%)</title><rect x="598.3" y="851.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="601.3" y="862.0"></text>
</g>
<g>
<title>tcp_poll (10 samples, 0.24%)</title><rect x="600.0" y="835.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="603.0" y="846.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.10%)</title><rect x="601.7" y="819.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="604.7" y="830.0"></text>
</g>
<g>
<title>mutex_lock (6 samples, 0.14%)</title><rect x="602.8" y="883.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="605.8" y="894.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.07%)</title><rect x="604.5" y="883.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="607.5" y="894.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (28 samples, 0.67%)</title><rect x="605.3" y="899.0" width="7.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="608.3" y="910.0"></text>
</g>
<g>
<title>schedule (23 samples, 0.55%)</title><rect x="606.7" y="883.0" width="6.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="609.7" y="894.0"></text>
</g>
<g>
<title>__sched_text_start (19 samples, 0.45%)</title><rect x="607.9" y="867.0" width="5.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="610.9" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (18 samples, 0.43%)</title><rect x="608.1" y="851.0" width="5.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="611.1" y="862.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.05%)</title><rect x="613.2" y="915.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="616.2" y="926.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (5 samples, 0.12%)</title><rect x="613.8" y="995.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="616.8" y="1006.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="615.2" y="995.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="618.2" y="1006.0"></text>
</g>
<g>
<title>__GI___clock_gettime (9 samples, 0.21%)</title><rect x="615.7" y="995.0" width="2.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="618.7" y="1006.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.12%)</title><rect x="616.8" y="979.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="619.8" y="990.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.05%)</title><rect x="618.3" y="995.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="621.3" y="1006.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="618.8" y="995.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="621.8" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (833 samples, 19.82%)</title><rect x="619.4" y="1027.0" width="233.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="622.4" y="1038.0">one/nio/net/Session.process</text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="620.2" y="1011.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="623.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="620.2" y="995.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="623.2" y="1006.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="620.2" y="979.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="623.2" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (829 samples, 19.73%)</title><rect x="620.5" y="1011.0" width="232.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.5" y="1022.0">one/nio/http/HttpSession.proces..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (714 samples, 16.99%)</title><rect x="620.5" y="995.0" width="200.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="623.5" y="1006.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (660 samples, 15.71%)</title><rect x="625.8" y="979.0" width="185.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.8" y="990.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (658 samples, 15.66%)</title><rect x="626.4" y="963.0" width="184.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="629.4" y="974.0">one/nio/http/HttpServer...</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (650 samples, 15.47%)</title><rect x="626.7" y="947.0" width="182.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.7" y="958.0">RequestHandler1_entity.h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (549 samples, 13.07%)</title><rect x="627.0" y="931.0" width="154.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="630.0" y="942.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.05%)</title><rect x="628.6" y="915.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="631.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="628.6" y="899.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="631.6" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="628.6" y="883.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="631.6" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.05%)</title><rect x="628.6" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="631.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (539 samples, 12.83%)</title><rect x="629.2" y="915.0" width="151.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="632.2" y="926.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (20 samples, 0.48%)</title><rect x="629.2" y="899.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.2" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="630.3" y="883.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="633.3" y="894.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (15 samples, 0.36%)</title><rect x="630.6" y="883.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="633.6" y="894.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.02%)</title><rect x="630.6" y="867.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="633.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (6 samples, 0.14%)</title><rect x="630.9" y="867.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="633.9" y="878.0"></text>
</g>
<g>
<title>_new_array_Java (1 samples, 0.02%)</title><rect x="632.0" y="851.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="635.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="632.3" y="851.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="632.3" y="835.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="635.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.19%)</title><rect x="632.6" y="867.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="635.6" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (8 samples, 0.19%)</title><rect x="632.6" y="851.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.05%)</title><rect x="634.0" y="835.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="637.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="634.0" y="819.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="637.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="634.3" y="819.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.3" y="830.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (1 samples, 0.02%)</title><rect x="634.5" y="835.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="637.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (519 samples, 12.35%)</title><rect x="634.8" y="899.0" width="145.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="637.8" y="910.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session.write (519 samples, 12.35%)</title><rect x="634.8" y="883.0" width="145.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.8" y="894.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (519 samples, 12.35%)</title><rect x="634.8" y="867.0" width="145.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.8" y="878.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (518 samples, 12.33%)</title><rect x="635.1" y="851.0" width="145.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="638.1" y="862.0">one/nio/net/Native..</text>
</g>
<g>
<title>.annobin_send.c (502 samples, 11.95%)</title><rect x="635.7" y="835.0" width="140.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="638.7" y="846.0">.annobin_send.c</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (480 samples, 11.42%)</title><rect x="641.8" y="819.0" width="134.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="644.8" y="830.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (480 samples, 11.42%)</title><rect x="641.8" y="803.0" width="134.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="644.8" y="814.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (475 samples, 11.30%)</title><rect x="643.2" y="787.0" width="133.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="646.2" y="798.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (475 samples, 11.30%)</title><rect x="643.2" y="771.0" width="133.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="646.2" y="782.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (470 samples, 11.19%)</title><rect x="643.8" y="755.0" width="132.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="646.8" y="766.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.10%)</title><rect x="643.8" y="739.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="646.8" y="750.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (1 samples, 0.02%)</title><rect x="643.8" y="723.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="646.8" y="734.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.07%)</title><rect x="644.1" y="723.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="647.1" y="734.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.02%)</title><rect x="644.7" y="707.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="647.7" y="718.0"></text>
</g>
<g>
<title>tcp_sendmsg (466 samples, 11.09%)</title><rect x="644.9" y="739.0" width="130.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="647.9" y="750.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.10%)</title><rect x="645.5" y="723.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="648.5" y="734.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="646.6" y="723.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="649.6" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="646.6" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="649.6" y="718.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.05%)</title><rect x="646.9" y="723.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="649.9" y="734.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.05%)</title><rect x="646.9" y="707.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="649.9" y="718.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (457 samples, 10.88%)</title><rect x="647.5" y="723.0" width="128.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="650.5" y="734.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.05%)</title><rect x="648.0" y="707.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="651.0" y="718.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="648.3" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="651.3" y="702.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (423 samples, 10.07%)</title><rect x="648.6" y="707.0" width="118.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="651.6" y="718.0">__tcp_push_pen..</text>
</g>
<g>
<title>tcp_write_xmit (423 samples, 10.07%)</title><rect x="648.6" y="691.0" width="118.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="651.6" y="702.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (412 samples, 9.80%)</title><rect x="650.0" y="675.0" width="115.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="653.0" y="686.0">__tcp_transmit..</text>
</g>
<g>
<title>__ip_queue_xmit (395 samples, 9.40%)</title><rect x="652.0" y="659.0" width="110.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="655.0" y="670.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="652.8" y="643.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="655.8" y="654.0"></text>
</g>
<g>
<title>ip_local_out (91 samples, 2.17%)</title><rect x="653.1" y="643.0" width="25.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="656.1" y="654.0">i..</text>
</g>
<g>
<title>__ip_local_out (91 samples, 2.17%)</title><rect x="653.1" y="627.0" width="25.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="656.1" y="638.0">_..</text>
</g>
<g>
<title>ip_send_check (1 samples, 0.02%)</title><rect x="653.1" y="611.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="656.1" y="622.0"></text>
</g>
<g>
<title>nf_hook_slow (90 samples, 2.14%)</title><rect x="653.4" y="611.0" width="25.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="656.4" y="622.0">n..</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (22 samples, 0.52%)</title><rect x="653.4" y="595.0" width="6.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="656.4" y="606.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (3 samples, 0.07%)</title><rect x="659.5" y="595.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="662.5" y="606.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (9 samples, 0.21%)</title><rect x="660.4" y="595.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="663.4" y="606.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.17%)</title><rect x="660.9" y="579.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="663.9" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="662.6" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="665.6" y="574.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (2 samples, 0.05%)</title><rect x="662.9" y="595.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="665.9" y="606.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (3 samples, 0.07%)</title><rect x="663.5" y="595.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="666.5" y="606.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (3 samples, 0.07%)</title><rect x="664.3" y="595.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="667.3" y="606.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (1 samples, 0.02%)</title><rect x="665.1" y="595.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="668.1" y="606.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (41 samples, 0.98%)</title><rect x="665.4" y="595.0" width="11.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="668.4" y="606.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (11 samples, 0.26%)</title><rect x="667.4" y="579.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="670.4" y="590.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (3 samples, 0.07%)</title><rect x="670.5" y="579.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="673.5" y="590.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (18 samples, 0.43%)</title><rect x="671.3" y="579.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="674.3" y="590.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (1 samples, 0.02%)</title><rect x="674.1" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="677.1" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.10%)</title><rect x="674.4" y="563.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="677.4" y="574.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (3 samples, 0.07%)</title><rect x="675.5" y="563.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="678.5" y="574.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (2 samples, 0.05%)</title><rect x="676.4" y="579.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="679.4" y="590.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (3 samples, 0.07%)</title><rect x="676.9" y="595.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="679.9" y="606.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (2 samples, 0.05%)</title><rect x="676.9" y="579.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="679.9" y="590.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (1 samples, 0.02%)</title><rect x="677.5" y="579.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="680.5" y="590.0"></text>
</g>
<g>
<title>selinux_ipv4_output (3 samples, 0.07%)</title><rect x="677.8" y="595.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="680.8" y="606.0"></text>
</g>
<g>
<title>netlbl_enabled (2 samples, 0.05%)</title><rect x="678.1" y="579.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="681.1" y="590.0"></text>
</g>
<g>
<title>ip_output (300 samples, 7.14%)</title><rect x="678.6" y="643.0" width="84.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="681.6" y="654.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (290 samples, 6.90%)</title><rect x="679.5" y="627.0" width="81.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="682.5" y="638.0">ip_finish..</text>
</g>
<g>
<title>__dev_queue_xmit (14 samples, 0.33%)</title><rect x="680.0" y="611.0" width="4.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="683.0" y="622.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (11 samples, 0.26%)</title><rect x="680.6" y="595.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="683.6" y="606.0"></text>
</g>
<g>
<title>loopback_xmit (10 samples, 0.24%)</title><rect x="680.9" y="579.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="683.9" y="590.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.05%)</title><rect x="681.2" y="563.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="684.2" y="574.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.10%)</title><rect x="681.7" y="563.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="684.7" y="574.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.10%)</title><rect x="681.7" y="547.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="684.7" y="558.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.05%)</title><rect x="681.7" y="531.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="684.7" y="542.0"></text>
</g>
<g>
<title>ktime_get_with_offset (2 samples, 0.05%)</title><rect x="682.3" y="531.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="685.3" y="542.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.07%)</title><rect x="682.8" y="563.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="685.8" y="574.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="683.7" y="595.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="686.7" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (274 samples, 6.52%)</title><rect x="684.0" y="611.0" width="76.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="687.0" y="622.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.0 (273 samples, 6.50%)</title><rect x="684.2" y="595.0" width="76.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="687.2" y="606.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (272 samples, 6.47%)</title><rect x="684.5" y="579.0" width="76.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="687.5" y="590.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (272 samples, 6.47%)</title><rect x="684.5" y="563.0" width="76.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="687.5" y="574.0">__softir..</text>
</g>
<g>
<title>net_rx_action (269 samples, 6.40%)</title><rect x="685.4" y="547.0" width="75.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="688.4" y="558.0">net_rx_a..</text>
</g>
<g>
<title>process_backlog (266 samples, 6.33%)</title><rect x="686.2" y="531.0" width="74.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="689.2" y="542.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (260 samples, 6.19%)</title><rect x="687.9" y="515.0" width="73.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="690.9" y="526.0">__netif_..</text>
</g>
<g>
<title>__netif_receive_skb_core (5 samples, 0.12%)</title><rect x="688.2" y="499.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="691.2" y="510.0"></text>
</g>
<g>
<title>ip_rcv (254 samples, 6.04%)</title><rect x="689.6" y="499.0" width="71.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="692.6" y="510.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (205 samples, 4.88%)</title><rect x="690.4" y="483.0" width="57.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="693.4" y="494.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (176 samples, 4.19%)</title><rect x="691.8" y="467.0" width="49.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="694.8" y="478.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (176 samples, 4.19%)</title><rect x="691.8" y="451.0" width="49.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="694.8" y="462.0">ip_pr..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="693.2" y="435.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="696.2" y="446.0"></text>
</g>
<g>
<title>tcp_v4_rcv (170 samples, 4.05%)</title><rect x="693.5" y="435.0" width="47.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="696.5" y="446.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (9 samples, 0.21%)</title><rect x="695.8" y="419.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="698.8" y="430.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.05%)</title><rect x="697.7" y="403.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="700.7" y="414.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.05%)</title><rect x="698.3" y="419.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="701.3" y="430.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.05%)</title><rect x="698.3" y="403.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="701.3" y="414.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (2 samples, 0.05%)</title><rect x="698.3" y="387.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="701.3" y="398.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.02%)</title><rect x="698.8" y="419.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="701.8" y="430.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (149 samples, 3.55%)</title><rect x="699.1" y="419.0" width="41.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="702.1" y="430.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (149 samples, 3.55%)</title><rect x="699.1" y="403.0" width="41.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="702.1" y="414.0">tcp..</text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.07%)</title><rect x="700.0" y="387.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="703.0" y="398.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.07%)</title><rect x="700.0" y="371.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="703.0" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="700.0" y="355.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="703.0" y="366.0"></text>
</g>
<g>
<title>tcp_ack (34 samples, 0.81%)</title><rect x="700.8" y="387.0" width="9.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="703.8" y="398.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="704.5" y="371.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="707.5" y="382.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="704.5" y="355.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="707.5" y="366.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.07%)</title><rect x="704.7" y="371.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="707.7" y="382.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.02%)</title><rect x="705.6" y="371.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="708.6" y="382.0"></text>
</g>
<g>
<title>kmem_cache_free (7 samples, 0.17%)</title><rect x="705.9" y="371.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="708.9" y="382.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="707.3" y="355.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="710.3" y="366.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.02%)</title><rect x="707.8" y="371.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="710.8" y="382.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="708.1" y="371.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="711.1" y="382.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.02%)</title><rect x="708.4" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="711.4" y="382.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.02%)</title><rect x="708.7" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="711.7" y="382.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="709.0" y="371.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="712.0" y="382.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.02%)</title><rect x="709.2" y="371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="712.2" y="382.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="709.5" y="371.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="712.5" y="382.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="709.8" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="712.8" y="382.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="710.1" y="371.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="713.1" y="382.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="710.4" y="387.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="713.4" y="398.0"></text>
</g>
<g>
<title>tcp_data_queue (105 samples, 2.50%)</title><rect x="710.6" y="387.0" width="29.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="713.6" y="398.0">tc..</text>
</g>
<g>
<title>dst_release (3 samples, 0.07%)</title><rect x="711.2" y="371.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="714.2" y="382.0"></text>
</g>
<g>
<title>sock_def_readable (98 samples, 2.33%)</title><rect x="712.0" y="371.0" width="27.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="715.0" y="382.0">s..</text>
</g>
<g>
<title>__wake_up_common_lock (97 samples, 2.31%)</title><rect x="712.3" y="355.0" width="27.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="715.3" y="366.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (95 samples, 2.26%)</title><rect x="712.9" y="339.0" width="26.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="715.9" y="350.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="739.6" y="371.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="742.6" y="382.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="739.8" y="371.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="742.8" y="382.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="740.1" y="387.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="743.1" y="398.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="740.1" y="371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="743.1" y="382.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="740.1" y="355.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="743.1" y="366.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.02%)</title><rect x="740.4" y="387.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="743.4" y="398.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.02%)</title><rect x="740.7" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="743.7" y="398.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.02%)</title><rect x="741.0" y="419.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="744.0" y="430.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.02%)</title><rect x="741.0" y="403.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="744.0" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (24 samples, 0.57%)</title><rect x="741.3" y="467.0" width="6.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="744.3" y="478.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (18 samples, 0.43%)</title><rect x="741.3" y="451.0" width="5.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="744.3" y="462.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (6 samples, 0.14%)</title><rect x="744.3" y="435.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="747.3" y="446.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (1 samples, 0.02%)</title><rect x="746.0" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="749.0" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (1 samples, 0.02%)</title><rect x="746.3" y="451.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="749.3" y="462.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (1 samples, 0.02%)</title><rect x="746.6" y="451.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="749.6" y="462.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="746.9" y="451.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="749.9" y="462.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (2 samples, 0.05%)</title><rect x="747.1" y="451.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="750.1" y="462.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (2 samples, 0.05%)</title><rect x="747.1" y="435.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="750.1" y="446.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="747.7" y="451.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="750.7" y="462.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.05%)</title><rect x="748.0" y="483.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="751.0" y="494.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.05%)</title><rect x="748.6" y="483.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="751.6" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (42 samples, 1.00%)</title><rect x="749.1" y="483.0" width="11.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="752.1" y="494.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (2 samples, 0.05%)</title><rect x="750.0" y="467.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="753.0" y="478.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (32 samples, 0.76%)</title><rect x="750.5" y="467.0" width="9.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="753.5" y="478.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (1 samples, 0.02%)</title><rect x="759.5" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="762.5" y="478.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (2 samples, 0.05%)</title><rect x="759.8" y="467.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="762.8" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (1 samples, 0.02%)</title><rect x="760.3" y="467.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="763.3" y="478.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (1 samples, 0.02%)</title><rect x="760.6" y="467.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="763.6" y="478.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="760.6" y="451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="763.6" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.07%)</title><rect x="760.9" y="627.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="763.9" y="638.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="761.5" y="611.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="764.5" y="622.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.10%)</title><rect x="761.8" y="627.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="764.8" y="638.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (1 samples, 0.02%)</title><rect x="761.8" y="611.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="764.8" y="622.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="762.0" y="611.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="765.0" y="622.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="762.3" y="611.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="765.3" y="622.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (1 samples, 0.02%)</title><rect x="762.3" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="765.3" y="606.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (1 samples, 0.02%)</title><rect x="762.6" y="611.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="765.6" y="622.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="762.6" y="595.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="765.6" y="606.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.07%)</title><rect x="762.9" y="659.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="765.9" y="670.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="763.4" y="643.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="766.4" y="654.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="763.7" y="659.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="766.7" y="670.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="764.0" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="767.0" y="670.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.02%)</title><rect x="764.3" y="659.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="767.3" y="670.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.02%)</title><rect x="764.6" y="659.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="767.6" y="670.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="764.8" y="659.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="767.8" y="670.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.02%)</title><rect x="765.1" y="659.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="768.1" y="670.0"></text>
</g>
<g>
<title>__list_del_entry_valid (1 samples, 0.02%)</title><rect x="765.1" y="643.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="768.1" y="654.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="765.4" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="768.4" y="670.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.05%)</title><rect x="765.7" y="675.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="768.7" y="686.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="766.0" y="659.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="769.0" y="670.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.10%)</title><rect x="766.2" y="675.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="769.2" y="686.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="767.1" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="770.1" y="670.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (17 samples, 0.40%)</title><rect x="767.4" y="707.0" width="4.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="770.4" y="718.0"></text>
</g>
<g>
<title>__alloc_skb (15 samples, 0.36%)</title><rect x="767.9" y="691.0" width="4.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="770.9" y="702.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (6 samples, 0.14%)</title><rect x="767.9" y="675.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="770.9" y="686.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.14%)</title><rect x="767.9" y="659.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="770.9" y="670.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="769.3" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="772.3" y="654.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (7 samples, 0.17%)</title><rect x="769.6" y="675.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="772.6" y="686.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="770.5" y="659.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="773.5" y="670.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="770.7" y="659.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="773.7" y="670.0"></text>
</g>
<g>
<title>should_failslab (2 samples, 0.05%)</title><rect x="771.0" y="659.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="774.0" y="670.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.05%)</title><rect x="771.6" y="675.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="774.6" y="686.0"></text>
</g>
<g>
<title>skb_put (2 samples, 0.05%)</title><rect x="772.1" y="707.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="775.1" y="718.0"></text>
</g>
<g>
<title>tcp_send_mss (11 samples, 0.26%)</title><rect x="772.7" y="707.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="775.7" y="718.0"></text>
</g>
<g>
<title>tcp_current_mss (10 samples, 0.24%)</title><rect x="773.0" y="691.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="776.0" y="702.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.10%)</title><rect x="774.7" y="675.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="777.7" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.07%)</title><rect x="775.8" y="755.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="778.8" y="766.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="775.8" y="739.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="778.8" y="750.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="775.8" y="723.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="778.8" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.02%)</title><rect x="776.6" y="835.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="779.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.24%)</title><rect x="776.9" y="835.0" width="2.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="779.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.24%)</title><rect x="776.9" y="819.0" width="2.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="779.9" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (8 samples, 0.19%)</title><rect x="776.9" y="803.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="779.9" y="814.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.07%)</title><rect x="777.2" y="787.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="780.2" y="798.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.10%)</title><rect x="778.0" y="787.0" width="1.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="781.0" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="778.3" y="771.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="781.3" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="778.9" y="771.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="781.9" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="779.2" y="803.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="782.2" y="814.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.07%)</title><rect x="779.7" y="835.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="782.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="780.6" y="915.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="783.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="780.6" y="899.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="783.6" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="780.6" y="883.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="783.6" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getMethod (1 samples, 0.02%)</title><rect x="780.8" y="915.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.8" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.19%)</title><rect x="781.1" y="931.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.1" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="781.1" y="915.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="784.1" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="781.1" y="899.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.1" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="781.1" y="883.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="784.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (5 samples, 0.12%)</title><rect x="781.4" y="915.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.4" y="926.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.05%)</title><rect x="782.3" y="899.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="785.3" y="910.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.05%)</title><rect x="782.8" y="915.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="785.8" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="782.8" y="899.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="782.8" y="883.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="785.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="783.1" y="867.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="786.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (92 samples, 2.19%)</title><rect x="783.4" y="931.0" width="25.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="786.4" y="942.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.07%)</title><rect x="783.4" y="915.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.4" y="926.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.07%)</title><rect x="783.4" y="899.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="786.4" y="910.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.07%)</title><rect x="783.4" y="883.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.4" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="784.2" y="915.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="787.2" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="784.2" y="899.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.2" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="784.2" y="883.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="787.2" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="784.2" y="867.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="787.2" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="784.2" y="851.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="787.2" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="784.5" y="835.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="787.5" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="784.5" y="819.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="787.5" y="830.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="784.5" y="803.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="787.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1 samples, 0.02%)</title><rect x="784.8" y="915.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="787.8" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (1 samples, 0.02%)</title><rect x="784.8" y="899.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="787.8" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (86 samples, 2.05%)</title><rect x="785.1" y="915.0" width="24.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="788.1" y="926.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (86 samples, 2.05%)</title><rect x="785.1" y="899.0" width="24.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.1" y="910.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (85 samples, 2.02%)</title><rect x="785.1" y="883.0" width="23.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.1" y="894.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (82 samples, 1.95%)</title><rect x="785.3" y="867.0" width="23.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="788.3" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (82 samples, 1.95%)</title><rect x="785.3" y="851.0" width="23.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="788.3" y="862.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (6 samples, 0.14%)</title><rect x="785.9" y="835.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.9" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (6 samples, 0.14%)</title><rect x="785.9" y="819.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="788.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (30 samples, 0.71%)</title><rect x="787.6" y="835.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="790.6" y="846.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="795.7" y="819.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="798.7" y="830.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="795.7" y="803.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="798.7" y="814.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="795.7" y="787.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="798.7" y="798.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="795.7" y="771.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="798.7" y="782.0"></text>
</g>
<g>
<title>blk_done_softirq (1 samples, 0.02%)</title><rect x="795.7" y="755.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="798.7" y="766.0"></text>
</g>
<g>
<title>scsi_io_completion (1 samples, 0.02%)</title><rect x="795.7" y="739.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="798.7" y="750.0"></text>
</g>
<g>
<title>scsi_end_request (1 samples, 0.02%)</title><rect x="795.7" y="723.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="798.7" y="734.0"></text>
</g>
<g>
<title>blk_update_request (1 samples, 0.02%)</title><rect x="795.7" y="707.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="798.7" y="718.0"></text>
</g>
<g>
<title>bio_endio (1 samples, 0.02%)</title><rect x="795.7" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="798.7" y="702.0"></text>
</g>
<g>
<title>__rq_qos_done_bio (1 samples, 0.02%)</title><rect x="795.7" y="675.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="798.7" y="686.0"></text>
</g>
<g>
<title>blkcg_iolatency_done_bio (1 samples, 0.02%)</title><rect x="795.7" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="798.7" y="670.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="795.7" y="643.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="798.7" y="654.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="795.7" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="798.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (44 samples, 1.05%)</title><rect x="796.0" y="835.0" width="12.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="799.0" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (43 samples, 1.02%)</title><rect x="796.3" y="819.0" width="12.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (37 samples, 0.88%)</title><rect x="798.0" y="803.0" width="10.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="801.0" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="798.5" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="801.5" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.02%)</title><rect x="798.8" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="801.8" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (30 samples, 0.71%)</title><rect x="799.1" y="787.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="802.1" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (3 samples, 0.07%)</title><rect x="802.8" y="771.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="805.8" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (9 samples, 0.21%)</title><rect x="803.6" y="771.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="806.6" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.07%)</title><rect x="804.2" y="755.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="807.2" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.10%)</title><rect x="805.0" y="755.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (4 samples, 0.10%)</title><rect x="806.1" y="771.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.1" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (1 samples, 0.02%)</title><rect x="807.0" y="755.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="810.0" y="766.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="807.2" y="771.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="810.2" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="807.5" y="787.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="810.5" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="807.5" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="810.5" y="782.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="807.8" y="787.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="810.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.tombstone (2 samples, 0.05%)</title><rect x="808.4" y="867.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.4" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.&lt;init&gt; (2 samples, 0.05%)</title><rect x="808.4" y="851.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="811.4" y="862.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="808.4" y="835.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="811.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (1 samples, 0.02%)</title><rect x="808.9" y="883.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="811.9" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getSizeOfFlushedRow (1 samples, 0.02%)</title><rect x="808.9" y="867.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="811.9" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.02%)</title><rect x="808.9" y="851.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="811.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.02%)</title><rect x="809.2" y="947.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="812.2" y="958.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.07%)</title><rect x="809.5" y="947.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="812.5" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.07%)</title><rect x="809.5" y="931.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="812.5" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.05%)</title><rect x="809.5" y="915.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="812.5" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="810.1" y="915.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="813.1" y="926.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="810.1" y="899.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.1" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.07%)</title><rect x="810.3" y="947.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="813.3" y="958.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.07%)</title><rect x="810.3" y="931.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.3" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="810.3" y="915.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.3" y="926.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="810.3" y="899.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.3" y="910.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="810.3" y="883.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="813.3" y="894.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="810.9" y="899.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.9" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (23 samples, 0.55%)</title><rect x="811.2" y="979.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="814.2" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.05%)</title><rect x="812.3" y="963.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="815.3" y="974.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="812.3" y="947.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="815.3" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="812.3" y="931.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="815.3" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="812.6" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="815.6" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.31%)</title><rect x="812.9" y="963.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="815.9" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.31%)</title><rect x="812.9" y="947.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="815.9" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.10%)</title><rect x="816.5" y="963.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.5" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.07%)</title><rect x="817.6" y="979.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.6" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="817.9" y="963.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.9" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="817.9" y="947.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.9" y="958.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="818.2" y="931.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="821.2" y="942.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="818.2" y="915.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="821.2" y="926.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.02%)</title><rect x="818.2" y="899.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="821.2" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.21%)</title><rect x="818.5" y="979.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.5" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.21%)</title><rect x="818.5" y="963.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="821.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="820.7" y="947.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="823.7" y="958.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (1 samples, 0.02%)</title><rect x="820.7" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="823.7" y="942.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (1 samples, 0.02%)</title><rect x="820.7" y="915.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="823.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (115 samples, 2.74%)</title><rect x="821.0" y="995.0" width="32.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="824.0" y="1006.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (115 samples, 2.74%)</title><rect x="821.0" y="979.0" width="32.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="824.0" y="990.0">on..</text>
</g>
<g>
<title>[unknown] (21 samples, 0.50%)</title><rect x="822.4" y="963.0" width="5.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="825.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.50%)</title><rect x="822.4" y="947.0" width="5.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="825.4" y="958.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (18 samples, 0.43%)</title><rect x="822.4" y="931.0" width="5.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="825.4" y="942.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="822.4" y="915.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="825.4" y="926.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="822.7" y="915.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="825.7" y="926.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="823.3" y="915.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="826.3" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="823.5" y="915.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="826.5" y="926.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="823.8" y="915.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="826.8" y="926.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (11 samples, 0.26%)</title><rect x="824.4" y="915.0" width="3.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="827.4" y="926.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="825.2" y="899.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="828.2" y="910.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="825.8" y="899.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="828.8" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (4 samples, 0.10%)</title><rect x="826.3" y="899.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="829.3" y="910.0"></text>
</g>
<g>
<title>__libc_recv (1 samples, 0.02%)</title><rect x="827.5" y="931.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="830.5" y="942.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="827.7" y="931.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="830.7" y="942.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="828.0" y="931.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="831.0" y="942.0"></text>
</g>
<g>
<title>__libc_recv (89 samples, 2.12%)</title><rect x="828.3" y="963.0" width="25.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="831.3" y="974.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (65 samples, 1.55%)</title><rect x="835.0" y="947.0" width="18.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="838.0" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (65 samples, 1.55%)</title><rect x="835.0" y="931.0" width="18.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="838.0" y="942.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (53 samples, 1.26%)</title><rect x="838.4" y="915.0" width="14.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="841.4" y="926.0"></text>
</g>
<g>
<title>__sys_recvfrom (52 samples, 1.24%)</title><rect x="838.7" y="899.0" width="14.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="841.7" y="910.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="839.0" y="883.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="842.0" y="894.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="839.3" y="883.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="842.3" y="894.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="839.3" y="867.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="842.3" y="878.0"></text>
</g>
<g>
<title>inet_recvmsg (35 samples, 0.83%)</title><rect x="839.5" y="883.0" width="9.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="842.5" y="894.0"></text>
</g>
<g>
<title>tcp_recvmsg (35 samples, 0.83%)</title><rect x="839.5" y="867.0" width="9.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="842.5" y="878.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.12%)</title><rect x="841.5" y="851.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="844.5" y="862.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.12%)</title><rect x="841.5" y="835.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="844.5" y="846.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.10%)</title><rect x="841.8" y="819.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="844.8" y="830.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.10%)</title><rect x="841.8" y="803.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="844.8" y="814.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="842.9" y="851.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="845.9" y="862.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="843.2" y="851.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="846.2" y="862.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="843.2" y="835.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="846.2" y="846.0"></text>
</g>
<g>
<title>ns_to_timespec64 (1 samples, 0.02%)</title><rect x="843.5" y="851.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="846.5" y="862.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="843.8" y="851.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="846.8" y="862.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="843.8" y="835.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="846.8" y="846.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (15 samples, 0.36%)</title><rect x="844.0" y="851.0" width="4.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="847.0" y="862.0"></text>
</g>
<g>
<title>__skb_datagram_iter (15 samples, 0.36%)</title><rect x="844.0" y="835.0" width="4.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="847.0" y="846.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_r9 (1 samples, 0.02%)</title><rect x="845.2" y="819.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="848.2" y="830.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.02%)</title><rect x="845.4" y="819.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="848.4" y="830.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.02%)</title><rect x="845.4" y="803.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="848.4" y="814.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="845.4" y="787.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="848.4" y="798.0"></text>
</g>
<g>
<title>simple_copy_to_iter (9 samples, 0.21%)</title><rect x="845.7" y="819.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="848.7" y="830.0"></text>
</g>
<g>
<title>__check_object_size (6 samples, 0.14%)</title><rect x="846.6" y="803.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="849.6" y="814.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="847.4" y="787.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="850.4" y="798.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.05%)</title><rect x="847.7" y="787.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="850.7" y="798.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="848.2" y="851.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="851.2" y="862.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.05%)</title><rect x="848.5" y="851.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="851.5" y="862.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="848.5" y="835.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="851.5" y="846.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="848.8" y="819.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="851.8" y="830.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="848.8" y="803.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="851.8" y="814.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (1 samples, 0.02%)</title><rect x="849.1" y="851.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="852.1" y="862.0"></text>
</g>
<g>
<title>sock_recvmsg (10 samples, 0.24%)</title><rect x="849.4" y="883.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="852.4" y="894.0"></text>
</g>
<g>
<title>security_socket_recvmsg (10 samples, 0.24%)</title><rect x="849.4" y="867.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="852.4" y="878.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (1 samples, 0.02%)</title><rect x="849.4" y="851.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="852.4" y="862.0"></text>
</g>
<g>
<title>sock_has_perm (9 samples, 0.21%)</title><rect x="849.6" y="851.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="852.6" y="862.0"></text>
</g>
<g>
<title>avc_has_perm (6 samples, 0.14%)</title><rect x="850.5" y="835.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="853.5" y="846.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.10%)</title><rect x="852.2" y="883.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="855.2" y="894.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.10%)</title><rect x="852.2" y="867.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="855.2" y="878.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="852.5" y="851.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="855.5" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=13278] (1,022 samples, 24.32%)</title><rect x="853.3" y="1059.0" width="287.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="856.3" y="1070.0">[NIO Selector #3 tid=13278]</text>
</g>
<g>
<title>[unknown_Java] (11 samples, 0.26%)</title><rect x="853.3" y="1043.0" width="3.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="856.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="855.8" y="1027.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="858.8" y="1038.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="855.8" y="1011.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="858.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,010 samples, 24.04%)</title><rect x="856.4" y="1043.0" width="283.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="859.4" y="1054.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (158 samples, 3.76%)</title><rect x="856.7" y="1027.0" width="44.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="859.7" y="1038.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.07%)</title><rect x="857.2" y="1011.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="860.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.02%)</title><rect x="857.8" y="995.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="860.8" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (153 samples, 3.64%)</title><rect x="858.1" y="1011.0" width="42.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="861.1" y="1022.0">one/..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (127 samples, 3.02%)</title><rect x="859.8" y="995.0" width="35.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="862.8" y="1006.0">.an..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (100 samples, 2.38%)</title><rect x="867.3" y="979.0" width="28.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="870.3" y="990.0">en..</text>
</g>
<g>
<title>do_syscall_64 (100 samples, 2.38%)</title><rect x="867.3" y="963.0" width="28.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="870.3" y="974.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (92 samples, 2.19%)</title><rect x="869.6" y="947.0" width="25.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="872.6" y="958.0">_..</text>
</g>
<g>
<title>do_epoll_wait (92 samples, 2.19%)</title><rect x="869.6" y="931.0" width="25.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="872.6" y="942.0">d..</text>
</g>
<g>
<title>__fget_light (4 samples, 0.10%)</title><rect x="869.9" y="915.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="872.9" y="926.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="870.1" y="899.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="873.1" y="910.0"></text>
</g>
<g>
<title>ep_poll (84 samples, 2.00%)</title><rect x="871.0" y="915.0" width="23.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="874.0" y="926.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (43 samples, 1.02%)</title><rect x="874.4" y="899.0" width="12.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="877.4" y="910.0"></text>
</g>
<g>
<title>ep_send_events_proc (24 samples, 0.57%)</title><rect x="878.3" y="883.0" width="6.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="881.3" y="894.0"></text>
</g>
<g>
<title>__list_del_entry_valid (1 samples, 0.02%)</title><rect x="879.1" y="867.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="882.1" y="878.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (20 samples, 0.48%)</title><rect x="879.4" y="867.0" width="5.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="882.4" y="878.0"></text>
</g>
<g>
<title>sock_poll (19 samples, 0.45%)</title><rect x="879.7" y="851.0" width="5.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="882.7" y="862.0"></text>
</g>
<g>
<title>tcp_poll (12 samples, 0.29%)</title><rect x="881.7" y="835.0" width="3.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="884.7" y="846.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.10%)</title><rect x="883.9" y="819.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="886.9" y="830.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.07%)</title><rect x="885.0" y="883.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="888.0" y="894.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="885.6" y="867.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="888.6" y="878.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="885.6" y="851.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="888.6" y="862.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.05%)</title><rect x="885.9" y="883.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="888.9" y="894.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (29 samples, 0.69%)</title><rect x="886.4" y="899.0" width="8.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="889.4" y="910.0"></text>
</g>
<g>
<title>schedule (25 samples, 0.59%)</title><rect x="887.6" y="883.0" width="7.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="890.6" y="894.0"></text>
</g>
<g>
<title>__sched_text_start (23 samples, 0.55%)</title><rect x="888.1" y="867.0" width="6.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="891.1" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (20 samples, 0.48%)</title><rect x="889.0" y="851.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="892.0" y="862.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.07%)</title><rect x="894.6" y="915.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="897.6" y="926.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.02%)</title><rect x="895.4" y="995.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="898.4" y="1006.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="895.7" y="995.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="898.7" y="1006.0"></text>
</g>
<g>
<title>__GI___clock_gettime (9 samples, 0.21%)</title><rect x="896.0" y="995.0" width="2.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="899.0" y="1006.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.10%)</title><rect x="897.4" y="979.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="900.4" y="990.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="898.5" y="995.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="901.5" y="1006.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.05%)</title><rect x="898.8" y="995.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="901.8" y="1006.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (6 samples, 0.14%)</title><rect x="899.4" y="995.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="902.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (851 samples, 20.25%)</title><rect x="901.0" y="1027.0" width="239.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="904.0" y="1038.0">one/nio/net/Session.process</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="901.6" y="1011.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="904.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (848 samples, 20.18%)</title><rect x="901.9" y="1011.0" width="238.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="904.9" y="1022.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (719 samples, 17.11%)</title><rect x="901.9" y="995.0" width="201.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="904.9" y="1006.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (654 samples, 15.56%)</title><rect x="907.8" y="979.0" width="183.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="910.8" y="990.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (651 samples, 15.49%)</title><rect x="908.6" y="963.0" width="182.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="911.6" y="974.0">one/nio/http/HttpServer...</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (643 samples, 15.30%)</title><rect x="908.6" y="947.0" width="180.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="911.6" y="958.0">RequestHandler1_entity...</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (526 samples, 12.52%)</title><rect x="908.6" y="931.0" width="147.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="911.6" y="942.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (521 samples, 12.40%)</title><rect x="909.7" y="915.0" width="146.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="912.7" y="926.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.24%)</title><rect x="909.7" y="899.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="912.7" y="910.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (9 samples, 0.21%)</title><rect x="910.0" y="883.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.0" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.10%)</title><rect x="910.3" y="867.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="911.1" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="914.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.10%)</title><rect x="911.4" y="867.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="914.4" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.10%)</title><rect x="911.4" y="851.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="914.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.05%)</title><rect x="912.0" y="835.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="915.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.05%)</title><rect x="912.0" y="819.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="915.0" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (511 samples, 12.16%)</title><rect x="912.6" y="899.0" width="143.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="915.6" y="910.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session.write (510 samples, 12.14%)</title><rect x="912.8" y="883.0" width="143.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.8" y="894.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (510 samples, 12.14%)</title><rect x="912.8" y="867.0" width="143.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="915.8" y="878.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (510 samples, 12.14%)</title><rect x="912.8" y="851.0" width="143.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.8" y="862.0">one/nio/net/Native..</text>
</g>
<g>
<title>.annobin_send.c (499 samples, 11.88%)</title><rect x="913.7" y="835.0" width="140.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="916.7" y="846.0">.annobin_send.c</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (490 samples, 11.66%)</title><rect x="916.2" y="819.0" width="137.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="919.2" y="830.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (490 samples, 11.66%)</title><rect x="916.2" y="803.0" width="137.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="919.2" y="814.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (487 samples, 11.59%)</title><rect x="917.0" y="787.0" width="136.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="920.0" y="798.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (484 samples, 11.52%)</title><rect x="917.9" y="771.0" width="135.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="920.9" y="782.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="919.9" y="755.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="922.9" y="766.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.05%)</title><rect x="920.1" y="755.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="923.1" y="766.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.05%)</title><rect x="920.1" y="739.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="923.1" y="750.0"></text>
</g>
<g>
<title>sock_sendmsg (471 samples, 11.21%)</title><rect x="920.7" y="755.0" width="132.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="923.7" y="766.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.02%)</title><rect x="920.7" y="739.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="923.7" y="750.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.05%)</title><rect x="921.0" y="739.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="924.0" y="750.0"></text>
</g>
<g>
<title>sock_has_perm (1 samples, 0.02%)</title><rect x="921.3" y="723.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="924.3" y="734.0"></text>
</g>
<g>
<title>tcp_sendmsg (468 samples, 11.14%)</title><rect x="921.5" y="739.0" width="131.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="924.5" y="750.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (465 samples, 11.07%)</title><rect x="922.4" y="723.0" width="130.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="925.4" y="734.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.07%)</title><rect x="923.2" y="707.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="926.2" y="718.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.05%)</title><rect x="923.5" y="691.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="926.5" y="702.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (425 samples, 10.11%)</title><rect x="924.1" y="707.0" width="119.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="927.1" y="718.0">__tcp_push_pend..</text>
</g>
<g>
<title>tcp_write_xmit (424 samples, 10.09%)</title><rect x="924.3" y="691.0" width="119.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="927.3" y="702.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (407 samples, 9.69%)</title><rect x="926.3" y="675.0" width="114.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="929.3" y="686.0">__tcp_transmit..</text>
</g>
<g>
<title>__ip_queue_xmit (386 samples, 9.19%)</title><rect x="929.1" y="659.0" width="108.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="932.1" y="670.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.07%)</title><rect x="929.1" y="643.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="932.1" y="654.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.07%)</title><rect x="929.1" y="627.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="932.1" y="638.0"></text>
</g>
<g>
<title>ip_local_out (71 samples, 1.69%)</title><rect x="930.0" y="643.0" width="19.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="933.0" y="654.0"></text>
</g>
<g>
<title>__ip_local_out (71 samples, 1.69%)</title><rect x="930.0" y="627.0" width="19.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="933.0" y="638.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.05%)</title><rect x="930.2" y="611.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="933.2" y="622.0"></text>
</g>
<g>
<title>nf_hook_slow (68 samples, 1.62%)</title><rect x="930.8" y="611.0" width="19.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="933.8" y="622.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (23 samples, 0.55%)</title><rect x="931.1" y="595.0" width="6.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="934.1" y="606.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (3 samples, 0.07%)</title><rect x="937.5" y="595.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="940.5" y="606.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (3 samples, 0.07%)</title><rect x="938.4" y="595.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="941.4" y="606.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (2 samples, 0.05%)</title><rect x="938.7" y="579.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="941.7" y="590.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (2 samples, 0.05%)</title><rect x="939.2" y="595.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="942.2" y="606.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (3 samples, 0.07%)</title><rect x="939.8" y="595.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="942.8" y="606.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (1 samples, 0.02%)</title><rect x="940.6" y="595.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="943.6" y="606.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (26 samples, 0.62%)</title><rect x="940.9" y="595.0" width="7.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="943.9" y="606.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (6 samples, 0.14%)</title><rect x="941.8" y="579.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="944.8" y="590.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (3 samples, 0.07%)</title><rect x="943.4" y="579.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="946.4" y="590.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (3 samples, 0.07%)</title><rect x="944.3" y="579.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="947.3" y="590.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (9 samples, 0.21%)</title><rect x="945.1" y="579.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="948.1" y="590.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (1 samples, 0.02%)</title><rect x="947.4" y="563.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="950.4" y="574.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (2 samples, 0.05%)</title><rect x="947.7" y="579.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="950.7" y="590.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (5 samples, 0.12%)</title><rect x="948.2" y="595.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="951.2" y="606.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (3 samples, 0.07%)</title><rect x="948.5" y="579.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="951.5" y="590.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (1 samples, 0.02%)</title><rect x="949.3" y="579.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="952.3" y="590.0"></text>
</g>
<g>
<title>selinux_ipv4_output (1 samples, 0.02%)</title><rect x="949.6" y="595.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="952.6" y="606.0"></text>
</g>
<g>
<title>netlbl_enabled (1 samples, 0.02%)</title><rect x="949.6" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="952.6" y="590.0"></text>
</g>
<g>
<title>ip_output (312 samples, 7.43%)</title><rect x="949.9" y="643.0" width="87.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="952.9" y="654.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (295 samples, 7.02%)</title><rect x="949.9" y="627.0" width="82.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="952.9" y="638.0">ip_finish..</text>
</g>
<g>
<title>__dev_queue_xmit (24 samples, 0.57%)</title><rect x="951.3" y="611.0" width="6.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="954.3" y="622.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (16 samples, 0.38%)</title><rect x="953.0" y="595.0" width="4.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="956.0" y="606.0"></text>
</g>
<g>
<title>loopback_xmit (14 samples, 0.33%)</title><rect x="953.6" y="579.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="956.6" y="590.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.07%)</title><rect x="953.8" y="563.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="956.8" y="574.0"></text>
</g>
<g>
<title>netif_rx (7 samples, 0.17%)</title><rect x="954.7" y="563.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="957.7" y="574.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.14%)</title><rect x="955.0" y="547.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="958.0" y="558.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.10%)</title><rect x="955.0" y="531.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="958.0" y="542.0"></text>
</g>
<g>
<title>ktime_get_with_offset (2 samples, 0.05%)</title><rect x="956.1" y="531.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="959.1" y="542.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.07%)</title><rect x="956.6" y="563.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="959.6" y="574.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.05%)</title><rect x="957.5" y="595.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="960.5" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (266 samples, 6.33%)</title><rect x="958.0" y="611.0" width="74.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="961.0" y="622.0">__local_..</text>
</g>
<g>
<title>do_softirq.part.0 (266 samples, 6.33%)</title><rect x="958.0" y="595.0" width="74.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="961.0" y="606.0">do_softi..</text>
</g>
<g>
<title>do_softirq_own_stack (261 samples, 6.21%)</title><rect x="959.4" y="579.0" width="73.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="962.4" y="590.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (261 samples, 6.21%)</title><rect x="959.4" y="563.0" width="73.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="962.4" y="574.0">__softir..</text>
</g>
<g>
<title>net_rx_action (259 samples, 6.16%)</title><rect x="959.7" y="547.0" width="72.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="962.7" y="558.0">net_rx_a..</text>
</g>
<g>
<title>process_backlog (259 samples, 6.16%)</title><rect x="959.7" y="531.0" width="72.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="962.7" y="542.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (257 samples, 6.12%)</title><rect x="960.3" y="515.0" width="72.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="963.3" y="526.0">__netif_..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.10%)</title><rect x="960.6" y="499.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="963.6" y="510.0"></text>
</g>
<g>
<title>ip_rcv (252 samples, 6.00%)</title><rect x="961.7" y="499.0" width="70.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="964.7" y="510.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (199 samples, 4.74%)</title><rect x="962.3" y="483.0" width="55.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="965.3" y="494.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (166 samples, 3.95%)</title><rect x="963.1" y="467.0" width="46.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="966.1" y="478.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (165 samples, 3.93%)</title><rect x="963.4" y="451.0" width="46.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="966.4" y="462.0">ip_p..</text>
</g>
<g>
<title>tcp_v4_rcv (165 samples, 3.93%)</title><rect x="963.4" y="435.0" width="46.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="966.4" y="446.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.19%)</title><rect x="964.2" y="419.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="967.2" y="430.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.05%)</title><rect x="965.9" y="403.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="968.9" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="966.5" y="419.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="969.5" y="430.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.12%)</title><rect x="966.7" y="419.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="969.7" y="430.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.07%)</title><rect x="967.3" y="403.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="970.3" y="414.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (3 samples, 0.07%)</title><rect x="967.3" y="387.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="970.3" y="398.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.02%)</title><rect x="968.2" y="419.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="971.2" y="430.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (146 samples, 3.47%)</title><rect x="968.4" y="419.0" width="41.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="971.4" y="430.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (146 samples, 3.47%)</title><rect x="968.4" y="403.0" width="41.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="971.4" y="414.0">tcp..</text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.07%)</title><rect x="968.7" y="387.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="971.7" y="398.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.05%)</title><rect x="969.0" y="371.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="972.0" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="969.0" y="355.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="972.0" y="366.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="969.3" y="355.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="972.3" y="366.0"></text>
</g>
<g>
<title>tcp_ack (36 samples, 0.86%)</title><rect x="969.6" y="387.0" width="10.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="972.6" y="398.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.14%)</title><rect x="973.2" y="371.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="976.2" y="382.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="973.2" y="355.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="976.2" y="366.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.07%)</title><rect x="973.8" y="355.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="976.8" y="366.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="974.6" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="977.6" y="366.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.05%)</title><rect x="974.9" y="371.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="977.9" y="382.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="975.5" y="371.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="978.5" y="382.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="975.5" y="355.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="978.5" y="366.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.02%)</title><rect x="975.7" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="978.7" y="382.0"></text>
</g>
<g>
<title>rb_erase (3 samples, 0.07%)</title><rect x="976.0" y="371.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="979.0" y="382.0"></text>
</g>
<g>
<title>tcp_chrono_stop (2 samples, 0.05%)</title><rect x="976.9" y="371.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="979.9" y="382.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="977.4" y="371.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="980.4" y="382.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="977.7" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="980.7" y="382.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.05%)</title><rect x="978.0" y="371.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="981.0" y="382.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.05%)</title><rect x="978.5" y="371.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="981.5" y="382.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.05%)</title><rect x="979.1" y="371.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="982.1" y="382.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="979.7" y="387.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="982.7" y="398.0"></text>
</g>
<g>
<title>tcp_data_queue (104 samples, 2.48%)</title><rect x="979.9" y="387.0" width="29.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="982.9" y="398.0">tc..</text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="980.5" y="371.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="983.5" y="382.0"></text>
</g>
<g>
<title>sock_def_readable (99 samples, 2.36%)</title><rect x="980.8" y="371.0" width="27.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="983.8" y="382.0">s..</text>
</g>
<g>
<title>__wake_up_common_lock (95 samples, 2.26%)</title><rect x="981.9" y="355.0" width="26.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="984.9" y="366.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (94 samples, 2.24%)</title><rect x="982.2" y="339.0" width="26.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="985.2" y="350.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.05%)</title><rect x="1008.6" y="371.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1011.6" y="382.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="1009.2" y="387.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1012.2" y="398.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="1009.2" y="371.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1012.2" y="382.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="1009.2" y="355.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1012.2" y="366.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.02%)</title><rect x="1009.4" y="419.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1012.4" y="430.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.02%)</title><rect x="1009.4" y="403.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1012.4" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (30 samples, 0.71%)</title><rect x="1009.7" y="467.0" width="8.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1012.7" y="478.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1010.6" y="451.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1013.6" y="462.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (19 samples, 0.45%)</title><rect x="1010.8" y="451.0" width="5.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1013.8" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="1014.2" y="435.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1017.2" y="446.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (2 samples, 0.05%)</title><rect x="1014.5" y="435.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1017.5" y="446.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (4 samples, 0.10%)</title><rect x="1015.0" y="435.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1018.0" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.05%)</title><rect x="1016.2" y="451.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1019.2" y="462.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (1 samples, 0.02%)</title><rect x="1016.7" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1019.7" y="462.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="1017.0" y="451.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1020.0" y="462.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (2 samples, 0.05%)</title><rect x="1017.3" y="451.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1020.3" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="1017.9" y="451.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1020.9" y="462.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1018.1" y="483.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1021.1" y="494.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.02%)</title><rect x="1018.1" y="467.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1021.1" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (50 samples, 1.19%)</title><rect x="1018.4" y="483.0" width="14.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1021.4" y="494.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (1 samples, 0.02%)</title><rect x="1019.8" y="467.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1022.8" y="478.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (38 samples, 0.90%)</title><rect x="1020.1" y="467.0" width="10.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1023.1" y="478.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (2 samples, 0.05%)</title><rect x="1030.8" y="467.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1033.8" y="478.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (1 samples, 0.02%)</title><rect x="1031.3" y="467.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1034.3" y="478.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (3 samples, 0.07%)</title><rect x="1031.6" y="467.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1034.6" y="478.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1032.5" y="547.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1035.5" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1032.5" y="531.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1035.5" y="542.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1032.7" y="627.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1035.7" y="638.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="1032.7" y="611.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1035.7" y="622.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.38%)</title><rect x="1033.0" y="627.0" width="4.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1036.0" y="638.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.12%)</title><rect x="1033.9" y="611.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1036.9" y="622.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (1 samples, 0.02%)</title><rect x="1035.3" y="611.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1038.3" y="622.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (2 samples, 0.05%)</title><rect x="1035.5" y="611.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1038.5" y="622.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (2 samples, 0.05%)</title><rect x="1035.5" y="595.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1038.5" y="606.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (1 samples, 0.02%)</title><rect x="1036.1" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1039.1" y="622.0"></text>
</g>
<g>
<title>selinux_ip_postroute (3 samples, 0.07%)</title><rect x="1036.4" y="611.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1039.4" y="622.0"></text>
</g>
<g>
<title>selinux_peerlbl_enabled (1 samples, 0.02%)</title><rect x="1037.0" y="595.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1040.0" y="606.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (1 samples, 0.02%)</title><rect x="1037.2" y="611.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1040.2" y="622.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.10%)</title><rect x="1037.5" y="659.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1040.5" y="670.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.05%)</title><rect x="1038.1" y="643.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1041.1" y="654.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="1038.6" y="659.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1041.6" y="670.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.05%)</title><rect x="1038.9" y="659.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1041.9" y="670.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.05%)</title><rect x="1039.5" y="659.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1042.5" y="670.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.05%)</title><rect x="1040.0" y="659.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1043.0" y="670.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="1040.6" y="675.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1043.6" y="686.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.10%)</title><rect x="1040.9" y="675.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1043.9" y="686.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="1040.9" y="659.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1043.9" y="670.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="1040.9" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1043.9" y="654.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.05%)</title><rect x="1041.2" y="659.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1044.2" y="670.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="1041.7" y="659.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1044.7" y="670.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.10%)</title><rect x="1042.0" y="675.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1045.0" y="686.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.05%)</title><rect x="1042.6" y="659.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1045.6" y="670.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.02%)</title><rect x="1043.1" y="675.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1046.1" y="686.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.05%)</title><rect x="1043.4" y="707.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1046.4" y="718.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.05%)</title><rect x="1043.4" y="691.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1046.4" y="702.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="1043.7" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1046.7" y="686.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (24 samples, 0.57%)</title><rect x="1044.0" y="707.0" width="6.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1047.0" y="718.0"></text>
</g>
<g>
<title>__alloc_skb (23 samples, 0.55%)</title><rect x="1044.3" y="691.0" width="6.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1047.3" y="702.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (9 samples, 0.21%)</title><rect x="1044.8" y="675.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1047.8" y="686.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (9 samples, 0.21%)</title><rect x="1044.8" y="659.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1047.8" y="670.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="1046.8" y="643.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1049.8" y="654.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1047.1" y="643.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1050.1" y="654.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (11 samples, 0.26%)</title><rect x="1047.3" y="675.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1050.3" y="686.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.05%)</title><rect x="1049.9" y="659.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1052.9" y="670.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.02%)</title><rect x="1050.4" y="675.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1053.4" y="686.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="1050.7" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1053.7" y="718.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.02%)</title><rect x="1050.7" y="691.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1053.7" y="702.0"></text>
</g>
<g>
<title>skb_put (1 samples, 0.02%)</title><rect x="1051.0" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1054.0" y="718.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.14%)</title><rect x="1051.3" y="707.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1054.3" y="718.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.14%)</title><rect x="1051.3" y="691.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1054.3" y="702.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.07%)</title><rect x="1051.8" y="675.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1054.8" y="686.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="1052.7" y="675.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1055.7" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.07%)</title><rect x="1053.0" y="755.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1056.0" y="766.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="1053.0" y="739.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1056.0" y="750.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="1053.0" y="723.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1056.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.17%)</title><rect x="1053.8" y="835.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1056.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.17%)</title><rect x="1053.8" y="819.0" width="2.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1056.8" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.12%)</title><rect x="1053.8" y="803.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1056.8" y="814.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1054.4" y="787.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1057.4" y="798.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="1054.6" y="787.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1057.6" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.02%)</title><rect x="1054.9" y="771.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1057.9" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="1055.2" y="803.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1058.2" y="814.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="1055.8" y="835.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1058.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="1056.0" y="915.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1059.0" y="926.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="1056.0" y="899.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1059.0" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (15 samples, 0.36%)</title><rect x="1056.3" y="931.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1059.3" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="1056.6" y="915.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1059.6" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="1056.6" y="899.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1059.6" y="910.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="1056.6" y="883.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1059.6" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1056.9" y="883.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1059.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (10 samples, 0.24%)</title><rect x="1057.2" y="915.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1060.2" y="926.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="1058.6" y="899.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1061.6" y="910.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.10%)</title><rect x="1058.9" y="899.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1061.9" y="910.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.05%)</title><rect x="1060.0" y="915.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1063.0" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="1060.0" y="899.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1063.0" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="1060.0" y="883.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1063.0" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="1060.0" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1063.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (102 samples, 2.43%)</title><rect x="1060.5" y="931.0" width="28.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1063.5" y="942.0">ru..</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.07%)</title><rect x="1060.8" y="915.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1063.8" y="926.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.07%)</title><rect x="1060.8" y="899.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1063.8" y="910.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.07%)</title><rect x="1060.8" y="883.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1063.8" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="1061.7" y="915.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1064.7" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="1061.7" y="899.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1064.7" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1061.9" y="915.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1064.9" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (3 samples, 0.07%)</title><rect x="1062.5" y="915.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1065.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (2 samples, 0.05%)</title><rect x="1062.8" y="899.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1065.8" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (2 samples, 0.05%)</title><rect x="1062.8" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1065.8" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1062.8" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1065.8" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1062.8" y="851.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1065.8" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (91 samples, 2.17%)</title><rect x="1063.4" y="915.0" width="25.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1066.4" y="926.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (91 samples, 2.17%)</title><rect x="1063.4" y="899.0" width="25.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1066.4" y="910.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (90 samples, 2.14%)</title><rect x="1063.4" y="883.0" width="25.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1066.4" y="894.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (81 samples, 1.93%)</title><rect x="1063.4" y="867.0" width="22.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1066.4" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (81 samples, 1.93%)</title><rect x="1063.4" y="851.0" width="22.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1066.4" y="862.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.05%)</title><rect x="1064.8" y="835.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1067.8" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.05%)</title><rect x="1064.8" y="819.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1067.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (23 samples, 0.55%)</title><rect x="1065.3" y="835.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1068.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (10 samples, 0.24%)</title><rect x="1071.8" y="835.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1074.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="1072.3" y="819.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.02%)</title><rect x="1072.3" y="803.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1075.3" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="1072.3" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1075.3" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="1072.3" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.3" y="782.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.02%)</title><rect x="1072.3" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1075.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.17%)</title><rect x="1072.6" y="819.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1075.6" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.17%)</title><rect x="1072.6" y="803.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1075.6" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.14%)</title><rect x="1072.9" y="787.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1075.9" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="1072.9" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1075.9" y="782.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.12%)</title><rect x="1073.2" y="771.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1076.2" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.05%)</title><rect x="1073.7" y="755.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1076.7" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.02%)</title><rect x="1074.0" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1077.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (1 samples, 0.02%)</title><rect x="1074.3" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1077.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (40 samples, 0.95%)</title><rect x="1074.6" y="835.0" width="11.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1077.6" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (36 samples, 0.86%)</title><rect x="1075.7" y="819.0" width="10.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1078.7" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (32 samples, 0.76%)</title><rect x="1076.8" y="803.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1079.8" y="814.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (23 samples, 0.55%)</title><rect x="1078.0" y="787.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1081.0" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (4 samples, 0.10%)</title><rect x="1079.9" y="771.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1082.9" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (9 samples, 0.21%)</title><rect x="1081.0" y="771.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1084.0" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.05%)</title><rect x="1082.2" y="755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1085.2" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.07%)</title><rect x="1082.7" y="755.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1085.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (1 samples, 0.02%)</title><rect x="1083.6" y="771.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1086.6" y="782.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="1083.9" y="771.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1086.9" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.12%)</title><rect x="1084.4" y="787.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1087.4" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="1085.5" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1088.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (1 samples, 0.02%)</title><rect x="1085.8" y="835.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1088.8" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (5 samples, 0.12%)</title><rect x="1086.1" y="867.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1089.1" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.07%)</title><rect x="1086.7" y="851.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1089.7" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1086.7" y="835.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1089.7" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1086.9" y="819.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.9" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1087.2" y="803.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1090.2" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1087.2" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1090.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="1087.2" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="1087.2" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1090.2" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="1087.2" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1090.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.tombstone (4 samples, 0.10%)</title><rect x="1087.5" y="867.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1090.5" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1087.8" y="851.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1090.8" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="1088.1" y="835.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1091.1" y="846.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="1088.1" y="819.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1091.1" y="830.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="1088.3" y="803.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1091.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (1 samples, 0.02%)</title><rect x="1088.6" y="883.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1091.6" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.sizeInBytes (1 samples, 0.02%)</title><rect x="1088.6" y="867.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1091.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (1 samples, 0.02%)</title><rect x="1088.6" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1091.6" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (1 samples, 0.02%)</title><rect x="1088.9" y="915.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1091.9" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.02%)</title><rect x="1089.2" y="947.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1092.2" y="958.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.17%)</title><rect x="1089.5" y="947.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1092.5" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.17%)</title><rect x="1089.5" y="931.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1092.5" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.14%)</title><rect x="1089.5" y="915.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1092.5" y="926.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.10%)</title><rect x="1090.0" y="899.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1093.0" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="1091.2" y="915.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1094.2" y="926.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="1091.2" y="899.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1094.2" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (27 samples, 0.64%)</title><rect x="1091.4" y="979.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1094.4" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.31%)</title><rect x="1094.2" y="963.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1097.2" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.31%)</title><rect x="1094.2" y="947.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.2" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.10%)</title><rect x="1097.9" y="963.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1100.9" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.05%)</title><rect x="1099.0" y="979.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1102.0" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.14%)</title><rect x="1099.6" y="979.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1102.6" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.07%)</title><rect x="1100.4" y="963.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1103.4" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.07%)</title><rect x="1100.4" y="947.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1103.4" y="958.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="1101.0" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1104.0" y="942.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="1101.0" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1104.0" y="926.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.02%)</title><rect x="1101.0" y="899.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1104.0" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.21%)</title><rect x="1101.3" y="979.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1104.3" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.21%)</title><rect x="1101.3" y="963.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1104.3" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1103.5" y="947.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1106.5" y="958.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (1 samples, 0.02%)</title><rect x="1103.5" y="931.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1106.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (1 samples, 0.02%)</title><rect x="1103.5" y="915.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1106.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (129 samples, 3.07%)</title><rect x="1103.8" y="995.0" width="36.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1106.8" y="1006.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (129 samples, 3.07%)</title><rect x="1103.8" y="979.0" width="36.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1106.8" y="990.0">one..</text>
</g>
<g>
<title>[unknown] (27 samples, 0.64%)</title><rect x="1104.1" y="963.0" width="7.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1107.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.64%)</title><rect x="1104.1" y="947.0" width="7.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1107.1" y="958.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (21 samples, 0.50%)</title><rect x="1104.1" y="931.0" width="5.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1107.1" y="942.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="1104.6" y="915.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1107.6" y="926.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.07%)</title><rect x="1104.9" y="915.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1107.9" y="926.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="1105.8" y="915.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1108.8" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.05%)</title><rect x="1106.0" y="915.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1109.0" y="926.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (5 samples, 0.12%)</title><rect x="1106.6" y="915.0" width="1.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1109.6" y="926.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.17%)</title><rect x="1108.0" y="915.0" width="2.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1111.0" y="926.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="1108.8" y="899.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1111.8" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (3 samples, 0.07%)</title><rect x="1109.1" y="899.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1112.1" y="910.0"></text>
</g>
<g>
<title>__libc_recv (5 samples, 0.12%)</title><rect x="1110.0" y="931.0" width="1.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1113.0" y="942.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="1111.4" y="931.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1114.4" y="942.0"></text>
</g>
<g>
<title>__libc_recv (101 samples, 2.40%)</title><rect x="1111.7" y="963.0" width="28.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1114.7" y="974.0">__..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="1116.1" y="947.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1119.1" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (83 samples, 1.98%)</title><rect x="1116.7" y="947.0" width="23.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1119.7" y="958.0">e..</text>
</g>
<g>
<title>do_syscall_64 (83 samples, 1.98%)</title><rect x="1116.7" y="931.0" width="23.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1119.7" y="942.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (75 samples, 1.78%)</title><rect x="1119.0" y="915.0" width="21.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1122.0" y="926.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (70 samples, 1.67%)</title><rect x="1120.4" y="899.0" width="19.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1123.4" y="910.0"></text>
</g>
<g>
<title>import_single_range (4 samples, 0.10%)</title><rect x="1120.9" y="883.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1123.9" y="894.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="1121.8" y="867.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1124.8" y="878.0"></text>
</g>
<g>
<title>inet_recvmsg (43 samples, 1.02%)</title><rect x="1122.0" y="883.0" width="12.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1125.0" y="894.0"></text>
</g>
<g>
<title>tcp_recvmsg (42 samples, 1.00%)</title><rect x="1122.3" y="867.0" width="11.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1125.3" y="878.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.12%)</title><rect x="1126.0" y="851.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1129.0" y="862.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.10%)</title><rect x="1126.3" y="835.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1129.3" y="846.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.07%)</title><rect x="1126.5" y="819.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1129.5" y="830.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.05%)</title><rect x="1126.8" y="803.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1129.8" y="814.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.05%)</title><rect x="1127.4" y="851.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1130.4" y="862.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="1127.9" y="851.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1130.9" y="862.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1127.9" y="835.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1130.9" y="846.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1127.9" y="819.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1130.9" y="830.0"></text>
</g>
<g>
<title>ns_to_timespec64 (1 samples, 0.02%)</title><rect x="1128.2" y="851.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1131.2" y="862.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.05%)</title><rect x="1128.5" y="851.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1131.5" y="862.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1128.8" y="835.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1131.8" y="846.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 0.26%)</title><rect x="1129.1" y="851.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1132.1" y="862.0"></text>
</g>
<g>
<title>__skb_datagram_iter (11 samples, 0.26%)</title><rect x="1129.1" y="835.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1132.1" y="846.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.05%)</title><rect x="1129.1" y="819.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1132.1" y="830.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.05%)</title><rect x="1129.1" y="803.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1132.1" y="814.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.05%)</title><rect x="1129.1" y="787.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1132.1" y="798.0"></text>
</g>
<g>
<title>simple_copy_to_iter (9 samples, 0.21%)</title><rect x="1129.6" y="819.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1132.6" y="830.0"></text>
</g>
<g>
<title>__check_object_size (7 samples, 0.17%)</title><rect x="1130.2" y="803.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1133.2" y="814.0"></text>
</g>
<g>
<title>__check_heap_object (3 samples, 0.07%)</title><rect x="1131.0" y="787.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1134.0" y="798.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="1131.9" y="787.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1134.9" y="798.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.07%)</title><rect x="1132.2" y="851.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1135.2" y="862.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="1132.7" y="835.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1135.7" y="846.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.07%)</title><rect x="1133.0" y="851.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1136.0" y="862.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.07%)</title><rect x="1133.0" y="835.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1136.0" y="846.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.05%)</title><rect x="1133.3" y="819.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1136.3" y="830.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="1133.3" y="803.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1136.3" y="814.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (1 samples, 0.02%)</title><rect x="1133.8" y="851.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1136.8" y="862.0"></text>
</g>
<g>
<title>sock_recvmsg (13 samples, 0.31%)</title><rect x="1134.1" y="883.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1137.1" y="894.0"></text>
</g>
<g>
<title>security_socket_recvmsg (13 samples, 0.31%)</title><rect x="1134.1" y="867.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1137.1" y="878.0"></text>
</g>
<g>
<title>sock_has_perm (12 samples, 0.29%)</title><rect x="1134.4" y="851.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1137.4" y="862.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.07%)</title><rect x="1136.9" y="835.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1139.9" y="846.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.19%)</title><rect x="1137.8" y="883.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1140.8" y="894.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.19%)</title><rect x="1137.8" y="867.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1140.8" y="878.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.17%)</title><rect x="1138.0" y="851.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1141.0" y="862.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray_nozero(BasicType, int, Thread*) (1 samples, 0.02%)</title><rect x="1140.0" y="1043.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1143.0" y="1054.0"></text>
</g>
<g>
<title>[pool-1-thread-1 tid=13273] (26 samples, 0.62%)</title><rect x="1140.3" y="1059.0" width="7.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1143.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/Thread.run (26 samples, 0.62%)</title><rect x="1140.3" y="1043.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1143.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (26 samples, 0.62%)</title><rect x="1140.3" y="1027.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1143.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (26 samples, 0.62%)</title><rect x="1140.3" y="1011.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1143.3" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (26 samples, 0.62%)</title><rect x="1140.3" y="995.0" width="7.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (26 samples, 0.62%)</title><rect x="1140.3" y="979.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1143.3" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (26 samples, 0.62%)</title><rect x="1140.3" y="963.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.3" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="1140.9" y="947.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1143.9" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="1140.9" y="931.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1143.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (1 samples, 0.02%)</title><rect x="1141.1" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1144.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.02%)</title><rect x="1141.1" y="931.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1144.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1 samples, 0.02%)</title><rect x="1141.1" y="915.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.1" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (22 samples, 0.52%)</title><rect x="1141.4" y="947.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1144.4" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (19 samples, 0.45%)</title><rect x="1141.7" y="931.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1144.7" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (19 samples, 0.45%)</title><rect x="1141.7" y="915.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1144.7" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (19 samples, 0.45%)</title><rect x="1141.7" y="899.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1144.7" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (19 samples, 0.45%)</title><rect x="1141.7" y="883.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1144.7" y="894.0"></text>
</g>
<g>
<title>__libc_write (17 samples, 0.40%)</title><rect x="1141.7" y="867.0" width="4.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1144.7" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.31%)</title><rect x="1142.8" y="851.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1145.8" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.31%)</title><rect x="1142.8" y="835.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1145.8" y="846.0"></text>
</g>
<g>
<title>ksys_write (10 samples, 0.24%)</title><rect x="1143.7" y="819.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1146.7" y="830.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.07%)</title><rect x="1143.7" y="803.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1146.7" y="814.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="1143.9" y="787.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1146.9" y="798.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="1143.9" y="771.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1146.9" y="782.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="1144.2" y="787.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1147.2" y="798.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="1144.5" y="803.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1147.5" y="814.0"></text>
</g>
<g>
<title>vfs_write (6 samples, 0.14%)</title><rect x="1144.8" y="803.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1147.8" y="814.0"></text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.02%)</title><rect x="1144.8" y="787.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1147.8" y="798.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="1145.1" y="787.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1148.1" y="798.0"></text>
</g>
<g>
<title>new_sync_write (4 samples, 0.10%)</title><rect x="1145.3" y="787.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1148.3" y="798.0"></text>
</g>
<g>
<title>generic_file_write_iter (4 samples, 0.10%)</title><rect x="1145.3" y="771.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1148.3" y="782.0"></text>
</g>
<g>
<title>__generic_file_write_iter (4 samples, 0.10%)</title><rect x="1145.3" y="755.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1148.3" y="766.0"></text>
</g>
<g>
<title>generic_perform_write (4 samples, 0.10%)</title><rect x="1145.3" y="739.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1148.3" y="750.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.02%)</title><rect x="1145.3" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1148.3" y="734.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="1145.3" y="707.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1148.3" y="718.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="1145.3" y="691.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1148.3" y="702.0"></text>
</g>
<g>
<title>shmem_write_begin (2 samples, 0.05%)</title><rect x="1145.6" y="723.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1148.6" y="734.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (2 samples, 0.05%)</title><rect x="1145.6" y="707.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1148.6" y="718.0"></text>
</g>
<g>
<title>find_lock_entry (2 samples, 0.05%)</title><rect x="1145.6" y="691.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1148.6" y="702.0"></text>
</g>
<g>
<title>page_mapping (1 samples, 0.02%)</title><rect x="1145.9" y="675.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1148.9" y="686.0"></text>
</g>
<g>
<title>shmem_write_end (1 samples, 0.02%)</title><rect x="1146.2" y="723.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1149.2" y="734.0"></text>
</g>
<g>
<title>__set_page_dirty_no_writeback (1 samples, 0.02%)</title><rect x="1146.2" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1149.2" y="718.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="1146.5" y="867.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1149.5" y="878.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="1146.8" y="867.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1149.8" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.05%)</title><rect x="1147.0" y="931.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1150.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.05%)</title><rect x="1147.0" y="915.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1150.0" y="926.0"></text>
</g>
<g>
<title>[tid=13253] (20 samples, 0.48%)</title><rect x="1147.6" y="1059.0" width="5.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1150.6" y="1070.0"></text>
</g>
<g>
<title>start_thread (20 samples, 0.48%)</title><rect x="1147.6" y="1043.0" width="5.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1150.6" y="1054.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (20 samples, 0.48%)</title><rect x="1147.6" y="1027.0" width="5.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1150.6" y="1038.0"></text>
</g>
<g>
<title>GangWorker::loop() (20 samples, 0.48%)</title><rect x="1147.6" y="1011.0" width="5.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1150.6" y="1022.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (20 samples, 0.48%)</title><rect x="1147.6" y="995.0" width="5.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1150.6" y="1006.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (9 samples, 0.21%)</title><rect x="1147.6" y="979.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1150.6" y="990.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (5 samples, 0.12%)</title><rect x="1147.6" y="963.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1150.6" y="974.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.10%)</title><rect x="1147.9" y="947.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1150.9" y="958.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1148.7" y="931.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1151.7" y="942.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.10%)</title><rect x="1149.0" y="963.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1152.0" y="974.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (11 samples, 0.26%)</title><rect x="1150.1" y="979.0" width="3.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.1" y="990.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (11 samples, 0.26%)</title><rect x="1150.1" y="963.0" width="3.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.1" y="974.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (11 samples, 0.26%)</title><rect x="1150.1" y="947.0" width="3.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1153.1" y="958.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (11 samples, 0.26%)</title><rect x="1150.1" y="931.0" width="3.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1153.1" y="942.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (11 samples, 0.26%)</title><rect x="1150.1" y="915.0" width="3.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.1" y="926.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (9 samples, 0.21%)</title><rect x="1150.1" y="899.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1153.1" y="910.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 0.14%)</title><rect x="1151.0" y="883.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1154.0" y="894.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1152.4" y="867.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1155.4" y="878.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (2 samples, 0.05%)</title><rect x="1152.7" y="899.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1155.7" y="910.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.02%)</title><rect x="1152.7" y="883.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1155.7" y="894.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.02%)</title><rect x="1152.7" y="867.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.7" y="878.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (1 samples, 0.02%)</title><rect x="1152.9" y="883.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.9" y="894.0"></text>
</g>
<g>
<title>[tid=13255] (12 samples, 0.29%)</title><rect x="1153.2" y="1059.0" width="3.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1156.2" y="1070.0"></text>
</g>
<g>
<title>start_thread (12 samples, 0.29%)</title><rect x="1153.2" y="1043.0" width="3.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1156.2" y="1054.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (12 samples, 0.29%)</title><rect x="1153.2" y="1027.0" width="3.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1156.2" y="1038.0"></text>
</g>
<g>
<title>GangWorker::loop() (12 samples, 0.29%)</title><rect x="1153.2" y="1011.0" width="3.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.2" y="1022.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (7 samples, 0.17%)</title><rect x="1153.2" y="995.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1156.2" y="1006.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (6 samples, 0.14%)</title><rect x="1153.2" y="979.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1156.2" y="990.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.153] (6 samples, 0.14%)</title><rect x="1153.2" y="963.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1156.2" y="974.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (5 samples, 0.12%)</title><rect x="1153.5" y="947.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1156.5" y="958.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (5 samples, 0.12%)</title><rect x="1153.5" y="931.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1156.5" y="942.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.153] (1 samples, 0.02%)</title><rect x="1154.9" y="979.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1157.9" y="990.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (5 samples, 0.12%)</title><rect x="1155.2" y="995.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1158.2" y="1006.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (5 samples, 0.12%)</title><rect x="1155.2" y="979.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1158.2" y="990.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (5 samples, 0.12%)</title><rect x="1155.2" y="963.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1158.2" y="974.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (3 samples, 0.07%)</title><rect x="1155.7" y="947.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1158.7" y="958.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (1 samples, 0.02%)</title><rect x="1156.3" y="931.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1159.3" y="942.0"></text>
</g>
<g>
<title>[tid=13257] (1 samples, 0.02%)</title><rect x="1156.6" y="1059.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1159.6" y="1070.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="1156.6" y="1043.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1159.6" y="1054.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="1156.6" y="1027.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1159.6" y="1038.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.02%)</title><rect x="1156.6" y="1011.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1159.6" y="1022.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.02%)</title><rect x="1156.6" y="995.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1159.6" y="1006.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.02%)</title><rect x="1156.6" y="979.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.6" y="990.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.02%)</title><rect x="1156.6" y="963.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1159.6" y="974.0"></text>
</g>
<g>
<title>[tid=13258] (3 samples, 0.07%)</title><rect x="1156.9" y="1059.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1159.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1156.9" y="1043.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1159.9" y="1054.0"></text>
</g>
<g>
<title>__vsnprintf_internal (1 samples, 0.02%)</title><rect x="1156.9" y="1027.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1159.9" y="1038.0"></text>
</g>
<g>
<title>_IO_default_xsputn (1 samples, 0.02%)</title><rect x="1156.9" y="1011.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1159.9" y="1022.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.05%)</title><rect x="1157.1" y="1043.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1160.1" y="1054.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.05%)</title><rect x="1157.1" y="1027.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1160.1" y="1038.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.05%)</title><rect x="1157.1" y="1011.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1160.1" y="1022.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.05%)</title><rect x="1157.1" y="995.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.1" y="1006.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.02%)</title><rect x="1157.1" y="979.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1160.1" y="990.0"></text>
</g>
<g>
<title>ThreadSafepointState::examine_state_of_thread() (1 samples, 0.02%)</title><rect x="1157.1" y="963.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1160.1" y="974.0"></text>
</g>
<g>
<title>__GI_sched_yield (1 samples, 0.02%)</title><rect x="1157.4" y="979.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1160.4" y="990.0"></text>
</g>
<g>
<title>[tid=13262] (45 samples, 1.07%)</title><rect x="1157.7" y="1059.0" width="12.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1160.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1157.7" y="1043.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1160.7" y="1054.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.05%)</title><rect x="1157.7" y="1027.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1160.7" y="1038.0"></text>
</g>
<g>
<title>start_thread (43 samples, 1.02%)</title><rect x="1158.3" y="1043.0" width="12.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1161.3" y="1054.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (43 samples, 1.02%)</title><rect x="1158.3" y="1027.0" width="12.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1161.3" y="1038.0"></text>
</g>
<g>
<title>JavaThread::run() (43 samples, 1.02%)</title><rect x="1158.3" y="1011.0" width="12.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.3" y="1022.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (43 samples, 1.02%)</title><rect x="1158.3" y="995.0" width="12.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1161.3" y="1006.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (43 samples, 1.02%)</title><rect x="1158.3" y="979.0" width="12.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1161.3" y="990.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (43 samples, 1.02%)</title><rect x="1158.3" y="963.0" width="12.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1161.3" y="974.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (43 samples, 1.02%)</title><rect x="1158.3" y="947.0" width="12.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1161.3" y="958.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (43 samples, 1.02%)</title><rect x="1158.3" y="931.0" width="12.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.3" y="942.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (19 samples, 0.45%)</title><rect x="1158.3" y="915.0" width="5.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.3" y="926.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.02%)</title><rect x="1158.3" y="899.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1161.3" y="910.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.02%)</title><rect x="1158.3" y="883.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1161.3" y="894.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.02%)</title><rect x="1158.3" y="867.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.3" y="878.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.02%)</title><rect x="1158.3" y="851.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1161.3" y="862.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.02%)</title><rect x="1158.5" y="899.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.5" y="910.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.02%)</title><rect x="1158.5" y="883.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.5" y="894.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.02%)</title><rect x="1158.5" y="867.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.5" y="878.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (3 samples, 0.07%)</title><rect x="1158.8" y="899.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1161.8" y="910.0"></text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (1 samples, 0.02%)</title><rect x="1158.8" y="883.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1161.8" y="894.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.05%)</title><rect x="1159.1" y="883.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1162.1" y="894.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.02%)</title><rect x="1159.1" y="867.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1162.1" y="878.0"></text>
</g>
<g>
<title>rFlagsRegOper::type() const (1 samples, 0.02%)</title><rect x="1159.4" y="867.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1162.4" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (14 samples, 0.33%)</title><rect x="1159.7" y="899.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.7" y="910.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.05%)</title><rect x="1159.7" y="883.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1162.7" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 0.05%)</title><rect x="1160.2" y="883.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1163.2" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.02%)</title><rect x="1160.2" y="867.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.2" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.02%)</title><rect x="1160.5" y="867.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.5" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (1 samples, 0.02%)</title><rect x="1160.8" y="883.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1163.8" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.05%)</title><rect x="1161.1" y="883.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1164.1" y="894.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.05%)</title><rect x="1161.1" y="867.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.1" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.02%)</title><rect x="1161.6" y="883.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1164.6" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.05%)</title><rect x="1161.9" y="883.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.9" y="894.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.02%)</title><rect x="1162.2" y="867.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1165.2" y="878.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.02%)</title><rect x="1162.5" y="883.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.5" y="894.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (3 samples, 0.07%)</title><rect x="1162.8" y="883.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1165.8" y="894.0"></text>
</g>
<g>
<title>Compile::Optimize() (20 samples, 0.48%)</title><rect x="1163.6" y="915.0" width="5.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1166.6" y="926.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.02%)</title><rect x="1163.6" y="899.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1166.6" y="910.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.02%)</title><rect x="1163.6" y="883.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1166.6" y="894.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.02%)</title><rect x="1163.9" y="899.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1166.9" y="910.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.02%)</title><rect x="1163.9" y="883.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.9" y="894.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.9" y="867.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1166.9" y="878.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.9" y="851.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.9" y="862.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.9" y="835.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.9" y="846.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.02%)</title><rect x="1163.9" y="819.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1166.9" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (15 samples, 0.36%)</title><rect x="1164.2" y="899.0" width="4.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1167.2" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.05%)</title><rect x="1164.2" y="883.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1167.2" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (12 samples, 0.29%)</title><rect x="1164.7" y="883.0" width="3.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1167.7" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (11 samples, 0.26%)</title><rect x="1165.0" y="867.0" width="3.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1168.0" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (11 samples, 0.26%)</title><rect x="1165.0" y="851.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.0" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (9 samples, 0.21%)</title><rect x="1165.6" y="835.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1168.6" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.02%)</title><rect x="1168.1" y="883.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.1" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.02%)</title><rect x="1168.1" y="867.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.1" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_local_phi_input(Node*) (1 samples, 0.02%)</title><rect x="1168.1" y="851.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.1" y="862.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.07%)</title><rect x="1168.4" y="899.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.4" y="910.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.07%)</title><rect x="1168.4" y="883.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.4" y="894.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1168.4" y="867.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.4" y="878.0"></text>
</g>
<g>
<title>Compile::copy_node_notes_to(Node*, Node*) (1 samples, 0.02%)</title><rect x="1168.4" y="851.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.4" y="862.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.05%)</title><rect x="1168.7" y="867.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.7" y="878.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.138] (1 samples, 0.02%)</title><rect x="1168.7" y="851.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.7" y="862.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1168.7" y="835.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.7" y="846.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1168.7" y="819.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1171.7" y="830.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.131] (1 samples, 0.02%)</title><rect x="1168.7" y="803.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.7" y="814.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1168.7" y="787.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.7" y="798.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1168.9" y="851.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1171.9" y="862.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.02%)</title><rect x="1168.9" y="835.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.9" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.10%)</title><rect x="1169.2" y="915.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.2" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.10%)</title><rect x="1169.2" y="899.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1172.2" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.10%)</title><rect x="1169.2" y="883.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.2" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.10%)</title><rect x="1169.2" y="867.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1172.2" y="878.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1169.2" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.2" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.07%)</title><rect x="1169.5" y="851.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1172.5" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.07%)</title><rect x="1169.5" y="835.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1172.5" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1169.5" y="819.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1172.5" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1169.5" y="803.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1169.5" y="787.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1169.5" y="771.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="1169.5" y="755.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1169.5" y="739.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.5" y="750.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1169.5" y="723.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1172.5" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1169.5" y="707.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1172.5" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1169.5" y="691.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1169.5" y="675.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1172.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1169.5" y="659.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.5" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="1169.5" y="643.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.5" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1169.5" y="627.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1172.5" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1169.5" y="611.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1172.5" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1169.5" y="595.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1169.5" y="579.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1172.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1169.5" y="563.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="1169.5" y="547.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.5" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1169.5" y="531.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.5" y="542.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1169.5" y="515.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.5" y="526.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1169.5" y="499.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.5" y="510.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1169.5" y="483.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.5" y="494.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1169.5" y="467.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.5" y="478.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1169.5" y="451.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.5" y="462.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1169.5" y="435.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1172.5" y="446.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1169.5" y="419.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1172.5" y="430.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1169.5" y="403.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1172.5" y="414.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="1169.5" y="387.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1172.5" y="398.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1169.5" y="371.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.5" y="382.0"></text>
</g>
<g>
<title>ciBytecodeStream::has_method_type() (1 samples, 0.02%)</title><rect x="1169.5" y="355.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.5" y="366.0"></text>
</g>
<g>
<title>ConstantPool::has_method_type_at_if_loaded(constantPoolHandle const&amp;, int) (1 samples, 0.02%)</title><rect x="1169.5" y="339.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1172.5" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1169.8" y="515.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.8" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1169.8" y="499.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.8" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1169.8" y="483.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.8" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1169.8" y="467.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1172.8" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1169.8" y="451.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.8" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1169.8" y="435.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1172.8" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1169.8" y="419.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.8" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1169.8" y="403.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1172.8" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1169.8" y="387.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1172.8" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1169.8" y="371.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.8" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1169.8" y="355.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.8" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1169.8" y="339.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1172.8" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1169.8" y="323.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.8" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1169.8" y="307.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.8" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1169.8" y="291.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.8" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1169.8" y="275.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1172.8" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1169.8" y="259.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1172.8" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1169.8" y="243.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1172.8" y="254.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1169.8" y="227.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.8" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1169.8" y="211.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.8" y="222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1169.8" y="195.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.8" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1169.8" y="179.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.8" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1169.8" y="163.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.8" y="174.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1169.8" y="147.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.8" y="158.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.02%)</title><rect x="1169.8" y="131.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1172.8" y="142.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.02%)</title><rect x="1169.8" y="115.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.8" y="126.0"></text>
</g>
<g>
<title>TypeTuple::make_domain(ciInstanceKlass*, ciSignature*) (1 samples, 0.02%)</title><rect x="1169.8" y="99.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1172.8" y="110.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.02%)</title><rect x="1169.8" y="83.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1172.8" y="94.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.02%)</title><rect x="1169.8" y="67.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.8" y="78.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1169.8" y="51.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1172.8" y="62.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.02%)</title><rect x="1169.8" y="35.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.8" y="46.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1170.1" y="819.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.1" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1170.1" y="803.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.1" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1170.1" y="787.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.1" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1170.1" y="771.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.1" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1170.1" y="755.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.1" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1170.1" y="739.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1173.1" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1170.1" y="723.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1173.1" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1170.1" y="707.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.1" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1170.1" y="691.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1173.1" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1170.1" y="675.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.1" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1170.1" y="659.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.1" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1170.1" y="643.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.1" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1170.1" y="627.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.1" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1170.1" y="611.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.1" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1170.1" y="595.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1173.1" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1170.1" y="579.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.1" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1170.1" y="563.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.1" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1170.1" y="547.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.1" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1170.1" y="531.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.1" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1170.1" y="515.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.1" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1170.1" y="499.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1173.1" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1170.1" y="483.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1173.1" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1170.1" y="467.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1173.1" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1170.1" y="451.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.1" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1170.1" y="435.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.1" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1170.1" y="419.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1173.1" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1170.1" y="403.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.1" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1170.1" y="387.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.1" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1170.1" y="371.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.1" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1170.1" y="355.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1173.1" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1170.1" y="339.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.1" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1170.1" y="323.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.1" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1170.1" y="307.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.1" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1170.1" y="291.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.1" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1170.1" y="275.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.1" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1170.1" y="259.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.1" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1170.1" y="243.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.1" y="254.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1170.1" y="227.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.1" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1170.1" y="211.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1173.1" y="222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1170.1" y="195.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.1" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1170.1" y="179.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.1" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1170.1" y="163.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.1" y="174.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1170.1" y="147.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.1" y="158.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.02%)</title><rect x="1170.1" y="131.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.1" y="142.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.02%)</title><rect x="1170.1" y="115.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.1" y="126.0"></text>
</g>
<g>
<title>TypeTuple::make_domain(ciInstanceKlass*, ciSignature*) (1 samples, 0.02%)</title><rect x="1170.1" y="99.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.1" y="110.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.02%)</title><rect x="1170.1" y="83.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.1" y="94.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.02%)</title><rect x="1170.1" y="67.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.1" y="78.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1170.1" y="51.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.1" y="62.0"></text>
</g>
<g>
<title>TypeInstPtr::eq(Type const*) const (1 samples, 0.02%)</title><rect x="1170.1" y="35.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1173.1" y="46.0"></text>
</g>
<g>
<title>[tid=13263] (3 samples, 0.07%)</title><rect x="1170.3" y="1059.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1173.3" y="1070.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.07%)</title><rect x="1170.3" y="1043.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1173.3" y="1054.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.07%)</title><rect x="1170.3" y="1027.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1173.3" y="1038.0"></text>
</g>
<g>
<title>JavaThread::run() (3 samples, 0.07%)</title><rect x="1170.3" y="1011.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.3" y="1022.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (3 samples, 0.07%)</title><rect x="1170.3" y="995.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1173.3" y="1006.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (3 samples, 0.07%)</title><rect x="1170.3" y="979.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.3" y="990.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (3 samples, 0.07%)</title><rect x="1170.3" y="963.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1173.3" y="974.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (3 samples, 0.07%)</title><rect x="1170.3" y="947.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.3" y="958.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (3 samples, 0.07%)</title><rect x="1170.3" y="931.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.3" y="942.0"></text>
</g>
<g>
<title>Compilation::compile_method() (3 samples, 0.07%)</title><rect x="1170.3" y="915.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1173.3" y="926.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (3 samples, 0.07%)</title><rect x="1170.3" y="899.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.3" y="910.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (3 samples, 0.07%)</title><rect x="1170.3" y="883.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.3" y="894.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (1 samples, 0.02%)</title><rect x="1170.3" y="867.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.3" y="878.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (1 samples, 0.02%)</title><rect x="1170.3" y="851.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.3" y="862.0"></text>
</g>
<g>
<title>LIRGenerator::do_LoadField(LoadField*) (1 samples, 0.02%)</title><rect x="1170.3" y="835.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.3" y="846.0"></text>
</g>
<g>
<title>G1BarrierSetC1::load_at_resolved(LIRAccess&amp;, LIR_OprDesc*) (1 samples, 0.02%)</title><rect x="1170.3" y="819.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.3" y="830.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (2 samples, 0.05%)</title><rect x="1170.6" y="867.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1173.6" y="878.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (1 samples, 0.02%)</title><rect x="1170.6" y="851.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.6" y="862.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (1 samples, 0.02%)</title><rect x="1170.6" y="835.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.6" y="846.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (1 samples, 0.02%)</title><rect x="1170.6" y="819.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.6" y="830.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_locked_reg(Interval*) (1 samples, 0.02%)</title><rect x="1170.6" y="803.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1173.6" y="814.0"></text>
</g>
<g>
<title>LinearScanWalker::split_for_spilling(Interval*) (1 samples, 0.02%)</title><rect x="1170.6" y="787.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.6" y="798.0"></text>
</g>
<g>
<title>Interval::split_child_before_op_id(int) (1 samples, 0.02%)</title><rect x="1170.6" y="771.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.6" y="782.0"></text>
</g>
<g>
<title>LinearScan::resolve_data_flow() (1 samples, 0.02%)</title><rect x="1170.9" y="851.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.9" y="862.0"></text>
</g>
<g>
<title>MoveResolver::resolve_and_append_moves() (1 samples, 0.02%)</title><rect x="1170.9" y="835.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.9" y="846.0"></text>
</g>
<g>
<title>MoveResolver::resolve_mappings() (1 samples, 0.02%)</title><rect x="1170.9" y="819.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1173.9" y="830.0"></text>
</g>
<g>
<title>[tid=13266] (3 samples, 0.07%)</title><rect x="1171.2" y="1059.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1174.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1171.2" y="1043.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1174.2" y="1054.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.02%)</title><rect x="1171.2" y="1027.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1174.2" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1171.2" y="1011.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1174.2" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1171.2" y="995.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1174.2" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1171.2" y="979.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1174.2" y="990.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1171.2" y="963.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1174.2" y="974.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="1171.2" y="947.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1174.2" y="958.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="1171.2" y="931.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1174.2" y="942.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1171.2" y="915.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1174.2" y="926.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="1171.5" y="1043.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1174.5" y="1054.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="1171.7" y="1043.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1174.7" y="1054.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="1171.7" y="1027.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1174.7" y="1038.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.02%)</title><rect x="1171.7" y="1011.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.7" y="1022.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (1 samples, 0.02%)</title><rect x="1171.7" y="995.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1174.7" y="1006.0"></text>
</g>
<g>
<title>[tid=13407] (21 samples, 0.50%)</title><rect x="1172.0" y="1059.0" width="5.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1175.0" y="1070.0"></text>
</g>
<g>
<title>start_thread (21 samples, 0.50%)</title><rect x="1172.0" y="1043.0" width="5.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1175.0" y="1054.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (21 samples, 0.50%)</title><rect x="1172.0" y="1027.0" width="5.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1175.0" y="1038.0"></text>
</g>
<g>
<title>GangWorker::loop() (21 samples, 0.50%)</title><rect x="1172.0" y="1011.0" width="5.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1175.0" y="1022.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (20 samples, 0.48%)</title><rect x="1172.0" y="995.0" width="5.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.0" y="1006.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (9 samples, 0.21%)</title><rect x="1172.0" y="979.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.0" y="990.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.02%)</title><rect x="1172.0" y="963.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1175.0" y="974.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (5 samples, 0.12%)</title><rect x="1172.3" y="963.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.3" y="974.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.10%)</title><rect x="1172.6" y="947.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.6" y="958.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.07%)</title><rect x="1173.7" y="963.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1176.7" y="974.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (10 samples, 0.24%)</title><rect x="1174.6" y="979.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1177.6" y="990.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (10 samples, 0.24%)</title><rect x="1174.6" y="963.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1177.6" y="974.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (10 samples, 0.24%)</title><rect x="1174.6" y="947.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1177.6" y="958.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (10 samples, 0.24%)</title><rect x="1174.6" y="931.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.6" y="942.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.02%)</title><rect x="1174.6" y="915.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.6" y="926.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (9 samples, 0.21%)</title><rect x="1174.8" y="915.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.8" y="926.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (9 samples, 0.21%)</title><rect x="1174.8" y="899.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1177.8" y="910.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 0.14%)</title><rect x="1175.7" y="883.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1178.7" y="894.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.02%)</title><rect x="1177.1" y="867.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.1" y="878.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="1177.4" y="979.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.4" y="990.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.02%)</title><rect x="1177.4" y="963.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.4" y="974.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.02%)</title><rect x="1177.4" y="947.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.4" y="958.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.02%)</title><rect x="1177.4" y="931.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.4" y="942.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.02%)</title><rect x="1177.4" y="915.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.4" y="926.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.02%)</title><rect x="1177.4" y="899.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1180.4" y="910.0"></text>
</g>
<g>
<title>G1RedirtyLoggedCardsTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1177.6" y="995.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.6" y="1006.0"></text>
</g>
<g>
<title>RedirtyLoggedCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.02%)</title><rect x="1177.6" y="979.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.6" y="990.0"></text>
</g>
<g>
<title>[tid=13408] (21 samples, 0.50%)</title><rect x="1177.9" y="1059.0" width="5.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1180.9" y="1070.0"></text>
</g>
<g>
<title>start_thread (21 samples, 0.50%)</title><rect x="1177.9" y="1043.0" width="5.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1180.9" y="1054.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (21 samples, 0.50%)</title><rect x="1177.9" y="1027.0" width="5.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1180.9" y="1038.0"></text>
</g>
<g>
<title>GangWorker::loop() (21 samples, 0.50%)</title><rect x="1177.9" y="1011.0" width="5.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.9" y="1022.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (21 samples, 0.50%)</title><rect x="1177.9" y="995.0" width="5.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1180.9" y="1006.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (11 samples, 0.26%)</title><rect x="1177.9" y="979.0" width="3.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.9" y="990.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (7 samples, 0.17%)</title><rect x="1177.9" y="963.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1180.9" y="974.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.07%)</title><rect x="1179.0" y="947.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1182.0" y="958.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.10%)</title><rect x="1179.9" y="963.0" width="1.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1182.9" y="974.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (10 samples, 0.24%)</title><rect x="1181.0" y="979.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.0" y="990.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (10 samples, 0.24%)</title><rect x="1181.0" y="963.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.0" y="974.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (10 samples, 0.24%)</title><rect x="1181.0" y="947.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.0" y="958.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (10 samples, 0.24%)</title><rect x="1181.0" y="931.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.0" y="942.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (10 samples, 0.24%)</title><rect x="1181.0" y="915.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.0" y="926.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (8 samples, 0.19%)</title><rect x="1181.0" y="899.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.0" y="910.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 0.14%)</title><rect x="1181.6" y="883.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.6" y="894.0"></text>
</g>
<g>
<title>G1PLABAllocator::allocate_direct_or_new_plab(InCSetState, unsigned long, bool*) (1 samples, 0.02%)</title><rect x="1182.4" y="867.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.4" y="878.0"></text>
</g>
<g>
<title>PLAB::retire() (1 samples, 0.02%)</title><rect x="1182.4" y="851.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.4" y="862.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.02%)</title><rect x="1182.4" y="835.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.4" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.05%)</title><rect x="1182.7" y="867.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.7" y="878.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (2 samples, 0.05%)</title><rect x="1183.3" y="899.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.3" y="910.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (2 samples, 0.05%)</title><rect x="1183.3" y="883.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.3" y="894.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.02%)</title><rect x="1183.3" y="867.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.3" y="878.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (1 samples, 0.02%)</title><rect x="1183.5" y="867.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.5" y="878.0"></text>
</g>
<g>
<title>[tid=13409] (22 samples, 0.52%)</title><rect x="1183.8" y="1059.0" width="6.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1186.8" y="1070.0"></text>
</g>
<g>
<title>start_thread (22 samples, 0.52%)</title><rect x="1183.8" y="1043.0" width="6.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1186.8" y="1054.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (22 samples, 0.52%)</title><rect x="1183.8" y="1027.0" width="6.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1186.8" y="1038.0"></text>
</g>
<g>
<title>GangWorker::loop() (22 samples, 0.52%)</title><rect x="1183.8" y="1011.0" width="6.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.8" y="1022.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (22 samples, 0.52%)</title><rect x="1183.8" y="995.0" width="6.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.8" y="1006.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (13 samples, 0.31%)</title><rect x="1183.8" y="979.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.8" y="990.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (8 samples, 0.19%)</title><rect x="1184.1" y="963.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.1" y="974.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.12%)</title><rect x="1184.9" y="947.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.9" y="958.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.05%)</title><rect x="1185.8" y="931.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.8" y="942.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.10%)</title><rect x="1186.3" y="963.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1189.3" y="974.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (8 samples, 0.19%)</title><rect x="1187.5" y="979.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.5" y="990.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (8 samples, 0.19%)</title><rect x="1187.5" y="963.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.5" y="974.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (8 samples, 0.19%)</title><rect x="1187.5" y="947.0" width="2.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.5" y="958.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (8 samples, 0.19%)</title><rect x="1187.5" y="931.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.5" y="942.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (8 samples, 0.19%)</title><rect x="1187.5" y="915.0" width="2.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.5" y="926.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (8 samples, 0.19%)</title><rect x="1187.5" y="899.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.5" y="910.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.12%)</title><rect x="1188.3" y="883.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.3" y="894.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.05%)</title><rect x="1189.2" y="867.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.2" y="878.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="1189.7" y="979.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.7" y="990.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (1 samples, 0.02%)</title><rect x="1189.7" y="963.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.7" y="974.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.02%)</title><rect x="1189.7" y="947.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.7" y="958.0"></text>
</g>
</g>
</svg>
