<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="309"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="309"> </text>
<g id="frames">
<g>
<title>all (2,520 samples, 100.00%)</title><rect x="10.0" y="275.0" width="1180.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="286.0">all</text>
</g>
<g>
<title>[NIO Acceptor 0.0.0.0:8080 tid=1802] (1 samples, 0.04%)</title><rect x="10.0" y="259.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (1 samples, 0.04%)</title><rect x="10.0" y="243.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (1 samples, 0.04%)</title><rect x="10.0" y="227.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.createSession (1 samples, 0.04%)</title><rect x="10.0" y="211.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (1 samples, 0.04%)</title><rect x="10.0" y="195.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=1799] (895 samples, 35.52%)</title><rect x="10.5" y="259.0" width="419.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="13.5" y="270.0">[NIO Selector #1 tid=1799]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (895 samples, 35.52%)</title><rect x="10.5" y="243.0" width="419.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.5" y="254.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.08%)</title><rect x="10.5" y="227.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.5" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2 samples, 0.08%)</title><rect x="10.5" y="211.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="13.5" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (893 samples, 35.44%)</title><rect x="11.4" y="227.0" width="418.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.4" y="238.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (893 samples, 35.44%)</title><rect x="11.4" y="211.0" width="418.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.4" y="222.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (893 samples, 35.44%)</title><rect x="11.4" y="195.0" width="418.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.4" y="206.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (484 samples, 19.21%)</title><rect x="11.4" y="179.0" width="226.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.4" y="190.0">one/nio/http/HttpSession.handl..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (484 samples, 19.21%)</title><rect x="11.4" y="163.0" width="226.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="14.4" y="174.0">one/nio/http/HttpServer.handle..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (409 samples, 16.23%)</title><rect x="11.4" y="147.0" width="191.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.4" y="158.0">RequestHandler1_entity.ha..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (130 samples, 5.16%)</title><rect x="11.4" y="131.0" width="60.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.4" y="142.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (130 samples, 5.16%)</title><rect x="11.4" y="115.0" width="60.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.4" y="126.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (95 samples, 3.77%)</title><rect x="11.4" y="99.0" width="44.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.4" y="110.0">one/..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (95 samples, 3.77%)</title><rect x="11.4" y="83.0" width="44.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.4" y="94.0">one/..</text>
</g>
<g>
<title>byte[] (95 samples, 3.77%)</title><rect x="11.4" y="67.0" width="44.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="14.4" y="78.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (35 samples, 1.39%)</title><rect x="55.9" y="99.0" width="16.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.9" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (35 samples, 1.39%)</title><rect x="55.9" y="83.0" width="16.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="58.9" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (37 samples, 1.47%)</title><rect x="72.3" y="131.0" width="17.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.3" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (37 samples, 1.47%)</title><rect x="72.3" y="115.0" width="17.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="75.3" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (37 samples, 1.47%)</title><rect x="72.3" y="99.0" width="17.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.3" y="110.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.67%)</title><rect x="72.3" y="83.0" width="7.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="75.3" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (20 samples, 0.79%)</title><rect x="80.2" y="83.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.2" y="94.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.79%)</title><rect x="80.2" y="67.0" width="9.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="83.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (242 samples, 9.60%)</title><rect x="89.6" y="131.0" width="113.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="92.6" y="142.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/lang/String.getBytes (18 samples, 0.71%)</title><rect x="89.6" y="115.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (18 samples, 0.71%)</title><rect x="89.6" y="99.0" width="8.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="92.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (18 samples, 0.71%)</title><rect x="89.6" y="83.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.71%)</title><rect x="89.6" y="67.0" width="8.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="92.6" y="78.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.71%)</title><rect x="89.6" y="51.0" width="8.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="92.6" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (50 samples, 1.98%)</title><rect x="98.0" y="115.0" width="23.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.0" y="126.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (50 samples, 1.98%)</title><rect x="98.0" y="99.0" width="23.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.0" y="110.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (50 samples, 1.98%)</title><rect x="98.0" y="83.0" width="23.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="101.0" y="94.0">j..</text>
</g>
<g>
<title>one.nio.http.Response (13 samples, 0.52%)</title><rect x="121.4" y="115.0" width="6.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="124.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (89 samples, 3.53%)</title><rect x="127.5" y="115.0" width="41.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="130.5" y="126.0">one..</text>
</g>
<g>
<title>byte[] (41 samples, 1.63%)</title><rect x="127.5" y="99.0" width="19.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="130.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (28 samples, 1.11%)</title><rect x="146.7" y="99.0" width="13.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="149.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.79%)</title><rect x="159.8" y="99.0" width="9.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="162.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (72 samples, 2.86%)</title><rect x="169.2" y="115.0" width="33.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.2" y="126.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (72 samples, 2.86%)</title><rect x="169.2" y="99.0" width="33.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="172.2" y="110.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (72 samples, 2.86%)</title><rect x="169.2" y="83.0" width="33.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.2" y="94.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (3 samples, 0.12%)</title><rect x="169.2" y="67.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.2" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (3 samples, 0.12%)</title><rect x="169.2" y="51.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.2" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (1 samples, 0.04%)</title><rect x="169.2" y="35.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="172.2" y="46.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (2 samples, 0.08%)</title><rect x="169.7" y="35.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="172.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (25 samples, 0.99%)</title><rect x="170.6" y="67.0" width="11.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="173.6" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (25 samples, 0.99%)</title><rect x="170.6" y="51.0" width="11.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="173.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (5 samples, 0.20%)</title><rect x="182.3" y="67.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="185.3" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.20%)</title><rect x="182.3" y="51.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.3" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (5 samples, 0.20%)</title><rect x="182.3" y="35.0" width="2.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="185.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.tombstone (39 samples, 1.55%)</title><rect x="184.7" y="67.0" width="18.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (39 samples, 1.55%)</title><rect x="184.7" y="51.0" width="18.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="187.7" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (75 samples, 2.98%)</title><rect x="202.9" y="147.0" width="35.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="205.9" y="158.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (75 samples, 2.98%)</title><rect x="202.9" y="131.0" width="35.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="205.9" y="142.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (75 samples, 2.98%)</title><rect x="202.9" y="115.0" width="35.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="205.9" y="126.0">jav..</text>
</g>
<g>
<title>java.lang.String (22 samples, 0.87%)</title><rect x="202.9" y="99.0" width="10.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="205.9" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (53 samples, 2.10%)</title><rect x="213.2" y="99.0" width="24.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.2" y="110.0">j..</text>
</g>
<g>
<title>byte[] (53 samples, 2.10%)</title><rect x="213.2" y="83.0" width="24.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="216.2" y="94.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (293 samples, 11.63%)</title><rect x="238.0" y="179.0" width="137.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="241.0" y="190.0">one/nio/http/Http..</text>
</g>
<g>
<title>one.nio.http.Request (40 samples, 1.59%)</title><rect x="238.0" y="163.0" width="18.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="241.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (73 samples, 2.90%)</title><rect x="256.8" y="163.0" width="34.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="259.8" y="174.0">on..</text>
</g>
<g>
<title>java.lang.String[] (73 samples, 2.90%)</title><rect x="256.8" y="147.0" width="34.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="259.8" y="158.0">ja..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (180 samples, 7.14%)</title><rect x="291.0" y="163.0" width="84.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.0" y="174.0">one/nio/ut..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (180 samples, 7.14%)</title><rect x="291.0" y="147.0" width="84.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.0" y="158.0">one/nio/ut..</text>
</g>
<g>
<title>char[] (87 samples, 3.45%)</title><rect x="291.0" y="131.0" width="40.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="294.0" y="142.0">cha..</text>
</g>
<g>
<title>java.lang.String (24 samples, 0.95%)</title><rect x="331.7" y="131.0" width="11.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="334.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (69 samples, 2.74%)</title><rect x="342.9" y="131.0" width="32.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="345.9" y="142.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (69 samples, 2.74%)</title><rect x="342.9" y="115.0" width="32.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="345.9" y="126.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (69 samples, 2.74%)</title><rect x="342.9" y="99.0" width="32.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="345.9" y="110.0">ja..</text>
</g>
<g>
<title>byte[] (69 samples, 2.74%)</title><rect x="342.9" y="83.0" width="32.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="345.9" y="94.0">by..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (116 samples, 4.60%)</title><rect x="375.2" y="179.0" width="54.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="378.2" y="190.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (116 samples, 4.60%)</title><rect x="375.2" y="163.0" width="54.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.2" y="174.0">one/n..</text>
</g>
<g>
<title>char[] (57 samples, 2.26%)</title><rect x="375.2" y="147.0" width="26.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="378.2" y="158.0">c..</text>
</g>
<g>
<title>java.lang.String (22 samples, 0.87%)</title><rect x="401.9" y="147.0" width="10.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="404.9" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 1.47%)</title><rect x="412.2" y="147.0" width="17.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (37 samples, 1.47%)</title><rect x="412.2" y="131.0" width="17.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="415.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (37 samples, 1.47%)</title><rect x="412.2" y="115.0" width="17.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.2" y="126.0"></text>
</g>
<g>
<title>byte[] (37 samples, 1.47%)</title><rect x="412.2" y="99.0" width="17.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="415.2" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=1800] (638 samples, 25.32%)</title><rect x="429.6" y="259.0" width="298.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="432.6" y="270.0">[NIO Selector #2 tid=1800]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (638 samples, 25.32%)</title><rect x="429.6" y="243.0" width="298.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="432.6" y="254.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (638 samples, 25.32%)</title><rect x="429.6" y="227.0" width="298.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.6" y="238.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (638 samples, 25.32%)</title><rect x="429.6" y="211.0" width="298.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="432.6" y="222.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (638 samples, 25.32%)</title><rect x="429.6" y="195.0" width="298.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="432.6" y="206.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (343 samples, 13.61%)</title><rect x="429.6" y="179.0" width="160.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.6" y="190.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (343 samples, 13.61%)</title><rect x="429.6" y="163.0" width="160.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.6" y="174.0">one/nio/http/HttpSer..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (306 samples, 12.14%)</title><rect x="429.6" y="147.0" width="143.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="432.6" y="158.0">RequestHandler1_en..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (79 samples, 3.13%)</title><rect x="429.6" y="131.0" width="36.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.6" y="142.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (79 samples, 3.13%)</title><rect x="429.6" y="115.0" width="36.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="432.6" y="126.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (51 samples, 2.02%)</title><rect x="429.6" y="99.0" width="23.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="432.6" y="110.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (51 samples, 2.02%)</title><rect x="429.6" y="83.0" width="23.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.6" y="94.0">o..</text>
</g>
<g>
<title>byte[] (51 samples, 2.02%)</title><rect x="429.6" y="67.0" width="23.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="432.6" y="78.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (28 samples, 1.11%)</title><rect x="453.4" y="99.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="456.4" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (28 samples, 1.11%)</title><rect x="453.4" y="83.0" width="13.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="456.4" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (39 samples, 1.55%)</title><rect x="466.5" y="131.0" width="18.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (39 samples, 1.55%)</title><rect x="466.5" y="115.0" width="18.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="469.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (39 samples, 1.55%)</title><rect x="466.5" y="99.0" width="18.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.56%)</title><rect x="466.5" y="83.0" width="6.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="469.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.99%)</title><rect x="473.1" y="83.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="476.1" y="94.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.99%)</title><rect x="473.1" y="67.0" width="11.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="476.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (188 samples, 7.46%)</title><rect x="484.8" y="131.0" width="88.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="487.8" y="142.0">ru/mail/po..</text>
</g>
<g>
<title>java/lang/String.getBytes (16 samples, 0.63%)</title><rect x="484.8" y="115.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="487.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (16 samples, 0.63%)</title><rect x="484.8" y="99.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="487.8" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (16 samples, 0.63%)</title><rect x="484.8" y="83.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (16 samples, 0.63%)</title><rect x="484.8" y="67.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="487.8" y="78.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.63%)</title><rect x="484.8" y="51.0" width="7.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="487.8" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (29 samples, 1.15%)</title><rect x="492.3" y="115.0" width="13.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="495.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (29 samples, 1.15%)</title><rect x="492.3" y="99.0" width="13.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="495.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (29 samples, 1.15%)</title><rect x="492.3" y="83.0" width="13.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="495.3" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (10 samples, 0.40%)</title><rect x="505.9" y="115.0" width="4.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="508.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (67 samples, 2.66%)</title><rect x="510.6" y="115.0" width="31.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="513.6" y="126.0">on..</text>
</g>
<g>
<title>byte[] (28 samples, 1.11%)</title><rect x="510.6" y="99.0" width="13.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="513.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (21 samples, 0.83%)</title><rect x="523.7" y="99.0" width="9.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="526.7" y="110.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.71%)</title><rect x="533.5" y="99.0" width="8.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="536.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (66 samples, 2.62%)</title><rect x="541.9" y="115.0" width="30.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="544.9" y="126.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (66 samples, 2.62%)</title><rect x="541.9" y="99.0" width="30.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.9" y="110.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (66 samples, 2.62%)</title><rect x="541.9" y="83.0" width="30.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="544.9" y="94.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (15 samples, 0.60%)</title><rect x="541.9" y="67.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="544.9" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (15 samples, 0.60%)</title><rect x="541.9" y="51.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.9" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (5 samples, 0.20%)</title><rect x="541.9" y="35.0" width="2.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="544.9" y="46.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (10 samples, 0.40%)</title><rect x="544.3" y="35.0" width="4.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="547.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (15 samples, 0.60%)</title><rect x="549.0" y="67.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="552.0" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (15 samples, 0.60%)</title><rect x="549.0" y="51.0" width="7.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="552.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (20 samples, 0.79%)</title><rect x="556.0" y="67.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.0" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (20 samples, 0.79%)</title><rect x="556.0" y="51.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.0" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (20 samples, 0.79%)</title><rect x="556.0" y="35.0" width="9.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="559.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.tombstone (16 samples, 0.63%)</title><rect x="565.3" y="67.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="568.3" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (16 samples, 0.63%)</title><rect x="565.3" y="51.0" width="7.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="568.3" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (37 samples, 1.47%)</title><rect x="572.8" y="147.0" width="17.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (37 samples, 1.47%)</title><rect x="572.8" y="131.0" width="17.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="575.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (37 samples, 1.47%)</title><rect x="572.8" y="115.0" width="17.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="575.8" y="126.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.36%)</title><rect x="572.8" y="99.0" width="4.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="575.8" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 1.11%)</title><rect x="577.1" y="99.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="580.1" y="110.0"></text>
</g>
<g>
<title>byte[] (28 samples, 1.11%)</title><rect x="577.1" y="83.0" width="13.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="580.1" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (211 samples, 8.37%)</title><rect x="590.2" y="179.0" width="98.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.2" y="190.0">one/nio/http..</text>
</g>
<g>
<title>one.nio.http.Request (30 samples, 1.19%)</title><rect x="590.2" y="163.0" width="14.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="593.2" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (59 samples, 2.34%)</title><rect x="604.2" y="163.0" width="27.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.2" y="174.0">o..</text>
</g>
<g>
<title>java.lang.String[] (59 samples, 2.34%)</title><rect x="604.2" y="147.0" width="27.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="607.2" y="158.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (122 samples, 4.84%)</title><rect x="631.8" y="163.0" width="57.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.8" y="174.0">one/ni..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (122 samples, 4.84%)</title><rect x="631.8" y="147.0" width="57.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.8" y="158.0">one/ni..</text>
</g>
<g>
<title>char[] (67 samples, 2.66%)</title><rect x="631.8" y="131.0" width="31.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="634.8" y="142.0">ch..</text>
</g>
<g>
<title>java.lang.String (23 samples, 0.91%)</title><rect x="663.2" y="131.0" width="10.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="666.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 1.27%)</title><rect x="674.0" y="131.0" width="15.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="677.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (32 samples, 1.27%)</title><rect x="674.0" y="115.0" width="15.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="677.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (32 samples, 1.27%)</title><rect x="674.0" y="99.0" width="15.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="677.0" y="110.0"></text>
</g>
<g>
<title>byte[] (32 samples, 1.27%)</title><rect x="674.0" y="83.0" width="15.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="677.0" y="94.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (84 samples, 3.33%)</title><rect x="689.0" y="179.0" width="39.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="692.0" y="190.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (84 samples, 3.33%)</title><rect x="689.0" y="163.0" width="39.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="692.0" y="174.0">one..</text>
</g>
<g>
<title>char[] (40 samples, 1.59%)</title><rect x="689.0" y="147.0" width="18.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="692.0" y="158.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.63%)</title><rect x="707.7" y="147.0" width="7.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="710.7" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 1.11%)</title><rect x="715.2" y="147.0" width="13.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.2" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (28 samples, 1.11%)</title><rect x="715.2" y="131.0" width="13.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="718.2" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (28 samples, 1.11%)</title><rect x="715.2" y="115.0" width="13.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="718.2" y="126.0"></text>
</g>
<g>
<title>byte[] (28 samples, 1.11%)</title><rect x="715.2" y="99.0" width="13.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="718.2" y="110.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=1801] (638 samples, 25.32%)</title><rect x="728.3" y="259.0" width="298.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="731.3" y="270.0">[NIO Selector #3 tid=1801]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (638 samples, 25.32%)</title><rect x="728.3" y="243.0" width="298.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="731.3" y="254.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (27 samples, 1.07%)</title><rect x="728.3" y="227.0" width="12.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.3" y="238.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (27 samples, 1.07%)</title><rect x="728.3" y="211.0" width="12.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="731.3" y="222.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (611 samples, 24.25%)</title><rect x="740.9" y="227.0" width="286.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.9" y="238.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (611 samples, 24.25%)</title><rect x="740.9" y="211.0" width="286.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="743.9" y="222.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (611 samples, 24.25%)</title><rect x="740.9" y="195.0" width="286.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.9" y="206.0">one/nio/http/HttpSession.processHttpBu..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (353 samples, 14.01%)</title><rect x="740.9" y="179.0" width="165.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.9" y="190.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (353 samples, 14.01%)</title><rect x="740.9" y="163.0" width="165.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.9" y="174.0">one/nio/http/HttpServ..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (314 samples, 12.46%)</title><rect x="740.9" y="147.0" width="147.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.9" y="158.0">RequestHandler1_ent..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (78 samples, 3.10%)</title><rect x="740.9" y="131.0" width="36.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.9" y="142.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (78 samples, 3.10%)</title><rect x="740.9" y="115.0" width="36.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="743.9" y="126.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (56 samples, 2.22%)</title><rect x="740.9" y="99.0" width="26.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="743.9" y="110.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (56 samples, 2.22%)</title><rect x="740.9" y="83.0" width="26.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="743.9" y="94.0">o..</text>
</g>
<g>
<title>byte[] (56 samples, 2.22%)</title><rect x="740.9" y="67.0" width="26.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="743.9" y="78.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (22 samples, 0.87%)</title><rect x="767.2" y="99.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="770.2" y="110.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (22 samples, 0.87%)</title><rect x="767.2" y="83.0" width="10.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="770.2" y="94.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (35 samples, 1.39%)</title><rect x="777.5" y="131.0" width="16.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.5" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (35 samples, 1.39%)</title><rect x="777.5" y="115.0" width="16.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.5" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (35 samples, 1.39%)</title><rect x="777.5" y="99.0" width="16.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.5" y="110.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.79%)</title><rect x="777.5" y="83.0" width="9.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="780.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.60%)</title><rect x="786.8" y="83.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="789.8" y="94.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.60%)</title><rect x="786.8" y="67.0" width="7.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="789.8" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (201 samples, 7.98%)</title><rect x="793.9" y="131.0" width="94.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="796.9" y="142.0">ru/mail/pol..</text>
</g>
<g>
<title>java/lang/String.getBytes (22 samples, 0.87%)</title><rect x="793.9" y="115.0" width="10.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (22 samples, 0.87%)</title><rect x="793.9" y="99.0" width="10.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.9" y="110.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (22 samples, 0.87%)</title><rect x="793.9" y="83.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="796.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.87%)</title><rect x="793.9" y="67.0" width="10.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.9" y="78.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.87%)</title><rect x="793.9" y="51.0" width="10.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="796.9" y="62.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (40 samples, 1.59%)</title><rect x="804.2" y="115.0" width="18.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="807.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (40 samples, 1.59%)</title><rect x="804.2" y="99.0" width="18.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="807.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (40 samples, 1.59%)</title><rect x="804.2" y="83.0" width="18.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="807.2" y="94.0"></text>
</g>
<g>
<title>one.nio.http.Response (22 samples, 0.87%)</title><rect x="822.9" y="115.0" width="10.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="825.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (65 samples, 2.58%)</title><rect x="833.2" y="115.0" width="30.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="836.2" y="126.0">on..</text>
</g>
<g>
<title>byte[] (23 samples, 0.91%)</title><rect x="833.2" y="99.0" width="10.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="836.2" y="110.0"></text>
</g>
<g>
<title>java.lang.String[] (25 samples, 0.99%)</title><rect x="844.0" y="99.0" width="11.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="847.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.67%)</title><rect x="855.7" y="99.0" width="7.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="858.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (52 samples, 2.06%)</title><rect x="863.6" y="115.0" width="24.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="866.6" y="126.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (52 samples, 2.06%)</title><rect x="863.6" y="99.0" width="24.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="866.6" y="110.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (52 samples, 2.06%)</title><rect x="863.6" y="83.0" width="24.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="866.6" y="94.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (2 samples, 0.08%)</title><rect x="863.6" y="67.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="866.6" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.08%)</title><rect x="863.6" y="51.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="866.6" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (2 samples, 0.08%)</title><rect x="863.6" y="35.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="866.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (27 samples, 1.07%)</title><rect x="864.6" y="67.0" width="12.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="867.6" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (27 samples, 1.07%)</title><rect x="864.6" y="51.0" width="12.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="867.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (3 samples, 0.12%)</title><rect x="877.2" y="67.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="880.2" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.12%)</title><rect x="877.2" y="51.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="880.2" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (3 samples, 0.12%)</title><rect x="877.2" y="35.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="880.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.tombstone (20 samples, 0.79%)</title><rect x="878.6" y="67.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="881.6" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (20 samples, 0.79%)</title><rect x="878.6" y="51.0" width="9.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="881.6" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (39 samples, 1.55%)</title><rect x="888.0" y="147.0" width="18.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="891.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (39 samples, 1.55%)</title><rect x="888.0" y="131.0" width="18.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="891.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (39 samples, 1.55%)</title><rect x="888.0" y="115.0" width="18.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="891.0" y="126.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.79%)</title><rect x="888.0" y="99.0" width="9.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="891.0" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.75%)</title><rect x="897.3" y="99.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="900.3" y="110.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.75%)</title><rect x="897.3" y="83.0" width="8.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="900.3" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (185 samples, 7.34%)</title><rect x="906.2" y="179.0" width="86.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="909.2" y="190.0">one/nio/ht..</text>
</g>
<g>
<title>one.nio.http.Request (23 samples, 0.91%)</title><rect x="906.2" y="163.0" width="10.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="909.2" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (57 samples, 2.26%)</title><rect x="917.0" y="163.0" width="26.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="920.0" y="174.0">o..</text>
</g>
<g>
<title>java.lang.String[] (57 samples, 2.26%)</title><rect x="917.0" y="147.0" width="26.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="920.0" y="158.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (105 samples, 4.17%)</title><rect x="943.7" y="163.0" width="49.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="946.7" y="174.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (105 samples, 4.17%)</title><rect x="943.7" y="147.0" width="49.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="946.7" y="158.0">one/n..</text>
</g>
<g>
<title>char[] (47 samples, 1.87%)</title><rect x="943.7" y="131.0" width="22.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="946.7" y="142.0">c..</text>
</g>
<g>
<title>java.lang.String (10 samples, 0.40%)</title><rect x="965.7" y="131.0" width="4.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="968.7" y="142.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (48 samples, 1.90%)</title><rect x="970.4" y="131.0" width="22.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="973.4" y="142.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (48 samples, 1.90%)</title><rect x="970.4" y="115.0" width="22.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="973.4" y="126.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (48 samples, 1.90%)</title><rect x="970.4" y="99.0" width="22.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="973.4" y="110.0">j..</text>
</g>
<g>
<title>byte[] (48 samples, 1.90%)</title><rect x="970.4" y="83.0" width="22.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="973.4" y="94.0">b..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (73 samples, 2.90%)</title><rect x="992.9" y="179.0" width="34.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="995.9" y="190.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (73 samples, 2.90%)</title><rect x="992.9" y="163.0" width="34.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="995.9" y="174.0">on..</text>
</g>
<g>
<title>char[] (32 samples, 1.27%)</title><rect x="992.9" y="147.0" width="14.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="995.9" y="158.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.67%)</title><rect x="1007.8" y="147.0" width="8.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1010.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24 samples, 0.95%)</title><rect x="1015.8" y="147.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1018.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (24 samples, 0.95%)</title><rect x="1015.8" y="131.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1018.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (24 samples, 0.95%)</title><rect x="1015.8" y="115.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1018.8" y="126.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.95%)</title><rect x="1015.8" y="99.0" width="11.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1018.8" y="110.0"></text>
</g>
<g>
<title>[pool-1-thread-1 tid=1796] (348 samples, 13.81%)</title><rect x="1027.0" y="259.0" width="163.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1030.0" y="270.0">[pool-1-thread-1 tid=..</text>
</g>
<g>
<title>java/lang/Thread.run (348 samples, 13.81%)</title><rect x="1027.0" y="243.0" width="163.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1030.0" y="254.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (348 samples, 13.81%)</title><rect x="1027.0" y="227.0" width="163.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1030.0" y="238.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (348 samples, 13.81%)</title><rect x="1027.0" y="211.0" width="163.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1030.0" y="222.0">java/util/concurrent/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (348 samples, 13.81%)</title><rect x="1027.0" y="195.0" width="163.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1030.0" y="206.0">ru/mail/polis/dao/sha..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (348 samples, 13.81%)</title><rect x="1027.0" y="179.0" width="163.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1030.0" y="190.0">ru/mail/polis/dao/sha..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (1 samples, 0.04%)</title><rect x="1027.0" y="163.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1030.0" y="174.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (1 samples, 0.04%)</title><rect x="1027.0" y="147.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1030.0" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.04%)</title><rect x="1027.0" y="131.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1030.0" y="142.0"></text>
</g>
<g>
<title>java/nio/file/Path.of (1 samples, 0.04%)</title><rect x="1027.5" y="163.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1030.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystem.getPath (1 samples, 0.04%)</title><rect x="1027.5" y="147.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1030.5" y="158.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.04%)</title><rect x="1027.5" y="131.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1030.5" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="1027.5" y="115.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1030.5" y="126.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.04%)</title><rect x="1027.5" y="99.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1030.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (346 samples, 13.73%)</title><rect x="1028.0" y="163.0" width="162.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1031.0" y="174.0">ru/mail/polis/dao/sha..</text>
</g>
<g>
<title>java/lang/Long.valueOf (9 samples, 0.36%)</title><rect x="1028.0" y="147.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1031.0" y="158.0"></text>
</g>
<g>
<title>java.lang.Long (9 samples, 0.36%)</title><rect x="1028.0" y="131.0" width="4.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1031.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (158 samples, 6.27%)</title><rect x="1032.2" y="147.0" width="74.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1035.2" y="158.0">java/nio..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (126 samples, 5.00%)</title><rect x="1032.2" y="131.0" width="59.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1035.2" y="142.0">java.n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (32 samples, 1.27%)</title><rect x="1091.2" y="131.0" width="15.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1094.2" y="142.0"></text>
</g>
<g>
<title>byte[] (31 samples, 1.23%)</title><rect x="1091.2" y="115.0" width="14.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1094.2" y="126.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.04%)</title><rect x="1105.7" y="115.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1108.7" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (37 samples, 1.47%)</title><rect x="1106.2" y="147.0" width="17.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1109.2" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (37 samples, 1.47%)</title><rect x="1106.2" y="131.0" width="17.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1109.2" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.28%)</title><rect x="1123.5" y="147.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1126.5" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.28%)</title><rect x="1123.5" y="131.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1126.5" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.28%)</title><rect x="1123.5" y="115.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1126.5" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.28%)</title><rect x="1123.5" y="99.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1126.5" y="110.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.28%)</title><rect x="1123.5" y="83.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1126.5" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.28%)</title><rect x="1123.5" y="67.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.5" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (7 samples, 0.28%)</title><rect x="1123.5" y="51.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1126.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (13 samples, 0.52%)</title><rect x="1126.8" y="147.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1129.8" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.52%)</title><rect x="1126.8" y="131.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1129.8" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.52%)</title><rect x="1126.8" y="115.0" width="6.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1129.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (122 samples, 4.84%)</title><rect x="1132.9" y="147.0" width="57.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1135.9" y="158.0">ru/mai..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (122 samples, 4.84%)</title><rect x="1132.9" y="131.0" width="57.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1135.9" y="142.0">java/n..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (122 samples, 4.84%)</title><rect x="1132.9" y="115.0" width="57.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1135.9" y="126.0">java.n..</text>
</g>
</g>
</svg>
