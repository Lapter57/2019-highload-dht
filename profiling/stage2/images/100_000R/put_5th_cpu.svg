<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="805"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="805"> </text>
<g id="frames">
<g>
<title>all (7,939 samples, 100.00%)</title><rect x="10.0" y="771.0" width="1180.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="782.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=25125] (1,963 samples, 24.73%)</title><rect x="10.0" y="755.0" width="291.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="13.0" y="766.0">[NIO Selector #0 tid=25125]</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="10.0" y="739.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="10.0" y="723.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="10.0" y="707.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="10.0" y="691.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="10.0" y="675.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>[unknown_Java] (9 samples, 0.11%)</title><rect x="10.3" y="739.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.3" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="11.2" y="723.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="14.2" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,952 samples, 24.59%)</title><rect x="11.6" y="739.0" width="290.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.6" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.05%)</title><rect x="12.1" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.05%)</title><rect x="12.1" y="707.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (289 samples, 3.64%)</title><rect x="12.8" y="723.0" width="43.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.8" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.03%)</title><rect x="13.0" y="707.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.03%)</title><rect x="13.0" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="16.0" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (286 samples, 3.60%)</title><rect x="13.3" y="707.0" width="42.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.3" y="718.0">one/..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (262 samples, 3.30%)</title><rect x="14.0" y="691.0" width="39.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="17.0" y="702.0">.an..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="35.1" y="675.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="38.1" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (118 samples, 1.49%)</title><rect x="35.4" y="675.0" width="17.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="38.4" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (118 samples, 1.49%)</title><rect x="35.4" y="659.0" width="17.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="38.4" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (100 samples, 1.26%)</title><rect x="38.1" y="643.0" width="14.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="41.1" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (97 samples, 1.22%)</title><rect x="38.5" y="627.0" width="14.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="41.5" y="638.0"></text>
</g>
<g>
<title>__fget_light (14 samples, 0.18%)</title><rect x="38.8" y="611.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="41.8" y="622.0"></text>
</g>
<g>
<title>__fget (13 samples, 0.16%)</title><rect x="39.0" y="595.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="42.0" y="606.0"></text>
</g>
<g>
<title>ep_poll (67 samples, 0.84%)</title><rect x="40.9" y="611.0" width="10.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="43.9" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (48 samples, 0.60%)</title><rect x="43.0" y="595.0" width="7.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="46.0" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (18 samples, 0.23%)</title><rect x="46.1" y="579.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="49.1" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (13 samples, 0.16%)</title><rect x="46.9" y="563.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="49.9" y="574.0"></text>
</g>
<g>
<title>sock_poll (11 samples, 0.14%)</title><rect x="47.2" y="547.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="50.2" y="558.0"></text>
</g>
<g>
<title>tcp_poll (8 samples, 0.10%)</title><rect x="47.6" y="531.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="50.6" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.05%)</title><rect x="48.2" y="515.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="51.2" y="526.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.04%)</title><rect x="48.8" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="51.8" y="590.0"></text>
</g>
<g>
<title>mutex_unlock (6 samples, 0.08%)</title><rect x="49.2" y="579.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="52.2" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.06%)</title><rect x="50.1" y="595.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="53.1" y="606.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.05%)</title><rect x="50.3" y="579.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="53.3" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="50.6" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="53.6" y="574.0"></text>
</g>
<g>
<title>fput_many (14 samples, 0.18%)</title><rect x="50.9" y="611.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="53.9" y="622.0"></text>
</g>
<g>
<title>__GI___clock_gettime (8 samples, 0.10%)</title><rect x="53.3" y="691.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="56.3" y="702.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="54.0" y="675.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="57.0" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.04%)</title><rect x="54.4" y="691.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="57.4" y="702.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="54.9" y="691.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="57.9" y="702.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.04%)</title><rect x="55.2" y="691.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="58.2" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,655 samples, 20.85%)</title><rect x="55.8" y="723.0" width="246.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.8" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,650 samples, 20.78%)</title><rect x="56.2" y="707.0" width="245.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.2" y="718.0">one/nio/http/HttpSession.processR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,463 samples, 18.43%)</title><rect x="56.5" y="691.0" width="217.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="59.5" y="702.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,381 samples, 17.40%)</title><rect x="61.3" y="675.0" width="205.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.3" y="686.0">one/nio/http/HttpSession.ha..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,379 samples, 17.37%)</title><rect x="61.6" y="659.0" width="204.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.6" y="670.0">one/nio/http/HttpServer.han..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,363 samples, 17.17%)</title><rect x="61.7" y="643.0" width="202.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.7" y="654.0">RequestHandler1_entity.han..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,188 samples, 14.96%)</title><rect x="61.7" y="627.0" width="176.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="64.7" y="638.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,178 samples, 14.84%)</title><rect x="62.9" y="611.0" width="175.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="65.9" y="622.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (51 samples, 0.64%)</title><rect x="62.9" y="595.0" width="7.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.9" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.06%)</title><rect x="65.3" y="579.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="68.3" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (29 samples, 0.37%)</title><rect x="66.2" y="579.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.2" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (12 samples, 0.15%)</title><rect x="66.8" y="563.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.06%)</title><rect x="67.4" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="70.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.04%)</title><rect x="67.7" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="68.1" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.1" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.16%)</title><rect x="68.6" y="563.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.6" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (12 samples, 0.15%)</title><rect x="68.7" y="547.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.04%)</title><rect x="69.9" y="531.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.9" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.03%)</title><rect x="70.0" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="73.0" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,127 samples, 14.20%)</title><rect x="70.5" y="595.0" width="167.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.5" y="606.0">one/nio/net/Session.w..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,126 samples, 14.18%)</title><rect x="70.6" y="579.0" width="167.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.6" y="590.0">one/nio/net/Session.w..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,121 samples, 14.12%)</title><rect x="70.8" y="563.0" width="166.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="73.8" y="574.0">one/nio/net/Session$A..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,121 samples, 14.12%)</title><rect x="70.8" y="547.0" width="166.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.8" y="558.0">one/nio/net/NativeSoc..</text>
</g>
<g>
<title>.annobin_send.c (1,105 samples, 13.92%)</title><rect x="70.9" y="531.0" width="164.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="73.9" y="542.0">.annobin_send.c</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (7 samples, 0.09%)</title><rect x="78.8" y="515.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="81.8" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,045 samples, 13.16%)</title><rect x="79.9" y="515.0" width="155.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="82.9" y="526.0">entry_SYSCALL_64_aft..</text>
</g>
<g>
<title>do_syscall_64 (1,045 samples, 13.16%)</title><rect x="79.9" y="499.0" width="155.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="82.9" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,023 samples, 12.89%)</title><rect x="83.1" y="483.0" width="152.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="86.1" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,018 samples, 12.82%)</title><rect x="83.9" y="467.0" width="151.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="86.9" y="478.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="84.3" y="451.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="87.3" y="462.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="84.6" y="451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="87.6" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (1,003 samples, 12.63%)</title><rect x="84.9" y="451.0" width="149.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="87.9" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.05%)</title><rect x="85.2" y="435.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="88.2" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.04%)</title><rect x="85.4" y="419.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="88.4" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (997 samples, 12.56%)</title><rect x="85.8" y="435.0" width="148.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="88.8" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.08%)</title><rect x="86.5" y="419.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="89.5" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="87.1" y="403.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="90.1" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (985 samples, 12.41%)</title><rect x="87.6" y="419.0" width="146.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="90.6" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (6 samples, 0.08%)</title><rect x="88.3" y="403.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="91.3" y="414.0"></text>
</g>
<g>
<title>__check_heap_object (3 samples, 0.04%)</title><rect x="88.5" y="387.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="91.5" y="398.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="88.9" y="387.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="91.9" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (923 samples, 11.63%)</title><rect x="89.2" y="403.0" width="137.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="92.2" y="414.0">__tcp_push_pendin..</text>
</g>
<g>
<title>tcp_write_xmit (923 samples, 11.63%)</title><rect x="89.2" y="387.0" width="137.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="92.2" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (897 samples, 11.30%)</title><rect x="90.9" y="371.0" width="133.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="93.9" y="382.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (870 samples, 10.96%)</title><rect x="92.2" y="355.0" width="129.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="95.2" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (9 samples, 0.11%)</title><rect x="92.3" y="339.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="95.3" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (8 samples, 0.10%)</title><rect x="92.5" y="323.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="95.5" y="334.0"></text>
</g>
<g>
<title>ip_local_out (159 samples, 2.00%)</title><rect x="93.7" y="339.0" width="23.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="96.7" y="350.0">i..</text>
</g>
<g>
<title>__ip_local_out (159 samples, 2.00%)</title><rect x="93.7" y="323.0" width="23.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="96.7" y="334.0">_..</text>
</g>
<g>
<title>ip_send_check (9 samples, 0.11%)</title><rect x="94.0" y="307.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="97.0" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (148 samples, 1.86%)</title><rect x="95.3" y="307.0" width="22.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="98.3" y="318.0">n..</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (33 samples, 0.42%)</title><rect x="95.6" y="291.0" width="4.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="98.6" y="302.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (6 samples, 0.08%)</title><rect x="100.5" y="291.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="103.5" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (16 samples, 0.20%)</title><rect x="101.4" y="291.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="104.4" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (12 samples, 0.15%)</title><rect x="102.0" y="275.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="105.0" y="286.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (5 samples, 0.06%)</title><rect x="103.8" y="291.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="106.8" y="302.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (2 samples, 0.03%)</title><rect x="104.5" y="291.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="107.5" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (3 samples, 0.04%)</title><rect x="104.8" y="291.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="107.8" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (7 samples, 0.09%)</title><rect x="105.3" y="291.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="108.3" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (56 samples, 0.71%)</title><rect x="106.3" y="291.0" width="8.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="109.3" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (13 samples, 0.16%)</title><rect x="108.1" y="275.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="111.1" y="286.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (2 samples, 0.03%)</title><rect x="110.0" y="275.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="113.0" y="286.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (2 samples, 0.03%)</title><rect x="110.3" y="275.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="113.3" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (22 samples, 0.28%)</title><rect x="110.6" y="275.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="113.6" y="286.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="113.0" y="259.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="116.0" y="270.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (3 samples, 0.04%)</title><rect x="113.4" y="259.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="116.4" y="270.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (5 samples, 0.06%)</title><rect x="113.9" y="275.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="116.9" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (16 samples, 0.20%)</title><rect x="114.6" y="291.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="117.6" y="302.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (5 samples, 0.06%)</title><rect x="115.5" y="275.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="118.5" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (2 samples, 0.03%)</title><rect x="116.3" y="275.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="119.3" y="286.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (3 samples, 0.04%)</title><rect x="116.6" y="275.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="119.6" y="286.0"></text>
</g>
<g>
<title>selinux_ipv4_output (2 samples, 0.03%)</title><rect x="117.0" y="291.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="120.0" y="302.0"></text>
</g>
<g>
<title>ip_output (701 samples, 8.83%)</title><rect x="117.3" y="339.0" width="104.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="120.3" y="350.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (647 samples, 8.15%)</title><rect x="118.2" y="323.0" width="96.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="121.2" y="334.0">ip_finish_o..</text>
</g>
<g>
<title>__dev_queue_xmit (42 samples, 0.53%)</title><rect x="119.2" y="307.0" width="6.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="122.2" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (26 samples, 0.33%)</title><rect x="121.2" y="291.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="124.2" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (24 samples, 0.30%)</title><rect x="121.5" y="275.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="124.5" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.04%)</title><rect x="122.2" y="259.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="125.2" y="270.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.11%)</title><rect x="122.7" y="259.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="125.7" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (9 samples, 0.11%)</title><rect x="122.7" y="243.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="125.7" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (6 samples, 0.08%)</title><rect x="123.1" y="227.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="126.1" y="238.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.03%)</title><rect x="124.2" y="259.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="127.2" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (4 samples, 0.05%)</title><rect x="124.4" y="259.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="127.4" y="270.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.03%)</title><rect x="125.0" y="291.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="128.0" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (598 samples, 7.53%)</title><rect x="125.5" y="307.0" width="88.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="128.5" y="318.0">__local_bh..</text>
</g>
<g>
<title>do_softirq.part.0 (598 samples, 7.53%)</title><rect x="125.5" y="291.0" width="88.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="128.5" y="302.0">do_softirq..</text>
</g>
<g>
<title>do_softirq_own_stack (595 samples, 7.49%)</title><rect x="125.9" y="275.0" width="88.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="128.9" y="286.0">do_softirq..</text>
</g>
<g>
<title>__softirqentry_text_start (595 samples, 7.49%)</title><rect x="125.9" y="259.0" width="88.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="128.9" y="270.0">__softirqe..</text>
</g>
<g>
<title>net_rx_action (579 samples, 7.29%)</title><rect x="128.3" y="243.0" width="86.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="131.3" y="254.0">net_rx_act..</text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="129.2" y="227.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="132.2" y="238.0"></text>
</g>
<g>
<title>process_backlog (571 samples, 7.19%)</title><rect x="129.5" y="227.0" width="84.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="132.5" y="238.0">process_ba..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (562 samples, 7.08%)</title><rect x="130.8" y="211.0" width="83.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="133.8" y="222.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_core (7 samples, 0.09%)</title><rect x="131.0" y="195.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="134.0" y="206.0"></text>
</g>
<g>
<title>ip_rcv (554 samples, 6.98%)</title><rect x="132.0" y="195.0" width="82.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="135.0" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (451 samples, 5.68%)</title><rect x="132.6" y="179.0" width="67.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="135.6" y="190.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (372 samples, 4.69%)</title><rect x="133.4" y="163.0" width="55.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="136.4" y="174.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (372 samples, 4.69%)</title><rect x="133.4" y="147.0" width="55.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="136.4" y="158.0">ip_pr..</text>
</g>
<g>
<title>raw_local_deliver (5 samples, 0.06%)</title><rect x="133.8" y="131.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="136.8" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (364 samples, 4.58%)</title><rect x="134.6" y="131.0" width="54.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="137.6" y="142.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (21 samples, 0.26%)</title><rect x="137.1" y="115.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="140.1" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (7 samples, 0.09%)</title><rect x="139.2" y="99.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="142.2" y="110.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.09%)</title><rect x="140.4" y="115.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="143.4" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (7 samples, 0.09%)</title><rect x="140.4" y="99.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="143.4" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (7 samples, 0.09%)</title><rect x="140.4" y="83.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="143.4" y="94.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.03%)</title><rect x="141.4" y="115.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="144.4" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (314 samples, 3.96%)</title><rect x="141.7" y="115.0" width="46.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="144.7" y="126.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (313 samples, 3.94%)</title><rect x="141.8" y="99.0" width="46.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="144.8" y="110.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.03%)</title><rect x="142.4" y="83.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="145.4" y="94.0"></text>
</g>
<g>
<title>tcp_ack (77 samples, 0.97%)</title><rect x="142.9" y="83.0" width="11.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="145.9" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (25 samples, 0.31%)</title><rect x="145.6" y="67.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="148.6" y="78.0"></text>
</g>
<g>
<title>__slab_free (6 samples, 0.08%)</title><rect x="145.6" y="51.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="148.6" y="62.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.04%)</title><rect x="146.4" y="51.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="149.4" y="62.0"></text>
</g>
<g>
<title>skb_release_data (15 samples, 0.19%)</title><rect x="147.0" y="51.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="150.0" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (6 samples, 0.08%)</title><rect x="149.3" y="67.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="152.3" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (7 samples, 0.09%)</title><rect x="150.2" y="67.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="153.2" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.04%)</title><rect x="151.2" y="67.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="154.2" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="151.4" y="51.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="154.4" y="62.0"></text>
</g>
<g>
<title>ktime_get_seconds (3 samples, 0.04%)</title><rect x="151.6" y="67.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="154.6" y="78.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.03%)</title><rect x="152.1" y="67.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="155.1" y="78.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.03%)</title><rect x="152.5" y="67.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="155.5" y="78.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.03%)</title><rect x="152.8" y="67.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="155.8" y="78.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.04%)</title><rect x="153.4" y="67.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="156.4" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="154.0" y="67.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="157.0" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.03%)</title><rect x="154.3" y="83.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="157.3" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (220 samples, 2.77%)</title><rect x="154.6" y="83.0" width="32.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="157.6" y="94.0">tc..</text>
</g>
<g>
<title>sock_def_readable (210 samples, 2.65%)</title><rect x="154.9" y="67.0" width="31.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="157.9" y="78.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (207 samples, 2.61%)</title><rect x="155.4" y="51.0" width="30.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="158.4" y="62.0">__..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="155.7" y="35.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="158.7" y="46.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (203 samples, 2.56%)</title><rect x="156.0" y="35.0" width="30.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="159.0" y="46.0">_r..</text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.04%)</title><rect x="186.1" y="67.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="189.1" y="78.0"></text>
</g>
<g>
<title>tcp_queue_rcv (5 samples, 0.06%)</title><rect x="186.6" y="67.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="189.6" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.06%)</title><rect x="187.3" y="83.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="190.3" y="94.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.05%)</title><rect x="187.5" y="67.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="190.5" y="78.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="187.6" y="51.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="190.6" y="62.0"></text>
</g>
<g>
<title>tcp_urg (2 samples, 0.03%)</title><rect x="188.1" y="83.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="191.1" y="94.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="188.4" y="115.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="191.4" y="126.0"></text>
</g>
<g>
<title>nf_hook_slow (74 samples, 0.93%)</title><rect x="188.7" y="163.0" width="11.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="191.7" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (50 samples, 0.63%)</title><rect x="189.4" y="147.0" width="7.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="192.4" y="158.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="194.5" y="131.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="197.5" y="142.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (10 samples, 0.13%)</title><rect x="194.8" y="131.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="197.8" y="142.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (4 samples, 0.05%)</title><rect x="196.2" y="131.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="199.2" y="142.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.05%)</title><rect x="196.8" y="147.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="199.8" y="158.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (5 samples, 0.06%)</title><rect x="197.4" y="147.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="200.4" y="158.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (2 samples, 0.03%)</title><rect x="198.2" y="147.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="201.2" y="158.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (5 samples, 0.06%)</title><rect x="198.5" y="147.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="201.5" y="158.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (3 samples, 0.04%)</title><rect x="198.8" y="131.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="201.8" y="142.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (2 samples, 0.03%)</title><rect x="199.2" y="147.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="202.2" y="158.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="199.8" y="179.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="202.8" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (96 samples, 1.21%)</title><rect x="200.1" y="179.0" width="14.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="203.1" y="190.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (2 samples, 0.03%)</title><rect x="200.8" y="163.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="203.8" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (70 samples, 0.88%)</title><rect x="201.1" y="163.0" width="10.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="204.1" y="174.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="211.2" y="147.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="214.2" y="158.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (2 samples, 0.03%)</title><rect x="211.5" y="163.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="214.5" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (4 samples, 0.05%)</title><rect x="211.8" y="163.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="214.8" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (4 samples, 0.05%)</title><rect x="212.4" y="163.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="215.4" y="174.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (8 samples, 0.10%)</title><rect x="213.2" y="163.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="216.2" y="174.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (3 samples, 0.04%)</title><rect x="213.9" y="147.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="216.9" y="158.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.04%)</title><rect x="214.4" y="323.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="217.4" y="334.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="214.5" y="307.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="217.5" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (45 samples, 0.57%)</title><rect x="214.8" y="323.0" width="6.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="217.8" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (18 samples, 0.23%)</title><rect x="214.8" y="307.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="217.8" y="318.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (2 samples, 0.03%)</title><rect x="217.5" y="307.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="220.5" y="318.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (7 samples, 0.09%)</title><rect x="217.8" y="307.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="220.8" y="318.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (6 samples, 0.08%)</title><rect x="217.9" y="291.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="220.9" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (5 samples, 0.06%)</title><rect x="218.8" y="307.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="221.8" y="318.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (4 samples, 0.05%)</title><rect x="219.0" y="291.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="222.0" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute (9 samples, 0.11%)</title><rect x="219.6" y="307.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="222.6" y="318.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (4 samples, 0.05%)</title><rect x="220.9" y="307.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="223.9" y="318.0"></text>
</g>
<g>
<title>__skb_clone (3 samples, 0.04%)</title><rect x="221.5" y="355.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="224.5" y="366.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="221.7" y="339.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="224.7" y="350.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="222.0" y="355.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="225.0" y="366.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.03%)</title><rect x="222.2" y="355.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="225.2" y="366.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.04%)</title><rect x="222.5" y="355.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="225.5" y="366.0"></text>
</g>
<g>
<title>skb_clone (6 samples, 0.08%)</title><rect x="223.0" y="355.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="226.0" y="366.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.05%)</title><rect x="224.2" y="371.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="227.2" y="382.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="224.3" y="355.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="227.3" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.04%)</title><rect x="224.8" y="371.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="227.8" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="224.8" y="355.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="227.8" y="366.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="224.9" y="339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="227.9" y="350.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (7 samples, 0.09%)</title><rect x="225.2" y="371.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="228.2" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="226.0" y="355.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="229.0" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.06%)</title><rect x="226.4" y="403.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="229.4" y="414.0"></text>
</g>
<g>
<title>copyin (3 samples, 0.04%)</title><rect x="226.6" y="387.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="229.6" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.04%)</title><rect x="226.6" y="371.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="229.6" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (29 samples, 0.37%)</title><rect x="227.2" y="403.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="230.2" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (27 samples, 0.34%)</title><rect x="227.5" y="387.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="230.5" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (10 samples, 0.13%)</title><rect x="228.2" y="371.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="231.2" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (9 samples, 0.11%)</title><rect x="228.3" y="355.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="231.3" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.08%)</title><rect x="229.7" y="371.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="232.7" y="382.0"></text>
</g>
<g>
<title>ksize (6 samples, 0.08%)</title><rect x="230.6" y="371.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="233.6" y="382.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.04%)</title><rect x="231.5" y="403.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="234.5" y="414.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="232.1" y="403.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="235.1" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (10 samples, 0.13%)</title><rect x="232.4" y="403.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="235.4" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (9 samples, 0.11%)</title><rect x="232.5" y="387.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="235.5" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (7 samples, 0.09%)</title><rect x="232.8" y="371.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="235.8" y="382.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.10%)</title><rect x="234.0" y="451.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="237.0" y="462.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.09%)</title><rect x="234.1" y="435.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="237.1" y="446.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.06%)</title><rect x="234.4" y="419.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="237.4" y="430.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.16%)</title><rect x="235.3" y="531.0" width="2.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="238.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.16%)</title><rect x="235.3" y="515.0" width="2.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="238.3" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (10 samples, 0.13%)</title><rect x="235.3" y="499.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="238.3" y="510.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="235.5" y="483.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="238.5" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.09%)</title><rect x="235.8" y="483.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="238.8" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.04%)</title><rect x="235.8" y="467.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="238.8" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (4 samples, 0.05%)</title><rect x="236.2" y="467.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="239.2" y="478.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="236.8" y="499.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="239.8" y="510.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.05%)</title><rect x="237.4" y="563.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="240.4" y="574.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.05%)</title><rect x="237.4" y="547.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="240.4" y="558.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="237.6" y="531.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="240.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="238.0" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="238.0" y="595.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.15%)</title><rect x="238.3" y="627.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (5 samples, 0.06%)</title><rect x="238.4" y="611.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="241.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="238.7" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="241.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="239.2" y="611.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="242.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="239.3" y="595.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.3" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="239.5" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.5" y="590.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="239.8" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="239.8" y="595.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="242.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="239.8" y="579.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="239.8" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="242.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (163 samples, 2.05%)</title><rect x="240.1" y="627.0" width="24.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="243.1" y="638.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (14 samples, 0.18%)</title><rect x="240.1" y="611.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="243.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.05%)</title><rect x="240.4" y="595.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="243.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (4 samples, 0.05%)</title><rect x="240.4" y="579.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="243.4" y="590.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (8 samples, 0.10%)</title><rect x="241.0" y="595.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="244.0" y="606.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.08%)</title><rect x="241.3" y="579.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="244.3" y="590.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.08%)</title><rect x="241.3" y="563.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="244.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.09%)</title><rect x="242.2" y="611.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.2" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.09%)</title><rect x="242.2" y="595.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.2" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="242.2" y="579.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="245.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="242.2" y="563.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="245.2" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="242.8" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="242.8" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="242.8" y="515.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="245.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (142 samples, 1.79%)</title><rect x="243.2" y="611.0" width="21.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="246.2" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (142 samples, 1.79%)</title><rect x="243.2" y="595.0" width="21.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="246.2" y="606.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (142 samples, 1.79%)</title><rect x="243.2" y="579.0" width="21.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="246.2" y="590.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (142 samples, 1.79%)</title><rect x="243.2" y="563.0" width="21.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="246.2" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (142 samples, 1.79%)</title><rect x="243.2" y="547.0" width="21.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="246.2" y="558.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (8 samples, 0.10%)</title><rect x="244.7" y="531.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="247.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (8 samples, 0.10%)</title><rect x="244.7" y="515.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="247.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (36 samples, 0.45%)</title><rect x="245.9" y="531.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="248.9" y="542.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (7 samples, 0.09%)</title><rect x="250.2" y="515.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="253.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (16 samples, 0.20%)</title><rect x="251.2" y="531.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (9 samples, 0.11%)</title><rect x="252.3" y="515.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.3" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.06%)</title><rect x="252.9" y="499.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.9" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.05%)</title><rect x="253.0" y="483.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.0" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.03%)</title><rect x="253.0" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.0" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="253.3" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="256.3" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="253.3" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="256.3" y="462.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.03%)</title><rect x="253.3" y="435.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="256.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (70 samples, 0.88%)</title><rect x="253.6" y="531.0" width="10.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (68 samples, 0.86%)</title><rect x="253.9" y="515.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.9" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (47 samples, 0.59%)</title><rect x="257.0" y="499.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="260.0" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="257.3" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="260.3" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (6 samples, 0.08%)</title><rect x="257.6" y="483.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="260.6" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (17 samples, 0.21%)</title><rect x="258.5" y="483.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="261.5" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (11 samples, 0.14%)</title><rect x="259.4" y="467.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="262.4" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="260.3" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.3" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (3 samples, 0.04%)</title><rect x="260.6" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (20 samples, 0.25%)</title><rect x="261.0" y="483.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="264.0" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (18 samples, 0.23%)</title><rect x="261.2" y="467.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="264.2" y="478.0"></text>
</g>
<g>
<title>vectorizedMismatch (16 samples, 0.20%)</title><rect x="261.5" y="451.0" width="2.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="264.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (2 samples, 0.03%)</title><rect x="264.0" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="267.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.04%)</title><rect x="264.3" y="643.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="267.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.03%)</title><rect x="264.5" y="627.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="267.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (11 samples, 0.14%)</title><rect x="264.9" y="643.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.14%)</title><rect x="264.9" y="627.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="267.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.14%)</title><rect x="264.9" y="611.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="267.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.10%)</title><rect x="264.9" y="595.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="267.9" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="266.1" y="595.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="269.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (17 samples, 0.21%)</title><rect x="266.5" y="675.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="269.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.09%)</title><rect x="267.1" y="659.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="270.1" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.09%)</title><rect x="267.1" y="643.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="270.1" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (6 samples, 0.08%)</title><rect x="268.2" y="659.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (9 samples, 0.11%)</title><rect x="269.1" y="675.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.1" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (7 samples, 0.09%)</title><rect x="269.2" y="659.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="272.2" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (7 samples, 0.09%)</title><rect x="269.2" y="643.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.2" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.04%)</title><rect x="269.4" y="627.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="272.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.04%)</title><rect x="269.4" y="611.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="272.4" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (3 samples, 0.04%)</title><rect x="269.4" y="595.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="269.8" y="627.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="272.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="269.8" y="611.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="272.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (16 samples, 0.20%)</title><rect x="270.6" y="675.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="273.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.11%)</title><rect x="271.4" y="659.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.10%)</title><rect x="271.6" y="643.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.6" y="654.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="272.5" y="627.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="275.5" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.09%)</title><rect x="272.9" y="675.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="275.9" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.08%)</title><rect x="273.1" y="659.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="276.1" y="670.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (2 samples, 0.03%)</title><rect x="273.7" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="276.7" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (185 samples, 2.33%)</title><rect x="274.0" y="691.0" width="27.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="277.0" y="702.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (184 samples, 2.32%)</title><rect x="274.0" y="675.0" width="27.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.0" y="686.0">o..</text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="274.9" y="659.0" width="3.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="277.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.31%)</title><rect x="274.9" y="643.0" width="3.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="277.9" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (19 samples, 0.24%)</title><rect x="274.9" y="627.0" width="2.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="277.9" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.03%)</title><rect x="275.0" y="611.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="278.0" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (15 samples, 0.19%)</title><rect x="275.5" y="611.0" width="2.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="278.5" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.04%)</title><rect x="275.9" y="595.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="278.9" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.06%)</title><rect x="276.4" y="595.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="279.4" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (4 samples, 0.05%)</title><rect x="277.1" y="595.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="280.1" y="606.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.04%)</title><rect x="277.8" y="627.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="280.8" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.03%)</title><rect x="278.3" y="627.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="281.3" y="638.0"></text>
</g>
<g>
<title>__libc_recv (152 samples, 1.91%)</title><rect x="278.6" y="659.0" width="22.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="281.6" y="670.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (118 samples, 1.49%)</title><rect x="283.6" y="643.0" width="17.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="286.6" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (118 samples, 1.49%)</title><rect x="283.6" y="627.0" width="17.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="286.6" y="638.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (94 samples, 1.18%)</title><rect x="287.2" y="611.0" width="14.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="290.2" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (90 samples, 1.13%)</title><rect x="287.8" y="595.0" width="13.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="290.8" y="606.0"></text>
</g>
<g>
<title>import_single_range (5 samples, 0.06%)</title><rect x="288.1" y="579.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="291.1" y="590.0"></text>
</g>
<g>
<title>iov_iter_init (3 samples, 0.04%)</title><rect x="288.4" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="291.4" y="574.0"></text>
</g>
<g>
<title>inet_recvmsg (58 samples, 0.73%)</title><rect x="288.8" y="579.0" width="8.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="291.8" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (58 samples, 0.73%)</title><rect x="288.8" y="563.0" width="8.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="291.8" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.10%)</title><rect x="290.3" y="547.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="293.3" y="558.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.08%)</title><rect x="290.3" y="531.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="293.3" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (6 samples, 0.08%)</title><rect x="290.3" y="515.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="293.3" y="526.0"></text>
</g>
<g>
<title>sock_rfree (5 samples, 0.06%)</title><rect x="290.5" y="499.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="293.5" y="510.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="291.2" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="294.2" y="542.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="291.5" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="294.5" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="291.8" y="547.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="294.8" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="291.8" y="531.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="294.8" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (32 samples, 0.40%)</title><rect x="292.3" y="547.0" width="4.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="295.3" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (32 samples, 0.40%)</title><rect x="292.3" y="531.0" width="4.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="295.3" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (11 samples, 0.14%)</title><rect x="292.6" y="515.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="295.6" y="526.0"></text>
</g>
<g>
<title>copyout (10 samples, 0.13%)</title><rect x="292.7" y="499.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="295.7" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (9 samples, 0.11%)</title><rect x="292.8" y="483.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="295.8" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (19 samples, 0.24%)</title><rect x="294.2" y="515.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="297.2" y="526.0"></text>
</g>
<g>
<title>__check_object_size (15 samples, 0.19%)</title><rect x="294.8" y="499.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="297.8" y="510.0"></text>
</g>
<g>
<title>__check_heap_object (3 samples, 0.04%)</title><rect x="295.4" y="483.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="298.4" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.08%)</title><rect x="295.8" y="483.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="298.8" y="494.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.03%)</title><rect x="296.7" y="483.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="299.7" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.03%)</title><rect x="297.2" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="300.2" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="297.2" y="531.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="300.2" y="542.0"></text>
</g>
<g>
<title>sock_recvmsg (10 samples, 0.13%)</title><rect x="297.5" y="579.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="300.5" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (9 samples, 0.11%)</title><rect x="297.6" y="563.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="300.6" y="574.0"></text>
</g>
<g>
<title>sock_has_perm (9 samples, 0.11%)</title><rect x="297.6" y="547.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="300.6" y="558.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.04%)</title><rect x="298.5" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="301.5" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (15 samples, 0.19%)</title><rect x="298.9" y="579.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="301.9" y="590.0"></text>
</g>
<g>
<title>__fget_light (14 samples, 0.18%)</title><rect x="299.1" y="563.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="302.1" y="574.0"></text>
</g>
<g>
<title>__fget (12 samples, 0.15%)</title><rect x="299.4" y="547.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="302.4" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="301.5" y="707.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="304.5" y="718.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="301.5" y="691.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="304.5" y="702.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="301.5" y="675.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="304.5" y="686.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25127] (3,204 samples, 40.36%)</title><rect x="301.8" y="755.0" width="476.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="304.8" y="766.0">[NIO Selector #2 tid=25127]</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.04%)</title><rect x="301.8" y="739.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="304.8" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.04%)</title><rect x="301.8" y="723.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="304.8" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.04%)</title><rect x="301.8" y="707.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="304.8" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="301.8" y="691.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="304.8" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="301.8" y="675.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="304.8" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.03%)</title><rect x="301.8" y="659.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="304.8" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.03%)</title><rect x="301.8" y="643.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="304.8" y="654.0"></text>
</g>
<g>
<title>VMThread::execute(VM_Operation*) (2 samples, 0.03%)</title><rect x="301.8" y="627.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="304.8" y="638.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.03%)</title><rect x="301.8" y="611.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="304.8" y="622.0"></text>
</g>
<g>
<title>[unknown_Java] (7 samples, 0.09%)</title><rect x="302.2" y="739.0" width="1.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="305.2" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,194 samples, 40.23%)</title><rect x="303.3" y="739.0" width="474.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.3" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (2 samples, 0.03%)</title><rect x="303.4" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="306.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.04%)</title><rect x="303.7" y="723.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="306.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.04%)</title><rect x="303.7" y="707.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="306.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (370 samples, 4.66%)</title><rect x="304.1" y="723.0" width="55.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="307.1" y="734.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (6 samples, 0.08%)</title><rect x="304.3" y="707.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="307.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (4 samples, 0.05%)</title><rect x="304.6" y="691.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="307.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (363 samples, 4.57%)</title><rect x="305.2" y="707.0" width="53.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.2" y="718.0">one/n..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (334 samples, 4.21%)</title><rect x="306.7" y="691.0" width="49.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="309.7" y="702.0">.anno..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (190 samples, 2.39%)</title><rect x="328.1" y="675.0" width="28.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="331.1" y="686.0">en..</text>
</g>
<g>
<title>do_syscall_64 (190 samples, 2.39%)</title><rect x="328.1" y="659.0" width="28.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="331.1" y="670.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (159 samples, 2.00%)</title><rect x="332.7" y="643.0" width="23.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="335.7" y="654.0">_..</text>
</g>
<g>
<title>do_epoll_wait (153 samples, 1.93%)</title><rect x="333.6" y="627.0" width="22.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="336.6" y="638.0">d..</text>
</g>
<g>
<title>__fget_light (13 samples, 0.16%)</title><rect x="334.0" y="611.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="337.0" y="622.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.11%)</title><rect x="334.6" y="595.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="337.6" y="606.0"></text>
</g>
<g>
<title>ep_poll (133 samples, 1.68%)</title><rect x="336.0" y="611.0" width="19.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="339.0" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (113 samples, 1.42%)</title><rect x="338.5" y="595.0" width="16.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="341.5" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (63 samples, 0.79%)</title><rect x="344.3" y="579.0" width="9.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="347.3" y="590.0"></text>
</g>
<g>
<title>__list_add_valid (2 samples, 0.03%)</title><rect x="346.1" y="563.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="349.1" y="574.0"></text>
</g>
<g>
<title>__list_del_entry_valid (2 samples, 0.03%)</title><rect x="346.4" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="349.4" y="574.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (47 samples, 0.59%)</title><rect x="346.7" y="563.0" width="6.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="349.7" y="574.0"></text>
</g>
<g>
<title>sock_poll (45 samples, 0.57%)</title><rect x="347.0" y="547.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="350.0" y="558.0"></text>
</g>
<g>
<title>tcp_poll (32 samples, 0.40%)</title><rect x="348.9" y="531.0" width="4.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="351.9" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (10 samples, 0.13%)</title><rect x="352.2" y="515.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="355.2" y="526.0"></text>
</g>
<g>
<title>mutex_lock (8 samples, 0.10%)</title><rect x="353.6" y="579.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="356.6" y="590.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="354.5" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="357.5" y="574.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.04%)</title><rect x="354.8" y="579.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="357.8" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.04%)</title><rect x="355.3" y="595.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="358.3" y="606.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="355.4" y="579.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="358.4" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="355.4" y="563.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="358.4" y="574.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.04%)</title><rect x="355.9" y="611.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="358.9" y="622.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.05%)</title><rect x="356.3" y="691.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="359.3" y="702.0"></text>
</g>
<g>
<title>__GI___clock_gettime (9 samples, 0.11%)</title><rect x="356.9" y="691.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="359.9" y="702.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="357.8" y="675.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="360.8" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.05%)</title><rect x="358.2" y="691.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="361.2" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,818 samples, 35.50%)</title><rect x="359.1" y="723.0" width="418.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="362.1" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,806 samples, 35.34%)</title><rect x="359.7" y="707.0" width="417.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="362.7" y="718.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,491 samples, 31.38%)</title><rect x="360.0" y="691.0" width="370.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="363.0" y="702.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,344 samples, 29.53%)</title><rect x="367.3" y="675.0" width="348.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.3" y="686.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,336 samples, 29.42%)</title><rect x="368.5" y="659.0" width="347.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="371.5" y="670.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2,310 samples, 29.10%)</title><rect x="368.8" y="643.0" width="343.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="371.8" y="654.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,007 samples, 25.28%)</title><rect x="368.8" y="627.0" width="298.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="371.8" y="638.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.05%)</title><rect x="370.4" y="611.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="373.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="370.4" y="595.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="373.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="370.4" y="579.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="373.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,983 samples, 24.98%)</title><rect x="371.0" y="611.0" width="294.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="374.0" y="622.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (64 samples, 0.81%)</title><rect x="371.0" y="595.0" width="9.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.0" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="373.3" y="579.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="376.3" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (45 samples, 0.57%)</title><rect x="373.9" y="579.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="376.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.05%)</title><rect x="374.2" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="377.2" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (3 samples, 0.04%)</title><rect x="374.3" y="547.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="377.3" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (25 samples, 0.31%)</title><rect x="374.9" y="563.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="377.9" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.08%)</title><rect x="376.8" y="547.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="379.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.04%)</title><rect x="377.3" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="380.3" y="542.0"></text>
</g>
<g>
<title>java/lang/String.length (6 samples, 0.08%)</title><rect x="377.7" y="547.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="380.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.04%)</title><rect x="378.2" y="531.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="381.2" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.16%)</title><rect x="378.6" y="563.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="381.6" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (12 samples, 0.15%)</title><rect x="378.8" y="547.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="381.8" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,919 samples, 24.17%)</title><rect x="380.5" y="595.0" width="285.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="383.5" y="606.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,916 samples, 24.13%)</title><rect x="381.0" y="579.0" width="284.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="384.0" y="590.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,906 samples, 24.01%)</title><rect x="381.4" y="563.0" width="283.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.4" y="574.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,902 samples, 23.96%)</title><rect x="382.0" y="547.0" width="282.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="385.0" y="558.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>.annobin_send.c (1,866 samples, 23.50%)</title><rect x="383.4" y="531.0" width="277.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="386.4" y="542.0">.annobin_send.c</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (11 samples, 0.14%)</title><rect x="395.3" y="515.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="398.3" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,774 samples, 22.35%)</title><rect x="397.0" y="515.0" width="263.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="400.0" y="526.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (1,774 samples, 22.35%)</title><rect x="397.0" y="499.0" width="263.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="400.0" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,749 samples, 22.03%)</title><rect x="400.8" y="483.0" width="259.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="403.8" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,748 samples, 22.02%)</title><rect x="400.9" y="467.0" width="259.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="403.9" y="478.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="402.2" y="451.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="405.2" y="462.0"></text>
</g>
<g>
<title>import_single_range (5 samples, 0.06%)</title><rect x="402.5" y="451.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="405.5" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (1,729 samples, 21.78%)</title><rect x="403.3" y="451.0" width="257.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="406.3" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (15 samples, 0.19%)</title><rect x="403.4" y="435.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="406.4" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (12 samples, 0.15%)</title><rect x="403.9" y="419.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="406.9" y="430.0"></text>
</g>
<g>
<title>avc_has_perm (6 samples, 0.08%)</title><rect x="404.8" y="403.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="407.8" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,713 samples, 21.58%)</title><rect x="405.7" y="435.0" width="254.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="408.7" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.04%)</title><rect x="406.3" y="419.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="409.3" y="430.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="406.7" y="419.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="409.7" y="430.0"></text>
</g>
<g>
<title>release_sock (9 samples, 0.11%)</title><rect x="407.1" y="419.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="410.1" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.05%)</title><rect x="407.3" y="403.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="410.3" y="414.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.05%)</title><rect x="407.9" y="403.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="410.9" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,694 samples, 21.34%)</title><rect x="408.5" y="419.0" width="251.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="411.5" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (11 samples, 0.14%)</title><rect x="409.8" y="403.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="412.8" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (7 samples, 0.09%)</title><rect x="410.3" y="387.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="413.3" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1,581 samples, 19.91%)</title><rect x="411.5" y="403.0" width="234.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="414.5" y="414.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (1,581 samples, 19.91%)</title><rect x="411.5" y="387.0" width="234.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="414.5" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (1,542 samples, 19.42%)</title><rect x="413.1" y="371.0" width="229.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="416.1" y="382.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (1,496 samples, 18.84%)</title><rect x="414.7" y="355.0" width="222.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="417.7" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (15 samples, 0.19%)</title><rect x="415.5" y="339.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="418.5" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (10 samples, 0.13%)</title><rect x="416.2" y="323.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="419.2" y="334.0"></text>
</g>
<g>
<title>ip_local_out (227 samples, 2.86%)</title><rect x="417.7" y="339.0" width="33.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="420.7" y="350.0">ip..</text>
</g>
<g>
<title>__ip_local_out (227 samples, 2.86%)</title><rect x="417.7" y="323.0" width="33.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="420.7" y="334.0">__..</text>
</g>
<g>
<title>ip_send_check (10 samples, 0.13%)</title><rect x="417.8" y="307.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="420.8" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (216 samples, 2.72%)</title><rect x="419.3" y="307.0" width="32.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="422.3" y="318.0">nf..</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (66 samples, 0.83%)</title><rect x="420.2" y="291.0" width="9.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="423.2" y="302.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (8 samples, 0.10%)</title><rect x="430.0" y="291.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="433.0" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (26 samples, 0.33%)</title><rect x="431.2" y="291.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="434.2" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (22 samples, 0.28%)</title><rect x="431.8" y="275.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="434.8" y="286.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (9 samples, 0.11%)</title><rect x="435.1" y="291.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="438.1" y="302.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (3 samples, 0.04%)</title><rect x="436.4" y="291.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="439.4" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (3 samples, 0.04%)</title><rect x="436.9" y="291.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="439.9" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (5 samples, 0.06%)</title><rect x="437.3" y="291.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="440.3" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (64 samples, 0.81%)</title><rect x="438.1" y="291.0" width="9.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="441.1" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (24 samples, 0.30%)</title><rect x="439.7" y="275.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="442.7" y="286.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (4 samples, 0.05%)</title><rect x="443.4" y="275.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="446.4" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (17 samples, 0.21%)</title><rect x="444.0" y="275.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="447.0" y="286.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (3 samples, 0.04%)</title><rect x="446.1" y="259.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="449.1" y="270.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (7 samples, 0.09%)</title><rect x="446.5" y="275.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="449.5" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (25 samples, 0.31%)</title><rect x="447.6" y="291.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="450.6" y="302.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (11 samples, 0.14%)</title><rect x="449.2" y="275.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="452.2" y="286.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (2 samples, 0.03%)</title><rect x="451.0" y="275.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="454.0" y="286.0"></text>
</g>
<g>
<title>ip_output (1,249 samples, 15.73%)</title><rect x="451.4" y="339.0" width="185.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="454.4" y="350.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (1,164 samples, 14.66%)</title><rect x="452.9" y="323.0" width="173.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="455.9" y="334.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (76 samples, 0.96%)</title><rect x="455.6" y="307.0" width="11.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="458.6" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (49 samples, 0.62%)</title><rect x="458.6" y="291.0" width="7.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="461.6" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (46 samples, 0.58%)</title><rect x="459.0" y="275.0" width="6.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="462.0" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (8 samples, 0.10%)</title><rect x="459.6" y="259.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="462.6" y="270.0"></text>
</g>
<g>
<title>netif_rx (18 samples, 0.23%)</title><rect x="460.8" y="259.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="463.8" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (17 samples, 0.21%)</title><rect x="461.0" y="243.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="464.0" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (10 samples, 0.13%)</title><rect x="462.0" y="227.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="465.0" y="238.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.03%)</title><rect x="463.5" y="259.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="466.5" y="270.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (3 samples, 0.04%)</title><rect x="463.8" y="259.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="466.8" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (11 samples, 0.14%)</title><rect x="464.2" y="259.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="467.2" y="270.0"></text>
</g>
<g>
<title>netdev_pick_tx (3 samples, 0.04%)</title><rect x="465.9" y="291.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="468.9" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.05%)</title><rect x="466.3" y="291.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="469.3" y="302.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="466.6" y="275.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="469.6" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1,070 samples, 13.48%)</title><rect x="466.9" y="307.0" width="159.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="469.9" y="318.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.0 (1,070 samples, 13.48%)</title><rect x="466.9" y="291.0" width="159.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="469.9" y="302.0">do_softirq.part.0</text>
</g>
<g>
<title>do_softirq_own_stack (1,061 samples, 13.36%)</title><rect x="468.2" y="275.0" width="157.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="471.2" y="286.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (1,061 samples, 13.36%)</title><rect x="468.2" y="259.0" width="157.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="471.2" y="270.0">__softirqentry_text_..</text>
</g>
<g>
<title>net_rx_action (1,046 samples, 13.18%)</title><rect x="470.5" y="243.0" width="155.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="473.5" y="254.0">net_rx_action</text>
</g>
<g>
<title>__usecs_to_jiffies (3 samples, 0.04%)</title><rect x="471.5" y="227.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="474.5" y="238.0"></text>
</g>
<g>
<title>process_backlog (1,036 samples, 13.05%)</title><rect x="472.0" y="227.0" width="153.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="475.0" y="238.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb_one_core (1,015 samples, 12.78%)</title><rect x="475.1" y="211.0" width="150.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="478.1" y="222.0">__netif_receive_skb..</text>
</g>
<g>
<title>__netif_receive_skb_core (9 samples, 0.11%)</title><rect x="475.2" y="195.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="478.2" y="206.0"></text>
</g>
<g>
<title>ip_rcv (1,005 samples, 12.66%)</title><rect x="476.6" y="195.0" width="149.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="479.6" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (805 samples, 10.14%)</title><rect x="477.6" y="179.0" width="119.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="480.6" y="190.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (663 samples, 8.35%)</title><rect x="479.5" y="163.0" width="98.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="482.5" y="174.0">ip_local_del..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (659 samples, 8.30%)</title><rect x="480.1" y="147.0" width="98.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="483.1" y="158.0">ip_protocol..</text>
</g>
<g>
<title>raw_local_deliver (6 samples, 0.08%)</title><rect x="481.2" y="131.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="484.2" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (646 samples, 8.14%)</title><rect x="482.1" y="131.0" width="96.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="485.1" y="142.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (30 samples, 0.38%)</title><rect x="485.3" y="115.0" width="4.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="488.3" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (6 samples, 0.08%)</title><rect x="488.9" y="99.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="491.9" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="489.8" y="115.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="492.8" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (6 samples, 0.08%)</title><rect x="490.1" y="115.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="493.1" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (6 samples, 0.08%)</title><rect x="490.1" y="99.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="493.1" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (6 samples, 0.08%)</title><rect x="490.1" y="83.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="493.1" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (584 samples, 7.36%)</title><rect x="491.1" y="115.0" width="86.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="494.1" y="126.0">tcp_v4_do_..</text>
</g>
<g>
<title>ipv4_dst_check (8 samples, 0.10%)</title><rect x="491.1" y="99.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="494.1" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (576 samples, 7.26%)</title><rect x="492.3" y="99.0" width="85.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="495.3" y="110.0">tcp_rcv_es..</text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.08%)</title><rect x="493.8" y="83.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="496.8" y="94.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.08%)</title><rect x="493.8" y="67.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="496.8" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.05%)</title><rect x="494.1" y="51.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="497.1" y="62.0"></text>
</g>
<g>
<title>tcp_ack (141 samples, 1.78%)</title><rect x="494.7" y="83.0" width="21.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="497.7" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (41 samples, 0.52%)</title><rect x="501.2" y="67.0" width="6.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="504.2" y="78.0"></text>
</g>
<g>
<title>__slab_free (16 samples, 0.20%)</title><rect x="501.5" y="51.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="504.5" y="62.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.05%)</title><rect x="503.9" y="51.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="506.9" y="62.0"></text>
</g>
<g>
<title>skb_release_data (18 samples, 0.23%)</title><rect x="504.7" y="51.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="507.7" y="62.0"></text>
</g>
<g>
<title>__list_del_entry_valid (3 samples, 0.04%)</title><rect x="507.3" y="67.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="510.3" y="78.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.04%)</title><rect x="507.9" y="67.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="510.9" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (6 samples, 0.08%)</title><rect x="508.4" y="67.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="511.4" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (12 samples, 0.15%)</title><rect x="509.3" y="67.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="512.3" y="78.0"></text>
</g>
<g>
<title>__slab_free (9 samples, 0.11%)</title><rect x="509.7" y="51.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="512.7" y="62.0"></text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.03%)</title><rect x="511.0" y="67.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="514.0" y="78.0"></text>
</g>
<g>
<title>rb_erase (3 samples, 0.04%)</title><rect x="511.3" y="67.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="514.3" y="78.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.03%)</title><rect x="511.8" y="67.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="514.8" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (4 samples, 0.05%)</title><rect x="512.1" y="67.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="515.1" y="78.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="512.2" y="51.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="515.2" y="62.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.03%)</title><rect x="512.8" y="67.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="515.8" y="78.0"></text>
</g>
<g>
<title>tcp_rack_advance (3 samples, 0.04%)</title><rect x="513.1" y="67.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="516.1" y="78.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (7 samples, 0.09%)</title><rect x="513.6" y="67.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="516.6" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="514.8" y="67.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="517.8" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (4 samples, 0.05%)</title><rect x="515.1" y="67.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="518.1" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (6 samples, 0.08%)</title><rect x="515.7" y="83.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="518.7" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (398 samples, 5.01%)</title><rect x="516.5" y="83.0" width="59.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="519.5" y="94.0">tcp_da..</text>
</g>
<g>
<title>dst_release (4 samples, 0.05%)</title><rect x="516.8" y="67.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="519.8" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (384 samples, 4.84%)</title><rect x="517.4" y="67.0" width="57.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="520.4" y="78.0">sock_d..</text>
</g>
<g>
<title>__wake_up_common_lock (367 samples, 4.62%)</title><rect x="520.0" y="51.0" width="54.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="523.0" y="62.0">__wak..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (367 samples, 4.62%)</title><rect x="520.0" y="35.0" width="54.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="523.0" y="46.0">_raw_..</text>
</g>
<g>
<title>tcp_event_data_recv (6 samples, 0.08%)</title><rect x="574.5" y="67.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="577.5" y="78.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="575.4" y="67.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="578.4" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (14 samples, 0.18%)</title><rect x="575.7" y="83.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="578.7" y="94.0"></text>
</g>
<g>
<title>ktime_get (8 samples, 0.10%)</title><rect x="576.6" y="67.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="579.6" y="78.0"></text>
</g>
<g>
<title>read_tsc (8 samples, 0.10%)</title><rect x="576.6" y="51.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="579.6" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (129 samples, 1.62%)</title><rect x="578.1" y="163.0" width="19.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="581.1" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (89 samples, 1.12%)</title><rect x="579.7" y="147.0" width="13.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="582.7" y="158.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (15 samples, 0.19%)</title><rect x="589.1" y="131.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="592.1" y="142.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (11 samples, 0.14%)</title><rect x="591.3" y="131.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="594.3" y="142.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (3 samples, 0.04%)</title><rect x="592.9" y="147.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="595.9" y="158.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.05%)</title><rect x="593.4" y="147.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="596.4" y="158.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (4 samples, 0.05%)</title><rect x="594.0" y="147.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="597.0" y="158.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (4 samples, 0.05%)</title><rect x="594.6" y="147.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="597.6" y="158.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (10 samples, 0.13%)</title><rect x="595.2" y="147.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="598.2" y="158.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (9 samples, 0.11%)</title><rect x="595.3" y="131.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="598.3" y="142.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (2 samples, 0.03%)</title><rect x="596.8" y="147.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="599.8" y="158.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (16 samples, 0.20%)</title><rect x="597.3" y="179.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="600.3" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish (7 samples, 0.09%)</title><rect x="599.6" y="179.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="602.6" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (4 samples, 0.05%)</title><rect x="600.1" y="163.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="603.1" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (170 samples, 2.14%)</title><rect x="600.7" y="179.0" width="25.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="603.7" y="190.0">n..</text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (4 samples, 0.05%)</title><rect x="601.4" y="163.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="604.4" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (127 samples, 1.60%)</title><rect x="602.0" y="163.0" width="18.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="605.0" y="174.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.05%)</title><rect x="620.9" y="163.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="623.9" y="174.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (2 samples, 0.03%)</title><rect x="621.5" y="163.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="624.5" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (5 samples, 0.06%)</title><rect x="621.8" y="163.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="624.8" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (5 samples, 0.06%)</title><rect x="622.5" y="163.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="625.5" y="174.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (6 samples, 0.08%)</title><rect x="623.3" y="163.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="626.3" y="174.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (12 samples, 0.15%)</title><rect x="624.2" y="163.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="627.2" y="174.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (4 samples, 0.05%)</title><rect x="625.3" y="147.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="628.3" y="158.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.04%)</title><rect x="625.9" y="323.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="628.9" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (72 samples, 0.91%)</title><rect x="626.4" y="323.0" width="10.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="629.4" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (26 samples, 0.33%)</title><rect x="626.5" y="307.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="629.5" y="318.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (5 samples, 0.06%)</title><rect x="630.5" y="307.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="633.5" y="318.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (11 samples, 0.14%)</title><rect x="631.3" y="307.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="634.3" y="318.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (10 samples, 0.13%)</title><rect x="631.4" y="291.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="634.4" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (12 samples, 0.15%)</title><rect x="632.9" y="307.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="635.9" y="318.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (2 samples, 0.03%)</title><rect x="634.3" y="291.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="637.3" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute (11 samples, 0.14%)</title><rect x="634.7" y="307.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="637.7" y="318.0"></text>
</g>
<g>
<title>selinux_peerlbl_enabled (2 samples, 0.03%)</title><rect x="636.0" y="291.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="639.0" y="302.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (5 samples, 0.06%)</title><rect x="636.3" y="307.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="639.3" y="318.0"></text>
</g>
<g>
<title>__skb_clone (9 samples, 0.11%)</title><rect x="637.1" y="355.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="640.1" y="366.0"></text>
</g>
<g>
<title>__copy_skb_header (4 samples, 0.05%)</title><rect x="637.8" y="339.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="640.8" y="350.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (4 samples, 0.05%)</title><rect x="638.6" y="355.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="641.6" y="366.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (7 samples, 0.09%)</title><rect x="639.2" y="355.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="642.2" y="366.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.04%)</title><rect x="640.2" y="355.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="643.2" y="366.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.05%)</title><rect x="640.7" y="355.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="643.7" y="366.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.03%)</title><rect x="641.2" y="355.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="644.2" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (3 samples, 0.04%)</title><rect x="641.5" y="355.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="644.5" y="366.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="642.0" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="645.0" y="366.0"></text>
</g>
<g>
<title>ktime_get (12 samples, 0.15%)</title><rect x="642.3" y="371.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="645.3" y="382.0"></text>
</g>
<g>
<title>read_tsc (10 samples, 0.13%)</title><rect x="642.6" y="355.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="645.6" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (10 samples, 0.13%)</title><rect x="644.1" y="371.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="647.1" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.05%)</title><rect x="644.7" y="355.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="647.7" y="366.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.05%)</title><rect x="644.7" y="339.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="647.7" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="645.0" y="323.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="648.0" y="334.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="645.3" y="355.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="648.3" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (5 samples, 0.06%)</title><rect x="645.6" y="371.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="648.6" y="382.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="646.0" y="355.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="649.0" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (10 samples, 0.13%)</title><rect x="646.4" y="403.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="649.4" y="414.0"></text>
</g>
<g>
<title>copyin (8 samples, 0.10%)</title><rect x="646.4" y="387.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="649.4" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.10%)</title><rect x="646.4" y="371.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="649.4" y="382.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.03%)</title><rect x="647.6" y="387.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="650.6" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (60 samples, 0.76%)</title><rect x="647.9" y="403.0" width="9.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="650.9" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (53 samples, 0.67%)</title><rect x="648.8" y="387.0" width="7.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="651.8" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (18 samples, 0.23%)</title><rect x="650.5" y="371.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="653.5" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (18 samples, 0.23%)</title><rect x="650.5" y="355.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="653.5" y="366.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="652.2" y="339.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="655.2" y="350.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="652.5" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="655.5" y="350.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="652.8" y="339.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="655.8" y="350.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (18 samples, 0.23%)</title><rect x="653.1" y="371.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="656.1" y="382.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="655.4" y="355.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="658.4" y="366.0"></text>
</g>
<g>
<title>ksize (6 samples, 0.08%)</title><rect x="655.8" y="371.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="658.8" y="382.0"></text>
</g>
<g>
<title>tcp_send_mss (17 samples, 0.21%)</title><rect x="657.4" y="403.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="660.4" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (16 samples, 0.20%)</title><rect x="657.6" y="387.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="660.6" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (9 samples, 0.11%)</title><rect x="658.5" y="371.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="661.5" y="382.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.04%)</title><rect x="660.3" y="451.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="663.3" y="462.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="660.4" y="435.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="663.4" y="446.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.28%)</title><rect x="660.7" y="531.0" width="3.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="663.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.28%)</title><rect x="660.7" y="515.0" width="3.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="663.7" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (20 samples, 0.25%)</title><rect x="660.9" y="499.0" width="2.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="663.9" y="510.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="661.0" y="483.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="664.0" y="494.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (4 samples, 0.05%)</title><rect x="661.3" y="483.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="664.3" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (13 samples, 0.16%)</title><rect x="661.9" y="483.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="664.9" y="494.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.04%)</title><rect x="662.1" y="467.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="665.1" y="478.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.06%)</title><rect x="662.5" y="467.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="665.5" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (4 samples, 0.05%)</title><rect x="663.2" y="467.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="666.2" y="478.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.06%)</title><rect x="664.0" y="531.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="667.0" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.09%)</title><rect x="664.7" y="563.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="667.7" y="574.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.09%)</title><rect x="664.7" y="547.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="667.7" y="558.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.05%)</title><rect x="665.2" y="531.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="668.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.11%)</title><rect x="665.8" y="611.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="668.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.10%)</title><rect x="665.9" y="595.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="665.9" y="579.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.04%)</title><rect x="665.9" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="668.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.06%)</title><rect x="666.4" y="579.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="669.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (16 samples, 0.20%)</title><rect x="667.1" y="627.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="670.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="667.6" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="670.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.03%)</title><rect x="667.6" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="670.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (3 samples, 0.04%)</title><rect x="667.9" y="611.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.9" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="668.0" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="671.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (7 samples, 0.09%)</title><rect x="668.4" y="611.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="671.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.09%)</title><rect x="668.4" y="595.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="671.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.09%)</title><rect x="668.4" y="579.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (7 samples, 0.09%)</title><rect x="668.4" y="563.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (287 samples, 3.62%)</title><rect x="669.5" y="627.0" width="42.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="672.5" y="638.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (10 samples, 0.13%)</title><rect x="669.8" y="611.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="672.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.03%)</title><rect x="670.4" y="595.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="673.4" y="606.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.05%)</title><rect x="670.7" y="595.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="673.7" y="606.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="670.8" y="579.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="673.8" y="590.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="671.0" y="563.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="674.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.10%)</title><rect x="671.3" y="611.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.3" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.09%)</title><rect x="671.4" y="595.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="674.4" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="671.4" y="579.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="674.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="671.4" y="563.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="674.4" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="672.2" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="675.2" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="672.2" y="531.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="675.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="672.2" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="675.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (267 samples, 3.36%)</title><rect x="672.5" y="611.0" width="39.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="675.5" y="622.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (267 samples, 3.36%)</title><rect x="672.5" y="595.0" width="39.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="675.5" y="606.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (264 samples, 3.33%)</title><rect x="672.5" y="579.0" width="39.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="675.5" y="590.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (264 samples, 3.33%)</title><rect x="672.5" y="563.0" width="39.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="675.5" y="574.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (264 samples, 3.33%)</title><rect x="672.5" y="547.0" width="39.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="675.5" y="558.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (6 samples, 0.08%)</title><rect x="675.6" y="531.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="678.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (6 samples, 0.08%)</title><rect x="675.6" y="515.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="678.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (81 samples, 1.02%)</title><rect x="676.5" y="531.0" width="12.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (11 samples, 0.14%)</title><rect x="688.5" y="531.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.09%)</title><rect x="689.1" y="515.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="692.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.06%)</title><rect x="689.4" y="499.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="692.4" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.05%)</title><rect x="689.6" y="483.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="692.6" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="689.6" y="467.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="692.6" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="689.8" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.8" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="689.8" y="451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="692.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (141 samples, 1.78%)</title><rect x="690.1" y="531.0" width="21.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="693.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (131 samples, 1.65%)</title><rect x="691.6" y="515.0" width="19.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="694.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (93 samples, 1.17%)</title><rect x="697.3" y="499.0" width="13.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.3" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.04%)</title><rect x="698.0" y="483.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="701.0" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (9 samples, 0.11%)</title><rect x="698.5" y="483.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="701.5" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (45 samples, 0.57%)</title><rect x="699.8" y="483.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="702.8" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (27 samples, 0.34%)</title><rect x="702.5" y="467.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.5" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (5 samples, 0.06%)</title><rect x="705.0" y="451.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="708.0" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (5 samples, 0.06%)</title><rect x="705.8" y="451.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="708.8" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (31 samples, 0.39%)</title><rect x="706.5" y="483.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="709.5" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (26 samples, 0.33%)</title><rect x="707.1" y="467.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="710.1" y="478.0"></text>
</g>
<g>
<title>vectorizedMismatch (22 samples, 0.28%)</title><rect x="707.7" y="451.0" width="3.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="710.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (4 samples, 0.05%)</title><rect x="711.1" y="531.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (3 samples, 0.04%)</title><rect x="711.7" y="579.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.&lt;init&gt; (3 samples, 0.04%)</title><rect x="711.7" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="714.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (11 samples, 0.14%)</title><rect x="712.1" y="643.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="715.1" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (11 samples, 0.14%)</title><rect x="712.1" y="627.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="715.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.06%)</title><rect x="712.1" y="611.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="715.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.05%)</title><rect x="712.3" y="595.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.coder (4 samples, 0.05%)</title><rect x="712.3" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="715.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (6 samples, 0.08%)</title><rect x="712.9" y="611.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="715.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.05%)</title><rect x="713.2" y="595.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="716.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.03%)</title><rect x="713.8" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (11 samples, 0.14%)</title><rect x="714.1" y="643.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="717.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.14%)</title><rect x="714.1" y="627.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="717.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.13%)</title><rect x="714.2" y="611.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="717.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.08%)</title><rect x="714.4" y="595.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="717.4" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="715.3" y="595.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="718.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (40 samples, 0.50%)</title><rect x="715.7" y="675.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="718.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.03%)</title><rect x="716.9" y="659.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="716.9" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="716.9" y="627.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="716.9" y="611.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.9" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.26%)</title><rect x="717.2" y="659.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.2" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.25%)</title><rect x="717.3" y="643.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="720.3" y="654.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (3 samples, 0.04%)</title><rect x="719.9" y="627.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="722.9" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (9 samples, 0.11%)</title><rect x="720.3" y="659.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (9 samples, 0.11%)</title><rect x="721.7" y="675.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="724.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (7 samples, 0.09%)</title><rect x="721.8" y="659.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.8" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (7 samples, 0.09%)</title><rect x="721.8" y="643.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.8" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.04%)</title><rect x="722.1" y="627.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.1" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.04%)</title><rect x="722.1" y="611.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.1" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (2 samples, 0.03%)</title><rect x="722.3" y="595.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="725.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="722.5" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="725.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="722.5" y="611.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (27 samples, 0.34%)</title><rect x="723.0" y="675.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="726.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (19 samples, 0.24%)</title><rect x="723.9" y="659.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="726.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (19 samples, 0.24%)</title><rect x="723.9" y="643.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="726.9" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="726.0" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="729.0" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="726.0" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="729.0" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.03%)</title><rect x="726.0" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="729.0" y="606.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="726.3" y="627.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="729.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="726.7" y="659.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="729.7" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.26%)</title><rect x="727.2" y="675.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="730.2" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.26%)</title><rect x="727.2" y="659.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="730.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="729.7" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="729.7" y="627.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.04%)</title><rect x="729.7" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.7" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (313 samples, 3.94%)</title><rect x="730.3" y="691.0" width="46.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.3" y="702.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (313 samples, 3.94%)</title><rect x="730.3" y="675.0" width="46.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="733.3" y="686.0">one/..</text>
</g>
<g>
<title>[unknown] (39 samples, 0.49%)</title><rect x="731.9" y="659.0" width="5.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="734.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.49%)</title><rect x="731.9" y="643.0" width="5.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="734.9" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (25 samples, 0.31%)</title><rect x="731.9" y="627.0" width="3.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="734.9" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="732.5" y="611.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="735.5" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.04%)</title><rect x="732.8" y="611.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="735.8" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (12 samples, 0.15%)</title><rect x="733.5" y="611.0" width="1.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="736.5" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="734.4" y="595.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="737.4" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (4 samples, 0.05%)</title><rect x="734.7" y="595.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="737.7" y="606.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="735.3" y="611.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="738.3" y="622.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (8 samples, 0.10%)</title><rect x="735.6" y="627.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="738.6" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.08%)</title><rect x="736.8" y="627.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="739.8" y="638.0"></text>
</g>
<g>
<title>__libc_recv (260 samples, 3.27%)</title><rect x="737.7" y="659.0" width="38.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="740.7" y="670.0">__l..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="748.9" y="643.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="751.9" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (183 samples, 2.31%)</title><rect x="749.2" y="643.0" width="27.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="752.2" y="654.0">e..</text>
</g>
<g>
<title>do_syscall_64 (183 samples, 2.31%)</title><rect x="749.2" y="627.0" width="27.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="752.2" y="638.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (150 samples, 1.89%)</title><rect x="754.1" y="611.0" width="22.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="757.1" y="622.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (150 samples, 1.89%)</title><rect x="754.1" y="595.0" width="22.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="757.1" y="606.0">_..</text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="754.5" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="757.5" y="590.0"></text>
</g>
<g>
<title>import_single_range (5 samples, 0.06%)</title><rect x="754.8" y="579.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="757.8" y="590.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.03%)</title><rect x="755.2" y="563.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="758.2" y="574.0"></text>
</g>
<g>
<title>inet_recvmsg (110 samples, 1.39%)</title><rect x="755.5" y="579.0" width="16.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="758.5" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (109 samples, 1.37%)</title><rect x="755.7" y="563.0" width="16.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="758.7" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (13 samples, 0.16%)</title><rect x="759.0" y="547.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="762.0" y="558.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.13%)</title><rect x="759.1" y="531.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="762.1" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (10 samples, 0.13%)</title><rect x="759.1" y="515.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="762.1" y="526.0"></text>
</g>
<g>
<title>sock_rfree (9 samples, 0.11%)</title><rect x="759.3" y="499.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="762.3" y="510.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="760.6" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="763.6" y="542.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="760.9" y="547.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="763.9" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (13 samples, 0.16%)</title><rect x="761.2" y="547.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="764.2" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (11 samples, 0.14%)</title><rect x="761.5" y="531.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="764.5" y="542.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.08%)</title><rect x="763.1" y="547.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="766.1" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.04%)</title><rect x="763.6" y="531.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="766.6" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (35 samples, 0.44%)</title><rect x="764.0" y="547.0" width="5.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="767.0" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (34 samples, 0.43%)</title><rect x="764.2" y="531.0" width="5.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="767.2" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (16 samples, 0.20%)</title><rect x="764.8" y="515.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="767.8" y="526.0"></text>
</g>
<g>
<title>copyout (15 samples, 0.19%)</title><rect x="764.9" y="499.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="767.9" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (12 samples, 0.15%)</title><rect x="765.4" y="483.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="768.4" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (14 samples, 0.18%)</title><rect x="767.1" y="515.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="770.1" y="526.0"></text>
</g>
<g>
<title>__check_object_size (13 samples, 0.16%)</title><rect x="767.3" y="499.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="770.3" y="510.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.03%)</title><rect x="768.0" y="483.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="771.0" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.08%)</title><rect x="768.3" y="483.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="771.3" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (5 samples, 0.06%)</title><rect x="769.2" y="547.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="772.2" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.04%)</title><rect x="769.5" y="531.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="772.5" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (13 samples, 0.16%)</title><rect x="770.0" y="547.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="773.0" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (12 samples, 0.15%)</title><rect x="770.1" y="531.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="773.1" y="542.0"></text>
</g>
<g>
<title>ktime_get (10 samples, 0.13%)</title><rect x="770.4" y="515.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="773.4" y="526.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.06%)</title><rect x="771.2" y="499.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="774.2" y="510.0"></text>
</g>
<g>
<title>sock_recvmsg (15 samples, 0.19%)</title><rect x="771.9" y="579.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="774.9" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (15 samples, 0.19%)</title><rect x="771.9" y="563.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="774.9" y="574.0"></text>
</g>
<g>
<title>sock_has_perm (15 samples, 0.19%)</title><rect x="771.9" y="547.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="774.9" y="558.0"></text>
</g>
<g>
<title>avc_has_perm (6 samples, 0.08%)</title><rect x="773.2" y="531.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="776.2" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (15 samples, 0.19%)</title><rect x="774.1" y="579.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="777.1" y="590.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.19%)</title><rect x="774.1" y="563.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="777.1" y="574.0"></text>
</g>
<g>
<title>__fget (13 samples, 0.16%)</title><rect x="774.4" y="547.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="777.4" y="558.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.04%)</title><rect x="776.4" y="659.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="779.4" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (8 samples, 0.10%)</title><rect x="776.8" y="707.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="779.8" y="718.0"></text>
</g>
<g>
<title>gettimeofday (8 samples, 0.10%)</title><rect x="776.8" y="691.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="779.8" y="702.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.06%)</title><rect x="777.2" y="675.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="780.2" y="686.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25128] (1,960 samples, 24.69%)</title><rect x="778.0" y="755.0" width="291.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="781.0" y="766.0">[NIO Selector #3 tid=25128]</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.05%)</title><rect x="778.0" y="739.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="781.0" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.03%)</title><rect x="778.0" y="723.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="781.0" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="778.0" y="707.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="781.0" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="778.0" y="691.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="781.0" y="702.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="778.3" y="723.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="781.3" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="778.3" y="707.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="781.3" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="778.3" y="691.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="781.3" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.04%)</title><rect x="778.9" y="739.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="781.9" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,951 samples, 24.57%)</title><rect x="779.3" y="739.0" width="290.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.3" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.05%)</title><rect x="779.5" y="723.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="782.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.05%)</title><rect x="779.5" y="707.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="782.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (2 samples, 0.03%)</title><rect x="780.1" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (279 samples, 3.51%)</title><rect x="780.4" y="723.0" width="41.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="783.4" y="734.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.03%)</title><rect x="780.5" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="783.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.03%)</title><rect x="780.5" y="691.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="783.5" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (276 samples, 3.48%)</title><rect x="780.8" y="707.0" width="41.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="783.8" y="718.0">one..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (250 samples, 3.15%)</title><rect x="781.9" y="691.0" width="37.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="784.9" y="702.0">.an..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (89 samples, 1.12%)</title><rect x="805.8" y="675.0" width="13.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="808.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (89 samples, 1.12%)</title><rect x="805.8" y="659.0" width="13.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="808.8" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (71 samples, 0.89%)</title><rect x="808.5" y="643.0" width="10.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="811.5" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (66 samples, 0.83%)</title><rect x="809.2" y="627.0" width="9.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="812.2" y="638.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.10%)</title><rect x="809.4" y="611.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="812.4" y="622.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.09%)</title><rect x="809.5" y="595.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="812.5" y="606.0"></text>
</g>
<g>
<title>ep_poll (50 samples, 0.63%)</title><rect x="810.5" y="611.0" width="7.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="813.5" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (33 samples, 0.42%)</title><rect x="812.0" y="595.0" width="4.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="815.0" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (19 samples, 0.24%)</title><rect x="813.4" y="579.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="816.4" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (17 samples, 0.21%)</title><rect x="813.7" y="563.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="816.7" y="574.0"></text>
</g>
<g>
<title>sock_poll (16 samples, 0.20%)</title><rect x="813.8" y="547.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="816.8" y="558.0"></text>
</g>
<g>
<title>tcp_poll (10 samples, 0.13%)</title><rect x="814.7" y="531.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="817.7" y="542.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.04%)</title><rect x="816.2" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="819.2" y="590.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="816.6" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="819.6" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.09%)</title><rect x="816.9" y="595.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="819.9" y="606.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.09%)</title><rect x="816.9" y="579.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="819.9" y="590.0"></text>
</g>
<g>
<title>fput_many (7 samples, 0.09%)</title><rect x="818.0" y="611.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="821.0" y="622.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.04%)</title><rect x="819.0" y="691.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="822.0" y="702.0"></text>
</g>
<g>
<title>__GI___clock_gettime (5 samples, 0.06%)</title><rect x="819.6" y="691.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="822.6" y="702.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (9 samples, 0.11%)</title><rect x="820.3" y="691.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="823.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,665 samples, 20.97%)</title><rect x="821.8" y="723.0" width="247.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="824.8" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,660 samples, 20.91%)</title><rect x="822.3" y="707.0" width="246.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="825.3" y="718.0">one/nio/http/HttpSession.processR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,469 samples, 18.50%)</title><rect x="822.7" y="691.0" width="218.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="825.7" y="702.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,380 samples, 17.38%)</title><rect x="827.9" y="675.0" width="205.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.9" y="686.0">one/nio/http/HttpSession.ha..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,375 samples, 17.32%)</title><rect x="828.7" y="659.0" width="204.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="831.7" y="670.0">one/nio/http/HttpServer.han..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,359 samples, 17.12%)</title><rect x="829.1" y="643.0" width="202.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="832.1" y="654.0">RequestHandler1_entity.han..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,171 samples, 14.75%)</title><rect x="829.3" y="627.0" width="174.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="832.3" y="638.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.06%)</title><rect x="830.6" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="833.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.06%)</title><rect x="830.6" y="595.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="833.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.06%)</title><rect x="830.6" y="579.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="833.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.04%)</title><rect x="830.9" y="563.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="833.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,152 samples, 14.51%)</title><rect x="831.3" y="611.0" width="171.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="834.3" y="622.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (34 samples, 0.43%)</title><rect x="831.3" y="595.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="834.3" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="832.8" y="579.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="835.8" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (21 samples, 0.26%)</title><rect x="833.3" y="579.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="836.3" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.03%)</title><rect x="833.7" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="836.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (6 samples, 0.08%)</title><rect x="834.2" y="563.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="837.2" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="834.5" y="547.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="837.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="834.8" y="547.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="837.8" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.11%)</title><rect x="835.1" y="563.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="838.1" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.11%)</title><rect x="835.1" y="547.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="838.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="836.1" y="531.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="839.1" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,118 samples, 14.08%)</title><rect x="836.4" y="595.0" width="166.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="839.4" y="606.0">one/nio/net/Session.w..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,118 samples, 14.08%)</title><rect x="836.4" y="579.0" width="166.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="839.4" y="590.0">one/nio/net/Session.w..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,114 samples, 14.03%)</title><rect x="836.7" y="563.0" width="165.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.7" y="574.0">one/nio/net/Session$A..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,112 samples, 14.01%)</title><rect x="837.0" y="547.0" width="165.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="840.0" y="558.0">one/nio/net/NativeSoc..</text>
</g>
<g>
<title>.annobin_send.c (1,085 samples, 13.67%)</title><rect x="837.1" y="531.0" width="161.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="840.1" y="542.0">.annobin_send.c</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.05%)</title><rect x="843.1" y="515.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="846.1" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,040 samples, 13.10%)</title><rect x="843.8" y="515.0" width="154.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="846.8" y="526.0">entry_SYSCALL_64_aft..</text>
</g>
<g>
<title>do_syscall_64 (1,040 samples, 13.10%)</title><rect x="843.8" y="499.0" width="154.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="846.8" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,031 samples, 12.99%)</title><rect x="845.2" y="483.0" width="153.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="848.2" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,027 samples, 12.94%)</title><rect x="845.8" y="467.0" width="152.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="848.8" y="478.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (8 samples, 0.10%)</title><rect x="846.4" y="451.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="849.4" y="462.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="847.5" y="451.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="850.5" y="462.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.03%)</title><rect x="847.5" y="435.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="850.5" y="446.0"></text>
</g>
<g>
<title>sock_sendmsg (1,009 samples, 12.71%)</title><rect x="847.8" y="451.0" width="150.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="850.8" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (7 samples, 0.09%)</title><rect x="847.8" y="435.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="850.8" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (5 samples, 0.06%)</title><rect x="848.1" y="419.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="851.1" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,002 samples, 12.62%)</title><rect x="848.9" y="435.0" width="148.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="851.9" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="849.3" y="419.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="852.3" y="430.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.08%)</title><rect x="849.6" y="419.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="852.6" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="850.1" y="403.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="853.1" y="414.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.06%)</title><rect x="850.5" y="419.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="853.5" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="850.5" y="403.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="853.5" y="414.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.04%)</title><rect x="850.8" y="403.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="853.8" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (986 samples, 12.42%)</title><rect x="851.3" y="419.0" width="146.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="854.3" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (5 samples, 0.06%)</title><rect x="851.9" y="403.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="854.9" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="852.3" y="387.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="855.3" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (905 samples, 11.40%)</title><rect x="852.6" y="403.0" width="134.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="855.6" y="414.0">__tcp_push_pendin..</text>
</g>
<g>
<title>tcp_write_xmit (905 samples, 11.40%)</title><rect x="852.6" y="387.0" width="134.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="855.6" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (880 samples, 11.08%)</title><rect x="854.2" y="371.0" width="130.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="857.2" y="382.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (850 samples, 10.71%)</title><rect x="855.3" y="355.0" width="126.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="858.3" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (5 samples, 0.06%)</title><rect x="855.6" y="339.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="858.6" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.04%)</title><rect x="855.9" y="323.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="858.9" y="334.0"></text>
</g>
<g>
<title>ip_local_out (152 samples, 1.91%)</title><rect x="856.3" y="339.0" width="22.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="859.3" y="350.0">i..</text>
</g>
<g>
<title>__ip_local_out (151 samples, 1.90%)</title><rect x="856.5" y="323.0" width="22.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="859.5" y="334.0">_..</text>
</g>
<g>
<title>ip_send_check (8 samples, 0.10%)</title><rect x="856.5" y="307.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="859.5" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (143 samples, 1.80%)</title><rect x="857.7" y="307.0" width="21.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="860.7" y="318.0">n..</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (46 samples, 0.58%)</title><rect x="858.1" y="291.0" width="6.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="861.1" y="302.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (5 samples, 0.06%)</title><rect x="864.9" y="291.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="867.9" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (16 samples, 0.20%)</title><rect x="865.7" y="291.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="868.7" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (14 samples, 0.18%)</title><rect x="866.0" y="275.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="869.0" y="286.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (6 samples, 0.08%)</title><rect x="868.1" y="291.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="871.1" y="302.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (3 samples, 0.04%)</title><rect x="869.0" y="291.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="872.0" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (4 samples, 0.05%)</title><rect x="869.4" y="291.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="872.4" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (47 samples, 0.59%)</title><rect x="870.0" y="291.0" width="7.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="873.0" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (10 samples, 0.13%)</title><rect x="870.9" y="275.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="873.9" y="286.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (2 samples, 0.03%)</title><rect x="872.4" y="275.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="875.4" y="286.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (4 samples, 0.05%)</title><rect x="872.7" y="275.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="875.7" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (19 samples, 0.24%)</title><rect x="873.3" y="275.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="876.3" y="286.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (5 samples, 0.06%)</title><rect x="875.3" y="259.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="878.3" y="270.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (6 samples, 0.08%)</title><rect x="876.1" y="275.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="879.1" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (11 samples, 0.14%)</title><rect x="877.0" y="291.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="880.0" y="302.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (3 samples, 0.04%)</title><rect x="877.3" y="275.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="880.3" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (3 samples, 0.04%)</title><rect x="877.7" y="275.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="880.7" y="286.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (3 samples, 0.04%)</title><rect x="878.2" y="275.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="881.2" y="286.0"></text>
</g>
<g>
<title>selinux_ipv4_output (2 samples, 0.03%)</title><rect x="878.6" y="291.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="881.6" y="302.0"></text>
</g>
<g>
<title>ip_output (691 samples, 8.70%)</title><rect x="878.9" y="339.0" width="102.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="881.9" y="350.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (657 samples, 8.28%)</title><rect x="879.5" y="323.0" width="97.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="882.5" y="334.0">ip_finish_o..</text>
</g>
<g>
<title>__dev_queue_xmit (33 samples, 0.42%)</title><rect x="881.9" y="307.0" width="4.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="884.9" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (22 samples, 0.28%)</title><rect x="883.4" y="291.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="886.4" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (19 samples, 0.24%)</title><rect x="883.8" y="275.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="886.8" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="884.3" y="259.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="887.3" y="270.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.06%)</title><rect x="884.6" y="259.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="887.6" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.06%)</title><rect x="884.6" y="243.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="887.6" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.05%)</title><rect x="884.7" y="227.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="887.7" y="238.0"></text>
</g>
<g>
<title>sk_free (3 samples, 0.04%)</title><rect x="885.3" y="259.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="888.3" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (5 samples, 0.06%)</title><rect x="885.9" y="259.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="888.9" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (608 samples, 7.66%)</title><rect x="886.8" y="307.0" width="90.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="889.8" y="318.0">__local_bh..</text>
</g>
<g>
<title>do_softirq.part.0 (608 samples, 7.66%)</title><rect x="886.8" y="291.0" width="90.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="889.8" y="302.0">do_softirq..</text>
</g>
<g>
<title>do_softirq_own_stack (603 samples, 7.60%)</title><rect x="887.5" y="275.0" width="89.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="890.5" y="286.0">do_softirq..</text>
</g>
<g>
<title>__softirqentry_text_start (603 samples, 7.60%)</title><rect x="887.5" y="259.0" width="89.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="890.5" y="270.0">__softirqe..</text>
</g>
<g>
<title>net_rx_action (591 samples, 7.44%)</title><rect x="889.3" y="243.0" width="87.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="892.3" y="254.0">net_rx_act..</text>
</g>
<g>
<title>process_backlog (585 samples, 7.37%)</title><rect x="890.2" y="227.0" width="87.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="893.2" y="238.0">process_ba..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (578 samples, 7.28%)</title><rect x="891.2" y="211.0" width="86.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="894.2" y="222.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.05%)</title><rect x="891.2" y="195.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="894.2" y="206.0"></text>
</g>
<g>
<title>ip_rcv (574 samples, 7.23%)</title><rect x="891.8" y="195.0" width="85.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="894.8" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (444 samples, 5.59%)</title><rect x="892.1" y="179.0" width="66.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="895.1" y="190.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (344 samples, 4.33%)</title><rect x="893.0" y="163.0" width="51.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="896.0" y="174.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (340 samples, 4.28%)</title><rect x="893.6" y="147.0" width="50.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="896.6" y="158.0">ip_pr..</text>
</g>
<g>
<title>tcp_v4_rcv (332 samples, 4.18%)</title><rect x="894.8" y="131.0" width="49.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="897.8" y="142.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (16 samples, 0.20%)</title><rect x="896.3" y="115.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="899.3" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.06%)</title><rect x="898.8" y="115.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="901.8" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.05%)</title><rect x="899.0" y="99.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="902.0" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (4 samples, 0.05%)</title><rect x="899.0" y="83.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="902.0" y="94.0"></text>
</g>
<g>
<title>sock_put (5 samples, 0.06%)</title><rect x="899.6" y="115.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="902.6" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (294 samples, 3.70%)</title><rect x="900.3" y="115.0" width="43.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="903.3" y="126.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (292 samples, 3.68%)</title><rect x="900.6" y="99.0" width="43.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="903.6" y="110.0">tcp_..</text>
</g>
<g>
<title>tcp_ack (60 samples, 0.76%)</title><rect x="900.8" y="83.0" width="8.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="903.8" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (17 samples, 0.21%)</title><rect x="902.7" y="67.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="905.7" y="78.0"></text>
</g>
<g>
<title>__slab_free (9 samples, 0.11%)</title><rect x="902.7" y="51.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="905.7" y="62.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="904.0" y="51.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="907.0" y="62.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.06%)</title><rect x="904.5" y="51.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="907.5" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.04%)</title><rect x="905.4" y="67.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="908.4" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (3 samples, 0.04%)</title><rect x="905.8" y="67.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="908.8" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.06%)</title><rect x="906.3" y="67.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="909.3" y="78.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.06%)</title><rect x="906.3" y="51.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="909.3" y="62.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.03%)</title><rect x="907.2" y="67.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="910.2" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.03%)</title><rect x="907.4" y="67.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="910.4" y="78.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.03%)</title><rect x="908.2" y="67.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="911.2" y="78.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (3 samples, 0.04%)</title><rect x="908.5" y="67.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="911.5" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (4 samples, 0.05%)</title><rect x="909.1" y="67.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="912.1" y="78.0"></text>
</g>
<g>
<title>tcp_data_queue (227 samples, 2.86%)</title><rect x="909.8" y="83.0" width="33.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="912.8" y="94.0">tc..</text>
</g>
<g>
<title>dst_release (4 samples, 0.05%)</title><rect x="910.0" y="67.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="913.0" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (215 samples, 2.71%)</title><rect x="910.6" y="67.0" width="31.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="913.6" y="78.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (210 samples, 2.65%)</title><rect x="911.3" y="51.0" width="31.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="914.3" y="62.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (207 samples, 2.61%)</title><rect x="911.8" y="35.0" width="30.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="914.8" y="46.0">_r..</text>
</g>
<g>
<title>tcp_event_data_recv (5 samples, 0.06%)</title><rect x="942.5" y="67.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="945.5" y="78.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="943.3" y="67.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="946.3" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="943.6" y="83.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="946.6" y="94.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="943.6" y="67.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="946.6" y="78.0"></text>
</g>
<g>
<title>nf_hook_slow (94 samples, 1.18%)</title><rect x="944.2" y="163.0" width="13.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="947.2" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (73 samples, 0.92%)</title><rect x="944.6" y="147.0" width="10.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="947.6" y="158.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (13 samples, 0.16%)</title><rect x="952.5" y="131.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="955.5" y="142.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (7 samples, 0.09%)</title><rect x="954.4" y="131.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="957.4" y="142.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.03%)</title><rect x="955.5" y="147.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="958.5" y="158.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.05%)</title><rect x="955.8" y="147.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="958.8" y="158.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (3 samples, 0.04%)</title><rect x="956.3" y="147.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="959.3" y="158.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (6 samples, 0.08%)</title><rect x="956.8" y="147.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="959.8" y="158.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (3 samples, 0.04%)</title><rect x="957.7" y="147.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="960.7" y="158.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (3 samples, 0.04%)</title><rect x="957.7" y="131.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="960.7" y="142.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (10 samples, 0.13%)</title><rect x="958.1" y="179.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="961.1" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (117 samples, 1.47%)</title><rect x="959.8" y="179.0" width="17.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="962.8" y="190.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (4 samples, 0.05%)</title><rect x="960.5" y="163.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="963.5" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (81 samples, 1.02%)</title><rect x="961.1" y="163.0" width="12.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="964.1" y="174.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (2 samples, 0.03%)</title><rect x="973.3" y="163.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="976.3" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (10 samples, 0.13%)</title><rect x="973.6" y="163.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="976.6" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (2 samples, 0.03%)</title><rect x="975.1" y="163.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="978.1" y="174.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (3 samples, 0.04%)</title><rect x="975.4" y="163.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="978.4" y="174.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (9 samples, 0.11%)</title><rect x="975.8" y="163.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="978.8" y="174.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (4 samples, 0.05%)</title><rect x="976.6" y="147.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="979.6" y="158.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.03%)</title><rect x="977.2" y="323.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="980.2" y="334.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="977.2" y="307.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="980.2" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (28 samples, 0.35%)</title><rect x="977.5" y="323.0" width="4.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="980.5" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (11 samples, 0.14%)</title><rect x="977.5" y="307.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="980.5" y="318.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (5 samples, 0.06%)</title><rect x="979.2" y="307.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="982.2" y="318.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (5 samples, 0.06%)</title><rect x="979.2" y="291.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="982.2" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (6 samples, 0.08%)</title><rect x="980.0" y="307.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="983.0" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute (5 samples, 0.06%)</title><rect x="980.9" y="307.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="983.9" y="318.0"></text>
</g>
<g>
<title>__skb_clone (7 samples, 0.09%)</title><rect x="981.6" y="355.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="984.6" y="366.0"></text>
</g>
<g>
<title>__copy_skb_header (5 samples, 0.06%)</title><rect x="981.9" y="339.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="984.9" y="350.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (6 samples, 0.08%)</title><rect x="982.8" y="355.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="985.8" y="366.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.04%)</title><rect x="983.8" y="355.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="986.8" y="366.0"></text>
</g>
<g>
<title>tcp_v4_send_check (3 samples, 0.04%)</title><rect x="984.6" y="355.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="987.6" y="366.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.04%)</title><rect x="985.0" y="371.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="988.0" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.04%)</title><rect x="985.5" y="371.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="988.5" y="382.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (8 samples, 0.10%)</title><rect x="985.9" y="371.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="988.9" y="382.0"></text>
</g>
<g>
<title>rb_first (3 samples, 0.04%)</title><rect x="986.4" y="355.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="989.4" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="986.8" y="355.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="989.8" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.06%)</title><rect x="987.1" y="403.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="990.1" y="414.0"></text>
</g>
<g>
<title>copyin (4 samples, 0.05%)</title><rect x="987.1" y="387.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="990.1" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.04%)</title><rect x="987.3" y="371.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="990.3" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (40 samples, 0.50%)</title><rect x="987.9" y="403.0" width="5.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="990.9" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (37 samples, 0.47%)</title><rect x="988.3" y="387.0" width="5.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="991.3" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (13 samples, 0.16%)</title><rect x="989.2" y="371.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="992.2" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (12 samples, 0.15%)</title><rect x="989.3" y="355.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="992.3" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (11 samples, 0.14%)</title><rect x="991.1" y="371.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="994.1" y="382.0"></text>
</g>
<g>
<title>ksize (7 samples, 0.09%)</title><rect x="992.8" y="371.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="995.8" y="382.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="993.8" y="403.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="996.8" y="414.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (6 samples, 0.08%)</title><rect x="994.2" y="403.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="997.2" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (14 samples, 0.18%)</title><rect x="995.1" y="403.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="998.1" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (13 samples, 0.16%)</title><rect x="995.3" y="387.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="998.3" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (8 samples, 0.10%)</title><rect x="995.9" y="371.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="998.9" y="382.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.04%)</title><rect x="997.2" y="403.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1000.2" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.05%)</title><rect x="997.8" y="451.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1000.8" y="462.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="997.8" y="435.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1000.8" y="446.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.05%)</title><rect x="997.8" y="419.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1000.8" y="430.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.26%)</title><rect x="998.4" y="531.0" width="3.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1001.4" y="542.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.26%)</title><rect x="998.4" y="515.0" width="3.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1001.4" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (20 samples, 0.25%)</title><rect x="998.4" y="499.0" width="3.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1001.4" y="510.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (5 samples, 0.06%)</title><rect x="999.2" y="483.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1002.2" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (10 samples, 0.13%)</title><rect x="999.9" y="483.0" width="1.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1002.9" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (6 samples, 0.08%)</title><rect x="999.9" y="467.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1002.9" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (4 samples, 0.05%)</title><rect x="1000.8" y="467.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1003.8" y="478.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.06%)</title><rect x="1001.5" y="531.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1004.5" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="1002.3" y="563.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1005.3" y="574.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="1002.3" y="547.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1005.3" y="558.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="1002.3" y="531.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1005.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="1002.6" y="611.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1005.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="1002.6" y="595.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1005.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="1002.7" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1005.7" y="590.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="1002.9" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1005.9" y="574.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="1002.9" y="547.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1005.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13 samples, 0.16%)</title><rect x="1003.3" y="627.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1006.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1003.3" y="611.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1006.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="1003.3" y="595.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1006.3" y="606.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="1003.5" y="579.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1006.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (5 samples, 0.06%)</title><rect x="1003.8" y="611.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1006.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="1003.9" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1006.9" y="606.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="1004.2" y="595.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1007.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="1004.5" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1007.5" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.04%)</title><rect x="1004.8" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1007.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1004.8" y="595.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1007.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1004.8" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1007.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="1004.8" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1007.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (174 samples, 2.19%)</title><rect x="1005.2" y="627.0" width="25.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1008.2" y="638.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (7 samples, 0.09%)</title><rect x="1005.5" y="611.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1008.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.03%)</title><rect x="1005.8" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1008.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.03%)</title><rect x="1005.8" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1008.8" y="590.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="1006.3" y="595.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1009.3" y="606.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="1006.3" y="579.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1009.3" y="590.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="1006.3" y="563.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1009.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.06%)</title><rect x="1006.6" y="611.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1009.6" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.06%)</title><rect x="1006.6" y="595.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1009.6" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1006.6" y="579.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1009.6" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1006.6" y="563.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1009.6" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1006.7" y="547.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1009.7" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.05%)</title><rect x="1006.7" y="531.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1009.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.05%)</title><rect x="1006.7" y="515.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1009.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (160 samples, 2.02%)</title><rect x="1007.3" y="611.0" width="23.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1010.3" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (160 samples, 2.02%)</title><rect x="1007.3" y="595.0" width="23.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1010.3" y="606.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (154 samples, 1.94%)</title><rect x="1007.3" y="579.0" width="22.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1010.3" y="590.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (154 samples, 1.94%)</title><rect x="1007.3" y="563.0" width="22.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1010.3" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (154 samples, 1.94%)</title><rect x="1007.3" y="547.0" width="22.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1010.3" y="558.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (8 samples, 0.10%)</title><rect x="1009.1" y="531.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1012.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (8 samples, 0.10%)</title><rect x="1009.1" y="515.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1012.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (52 samples, 0.65%)</title><rect x="1010.3" y="531.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1013.3" y="542.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1017.7" y="515.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1020.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1018.0" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1021.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (3 samples, 0.04%)</title><rect x="1018.5" y="531.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1021.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.04%)</title><rect x="1018.5" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1021.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (74 samples, 0.93%)</title><rect x="1018.9" y="531.0" width="11.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1021.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (73 samples, 0.92%)</title><rect x="1019.1" y="515.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1022.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (59 samples, 0.74%)</title><rect x="1021.2" y="499.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1024.2" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.06%)</title><rect x="1021.3" y="483.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1024.3" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (7 samples, 0.09%)</title><rect x="1022.0" y="483.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1025.0" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (27 samples, 0.34%)</title><rect x="1023.1" y="483.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1026.1" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (13 samples, 0.16%)</title><rect x="1025.2" y="467.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1028.2" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (6 samples, 0.08%)</title><rect x="1026.1" y="451.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1029.1" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (19 samples, 0.24%)</title><rect x="1027.1" y="483.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1030.1" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (17 samples, 0.21%)</title><rect x="1027.2" y="467.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1030.2" y="478.0"></text>
</g>
<g>
<title>vectorizedMismatch (16 samples, 0.20%)</title><rect x="1027.4" y="451.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1030.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (2 samples, 0.03%)</title><rect x="1029.9" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1032.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (6 samples, 0.08%)</title><rect x="1030.2" y="579.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1033.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1030.5" y="563.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1033.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.05%)</title><rect x="1031.3" y="643.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1034.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.05%)</title><rect x="1031.3" y="627.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1034.3" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="1031.3" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1034.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="1031.6" y="611.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1034.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (7 samples, 0.09%)</title><rect x="1032.0" y="643.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1035.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.09%)</title><rect x="1032.0" y="627.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1035.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.09%)</title><rect x="1032.0" y="611.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1035.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1032.0" y="595.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1035.0" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="1032.6" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1035.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (25 samples, 0.31%)</title><rect x="1033.0" y="675.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1036.0" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.18%)</title><rect x="1034.1" y="659.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1037.1" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.18%)</title><rect x="1034.1" y="643.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1037.1" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.05%)</title><rect x="1036.2" y="659.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1039.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5 samples, 0.06%)</title><rect x="1036.8" y="675.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1039.8" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.05%)</title><rect x="1036.8" y="659.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1039.8" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.05%)</title><rect x="1036.8" y="643.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1039.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="1036.9" y="627.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1039.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="1036.9" y="611.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1039.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (13 samples, 0.16%)</title><rect x="1037.5" y="675.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1040.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.13%)</title><rect x="1037.9" y="659.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1040.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="1037.9" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1040.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.03%)</title><rect x="1037.9" y="627.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1040.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.10%)</title><rect x="1038.2" y="643.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1041.2" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.14%)</title><rect x="1039.4" y="675.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1042.4" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.14%)</title><rect x="1039.4" y="659.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1042.4" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (188 samples, 2.37%)</title><rect x="1041.1" y="691.0" width="27.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1044.1" y="702.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (188 samples, 2.37%)</title><rect x="1041.1" y="675.0" width="27.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1044.1" y="686.0">o..</text>
</g>
<g>
<title>[unknown] (32 samples, 0.40%)</title><rect x="1041.4" y="659.0" width="4.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1044.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.40%)</title><rect x="1041.4" y="643.0" width="4.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1044.4" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (25 samples, 0.31%)</title><rect x="1041.4" y="627.0" width="3.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1044.4" y="638.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.05%)</title><rect x="1041.5" y="611.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1044.5" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.03%)</title><rect x="1042.1" y="611.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1045.1" y="622.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (6 samples, 0.08%)</title><rect x="1042.4" y="611.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1045.4" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (11 samples, 0.14%)</title><rect x="1043.3" y="611.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1046.3" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="1043.4" y="595.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1046.4" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="1043.7" y="595.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1046.7" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (4 samples, 0.05%)</title><rect x="1044.3" y="595.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1047.3" y="606.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.06%)</title><rect x="1045.1" y="627.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1048.1" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.03%)</title><rect x="1045.8" y="627.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1048.8" y="638.0"></text>
</g>
<g>
<title>__libc_recv (154 samples, 1.94%)</title><rect x="1046.1" y="659.0" width="22.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1049.1" y="670.0">_..</text>
</g>
<g>
<title>__x86_indirect_thunk_r9 (2 samples, 0.03%)</title><rect x="1052.8" y="643.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1055.8" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (107 samples, 1.35%)</title><rect x="1053.1" y="643.0" width="15.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1056.1" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (107 samples, 1.35%)</title><rect x="1053.1" y="627.0" width="15.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1056.1" y="638.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (94 samples, 1.18%)</title><rect x="1055.0" y="611.0" width="14.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1058.0" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (88 samples, 1.11%)</title><rect x="1055.9" y="595.0" width="13.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1058.9" y="606.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="1055.9" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1058.9" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (67 samples, 0.84%)</title><rect x="1056.4" y="579.0" width="9.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1059.4" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (66 samples, 0.83%)</title><rect x="1056.5" y="563.0" width="9.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1059.5" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.11%)</title><rect x="1057.9" y="547.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1060.9" y="558.0"></text>
</g>
<g>
<title>skb_release_all (8 samples, 0.10%)</title><rect x="1057.9" y="531.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1060.9" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (8 samples, 0.10%)</title><rect x="1057.9" y="515.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1060.9" y="526.0"></text>
</g>
<g>
<title>sock_rfree (8 samples, 0.10%)</title><rect x="1057.9" y="499.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1060.9" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="1059.2" y="547.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1062.2" y="558.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1059.6" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1062.6" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.05%)</title><rect x="1059.9" y="547.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1062.9" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.05%)</title><rect x="1059.9" y="531.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1062.9" y="542.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.05%)</title><rect x="1060.5" y="547.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1063.5" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (27 samples, 0.34%)</title><rect x="1061.1" y="547.0" width="4.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1064.1" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (27 samples, 0.34%)</title><rect x="1061.1" y="531.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1064.1" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (12 samples, 0.15%)</title><rect x="1061.4" y="515.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1064.4" y="526.0"></text>
</g>
<g>
<title>copyout (10 samples, 0.13%)</title><rect x="1061.7" y="499.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1064.7" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (10 samples, 0.13%)</title><rect x="1061.7" y="483.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1064.7" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (13 samples, 0.16%)</title><rect x="1063.2" y="515.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1066.2" y="526.0"></text>
</g>
<g>
<title>__check_object_size (11 samples, 0.14%)</title><rect x="1063.5" y="499.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1066.5" y="510.0"></text>
</g>
<g>
<title>__check_heap_object (4 samples, 0.05%)</title><rect x="1064.0" y="483.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1067.0" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.05%)</title><rect x="1064.6" y="483.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1067.6" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.03%)</title><rect x="1065.1" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1068.1" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (6 samples, 0.08%)</title><rect x="1065.4" y="547.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1068.4" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.08%)</title><rect x="1065.4" y="531.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1068.4" y="542.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="1066.0" y="515.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1069.0" y="526.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="1066.0" y="499.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1069.0" y="510.0"></text>
</g>
<g>
<title>sock_recvmsg (7 samples, 0.09%)</title><rect x="1066.3" y="579.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1069.3" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (7 samples, 0.09%)</title><rect x="1066.3" y="563.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1069.3" y="574.0"></text>
</g>
<g>
<title>sock_has_perm (7 samples, 0.09%)</title><rect x="1066.3" y="547.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1069.3" y="558.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.04%)</title><rect x="1066.9" y="531.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1069.9" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (11 samples, 0.14%)</title><rect x="1067.4" y="579.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1070.4" y="590.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.14%)</title><rect x="1067.4" y="563.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1070.4" y="574.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.06%)</title><rect x="1068.3" y="547.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1071.3" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="1069.0" y="707.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1072.0" y="718.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="1069.0" y="691.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1072.0" y="702.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="1069.0" y="675.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1072.0" y="686.0"></text>
</g>
<g>
<title>[pool-1-thread-1 tid=25257] (58 samples, 0.73%)</title><rect x="1069.3" y="755.0" width="8.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1072.3" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.run (57 samples, 0.72%)</title><rect x="1069.5" y="739.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1072.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (57 samples, 0.72%)</title><rect x="1069.5" y="723.0" width="8.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1072.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (57 samples, 0.72%)</title><rect x="1069.5" y="707.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1072.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (57 samples, 0.72%)</title><rect x="1069.5" y="691.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1072.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (57 samples, 0.72%)</title><rect x="1069.5" y="675.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1072.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (57 samples, 0.72%)</title><rect x="1069.5" y="659.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1072.5" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.05%)</title><rect x="1069.5" y="643.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1072.5" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1069.5" y="627.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1072.5" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1069.5" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1072.5" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1069.5" y="595.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1072.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (51 samples, 0.64%)</title><rect x="1070.4" y="643.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1073.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (47 samples, 0.59%)</title><rect x="1070.4" y="627.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1073.4" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (44 samples, 0.55%)</title><rect x="1070.4" y="611.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1073.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (44 samples, 0.55%)</title><rect x="1070.4" y="595.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1073.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (44 samples, 0.55%)</title><rect x="1070.4" y="579.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1073.4" y="590.0"></text>
</g>
<g>
<title>__libc_write (42 samples, 0.53%)</title><rect x="1070.5" y="563.0" width="6.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1073.5" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.33%)</title><rect x="1072.7" y="547.0" width="3.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1075.7" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.33%)</title><rect x="1072.7" y="531.0" width="3.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1075.7" y="542.0"></text>
</g>
<g>
<title>ksys_write (20 samples, 0.25%)</title><rect x="1073.6" y="515.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1076.6" y="526.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.04%)</title><rect x="1073.6" y="499.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1076.6" y="510.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="1073.6" y="483.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1076.6" y="494.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="1073.8" y="467.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1076.8" y="478.0"></text>
</g>
<g>
<title>vfs_write (16 samples, 0.20%)</title><rect x="1074.2" y="499.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1077.2" y="510.0"></text>
</g>
<g>
<title>new_sync_write (15 samples, 0.19%)</title><rect x="1074.4" y="483.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1077.4" y="494.0"></text>
</g>
<g>
<title>generic_file_write_iter (13 samples, 0.16%)</title><rect x="1074.7" y="467.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1077.7" y="478.0"></text>
</g>
<g>
<title>__generic_file_write_iter (11 samples, 0.14%)</title><rect x="1074.7" y="451.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1077.7" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (9 samples, 0.11%)</title><rect x="1075.0" y="435.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1078.0" y="446.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (2 samples, 0.03%)</title><rect x="1075.4" y="419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1078.4" y="430.0"></text>
</g>
<g>
<title>shmem_write_begin (2 samples, 0.03%)</title><rect x="1075.7" y="419.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1078.7" y="430.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (2 samples, 0.03%)</title><rect x="1075.7" y="403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1078.7" y="414.0"></text>
</g>
<g>
<title>shmem_write_end (2 samples, 0.03%)</title><rect x="1076.0" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1079.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.04%)</title><rect x="1076.9" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1079.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.05%)</title><rect x="1077.3" y="627.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1080.3" y="638.0"></text>
</g>
<g>
<title>[pool-1-thread-2 tid=25259] (58 samples, 0.73%)</title><rect x="1077.9" y="755.0" width="8.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1080.9" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.run (57 samples, 0.72%)</title><rect x="1078.1" y="739.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1081.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (57 samples, 0.72%)</title><rect x="1078.1" y="723.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1081.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (57 samples, 0.72%)</title><rect x="1078.1" y="707.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1081.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (57 samples, 0.72%)</title><rect x="1078.1" y="691.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1081.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (57 samples, 0.72%)</title><rect x="1078.1" y="675.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1081.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (57 samples, 0.72%)</title><rect x="1078.1" y="659.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1081.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (2 samples, 0.03%)</title><rect x="1078.2" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1081.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.03%)</title><rect x="1078.2" y="627.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1081.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (2 samples, 0.03%)</title><rect x="1078.2" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1081.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (53 samples, 0.67%)</title><rect x="1078.7" y="643.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1081.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (49 samples, 0.62%)</title><rect x="1079.0" y="627.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1082.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (48 samples, 0.60%)</title><rect x="1079.1" y="611.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1082.1" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (48 samples, 0.60%)</title><rect x="1079.1" y="595.0" width="7.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1082.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (48 samples, 0.60%)</title><rect x="1079.1" y="579.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1082.1" y="590.0"></text>
</g>
<g>
<title>__libc_write (47 samples, 0.59%)</title><rect x="1079.1" y="563.0" width="7.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1082.1" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.34%)</title><rect x="1082.1" y="547.0" width="4.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1085.1" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.34%)</title><rect x="1082.1" y="531.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1085.1" y="542.0"></text>
</g>
<g>
<title>ksys_write (23 samples, 0.29%)</title><rect x="1082.7" y="515.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1085.7" y="526.0"></text>
</g>
<g>
<title>__fdget_pos (6 samples, 0.08%)</title><rect x="1082.7" y="499.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1085.7" y="510.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.06%)</title><rect x="1082.8" y="483.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1085.8" y="494.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.05%)</title><rect x="1083.0" y="467.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1086.0" y="478.0"></text>
</g>
<g>
<title>vfs_write (17 samples, 0.21%)</title><rect x="1083.6" y="499.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1086.6" y="510.0"></text>
</g>
<g>
<title>new_sync_write (17 samples, 0.21%)</title><rect x="1083.6" y="483.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1086.6" y="494.0"></text>
</g>
<g>
<title>generic_file_write_iter (15 samples, 0.19%)</title><rect x="1083.9" y="467.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1086.9" y="478.0"></text>
</g>
<g>
<title>__generic_file_write_iter (15 samples, 0.19%)</title><rect x="1083.9" y="451.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1086.9" y="462.0"></text>
</g>
<g>
<title>file_remove_privs (2 samples, 0.03%)</title><rect x="1083.9" y="435.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1086.9" y="446.0"></text>
</g>
<g>
<title>generic_perform_write (13 samples, 0.16%)</title><rect x="1084.2" y="435.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1087.2" y="446.0"></text>
</g>
<g>
<title>shmem_write_begin (9 samples, 0.11%)</title><rect x="1084.2" y="419.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1087.2" y="430.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (8 samples, 0.10%)</title><rect x="1084.3" y="403.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1087.3" y="414.0"></text>
</g>
<g>
<title>find_lock_entry (6 samples, 0.08%)</title><rect x="1084.3" y="387.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1087.3" y="398.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.06%)</title><rect x="1084.5" y="371.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1087.5" y="382.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.04%)</title><rect x="1084.8" y="355.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1087.8" y="366.0"></text>
</g>
<g>
<title>shmem_write_end (4 samples, 0.05%)</title><rect x="1085.5" y="419.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1088.5" y="430.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.03%)</title><rect x="1085.8" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1088.8" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.03%)</title><rect x="1086.3" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1089.3" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.03%)</title><rect x="1086.3" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1089.3" y="622.0"></text>
</g>
<g>
<title>[pool-1-thread-3 tid=25261] (60 samples, 0.76%)</title><rect x="1086.6" y="755.0" width="8.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1089.6" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.run (60 samples, 0.76%)</title><rect x="1086.6" y="739.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1089.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (60 samples, 0.76%)</title><rect x="1086.6" y="723.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1089.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (60 samples, 0.76%)</title><rect x="1086.6" y="707.0" width="8.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1089.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (60 samples, 0.76%)</title><rect x="1086.6" y="691.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (60 samples, 0.76%)</title><rect x="1086.6" y="675.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1089.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (59 samples, 0.74%)</title><rect x="1086.7" y="659.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (56 samples, 0.71%)</title><rect x="1087.1" y="643.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1090.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (52 samples, 0.65%)</title><rect x="1087.3" y="627.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1090.3" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (51 samples, 0.64%)</title><rect x="1087.4" y="611.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1090.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (51 samples, 0.64%)</title><rect x="1087.4" y="595.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1090.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (51 samples, 0.64%)</title><rect x="1087.4" y="579.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1090.4" y="590.0"></text>
</g>
<g>
<title>__libc_write (48 samples, 0.60%)</title><rect x="1087.7" y="563.0" width="7.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1090.7" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.40%)</title><rect x="1090.1" y="547.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1093.1" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.40%)</title><rect x="1090.1" y="531.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1093.1" y="542.0"></text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.03%)</title><rect x="1091.0" y="515.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1094.0" y="526.0"></text>
</g>
<g>
<title>ksys_write (24 samples, 0.30%)</title><rect x="1091.3" y="515.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1094.3" y="526.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.04%)</title><rect x="1091.5" y="499.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1094.5" y="510.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="1091.5" y="483.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1094.5" y="494.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="1091.5" y="467.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1094.5" y="478.0"></text>
</g>
<g>
<title>vfs_write (20 samples, 0.25%)</title><rect x="1091.9" y="499.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1094.9" y="510.0"></text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.03%)</title><rect x="1092.1" y="483.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1095.1" y="494.0"></text>
</g>
<g>
<title>new_sync_write (17 samples, 0.21%)</title><rect x="1092.3" y="483.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1095.3" y="494.0"></text>
</g>
<g>
<title>generic_file_write_iter (16 samples, 0.20%)</title><rect x="1092.5" y="467.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1095.5" y="478.0"></text>
</g>
<g>
<title>__generic_file_write_iter (14 samples, 0.18%)</title><rect x="1092.6" y="451.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1095.6" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (13 samples, 0.16%)</title><rect x="1092.8" y="435.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1095.8" y="446.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (3 samples, 0.04%)</title><rect x="1093.1" y="419.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1096.1" y="430.0"></text>
</g>
<g>
<title>shmem_write_begin (5 samples, 0.06%)</title><rect x="1093.5" y="419.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1096.5" y="430.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (4 samples, 0.05%)</title><rect x="1093.7" y="403.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1096.7" y="414.0"></text>
</g>
<g>
<title>find_lock_entry (2 samples, 0.03%)</title><rect x="1094.0" y="387.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1097.0" y="398.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.03%)</title><rect x="1094.0" y="371.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1097.0" y="382.0"></text>
</g>
<g>
<title>shmem_write_end (3 samples, 0.04%)</title><rect x="1094.3" y="419.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1097.3" y="430.0"></text>
</g>
<g>
<title>__set_page_dirty_no_writeback (2 samples, 0.03%)</title><rect x="1094.3" y="403.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1097.3" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.04%)</title><rect x="1095.0" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1098.0" y="638.0"></text>
</g>
<g>
<title>[pool-1-thread-4 tid=25262] (49 samples, 0.62%)</title><rect x="1095.5" y="755.0" width="7.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1098.5" y="766.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.03%)</title><rect x="1095.5" y="739.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1098.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.run (47 samples, 0.59%)</title><rect x="1095.8" y="739.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1098.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (47 samples, 0.59%)</title><rect x="1095.8" y="723.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (47 samples, 0.59%)</title><rect x="1095.8" y="707.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1098.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (47 samples, 0.59%)</title><rect x="1095.8" y="691.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1098.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (47 samples, 0.59%)</title><rect x="1095.8" y="675.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1098.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (47 samples, 0.59%)</title><rect x="1095.8" y="659.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1098.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (43 samples, 0.54%)</title><rect x="1096.4" y="643.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1099.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.04%)</title><rect x="1096.4" y="627.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1099.4" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.04%)</title><rect x="1096.4" y="611.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1099.4" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.03%)</title><rect x="1096.5" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1099.5" y="606.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.03%)</title><rect x="1096.5" y="579.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1099.5" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.03%)</title><rect x="1096.5" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1099.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (40 samples, 0.50%)</title><rect x="1096.8" y="627.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1099.8" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (39 samples, 0.49%)</title><rect x="1097.0" y="611.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1100.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (39 samples, 0.49%)</title><rect x="1097.0" y="595.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1100.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (39 samples, 0.49%)</title><rect x="1097.0" y="579.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1100.0" y="590.0"></text>
</g>
<g>
<title>__libc_write (36 samples, 0.45%)</title><rect x="1097.3" y="563.0" width="5.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1100.3" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.26%)</title><rect x="1099.5" y="547.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1102.5" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.26%)</title><rect x="1099.5" y="531.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1102.5" y="542.0"></text>
</g>
<g>
<title>ksys_write (15 samples, 0.19%)</title><rect x="1100.4" y="515.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1103.4" y="526.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.04%)</title><rect x="1100.5" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1103.5" y="510.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="1100.7" y="483.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1103.7" y="494.0"></text>
</g>
<g>
<title>vfs_write (11 samples, 0.14%)</title><rect x="1101.0" y="499.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1104.0" y="510.0"></text>
</g>
<g>
<title>new_sync_write (9 samples, 0.11%)</title><rect x="1101.3" y="483.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1104.3" y="494.0"></text>
</g>
<g>
<title>generic_file_write_iter (9 samples, 0.11%)</title><rect x="1101.3" y="467.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1104.3" y="478.0"></text>
</g>
<g>
<title>__generic_file_write_iter (9 samples, 0.11%)</title><rect x="1101.3" y="451.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1104.3" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (9 samples, 0.11%)</title><rect x="1101.3" y="435.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1104.3" y="446.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.03%)</title><rect x="1101.4" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1104.4" y="430.0"></text>
</g>
<g>
<title>shmem_write_begin (4 samples, 0.05%)</title><rect x="1101.7" y="419.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1104.7" y="430.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (4 samples, 0.05%)</title><rect x="1101.7" y="403.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1104.7" y="414.0"></text>
</g>
<g>
<title>find_lock_entry (3 samples, 0.04%)</title><rect x="1101.7" y="387.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1104.7" y="398.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.04%)</title><rect x="1101.7" y="371.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1104.7" y="382.0"></text>
</g>
<g>
<title>shmem_write_end (2 samples, 0.03%)</title><rect x="1102.3" y="419.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1105.3" y="430.0"></text>
</g>
<g>
<title>[pool-1-thread-5 tid=25263] (58 samples, 0.73%)</title><rect x="1102.8" y="755.0" width="8.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1105.8" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.run (57 samples, 0.72%)</title><rect x="1102.9" y="739.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1105.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (57 samples, 0.72%)</title><rect x="1102.9" y="723.0" width="8.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1105.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (57 samples, 0.72%)</title><rect x="1102.9" y="707.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1105.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (57 samples, 0.72%)</title><rect x="1102.9" y="691.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1105.9" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (57 samples, 0.72%)</title><rect x="1102.9" y="675.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1105.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (57 samples, 0.72%)</title><rect x="1102.9" y="659.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1105.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (2 samples, 0.03%)</title><rect x="1103.3" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1106.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.03%)</title><rect x="1103.3" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1106.3" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (52 samples, 0.65%)</title><rect x="1103.6" y="643.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1106.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (51 samples, 0.64%)</title><rect x="1103.8" y="627.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1106.8" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.03%)</title><rect x="1103.9" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1106.9" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.03%)</title><rect x="1103.9" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1106.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (48 samples, 0.60%)</title><rect x="1104.2" y="611.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1107.2" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (48 samples, 0.60%)</title><rect x="1104.2" y="595.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1107.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (48 samples, 0.60%)</title><rect x="1104.2" y="579.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1107.2" y="590.0"></text>
</g>
<g>
<title>__libc_write (43 samples, 0.54%)</title><rect x="1104.7" y="563.0" width="6.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1107.7" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.31%)</title><rect x="1107.4" y="547.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1110.4" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.31%)</title><rect x="1107.4" y="531.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1110.4" y="542.0"></text>
</g>
<g>
<title>ksys_write (21 samples, 0.26%)</title><rect x="1108.0" y="515.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1111.0" y="526.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="1108.1" y="499.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1111.1" y="510.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="1108.1" y="483.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1111.1" y="494.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="1108.1" y="467.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1111.1" y="478.0"></text>
</g>
<g>
<title>vfs_write (18 samples, 0.23%)</title><rect x="1108.4" y="499.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1111.4" y="510.0"></text>
</g>
<g>
<title>new_sync_write (14 samples, 0.18%)</title><rect x="1108.7" y="483.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1111.7" y="494.0"></text>
</g>
<g>
<title>generic_file_write_iter (14 samples, 0.18%)</title><rect x="1108.7" y="467.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1111.7" y="478.0"></text>
</g>
<g>
<title>__generic_file_write_iter (11 samples, 0.14%)</title><rect x="1108.8" y="451.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1111.8" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (10 samples, 0.13%)</title><rect x="1109.0" y="435.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1112.0" y="446.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.03%)</title><rect x="1109.3" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1112.3" y="430.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.03%)</title><rect x="1109.3" y="403.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1112.3" y="414.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="1109.3" y="387.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1112.3" y="398.0"></text>
</g>
<g>
<title>shmem_write_begin (2 samples, 0.03%)</title><rect x="1109.7" y="419.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1112.7" y="430.0"></text>
</g>
<g>
<title>shmem_write_end (3 samples, 0.04%)</title><rect x="1110.0" y="419.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1113.0" y="430.0"></text>
</g>
<g>
<title>__set_page_dirty_no_writeback (2 samples, 0.03%)</title><rect x="1110.0" y="403.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1113.0" y="414.0"></text>
</g>
<g>
<title>down_write (2 samples, 0.03%)</title><rect x="1110.5" y="451.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1113.5" y="462.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="1110.8" y="483.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1113.8" y="494.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="1111.1" y="563.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1114.1" y="574.0"></text>
</g>
<g>
<title>[tid=25109] (109 samples, 1.37%)</title><rect x="1111.4" y="755.0" width="16.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1114.4" y="766.0"></text>
</g>
<g>
<title>start_thread (108 samples, 1.36%)</title><rect x="1111.5" y="739.0" width="16.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1114.5" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (108 samples, 1.36%)</title><rect x="1111.5" y="723.0" width="16.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1114.5" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (108 samples, 1.36%)</title><rect x="1111.5" y="707.0" width="16.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1114.5" y="718.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (107 samples, 1.35%)</title><rect x="1111.7" y="691.0" width="15.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1114.7" y="702.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (32 samples, 0.40%)</title><rect x="1111.7" y="675.0" width="4.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1114.7" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (26 samples, 0.33%)</title><rect x="1112.0" y="659.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1115.0" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (14 samples, 0.18%)</title><rect x="1113.8" y="643.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1116.8" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (4 samples, 0.05%)</title><rect x="1115.2" y="627.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1118.2" y="638.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.04%)</title><rect x="1115.8" y="659.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1118.8" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (70 samples, 0.88%)</title><rect x="1116.4" y="675.0" width="10.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1119.4" y="686.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (70 samples, 0.88%)</title><rect x="1116.4" y="659.0" width="10.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1119.4" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (70 samples, 0.88%)</title><rect x="1116.4" y="643.0" width="10.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1119.4" y="654.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (70 samples, 0.88%)</title><rect x="1116.4" y="627.0" width="10.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1119.4" y="638.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (69 samples, 0.87%)</title><rect x="1116.4" y="611.0" width="10.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1119.4" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (60 samples, 0.76%)</title><rect x="1116.4" y="595.0" width="8.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1119.4" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (43 samples, 0.54%)</title><rect x="1119.0" y="579.0" width="6.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1122.0" y="590.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (10 samples, 0.13%)</title><rect x="1123.9" y="563.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1126.9" y="574.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (9 samples, 0.11%)</title><rect x="1125.3" y="595.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1128.3" y="606.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (9 samples, 0.11%)</title><rect x="1125.3" y="579.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1128.3" y="590.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (3 samples, 0.04%)</title><rect x="1125.5" y="563.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1128.5" y="574.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.03%)</title><rect x="1126.2" y="563.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1129.2" y="574.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (4 samples, 0.05%)</title><rect x="1127.0" y="675.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1130.0" y="686.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (2 samples, 0.03%)</title><rect x="1127.0" y="659.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1130.0" y="670.0"></text>
</g>
<g>
<title>[tid=25111] (71 samples, 0.89%)</title><rect x="1127.6" y="755.0" width="10.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1130.6" y="766.0"></text>
</g>
<g>
<title>start_thread (71 samples, 0.89%)</title><rect x="1127.6" y="739.0" width="10.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1130.6" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (71 samples, 0.89%)</title><rect x="1127.6" y="723.0" width="10.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1130.6" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (71 samples, 0.89%)</title><rect x="1127.6" y="707.0" width="10.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1130.6" y="718.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (43 samples, 0.54%)</title><rect x="1127.6" y="691.0" width="6.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1130.6" y="702.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (43 samples, 0.54%)</title><rect x="1127.6" y="675.0" width="6.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1130.6" y="686.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.153] (26 samples, 0.33%)</title><rect x="1128.5" y="659.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1131.5" y="670.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (21 samples, 0.26%)</title><rect x="1129.2" y="643.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1132.2" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (18 samples, 0.23%)</title><rect x="1129.5" y="627.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1132.5" y="638.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (11 samples, 0.14%)</title><rect x="1132.3" y="659.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1135.3" y="670.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (6 samples, 0.08%)</title><rect x="1132.8" y="643.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1135.8" y="654.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (27 samples, 0.34%)</title><rect x="1134.1" y="691.0" width="4.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1137.1" y="702.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (27 samples, 0.34%)</title><rect x="1134.1" y="675.0" width="4.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1137.1" y="686.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (26 samples, 0.33%)</title><rect x="1134.1" y="659.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1137.1" y="670.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (2 samples, 0.03%)</title><rect x="1136.5" y="643.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1139.5" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (5 samples, 0.06%)</title><rect x="1137.2" y="643.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1140.2" y="654.0"></text>
</g>
<g>
<title>[tid=25114] (9 samples, 0.11%)</title><rect x="1138.1" y="755.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1141.1" y="766.0"></text>
</g>
<g>
<title>start_thread (7 samples, 0.09%)</title><rect x="1138.4" y="739.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1141.4" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (7 samples, 0.09%)</title><rect x="1138.4" y="723.0" width="1.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1141.4" y="734.0"></text>
</g>
<g>
<title>VMThread::run() (7 samples, 0.09%)</title><rect x="1138.4" y="707.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1141.4" y="718.0"></text>
</g>
<g>
<title>VMThread::loop() (7 samples, 0.09%)</title><rect x="1138.4" y="691.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1141.4" y="702.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.54] (3 samples, 0.04%)</title><rect x="1138.6" y="675.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1141.6" y="686.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (3 samples, 0.04%)</title><rect x="1138.6" y="659.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1141.6" y="670.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (3 samples, 0.04%)</title><rect x="1138.6" y="643.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1141.6" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (3 samples, 0.04%)</title><rect x="1138.6" y="627.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1141.6" y="638.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (2 samples, 0.03%)</title><rect x="1138.7" y="611.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1141.7" y="622.0"></text>
</g>
<g>
<title>__GI_sched_yield (2 samples, 0.03%)</title><rect x="1139.0" y="675.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1142.0" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1139.0" y="659.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1142.0" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1139.0" y="643.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1142.0" y="654.0"></text>
</g>
<g>
<title>[tid=25119] (2 samples, 0.03%)</title><rect x="1139.5" y="755.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1142.5" y="766.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.03%)</title><rect x="1139.5" y="739.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1142.5" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.03%)</title><rect x="1139.5" y="723.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1142.5" y="734.0"></text>
</g>
<g>
<title>JavaThread::run() (2 samples, 0.03%)</title><rect x="1139.5" y="707.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1142.5" y="718.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2 samples, 0.03%)</title><rect x="1139.5" y="691.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1142.5" y="702.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2 samples, 0.03%)</title><rect x="1139.5" y="675.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1142.5" y="686.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2 samples, 0.03%)</title><rect x="1139.5" y="659.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1142.5" y="670.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.03%)</title><rect x="1139.5" y="643.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1142.5" y="654.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (2 samples, 0.03%)</title><rect x="1139.5" y="627.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1142.5" y="638.0"></text>
</g>
<g>
<title>Compilation::compile_method() (2 samples, 0.03%)</title><rect x="1139.5" y="611.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1142.5" y="622.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (2 samples, 0.03%)</title><rect x="1139.5" y="595.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1142.5" y="606.0"></text>
</g>
<g>
<title>[tid=25221] (114 samples, 1.44%)</title><rect x="1139.9" y="755.0" width="17.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1142.9" y="766.0"></text>
</g>
<g>
<title>start_thread (114 samples, 1.44%)</title><rect x="1139.9" y="739.0" width="17.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1142.9" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (114 samples, 1.44%)</title><rect x="1139.9" y="723.0" width="17.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1142.9" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (114 samples, 1.44%)</title><rect x="1139.9" y="707.0" width="17.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1142.9" y="718.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (113 samples, 1.42%)</title><rect x="1139.9" y="691.0" width="16.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1142.9" y="702.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (45 samples, 0.57%)</title><rect x="1139.9" y="675.0" width="6.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1142.9" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (31 samples, 0.39%)</title><rect x="1139.9" y="659.0" width="4.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1142.9" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (16 samples, 0.20%)</title><rect x="1142.1" y="643.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1145.1" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (4 samples, 0.05%)</title><rect x="1143.9" y="627.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1146.9" y="638.0"></text>
</g>
<g>
<title>SpinPause (13 samples, 0.16%)</title><rect x="1144.5" y="659.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1147.5" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (66 samples, 0.83%)</title><rect x="1146.6" y="675.0" width="9.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1149.6" y="686.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (66 samples, 0.83%)</title><rect x="1146.6" y="659.0" width="9.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1149.6" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (66 samples, 0.83%)</title><rect x="1146.6" y="643.0" width="9.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1149.6" y="654.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (66 samples, 0.83%)</title><rect x="1146.6" y="627.0" width="9.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1149.6" y="638.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (66 samples, 0.83%)</title><rect x="1146.6" y="611.0" width="9.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1149.6" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (53 samples, 0.67%)</title><rect x="1146.6" y="595.0" width="7.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1149.6" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (30 samples, 0.38%)</title><rect x="1149.9" y="579.0" width="4.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1152.9" y="590.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (6 samples, 0.08%)</title><rect x="1153.4" y="563.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1156.4" y="574.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (13 samples, 0.16%)</title><rect x="1154.5" y="595.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1157.5" y="606.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (12 samples, 0.15%)</title><rect x="1154.5" y="579.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.5" y="590.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (3 samples, 0.04%)</title><rect x="1154.9" y="563.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1157.9" y="574.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.03%)</title><rect x="1155.8" y="563.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1158.8" y="574.0"></text>
</g>
<g>
<title>[tid=25222] (113 samples, 1.42%)</title><rect x="1156.9" y="755.0" width="16.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1159.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1156.9" y="739.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1159.9" y="750.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (2 samples, 0.03%)</title><rect x="1156.9" y="723.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1159.9" y="734.0"></text>
</g>
<g>
<title>start_thread (111 samples, 1.40%)</title><rect x="1157.2" y="739.0" width="16.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1160.2" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (111 samples, 1.40%)</title><rect x="1157.2" y="723.0" width="16.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1160.2" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (111 samples, 1.40%)</title><rect x="1157.2" y="707.0" width="16.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1160.2" y="718.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (108 samples, 1.36%)</title><rect x="1157.3" y="691.0" width="16.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1160.3" y="702.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (35 samples, 0.44%)</title><rect x="1157.3" y="675.0" width="5.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1160.3" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (27 samples, 0.34%)</title><rect x="1157.6" y="659.0" width="4.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1160.6" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (14 samples, 0.18%)</title><rect x="1159.5" y="643.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1162.5" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (6 samples, 0.08%)</title><rect x="1160.7" y="627.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.7" y="638.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.08%)</title><rect x="1161.6" y="659.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1164.6" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (69 samples, 0.87%)</title><rect x="1162.5" y="675.0" width="10.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1165.5" y="686.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (69 samples, 0.87%)</title><rect x="1162.5" y="659.0" width="10.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.5" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (69 samples, 0.87%)</title><rect x="1162.5" y="643.0" width="10.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1165.5" y="654.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (69 samples, 0.87%)</title><rect x="1162.5" y="627.0" width="10.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1165.5" y="638.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (68 samples, 0.86%)</title><rect x="1162.7" y="611.0" width="10.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.7" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (54 samples, 0.68%)</title><rect x="1162.7" y="595.0" width="8.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1165.7" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (29 samples, 0.37%)</title><rect x="1166.1" y="579.0" width="4.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.1" y="590.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (10 samples, 0.13%)</title><rect x="1168.9" y="563.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.9" y="574.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1170.4" y="579.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.4" y="590.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (14 samples, 0.18%)</title><rect x="1170.7" y="595.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1173.7" y="606.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (14 samples, 0.18%)</title><rect x="1170.7" y="579.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.7" y="590.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (9 samples, 0.11%)</title><rect x="1171.0" y="563.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1174.0" y="574.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.03%)</title><rect x="1172.3" y="563.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.3" y="574.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.03%)</title><rect x="1172.8" y="675.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.8" y="686.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.03%)</title><rect x="1172.8" y="659.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.8" y="670.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.03%)</title><rect x="1172.8" y="643.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.8" y="654.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.03%)</title><rect x="1173.1" y="675.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.1" y="686.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.03%)</title><rect x="1173.1" y="659.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.1" y="670.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (2 samples, 0.03%)</title><rect x="1173.1" y="643.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.1" y="654.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="1173.4" y="691.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.4" y="702.0"></text>
</g>
<g>
<title>SymbolTable::possibly_parallel_unlink(int*, int*) (2 samples, 0.03%)</title><rect x="1173.4" y="675.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.4" y="686.0"></text>
</g>
<g>
<title>[tid=25223] (110 samples, 1.39%)</title><rect x="1173.7" y="755.0" width="16.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1176.7" y="766.0"></text>
</g>
<g>
<title>start_thread (110 samples, 1.39%)</title><rect x="1173.7" y="739.0" width="16.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1176.7" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (110 samples, 1.39%)</title><rect x="1173.7" y="723.0" width="16.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1176.7" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (110 samples, 1.39%)</title><rect x="1173.7" y="707.0" width="16.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.7" y="718.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (108 samples, 1.36%)</title><rect x="1173.7" y="691.0" width="16.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.7" y="702.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (31 samples, 0.39%)</title><rect x="1173.7" y="675.0" width="4.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.7" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (24 samples, 0.30%)</title><rect x="1174.1" y="659.0" width="3.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.1" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (14 samples, 0.18%)</title><rect x="1175.4" y="643.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.4" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.04%)</title><rect x="1177.1" y="627.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.1" y="638.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.05%)</title><rect x="1177.7" y="659.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1180.7" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (70 samples, 0.88%)</title><rect x="1178.3" y="675.0" width="10.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.3" y="686.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (70 samples, 0.88%)</title><rect x="1178.3" y="659.0" width="10.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.3" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (70 samples, 0.88%)</title><rect x="1178.3" y="643.0" width="10.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.3" y="654.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (70 samples, 0.88%)</title><rect x="1178.3" y="627.0" width="10.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.3" y="638.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (70 samples, 0.88%)</title><rect x="1178.3" y="611.0" width="10.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.3" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (62 samples, 0.78%)</title><rect x="1178.3" y="595.0" width="9.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.3" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (43 samples, 0.54%)</title><rect x="1181.1" y="579.0" width="6.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.1" y="590.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (12 samples, 0.15%)</title><rect x="1185.7" y="563.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.7" y="574.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (8 samples, 0.10%)</title><rect x="1187.5" y="595.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.5" y="606.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (7 samples, 0.09%)</title><rect x="1187.5" y="579.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.5" y="590.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.03%)</title><rect x="1188.1" y="563.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.1" y="574.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.04%)</title><rect x="1188.7" y="675.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.7" y="686.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (3 samples, 0.04%)</title><rect x="1188.7" y="659.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.7" y="670.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (3 samples, 0.04%)</title><rect x="1188.7" y="643.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.7" y="654.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (3 samples, 0.04%)</title><rect x="1188.7" y="627.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.7" y="638.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.04%)</title><rect x="1188.7" y="611.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.7" y="622.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (4 samples, 0.05%)</title><rect x="1189.1" y="675.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.1" y="686.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (3 samples, 0.04%)</title><rect x="1189.1" y="659.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.1" y="670.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (3 samples, 0.04%)</title><rect x="1189.1" y="643.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.1" y="654.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (3 samples, 0.04%)</title><rect x="1189.1" y="627.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.1" y="638.0"></text>
</g>
</g>
</svg>
