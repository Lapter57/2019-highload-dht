<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="805"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="805"> </text>
<g id="frames">
<g>
<title>all (7,922 samples, 100.00%)</title><rect x="10.0" y="771.0" width="1180.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="13.0" y="782.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=26108] (3,287 samples, 41.49%)</title><rect x="10.0" y="755.0" width="489.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="13.0" y="766.0">[NIO Selector #0 tid=26108]</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.05%)</title><rect x="10.0" y="739.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="10.3" y="723.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.3" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="10.3" y="707.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.3" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="10.6" y="739.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.6" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="10.6" y="723.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.6" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="10.6" y="707.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.6" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="10.6" y="691.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.6" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (17 samples, 0.21%)</title><rect x="10.9" y="739.0" width="2.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="13.9" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,263 samples, 41.19%)</title><rect x="13.4" y="739.0" width="486.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="16.4" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (374 samples, 4.72%)</title><rect x="13.7" y="723.0" width="55.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="16.7" y="734.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (7 samples, 0.09%)</title><rect x="13.7" y="707.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="16.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.04%)</title><rect x="14.3" y="691.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (367 samples, 4.63%)</title><rect x="14.8" y="707.0" width="54.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.8" y="718.0">one/n..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (347 samples, 4.38%)</title><rect x="16.1" y="691.0" width="51.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="19.1" y="702.0">.anno..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (183 samples, 2.31%)</title><rect x="40.5" y="675.0" width="27.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="43.5" y="686.0">e..</text>
</g>
<g>
<title>do_syscall_64 (183 samples, 2.31%)</title><rect x="40.5" y="659.0" width="27.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="43.5" y="670.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (155 samples, 1.96%)</title><rect x="44.7" y="643.0" width="23.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="47.7" y="654.0">_..</text>
</g>
<g>
<title>do_epoll_wait (146 samples, 1.84%)</title><rect x="46.0" y="627.0" width="21.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="49.0" y="638.0">d..</text>
</g>
<g>
<title>__fget_light (12 samples, 0.15%)</title><rect x="46.6" y="611.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="49.6" y="622.0"></text>
</g>
<g>
<title>__fget (10 samples, 0.13%)</title><rect x="46.9" y="595.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="49.9" y="606.0"></text>
</g>
<g>
<title>ep_poll (128 samples, 1.62%)</title><rect x="48.4" y="611.0" width="19.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="51.4" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_irq (2 samples, 0.03%)</title><rect x="50.5" y="595.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="53.5" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (106 samples, 1.34%)</title><rect x="50.8" y="595.0" width="15.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="53.8" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (47 samples, 0.59%)</title><rect x="58.7" y="579.0" width="7.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="61.7" y="590.0"></text>
</g>
<g>
<title>__list_del_entry_valid (2 samples, 0.03%)</title><rect x="60.2" y="563.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="63.2" y="574.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (35 samples, 0.44%)</title><rect x="60.5" y="563.0" width="5.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="63.5" y="574.0"></text>
</g>
<g>
<title>sock_poll (35 samples, 0.44%)</title><rect x="60.5" y="547.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="63.5" y="558.0"></text>
</g>
<g>
<title>tcp_poll (16 samples, 0.20%)</title><rect x="63.3" y="531.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="66.3" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (6 samples, 0.08%)</title><rect x="64.8" y="515.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="67.8" y="526.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.04%)</title><rect x="65.7" y="579.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="68.7" y="590.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.04%)</title><rect x="66.2" y="579.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="69.2" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (6 samples, 0.08%)</title><rect x="66.6" y="595.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="69.6" y="606.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.08%)</title><rect x="66.6" y="579.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="69.6" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.04%)</title><rect x="67.0" y="563.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="70.0" y="574.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="67.5" y="611.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="70.5" y="622.0"></text>
</g>
<g>
<title>__GI___clock_gettime (4 samples, 0.05%)</title><rect x="67.8" y="691.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="70.8" y="702.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="67.9" y="675.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="70.9" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (6 samples, 0.08%)</title><rect x="68.4" y="691.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="71.4" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,887 samples, 36.44%)</title><rect x="69.4" y="723.0" width="430.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.4" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,864 samples, 36.15%)</title><rect x="72.0" y="707.0" width="426.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="75.0" y="718.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,552 samples, 32.21%)</title><rect x="72.7" y="691.0" width="380.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.7" y="702.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,389 samples, 30.16%)</title><rect x="83.0" y="675.0" width="355.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="86.0" y="686.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,388 samples, 30.14%)</title><rect x="83.1" y="659.0" width="355.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="86.1" y="670.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (2,377 samples, 30.01%)</title><rect x="83.1" y="643.0" width="354.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.1" y="654.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,047 samples, 25.84%)</title><rect x="83.1" y="627.0" width="304.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.1" y="638.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.05%)</title><rect x="84.5" y="611.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="84.8" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="84.8" y="579.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,025 samples, 25.56%)</title><rect x="85.1" y="611.0" width="301.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.1" y="622.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (54 samples, 0.68%)</title><rect x="85.1" y="595.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="88.1" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.06%)</title><rect x="86.7" y="579.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="89.7" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (37 samples, 0.47%)</title><rect x="87.6" y="579.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.6" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.03%)</title><rect x="87.8" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.8" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.03%)</title><rect x="87.8" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="90.8" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (12 samples, 0.15%)</title><rect x="88.1" y="563.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.1" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.04%)</title><rect x="88.9" y="547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.04%)</title><rect x="88.9" y="531.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.9" y="542.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="89.4" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.4" y="558.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.03%)</title><rect x="89.5" y="531.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="92.5" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (22 samples, 0.28%)</title><rect x="89.8" y="563.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="92.8" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (21 samples, 0.27%)</title><rect x="90.0" y="547.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.0" y="558.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (5 samples, 0.06%)</title><rect x="92.4" y="531.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.4" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,971 samples, 24.88%)</title><rect x="93.1" y="595.0" width="293.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="96.1" y="606.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,968 samples, 24.84%)</title><rect x="93.6" y="579.0" width="293.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.6" y="590.0">one/nio/net/Session.write</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="93.6" y="563.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="96.6" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="93.6" y="547.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="96.6" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,961 samples, 24.75%)</title><rect x="93.9" y="563.0" width="292.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="96.9" y="574.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,960 samples, 24.74%)</title><rect x="94.0" y="547.0" width="292.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.0" y="558.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>.annobin_send.c (1,913 samples, 24.15%)</title><rect x="95.3" y="531.0" width="285.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="98.3" y="542.0">.annobin_send.c</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (9 samples, 0.11%)</title><rect x="108.8" y="515.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="111.8" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,813 samples, 22.89%)</title><rect x="110.2" y="515.0" width="270.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="113.2" y="526.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (1,813 samples, 22.89%)</title><rect x="110.2" y="499.0" width="270.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="113.2" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,785 samples, 22.53%)</title><rect x="114.3" y="483.0" width="265.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="117.3" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,780 samples, 22.47%)</title><rect x="115.0" y="467.0" width="265.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="118.0" y="478.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (4 samples, 0.05%)</title><rect x="116.1" y="451.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="119.1" y="462.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="116.6" y="451.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="119.6" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (1,755 samples, 22.15%)</title><rect x="116.9" y="451.0" width="261.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="119.9" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (19 samples, 0.24%)</title><rect x="117.1" y="435.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="120.1" y="446.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (5 samples, 0.06%)</title><rect x="117.4" y="419.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="120.4" y="430.0"></text>
</g>
<g>
<title>sock_has_perm (12 samples, 0.15%)</title><rect x="118.1" y="419.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="121.1" y="430.0"></text>
</g>
<g>
<title>avc_has_perm (7 samples, 0.09%)</title><rect x="118.9" y="403.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="121.9" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,735 samples, 21.90%)</title><rect x="119.9" y="435.0" width="258.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="122.9" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="120.5" y="419.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="123.5" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="120.8" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="123.8" y="430.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.06%)</title><rect x="121.1" y="419.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="124.1" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="121.4" y="403.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="124.4" y="414.0"></text>
</g>
<g>
<title>release_sock (11 samples, 0.14%)</title><rect x="121.9" y="419.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="124.9" y="430.0"></text>
</g>
<g>
<title>tcp_release_cb (5 samples, 0.06%)</title><rect x="122.8" y="403.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="125.8" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,711 samples, 21.60%)</title><rect x="123.5" y="419.0" width="254.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="126.5" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (13 samples, 0.16%)</title><rect x="125.3" y="403.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="128.3" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (8 samples, 0.10%)</title><rect x="125.9" y="387.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="128.9" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1,590 samples, 20.07%)</title><rect x="127.2" y="403.0" width="236.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="130.2" y="414.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (1,588 samples, 20.05%)</title><rect x="127.5" y="387.0" width="236.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="130.5" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (1,554 samples, 19.62%)</title><rect x="129.5" y="371.0" width="231.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="132.5" y="382.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (1,501 samples, 18.95%)</title><rect x="131.2" y="355.0" width="223.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="134.2" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (12 samples, 0.15%)</title><rect x="132.0" y="339.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="135.0" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (6 samples, 0.08%)</title><rect x="132.9" y="323.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="135.9" y="334.0"></text>
</g>
<g>
<title>ip_local_out (258 samples, 3.26%)</title><rect x="133.9" y="339.0" width="38.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="136.9" y="350.0">ip_..</text>
</g>
<g>
<title>__ip_local_out (257 samples, 3.24%)</title><rect x="134.1" y="323.0" width="38.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="137.1" y="334.0">__i..</text>
</g>
<g>
<title>ip_send_check (8 samples, 0.10%)</title><rect x="134.4" y="307.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="137.4" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (247 samples, 3.12%)</title><rect x="135.6" y="307.0" width="36.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="138.6" y="318.0">nf_..</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (84 samples, 1.06%)</title><rect x="136.0" y="291.0" width="12.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="139.0" y="302.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (9 samples, 0.11%)</title><rect x="148.5" y="291.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="151.5" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (23 samples, 0.29%)</title><rect x="149.9" y="291.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="152.9" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (17 samples, 0.21%)</title><rect x="150.8" y="275.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="153.8" y="286.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (11 samples, 0.14%)</title><rect x="153.3" y="291.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="156.3" y="302.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (4 samples, 0.05%)</title><rect x="154.9" y="291.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="157.9" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (4 samples, 0.05%)</title><rect x="155.5" y="291.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="158.5" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (4 samples, 0.05%)</title><rect x="156.1" y="291.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="159.1" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (79 samples, 1.00%)</title><rect x="156.7" y="291.0" width="11.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="159.7" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (25 samples, 0.32%)</title><rect x="159.8" y="275.0" width="3.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="162.8" y="286.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (4 samples, 0.05%)</title><rect x="163.6" y="275.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="166.6" y="286.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (7 samples, 0.09%)</title><rect x="164.2" y="275.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="167.2" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (19 samples, 0.24%)</title><rect x="165.2" y="275.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="168.2" y="286.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="166.7" y="259.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="169.7" y="270.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (6 samples, 0.08%)</title><rect x="167.1" y="259.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="170.1" y="270.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (3 samples, 0.04%)</title><rect x="168.0" y="275.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="171.0" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (21 samples, 0.27%)</title><rect x="168.5" y="291.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="171.5" y="302.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (9 samples, 0.11%)</title><rect x="169.7" y="275.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="172.7" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (2 samples, 0.03%)</title><rect x="171.0" y="275.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="174.0" y="286.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (2 samples, 0.03%)</title><rect x="171.3" y="275.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="174.3" y="286.0"></text>
</g>
<g>
<title>selinux_ipv4_output (5 samples, 0.06%)</title><rect x="171.6" y="291.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="174.6" y="302.0"></text>
</g>
<g>
<title>ip_output (1,225 samples, 15.46%)</title><rect x="172.4" y="339.0" width="182.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="175.4" y="350.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (1,138 samples, 14.37%)</title><rect x="172.8" y="323.0" width="169.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="175.8" y="334.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (65 samples, 0.82%)</title><rect x="175.9" y="307.0" width="9.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="178.9" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (49 samples, 0.62%)</title><rect x="177.7" y="291.0" width="7.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="180.7" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (47 samples, 0.59%)</title><rect x="178.0" y="275.0" width="7.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="181.0" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (5 samples, 0.06%)</title><rect x="179.5" y="259.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="182.5" y="270.0"></text>
</g>
<g>
<title>netif_rx (21 samples, 0.27%)</title><rect x="180.3" y="259.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="183.3" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (21 samples, 0.27%)</title><rect x="180.3" y="243.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="183.3" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (9 samples, 0.11%)</title><rect x="182.0" y="227.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="185.0" y="238.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.03%)</title><rect x="183.4" y="259.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="186.4" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (8 samples, 0.10%)</title><rect x="183.8" y="259.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="186.8" y="270.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.05%)</title><rect x="185.0" y="291.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="188.0" y="302.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.04%)</title><rect x="185.2" y="275.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="188.2" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1,052 samples, 13.28%)</title><rect x="185.6" y="307.0" width="156.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="188.6" y="318.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.0 (1,052 samples, 13.28%)</title><rect x="185.6" y="291.0" width="156.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="188.6" y="302.0">do_softirq.part.0</text>
</g>
<g>
<title>do_softirq_own_stack (1,040 samples, 13.13%)</title><rect x="187.4" y="275.0" width="154.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="190.4" y="286.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (1,040 samples, 13.13%)</title><rect x="187.4" y="259.0" width="154.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="190.4" y="270.0">__softirqentry_text_..</text>
</g>
<g>
<title>net_rx_action (1,015 samples, 12.81%)</title><rect x="190.7" y="243.0" width="151.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="193.7" y="254.0">net_rx_action</text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="191.7" y="227.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="194.7" y="238.0"></text>
</g>
<g>
<title>process_backlog (1,006 samples, 12.70%)</title><rect x="192.0" y="227.0" width="149.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="195.0" y="238.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb_one_core (994 samples, 12.55%)</title><rect x="193.8" y="211.0" width="148.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="196.8" y="222.0">__netif_receive_skb..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.04%)</title><rect x="194.0" y="195.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="197.0" y="206.0"></text>
</g>
<g>
<title>ip_rcv (990 samples, 12.50%)</title><rect x="194.4" y="195.0" width="147.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="197.4" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (759 samples, 9.58%)</title><rect x="195.7" y="179.0" width="113.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="198.7" y="190.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (623 samples, 7.86%)</title><rect x="196.0" y="163.0" width="92.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="199.0" y="174.0">ip_local_de..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (617 samples, 7.79%)</title><rect x="196.9" y="147.0" width="91.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="199.9" y="158.0">ip_protocol..</text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.04%)</title><rect x="198.3" y="131.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="201.3" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (605 samples, 7.64%)</title><rect x="198.7" y="131.0" width="90.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="201.7" y="142.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (33 samples, 0.42%)</title><rect x="201.4" y="115.0" width="4.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="204.4" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (6 samples, 0.08%)</title><rect x="205.4" y="99.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="208.4" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock (4 samples, 0.05%)</title><rect x="206.3" y="115.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="209.3" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (8 samples, 0.10%)</title><rect x="206.9" y="115.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="209.9" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (6 samples, 0.08%)</title><rect x="207.2" y="99.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="210.2" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (6 samples, 0.08%)</title><rect x="207.2" y="83.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="210.2" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (540 samples, 6.82%)</title><rect x="208.1" y="115.0" width="80.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="211.1" y="126.0">tcp_v4_do..</text>
</g>
<g>
<title>tcp_rcv_established (537 samples, 6.78%)</title><rect x="208.6" y="99.0" width="79.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="211.6" y="110.0">tcp_rcv_e..</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.04%)</title><rect x="209.6" y="83.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="212.6" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.05%)</title><rect x="210.0" y="83.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="213.0" y="94.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.05%)</title><rect x="210.0" y="67.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="213.0" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="210.2" y="51.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="213.2" y="62.0"></text>
</g>
<g>
<title>tcp_ack (138 samples, 1.74%)</title><rect x="210.6" y="83.0" width="20.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="213.6" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (48 samples, 0.61%)</title><rect x="215.1" y="67.0" width="7.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="218.1" y="78.0"></text>
</g>
<g>
<title>__slab_free (15 samples, 0.19%)</title><rect x="215.6" y="51.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="218.6" y="62.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.04%)</title><rect x="217.8" y="51.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="220.8" y="62.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="218.2" y="51.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="221.2" y="62.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="218.2" y="35.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="221.2" y="46.0"></text>
</g>
<g>
<title>skb_release_data (25 samples, 0.32%)</title><rect x="218.5" y="51.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="221.5" y="62.0"></text>
</g>
<g>
<title>__list_del_entry_valid (2 samples, 0.03%)</title><rect x="222.3" y="67.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="225.3" y="78.0"></text>
</g>
<g>
<title>bictcp_acked (4 samples, 0.05%)</title><rect x="222.6" y="67.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="225.6" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (5 samples, 0.06%)</title><rect x="223.2" y="67.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="226.2" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (11 samples, 0.14%)</title><rect x="224.0" y="67.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="227.0" y="78.0"></text>
</g>
<g>
<title>__slab_free (8 samples, 0.10%)</title><rect x="224.5" y="51.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="227.5" y="62.0"></text>
</g>
<g>
<title>ktime_get_seconds (4 samples, 0.05%)</title><rect x="225.7" y="67.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="228.7" y="78.0"></text>
</g>
<g>
<title>rb_erase (4 samples, 0.05%)</title><rect x="226.3" y="67.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="229.3" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (5 samples, 0.06%)</title><rect x="227.2" y="67.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="230.2" y="78.0"></text>
</g>
<g>
<title>tcp_newly_delivered (4 samples, 0.05%)</title><rect x="228.1" y="67.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="231.1" y="78.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (4 samples, 0.05%)</title><rect x="228.8" y="67.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="231.8" y="78.0"></text>
</g>
<g>
<title>tcp_rate_gen (3 samples, 0.04%)</title><rect x="229.4" y="67.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="232.4" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (7 samples, 0.09%)</title><rect x="230.2" y="67.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="233.2" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (5 samples, 0.06%)</title><rect x="231.2" y="83.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="234.2" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (375 samples, 4.73%)</title><rect x="231.9" y="83.0" width="55.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="234.9" y="94.0">tcp_d..</text>
</g>
<g>
<title>dst_release (8 samples, 0.10%)</title><rect x="233.0" y="67.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="236.0" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (352 samples, 4.44%)</title><rect x="234.2" y="67.0" width="52.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="237.2" y="78.0">sock_..</text>
</g>
<g>
<title>__wake_up_common_lock (341 samples, 4.30%)</title><rect x="235.8" y="51.0" width="50.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="238.8" y="62.0">__wak..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (337 samples, 4.25%)</title><rect x="236.4" y="35.0" width="50.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="239.4" y="46.0">_raw_..</text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.04%)</title><rect x="286.6" y="67.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="289.6" y="78.0"></text>
</g>
<g>
<title>tcp_queue_rcv (5 samples, 0.06%)</title><rect x="287.1" y="67.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="290.1" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.05%)</title><rect x="287.8" y="83.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="290.8" y="94.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.04%)</title><rect x="287.9" y="67.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="290.9" y="78.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="287.9" y="51.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="290.9" y="62.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.03%)</title><rect x="288.5" y="115.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="291.5" y="126.0"></text>
</g>
<g>
<title>nf_hook_slow (134 samples, 1.69%)</title><rect x="288.8" y="163.0" width="20.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="291.8" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (100 samples, 1.26%)</title><rect x="290.0" y="147.0" width="14.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="293.0" y="158.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="301.8" y="131.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="304.8" y="142.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (9 samples, 0.11%)</title><rect x="302.1" y="131.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="305.1" y="142.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (10 samples, 0.13%)</title><rect x="303.4" y="131.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="306.4" y="142.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (5 samples, 0.06%)</title><rect x="304.9" y="147.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="307.9" y="158.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (6 samples, 0.08%)</title><rect x="305.7" y="147.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="308.7" y="158.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (4 samples, 0.05%)</title><rect x="306.6" y="147.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="309.6" y="158.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (5 samples, 0.06%)</title><rect x="307.2" y="147.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="310.2" y="158.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (5 samples, 0.06%)</title><rect x="307.2" y="131.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="310.2" y="142.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (4 samples, 0.05%)</title><rect x="308.1" y="147.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="311.1" y="158.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (14 samples, 0.18%)</title><rect x="308.8" y="179.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="311.8" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish (8 samples, 0.10%)</title><rect x="310.9" y="179.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="313.9" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (6 samples, 0.08%)</title><rect x="311.2" y="163.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="314.2" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (200 samples, 2.52%)</title><rect x="312.1" y="179.0" width="29.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="315.1" y="190.0">nf..</text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (13 samples, 0.16%)</title><rect x="314.2" y="163.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="317.2" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (142 samples, 1.79%)</title><rect x="316.1" y="163.0" width="21.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="319.1" y="174.0">i..</text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.03%)</title><rect x="337.2" y="163.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="340.2" y="174.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (8 samples, 0.10%)</title><rect x="337.5" y="163.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="340.5" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (3 samples, 0.04%)</title><rect x="338.7" y="163.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="341.7" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (3 samples, 0.04%)</title><rect x="339.2" y="163.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="342.2" y="174.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (8 samples, 0.10%)</title><rect x="339.6" y="163.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="342.6" y="174.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (7 samples, 0.09%)</title><rect x="340.8" y="163.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="343.8" y="174.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (2 samples, 0.03%)</title><rect x="341.6" y="147.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="344.6" y="158.0"></text>
</g>
<g>
<title>run_rebalance_domains (3 samples, 0.04%)</title><rect x="341.9" y="243.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="344.9" y="254.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="342.0" y="227.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="345.0" y="238.0"></text>
</g>
<g>
<title>ip_finish_output (10 samples, 0.13%)</title><rect x="342.3" y="323.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="345.3" y="334.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.04%)</title><rect x="343.4" y="307.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="346.4" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (74 samples, 0.93%)</title><rect x="343.8" y="323.0" width="11.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="346.8" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (28 samples, 0.35%)</title><rect x="343.8" y="307.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="346.8" y="318.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (3 samples, 0.04%)</title><rect x="348.0" y="307.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="351.0" y="318.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (6 samples, 0.08%)</title><rect x="348.4" y="307.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="351.4" y="318.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (15 samples, 0.19%)</title><rect x="349.3" y="307.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="352.3" y="318.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (14 samples, 0.18%)</title><rect x="349.5" y="291.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="352.5" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (7 samples, 0.09%)</title><rect x="351.5" y="307.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="354.5" y="318.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (3 samples, 0.04%)</title><rect x="352.0" y="291.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="355.0" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute (11 samples, 0.14%)</title><rect x="352.6" y="307.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="355.6" y="318.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (4 samples, 0.05%)</title><rect x="354.2" y="307.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="357.2" y="318.0"></text>
</g>
<g>
<title>__skb_clone (7 samples, 0.09%)</title><rect x="354.8" y="355.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="357.8" y="366.0"></text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.04%)</title><rect x="355.9" y="355.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="358.9" y="366.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.03%)</title><rect x="356.3" y="355.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="359.3" y="366.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (9 samples, 0.11%)</title><rect x="356.6" y="355.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="359.6" y="366.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.03%)</title><rect x="358.0" y="355.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="361.0" y="366.0"></text>
</g>
<g>
<title>skb_clone (6 samples, 0.08%)</title><rect x="358.3" y="355.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="361.3" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (3 samples, 0.04%)</title><rect x="359.7" y="355.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="362.7" y="366.0"></text>
</g>
<g>
<title>__list_add_valid (2 samples, 0.03%)</title><rect x="359.9" y="339.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="362.9" y="350.0"></text>
</g>
<g>
<title>tcp_v4_send_check (5 samples, 0.06%)</title><rect x="360.2" y="355.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="363.2" y="366.0"></text>
</g>
<g>
<title>ktime_get (7 samples, 0.09%)</title><rect x="360.9" y="371.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="363.9" y="382.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.08%)</title><rect x="361.1" y="355.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="364.1" y="366.0"></text>
</g>
<g>
<title>tcp_chrono_stop (3 samples, 0.04%)</title><rect x="362.0" y="371.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="365.0" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (10 samples, 0.13%)</title><rect x="362.4" y="371.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="365.4" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.06%)</title><rect x="362.7" y="355.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="365.7" y="366.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.06%)</title><rect x="362.7" y="339.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="365.7" y="350.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.04%)</title><rect x="363.5" y="355.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="366.5" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (10 samples, 0.13%)</title><rect x="364.1" y="403.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="367.1" y="414.0"></text>
</g>
<g>
<title>copyin (9 samples, 0.11%)</title><rect x="364.1" y="387.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="367.1" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (9 samples, 0.11%)</title><rect x="364.1" y="371.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="367.1" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (54 samples, 0.68%)</title><rect x="365.5" y="403.0" width="8.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="368.5" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (49 samples, 0.62%)</title><rect x="366.3" y="387.0" width="7.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="369.3" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (17 samples, 0.21%)</title><rect x="366.7" y="371.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="369.7" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (17 samples, 0.21%)</title><rect x="366.7" y="355.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="369.7" y="366.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.04%)</title><rect x="368.2" y="339.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="371.2" y="350.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.04%)</title><rect x="368.8" y="339.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="371.8" y="350.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (20 samples, 0.25%)</title><rect x="369.3" y="371.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="372.3" y="382.0"></text>
</g>
<g>
<title>should_failslab (3 samples, 0.04%)</title><rect x="371.8" y="355.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="374.8" y="366.0"></text>
</g>
<g>
<title>ksize (9 samples, 0.11%)</title><rect x="372.3" y="371.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="375.3" y="382.0"></text>
</g>
<g>
<title>skb_entail (5 samples, 0.06%)</title><rect x="373.6" y="403.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="376.6" y="414.0"></text>
</g>
<g>
<title>tcp_chrono_start (2 samples, 0.03%)</title><rect x="374.0" y="387.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="377.0" y="398.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.04%)</title><rect x="374.3" y="403.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="377.3" y="414.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.04%)</title><rect x="374.8" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="377.8" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (19 samples, 0.24%)</title><rect x="375.2" y="403.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="378.2" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (15 samples, 0.19%)</title><rect x="375.8" y="387.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="378.8" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (7 samples, 0.09%)</title><rect x="376.6" y="371.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="379.6" y="382.0"></text>
</g>
<g>
<title>tcp_established_options (3 samples, 0.04%)</title><rect x="377.6" y="371.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="380.6" y="382.0"></text>
</g>
<g>
<title>sockfd_lookup_light (12 samples, 0.15%)</title><rect x="378.4" y="451.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="381.4" y="462.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.14%)</title><rect x="378.5" y="435.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="381.5" y="446.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.10%)</title><rect x="379.0" y="419.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="382.0" y="430.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="380.4" y="531.0" width="4.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="383.4" y="542.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.35%)</title><rect x="380.4" y="515.0" width="4.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="383.4" y="526.0"></text>
</g>
<g>
<title>.annobin_send.c (3 samples, 0.04%)</title><rect x="380.4" y="499.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="383.4" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (23 samples, 0.29%)</title><rect x="380.9" y="499.0" width="3.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="383.9" y="510.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="381.5" y="483.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="384.5" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (16 samples, 0.20%)</title><rect x="381.9" y="483.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="384.9" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.06%)</title><rect x="382.4" y="467.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="385.4" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (8 samples, 0.10%)</title><rect x="383.1" y="467.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="386.1" y="478.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="384.3" y="499.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="387.3" y="510.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (9 samples, 0.11%)</title><rect x="384.6" y="531.0" width="1.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="387.6" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.06%)</title><rect x="386.0" y="563.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="389.0" y="574.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.05%)</title><rect x="386.1" y="547.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="389.1" y="558.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.05%)</title><rect x="386.1" y="531.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="389.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.06%)</title><rect x="386.7" y="611.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="387.1" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="390.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="387.1" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="390.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.isHttp11 (2 samples, 0.03%)</title><rect x="387.4" y="611.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="390.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (2 samples, 0.03%)</title><rect x="387.7" y="611.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (16 samples, 0.20%)</title><rect x="388.0" y="627.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="391.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.10%)</title><rect x="388.3" y="611.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.10%)</title><rect x="388.3" y="595.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="391.3" y="606.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.04%)</title><rect x="389.1" y="579.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="392.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (4 samples, 0.05%)</title><rect x="389.5" y="611.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="392.5" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.05%)</title><rect x="389.5" y="595.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (314 samples, 3.96%)</title><rect x="390.4" y="627.0" width="46.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="393.4" y="638.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.11%)</title><rect x="391.6" y="611.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.6" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (9 samples, 0.11%)</title><rect x="391.6" y="595.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.6" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.10%)</title><rect x="391.8" y="579.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="394.8" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.10%)</title><rect x="391.8" y="563.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.8" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="392.4" y="547.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="395.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="392.4" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="395.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="392.7" y="531.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="395.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (285 samples, 3.60%)</title><rect x="393.0" y="611.0" width="42.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.0" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (285 samples, 3.60%)</title><rect x="393.0" y="595.0" width="42.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="396.0" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (275 samples, 3.47%)</title><rect x="393.1" y="579.0" width="41.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="396.1" y="590.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (272 samples, 3.43%)</title><rect x="393.1" y="563.0" width="40.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="396.1" y="574.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (272 samples, 3.43%)</title><rect x="393.1" y="547.0" width="40.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.1" y="558.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (17 samples, 0.21%)</title><rect x="397.3" y="531.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="400.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (17 samples, 0.21%)</title><rect x="397.3" y="515.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="400.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (80 samples, 1.01%)</title><rect x="399.8" y="531.0" width="11.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="402.8" y="542.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="411.3" y="515.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="414.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (5 samples, 0.06%)</title><rect x="411.9" y="531.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="414.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.04%)</title><rect x="412.2" y="515.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.2" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="412.3" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="415.3" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="412.3" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="415.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (138 samples, 1.74%)</title><rect x="412.6" y="531.0" width="20.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="415.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (133 samples, 1.68%)</title><rect x="413.4" y="515.0" width="19.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="416.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (115 samples, 1.45%)</title><rect x="416.0" y="499.0" width="17.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="419.0" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (8 samples, 0.10%)</title><rect x="416.8" y="483.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="419.8" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (7 samples, 0.09%)</title><rect x="418.0" y="483.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="421.0" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (57 samples, 0.72%)</title><rect x="419.0" y="483.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="422.0" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (18 samples, 0.23%)</title><rect x="424.8" y="467.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="427.8" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.05%)</title><rect x="426.2" y="451.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="429.2" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (5 samples, 0.06%)</title><rect x="426.8" y="451.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="429.8" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (38 samples, 0.48%)</title><rect x="427.5" y="483.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="430.5" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (32 samples, 0.40%)</title><rect x="428.3" y="467.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="431.3" y="478.0"></text>
</g>
<g>
<title>vectorizedMismatch (28 samples, 0.35%)</title><rect x="428.9" y="451.0" width="4.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="431.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (3 samples, 0.04%)</title><rect x="433.2" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="436.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (2 samples, 0.03%)</title><rect x="433.8" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.8" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="433.8" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (9 samples, 0.11%)</title><rect x="434.1" y="579.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="437.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getSizeOfFlushedRow (5 samples, 0.06%)</title><rect x="434.7" y="563.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="437.7" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (5 samples, 0.06%)</title><rect x="434.7" y="547.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="437.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (12 samples, 0.15%)</title><rect x="435.4" y="611.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (12 samples, 0.15%)</title><rect x="435.4" y="595.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (12 samples, 0.15%)</title><rect x="435.4" y="579.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="438.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (6 samples, 0.08%)</title><rect x="435.4" y="563.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="438.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (6 samples, 0.08%)</title><rect x="436.3" y="563.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.&lt;init&gt; (6 samples, 0.08%)</title><rect x="436.3" y="547.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="439.3" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.06%)</title><rect x="436.5" y="531.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="439.5" y="542.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.06%)</title><rect x="436.5" y="515.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="439.5" y="526.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.06%)</title><rect x="436.5" y="499.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="439.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (10 samples, 0.13%)</title><rect x="437.2" y="643.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="440.2" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.11%)</title><rect x="437.3" y="627.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="440.3" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.08%)</title><rect x="437.3" y="611.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.03%)</title><rect x="437.9" y="595.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="440.9" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.04%)</title><rect x="438.2" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="441.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="438.4" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="441.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (68 samples, 0.86%)</title><rect x="438.8" y="675.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="441.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (31 samples, 0.39%)</title><rect x="441.2" y="659.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="444.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (21 samples, 0.27%)</title><rect x="442.7" y="643.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (21 samples, 0.27%)</title><rect x="442.7" y="627.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="445.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.03%)</title><rect x="442.9" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="445.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (18 samples, 0.23%)</title><rect x="443.2" y="611.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="446.2" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.25%)</title><rect x="445.8" y="659.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="448.8" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.25%)</title><rect x="445.8" y="643.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="448.8" y="654.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (2 samples, 0.03%)</title><rect x="448.5" y="627.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="451.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.09%)</title><rect x="449.3" y="675.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.3" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.06%)</title><rect x="449.6" y="659.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.6" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="449.7" y="643.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.7" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="449.7" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="450.0" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.0" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="450.0" y="611.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="453.0" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.03%)</title><rect x="450.0" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="453.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.21%)</title><rect x="450.3" y="675.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="453.3" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.16%)</title><rect x="450.9" y="659.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.9" y="670.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (2 samples, 0.03%)</title><rect x="452.5" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="455.5" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (307 samples, 3.88%)</title><rect x="452.8" y="691.0" width="45.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="455.8" y="702.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (304 samples, 3.84%)</title><rect x="453.1" y="675.0" width="45.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.1" y="686.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.04%)</title><rect x="453.6" y="659.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="456.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.48%)</title><rect x="454.0" y="659.0" width="5.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="457.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.48%)</title><rect x="454.0" y="643.0" width="5.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="457.0" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (31 samples, 0.39%)</title><rect x="454.0" y="627.0" width="4.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="457.0" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="454.2" y="611.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="457.2" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="454.6" y="611.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="457.6" y="622.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (6 samples, 0.08%)</title><rect x="454.9" y="611.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="457.9" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (19 samples, 0.24%)</title><rect x="455.8" y="611.0" width="2.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="458.8" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.06%)</title><rect x="456.0" y="595.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="459.0" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (7 samples, 0.09%)</title><rect x="456.7" y="595.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="459.7" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (6 samples, 0.08%)</title><rect x="457.8" y="595.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="460.8" y="606.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.04%)</title><rect x="458.8" y="627.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="461.8" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.04%)</title><rect x="459.2" y="627.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="462.2" y="638.0"></text>
</g>
<g>
<title>__libc_recv (257 samples, 3.24%)</title><rect x="459.7" y="659.0" width="38.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="462.7" y="670.0">__l..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (193 samples, 2.44%)</title><rect x="469.2" y="643.0" width="28.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="472.2" y="654.0">en..</text>
</g>
<g>
<title>do_syscall_64 (193 samples, 2.44%)</title><rect x="469.2" y="627.0" width="28.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="472.2" y="638.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (160 samples, 2.02%)</title><rect x="474.1" y="611.0" width="23.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="477.1" y="622.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (152 samples, 1.92%)</title><rect x="475.3" y="595.0" width="22.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="478.3" y="606.0">_..</text>
</g>
<g>
<title>fput_many (4 samples, 0.05%)</title><rect x="475.5" y="579.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="478.5" y="590.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.04%)</title><rect x="476.1" y="579.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="479.1" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (103 samples, 1.30%)</title><rect x="476.5" y="579.0" width="15.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="479.5" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (103 samples, 1.30%)</title><rect x="476.5" y="563.0" width="15.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="479.5" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.10%)</title><rect x="479.6" y="547.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="482.6" y="558.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.09%)</title><rect x="479.6" y="531.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="482.6" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (7 samples, 0.09%)</title><rect x="479.6" y="515.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="482.6" y="526.0"></text>
</g>
<g>
<title>sock_rfree (7 samples, 0.09%)</title><rect x="479.6" y="499.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="482.6" y="510.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.05%)</title><rect x="481.1" y="547.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="484.1" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.05%)</title><rect x="481.1" y="531.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="484.1" y="542.0"></text>
</g>
<g>
<title>release_sock (8 samples, 0.10%)</title><rect x="481.7" y="547.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="484.7" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.08%)</title><rect x="482.0" y="531.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="485.0" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (40 samples, 0.50%)</title><rect x="482.9" y="547.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="485.9" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (38 samples, 0.48%)</title><rect x="483.2" y="531.0" width="5.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="486.2" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (17 samples, 0.21%)</title><rect x="483.2" y="515.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="486.2" y="526.0"></text>
</g>
<g>
<title>copyout (15 samples, 0.19%)</title><rect x="483.5" y="499.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="486.5" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (15 samples, 0.19%)</title><rect x="483.5" y="483.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="486.5" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (21 samples, 0.27%)</title><rect x="485.8" y="515.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="488.8" y="526.0"></text>
</g>
<g>
<title>__check_object_size (19 samples, 0.24%)</title><rect x="486.1" y="499.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="489.1" y="510.0"></text>
</g>
<g>
<title>__check_heap_object (3 samples, 0.04%)</title><rect x="487.4" y="483.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="490.4" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.08%)</title><rect x="487.8" y="483.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="490.8" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.04%)</title><rect x="488.9" y="547.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="491.9" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (17 samples, 0.21%)</title><rect x="489.3" y="547.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="492.3" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (14 samples, 0.18%)</title><rect x="489.8" y="531.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="492.8" y="542.0"></text>
</g>
<g>
<title>ktime_get (11 samples, 0.14%)</title><rect x="490.2" y="515.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="493.2" y="526.0"></text>
</g>
<g>
<title>read_tsc (9 samples, 0.11%)</title><rect x="490.5" y="499.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="493.5" y="510.0"></text>
</g>
<g>
<title>sock_recvmsg (26 samples, 0.33%)</title><rect x="491.9" y="579.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="494.9" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (26 samples, 0.33%)</title><rect x="491.9" y="563.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="494.9" y="574.0"></text>
</g>
<g>
<title>sock_has_perm (25 samples, 0.32%)</title><rect x="492.0" y="547.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="495.0" y="558.0"></text>
</g>
<g>
<title>avc_has_perm (11 samples, 0.14%)</title><rect x="494.1" y="531.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="497.1" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (15 samples, 0.19%)</title><rect x="495.7" y="579.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="498.7" y="590.0"></text>
</g>
<g>
<title>__fget_light (14 samples, 0.18%)</title><rect x="495.9" y="563.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="498.9" y="574.0"></text>
</g>
<g>
<title>__fget (12 samples, 0.15%)</title><rect x="496.2" y="547.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="499.2" y="558.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.04%)</title><rect x="498.0" y="659.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="501.0" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.08%)</title><rect x="498.6" y="707.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="501.6" y="718.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.08%)</title><rect x="498.6" y="691.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="501.6" y="702.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.08%)</title><rect x="498.6" y="675.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="501.6" y="686.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=26109] (1,997 samples, 25.21%)</title><rect x="499.6" y="755.0" width="297.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="502.6" y="766.0">[NIO Selector #1 tid=26109]</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.05%)</title><rect x="499.6" y="739.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="502.6" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.04%)</title><rect x="499.8" y="723.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="502.8" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.04%)</title><rect x="499.8" y="707.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="502.8" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="499.8" y="691.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="502.8" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (10 samples, 0.13%)</title><rect x="500.4" y="739.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="503.4" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,982 samples, 25.02%)</title><rect x="501.8" y="739.0" width="295.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="504.8" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (308 samples, 3.89%)</title><rect x="502.0" y="723.0" width="45.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.0" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (6 samples, 0.08%)</title><rect x="502.3" y="707.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="505.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.04%)</title><rect x="502.7" y="691.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (300 samples, 3.79%)</title><rect x="503.2" y="707.0" width="44.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="506.2" y="718.0">one/..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (280 samples, 3.53%)</title><rect x="504.2" y="691.0" width="41.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="507.2" y="702.0">.an..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (115 samples, 1.45%)</title><rect x="528.8" y="675.0" width="17.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="531.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (115 samples, 1.45%)</title><rect x="528.8" y="659.0" width="17.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="531.8" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (98 samples, 1.24%)</title><rect x="531.3" y="643.0" width="14.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="534.3" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (93 samples, 1.17%)</title><rect x="532.1" y="627.0" width="13.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="535.1" y="638.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.10%)</title><rect x="532.7" y="611.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="535.7" y="622.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.08%)</title><rect x="533.0" y="595.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="536.0" y="606.0"></text>
</g>
<g>
<title>ep_poll (64 samples, 0.81%)</title><rect x="533.9" y="611.0" width="9.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="536.9" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (39 samples, 0.49%)</title><rect x="536.8" y="595.0" width="5.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="539.8" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (19 samples, 0.24%)</title><rect x="538.6" y="579.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="541.6" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (12 samples, 0.15%)</title><rect x="539.7" y="563.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="542.7" y="574.0"></text>
</g>
<g>
<title>sock_poll (12 samples, 0.15%)</title><rect x="539.7" y="547.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="542.7" y="558.0"></text>
</g>
<g>
<title>tcp_poll (8 samples, 0.10%)</title><rect x="540.3" y="531.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="543.3" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.05%)</title><rect x="540.9" y="515.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="543.9" y="526.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="541.5" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="544.5" y="590.0"></text>
</g>
<g>
<title>mutex_unlock (6 samples, 0.08%)</title><rect x="541.8" y="579.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="544.8" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.06%)</title><rect x="542.7" y="595.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="545.7" y="606.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.06%)</title><rect x="542.7" y="579.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="545.7" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.05%)</title><rect x="542.8" y="563.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="545.8" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.04%)</title><rect x="543.0" y="547.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="546.0" y="558.0"></text>
</g>
<g>
<title>fput_many (17 samples, 0.21%)</title><rect x="543.4" y="611.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="546.4" y="622.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.03%)</title><rect x="545.9" y="691.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="548.9" y="702.0"></text>
</g>
<g>
<title>__GI___clock_gettime (4 samples, 0.05%)</title><rect x="546.2" y="691.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="549.2" y="702.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="546.5" y="675.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="549.5" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.05%)</title><rect x="546.8" y="691.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="549.8" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,673 samples, 21.12%)</title><rect x="547.9" y="723.0" width="249.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="550.9" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,661 samples, 20.97%)</title><rect x="548.9" y="707.0" width="247.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="551.9" y="718.0">one/nio/http/HttpSession.processR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,497 samples, 18.90%)</title><rect x="549.7" y="691.0" width="222.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.7" y="702.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,394 samples, 17.60%)</title><rect x="556.2" y="675.0" width="207.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="559.2" y="686.0">one/nio/http/HttpSession.ha..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,390 samples, 17.55%)</title><rect x="556.8" y="659.0" width="207.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.8" y="670.0">one/nio/http/HttpServer.han..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1,381 samples, 17.43%)</title><rect x="556.8" y="643.0" width="205.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="559.8" y="654.0">RequestHandler0_entity.hand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,203 samples, 15.19%)</title><rect x="557.0" y="627.0" width="179.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.0" y="638.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,184 samples, 14.95%)</title><rect x="559.0" y="611.0" width="176.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.0" y="622.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (26 samples, 0.33%)</title><rect x="559.0" y="595.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (21 samples, 0.27%)</title><rect x="559.8" y="579.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="562.8" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.09%)</title><rect x="559.9" y="563.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="562.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.16%)</title><rect x="561.0" y="563.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="564.0" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.16%)</title><rect x="561.0" y="547.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="564.0" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.06%)</title><rect x="562.0" y="531.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (4 samples, 0.05%)</title><rect x="562.0" y="515.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="565.0" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,158 samples, 14.62%)</title><rect x="562.9" y="595.0" width="172.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.9" y="606.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,156 samples, 14.59%)</title><rect x="563.2" y="579.0" width="172.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="566.2" y="590.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,149 samples, 14.50%)</title><rect x="563.4" y="563.0" width="171.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="566.4" y="574.0">one/nio/net/Session$Ar..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,147 samples, 14.48%)</title><rect x="563.7" y="547.0" width="170.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="566.7" y="558.0">one/nio/net/NativeSock..</text>
</g>
<g>
<title>.annobin_send.c (1,118 samples, 14.11%)</title><rect x="564.7" y="531.0" width="166.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="567.7" y="542.0">.annobin_send.c</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.05%)</title><rect x="572.4" y="515.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="575.4" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,062 samples, 13.41%)</title><rect x="573.0" y="515.0" width="158.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="576.0" y="526.0">entry_SYSCALL_64_aft..</text>
</g>
<g>
<title>do_syscall_64 (1,062 samples, 13.41%)</title><rect x="573.0" y="499.0" width="158.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="576.0" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,044 samples, 13.18%)</title><rect x="575.7" y="483.0" width="155.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="578.7" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,043 samples, 13.17%)</title><rect x="575.9" y="467.0" width="155.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="578.9" y="478.0">__sys_sendto</text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="576.6" y="451.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="579.6" y="462.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="577.1" y="451.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="580.1" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (1,031 samples, 13.01%)</title><rect x="577.4" y="451.0" width="153.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="580.4" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (13 samples, 0.16%)</title><rect x="577.4" y="435.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="580.4" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (13 samples, 0.16%)</title><rect x="577.4" y="419.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="580.4" y="430.0"></text>
</g>
<g>
<title>avc_has_perm (8 samples, 0.10%)</title><rect x="578.1" y="403.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="581.1" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,018 samples, 12.85%)</title><rect x="579.3" y="435.0" width="151.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="582.3" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="579.6" y="419.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="582.6" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,014 samples, 12.80%)</title><rect x="579.9" y="419.0" width="151.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="582.9" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="581.4" y="403.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="584.4" y="414.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (942 samples, 11.89%)</title><rect x="581.8" y="403.0" width="140.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="584.8" y="414.0">__tcp_push_pending..</text>
</g>
<g>
<title>tcp_write_xmit (942 samples, 11.89%)</title><rect x="581.8" y="387.0" width="140.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="584.8" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (917 samples, 11.58%)</title><rect x="582.9" y="371.0" width="136.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="585.9" y="382.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (885 samples, 11.17%)</title><rect x="585.1" y="355.0" width="131.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="588.1" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.05%)</title><rect x="585.7" y="339.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="588.7" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.04%)</title><rect x="585.8" y="323.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="588.8" y="334.0"></text>
</g>
<g>
<title>ip_local_out (139 samples, 1.75%)</title><rect x="586.3" y="339.0" width="20.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="589.3" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (139 samples, 1.75%)</title><rect x="586.3" y="323.0" width="20.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="589.3" y="334.0"></text>
</g>
<g>
<title>ip_send_check (3 samples, 0.04%)</title><rect x="586.4" y="307.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="589.4" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (135 samples, 1.70%)</title><rect x="586.9" y="307.0" width="20.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="589.9" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (50 samples, 0.63%)</title><rect x="587.3" y="291.0" width="7.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="590.3" y="302.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (3 samples, 0.04%)</title><rect x="594.8" y="291.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="597.8" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (15 samples, 0.19%)</title><rect x="595.2" y="291.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="598.2" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (10 samples, 0.13%)</title><rect x="596.0" y="275.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="599.0" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="597.2" y="259.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="600.2" y="270.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (3 samples, 0.04%)</title><rect x="597.5" y="291.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="600.5" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (2 samples, 0.03%)</title><rect x="598.2" y="291.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="601.2" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (39 samples, 0.49%)</title><rect x="598.5" y="291.0" width="5.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="601.5" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (11 samples, 0.14%)</title><rect x="599.0" y="275.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="602.0" y="286.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (2 samples, 0.03%)</title><rect x="600.6" y="275.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="603.6" y="286.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (5 samples, 0.06%)</title><rect x="600.9" y="275.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="603.9" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (12 samples, 0.15%)</title><rect x="601.6" y="275.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="604.6" y="286.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="602.2" y="259.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="605.2" y="270.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (5 samples, 0.06%)</title><rect x="602.7" y="259.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="605.7" y="270.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (6 samples, 0.08%)</title><rect x="603.4" y="275.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="606.4" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (15 samples, 0.19%)</title><rect x="604.3" y="291.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="607.3" y="302.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (10 samples, 0.13%)</title><rect x="604.6" y="275.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="607.6" y="286.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (2 samples, 0.03%)</title><rect x="606.3" y="275.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="609.3" y="286.0"></text>
</g>
<g>
<title>selinux_ipv4_output (3 samples, 0.04%)</title><rect x="606.6" y="291.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="609.6" y="302.0"></text>
</g>
<g>
<title>ip_output (738 samples, 9.32%)</title><rect x="607.0" y="339.0" width="109.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="610.0" y="350.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (691 samples, 8.72%)</title><rect x="608.0" y="323.0" width="103.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="611.0" y="334.0">ip_finish_ou..</text>
</g>
<g>
<title>__dev_queue_xmit (52 samples, 0.66%)</title><rect x="610.6" y="307.0" width="7.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="613.6" y="318.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="613.1" y="291.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="616.1" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (33 samples, 0.42%)</title><rect x="613.4" y="291.0" width="4.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="616.4" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (33 samples, 0.42%)</title><rect x="613.4" y="275.0" width="4.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="616.4" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="614.4" y="259.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="617.4" y="270.0"></text>
</g>
<g>
<title>netif_rx (15 samples, 0.19%)</title><rect x="614.7" y="259.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="617.7" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (14 samples, 0.18%)</title><rect x="614.9" y="243.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="617.9" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (10 samples, 0.13%)</title><rect x="615.5" y="227.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="618.5" y="238.0"></text>
</g>
<g>
<title>tcp_wfree (7 samples, 0.09%)</title><rect x="617.3" y="259.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="620.3" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (622 samples, 7.85%)</title><rect x="618.3" y="307.0" width="92.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="621.3" y="318.0">__local_bh_..</text>
</g>
<g>
<title>do_softirq.part.0 (621 samples, 7.84%)</title><rect x="618.5" y="291.0" width="92.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="621.5" y="302.0">do_softirq...</text>
</g>
<g>
<title>do_softirq_own_stack (617 samples, 7.79%)</title><rect x="619.1" y="275.0" width="91.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="622.1" y="286.0">do_softirq_..</text>
</g>
<g>
<title>__softirqentry_text_start (617 samples, 7.79%)</title><rect x="619.1" y="259.0" width="91.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="622.1" y="270.0">__softirqen..</text>
</g>
<g>
<title>net_rx_action (599 samples, 7.56%)</title><rect x="621.7" y="243.0" width="89.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="624.7" y="254.0">net_rx_act..</text>
</g>
<g>
<title>process_backlog (592 samples, 7.47%)</title><rect x="622.8" y="227.0" width="88.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="625.8" y="238.0">process_ba..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (582 samples, 7.35%)</title><rect x="624.3" y="211.0" width="86.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="627.3" y="222.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.05%)</title><rect x="624.3" y="195.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="627.3" y="206.0"></text>
</g>
<g>
<title>ip_rcv (578 samples, 7.30%)</title><rect x="624.9" y="195.0" width="86.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="627.9" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (436 samples, 5.50%)</title><rect x="625.9" y="179.0" width="65.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="628.9" y="190.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (356 samples, 4.49%)</title><rect x="627.1" y="163.0" width="53.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="630.1" y="174.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (352 samples, 4.44%)</title><rect x="627.7" y="147.0" width="52.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="630.7" y="158.0">ip_pr..</text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.04%)</title><rect x="628.4" y="131.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="631.4" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (344 samples, 4.34%)</title><rect x="628.9" y="131.0" width="51.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="631.9" y="142.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (21 samples, 0.27%)</title><rect x="630.2" y="115.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="633.2" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (11 samples, 0.14%)</title><rect x="631.7" y="99.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="634.7" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock (4 samples, 0.05%)</title><rect x="633.4" y="115.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="636.4" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.06%)</title><rect x="634.0" y="115.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="637.0" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (5 samples, 0.06%)</title><rect x="634.0" y="99.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="637.0" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (3 samples, 0.04%)</title><rect x="634.3" y="83.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="637.3" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (304 samples, 3.84%)</title><rect x="634.9" y="115.0" width="45.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="637.9" y="126.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (303 samples, 3.82%)</title><rect x="635.0" y="99.0" width="45.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="638.0" y="110.0">tcp_..</text>
</g>
<g>
<title>tcp_ack (77 samples, 0.97%)</title><rect x="636.0" y="83.0" width="11.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="639.0" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (20 samples, 0.25%)</title><rect x="639.2" y="67.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="642.2" y="78.0"></text>
</g>
<g>
<title>__slab_free (6 samples, 0.08%)</title><rect x="639.5" y="51.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="642.5" y="62.0"></text>
</g>
<g>
<title>skb_release_data (12 samples, 0.15%)</title><rect x="640.4" y="51.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="643.4" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (5 samples, 0.06%)</title><rect x="642.2" y="67.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="645.2" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (4 samples, 0.05%)</title><rect x="642.9" y="67.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="645.9" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.06%)</title><rect x="643.5" y="67.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="646.5" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="643.9" y="51.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="646.9" y="62.0"></text>
</g>
<g>
<title>tcp_newly_delivered (3 samples, 0.04%)</title><rect x="644.5" y="67.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="647.5" y="78.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.03%)</title><rect x="645.1" y="67.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="648.1" y="78.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.05%)</title><rect x="645.6" y="67.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="648.6" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (8 samples, 0.10%)</title><rect x="646.3" y="67.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="649.3" y="78.0"></text>
</g>
<g>
<title>tcp_data_queue (210 samples, 2.65%)</title><rect x="647.7" y="83.0" width="31.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="650.7" y="94.0">tc..</text>
</g>
<g>
<title>dst_release (4 samples, 0.05%)</title><rect x="647.8" y="67.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="650.8" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (196 samples, 2.47%)</title><rect x="648.6" y="67.0" width="29.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="651.6" y="78.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (187 samples, 2.36%)</title><rect x="649.9" y="51.0" width="27.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="652.9" y="62.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (185 samples, 2.34%)</title><rect x="650.2" y="35.0" width="27.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="653.2" y="46.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (7 samples, 0.09%)</title><rect x="677.8" y="67.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="680.8" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (7 samples, 0.09%)</title><rect x="678.9" y="83.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="681.9" y="94.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="679.7" y="67.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="682.7" y="78.0"></text>
</g>
<g>
<title>nf_hook_slow (72 samples, 0.91%)</title><rect x="680.1" y="163.0" width="10.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="683.1" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (48 samples, 0.61%)</title><rect x="681.3" y="147.0" width="7.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="684.3" y="158.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (5 samples, 0.06%)</title><rect x="687.1" y="131.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="690.1" y="142.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (4 samples, 0.05%)</title><rect x="687.9" y="131.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="690.9" y="142.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.03%)</title><rect x="688.5" y="147.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="691.5" y="158.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.03%)</title><rect x="688.8" y="147.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="691.8" y="158.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (3 samples, 0.04%)</title><rect x="689.1" y="147.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="692.1" y="158.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (3 samples, 0.04%)</title><rect x="689.5" y="147.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="692.5" y="158.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (3 samples, 0.04%)</title><rect x="690.0" y="147.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="693.0" y="158.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (2 samples, 0.03%)</title><rect x="690.1" y="131.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="693.1" y="142.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (3 samples, 0.04%)</title><rect x="690.4" y="147.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="693.4" y="158.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (11 samples, 0.14%)</title><rect x="690.9" y="179.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="693.9" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (123 samples, 1.55%)</title><rect x="692.6" y="179.0" width="18.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="695.6" y="190.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (3 samples, 0.04%)</title><rect x="693.2" y="163.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="696.2" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (86 samples, 1.09%)</title><rect x="693.7" y="163.0" width="12.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="696.7" y="174.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (7 samples, 0.09%)</title><rect x="706.6" y="163.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="709.6" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (6 samples, 0.08%)</title><rect x="707.7" y="163.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="710.7" y="174.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (5 samples, 0.06%)</title><rect x="708.7" y="163.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="711.7" y="174.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (10 samples, 0.13%)</title><rect x="709.5" y="163.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="712.5" y="174.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (3 samples, 0.04%)</title><rect x="710.1" y="147.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="713.1" y="158.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (2 samples, 0.03%)</title><rect x="710.5" y="147.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="713.5" y="158.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.03%)</title><rect x="711.0" y="323.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="714.0" y="334.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="711.0" y="307.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="714.0" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (38 samples, 0.48%)</title><rect x="711.3" y="323.0" width="5.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="714.3" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (13 samples, 0.16%)</title><rect x="711.4" y="307.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="714.4" y="318.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (2 samples, 0.03%)</title><rect x="713.5" y="307.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="716.5" y="318.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (9 samples, 0.11%)</title><rect x="713.8" y="307.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="716.8" y="318.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (9 samples, 0.11%)</title><rect x="713.8" y="291.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="716.8" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (5 samples, 0.06%)</title><rect x="715.1" y="307.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="718.1" y="318.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (2 samples, 0.03%)</title><rect x="715.6" y="291.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="718.6" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute (2 samples, 0.03%)</title><rect x="715.9" y="307.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="718.9" y="318.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (5 samples, 0.06%)</title><rect x="716.2" y="307.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="719.2" y="318.0"></text>
</g>
<g>
<title>__skb_clone (7 samples, 0.09%)</title><rect x="716.9" y="355.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="719.9" y="366.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="717.7" y="339.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="720.7" y="350.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (4 samples, 0.05%)</title><rect x="718.1" y="355.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="721.1" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (3 samples, 0.04%)</title><rect x="718.9" y="355.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="721.9" y="366.0"></text>
</g>
<g>
<title>__list_del_entry_valid (2 samples, 0.03%)</title><rect x="719.0" y="339.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="722.0" y="350.0"></text>
</g>
<g>
<title>ktime_get (9 samples, 0.11%)</title><rect x="719.5" y="371.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="722.5" y="382.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.08%)</title><rect x="719.9" y="355.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="722.9" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (7 samples, 0.09%)</title><rect x="720.9" y="371.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="723.9" y="382.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (3 samples, 0.04%)</title><rect x="721.2" y="355.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="724.2" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="721.7" y="355.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="724.7" y="366.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="721.7" y="339.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="724.7" y="350.0"></text>
</g>
<g>
<title>_copy_from_iter_full (9 samples, 0.11%)</title><rect x="722.1" y="403.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="725.1" y="414.0"></text>
</g>
<g>
<title>copyin (5 samples, 0.06%)</title><rect x="722.3" y="387.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="725.3" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.06%)</title><rect x="722.3" y="371.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="725.3" y="382.0"></text>
</g>
<g>
<title>iov_iter_advance (3 samples, 0.04%)</title><rect x="723.0" y="387.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="726.0" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (34 samples, 0.43%)</title><rect x="723.5" y="403.0" width="5.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="726.5" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (33 samples, 0.42%)</title><rect x="723.6" y="387.0" width="4.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="726.6" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (12 samples, 0.15%)</title><rect x="724.2" y="371.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="727.2" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (12 samples, 0.15%)</title><rect x="724.2" y="355.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="727.2" y="366.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.06%)</title><rect x="725.1" y="339.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="728.1" y="350.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (12 samples, 0.15%)</title><rect x="726.0" y="371.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="729.0" y="382.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.06%)</title><rect x="727.8" y="371.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="730.8" y="382.0"></text>
</g>
<g>
<title>tcp_send_mss (14 samples, 0.18%)</title><rect x="728.7" y="403.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="731.7" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (12 samples, 0.15%)</title><rect x="729.0" y="387.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="732.0" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.04%)</title><rect x="730.2" y="371.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="733.2" y="382.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.03%)</title><rect x="730.9" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="733.9" y="462.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="730.9" y="435.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="733.9" y="446.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="730.9" y="419.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="733.9" y="430.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.27%)</title><rect x="731.2" y="531.0" width="3.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="734.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.27%)</title><rect x="731.2" y="515.0" width="3.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="734.2" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (19 samples, 0.24%)</title><rect x="731.2" y="499.0" width="2.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="734.2" y="510.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="731.7" y="483.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="734.7" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (13 samples, 0.16%)</title><rect x="732.1" y="483.0" width="2.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="735.1" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="732.3" y="467.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="735.3" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (10 samples, 0.13%)</title><rect x="732.6" y="467.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="735.6" y="478.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="734.1" y="499.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="737.1" y="510.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.08%)</title><rect x="734.5" y="563.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="737.5" y="574.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.08%)</title><rect x="734.5" y="547.0" width="0.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="737.5" y="558.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.08%)</title><rect x="734.5" y="531.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="737.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="735.4" y="611.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="735.7" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="735.7" y="579.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="738.7" y="590.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="735.7" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="738.7" y="574.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="735.7" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="738.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (12 samples, 0.15%)</title><rect x="736.1" y="627.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="739.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.06%)</title><rect x="736.4" y="611.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.06%)</title><rect x="736.4" y="595.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="739.4" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="736.9" y="579.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="739.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="737.2" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.03%)</title><rect x="737.2" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="740.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (3 samples, 0.04%)</title><rect x="737.5" y="611.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="740.5" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.04%)</title><rect x="737.5" y="595.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="740.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (165 samples, 2.08%)</title><rect x="737.9" y="627.0" width="24.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.9" y="638.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.06%)</title><rect x="738.7" y="611.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.7" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="739.0" y="595.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="742.0" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="739.0" y="579.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="742.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="739.0" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="742.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (146 samples, 1.84%)</title><rect x="739.6" y="611.0" width="21.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="742.6" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (146 samples, 1.84%)</title><rect x="739.6" y="595.0" width="21.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="742.6" y="606.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (142 samples, 1.79%)</title><rect x="739.6" y="579.0" width="21.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="742.6" y="590.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (141 samples, 1.78%)</title><rect x="739.6" y="563.0" width="21.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="742.6" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (140 samples, 1.77%)</title><rect x="739.7" y="547.0" width="20.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="742.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (6 samples, 0.08%)</title><rect x="742.1" y="531.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="745.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (6 samples, 0.08%)</title><rect x="742.1" y="515.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="745.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (45 samples, 0.57%)</title><rect x="743.0" y="531.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.03%)</title><rect x="749.8" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.03%)</title><rect x="749.8" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="752.8" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="749.8" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="752.8" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="749.8" y="483.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="752.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (70 samples, 0.88%)</title><rect x="750.1" y="531.0" width="10.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="753.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (70 samples, 0.88%)</title><rect x="750.1" y="515.0" width="10.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="753.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (53 samples, 0.67%)</title><rect x="752.7" y="499.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="755.7" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="753.9" y="483.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="756.9" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (6 samples, 0.08%)</title><rect x="754.2" y="483.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="757.2" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (19 samples, 0.24%)</title><rect x="755.1" y="483.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="758.1" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (9 samples, 0.11%)</title><rect x="756.5" y="467.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.5" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.04%)</title><rect x="757.1" y="451.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="760.1" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (2 samples, 0.03%)</title><rect x="757.6" y="451.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="760.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (18 samples, 0.23%)</title><rect x="757.9" y="483.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.9" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (11 samples, 0.14%)</title><rect x="758.6" y="467.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.6" y="478.0"></text>
</g>
<g>
<title>vectorizedMismatch (10 samples, 0.13%)</title><rect x="758.8" y="451.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="761.8" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (2 samples, 0.03%)</title><rect x="760.3" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="763.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (4 samples, 0.05%)</title><rect x="760.7" y="579.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.sizeInBytes (2 samples, 0.03%)</title><rect x="760.9" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (2 samples, 0.03%)</title><rect x="760.9" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (8 samples, 0.10%)</title><rect x="761.3" y="611.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="764.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (8 samples, 0.10%)</title><rect x="761.3" y="595.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="764.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (7 samples, 0.09%)</title><rect x="761.5" y="579.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (3 samples, 0.04%)</title><rect x="761.6" y="563.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (3 samples, 0.04%)</title><rect x="762.1" y="563.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.&lt;init&gt; (3 samples, 0.04%)</title><rect x="762.1" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="765.1" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="762.2" y="531.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="765.2" y="542.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="762.2" y="515.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="765.2" y="526.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="762.2" y="499.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="765.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.09%)</title><rect x="762.5" y="643.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="765.5" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.08%)</title><rect x="762.7" y="627.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.7" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.06%)</title><rect x="762.7" y="611.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.03%)</title><rect x="763.5" y="643.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="766.5" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="763.5" y="627.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="763.5" y="611.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="766.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (36 samples, 0.45%)</title><rect x="763.8" y="675.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="766.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (21 samples, 0.27%)</title><rect x="764.3" y="659.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="767.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (16 samples, 0.20%)</title><rect x="765.0" y="643.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="768.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (16 samples, 0.20%)</title><rect x="765.0" y="627.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="768.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (6 samples, 0.08%)</title><rect x="765.0" y="611.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="768.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (10 samples, 0.13%)</title><rect x="765.9" y="611.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="768.9" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.15%)</title><rect x="767.4" y="659.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.4" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.15%)</title><rect x="767.4" y="643.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="770.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.04%)</title><rect x="769.2" y="675.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="772.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.10%)</title><rect x="769.8" y="675.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="772.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="770.4" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="773.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="770.6" y="643.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="773.6" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="770.6" y="627.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="773.6" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="770.6" y="611.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="773.6" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.03%)</title><rect x="770.6" y="595.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.6" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.14%)</title><rect x="771.0" y="675.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="774.0" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.09%)</title><rect x="771.6" y="659.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="774.6" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (159 samples, 2.01%)</title><rect x="772.6" y="691.0" width="23.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.6" y="702.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (159 samples, 2.01%)</title><rect x="772.6" y="675.0" width="23.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="775.6" y="686.0">o..</text>
</g>
<g>
<title>[unknown] (25 samples, 0.32%)</title><rect x="773.2" y="659.0" width="3.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="776.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.32%)</title><rect x="773.2" y="643.0" width="3.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="776.2" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (22 samples, 0.28%)</title><rect x="773.2" y="627.0" width="3.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="776.2" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="773.2" y="611.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="776.2" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="773.5" y="611.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="776.5" y="622.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (4 samples, 0.05%)</title><rect x="774.0" y="611.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="777.0" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (13 samples, 0.16%)</title><rect x="774.6" y="611.0" width="1.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="777.6" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.06%)</title><rect x="775.0" y="595.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="778.0" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="775.8" y="595.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="778.8" y="606.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="776.7" y="627.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="779.7" y="638.0"></text>
</g>
<g>
<title>__libc_recv (130 samples, 1.64%)</title><rect x="777.0" y="659.0" width="19.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="780.0" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (96 samples, 1.21%)</title><rect x="782.0" y="643.0" width="14.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="785.0" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (96 samples, 1.21%)</title><rect x="782.0" y="627.0" width="14.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="785.0" y="638.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (79 samples, 1.00%)</title><rect x="784.6" y="611.0" width="11.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="787.6" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (74 samples, 0.93%)</title><rect x="785.3" y="595.0" width="11.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="788.3" y="606.0"></text>
</g>
<g>
<title>inet_recvmsg (53 samples, 0.67%)</title><rect x="785.4" y="579.0" width="7.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="788.4" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (53 samples, 0.67%)</title><rect x="785.4" y="563.0" width="7.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="788.4" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.05%)</title><rect x="787.1" y="547.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="790.1" y="558.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.04%)</title><rect x="787.1" y="531.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="790.1" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.04%)</title><rect x="787.1" y="515.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="790.1" y="526.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.04%)</title><rect x="787.1" y="499.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="790.1" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="787.7" y="547.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="790.7" y="558.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="788.0" y="547.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="791.0" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="788.3" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="791.3" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="788.3" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="791.3" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (23 samples, 0.29%)</title><rect x="788.9" y="547.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="791.9" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (23 samples, 0.29%)</title><rect x="788.9" y="531.0" width="3.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="791.9" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (9 samples, 0.11%)</title><rect x="788.9" y="515.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="791.9" y="526.0"></text>
</g>
<g>
<title>copyout (8 samples, 0.10%)</title><rect x="789.0" y="499.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="792.0" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (8 samples, 0.10%)</title><rect x="789.0" y="483.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="792.0" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (14 samples, 0.18%)</title><rect x="790.2" y="515.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="793.2" y="526.0"></text>
</g>
<g>
<title>__check_object_size (12 samples, 0.15%)</title><rect x="790.5" y="499.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="793.5" y="510.0"></text>
</g>
<g>
<title>__check_heap_object (6 samples, 0.08%)</title><rect x="790.8" y="483.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="793.8" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.04%)</title><rect x="791.7" y="483.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="794.7" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (5 samples, 0.06%)</title><rect x="792.3" y="547.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="795.3" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.03%)</title><rect x="793.0" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="796.0" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="793.0" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="796.0" y="542.0"></text>
</g>
<g>
<title>sock_recvmsg (12 samples, 0.15%)</title><rect x="793.3" y="579.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="796.3" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (12 samples, 0.15%)</title><rect x="793.3" y="563.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="796.3" y="574.0"></text>
</g>
<g>
<title>sock_has_perm (12 samples, 0.15%)</title><rect x="793.3" y="547.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="796.3" y="558.0"></text>
</g>
<g>
<title>avc_has_perm (9 samples, 0.11%)</title><rect x="793.8" y="531.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="796.8" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.10%)</title><rect x="795.1" y="579.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="798.1" y="590.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.10%)</title><rect x="795.1" y="563.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="798.1" y="574.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.08%)</title><rect x="795.4" y="547.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="798.4" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.06%)</title><rect x="796.3" y="707.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="799.3" y="718.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="796.3" y="691.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="799.3" y="702.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="796.6" y="691.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="799.6" y="702.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="796.8" y="675.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="799.8" y="686.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=26111] (1,994 samples, 25.17%)</title><rect x="797.1" y="755.0" width="297.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="800.1" y="766.0">[NIO Selector #3 tid=26111]</text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="797.2" y="739.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="800.2" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.04%)</title><rect x="797.5" y="739.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="800.5" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.04%)</title><rect x="797.5" y="723.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="800.5" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.04%)</title><rect x="797.5" y="707.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="800.5" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="797.5" y="691.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="800.5" y="702.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.03%)</title><rect x="798.0" y="739.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="801.0" y="750.0"></text>
</g>
<g>
<title>[unknown_Java] (23 samples, 0.29%)</title><rect x="798.3" y="739.0" width="3.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="801.3" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,963 samples, 24.78%)</title><rect x="801.7" y="739.0" width="292.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="804.7" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (2 samples, 0.03%)</title><rect x="801.8" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="804.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (7 samples, 0.09%)</title><rect x="802.1" y="723.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="805.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (7 samples, 0.09%)</title><rect x="802.1" y="707.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="805.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (2 samples, 0.03%)</title><rect x="803.2" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="806.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (255 samples, 3.22%)</title><rect x="803.5" y="723.0" width="38.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="806.5" y="734.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (253 samples, 3.19%)</title><rect x="803.8" y="707.0" width="37.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="806.8" y="718.0">one..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (229 samples, 2.89%)</title><rect x="805.0" y="691.0" width="34.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="808.0" y="702.0">.a..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (82 samples, 1.04%)</title><rect x="826.9" y="675.0" width="12.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="829.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (82 samples, 1.04%)</title><rect x="826.9" y="659.0" width="12.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="829.9" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (67 samples, 0.85%)</title><rect x="829.1" y="643.0" width="10.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="832.1" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (64 samples, 0.81%)</title><rect x="829.5" y="627.0" width="9.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="832.5" y="638.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="830.4" y="611.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="833.4" y="622.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="830.4" y="595.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="833.4" y="606.0"></text>
</g>
<g>
<title>ep_poll (49 samples, 0.62%)</title><rect x="830.7" y="611.0" width="7.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="833.7" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (31 samples, 0.39%)</title><rect x="832.8" y="595.0" width="4.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="835.8" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (16 samples, 0.20%)</title><rect x="834.0" y="579.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="837.0" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (14 samples, 0.18%)</title><rect x="834.3" y="563.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="837.3" y="574.0"></text>
</g>
<g>
<title>sock_poll (13 samples, 0.16%)</title><rect x="834.5" y="547.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="837.5" y="558.0"></text>
</g>
<g>
<title>tcp_poll (9 samples, 0.11%)</title><rect x="835.0" y="531.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="838.0" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.04%)</title><rect x="835.9" y="515.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="838.9" y="526.0"></text>
</g>
<g>
<title>mutex_unlock (6 samples, 0.08%)</title><rect x="836.5" y="579.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="839.5" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.05%)</title><rect x="837.4" y="595.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="840.4" y="606.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.04%)</title><rect x="837.6" y="579.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="840.6" y="590.0"></text>
</g>
<g>
<title>fput_many (6 samples, 0.08%)</title><rect x="838.2" y="611.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="841.2" y="622.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.03%)</title><rect x="839.1" y="691.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="842.1" y="702.0"></text>
</g>
<g>
<title>__GI___clock_gettime (9 samples, 0.11%)</title><rect x="839.4" y="691.0" width="1.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="842.4" y="702.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.06%)</title><rect x="840.0" y="675.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="843.0" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.04%)</title><rect x="840.7" y="691.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="843.7" y="702.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="841.2" y="691.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="844.2" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,696 samples, 21.41%)</title><rect x="841.5" y="723.0" width="252.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="844.5" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,687 samples, 21.30%)</title><rect x="842.5" y="707.0" width="251.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="845.5" y="718.0">one/nio/http/HttpSession.processR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,487 samples, 18.77%)</title><rect x="842.9" y="691.0" width="221.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="845.9" y="702.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,408 samples, 17.77%)</title><rect x="849.0" y="675.0" width="209.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="852.0" y="686.0">one/nio/http/HttpSession.ha..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,407 samples, 17.76%)</title><rect x="849.2" y="659.0" width="209.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="852.2" y="670.0">one/nio/http/HttpServer.han..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1,397 samples, 17.63%)</title><rect x="849.2" y="643.0" width="208.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="852.2" y="654.0">RequestHandler0_entity.hand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,223 samples, 15.44%)</title><rect x="849.2" y="627.0" width="182.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="852.2" y="638.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.03%)</title><rect x="851.0" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="854.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="851.0" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="854.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="851.0" y="579.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="854.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="851.0" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="854.0" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,205 samples, 15.21%)</title><rect x="851.3" y="611.0" width="179.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.3" y="622.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (27 samples, 0.34%)</title><rect x="851.4" y="595.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="854.4" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.06%)</title><rect x="852.2" y="579.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="855.2" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (16 samples, 0.20%)</title><rect x="853.1" y="579.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.1" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.03%)</title><rect x="853.2" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.2" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.03%)</title><rect x="853.2" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.2" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (6 samples, 0.08%)</title><rect x="853.5" y="563.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.5" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.09%)</title><rect x="854.4" y="563.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="857.4" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.09%)</title><rect x="854.4" y="547.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="857.4" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,177 samples, 14.86%)</title><rect x="855.5" y="595.0" width="175.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="858.5" y="606.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,175 samples, 14.83%)</title><rect x="855.8" y="579.0" width="175.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="858.8" y="590.0">one/nio/net/Session.write</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="855.8" y="563.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="858.8" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="855.8" y="547.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="858.8" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,168 samples, 14.74%)</title><rect x="856.0" y="563.0" width="174.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="859.0" y="574.0">one/nio/net/Session$Ar..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,168 samples, 14.74%)</title><rect x="856.0" y="547.0" width="174.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="859.0" y="558.0">one/nio/net/NativeSock..</text>
</g>
<g>
<title>.annobin_send.c (1,142 samples, 14.42%)</title><rect x="857.1" y="531.0" width="170.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="860.1" y="542.0">.annobin_send.c</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.04%)</title><rect x="863.8" y="515.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="866.8" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,094 samples, 13.81%)</title><rect x="864.2" y="515.0" width="163.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="867.2" y="526.0">entry_SYSCALL_64_afte..</text>
</g>
<g>
<title>do_syscall_64 (1,094 samples, 13.81%)</title><rect x="864.2" y="499.0" width="163.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="867.2" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,083 samples, 13.67%)</title><rect x="865.9" y="483.0" width="161.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="868.9" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,080 samples, 13.63%)</title><rect x="866.3" y="467.0" width="160.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="869.3" y="478.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="866.6" y="451.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="869.6" y="462.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.04%)</title><rect x="866.9" y="451.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="869.9" y="462.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.03%)</title><rect x="867.1" y="435.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="870.1" y="446.0"></text>
</g>
<g>
<title>sock_sendmsg (1,059 samples, 13.37%)</title><rect x="867.4" y="451.0" width="157.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="870.4" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (13 samples, 0.16%)</title><rect x="867.4" y="435.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="870.4" y="446.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (3 samples, 0.04%)</title><rect x="867.4" y="419.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="870.4" y="430.0"></text>
</g>
<g>
<title>sock_has_perm (10 samples, 0.13%)</title><rect x="867.8" y="419.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="870.8" y="430.0"></text>
</g>
<g>
<title>avc_has_perm (7 samples, 0.09%)</title><rect x="868.3" y="403.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="871.3" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,046 samples, 13.20%)</title><rect x="869.3" y="435.0" width="155.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="872.3" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="869.3" y="419.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="872.3" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="869.5" y="403.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="872.5" y="414.0"></text>
</g>
<g>
<title>release_sock (8 samples, 0.10%)</title><rect x="869.8" y="419.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="872.8" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="870.1" y="403.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="873.1" y="414.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.05%)</title><rect x="870.3" y="403.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="873.3" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,035 samples, 13.06%)</title><rect x="870.9" y="419.0" width="154.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="873.9" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__tcp_push_pending_frames (971 samples, 12.26%)</title><rect x="872.4" y="403.0" width="144.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="875.4" y="414.0">__tcp_push_pending..</text>
</g>
<g>
<title>tcp_write_xmit (970 samples, 12.24%)</title><rect x="872.6" y="387.0" width="144.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="875.6" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (949 samples, 11.98%)</title><rect x="873.0" y="371.0" width="141.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="876.0" y="382.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (906 samples, 11.44%)</title><rect x="874.4" y="355.0" width="134.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="877.4" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (11 samples, 0.14%)</title><rect x="874.8" y="339.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="877.8" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (8 samples, 0.10%)</title><rect x="875.3" y="323.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="878.3" y="334.0"></text>
</g>
<g>
<title>ip_local_out (155 samples, 1.96%)</title><rect x="876.5" y="339.0" width="23.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="879.5" y="350.0">i..</text>
</g>
<g>
<title>__ip_local_out (155 samples, 1.96%)</title><rect x="876.5" y="323.0" width="23.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="879.5" y="334.0">_..</text>
</g>
<g>
<title>ip_send_check (2 samples, 0.03%)</title><rect x="876.5" y="307.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="879.5" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (153 samples, 1.93%)</title><rect x="876.8" y="307.0" width="22.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="879.8" y="318.0">n..</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (52 samples, 0.66%)</title><rect x="876.8" y="291.0" width="7.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="879.8" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.04%)</title><rect x="884.1" y="275.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="887.1" y="286.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (4 samples, 0.05%)</title><rect x="884.5" y="291.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="887.5" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (20 samples, 0.25%)</title><rect x="885.1" y="291.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="888.1" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (13 samples, 0.16%)</title><rect x="886.1" y="275.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="889.1" y="286.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (4 samples, 0.05%)</title><rect x="888.1" y="291.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="891.1" y="302.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (3 samples, 0.04%)</title><rect x="888.7" y="291.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="891.7" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (6 samples, 0.08%)</title><rect x="889.1" y="291.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="892.1" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (2 samples, 0.03%)</title><rect x="890.0" y="291.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="893.0" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (51 samples, 0.64%)</title><rect x="890.3" y="291.0" width="7.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="893.3" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (11 samples, 0.14%)</title><rect x="891.9" y="275.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="894.9" y="286.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (4 samples, 0.05%)</title><rect x="893.6" y="275.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="896.6" y="286.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (3 samples, 0.04%)</title><rect x="894.2" y="275.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="897.2" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (17 samples, 0.21%)</title><rect x="894.6" y="275.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="897.6" y="286.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.05%)</title><rect x="896.4" y="259.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="899.4" y="270.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (5 samples, 0.06%)</title><rect x="897.2" y="275.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="900.2" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (10 samples, 0.13%)</title><rect x="897.9" y="291.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="900.9" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (2 samples, 0.03%)</title><rect x="898.8" y="275.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="901.8" y="286.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (2 samples, 0.03%)</title><rect x="899.1" y="275.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="902.1" y="286.0"></text>
</g>
<g>
<title>ip_output (737 samples, 9.30%)</title><rect x="899.5" y="339.0" width="109.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="902.5" y="350.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (674 samples, 8.51%)</title><rect x="901.2" y="323.0" width="100.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="904.2" y="334.0">ip_finish_ou..</text>
</g>
<g>
<title>__dev_queue_xmit (39 samples, 0.49%)</title><rect x="903.4" y="307.0" width="5.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="906.4" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (32 samples, 0.40%)</title><rect x="904.2" y="291.0" width="4.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="907.2" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (32 samples, 0.40%)</title><rect x="904.2" y="275.0" width="4.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="907.2" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (5 samples, 0.06%)</title><rect x="904.6" y="259.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="907.6" y="270.0"></text>
</g>
<g>
<title>netif_rx (15 samples, 0.19%)</title><rect x="905.4" y="259.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="908.4" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (15 samples, 0.19%)</title><rect x="905.4" y="243.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="908.4" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (7 samples, 0.09%)</title><rect x="906.5" y="227.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="909.5" y="238.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (6 samples, 0.08%)</title><rect x="907.6" y="259.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="910.6" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.04%)</title><rect x="908.5" y="259.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="911.5" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (620 samples, 7.83%)</title><rect x="909.2" y="307.0" width="92.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="912.2" y="318.0">__local_bh_..</text>
</g>
<g>
<title>do_softirq.part.0 (620 samples, 7.83%)</title><rect x="909.2" y="291.0" width="92.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="912.2" y="302.0">do_softirq...</text>
</g>
<g>
<title>do_softirq_own_stack (620 samples, 7.83%)</title><rect x="909.2" y="275.0" width="92.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="912.2" y="286.0">do_softirq_..</text>
</g>
<g>
<title>__softirqentry_text_start (620 samples, 7.83%)</title><rect x="909.2" y="259.0" width="92.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="912.2" y="270.0">__softirqen..</text>
</g>
<g>
<title>net_rx_action (603 samples, 7.61%)</title><rect x="911.8" y="243.0" width="89.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="914.8" y="254.0">net_rx_act..</text>
</g>
<g>
<title>__kfree_skb_flush (3 samples, 0.04%)</title><rect x="912.4" y="227.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="915.4" y="238.0"></text>
</g>
<g>
<title>process_backlog (595 samples, 7.51%)</title><rect x="912.9" y="227.0" width="88.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="915.9" y="238.0">process_ba..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (588 samples, 7.42%)</title><rect x="914.0" y="211.0" width="87.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="917.0" y="222.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_core (7 samples, 0.09%)</title><rect x="914.3" y="195.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="917.3" y="206.0"></text>
</g>
<g>
<title>ip_rcv (579 samples, 7.31%)</title><rect x="915.3" y="195.0" width="86.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="918.3" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (452 samples, 5.71%)</title><rect x="915.5" y="179.0" width="67.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="918.5" y="190.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (352 samples, 4.44%)</title><rect x="916.7" y="163.0" width="52.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="919.7" y="174.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (348 samples, 4.39%)</title><rect x="917.3" y="147.0" width="51.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="920.3" y="158.0">ip_pr..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="917.4" y="131.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="920.4" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (345 samples, 4.35%)</title><rect x="917.7" y="131.0" width="51.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="920.7" y="142.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (17 samples, 0.21%)</title><rect x="918.9" y="115.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="921.9" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.04%)</title><rect x="921.0" y="99.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="924.0" y="110.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.06%)</title><rect x="921.4" y="115.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="924.4" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.05%)</title><rect x="921.6" y="99.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="924.6" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (4 samples, 0.05%)</title><rect x="921.6" y="83.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="924.6" y="94.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.03%)</title><rect x="922.2" y="115.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="925.2" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (313 samples, 3.95%)</title><rect x="922.5" y="115.0" width="46.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="925.5" y="126.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (313 samples, 3.95%)</title><rect x="922.5" y="99.0" width="46.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="925.5" y="110.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.03%)</title><rect x="922.8" y="83.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="925.8" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="923.1" y="83.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="926.1" y="94.0"></text>
</g>
<g>
<title>tcp_ack (71 samples, 0.90%)</title><rect x="923.4" y="83.0" width="10.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="926.4" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (17 samples, 0.21%)</title><rect x="926.4" y="67.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="929.4" y="78.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.06%)</title><rect x="926.4" y="51.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="929.4" y="62.0"></text>
</g>
<g>
<title>skb_release_data (10 samples, 0.13%)</title><rect x="927.4" y="51.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="930.4" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (5 samples, 0.06%)</title><rect x="929.0" y="67.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="932.0" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (3 samples, 0.04%)</title><rect x="929.8" y="67.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="932.8" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (7 samples, 0.09%)</title><rect x="930.2" y="67.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="933.2" y="78.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.04%)</title><rect x="930.8" y="51.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="933.8" y="62.0"></text>
</g>
<g>
<title>tcp_newly_delivered (4 samples, 0.05%)</title><rect x="931.4" y="67.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="934.4" y="78.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (3 samples, 0.04%)</title><rect x="932.2" y="67.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="935.2" y="78.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.03%)</title><rect x="932.8" y="67.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="935.8" y="78.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="933.1" y="67.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="936.1" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (3 samples, 0.04%)</title><rect x="933.5" y="67.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="936.5" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.03%)</title><rect x="934.0" y="83.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="937.0" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (226 samples, 2.85%)</title><rect x="934.2" y="83.0" width="33.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="937.2" y="94.0">tc..</text>
</g>
<g>
<title>dst_release (7 samples, 0.09%)</title><rect x="935.0" y="67.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="938.0" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (211 samples, 2.66%)</title><rect x="936.0" y="67.0" width="31.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="939.0" y="78.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (205 samples, 2.59%)</title><rect x="936.9" y="51.0" width="30.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="939.9" y="62.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (203 samples, 2.56%)</title><rect x="937.2" y="35.0" width="30.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="940.2" y="46.0">_r..</text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.04%)</title><rect x="967.5" y="67.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="970.5" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (8 samples, 0.10%)</title><rect x="967.9" y="83.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="970.9" y="94.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.06%)</title><rect x="968.4" y="67.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="971.4" y="78.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.06%)</title><rect x="968.4" y="51.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="971.4" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (92 samples, 1.16%)</title><rect x="969.1" y="163.0" width="13.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="972.1" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (70 samples, 0.88%)</title><rect x="969.6" y="147.0" width="10.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="972.6" y="158.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="977.0" y="131.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="980.0" y="142.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (12 samples, 0.15%)</title><rect x="977.3" y="131.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="980.3" y="142.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (6 samples, 0.08%)</title><rect x="979.1" y="131.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="982.1" y="142.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.03%)</title><rect x="980.0" y="147.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="983.0" y="158.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (3 samples, 0.04%)</title><rect x="980.4" y="147.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="983.4" y="158.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (7 samples, 0.09%)</title><rect x="980.9" y="147.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="983.9" y="158.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (6 samples, 0.08%)</title><rect x="981.0" y="131.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="984.0" y="142.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (5 samples, 0.06%)</title><rect x="982.1" y="147.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="985.1" y="158.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (7 samples, 0.09%)</title><rect x="982.8" y="179.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="985.8" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.04%)</title><rect x="983.9" y="179.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="986.9" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (2 samples, 0.03%)</title><rect x="984.0" y="163.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="987.0" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (116 samples, 1.46%)</title><rect x="984.3" y="179.0" width="17.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="987.3" y="190.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (6 samples, 0.08%)</title><rect x="984.4" y="163.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="987.4" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (88 samples, 1.11%)</title><rect x="985.3" y="163.0" width="13.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="988.3" y="174.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (4 samples, 0.05%)</title><rect x="998.6" y="163.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1001.6" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (4 samples, 0.05%)</title><rect x="999.2" y="163.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1002.2" y="174.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (2 samples, 0.03%)</title><rect x="999.9" y="163.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1002.9" y="174.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (9 samples, 0.11%)</title><rect x="1000.2" y="163.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1003.2" y="174.0"></text>
</g>
<g>
<title>ip_finish_output (5 samples, 0.06%)</title><rect x="1001.6" y="323.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1004.6" y="334.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="1002.0" y="307.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1005.0" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (47 samples, 0.59%)</title><rect x="1002.3" y="323.0" width="7.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1005.3" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (14 samples, 0.18%)</title><rect x="1002.8" y="307.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1005.8" y="318.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.03%)</title><rect x="1004.9" y="307.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1007.9" y="318.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (8 samples, 0.10%)</title><rect x="1005.2" y="307.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1008.2" y="318.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (4 samples, 0.05%)</title><rect x="1006.3" y="307.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1009.3" y="318.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (4 samples, 0.05%)</title><rect x="1006.3" y="291.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1009.3" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (4 samples, 0.05%)</title><rect x="1006.9" y="307.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1009.9" y="318.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (3 samples, 0.04%)</title><rect x="1007.1" y="291.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1010.1" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute (7 samples, 0.09%)</title><rect x="1007.5" y="307.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1010.5" y="318.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (5 samples, 0.06%)</title><rect x="1008.6" y="307.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1011.6" y="318.0"></text>
</g>
<g>
<title>__skb_clone (7 samples, 0.09%)</title><rect x="1009.3" y="355.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1012.3" y="366.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.03%)</title><rect x="1010.4" y="355.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1013.4" y="366.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (5 samples, 0.06%)</title><rect x="1010.7" y="355.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1013.7" y="366.0"></text>
</g>
<g>
<title>skb_clone (7 samples, 0.09%)</title><rect x="1011.4" y="355.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1014.4" y="366.0"></text>
</g>
<g>
<title>tcp_established_options (3 samples, 0.04%)</title><rect x="1012.6" y="355.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1015.6" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (5 samples, 0.06%)</title><rect x="1013.2" y="355.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1016.2" y="366.0"></text>
</g>
<g>
<title>__list_add_valid (2 samples, 0.03%)</title><rect x="1013.6" y="339.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1016.6" y="350.0"></text>
</g>
<g>
<title>tcp_v4_send_check (3 samples, 0.04%)</title><rect x="1013.9" y="355.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1016.9" y="366.0"></text>
</g>
<g>
<title>ktime_get (6 samples, 0.08%)</title><rect x="1014.4" y="371.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1017.4" y="382.0"></text>
</g>
<g>
<title>read_tsc (5 samples, 0.06%)</title><rect x="1014.5" y="355.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1017.5" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.04%)</title><rect x="1015.4" y="371.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1018.4" y="382.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (8 samples, 0.10%)</title><rect x="1015.9" y="371.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1018.9" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="1016.6" y="355.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1019.6" y="366.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="1016.8" y="339.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1019.8" y="350.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.03%)</title><rect x="1017.1" y="403.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1020.1" y="414.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (36 samples, 0.45%)</title><rect x="1017.4" y="403.0" width="5.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1020.4" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (33 samples, 0.42%)</title><rect x="1017.8" y="387.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1020.8" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (7 samples, 0.09%)</title><rect x="1019.0" y="371.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1022.0" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.08%)</title><rect x="1019.2" y="355.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1022.2" y="366.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.04%)</title><rect x="1019.6" y="339.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1022.6" y="350.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (14 samples, 0.18%)</title><rect x="1020.0" y="371.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1023.0" y="382.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="1021.8" y="355.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1024.8" y="366.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.05%)</title><rect x="1022.1" y="371.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1025.1" y="382.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="1022.9" y="403.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1025.9" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (13 samples, 0.16%)</title><rect x="1023.2" y="403.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1026.2" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (10 samples, 0.13%)</title><rect x="1023.6" y="387.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1026.6" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (8 samples, 0.10%)</title><rect x="1023.9" y="371.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1026.9" y="382.0"></text>
</g>
<g>
<title>sockfd_lookup_light (14 samples, 0.18%)</title><rect x="1025.1" y="451.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1028.1" y="462.0"></text>
</g>
<g>
<title>__fget_light (12 samples, 0.15%)</title><rect x="1025.4" y="435.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1028.4" y="446.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.14%)</title><rect x="1025.6" y="419.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1028.6" y="430.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.21%)</title><rect x="1027.2" y="531.0" width="2.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1030.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.21%)</title><rect x="1027.2" y="515.0" width="2.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1030.2" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (13 samples, 0.16%)</title><rect x="1027.3" y="499.0" width="2.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1030.3" y="510.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="1027.9" y="483.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1030.9" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.09%)</title><rect x="1028.2" y="483.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1031.2" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="1028.2" y="467.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1031.2" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (3 samples, 0.04%)</title><rect x="1028.8" y="467.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1031.8" y="478.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="1029.4" y="499.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1032.4" y="510.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="1029.7" y="531.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1032.7" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.06%)</title><rect x="1030.0" y="563.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1033.0" y="574.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.06%)</title><rect x="1030.0" y="547.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1033.0" y="558.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.06%)</title><rect x="1030.0" y="531.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1033.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="1030.8" y="611.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1033.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="1030.8" y="595.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1033.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="1030.8" y="579.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.8" y="590.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.04%)</title><rect x="1030.9" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1033.9" y="574.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="1031.1" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1034.1" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.13%)</title><rect x="1031.4" y="627.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1034.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (6 samples, 0.08%)</title><rect x="1031.7" y="611.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1034.7" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="1032.3" y="595.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1035.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (164 samples, 2.07%)</title><rect x="1032.9" y="627.0" width="24.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1035.9" y="638.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.04%)</title><rect x="1033.2" y="611.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1036.2" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="1033.6" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1036.6" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="1033.6" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1036.6" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1033.7" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1036.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1033.7" y="563.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1036.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (150 samples, 1.89%)</title><rect x="1034.0" y="611.0" width="22.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1037.0" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (150 samples, 1.89%)</title><rect x="1034.0" y="595.0" width="22.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1037.0" y="606.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (142 samples, 1.79%)</title><rect x="1034.0" y="579.0" width="21.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1037.0" y="590.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (141 samples, 1.78%)</title><rect x="1034.0" y="563.0" width="21.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1037.0" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (141 samples, 1.78%)</title><rect x="1034.0" y="547.0" width="21.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1037.0" y="558.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (9 samples, 0.11%)</title><rect x="1035.5" y="531.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1038.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (9 samples, 0.11%)</title><rect x="1035.5" y="515.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1038.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (38 samples, 0.48%)</title><rect x="1036.9" y="531.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.9" y="542.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1042.1" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1045.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (21 samples, 0.27%)</title><rect x="1042.7" y="531.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1045.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (14 samples, 0.18%)</title><rect x="1043.7" y="515.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1046.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.14%)</title><rect x="1044.2" y="499.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1047.2" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.14%)</title><rect x="1044.2" y="483.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1047.2" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.06%)</title><rect x="1044.5" y="467.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1047.5" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.04%)</title><rect x="1044.8" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1047.8" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="1044.9" y="435.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1047.9" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.05%)</title><rect x="1045.2" y="467.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1048.2" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.05%)</title><rect x="1045.2" y="451.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.2" y="462.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.03%)</title><rect x="1045.5" y="435.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1048.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (59 samples, 0.74%)</title><rect x="1045.8" y="531.0" width="8.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1048.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (50 samples, 0.63%)</title><rect x="1047.2" y="515.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1050.2" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (44 samples, 0.56%)</title><rect x="1048.0" y="499.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.0" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (7 samples, 0.09%)</title><rect x="1048.3" y="483.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1051.3" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (17 samples, 0.21%)</title><rect x="1049.4" y="483.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1052.4" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (11 samples, 0.14%)</title><rect x="1050.3" y="467.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1053.3" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (18 samples, 0.23%)</title><rect x="1051.9" y="483.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1054.9" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (18 samples, 0.23%)</title><rect x="1051.9" y="467.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1054.9" y="478.0"></text>
</g>
<g>
<title>vectorizedMismatch (17 samples, 0.21%)</title><rect x="1052.1" y="451.0" width="2.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1055.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (3 samples, 0.04%)</title><rect x="1054.6" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1057.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (8 samples, 0.10%)</title><rect x="1055.2" y="579.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1058.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.sizeInBytes (2 samples, 0.03%)</title><rect x="1055.5" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1058.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (2 samples, 0.03%)</title><rect x="1055.5" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1058.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getSizeOfFlushedRow (4 samples, 0.05%)</title><rect x="1055.8" y="563.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1058.8" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (4 samples, 0.05%)</title><rect x="1055.8" y="547.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1058.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (6 samples, 0.08%)</title><rect x="1056.4" y="611.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1059.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (6 samples, 0.08%)</title><rect x="1056.4" y="595.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1059.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (6 samples, 0.08%)</title><rect x="1056.4" y="579.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1059.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (4 samples, 0.05%)</title><rect x="1056.5" y="563.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1059.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (9 samples, 0.11%)</title><rect x="1057.3" y="643.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1060.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.09%)</title><rect x="1057.6" y="627.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1060.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.06%)</title><rect x="1057.6" y="611.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1060.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.04%)</title><rect x="1057.9" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1060.9" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="1058.3" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1061.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="1058.3" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1061.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (23 samples, 0.29%)</title><rect x="1058.8" y="675.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1061.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.08%)</title><rect x="1059.2" y="659.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1062.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="1059.5" y="643.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1062.5" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="1059.5" y="627.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1062.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.05%)</title><rect x="1059.5" y="611.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1062.5" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.16%)</title><rect x="1060.1" y="659.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1063.1" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.15%)</title><rect x="1060.3" y="643.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1063.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.04%)</title><rect x="1062.2" y="675.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1065.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="1062.8" y="675.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1065.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="1063.1" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1066.1" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.09%)</title><rect x="1063.4" y="675.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1066.4" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.09%)</title><rect x="1063.4" y="659.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1066.4" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (197 samples, 2.49%)</title><rect x="1064.4" y="691.0" width="29.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1067.4" y="702.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (196 samples, 2.47%)</title><rect x="1064.6" y="675.0" width="29.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1067.6" y="686.0">on..</text>
</g>
<g>
<title>[unknown] (33 samples, 0.42%)</title><rect x="1065.6" y="659.0" width="4.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1068.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.42%)</title><rect x="1065.6" y="643.0" width="4.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1068.6" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (26 samples, 0.33%)</title><rect x="1065.6" y="627.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1068.6" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.06%)</title><rect x="1066.1" y="611.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1069.1" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.04%)</title><rect x="1066.8" y="611.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1069.8" y="622.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="1067.3" y="611.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1070.3" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (11 samples, 0.14%)</title><rect x="1067.7" y="611.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1070.7" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="1068.2" y="595.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1071.2" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (5 samples, 0.06%)</title><rect x="1068.6" y="595.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1071.6" y="606.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (5 samples, 0.06%)</title><rect x="1069.6" y="627.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1072.6" y="638.0"></text>
</g>
<g>
<title>__libc_recv (155 samples, 1.96%)</title><rect x="1070.5" y="659.0" width="23.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1073.5" y="670.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (104 samples, 1.31%)</title><rect x="1078.1" y="643.0" width="15.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1081.1" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (104 samples, 1.31%)</title><rect x="1078.1" y="627.0" width="15.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1081.1" y="638.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (82 samples, 1.04%)</title><rect x="1081.4" y="611.0" width="12.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1084.4" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (81 samples, 1.02%)</title><rect x="1081.6" y="595.0" width="12.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1084.6" y="606.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.04%)</title><rect x="1082.0" y="579.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1085.0" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (50 samples, 0.63%)</title><rect x="1082.5" y="579.0" width="7.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1085.5" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (50 samples, 0.63%)</title><rect x="1082.5" y="563.0" width="7.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1085.5" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.08%)</title><rect x="1084.4" y="547.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1087.4" y="558.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.08%)</title><rect x="1084.4" y="531.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1087.4" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (6 samples, 0.08%)</title><rect x="1084.4" y="515.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1087.4" y="526.0"></text>
</g>
<g>
<title>sock_rfree (6 samples, 0.08%)</title><rect x="1084.4" y="499.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1087.4" y="510.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="1085.3" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1088.3" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="1085.4" y="531.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1088.4" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (21 samples, 0.27%)</title><rect x="1085.9" y="547.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1088.9" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (21 samples, 0.27%)</title><rect x="1085.9" y="531.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1088.9" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (10 samples, 0.13%)</title><rect x="1085.9" y="515.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1088.9" y="526.0"></text>
</g>
<g>
<title>copyout (9 samples, 0.11%)</title><rect x="1086.0" y="499.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1089.0" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (9 samples, 0.11%)</title><rect x="1086.0" y="483.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1089.0" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (11 samples, 0.14%)</title><rect x="1087.4" y="515.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1090.4" y="526.0"></text>
</g>
<g>
<title>__check_object_size (9 samples, 0.11%)</title><rect x="1087.7" y="499.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1090.7" y="510.0"></text>
</g>
<g>
<title>__check_heap_object (4 samples, 0.05%)</title><rect x="1088.3" y="483.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1091.3" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.03%)</title><rect x="1089.0" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1092.0" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="1089.0" y="531.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1092.0" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.05%)</title><rect x="1089.3" y="547.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1092.3" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.04%)</title><rect x="1089.5" y="531.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1092.5" y="542.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="1089.6" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1092.6" y="526.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="1089.6" y="499.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1092.6" y="510.0"></text>
</g>
<g>
<title>sock_recvmsg (17 samples, 0.21%)</title><rect x="1089.9" y="579.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1092.9" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (17 samples, 0.21%)</title><rect x="1089.9" y="563.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1092.9" y="574.0"></text>
</g>
<g>
<title>sock_has_perm (14 samples, 0.18%)</title><rect x="1090.4" y="547.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1093.4" y="558.0"></text>
</g>
<g>
<title>avc_has_perm (9 samples, 0.11%)</title><rect x="1091.1" y="531.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1094.1" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.10%)</title><rect x="1092.4" y="579.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1095.4" y="590.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.10%)</title><rect x="1092.4" y="563.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1095.4" y="574.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.08%)</title><rect x="1092.7" y="547.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1095.7" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="1093.8" y="707.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1096.8" y="718.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="1093.8" y="691.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1096.8" y="702.0"></text>
</g>
<g>
<title>[pool-1-thread-1 tid=26243] (179 samples, 2.26%)</title><rect x="1094.1" y="755.0" width="26.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1097.1" y="766.0">[..</text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.04%)</title><rect x="1094.1" y="739.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1097.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.run (176 samples, 2.22%)</title><rect x="1094.5" y="739.0" width="26.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1097.5" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (176 samples, 2.22%)</title><rect x="1094.5" y="723.0" width="26.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1097.5" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (176 samples, 2.22%)</title><rect x="1094.5" y="707.0" width="26.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1097.5" y="718.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (176 samples, 2.22%)</title><rect x="1094.5" y="691.0" width="26.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1097.5" y="702.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (176 samples, 2.22%)</title><rect x="1094.5" y="675.0" width="26.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1097.5" y="686.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (176 samples, 2.22%)</title><rect x="1094.5" y="659.0" width="26.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1097.5" y="670.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.04%)</title><rect x="1094.8" y="643.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1097.8" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1094.8" y="627.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1097.8" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1094.8" y="611.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1097.8" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.03%)</title><rect x="1095.4" y="643.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1098.4" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1095.4" y="627.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1098.4" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1095.4" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1098.4" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1095.4" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1098.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (7 samples, 0.09%)</title><rect x="1095.7" y="643.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (7 samples, 0.09%)</title><rect x="1095.7" y="627.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1098.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (4 samples, 0.05%)</title><rect x="1096.0" y="611.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1099.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (160 samples, 2.02%)</title><rect x="1096.9" y="643.0" width="23.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1099.9" y="654.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.04%)</title><rect x="1097.1" y="627.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1100.1" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.04%)</title><rect x="1097.1" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1100.1" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (151 samples, 1.91%)</title><rect x="1097.5" y="627.0" width="22.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1100.5" y="638.0">s..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.03%)</title><rect x="1097.5" y="611.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1100.5" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.03%)</title><rect x="1097.5" y="595.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1100.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (142 samples, 1.79%)</title><rect x="1097.8" y="611.0" width="21.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1100.8" y="622.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (142 samples, 1.79%)</title><rect x="1097.8" y="595.0" width="21.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1100.8" y="606.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (141 samples, 1.78%)</title><rect x="1097.9" y="579.0" width="21.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1100.9" y="590.0">s..</text>
</g>
<g>
<title>__libc_write (133 samples, 1.68%)</title><rect x="1098.4" y="563.0" width="19.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1101.4" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (79 samples, 1.00%)</title><rect x="1106.4" y="547.0" width="11.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1109.4" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (79 samples, 1.00%)</title><rect x="1106.4" y="531.0" width="11.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1109.4" y="542.0"></text>
</g>
<g>
<title>ksys_write (60 samples, 0.76%)</title><rect x="1109.3" y="515.0" width="8.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1112.3" y="526.0"></text>
</g>
<g>
<title>__fdget_pos (12 samples, 0.15%)</title><rect x="1109.3" y="499.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1112.3" y="510.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.14%)</title><rect x="1109.3" y="483.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1112.3" y="494.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.11%)</title><rect x="1109.6" y="467.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1112.6" y="478.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="1111.1" y="499.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1114.1" y="510.0"></text>
</g>
<g>
<title>vfs_write (46 samples, 0.58%)</title><rect x="1111.4" y="499.0" width="6.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1114.4" y="510.0"></text>
</g>
<g>
<title>new_sync_write (42 samples, 0.53%)</title><rect x="1111.7" y="483.0" width="6.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1114.7" y="494.0"></text>
</g>
<g>
<title>generic_file_write_iter (40 samples, 0.50%)</title><rect x="1111.8" y="467.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1114.8" y="478.0"></text>
</g>
<g>
<title>__generic_file_write_iter (38 samples, 0.48%)</title><rect x="1111.8" y="451.0" width="5.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1114.8" y="462.0"></text>
</g>
<g>
<title>file_update_time (3 samples, 0.04%)</title><rect x="1111.9" y="435.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1114.9" y="446.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.04%)</title><rect x="1111.9" y="419.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1114.9" y="430.0"></text>
</g>
<g>
<title>generic_perform_write (34 samples, 0.43%)</title><rect x="1112.4" y="435.0" width="5.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1115.4" y="446.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (5 samples, 0.06%)</title><rect x="1112.8" y="419.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1115.8" y="430.0"></text>
</g>
<g>
<title>copyin (5 samples, 0.06%)</title><rect x="1112.8" y="403.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1115.8" y="414.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.04%)</title><rect x="1113.1" y="387.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1116.1" y="398.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (2 samples, 0.03%)</title><rect x="1113.6" y="419.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1116.6" y="430.0"></text>
</g>
<g>
<title>shmem_write_begin (15 samples, 0.19%)</title><rect x="1113.9" y="419.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1116.9" y="430.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (15 samples, 0.19%)</title><rect x="1113.9" y="403.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1116.9" y="414.0"></text>
</g>
<g>
<title>find_lock_entry (10 samples, 0.13%)</title><rect x="1114.6" y="387.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1117.6" y="398.0"></text>
</g>
<g>
<title>find_get_entry (6 samples, 0.08%)</title><rect x="1115.2" y="371.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1118.2" y="382.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.05%)</title><rect x="1115.5" y="355.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1118.5" y="366.0"></text>
</g>
<g>
<title>shmem_write_end (9 samples, 0.11%)</title><rect x="1116.1" y="419.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1119.1" y="430.0"></text>
</g>
<g>
<title>set_page_dirty (3 samples, 0.04%)</title><rect x="1116.7" y="403.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1119.7" y="414.0"></text>
</g>
<g>
<title>page_mapping (3 samples, 0.04%)</title><rect x="1116.7" y="387.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1119.7" y="398.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.03%)</title><rect x="1117.2" y="403.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1120.2" y="414.0"></text>
</g>
<g>
<title>down_write (2 samples, 0.03%)</title><rect x="1117.5" y="451.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1120.5" y="462.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="1117.9" y="483.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1120.9" y="494.0"></text>
</g>
<g>
<title>selinux_file_permission (2 samples, 0.03%)</title><rect x="1117.9" y="467.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1120.9" y="478.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.04%)</title><rect x="1118.2" y="563.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1121.2" y="574.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="1118.7" y="563.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1121.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.09%)</title><rect x="1118.9" y="611.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1121.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (6 samples, 0.08%)</title><rect x="1119.1" y="595.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1122.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.06%)</title><rect x="1120.0" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1123.0" y="638.0"></text>
</g>
<g>
<title>[tid=26087] (81 samples, 1.02%)</title><rect x="1120.7" y="755.0" width="12.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1123.7" y="766.0"></text>
</g>
<g>
<title>start_thread (81 samples, 1.02%)</title><rect x="1120.7" y="739.0" width="12.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1123.7" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (81 samples, 1.02%)</title><rect x="1120.7" y="723.0" width="12.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1123.7" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (81 samples, 1.02%)</title><rect x="1120.7" y="707.0" width="12.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1123.7" y="718.0"></text>
</g>
<g>
<title>G1CMRemarkTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="1120.7" y="691.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1123.7" y="702.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (79 samples, 1.00%)</title><rect x="1121.0" y="691.0" width="11.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1124.0" y="702.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (21 samples, 0.27%)</title><rect x="1121.0" y="675.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1124.0" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (15 samples, 0.19%)</title><rect x="1121.0" y="659.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1124.0" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (9 samples, 0.11%)</title><rect x="1121.9" y="643.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1124.9" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1123.0" y="627.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1126.0" y="638.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.06%)</title><rect x="1123.4" y="659.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1126.4" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (55 samples, 0.69%)</title><rect x="1124.2" y="675.0" width="8.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1127.2" y="686.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (55 samples, 0.69%)</title><rect x="1124.2" y="659.0" width="8.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1127.2" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (55 samples, 0.69%)</title><rect x="1124.2" y="643.0" width="8.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1127.2" y="654.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (55 samples, 0.69%)</title><rect x="1124.2" y="627.0" width="8.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1127.2" y="638.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (55 samples, 0.69%)</title><rect x="1124.2" y="611.0" width="8.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1127.2" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (47 samples, 0.59%)</title><rect x="1124.2" y="595.0" width="7.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1127.2" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (31 samples, 0.39%)</title><rect x="1126.5" y="579.0" width="4.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1129.5" y="590.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (8 samples, 0.10%)</title><rect x="1129.8" y="563.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1132.8" y="574.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (8 samples, 0.10%)</title><rect x="1131.2" y="595.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1134.2" y="606.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (8 samples, 0.10%)</title><rect x="1131.2" y="579.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1134.2" y="590.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (2 samples, 0.03%)</title><rect x="1131.6" y="563.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1134.6" y="574.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1132.1" y="563.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1135.1" y="574.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.03%)</title><rect x="1132.4" y="675.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1135.4" y="686.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.03%)</title><rect x="1132.4" y="659.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1135.4" y="670.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.03%)</title><rect x="1132.4" y="643.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1135.4" y="654.0"></text>
</g>
<g>
<title>[tid=26089] (49 samples, 0.62%)</title><rect x="1132.8" y="755.0" width="7.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1135.8" y="766.0"></text>
</g>
<g>
<title>start_thread (49 samples, 0.62%)</title><rect x="1132.8" y="739.0" width="7.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1135.8" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (49 samples, 0.62%)</title><rect x="1132.8" y="723.0" width="7.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1135.8" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (49 samples, 0.62%)</title><rect x="1132.8" y="707.0" width="7.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1135.8" y="718.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (28 samples, 0.35%)</title><rect x="1132.8" y="691.0" width="4.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1135.8" y="702.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (26 samples, 0.33%)</title><rect x="1133.0" y="675.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1136.0" y="686.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.153] (18 samples, 0.23%)</title><rect x="1133.2" y="659.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1136.2" y="670.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (14 samples, 0.18%)</title><rect x="1133.8" y="643.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1136.8" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (10 samples, 0.13%)</title><rect x="1134.4" y="627.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1137.4" y="638.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (4 samples, 0.05%)</title><rect x="1136.2" y="659.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1139.2" y="670.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (3 samples, 0.04%)</title><rect x="1136.2" y="643.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1139.2" y="654.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (20 samples, 0.25%)</title><rect x="1137.1" y="691.0" width="3.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1140.1" y="702.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (20 samples, 0.25%)</title><rect x="1137.1" y="675.0" width="3.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1140.1" y="686.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (20 samples, 0.25%)</title><rect x="1137.1" y="659.0" width="3.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1140.1" y="670.0"></text>
</g>
<g>
<title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.231] (2 samples, 0.03%)</title><rect x="1139.2" y="643.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1142.2" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (4 samples, 0.05%)</title><rect x="1139.5" y="643.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1142.5" y="654.0"></text>
</g>
<g>
<title>[tid=26092] (6 samples, 0.08%)</title><rect x="1140.1" y="755.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1143.1" y="766.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.06%)</title><rect x="1140.2" y="739.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1143.2" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.06%)</title><rect x="1140.2" y="723.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1143.2" y="734.0"></text>
</g>
<g>
<title>VMThread::run() (5 samples, 0.06%)</title><rect x="1140.2" y="707.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1143.2" y="718.0"></text>
</g>
<g>
<title>VMThread::loop() (5 samples, 0.06%)</title><rect x="1140.2" y="691.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1143.2" y="702.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.54] (3 samples, 0.04%)</title><rect x="1140.4" y="675.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1143.4" y="686.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (3 samples, 0.04%)</title><rect x="1140.4" y="659.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1143.4" y="670.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (3 samples, 0.04%)</title><rect x="1140.4" y="643.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1143.4" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (3 samples, 0.04%)</title><rect x="1140.4" y="627.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1143.4" y="638.0"></text>
</g>
<g>
<title>[tid=26096] (74 samples, 0.93%)</title><rect x="1141.0" y="755.0" width="11.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1144.0" y="766.0"></text>
</g>
<g>
<title>start_thread (73 samples, 0.92%)</title><rect x="1141.1" y="739.0" width="10.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1144.1" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (73 samples, 0.92%)</title><rect x="1141.1" y="723.0" width="10.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1144.1" y="734.0"></text>
</g>
<g>
<title>JavaThread::run() (73 samples, 0.92%)</title><rect x="1141.1" y="707.0" width="10.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.1" y="718.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (73 samples, 0.92%)</title><rect x="1141.1" y="691.0" width="10.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1144.1" y="702.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (73 samples, 0.92%)</title><rect x="1141.1" y="675.0" width="10.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1144.1" y="686.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (73 samples, 0.92%)</title><rect x="1141.1" y="659.0" width="10.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1144.1" y="670.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (73 samples, 0.92%)</title><rect x="1141.1" y="643.0" width="10.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1144.1" y="654.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (73 samples, 0.92%)</title><rect x="1141.1" y="627.0" width="10.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1144.1" y="638.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (30 samples, 0.38%)</title><rect x="1141.1" y="611.0" width="4.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1144.1" y="622.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (5 samples, 0.06%)</title><rect x="1141.4" y="595.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1144.4" y="606.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (5 samples, 0.06%)</title><rect x="1141.4" y="579.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1144.4" y="590.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (3 samples, 0.04%)</title><rect x="1141.4" y="563.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1144.4" y="574.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.03%)</title><rect x="1141.9" y="563.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1144.9" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (23 samples, 0.29%)</title><rect x="1142.2" y="595.0" width="3.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1145.2" y="606.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.03%)</title><rect x="1142.3" y="579.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1145.3" y="590.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (2 samples, 0.03%)</title><rect x="1142.3" y="563.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1145.3" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (3 samples, 0.04%)</title><rect x="1142.6" y="579.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1145.6" y="590.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (2 samples, 0.03%)</title><rect x="1142.8" y="563.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1145.8" y="574.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="1142.8" y="547.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1145.8" y="558.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (4 samples, 0.05%)</title><rect x="1143.1" y="579.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1146.1" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (5 samples, 0.06%)</title><rect x="1143.7" y="579.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1146.7" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (3 samples, 0.04%)</title><rect x="1144.0" y="563.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1147.0" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (3 samples, 0.04%)</title><rect x="1144.7" y="579.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1147.7" y="590.0"></text>
</g>
<g>
<title>Compile::Optimize() (38 samples, 0.48%)</title><rect x="1145.6" y="611.0" width="5.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1148.6" y="622.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (2 samples, 0.03%)</title><rect x="1145.6" y="595.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1148.6" y="606.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (2 samples, 0.03%)</title><rect x="1145.6" y="579.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1148.6" y="590.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="1145.6" y="563.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1148.6" y="574.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="1145.6" y="547.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1148.6" y="558.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (28 samples, 0.35%)</title><rect x="1145.9" y="595.0" width="4.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1148.9" y="606.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.03%)</title><rect x="1146.2" y="579.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1149.2" y="590.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (21 samples, 0.27%)</title><rect x="1146.5" y="579.0" width="3.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1149.5" y="590.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (21 samples, 0.27%)</title><rect x="1146.5" y="563.0" width="3.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1149.5" y="574.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (20 samples, 0.25%)</title><rect x="1146.7" y="547.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1149.7" y="558.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (18 samples, 0.23%)</title><rect x="1147.0" y="531.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1150.0" y="542.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (5 samples, 0.06%)</title><rect x="1150.2" y="595.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.2" y="606.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.06%)</title><rect x="1150.2" y="579.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1153.2" y="590.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (3 samples, 0.04%)</title><rect x="1150.4" y="563.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.4" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1151.3" y="611.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1154.3" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1151.3" y="595.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1154.3" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1151.3" y="579.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1154.3" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.05%)</title><rect x="1151.3" y="563.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1154.3" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.05%)</title><rect x="1151.3" y="547.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1154.3" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1151.3" y="531.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1154.3" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1151.3" y="515.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1154.3" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1151.3" y="499.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1154.3" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1151.3" y="483.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1154.3" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1151.3" y="467.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1154.3" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1151.3" y="451.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1154.3" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1151.3" y="435.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.3" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1151.3" y="419.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1154.3" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1151.3" y="403.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1154.3" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1151.3" y="387.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1154.3" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1151.3" y="371.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1154.3" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1151.3" y="355.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1154.3" y="366.0"></text>
</g>
<g>
<title>[tid=26097] (2 samples, 0.03%)</title><rect x="1152.0" y="755.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1155.0" y="766.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.03%)</title><rect x="1152.0" y="739.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1155.0" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.03%)</title><rect x="1152.0" y="723.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1155.0" y="734.0"></text>
</g>
<g>
<title>JavaThread::run() (2 samples, 0.03%)</title><rect x="1152.0" y="707.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.0" y="718.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2 samples, 0.03%)</title><rect x="1152.0" y="691.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1155.0" y="702.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2 samples, 0.03%)</title><rect x="1152.0" y="675.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1155.0" y="686.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2 samples, 0.03%)</title><rect x="1152.0" y="659.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1155.0" y="670.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.03%)</title><rect x="1152.0" y="643.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1155.0" y="654.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (2 samples, 0.03%)</title><rect x="1152.0" y="627.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1155.0" y="638.0"></text>
</g>
<g>
<title>Compilation::compile_method() (2 samples, 0.03%)</title><rect x="1152.0" y="611.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.0" y="622.0"></text>
</g>
<g>
<title>[tid=26100] (2 samples, 0.03%)</title><rect x="1152.3" y="755.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1155.3" y="766.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.03%)</title><rect x="1152.3" y="739.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1155.3" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.03%)</title><rect x="1152.3" y="723.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1155.3" y="734.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.03%)</title><rect x="1152.3" y="707.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.3" y="718.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.03%)</title><rect x="1152.3" y="691.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.3" y="702.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.03%)</title><rect x="1152.3" y="675.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.3" y="686.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.03%)</title><rect x="1152.3" y="659.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.3" y="670.0"></text>
</g>
<g>
<title>[tid=26213] (83 samples, 1.05%)</title><rect x="1152.6" y="755.0" width="12.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1155.6" y="766.0"></text>
</g>
<g>
<title>start_thread (83 samples, 1.05%)</title><rect x="1152.6" y="739.0" width="12.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1155.6" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (83 samples, 1.05%)</title><rect x="1152.6" y="723.0" width="12.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1155.6" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (83 samples, 1.05%)</title><rect x="1152.6" y="707.0" width="12.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1155.6" y="718.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (82 samples, 1.04%)</title><rect x="1152.6" y="691.0" width="12.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.6" y="702.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (26 samples, 0.33%)</title><rect x="1152.6" y="675.0" width="3.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.6" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (16 samples, 0.20%)</title><rect x="1153.2" y="659.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1156.2" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (7 samples, 0.09%)</title><rect x="1154.4" y="643.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1157.4" y="654.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.08%)</title><rect x="1155.6" y="659.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1158.6" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (52 samples, 0.66%)</title><rect x="1156.5" y="675.0" width="7.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1159.5" y="686.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (52 samples, 0.66%)</title><rect x="1156.5" y="659.0" width="7.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1159.5" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (52 samples, 0.66%)</title><rect x="1156.5" y="643.0" width="7.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1159.5" y="654.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (52 samples, 0.66%)</title><rect x="1156.5" y="627.0" width="7.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1159.5" y="638.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (52 samples, 0.66%)</title><rect x="1156.5" y="611.0" width="7.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1159.5" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (33 samples, 0.42%)</title><rect x="1156.5" y="595.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1159.5" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (27 samples, 0.34%)</title><rect x="1157.4" y="579.0" width="4.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1160.4" y="590.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (8 samples, 0.10%)</title><rect x="1160.2" y="563.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.2" y="574.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (19 samples, 0.24%)</title><rect x="1161.4" y="595.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1164.4" y="606.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (18 samples, 0.23%)</title><rect x="1161.4" y="579.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1164.4" y="590.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (5 samples, 0.06%)</title><rect x="1161.8" y="563.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1164.8" y="574.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (4 samples, 0.05%)</title><rect x="1163.2" y="563.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1166.2" y="574.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1163.8" y="563.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1166.8" y="574.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.04%)</title><rect x="1164.2" y="675.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1167.2" y="686.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (3 samples, 0.04%)</title><rect x="1164.2" y="659.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1167.2" y="670.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (3 samples, 0.04%)</title><rect x="1164.2" y="643.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1167.2" y="654.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (3 samples, 0.04%)</title><rect x="1164.2" y="627.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.2" y="638.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.04%)</title><rect x="1164.2" y="611.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1167.2" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.03%)</title><rect x="1164.2" y="595.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1167.2" y="606.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1164.2" y="579.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1167.2" y="590.0"></text>
</g>
<g>
<title>[tid=26214] (84 samples, 1.06%)</title><rect x="1165.0" y="755.0" width="12.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1168.0" y="766.0"></text>
</g>
<g>
<title>start_thread (83 samples, 1.05%)</title><rect x="1165.1" y="739.0" width="12.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1168.1" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (83 samples, 1.05%)</title><rect x="1165.1" y="723.0" width="12.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1168.1" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (83 samples, 1.05%)</title><rect x="1165.1" y="707.0" width="12.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.1" y="718.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (79 samples, 1.00%)</title><rect x="1165.3" y="691.0" width="11.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1168.3" y="702.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (26 samples, 0.33%)</title><rect x="1165.3" y="675.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1168.3" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (17 samples, 0.21%)</title><rect x="1165.4" y="659.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.4" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (9 samples, 0.11%)</title><rect x="1166.6" y="643.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1169.6" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1167.7" y="627.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.7" y="638.0"></text>
</g>
<g>
<title>SpinPause (8 samples, 0.10%)</title><rect x="1168.0" y="659.0" width="1.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1171.0" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (49 samples, 0.62%)</title><rect x="1169.1" y="675.0" width="7.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.1" y="686.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (49 samples, 0.62%)</title><rect x="1169.1" y="659.0" width="7.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.1" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (49 samples, 0.62%)</title><rect x="1169.1" y="643.0" width="7.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.1" y="654.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (49 samples, 0.62%)</title><rect x="1169.1" y="627.0" width="7.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1172.1" y="638.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (49 samples, 0.62%)</title><rect x="1169.1" y="611.0" width="7.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.1" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (38 samples, 0.48%)</title><rect x="1169.1" y="595.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1172.1" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (22 samples, 0.28%)</title><rect x="1171.5" y="579.0" width="3.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1174.5" y="590.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (6 samples, 0.08%)</title><rect x="1173.9" y="563.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1176.9" y="574.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (11 samples, 0.14%)</title><rect x="1174.8" y="595.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1177.8" y="606.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (10 samples, 0.13%)</title><rect x="1174.8" y="579.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.8" y="590.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (3 samples, 0.04%)</title><rect x="1175.0" y="563.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.0" y="574.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (3 samples, 0.04%)</title><rect x="1175.8" y="563.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1178.8" y="574.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.04%)</title><rect x="1176.4" y="675.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1179.4" y="686.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (3 samples, 0.04%)</title><rect x="1176.4" y="659.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.4" y="670.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (3 samples, 0.04%)</title><rect x="1176.4" y="643.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.4" y="654.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (3 samples, 0.04%)</title><rect x="1176.4" y="627.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.4" y="638.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.04%)</title><rect x="1176.4" y="611.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.4" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.04%)</title><rect x="1176.4" y="595.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.4" y="606.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1176.6" y="579.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.6" y="590.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="1177.0" y="691.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.0" y="702.0"></text>
</g>
<g>
<title>[tid=26215] (84 samples, 1.06%)</title><rect x="1177.5" y="755.0" width="12.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1180.5" y="766.0"></text>
</g>
<g>
<title>start_thread (82 samples, 1.04%)</title><rect x="1177.8" y="739.0" width="12.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1180.8" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (82 samples, 1.04%)</title><rect x="1177.8" y="723.0" width="12.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1180.8" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (82 samples, 1.04%)</title><rect x="1177.8" y="707.0" width="12.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1180.8" y="718.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (81 samples, 1.02%)</title><rect x="1177.8" y="691.0" width="12.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.8" y="702.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (26 samples, 0.33%)</title><rect x="1177.8" y="675.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.8" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (16 samples, 0.20%)</title><rect x="1177.9" y="659.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.9" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (8 samples, 0.10%)</title><rect x="1179.1" y="643.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.1" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.04%)</title><rect x="1179.9" y="627.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.9" y="638.0"></text>
</g>
<g>
<title>SpinPause (8 samples, 0.10%)</title><rect x="1180.3" y="659.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1183.3" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (53 samples, 0.67%)</title><rect x="1181.7" y="675.0" width="7.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.7" y="686.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (53 samples, 0.67%)</title><rect x="1181.7" y="659.0" width="7.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.7" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (53 samples, 0.67%)</title><rect x="1181.7" y="643.0" width="7.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.7" y="654.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (53 samples, 0.67%)</title><rect x="1181.7" y="627.0" width="7.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.7" y="638.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (52 samples, 0.66%)</title><rect x="1181.8" y="611.0" width="7.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.8" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (40 samples, 0.50%)</title><rect x="1181.8" y="595.0" width="6.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.8" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (24 samples, 0.30%)</title><rect x="1184.0" y="579.0" width="3.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.0" y="590.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (7 samples, 0.09%)</title><rect x="1186.6" y="563.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.6" y="574.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (12 samples, 0.15%)</title><rect x="1187.8" y="595.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.8" y="606.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (11 samples, 0.14%)</title><rect x="1187.9" y="579.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.9" y="590.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (6 samples, 0.08%)</title><rect x="1188.1" y="563.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.1" y="574.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.03%)</title><rect x="1189.0" y="563.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.0" y="574.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.03%)</title><rect x="1189.6" y="675.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.6" y="686.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.03%)</title><rect x="1189.6" y="659.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.6" y="670.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.03%)</title><rect x="1189.6" y="643.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.6" y="654.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.03%)</title><rect x="1189.6" y="627.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.6" y="638.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.03%)</title><rect x="1189.6" y="611.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.6" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.03%)</title><rect x="1189.6" y="595.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.6" y="606.0"></text>
</g>
</g>
</svg>
