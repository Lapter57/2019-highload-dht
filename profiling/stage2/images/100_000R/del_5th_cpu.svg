<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="805"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="805"> </text>
<g id="frames">
<g>
<title>all (7,762 samples, 100.00%)</title><rect x="10.0" y="771.0" width="1180.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="782.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=25125] (1,964 samples, 25.30%)</title><rect x="10.0" y="755.0" width="298.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="13.0" y="766.0">[NIO Selector #0 tid=25125]</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="10.0" y="739.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="10.0" y="723.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="10.0" y="707.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="10.0" y="691.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="10.0" y="675.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>[unknown_Java] (24 samples, 0.31%)</title><rect x="10.8" y="739.0" width="3.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="14.0" y="723.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="17.0" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="14.0" y="707.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="17.0" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,934 samples, 24.92%)</title><rect x="14.6" y="739.0" width="294.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.6" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (7 samples, 0.09%)</title><rect x="14.7" y="723.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="17.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (7 samples, 0.09%)</title><rect x="14.7" y="707.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (282 samples, 3.63%)</title><rect x="15.8" y="723.0" width="42.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.8" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (279 samples, 3.59%)</title><rect x="16.2" y="707.0" width="42.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.2" y="718.0">one/..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (247 samples, 3.18%)</title><rect x="17.3" y="691.0" width="37.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="20.3" y="702.0">.an..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (105 samples, 1.35%)</title><rect x="38.9" y="675.0" width="15.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="41.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (105 samples, 1.35%)</title><rect x="38.9" y="659.0" width="15.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="41.9" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (86 samples, 1.11%)</title><rect x="41.8" y="643.0" width="13.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="44.8" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (85 samples, 1.10%)</title><rect x="41.9" y="627.0" width="12.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="44.9" y="638.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.13%)</title><rect x="42.5" y="611.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="45.5" y="622.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.12%)</title><rect x="42.7" y="595.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="45.7" y="606.0"></text>
</g>
<g>
<title>ep_poll (61 samples, 0.79%)</title><rect x="44.1" y="611.0" width="9.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="47.1" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (39 samples, 0.50%)</title><rect x="46.3" y="595.0" width="6.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="49.3" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (19 samples, 0.24%)</title><rect x="48.9" y="579.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="51.9" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (18 samples, 0.23%)</title><rect x="49.1" y="563.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="52.1" y="574.0"></text>
</g>
<g>
<title>sock_poll (18 samples, 0.23%)</title><rect x="49.1" y="547.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="52.1" y="558.0"></text>
</g>
<g>
<title>tcp_poll (11 samples, 0.14%)</title><rect x="50.1" y="531.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="53.1" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.04%)</title><rect x="51.4" y="515.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="54.4" y="526.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="51.8" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="54.8" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.09%)</title><rect x="52.3" y="595.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="55.3" y="606.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.08%)</title><rect x="52.4" y="579.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="55.4" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.04%)</title><rect x="52.9" y="563.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="55.9" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="53.0" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="56.0" y="558.0"></text>
</g>
<g>
<title>fput_many (9 samples, 0.12%)</title><rect x="53.5" y="611.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="56.5" y="622.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.03%)</title><rect x="54.8" y="691.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="57.8" y="702.0"></text>
</g>
<g>
<title>__GI___clock_gettime (10 samples, 0.13%)</title><rect x="55.2" y="691.0" width="1.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="58.2" y="702.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="56.4" y="675.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="59.4" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (11 samples, 0.14%)</title><rect x="56.7" y="691.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="59.7" y="702.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="58.3" y="691.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="61.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,644 samples, 21.18%)</title><rect x="58.6" y="723.0" width="250.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.6" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,634 samples, 21.05%)</title><rect x="59.9" y="707.0" width="248.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.9" y="718.0">one/nio/http/HttpSession.processR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,446 samples, 18.63%)</title><rect x="60.3" y="691.0" width="219.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.3" y="702.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,383 samples, 17.82%)</title><rect x="61.1" y="675.0" width="210.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="64.1" y="686.0">one/nio/http/HttpSession.han..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,379 samples, 17.77%)</title><rect x="61.7" y="659.0" width="209.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.7" y="670.0">one/nio/http/HttpServer.han..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,369 samples, 17.64%)</title><rect x="61.7" y="643.0" width="208.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.7" y="654.0">RequestHandler1_entity.hand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,189 samples, 15.32%)</title><rect x="61.8" y="627.0" width="180.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.8" y="638.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,182 samples, 15.23%)</title><rect x="62.3" y="611.0" width="179.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.3" y="622.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (27 samples, 0.35%)</title><rect x="62.3" y="595.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.3" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="63.2" y="579.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="66.2" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="63.5" y="579.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.5" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (17 samples, 0.22%)</title><rect x="63.8" y="579.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.8" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.03%)</title><rect x="64.0" y="563.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.0" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.09%)</title><rect x="64.4" y="563.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.4" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.08%)</title><rect x="65.5" y="563.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.5" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.08%)</title><rect x="65.5" y="547.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.5" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,155 samples, 14.88%)</title><rect x="66.4" y="595.0" width="175.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.4" y="606.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,153 samples, 14.85%)</title><rect x="66.7" y="579.0" width="175.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.7" y="590.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,147 samples, 14.78%)</title><rect x="67.0" y="563.0" width="174.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.0" y="574.0">one/nio/net/Session$Ar..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,146 samples, 14.76%)</title><rect x="67.2" y="547.0" width="174.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.2" y="558.0">one/nio/net/NativeSock..</text>
</g>
<g>
<title>.annobin_send.c (1,125 samples, 14.49%)</title><rect x="68.1" y="531.0" width="171.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="71.1" y="542.0">.annobin_send.c</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.05%)</title><rect x="75.8" y="515.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="78.8" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,069 samples, 13.77%)</title><rect x="76.6" y="515.0" width="162.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="79.6" y="526.0">entry_SYSCALL_64_afte..</text>
</g>
<g>
<title>do_syscall_64 (1,069 samples, 13.77%)</title><rect x="76.6" y="499.0" width="162.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="79.6" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,048 samples, 13.50%)</title><rect x="79.8" y="483.0" width="159.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="82.8" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,047 samples, 13.49%)</title><rect x="79.9" y="467.0" width="159.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="82.9" y="478.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (4 samples, 0.05%)</title><rect x="80.2" y="451.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="83.2" y="462.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="80.8" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="83.8" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (1,035 samples, 13.33%)</title><rect x="81.1" y="451.0" width="157.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="84.1" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.05%)</title><rect x="81.3" y="435.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="84.3" y="446.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (2 samples, 0.03%)</title><rect x="81.3" y="419.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="84.3" y="430.0"></text>
</g>
<g>
<title>sock_has_perm (2 samples, 0.03%)</title><rect x="81.6" y="419.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="84.6" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,030 samples, 13.27%)</title><rect x="81.9" y="435.0" width="156.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="84.9" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="82.1" y="419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="85.1" y="430.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.05%)</title><rect x="82.4" y="419.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="85.4" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="82.5" y="403.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="85.5" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,023 samples, 13.18%)</title><rect x="83.0" y="419.0" width="155.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="86.0" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (6 samples, 0.08%)</title><rect x="84.3" y="403.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="87.3" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.05%)</title><rect x="84.5" y="387.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="87.5" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (951 samples, 12.25%)</title><rect x="85.3" y="403.0" width="144.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="88.3" y="414.0">__tcp_push_pending..</text>
</g>
<g>
<title>tcp_write_xmit (951 samples, 12.25%)</title><rect x="85.3" y="387.0" width="144.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="88.3" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (934 samples, 12.03%)</title><rect x="86.3" y="371.0" width="142.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="89.3" y="382.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (906 samples, 11.67%)</title><rect x="87.7" y="355.0" width="137.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="90.7" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (8 samples, 0.10%)</title><rect x="88.3" y="339.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="91.3" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (7 samples, 0.09%)</title><rect x="88.4" y="323.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="91.4" y="334.0"></text>
</g>
<g>
<title>ip_local_out (191 samples, 2.46%)</title><rect x="89.7" y="339.0" width="29.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="92.7" y="350.0">ip..</text>
</g>
<g>
<title>__ip_local_out (190 samples, 2.45%)</title><rect x="89.8" y="323.0" width="28.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="92.8" y="334.0">__..</text>
</g>
<g>
<title>ip_send_check (4 samples, 0.05%)</title><rect x="90.0" y="307.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="93.0" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (185 samples, 2.38%)</title><rect x="90.6" y="307.0" width="28.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="93.6" y="318.0">nf..</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (37 samples, 0.48%)</title><rect x="90.7" y="291.0" width="5.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="93.7" y="302.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (4 samples, 0.05%)</title><rect x="96.3" y="291.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="99.3" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (22 samples, 0.28%)</title><rect x="97.0" y="291.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="100.0" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (17 samples, 0.22%)</title><rect x="97.7" y="275.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="100.7" y="286.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (2 samples, 0.03%)</title><rect x="100.3" y="291.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="103.3" y="302.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (4 samples, 0.05%)</title><rect x="100.6" y="291.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="103.6" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (13 samples, 0.17%)</title><rect x="101.2" y="291.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="104.2" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (8 samples, 0.10%)</title><rect x="103.2" y="291.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="106.2" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (72 samples, 0.93%)</title><rect x="104.4" y="291.0" width="11.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="107.4" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (19 samples, 0.24%)</title><rect x="106.4" y="275.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="109.4" y="286.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (3 samples, 0.04%)</title><rect x="109.3" y="275.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="112.3" y="286.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (4 samples, 0.05%)</title><rect x="109.7" y="275.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="112.7" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (28 samples, 0.36%)</title><rect x="110.3" y="275.0" width="4.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="113.3" y="286.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="113.2" y="259.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="116.2" y="270.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (6 samples, 0.08%)</title><rect x="113.7" y="259.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="116.7" y="270.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (5 samples, 0.06%)</title><rect x="114.6" y="275.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="117.6" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (20 samples, 0.26%)</title><rect x="115.4" y="291.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="118.4" y="302.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (3 samples, 0.04%)</title><rect x="116.7" y="275.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="119.7" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (3 samples, 0.04%)</title><rect x="117.2" y="275.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="120.2" y="286.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (5 samples, 0.06%)</title><rect x="117.6" y="275.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="120.6" y="286.0"></text>
</g>
<g>
<title>selinux_ipv4_output (2 samples, 0.03%)</title><rect x="118.4" y="291.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="121.4" y="302.0"></text>
</g>
<g>
<title>ip_output (702 samples, 9.04%)</title><rect x="118.7" y="339.0" width="106.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="121.7" y="350.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (643 samples, 8.28%)</title><rect x="119.6" y="323.0" width="97.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="122.6" y="334.0">ip_finish_o..</text>
</g>
<g>
<title>__dev_queue_xmit (43 samples, 0.55%)</title><rect x="121.3" y="307.0" width="6.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="124.3" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (33 samples, 0.43%)</title><rect x="122.8" y="291.0" width="5.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="125.8" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (32 samples, 0.41%)</title><rect x="123.0" y="275.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="126.0" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.05%)</title><rect x="123.3" y="259.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="126.3" y="270.0"></text>
</g>
<g>
<title>netif_rx (14 samples, 0.18%)</title><rect x="123.9" y="259.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="126.9" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (14 samples, 0.18%)</title><rect x="123.9" y="243.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="126.9" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (12 samples, 0.15%)</title><rect x="124.2" y="227.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="127.2" y="238.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.03%)</title><rect x="126.0" y="259.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="129.0" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (10 samples, 0.13%)</title><rect x="126.3" y="259.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="129.3" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (589 samples, 7.59%)</title><rect x="127.8" y="307.0" width="89.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="130.8" y="318.0">__local_bh..</text>
</g>
<g>
<title>do_softirq.part.0 (587 samples, 7.56%)</title><rect x="128.1" y="291.0" width="89.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="131.1" y="302.0">do_softirq..</text>
</g>
<g>
<title>do_softirq_own_stack (584 samples, 7.52%)</title><rect x="128.6" y="275.0" width="88.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="131.6" y="286.0">do_softirq..</text>
</g>
<g>
<title>__softirqentry_text_start (584 samples, 7.52%)</title><rect x="128.6" y="259.0" width="88.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="131.6" y="270.0">__softirqe..</text>
</g>
<g>
<title>net_rx_action (575 samples, 7.41%)</title><rect x="129.9" y="243.0" width="87.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="132.9" y="254.0">net_rx_act..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.03%)</title><rect x="130.9" y="227.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="133.9" y="238.0"></text>
</g>
<g>
<title>process_backlog (567 samples, 7.30%)</title><rect x="131.2" y="227.0" width="86.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="134.2" y="238.0">process_ba..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (555 samples, 7.15%)</title><rect x="133.0" y="211.0" width="84.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="136.0" y="222.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.05%)</title><rect x="133.0" y="195.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="136.0" y="206.0"></text>
</g>
<g>
<title>ip_rcv (551 samples, 7.10%)</title><rect x="133.6" y="195.0" width="83.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="136.6" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (427 samples, 5.50%)</title><rect x="134.2" y="179.0" width="64.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="137.2" y="190.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (364 samples, 4.69%)</title><rect x="134.8" y="163.0" width="55.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="137.8" y="174.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (363 samples, 4.68%)</title><rect x="135.0" y="147.0" width="55.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="138.0" y="158.0">ip_pr..</text>
</g>
<g>
<title>tcp_v4_rcv (361 samples, 4.65%)</title><rect x="135.3" y="131.0" width="54.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="138.3" y="142.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (23 samples, 0.30%)</title><rect x="137.5" y="115.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="140.5" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (5 samples, 0.06%)</title><rect x="140.3" y="99.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="143.3" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock (6 samples, 0.08%)</title><rect x="141.0" y="115.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="144.0" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.04%)</title><rect x="142.0" y="115.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="145.0" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.04%)</title><rect x="142.0" y="99.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="145.0" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (3 samples, 0.04%)</title><rect x="142.0" y="83.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="145.0" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (311 samples, 4.01%)</title><rect x="142.4" y="115.0" width="47.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="145.4" y="126.0">tcp_..</text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.04%)</title><rect x="142.4" y="99.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="145.4" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (308 samples, 3.97%)</title><rect x="142.9" y="99.0" width="46.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="145.9" y="110.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.03%)</title><rect x="143.0" y="83.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="146.0" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="143.3" y="83.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="146.3" y="94.0"></text>
</g>
<g>
<title>tcp_ack (69 samples, 0.89%)</title><rect x="143.6" y="83.0" width="10.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="146.6" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (19 samples, 0.24%)</title><rect x="147.6" y="67.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="150.6" y="78.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.05%)</title><rect x="147.7" y="51.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="150.7" y="62.0"></text>
</g>
<g>
<title>skb_release_data (13 samples, 0.17%)</title><rect x="148.5" y="51.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="151.5" y="62.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="150.8" y="67.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="153.8" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.04%)</title><rect x="151.1" y="67.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="154.1" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="151.2" y="51.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="154.2" y="62.0"></text>
</g>
<g>
<title>ktime_get_seconds (3 samples, 0.04%)</title><rect x="151.5" y="67.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="154.5" y="78.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.03%)</title><rect x="152.1" y="67.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="155.1" y="78.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (2 samples, 0.03%)</title><rect x="152.7" y="67.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="155.7" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.05%)</title><rect x="153.2" y="67.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="156.2" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="153.8" y="67.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="156.8" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.03%)</title><rect x="154.1" y="83.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="157.1" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (227 samples, 2.92%)</title><rect x="154.4" y="83.0" width="34.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="157.4" y="94.0">tc..</text>
</g>
<g>
<title>dst_release (7 samples, 0.09%)</title><rect x="154.6" y="67.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="157.6" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (213 samples, 2.74%)</title><rect x="155.6" y="67.0" width="32.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="158.6" y="78.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (199 samples, 2.56%)</title><rect x="157.6" y="51.0" width="30.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="160.6" y="62.0">__..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="157.6" y="35.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="160.6" y="46.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (197 samples, 2.54%)</title><rect x="157.9" y="35.0" width="30.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="160.9" y="46.0">_r..</text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.04%)</title><rect x="188.0" y="67.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="191.0" y="78.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.04%)</title><rect x="188.5" y="67.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="191.5" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.06%)</title><rect x="188.9" y="83.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="191.9" y="94.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.05%)</title><rect x="189.1" y="67.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="192.1" y="78.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="189.2" y="51.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="192.2" y="62.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (3 samples, 0.04%)</title><rect x="189.7" y="115.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="192.7" y="126.0"></text>
</g>
<g>
<title>nf_hook_slow (59 samples, 0.76%)</title><rect x="190.1" y="163.0" width="9.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="193.1" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (46 samples, 0.59%)</title><rect x="190.8" y="147.0" width="6.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="193.8" y="158.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (10 samples, 0.13%)</title><rect x="195.3" y="131.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="198.3" y="142.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (6 samples, 0.08%)</title><rect x="196.8" y="131.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="199.8" y="142.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.03%)</title><rect x="197.7" y="147.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="200.7" y="158.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.03%)</title><rect x="198.1" y="147.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="201.1" y="158.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (2 samples, 0.03%)</title><rect x="198.5" y="147.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="201.5" y="158.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (2 samples, 0.03%)</title><rect x="198.8" y="147.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="201.8" y="158.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (9 samples, 0.12%)</title><rect x="199.1" y="179.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="202.1" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (110 samples, 1.42%)</title><rect x="200.6" y="179.0" width="16.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="203.6" y="190.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (5 samples, 0.06%)</title><rect x="201.4" y="163.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="204.4" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (82 samples, 1.06%)</title><rect x="202.2" y="163.0" width="12.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="205.2" y="174.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (2 samples, 0.03%)</title><rect x="214.8" y="163.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="217.8" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (3 samples, 0.04%)</title><rect x="215.1" y="163.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="218.1" y="174.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (4 samples, 0.05%)</title><rect x="215.7" y="163.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="218.7" y="174.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (7 samples, 0.09%)</title><rect x="216.3" y="163.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="219.3" y="174.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (5 samples, 0.06%)</title><rect x="216.4" y="147.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="219.4" y="158.0"></text>
</g>
<g>
<title>ip_finish_output (4 samples, 0.05%)</title><rect x="217.4" y="323.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="220.4" y="334.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="217.7" y="307.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="220.7" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (49 samples, 0.63%)</title><rect x="218.0" y="323.0" width="7.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="221.0" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (16 samples, 0.21%)</title><rect x="218.1" y="307.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="221.1" y="318.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (5 samples, 0.06%)</title><rect x="220.7" y="307.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="223.7" y="318.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (6 samples, 0.08%)</title><rect x="221.5" y="307.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="224.5" y="318.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (6 samples, 0.08%)</title><rect x="221.5" y="291.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="224.5" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (5 samples, 0.06%)</title><rect x="222.4" y="307.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="225.4" y="318.0"></text>
</g>
<g>
<title>selinux_ip_postroute (8 samples, 0.10%)</title><rect x="223.1" y="307.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="226.1" y="318.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (7 samples, 0.09%)</title><rect x="224.4" y="307.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="227.4" y="318.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="225.4" y="355.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="228.4" y="366.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (9 samples, 0.12%)</title><rect x="225.7" y="355.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="228.7" y="366.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.05%)</title><rect x="227.1" y="355.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="230.1" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.03%)</title><rect x="227.8" y="355.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="230.8" y="366.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.05%)</title><rect x="228.3" y="371.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="231.3" y="382.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.05%)</title><rect x="228.3" y="355.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="231.3" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.05%)</title><rect x="228.9" y="371.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="231.9" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="229.1" y="355.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="232.1" y="366.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="229.1" y="339.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="232.1" y="350.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="229.5" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="232.5" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (7 samples, 0.09%)</title><rect x="229.8" y="403.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="232.8" y="414.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.03%)</title><rect x="230.1" y="387.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="233.1" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="230.1" y="371.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="233.1" y="382.0"></text>
</g>
<g>
<title>iov_iter_advance (3 samples, 0.04%)</title><rect x="230.4" y="387.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="233.4" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (30 samples, 0.39%)</title><rect x="230.9" y="403.0" width="4.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="233.9" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (28 samples, 0.36%)</title><rect x="231.2" y="387.0" width="4.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="234.2" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (11 samples, 0.14%)</title><rect x="232.1" y="371.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="235.1" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (11 samples, 0.14%)</title><rect x="232.1" y="355.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="235.1" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.12%)</title><rect x="233.8" y="371.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="236.8" y="382.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="234.8" y="355.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="237.8" y="366.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="235.1" y="371.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="238.1" y="382.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.05%)</title><rect x="235.4" y="403.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="238.4" y="414.0"></text>
</g>
<g>
<title>tcp_chrono_start (2 samples, 0.03%)</title><rect x="235.8" y="387.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="238.8" y="398.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="236.1" y="403.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="239.1" y="414.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.04%)</title><rect x="236.4" y="403.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="239.4" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (9 samples, 0.12%)</title><rect x="236.8" y="403.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="239.8" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (8 samples, 0.10%)</title><rect x="237.0" y="387.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="240.0" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (7 samples, 0.09%)</title><rect x="237.1" y="371.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="240.1" y="382.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.03%)</title><rect x="238.2" y="403.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="241.2" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.05%)</title><rect x="238.5" y="451.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="241.5" y="462.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="238.5" y="435.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="241.5" y="446.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="238.8" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="241.8" y="430.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.14%)</title><rect x="239.1" y="531.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="242.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.14%)</title><rect x="239.1" y="515.0" width="1.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="242.1" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (9 samples, 0.12%)</title><rect x="239.1" y="499.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="242.1" y="510.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="239.1" y="483.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="242.1" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.06%)</title><rect x="239.6" y="483.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="242.6" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="239.6" y="467.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="242.6" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (3 samples, 0.04%)</title><rect x="239.9" y="467.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="242.9" y="478.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="240.5" y="499.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="243.5" y="510.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.05%)</title><rect x="240.8" y="531.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="243.8" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.05%)</title><rect x="241.4" y="563.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="244.4" y="574.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.05%)</title><rect x="241.4" y="547.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="244.4" y="558.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="241.5" y="531.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="244.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="242.0" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="245.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="242.1" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="245.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="242.1" y="579.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="245.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (19 samples, 0.24%)</title><rect x="242.6" y="627.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="245.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="242.6" y="611.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="245.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.05%)</title><rect x="242.6" y="595.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="245.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (10 samples, 0.13%)</title><rect x="243.4" y="611.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="246.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.05%)</title><rect x="243.8" y="595.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.04%)</title><rect x="244.4" y="595.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="247.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.05%)</title><rect x="244.9" y="611.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="247.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="244.9" y="595.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="247.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="244.9" y="579.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="247.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.05%)</title><rect x="244.9" y="563.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="247.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (160 samples, 2.06%)</title><rect x="245.5" y="627.0" width="24.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="248.5" y="638.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.10%)</title><rect x="246.4" y="611.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="249.4" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.10%)</title><rect x="246.4" y="595.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="249.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (145 samples, 1.87%)</title><rect x="247.8" y="611.0" width="22.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="250.8" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (145 samples, 1.87%)</title><rect x="247.8" y="595.0" width="22.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.8" y="606.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (139 samples, 1.79%)</title><rect x="247.8" y="579.0" width="21.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.8" y="590.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (132 samples, 1.70%)</title><rect x="247.8" y="563.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (132 samples, 1.70%)</title><rect x="247.8" y="547.0" width="20.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="250.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.05%)</title><rect x="248.5" y="531.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.05%)</title><rect x="248.5" y="515.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="251.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (28 samples, 0.36%)</title><rect x="249.1" y="531.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="252.1" y="542.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.04%)</title><rect x="252.9" y="515.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (20 samples, 0.26%)</title><rect x="253.4" y="531.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="254.0" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="257.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.03%)</title><rect x="254.3" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="257.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (12 samples, 0.15%)</title><rect x="254.6" y="515.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="257.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.12%)</title><rect x="255.1" y="499.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="258.1" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.12%)</title><rect x="255.1" y="483.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="258.1" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.08%)</title><rect x="255.5" y="467.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="258.5" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.05%)</title><rect x="255.7" y="451.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.7" y="462.0"></text>
</g>
<g>
<title>vectorizedMismatch (4 samples, 0.05%)</title><rect x="255.7" y="435.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="258.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (72 samples, 0.93%)</title><rect x="256.4" y="531.0" width="11.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="259.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (68 samples, 0.88%)</title><rect x="257.0" y="515.0" width="10.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.0" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (48 samples, 0.62%)</title><rect x="260.1" y="499.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="263.1" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (6 samples, 0.08%)</title><rect x="260.5" y="483.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="263.5" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (15 samples, 0.19%)</title><rect x="261.4" y="483.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="264.4" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (8 samples, 0.10%)</title><rect x="262.5" y="467.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="265.5" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.05%)</title><rect x="263.1" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="266.1" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (24 samples, 0.31%)</title><rect x="263.7" y="483.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="266.7" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (19 samples, 0.24%)</title><rect x="264.3" y="467.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="267.3" y="478.0"></text>
</g>
<g>
<title>vectorizedMismatch (18 samples, 0.23%)</title><rect x="264.5" y="451.0" width="2.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="267.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (3 samples, 0.04%)</title><rect x="267.4" y="531.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="270.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.tombstone (5 samples, 0.06%)</title><rect x="268.1" y="563.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="271.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.&lt;init&gt; (2 samples, 0.03%)</title><rect x="268.6" y="547.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (6 samples, 0.08%)</title><rect x="268.9" y="579.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="271.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.sizeInBytes (2 samples, 0.03%)</title><rect x="268.9" y="563.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="271.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (2 samples, 0.03%)</title><rect x="268.9" y="547.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getSizeOfFlushedRow (4 samples, 0.05%)</title><rect x="269.2" y="563.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="272.2" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (4 samples, 0.05%)</title><rect x="269.2" y="547.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="272.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (8 samples, 0.10%)</title><rect x="270.0" y="643.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.0" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.10%)</title><rect x="270.0" y="627.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (27 samples, 0.35%)</title><rect x="271.3" y="675.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.3" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.13%)</title><rect x="272.8" y="659.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.8" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.13%)</title><rect x="272.8" y="643.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.8" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (7 samples, 0.09%)</title><rect x="274.4" y="659.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="277.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (11 samples, 0.14%)</title><rect x="275.4" y="675.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.4" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (11 samples, 0.14%)</title><rect x="275.4" y="659.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="278.4" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (11 samples, 0.14%)</title><rect x="275.4" y="643.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="278.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.charAt (9 samples, 0.12%)</title><rect x="275.7" y="627.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="278.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (9 samples, 0.12%)</title><rect x="275.7" y="611.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.09%)</title><rect x="277.1" y="675.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.1" y="686.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="277.4" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="280.4" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="277.7" y="659.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="280.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="277.7" y="643.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.7" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="277.9" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="280.9" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="277.9" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.9" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.03%)</title><rect x="277.9" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="280.9" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.17%)</title><rect x="278.2" y="675.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="281.2" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.10%)</title><rect x="278.9" y="659.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.09%)</title><rect x="279.1" y="643.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="282.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="279.7" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="282.7" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (185 samples, 2.38%)</title><rect x="280.1" y="691.0" width="28.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.1" y="702.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (184 samples, 2.37%)</title><rect x="280.1" y="675.0" width="28.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="283.1" y="686.0">o..</text>
</g>
<g>
<title>[unknown] (28 samples, 0.36%)</title><rect x="281.2" y="659.0" width="4.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="284.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.36%)</title><rect x="281.2" y="643.0" width="4.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="284.2" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (18 samples, 0.23%)</title><rect x="281.2" y="627.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="284.2" y="638.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="281.5" y="611.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="284.5" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (11 samples, 0.14%)</title><rect x="282.0" y="611.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="285.0" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.04%)</title><rect x="282.4" y="595.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="285.4" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="282.9" y="595.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="285.9" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (3 samples, 0.04%)</title><rect x="283.2" y="595.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="286.2" y="606.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="283.6" y="611.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="286.6" y="622.0"></text>
</g>
<g>
<title>__libc_recv (3 samples, 0.04%)</title><rect x="283.9" y="627.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="286.9" y="638.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.05%)</title><rect x="284.4" y="627.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="287.4" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.04%)</title><rect x="285.0" y="627.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="288.0" y="638.0"></text>
</g>
<g>
<title>__libc_recv (147 samples, 1.89%)</title><rect x="285.5" y="659.0" width="22.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="288.5" y="670.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (105 samples, 1.35%)</title><rect x="291.9" y="643.0" width="15.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="294.9" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (105 samples, 1.35%)</title><rect x="291.9" y="627.0" width="15.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="294.9" y="638.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (94 samples, 1.21%)</title><rect x="293.5" y="611.0" width="14.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="296.5" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (90 samples, 1.16%)</title><rect x="294.1" y="595.0" width="13.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="297.1" y="606.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.04%)</title><rect x="294.3" y="579.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="297.3" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (66 samples, 0.85%)</title><rect x="294.9" y="579.0" width="10.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="297.9" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (65 samples, 0.84%)</title><rect x="295.0" y="563.0" width="9.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="298.0" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.09%)</title><rect x="297.0" y="547.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="300.0" y="558.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.09%)</title><rect x="297.0" y="531.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="300.0" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (7 samples, 0.09%)</title><rect x="297.0" y="515.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="300.0" y="526.0"></text>
</g>
<g>
<title>sock_rfree (7 samples, 0.09%)</title><rect x="297.0" y="499.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="300.0" y="510.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="298.2" y="547.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="301.2" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="298.2" y="531.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="301.2" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (31 samples, 0.40%)</title><rect x="298.8" y="547.0" width="4.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="301.8" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (31 samples, 0.40%)</title><rect x="298.8" y="531.0" width="4.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="301.8" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (9 samples, 0.12%)</title><rect x="299.1" y="515.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="302.1" y="526.0"></text>
</g>
<g>
<title>copyout (8 samples, 0.10%)</title><rect x="299.3" y="499.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="302.3" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.08%)</title><rect x="299.6" y="483.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="302.6" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (20 samples, 0.26%)</title><rect x="300.5" y="515.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="303.5" y="526.0"></text>
</g>
<g>
<title>__check_object_size (13 samples, 0.17%)</title><rect x="301.6" y="499.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="304.6" y="510.0"></text>
</g>
<g>
<title>__check_heap_object (3 samples, 0.04%)</title><rect x="301.7" y="483.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="304.7" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (9 samples, 0.12%)</title><rect x="302.2" y="483.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="305.2" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (6 samples, 0.08%)</title><rect x="303.6" y="547.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="306.6" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="304.2" y="531.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="307.2" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.04%)</title><rect x="304.5" y="547.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="307.5" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="304.6" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="307.6" y="542.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="304.6" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="307.6" y="526.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="304.6" y="499.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="307.6" y="510.0"></text>
</g>
<g>
<title>sock_recvmsg (13 samples, 0.17%)</title><rect x="304.9" y="579.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="307.9" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (13 samples, 0.17%)</title><rect x="304.9" y="563.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="307.9" y="574.0"></text>
</g>
<g>
<title>sock_has_perm (12 samples, 0.15%)</title><rect x="305.1" y="547.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="308.1" y="558.0"></text>
</g>
<g>
<title>avc_has_perm (9 samples, 0.12%)</title><rect x="305.5" y="531.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="308.5" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.08%)</title><rect x="306.9" y="579.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="309.9" y="590.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.08%)</title><rect x="306.9" y="563.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="309.9" y="574.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.06%)</title><rect x="307.1" y="547.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="310.1" y="558.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="307.8" y="659.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="310.8" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="308.3" y="707.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="311.3" y="718.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="308.3" y="691.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="311.3" y="702.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="308.3" y="675.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="311.3" y="686.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25127] (1,973 samples, 25.42%)</title><rect x="308.6" y="755.0" width="299.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="311.6" y="766.0">[NIO Selector #2 tid=25127]</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.04%)</title><rect x="308.7" y="739.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="311.7" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="308.9" y="723.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="311.9" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="308.9" y="707.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="311.9" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="308.9" y="691.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="311.9" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (32 samples, 0.41%)</title><rect x="309.3" y="739.0" width="4.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="312.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="313.6" y="723.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="316.6" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.05%)</title><rect x="313.6" y="707.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="316.6" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,935 samples, 24.93%)</title><rect x="314.2" y="739.0" width="294.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="317.2" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (2 samples, 0.03%)</title><rect x="314.2" y="723.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="317.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.08%)</title><rect x="314.5" y="723.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.08%)</title><rect x="314.5" y="707.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (277 samples, 3.57%)</title><rect x="315.4" y="723.0" width="42.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="318.4" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (273 samples, 3.52%)</title><rect x="316.0" y="707.0" width="41.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="319.0" y="718.0">one..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (241 samples, 3.10%)</title><rect x="316.8" y="691.0" width="36.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="319.8" y="702.0">.an..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (100 samples, 1.29%)</title><rect x="338.2" y="675.0" width="15.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="341.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (100 samples, 1.29%)</title><rect x="338.2" y="659.0" width="15.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="341.2" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (79 samples, 1.02%)</title><rect x="341.4" y="643.0" width="12.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="344.4" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (78 samples, 1.00%)</title><rect x="341.6" y="627.0" width="11.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="344.6" y="638.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="341.7" y="611.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="344.7" y="622.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.05%)</title><rect x="341.7" y="595.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="344.7" y="606.0"></text>
</g>
<g>
<title>ep_poll (63 samples, 0.81%)</title><rect x="342.3" y="611.0" width="9.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="345.3" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (44 samples, 0.57%)</title><rect x="343.4" y="595.0" width="6.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="346.4" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (18 samples, 0.23%)</title><rect x="346.1" y="579.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="349.1" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (14 samples, 0.18%)</title><rect x="346.7" y="563.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="349.7" y="574.0"></text>
</g>
<g>
<title>sock_poll (14 samples, 0.18%)</title><rect x="346.7" y="547.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="349.7" y="558.0"></text>
</g>
<g>
<title>tcp_poll (8 samples, 0.10%)</title><rect x="347.6" y="531.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="350.6" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="348.6" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="351.6" y="526.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="348.9" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="351.9" y="590.0"></text>
</g>
<g>
<title>mutex_unlock (6 samples, 0.08%)</title><rect x="349.2" y="579.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="352.2" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (12 samples, 0.15%)</title><rect x="350.1" y="595.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="353.1" y="606.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.14%)</title><rect x="350.2" y="579.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="353.2" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (6 samples, 0.08%)</title><rect x="351.0" y="563.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="354.0" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.05%)</title><rect x="351.3" y="547.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="354.3" y="558.0"></text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="351.9" y="611.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="354.9" y="622.0"></text>
</g>
<g>
<title>fput_many (8 samples, 0.10%)</title><rect x="352.2" y="611.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="355.2" y="622.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (5 samples, 0.06%)</title><rect x="353.4" y="691.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="356.4" y="702.0"></text>
</g>
<g>
<title>__GI___clock_gettime (14 samples, 0.18%)</title><rect x="354.2" y="691.0" width="2.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="357.2" y="702.0"></text>
</g>
<g>
<title>[vdso] (8 samples, 0.10%)</title><rect x="355.1" y="675.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="358.1" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (6 samples, 0.08%)</title><rect x="356.3" y="691.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="359.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,650 samples, 21.26%)</title><rect x="357.5" y="723.0" width="250.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="360.5" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,645 samples, 21.19%)</title><rect x="358.1" y="707.0" width="250.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="361.1" y="718.0">one/nio/http/HttpSession.processR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,464 samples, 18.86%)</title><rect x="358.3" y="691.0" width="222.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="361.3" y="702.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,389 samples, 17.89%)</title><rect x="359.0" y="675.0" width="211.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="362.0" y="686.0">one/nio/http/HttpSession.han..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,385 samples, 17.84%)</title><rect x="359.7" y="659.0" width="210.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="362.7" y="670.0">one/nio/http/HttpServer.hand..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1,377 samples, 17.74%)</title><rect x="359.7" y="643.0" width="209.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="362.7" y="654.0">RequestHandler1_entity.hand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,186 samples, 15.28%)</title><rect x="360.0" y="627.0" width="180.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="363.0" y="638.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.04%)</title><rect x="361.5" y="611.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="364.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="361.6" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="364.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="361.6" y="579.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="364.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,169 samples, 15.06%)</title><rect x="361.9" y="611.0" width="177.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="364.9" y="622.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (26 samples, 0.33%)</title><rect x="361.9" y="595.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.9" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (14 samples, 0.18%)</title><rect x="363.8" y="579.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="366.8" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.03%)</title><rect x="363.8" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="366.8" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.06%)</title><rect x="364.2" y="563.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="367.2" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.08%)</title><rect x="365.0" y="563.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="368.0" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.08%)</title><rect x="365.0" y="547.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.0" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,143 samples, 14.73%)</title><rect x="365.9" y="595.0" width="173.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="368.9" y="606.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,140 samples, 14.69%)</title><rect x="366.3" y="579.0" width="173.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="369.3" y="590.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,134 samples, 14.61%)</title><rect x="366.5" y="563.0" width="172.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="369.5" y="574.0">one/nio/net/Session$Ar..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,134 samples, 14.61%)</title><rect x="366.5" y="547.0" width="172.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="369.5" y="558.0">one/nio/net/NativeSock..</text>
</g>
<g>
<title>.annobin_send.c (1,118 samples, 14.40%)</title><rect x="367.3" y="531.0" width="169.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="370.3" y="542.0">.annobin_send.c</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (7 samples, 0.09%)</title><rect x="375.9" y="515.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="378.9" y="526.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.04%)</title><rect x="377.0" y="515.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="380.0" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,051 samples, 13.54%)</title><rect x="377.4" y="515.0" width="159.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="380.4" y="526.0">entry_SYSCALL_64_aft..</text>
</g>
<g>
<title>do_syscall_64 (1,051 samples, 13.54%)</title><rect x="377.4" y="499.0" width="159.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="380.4" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,031 samples, 13.28%)</title><rect x="380.5" y="483.0" width="156.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="383.5" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,028 samples, 13.24%)</title><rect x="380.9" y="467.0" width="156.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="383.9" y="478.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (1,017 samples, 13.10%)</title><rect x="381.7" y="451.0" width="154.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="384.7" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (7 samples, 0.09%)</title><rect x="381.8" y="435.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="384.8" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (7 samples, 0.09%)</title><rect x="381.8" y="419.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="384.8" y="430.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.04%)</title><rect x="382.5" y="403.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="385.5" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,009 samples, 13.00%)</title><rect x="382.9" y="435.0" width="153.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="385.9" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="383.2" y="419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="386.2" y="430.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="383.5" y="419.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="386.5" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="383.7" y="403.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="386.7" y="414.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.06%)</title><rect x="384.0" y="419.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="387.0" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="384.0" y="403.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="387.0" y="414.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="384.4" y="403.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="387.4" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (997 samples, 12.84%)</title><rect x="384.7" y="419.0" width="151.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="387.7" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.05%)</title><rect x="385.6" y="403.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="388.6" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="386.0" y="387.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="389.0" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (923 samples, 11.89%)</title><rect x="386.3" y="403.0" width="140.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="389.3" y="414.0">__tcp_push_pending..</text>
</g>
<g>
<title>tcp_write_xmit (921 samples, 11.87%)</title><rect x="386.6" y="387.0" width="140.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="389.6" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (909 samples, 11.71%)</title><rect x="387.6" y="371.0" width="138.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="390.6" y="382.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (880 samples, 11.34%)</title><rect x="389.0" y="355.0" width="133.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="392.0" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (7 samples, 0.09%)</title><rect x="389.3" y="339.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="392.3" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (6 samples, 0.08%)</title><rect x="389.4" y="323.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="392.4" y="334.0"></text>
</g>
<g>
<title>ip_local_out (158 samples, 2.04%)</title><rect x="390.4" y="339.0" width="24.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="393.4" y="350.0">i..</text>
</g>
<g>
<title>__ip_local_out (158 samples, 2.04%)</title><rect x="390.4" y="323.0" width="24.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="393.4" y="334.0">_..</text>
</g>
<g>
<title>ip_send_check (9 samples, 0.12%)</title><rect x="390.4" y="307.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="393.4" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (149 samples, 1.92%)</title><rect x="391.7" y="307.0" width="22.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="394.7" y="318.0">n..</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (45 samples, 0.58%)</title><rect x="391.9" y="291.0" width="6.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="394.9" y="302.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (11 samples, 0.14%)</title><rect x="398.7" y="291.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="401.7" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (16 samples, 0.21%)</title><rect x="400.4" y="291.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="403.4" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (12 samples, 0.15%)</title><rect x="401.0" y="275.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="404.0" y="286.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (5 samples, 0.06%)</title><rect x="402.8" y="291.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="405.8" y="302.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (4 samples, 0.05%)</title><rect x="403.6" y="291.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="406.6" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (4 samples, 0.05%)</title><rect x="404.2" y="291.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="407.2" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (4 samples, 0.05%)</title><rect x="404.8" y="291.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="407.8" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (47 samples, 0.61%)</title><rect x="405.4" y="291.0" width="7.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="408.4" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (13 samples, 0.17%)</title><rect x="406.8" y="275.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="409.8" y="286.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (2 samples, 0.03%)</title><rect x="408.8" y="275.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="411.8" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (18 samples, 0.23%)</title><rect x="409.1" y="275.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="412.1" y="286.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (2 samples, 0.03%)</title><rect x="410.9" y="259.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="413.9" y="270.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.05%)</title><rect x="411.2" y="259.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="414.2" y="270.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (5 samples, 0.06%)</title><rect x="411.8" y="275.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="414.8" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (10 samples, 0.13%)</title><rect x="412.6" y="291.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="415.6" y="302.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (3 samples, 0.04%)</title><rect x="413.2" y="275.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="416.2" y="286.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (2 samples, 0.03%)</title><rect x="413.8" y="275.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="416.8" y="286.0"></text>
</g>
<g>
<title>selinux_ipv4_output (2 samples, 0.03%)</title><rect x="414.1" y="291.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="417.1" y="302.0"></text>
</g>
<g>
<title>ip_output (713 samples, 9.19%)</title><rect x="414.4" y="339.0" width="108.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="417.4" y="350.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (648 samples, 8.35%)</title><rect x="415.0" y="323.0" width="98.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="418.0" y="334.0">ip_finish_ou..</text>
</g>
<g>
<title>__dev_queue_xmit (53 samples, 0.68%)</title><rect x="416.7" y="307.0" width="8.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="419.7" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (34 samples, 0.44%)</title><rect x="419.2" y="291.0" width="5.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="422.2" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (32 samples, 0.41%)</title><rect x="419.5" y="275.0" width="4.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="422.5" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="419.9" y="259.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="422.9" y="270.0"></text>
</g>
<g>
<title>netif_rx (16 samples, 0.21%)</title><rect x="420.2" y="259.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="423.2" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (15 samples, 0.19%)</title><rect x="420.3" y="243.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="423.3" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (7 samples, 0.09%)</title><rect x="421.5" y="227.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="424.5" y="238.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (3 samples, 0.04%)</title><rect x="422.6" y="259.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="425.6" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (9 samples, 0.12%)</title><rect x="423.0" y="259.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="426.0" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (584 samples, 7.52%)</title><rect x="424.7" y="307.0" width="88.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="427.7" y="318.0">__local_bh..</text>
</g>
<g>
<title>do_softirq.part.0 (583 samples, 7.51%)</title><rect x="424.9" y="291.0" width="88.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="427.9" y="302.0">do_softirq..</text>
</g>
<g>
<title>do_softirq_own_stack (576 samples, 7.42%)</title><rect x="425.9" y="275.0" width="87.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="428.9" y="286.0">do_softirq..</text>
</g>
<g>
<title>__softirqentry_text_start (576 samples, 7.42%)</title><rect x="425.9" y="259.0" width="87.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="428.9" y="270.0">__softirqe..</text>
</g>
<g>
<title>net_rx_action (562 samples, 7.24%)</title><rect x="427.9" y="243.0" width="85.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="430.9" y="254.0">net_rx_act..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.03%)</title><rect x="428.5" y="227.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="431.5" y="238.0"></text>
</g>
<g>
<title>process_backlog (555 samples, 7.15%)</title><rect x="429.0" y="227.0" width="84.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="432.0" y="238.0">process_ba..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (543 samples, 7.00%)</title><rect x="430.8" y="211.0" width="82.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="433.8" y="222.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.04%)</title><rect x="430.8" y="195.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="433.8" y="206.0"></text>
</g>
<g>
<title>ip_rcv (540 samples, 6.96%)</title><rect x="431.3" y="195.0" width="82.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="434.3" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (442 samples, 5.69%)</title><rect x="432.5" y="179.0" width="67.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="435.5" y="190.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (359 samples, 4.63%)</title><rect x="433.4" y="163.0" width="54.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="436.4" y="174.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (357 samples, 4.60%)</title><rect x="433.7" y="147.0" width="54.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="436.7" y="158.0">ip_pr..</text>
</g>
<g>
<title>raw_local_deliver (6 samples, 0.08%)</title><rect x="434.1" y="131.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="437.1" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (348 samples, 4.48%)</title><rect x="435.1" y="131.0" width="52.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="438.1" y="142.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (18 samples, 0.23%)</title><rect x="436.4" y="115.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="439.4" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.04%)</title><rect x="438.7" y="99.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="441.7" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock (4 samples, 0.05%)</title><rect x="439.2" y="115.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="442.2" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (9 samples, 0.12%)</title><rect x="439.8" y="115.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="442.8" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (8 samples, 0.10%)</title><rect x="439.9" y="99.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="442.9" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (7 samples, 0.09%)</title><rect x="440.1" y="83.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="443.1" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (307 samples, 3.96%)</title><rect x="441.1" y="115.0" width="46.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="444.1" y="126.0">tcp_..</text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="441.4" y="99.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="444.4" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (303 samples, 3.90%)</title><rect x="441.7" y="99.0" width="46.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="444.7" y="110.0">tcp_..</text>
</g>
<g>
<title>tcp_ack (71 samples, 0.91%)</title><rect x="443.3" y="83.0" width="10.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="446.3" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (26 samples, 0.33%)</title><rect x="446.0" y="67.0" width="4.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="449.0" y="78.0"></text>
</g>
<g>
<title>__slab_free (7 samples, 0.09%)</title><rect x="446.2" y="51.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="449.2" y="62.0"></text>
</g>
<g>
<title>skb_release_data (17 samples, 0.22%)</title><rect x="447.4" y="51.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="450.4" y="62.0"></text>
</g>
<g>
<title>__list_del_entry_valid (2 samples, 0.03%)</title><rect x="450.0" y="67.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="453.0" y="78.0"></text>
</g>
<g>
<title>bictcp_acked (4 samples, 0.05%)</title><rect x="450.3" y="67.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="453.3" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (4 samples, 0.05%)</title><rect x="450.9" y="67.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="453.9" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.04%)</title><rect x="451.5" y="67.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="454.5" y="78.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.03%)</title><rect x="451.9" y="67.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="454.9" y="78.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.03%)</title><rect x="452.4" y="67.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="455.4" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.04%)</title><rect x="453.3" y="67.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="456.3" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="453.8" y="67.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="456.8" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.03%)</title><rect x="454.1" y="83.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="457.1" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (212 samples, 2.73%)</title><rect x="454.4" y="83.0" width="32.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="457.4" y="94.0">tc..</text>
</g>
<g>
<title>dst_release (2 samples, 0.03%)</title><rect x="454.7" y="67.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="457.7" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (204 samples, 2.63%)</title><rect x="455.0" y="67.0" width="31.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="458.0" y="78.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (198 samples, 2.55%)</title><rect x="455.7" y="51.0" width="30.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="458.7" y="62.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (198 samples, 2.55%)</title><rect x="455.7" y="35.0" width="30.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="458.7" y="46.0">_r..</text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="486.0" y="67.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="489.0" y="78.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="486.3" y="67.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="489.3" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (7 samples, 0.09%)</title><rect x="486.6" y="83.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="489.6" y="94.0"></text>
</g>
<g>
<title>ktime_get (6 samples, 0.08%)</title><rect x="486.7" y="67.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="489.7" y="78.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.05%)</title><rect x="487.0" y="51.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="490.0" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (77 samples, 0.99%)</title><rect x="488.0" y="163.0" width="11.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="491.0" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (61 samples, 0.79%)</title><rect x="488.3" y="147.0" width="9.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="491.3" y="158.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (6 samples, 0.08%)</title><rect x="495.7" y="131.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="498.7" y="142.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (6 samples, 0.08%)</title><rect x="496.6" y="131.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="499.6" y="142.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (3 samples, 0.04%)</title><rect x="497.7" y="147.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="500.7" y="158.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (4 samples, 0.05%)</title><rect x="498.1" y="147.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="501.1" y="158.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (5 samples, 0.06%)</title><rect x="498.8" y="147.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="501.8" y="158.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (3 samples, 0.04%)</title><rect x="499.1" y="131.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="502.1" y="142.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (5 samples, 0.06%)</title><rect x="499.7" y="179.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="502.7" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.04%)</title><rect x="500.4" y="179.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="503.4" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (82 samples, 1.06%)</title><rect x="500.9" y="179.0" width="12.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="503.9" y="190.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (5 samples, 0.06%)</title><rect x="501.6" y="163.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="504.6" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (56 samples, 0.72%)</title><rect x="502.4" y="163.0" width="8.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="505.4" y="174.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.03%)</title><rect x="510.9" y="163.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="513.9" y="174.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (5 samples, 0.06%)</title><rect x="511.2" y="163.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="514.2" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (2 samples, 0.03%)</title><rect x="512.0" y="163.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="515.0" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (2 samples, 0.03%)</title><rect x="512.3" y="163.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="515.3" y="174.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (4 samples, 0.05%)</title><rect x="512.6" y="163.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="515.6" y="174.0"></text>
</g>
<g>
<title>ip_finish_output (10 samples, 0.13%)</title><rect x="513.5" y="323.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="516.5" y="334.0"></text>
</g>
<g>
<title>ipv4_mtu (8 samples, 0.10%)</title><rect x="513.8" y="307.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="516.8" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (51 samples, 0.66%)</title><rect x="515.0" y="323.0" width="7.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="518.0" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (23 samples, 0.30%)</title><rect x="515.0" y="307.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="518.0" y="318.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.03%)</title><rect x="518.5" y="307.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="521.5" y="318.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (3 samples, 0.04%)</title><rect x="518.8" y="307.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="521.8" y="318.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (9 samples, 0.12%)</title><rect x="519.3" y="307.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="522.3" y="318.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (8 samples, 0.10%)</title><rect x="519.4" y="291.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="522.4" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (4 samples, 0.05%)</title><rect x="520.6" y="307.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="523.6" y="318.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (2 samples, 0.03%)</title><rect x="520.9" y="291.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="523.9" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute (9 samples, 0.12%)</title><rect x="521.3" y="307.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="524.3" y="318.0"></text>
</g>
<g>
<title>__skb_clone (8 samples, 0.10%)</title><rect x="522.8" y="355.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="525.8" y="366.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.04%)</title><rect x="523.5" y="339.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="526.5" y="350.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.04%)</title><rect x="524.3" y="355.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="527.3" y="366.0"></text>
</g>
<g>
<title>tcp_v4_send_check (3 samples, 0.04%)</title><rect x="525.4" y="355.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="528.4" y="366.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.04%)</title><rect x="525.8" y="371.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="528.8" y="382.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="525.8" y="355.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="528.8" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.03%)</title><rect x="526.3" y="371.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="529.3" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.05%)</title><rect x="526.6" y="403.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="529.6" y="414.0"></text>
</g>
<g>
<title>copyin (4 samples, 0.05%)</title><rect x="526.6" y="387.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="529.6" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.05%)</title><rect x="526.6" y="371.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="529.6" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (33 samples, 0.43%)</title><rect x="527.2" y="403.0" width="5.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="530.2" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (32 samples, 0.41%)</title><rect x="527.3" y="387.0" width="4.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="530.3" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (11 samples, 0.14%)</title><rect x="528.2" y="371.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="531.2" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (10 samples, 0.13%)</title><rect x="528.4" y="355.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="531.4" y="366.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="529.5" y="339.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="532.5" y="350.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.12%)</title><rect x="529.9" y="371.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="532.9" y="382.0"></text>
</g>
<g>
<title>ksize (6 samples, 0.08%)</title><rect x="531.3" y="371.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="534.3" y="382.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.04%)</title><rect x="532.2" y="403.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="535.2" y="414.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.04%)</title><rect x="532.8" y="403.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="535.8" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (16 samples, 0.21%)</title><rect x="533.3" y="403.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="536.3" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (15 samples, 0.19%)</title><rect x="533.4" y="387.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="536.4" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (11 samples, 0.14%)</title><rect x="533.9" y="371.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="536.9" y="382.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (3 samples, 0.04%)</title><rect x="535.8" y="403.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="538.8" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.08%)</title><rect x="536.3" y="451.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="539.3" y="462.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.06%)</title><rect x="536.5" y="435.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="539.5" y="446.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.05%)</title><rect x="536.6" y="419.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="539.6" y="430.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.13%)</title><rect x="537.2" y="531.0" width="1.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="540.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.13%)</title><rect x="537.2" y="515.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="540.2" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (10 samples, 0.13%)</title><rect x="537.2" y="499.0" width="1.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="540.2" y="510.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (5 samples, 0.06%)</title><rect x="537.4" y="483.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="540.4" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.05%)</title><rect x="538.1" y="483.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="541.1" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.04%)</title><rect x="538.1" y="467.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="541.1" y="478.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.06%)</title><rect x="538.9" y="563.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="541.9" y="574.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.06%)</title><rect x="538.9" y="547.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="541.9" y="558.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.05%)</title><rect x="539.0" y="531.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="542.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="539.6" y="611.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="542.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="539.6" y="595.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="542.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (14 samples, 0.18%)</title><rect x="540.3" y="627.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="540.3" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="540.3" y="595.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="543.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="540.6" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="543.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.04%)</title><rect x="540.6" y="595.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="543.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (5 samples, 0.06%)</title><rect x="541.0" y="611.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="544.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="541.2" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="544.2" y="606.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="541.5" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.5" y="606.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.05%)</title><rect x="541.8" y="611.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="544.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="541.9" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="541.9" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="541.9" y="563.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="544.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (175 samples, 2.25%)</title><rect x="542.4" y="627.0" width="26.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.4" y="638.0">r..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.04%)</title><rect x="543.0" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="546.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (168 samples, 2.16%)</title><rect x="543.4" y="611.0" width="25.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="546.4" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (167 samples, 2.15%)</title><rect x="543.6" y="595.0" width="25.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.6" y="606.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (162 samples, 2.09%)</title><rect x="543.6" y="579.0" width="24.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="546.6" y="590.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (157 samples, 2.02%)</title><rect x="543.6" y="563.0" width="23.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="546.6" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (157 samples, 2.02%)</title><rect x="543.6" y="547.0" width="23.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="546.6" y="558.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (10 samples, 0.13%)</title><rect x="545.4" y="531.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="548.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (10 samples, 0.13%)</title><rect x="545.4" y="515.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="548.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (51 samples, 0.66%)</title><rect x="546.9" y="531.0" width="7.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="549.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.03%)</title><rect x="554.8" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="557.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.03%)</title><rect x="554.8" y="515.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="557.8" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="554.8" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.8" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="554.8" y="483.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.8" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="554.8" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.8" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="554.8" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="557.8" y="462.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.03%)</title><rect x="554.8" y="435.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="557.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (79 samples, 1.02%)</title><rect x="555.2" y="531.0" width="12.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="558.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (75 samples, 0.97%)</title><rect x="555.8" y="515.0" width="11.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.8" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (62 samples, 0.80%)</title><rect x="557.7" y="499.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="560.7" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.05%)</title><rect x="558.3" y="483.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="561.3" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (5 samples, 0.06%)</title><rect x="559.0" y="483.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="562.0" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (21 samples, 0.27%)</title><rect x="559.7" y="483.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="562.7" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (10 samples, 0.13%)</title><rect x="561.4" y="467.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="564.4" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.05%)</title><rect x="562.0" y="451.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="565.0" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (2 samples, 0.03%)</title><rect x="562.6" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (28 samples, 0.36%)</title><rect x="562.9" y="483.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.9" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (26 samples, 0.33%)</title><rect x="563.1" y="467.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="566.1" y="478.0"></text>
</g>
<g>
<title>vectorizedMismatch (21 samples, 0.27%)</title><rect x="563.8" y="451.0" width="3.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="566.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (2 samples, 0.03%)</title><rect x="567.2" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.tombstone (5 samples, 0.06%)</title><rect x="567.5" y="563.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.&lt;init&gt; (4 samples, 0.05%)</title><rect x="567.6" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="570.6" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="567.8" y="531.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="570.8" y="542.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.04%)</title><rect x="567.8" y="515.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="570.8" y="526.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="567.9" y="499.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="570.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (5 samples, 0.06%)</title><rect x="568.2" y="579.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="571.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.sizeInBytes (3 samples, 0.04%)</title><rect x="568.4" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="571.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (3 samples, 0.04%)</title><rect x="568.4" y="547.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="571.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (8 samples, 0.10%)</title><rect x="569.0" y="643.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="572.0" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.09%)</title><rect x="569.1" y="627.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="572.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="569.9" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (23 samples, 0.30%)</title><rect x="570.2" y="675.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.2" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.08%)</title><rect x="571.4" y="659.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="574.4" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.08%)</title><rect x="571.4" y="643.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="574.4" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (9 samples, 0.12%)</title><rect x="572.3" y="659.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="575.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (17 samples, 0.22%)</title><rect x="573.7" y="675.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="576.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (17 samples, 0.22%)</title><rect x="573.7" y="659.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="576.7" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (17 samples, 0.22%)</title><rect x="573.7" y="643.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.charAt (14 samples, 0.18%)</title><rect x="574.2" y="627.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="577.2" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (14 samples, 0.18%)</title><rect x="574.2" y="611.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="577.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.03%)</title><rect x="576.3" y="675.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="579.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.09%)</title><rect x="576.6" y="675.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="579.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="576.9" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="579.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="577.3" y="659.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="580.3" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="577.3" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="580.3" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.27%)</title><rect x="577.7" y="675.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="580.7" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.19%)</title><rect x="578.6" y="659.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="581.6" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.15%)</title><rect x="579.0" y="643.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="582.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="580.1" y="627.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="583.1" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (180 samples, 2.32%)</title><rect x="580.8" y="691.0" width="27.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="583.8" y="702.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (180 samples, 2.32%)</title><rect x="580.8" y="675.0" width="27.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="583.8" y="686.0">o..</text>
</g>
<g>
<title>[unknown] (27 samples, 0.35%)</title><rect x="581.1" y="659.0" width="4.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="584.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.35%)</title><rect x="581.1" y="643.0" width="4.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="584.1" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (22 samples, 0.28%)</title><rect x="581.1" y="627.0" width="3.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="584.1" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.04%)</title><rect x="581.1" y="611.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="584.1" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="581.6" y="611.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="584.6" y="622.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (4 samples, 0.05%)</title><rect x="581.9" y="611.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="584.9" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (11 samples, 0.14%)</title><rect x="582.5" y="611.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="585.5" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="583.0" y="595.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="586.0" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (4 samples, 0.05%)</title><rect x="583.6" y="595.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="586.6" y="606.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="584.2" y="611.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="587.2" y="622.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.04%)</title><rect x="584.5" y="627.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="587.5" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.03%)</title><rect x="584.9" y="627.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="587.9" y="638.0"></text>
</g>
<g>
<title>__libc_recv (149 samples, 1.92%)</title><rect x="585.3" y="659.0" width="22.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="588.3" y="670.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (112 samples, 1.44%)</title><rect x="590.9" y="643.0" width="17.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="593.9" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (112 samples, 1.44%)</title><rect x="590.9" y="627.0" width="17.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="593.9" y="638.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (91 samples, 1.17%)</title><rect x="594.1" y="611.0" width="13.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="597.1" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (86 samples, 1.11%)</title><rect x="594.8" y="595.0" width="13.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="597.8" y="606.0"></text>
</g>
<g>
<title>inet_recvmsg (68 samples, 0.88%)</title><rect x="595.0" y="579.0" width="10.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="598.0" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (67 samples, 0.86%)</title><rect x="595.1" y="563.0" width="10.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="598.1" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.09%)</title><rect x="597.4" y="547.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="600.4" y="558.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.08%)</title><rect x="597.4" y="531.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="600.4" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (6 samples, 0.08%)</title><rect x="597.4" y="515.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="600.4" y="526.0"></text>
</g>
<g>
<title>sock_rfree (6 samples, 0.08%)</title><rect x="597.4" y="499.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="600.4" y="510.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.06%)</title><rect x="598.6" y="547.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="601.6" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.06%)</title><rect x="598.6" y="531.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="601.6" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (27 samples, 0.35%)</title><rect x="599.5" y="547.0" width="4.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="602.5" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (26 samples, 0.33%)</title><rect x="599.7" y="531.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="602.7" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (10 samples, 0.13%)</title><rect x="599.7" y="515.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="602.7" y="526.0"></text>
</g>
<g>
<title>copyout (10 samples, 0.13%)</title><rect x="599.7" y="499.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="602.7" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (9 samples, 0.12%)</title><rect x="599.8" y="483.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="602.8" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (16 samples, 0.21%)</title><rect x="601.2" y="515.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="604.2" y="526.0"></text>
</g>
<g>
<title>__check_object_size (12 samples, 0.15%)</title><rect x="601.8" y="499.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="604.8" y="510.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.03%)</title><rect x="601.8" y="483.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="604.8" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (8 samples, 0.10%)</title><rect x="602.1" y="483.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="605.1" y="494.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.03%)</title><rect x="603.3" y="483.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="606.3" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.03%)</title><rect x="603.6" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="606.6" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (9 samples, 0.12%)</title><rect x="604.0" y="547.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="607.0" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (8 samples, 0.10%)</title><rect x="604.1" y="531.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="607.1" y="542.0"></text>
</g>
<g>
<title>ktime_get (6 samples, 0.08%)</title><rect x="604.4" y="515.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="607.4" y="526.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="604.9" y="499.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="607.9" y="510.0"></text>
</g>
<g>
<title>sock_recvmsg (11 samples, 0.14%)</title><rect x="605.3" y="579.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="608.3" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (11 samples, 0.14%)</title><rect x="605.3" y="563.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="608.3" y="574.0"></text>
</g>
<g>
<title>sock_has_perm (9 samples, 0.12%)</title><rect x="605.6" y="547.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="608.6" y="558.0"></text>
</g>
<g>
<title>avc_has_perm (4 samples, 0.05%)</title><rect x="606.4" y="531.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="609.4" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.08%)</title><rect x="607.0" y="579.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="610.0" y="590.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.08%)</title><rect x="607.0" y="563.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="610.0" y="574.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.05%)</title><rect x="607.3" y="547.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="610.3" y="558.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="607.9" y="659.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="610.9" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25128] (3,212 samples, 41.38%)</title><rect x="608.5" y="755.0" width="488.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="611.5" y="766.0">[NIO Selector #3 tid=25128]</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="608.5" y="739.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="611.5" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="608.5" y="723.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="611.5" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="608.5" y="707.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="611.5" y="718.0"></text>
</g>
<g>
<title>[unknown_Java] (30 samples, 0.39%)</title><rect x="609.0" y="739.0" width="4.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="612.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="613.1" y="723.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="616.1" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="613.2" y="707.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="616.2" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,178 samples, 40.94%)</title><rect x="613.7" y="739.0" width="483.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="616.7" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (3 samples, 0.04%)</title><rect x="613.7" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="616.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.04%)</title><rect x="614.1" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="617.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.04%)</title><rect x="614.1" y="707.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="617.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (396 samples, 5.10%)</title><rect x="614.6" y="723.0" width="60.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="617.6" y="734.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.03%)</title><rect x="615.4" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.03%)</title><rect x="615.4" y="691.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="618.4" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (389 samples, 5.01%)</title><rect x="615.7" y="707.0" width="59.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="618.7" y="718.0">one/ni..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (362 samples, 4.66%)</title><rect x="617.3" y="691.0" width="55.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="620.3" y="702.0">.anno..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (190 samples, 2.45%)</title><rect x="643.3" y="675.0" width="28.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="646.3" y="686.0">en..</text>
</g>
<g>
<title>do_syscall_64 (190 samples, 2.45%)</title><rect x="643.3" y="659.0" width="28.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="646.3" y="670.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (165 samples, 2.13%)</title><rect x="647.1" y="643.0" width="25.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="650.1" y="654.0">_..</text>
</g>
<g>
<title>do_epoll_wait (160 samples, 2.06%)</title><rect x="647.9" y="627.0" width="24.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="650.9" y="638.0">d..</text>
</g>
<g>
<title>__fget_light (19 samples, 0.24%)</title><rect x="648.6" y="611.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="651.6" y="622.0"></text>
</g>
<g>
<title>__fget (15 samples, 0.19%)</title><rect x="649.3" y="595.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="652.3" y="606.0"></text>
</g>
<g>
<title>ep_poll (121 samples, 1.56%)</title><rect x="651.5" y="611.0" width="18.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="654.5" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (97 samples, 1.25%)</title><rect x="653.7" y="595.0" width="14.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="656.7" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (54 samples, 0.70%)</title><rect x="659.7" y="579.0" width="8.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="662.7" y="590.0"></text>
</g>
<g>
<title>__list_del_entry_valid (2 samples, 0.03%)</title><rect x="662.2" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="665.2" y="574.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (36 samples, 0.46%)</title><rect x="662.5" y="563.0" width="5.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="665.5" y="574.0"></text>
</g>
<g>
<title>sock_poll (33 samples, 0.43%)</title><rect x="662.9" y="547.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="665.9" y="558.0"></text>
</g>
<g>
<title>tcp_poll (21 samples, 0.27%)</title><rect x="664.8" y="531.0" width="3.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="667.8" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (5 samples, 0.06%)</title><rect x="667.2" y="515.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="670.2" y="526.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="668.0" y="579.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="671.0" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (10 samples, 0.13%)</title><rect x="668.4" y="595.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="671.4" y="606.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.12%)</title><rect x="668.6" y="579.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="671.6" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (8 samples, 0.10%)</title><rect x="668.7" y="563.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="671.7" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.05%)</title><rect x="669.3" y="547.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="672.3" y="558.0"></text>
</g>
<g>
<title>fput_many (15 samples, 0.19%)</title><rect x="669.9" y="611.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="672.9" y="622.0"></text>
</g>
<g>
<title>__GI___clock_gettime (4 samples, 0.05%)</title><rect x="672.5" y="691.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="675.5" y="702.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (8 samples, 0.10%)</title><rect x="673.1" y="691.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="676.1" y="702.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="674.3" y="691.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="677.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,776 samples, 35.76%)</title><rect x="674.8" y="723.0" width="422.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="677.8" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,766 samples, 35.64%)</title><rect x="675.7" y="707.0" width="420.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="678.7" y="718.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,438 samples, 31.41%)</title><rect x="675.7" y="691.0" width="370.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="678.7" y="702.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,333 samples, 30.06%)</title><rect x="677.4" y="675.0" width="354.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.4" y="686.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,329 samples, 30.01%)</title><rect x="678.0" y="659.0" width="354.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="681.0" y="670.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2,316 samples, 29.84%)</title><rect x="678.0" y="643.0" width="352.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.0" y="654.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,007 samples, 25.86%)</title><rect x="678.4" y="627.0" width="305.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="681.4" y="638.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.04%)</title><rect x="680.7" y="611.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="683.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="680.7" y="595.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="680.7" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="683.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="680.9" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="683.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,987 samples, 25.60%)</title><rect x="681.2" y="611.0" width="302.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="684.2" y="622.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (57 samples, 0.73%)</title><rect x="681.2" y="595.0" width="8.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.2" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="682.5" y="579.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="685.5" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="682.9" y="579.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="685.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (44 samples, 0.57%)</title><rect x="683.2" y="579.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.2" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.05%)</title><rect x="683.2" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="686.2" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.03%)</title><rect x="683.5" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.5" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (18 samples, 0.23%)</title><rect x="683.8" y="563.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (9 samples, 0.12%)</title><rect x="684.8" y="547.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="687.8" y="558.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.03%)</title><rect x="685.3" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="688.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (4 samples, 0.05%)</title><rect x="685.6" y="531.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.6" y="542.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="686.2" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="689.2" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (22 samples, 0.28%)</title><rect x="686.5" y="563.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.5" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (22 samples, 0.28%)</title><rect x="686.5" y="547.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="689.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (8 samples, 0.10%)</title><rect x="688.5" y="531.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="691.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (6 samples, 0.08%)</title><rect x="688.5" y="515.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="691.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.03%)</title><rect x="689.4" y="515.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.4" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,930 samples, 24.86%)</title><rect x="689.8" y="595.0" width="293.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.8" y="606.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,929 samples, 24.85%)</title><rect x="690.0" y="579.0" width="293.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="693.0" y="590.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,923 samples, 24.77%)</title><rect x="690.0" y="563.0" width="292.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="693.0" y="574.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,923 samples, 24.77%)</title><rect x="690.0" y="547.0" width="292.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.0" y="558.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>.annobin_send.c (1,877 samples, 24.18%)</title><rect x="692.0" y="531.0" width="285.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="695.0" y="542.0">.annobin_send.c</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (6 samples, 0.08%)</title><rect x="706.1" y="515.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="709.1" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,778 samples, 22.91%)</title><rect x="707.0" y="515.0" width="270.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="710.0" y="526.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (1,778 samples, 22.91%)</title><rect x="707.0" y="499.0" width="270.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="710.0" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,744 samples, 22.47%)</title><rect x="711.9" y="483.0" width="265.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="714.9" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,740 samples, 22.42%)</title><rect x="712.5" y="467.0" width="264.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="715.5" y="478.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (7 samples, 0.09%)</title><rect x="712.8" y="451.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="715.8" y="462.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="713.9" y="451.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="716.9" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (1,714 samples, 22.08%)</title><rect x="714.2" y="451.0" width="260.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="717.2" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (17 samples, 0.22%)</title><rect x="714.5" y="435.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="717.5" y="446.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (2 samples, 0.03%)</title><rect x="714.6" y="419.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="717.6" y="430.0"></text>
</g>
<g>
<title>sock_has_perm (14 samples, 0.18%)</title><rect x="714.9" y="419.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="717.9" y="430.0"></text>
</g>
<g>
<title>avc_has_perm (6 samples, 0.08%)</title><rect x="716.1" y="403.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="719.1" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,695 samples, 21.84%)</title><rect x="717.1" y="435.0" width="257.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="720.1" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="718.0" y="419.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="721.0" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="718.1" y="403.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="721.1" y="414.0"></text>
</g>
<g>
<title>release_sock (14 samples, 0.18%)</title><rect x="718.4" y="419.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="721.4" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.08%)</title><rect x="718.7" y="403.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="721.7" y="414.0"></text>
</g>
<g>
<title>tcp_release_cb (6 samples, 0.08%)</title><rect x="719.6" y="403.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="722.6" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,672 samples, 21.54%)</title><rect x="720.6" y="419.0" width="254.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="723.6" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (6 samples, 0.08%)</title><rect x="722.7" y="403.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="725.7" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.05%)</title><rect x="723.0" y="387.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="726.0" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1,564 samples, 20.15%)</title><rect x="723.6" y="403.0" width="237.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="726.6" y="414.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (1,561 samples, 20.11%)</title><rect x="724.1" y="387.0" width="237.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="727.1" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (1,527 samples, 19.67%)</title><rect x="725.4" y="371.0" width="232.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="728.4" y="382.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (1,481 samples, 19.08%)</title><rect x="727.7" y="355.0" width="225.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="730.7" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (17 samples, 0.22%)</title><rect x="729.1" y="339.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="732.1" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (11 samples, 0.14%)</title><rect x="730.0" y="323.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="733.0" y="334.0"></text>
</g>
<g>
<title>ip_local_out (270 samples, 3.48%)</title><rect x="731.7" y="339.0" width="41.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="734.7" y="350.0">ip_..</text>
</g>
<g>
<title>__ip_local_out (269 samples, 3.47%)</title><rect x="731.8" y="323.0" width="40.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="734.8" y="334.0">__i..</text>
</g>
<g>
<title>ip_send_check (9 samples, 0.12%)</title><rect x="731.8" y="307.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="734.8" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (260 samples, 3.35%)</title><rect x="733.2" y="307.0" width="39.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="736.2" y="318.0">nf_..</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (87 samples, 1.12%)</title><rect x="733.9" y="291.0" width="13.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="736.9" y="302.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (8 samples, 0.10%)</title><rect x="747.2" y="291.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="750.2" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (25 samples, 0.32%)</title><rect x="748.4" y="291.0" width="3.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="751.4" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (19 samples, 0.24%)</title><rect x="749.3" y="275.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="752.3" y="286.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (6 samples, 0.08%)</title><rect x="752.2" y="291.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="755.2" y="302.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (4 samples, 0.05%)</title><rect x="753.1" y="291.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="756.1" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (6 samples, 0.08%)</title><rect x="753.7" y="291.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="756.7" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (11 samples, 0.14%)</title><rect x="754.6" y="291.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="757.6" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (93 samples, 1.20%)</title><rect x="756.3" y="291.0" width="14.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="759.3" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (20 samples, 0.26%)</title><rect x="760.4" y="275.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="763.4" y="286.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (2 samples, 0.03%)</title><rect x="763.4" y="275.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="766.4" y="286.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (9 samples, 0.12%)</title><rect x="763.7" y="275.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="766.7" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (28 samples, 0.36%)</title><rect x="765.1" y="275.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="768.1" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="767.1" y="259.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="770.1" y="270.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (2 samples, 0.03%)</title><rect x="767.4" y="259.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="770.4" y="270.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.05%)</title><rect x="767.7" y="259.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="770.7" y="270.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (7 samples, 0.09%)</title><rect x="768.3" y="259.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="771.3" y="270.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (7 samples, 0.09%)</title><rect x="769.4" y="275.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="772.4" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (10 samples, 0.13%)</title><rect x="770.4" y="291.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="773.4" y="302.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (7 samples, 0.09%)</title><rect x="770.9" y="275.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="773.9" y="286.0"></text>
</g>
<g>
<title>selinux_ipv4_output (5 samples, 0.06%)</title><rect x="771.9" y="291.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="774.9" y="302.0"></text>
</g>
<g>
<title>netlbl_enabled (2 samples, 0.03%)</title><rect x="772.4" y="275.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="775.4" y="286.0"></text>
</g>
<g>
<title>ip_output (1,185 samples, 15.27%)</title><rect x="772.7" y="339.0" width="180.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="775.7" y="350.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (1,100 samples, 14.17%)</title><rect x="774.1" y="323.0" width="167.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="777.1" y="334.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (55 samples, 0.71%)</title><rect x="777.6" y="307.0" width="8.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="780.6" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (42 samples, 0.54%)</title><rect x="778.8" y="291.0" width="6.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="781.8" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (41 samples, 0.53%)</title><rect x="778.9" y="275.0" width="6.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="781.9" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.05%)</title><rect x="779.7" y="259.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="782.7" y="270.0"></text>
</g>
<g>
<title>netif_rx (21 samples, 0.27%)</title><rect x="780.3" y="259.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="783.3" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (20 samples, 0.26%)</title><rect x="780.5" y="243.0" width="3.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="783.5" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (13 samples, 0.17%)</title><rect x="781.5" y="227.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="784.5" y="238.0"></text>
</g>
<g>
<title>sk_free (3 samples, 0.04%)</title><rect x="783.5" y="259.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="786.5" y="270.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (4 samples, 0.05%)</title><rect x="783.9" y="259.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="786.9" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (4 samples, 0.05%)</title><rect x="784.6" y="259.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="787.6" y="270.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.03%)</title><rect x="785.3" y="291.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="788.3" y="302.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="785.3" y="275.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="788.3" y="286.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.03%)</title><rect x="785.6" y="291.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="788.6" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1,022 samples, 13.17%)</title><rect x="785.9" y="307.0" width="155.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="788.9" y="318.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.0 (1,021 samples, 13.15%)</title><rect x="786.1" y="291.0" width="155.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="789.1" y="302.0">do_softirq.part.0</text>
</g>
<g>
<title>do_softirq_own_stack (1,015 samples, 13.08%)</title><rect x="787.0" y="275.0" width="154.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="790.0" y="286.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (1,015 samples, 13.08%)</title><rect x="787.0" y="259.0" width="154.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="790.0" y="270.0">__softirqentry_text_..</text>
</g>
<g>
<title>net_rx_action (993 samples, 12.79%)</title><rect x="790.3" y="243.0" width="151.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="793.3" y="254.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.03%)</title><rect x="791.2" y="227.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="794.2" y="238.0"></text>
</g>
<g>
<title>process_backlog (985 samples, 12.69%)</title><rect x="791.5" y="227.0" width="149.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="794.5" y="238.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb_one_core (963 samples, 12.41%)</title><rect x="794.9" y="211.0" width="146.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="797.9" y="222.0">__netif_receive_sk..</text>
</g>
<g>
<title>__netif_receive_skb_core (6 samples, 0.08%)</title><rect x="794.9" y="195.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="797.9" y="206.0"></text>
</g>
<g>
<title>ip_rcv (957 samples, 12.33%)</title><rect x="795.8" y="195.0" width="145.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="798.8" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (775 samples, 9.98%)</title><rect x="797.0" y="179.0" width="117.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="800.0" y="190.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (652 samples, 8.40%)</title><rect x="798.7" y="163.0" width="99.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="801.7" y="174.0">ip_local_del..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (650 samples, 8.37%)</title><rect x="799.0" y="147.0" width="98.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="802.0" y="158.0">ip_protocol_..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="799.8" y="131.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="802.8" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (643 samples, 8.28%)</title><rect x="800.1" y="131.0" width="97.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="803.1" y="142.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (39 samples, 0.50%)</title><rect x="803.7" y="115.0" width="5.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="806.7" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (8 samples, 0.10%)</title><rect x="808.4" y="99.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="811.4" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock (3 samples, 0.04%)</title><rect x="809.6" y="115.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="812.6" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.09%)</title><rect x="810.1" y="115.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="813.1" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (7 samples, 0.09%)</title><rect x="810.1" y="99.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="813.1" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (6 samples, 0.08%)</title><rect x="810.2" y="83.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="813.2" y="94.0"></text>
</g>
<g>
<title>sock_put (3 samples, 0.04%)</title><rect x="811.2" y="115.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="814.2" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (562 samples, 7.24%)</title><rect x="811.6" y="115.0" width="85.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="814.6" y="126.0">tcp_v4_do_..</text>
</g>
<g>
<title>tcp_rcv_established (561 samples, 7.23%)</title><rect x="811.8" y="99.0" width="85.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="814.8" y="110.0">tcp_rcv_es..</text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="812.2" y="83.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="815.2" y="94.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="812.4" y="67.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="815.4" y="78.0"></text>
</g>
<g>
<title>tcp_ack (134 samples, 1.73%)</title><rect x="812.7" y="83.0" width="20.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="815.7" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (33 samples, 0.43%)</title><rect x="818.5" y="67.0" width="5.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="821.5" y="78.0"></text>
</g>
<g>
<title>__slab_free (9 samples, 0.12%)</title><rect x="818.5" y="51.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="821.5" y="62.0"></text>
</g>
<g>
<title>skb_release_data (22 samples, 0.28%)</title><rect x="820.1" y="51.0" width="3.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="823.1" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (4 samples, 0.05%)</title><rect x="823.6" y="67.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="826.6" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (8 samples, 0.10%)</title><rect x="824.2" y="67.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="827.2" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (13 samples, 0.17%)</title><rect x="825.4" y="67.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="828.4" y="78.0"></text>
</g>
<g>
<title>__slab_free (11 samples, 0.14%)</title><rect x="825.8" y="51.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="828.8" y="62.0"></text>
</g>
<g>
<title>ktime_get_seconds (5 samples, 0.06%)</title><rect x="827.4" y="67.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="830.4" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (5 samples, 0.06%)</title><rect x="828.2" y="67.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="831.2" y="78.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.03%)</title><rect x="828.6" y="51.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="831.6" y="62.0"></text>
</g>
<g>
<title>tcp_newly_delivered (3 samples, 0.04%)</title><rect x="829.1" y="67.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="832.1" y="78.0"></text>
</g>
<g>
<title>tcp_rack_advance (2 samples, 0.03%)</title><rect x="829.6" y="67.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="832.6" y="78.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (3 samples, 0.04%)</title><rect x="829.9" y="67.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="832.9" y="78.0"></text>
</g>
<g>
<title>tcp_rate_gen (3 samples, 0.04%)</title><rect x="830.3" y="67.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="833.3" y="78.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (3 samples, 0.04%)</title><rect x="830.8" y="67.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="833.8" y="78.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="831.2" y="67.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="834.2" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.04%)</title><rect x="831.5" y="67.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="834.5" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (7 samples, 0.09%)</title><rect x="832.0" y="67.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="835.0" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.03%)</title><rect x="833.1" y="83.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="836.1" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (406 samples, 5.23%)</title><rect x="833.4" y="83.0" width="61.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="836.4" y="94.0">tcp_da..</text>
</g>
<g>
<title>dst_release (6 samples, 0.08%)</title><rect x="833.8" y="67.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="836.8" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (388 samples, 5.00%)</title><rect x="834.9" y="67.0" width="59.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="837.9" y="78.0">sock_d..</text>
</g>
<g>
<title>__wake_up_common_lock (377 samples, 4.86%)</title><rect x="836.5" y="51.0" width="57.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="839.5" y="62.0">__wake..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (376 samples, 4.84%)</title><rect x="836.7" y="35.0" width="57.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="839.7" y="46.0">_raw_s..</text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="893.9" y="67.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="896.9" y="78.0"></text>
</g>
<g>
<title>tcp_queue_rcv (6 samples, 0.08%)</title><rect x="894.2" y="67.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="897.2" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (11 samples, 0.14%)</title><rect x="895.1" y="83.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="898.1" y="94.0"></text>
</g>
<g>
<title>ktime_get (7 samples, 0.09%)</title><rect x="895.7" y="67.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="898.7" y="78.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.08%)</title><rect x="895.8" y="51.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="898.8" y="62.0"></text>
</g>
<g>
<title>tcp_urg (2 samples, 0.03%)</title><rect x="896.7" y="83.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="899.7" y="94.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.03%)</title><rect x="897.1" y="115.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="900.1" y="126.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (3 samples, 0.04%)</title><rect x="897.4" y="115.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="900.4" y="126.0"></text>
</g>
<g>
<title>nf_hook_slow (112 samples, 1.44%)</title><rect x="897.8" y="163.0" width="17.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="900.8" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (86 samples, 1.11%)</title><rect x="898.1" y="147.0" width="13.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="901.1" y="158.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (7 samples, 0.09%)</title><rect x="909.4" y="131.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="912.4" y="142.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (5 samples, 0.06%)</title><rect x="910.4" y="131.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="913.4" y="142.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.03%)</title><rect x="911.2" y="147.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="914.2" y="158.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (3 samples, 0.04%)</title><rect x="911.5" y="147.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="914.5" y="158.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (4 samples, 0.05%)</title><rect x="912.0" y="147.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="915.0" y="158.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (3 samples, 0.04%)</title><rect x="912.6" y="147.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="915.6" y="158.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (6 samples, 0.08%)</title><rect x="913.0" y="147.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="916.0" y="158.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (5 samples, 0.06%)</title><rect x="913.2" y="131.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="916.2" y="142.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (3 samples, 0.04%)</title><rect x="913.9" y="147.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="916.9" y="158.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (2 samples, 0.03%)</title><rect x="914.5" y="147.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="917.5" y="158.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (12 samples, 0.15%)</title><rect x="914.8" y="179.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="917.8" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish (7 samples, 0.09%)</title><rect x="916.7" y="179.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="919.7" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (5 samples, 0.06%)</title><rect x="917.0" y="163.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="920.0" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (155 samples, 2.00%)</title><rect x="917.7" y="179.0" width="23.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="920.7" y="190.0">n..</text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (7 samples, 0.09%)</title><rect x="919.4" y="163.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="922.4" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (110 samples, 1.42%)</title><rect x="920.5" y="163.0" width="16.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="923.5" y="174.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (5 samples, 0.06%)</title><rect x="937.2" y="163.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="940.2" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (5 samples, 0.06%)</title><rect x="937.9" y="163.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="940.9" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (2 samples, 0.03%)</title><rect x="938.7" y="163.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="941.7" y="174.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (4 samples, 0.05%)</title><rect x="939.0" y="163.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="942.0" y="174.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (11 samples, 0.14%)</title><rect x="939.6" y="163.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="942.6" y="174.0"></text>
</g>
<g>
<title>ip_finish_output (12 samples, 0.15%)</title><rect x="941.3" y="323.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="944.3" y="334.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.05%)</title><rect x="942.5" y="307.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="945.5" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (64 samples, 0.82%)</title><rect x="943.1" y="323.0" width="9.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="946.1" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (25 samples, 0.32%)</title><rect x="943.4" y="307.0" width="3.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="946.4" y="318.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (5 samples, 0.06%)</title><rect x="947.2" y="307.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="950.2" y="318.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (5 samples, 0.06%)</title><rect x="948.0" y="307.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="951.0" y="318.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (5 samples, 0.06%)</title><rect x="948.0" y="291.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="951.0" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (8 samples, 0.10%)</title><rect x="948.7" y="307.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="951.7" y="318.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (4 samples, 0.05%)</title><rect x="949.3" y="291.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="952.3" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute (14 samples, 0.18%)</title><rect x="950.0" y="307.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="953.0" y="318.0"></text>
</g>
<g>
<title>selinux_peerlbl_enabled (2 samples, 0.03%)</title><rect x="951.8" y="291.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="954.8" y="302.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (5 samples, 0.06%)</title><rect x="952.1" y="307.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="955.1" y="318.0"></text>
</g>
<g>
<title>__skb_clone (10 samples, 0.13%)</title><rect x="952.8" y="355.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="955.8" y="366.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.04%)</title><rect x="953.9" y="339.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="956.9" y="350.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (6 samples, 0.08%)</title><rect x="954.7" y="355.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="957.7" y="366.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.03%)</title><rect x="955.6" y="355.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="958.6" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (5 samples, 0.06%)</title><rect x="956.2" y="355.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="959.2" y="366.0"></text>
</g>
<g>
<title>__list_del_entry_valid (3 samples, 0.04%)</title><rect x="956.5" y="339.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="959.5" y="350.0"></text>
</g>
<g>
<title>tcp_v4_send_check (4 samples, 0.05%)</title><rect x="956.9" y="355.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="959.9" y="366.0"></text>
</g>
<g>
<title>ktime_get (7 samples, 0.09%)</title><rect x="957.6" y="371.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="960.6" y="382.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.08%)</title><rect x="957.7" y="355.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="960.7" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (9 samples, 0.12%)</title><rect x="958.8" y="371.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="961.8" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="959.4" y="355.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="962.4" y="366.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="959.4" y="339.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="962.4" y="350.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.04%)</title><rect x="959.7" y="355.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="962.7" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (6 samples, 0.08%)</title><rect x="960.1" y="371.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="963.1" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="960.6" y="355.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="963.6" y="366.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="960.7" y="339.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="963.7" y="350.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (2 samples, 0.03%)</title><rect x="961.1" y="371.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="964.1" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (18 samples, 0.23%)</title><rect x="961.4" y="403.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="964.4" y="414.0"></text>
</g>
<g>
<title>copyin (13 samples, 0.17%)</title><rect x="961.5" y="387.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="964.5" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (13 samples, 0.17%)</title><rect x="961.5" y="371.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="964.5" y="382.0"></text>
</g>
<g>
<title>iov_iter_advance (4 samples, 0.05%)</title><rect x="963.5" y="387.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="966.5" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (40 samples, 0.52%)</title><rect x="964.1" y="403.0" width="6.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="967.1" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (38 samples, 0.49%)</title><rect x="964.4" y="387.0" width="5.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="967.4" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (14 samples, 0.18%)</title><rect x="965.3" y="371.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="968.3" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (13 samples, 0.17%)</title><rect x="965.5" y="355.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="968.5" y="366.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="966.8" y="339.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="969.8" y="350.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="967.1" y="339.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="970.1" y="350.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (16 samples, 0.21%)</title><rect x="967.4" y="371.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="970.4" y="382.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="969.4" y="355.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="972.4" y="366.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="969.9" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="972.9" y="382.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="970.5" y="403.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="973.5" y="414.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="970.8" y="403.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="973.8" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (21 samples, 0.27%)</title><rect x="971.1" y="403.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="974.1" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (17 samples, 0.22%)</title><rect x="971.7" y="387.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="974.7" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (12 samples, 0.15%)</title><rect x="972.5" y="371.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="975.5" y="382.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="974.3" y="403.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="977.3" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (15 samples, 0.19%)</title><rect x="974.7" y="451.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="977.7" y="462.0"></text>
</g>
<g>
<title>__fget_light (15 samples, 0.19%)</title><rect x="974.7" y="435.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="977.7" y="446.0"></text>
</g>
<g>
<title>__fget (12 samples, 0.15%)</title><rect x="975.2" y="419.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="978.2" y="430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="977.0" y="483.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="980.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.28%)</title><rect x="977.5" y="531.0" width="3.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="980.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.28%)</title><rect x="977.5" y="515.0" width="3.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="980.5" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (20 samples, 0.26%)</title><rect x="977.5" y="499.0" width="3.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="980.5" y="510.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (6 samples, 0.08%)</title><rect x="978.1" y="483.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="981.1" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (10 samples, 0.13%)</title><rect x="979.0" y="483.0" width="1.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="982.0" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="979.1" y="467.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="982.1" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (5 samples, 0.06%)</title><rect x="979.8" y="467.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="982.8" y="478.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="980.5" y="499.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="983.5" y="510.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (10 samples, 0.13%)</title><rect x="980.8" y="531.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="983.8" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.08%)</title><rect x="982.3" y="563.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="985.3" y="574.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.08%)</title><rect x="982.3" y="547.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="985.3" y="558.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.06%)</title><rect x="982.5" y="531.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="985.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="983.2" y="611.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="986.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (16 samples, 0.21%)</title><rect x="983.6" y="627.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="986.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.09%)</title><rect x="983.6" y="611.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="986.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.05%)</title><rect x="984.0" y="595.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="987.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="984.6" y="611.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="987.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.04%)</title><rect x="984.6" y="595.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.03%)</title><rect x="985.1" y="611.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="988.1" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.04%)</title><rect x="985.5" y="611.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="988.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="985.5" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="988.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="985.5" y="579.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="988.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="985.5" y="563.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="988.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (290 samples, 3.74%)</title><rect x="986.0" y="627.0" width="44.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="989.0" y="638.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (20 samples, 0.26%)</title><rect x="986.9" y="611.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="989.9" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 0.24%)</title><rect x="987.0" y="595.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="990.0" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="989.5" y="579.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="992.5" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="989.5" y="563.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="992.5" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="989.6" y="547.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="992.6" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.03%)</title><rect x="989.9" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="992.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (262 samples, 3.38%)</title><rect x="990.2" y="611.0" width="39.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="993.2" y="622.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (262 samples, 3.38%)</title><rect x="990.2" y="595.0" width="39.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="993.2" y="606.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (253 samples, 3.26%)</title><rect x="990.2" y="579.0" width="38.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="993.2" y="590.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (236 samples, 3.04%)</title><rect x="991.2" y="563.0" width="35.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="994.2" y="574.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (236 samples, 3.04%)</title><rect x="991.2" y="547.0" width="35.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="994.2" y="558.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (16 samples, 0.21%)</title><rect x="993.6" y="531.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="996.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (15 samples, 0.19%)</title><rect x="993.7" y="515.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (73 samples, 0.94%)</title><rect x="996.0" y="531.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="999.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (4 samples, 0.05%)</title><rect x="1007.3" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1010.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (125 samples, 1.61%)</title><rect x="1007.9" y="531.0" width="19.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1010.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (118 samples, 1.52%)</title><rect x="1008.9" y="515.0" width="18.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1011.9" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (95 samples, 1.22%)</title><rect x="1012.4" y="499.0" width="14.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1015.4" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="1013.0" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1016.0" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (7 samples, 0.09%)</title><rect x="1013.3" y="483.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1016.3" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (46 samples, 0.59%)</title><rect x="1014.4" y="483.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1017.4" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (21 samples, 0.27%)</title><rect x="1018.2" y="467.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1021.2" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (6 samples, 0.08%)</title><rect x="1020.2" y="451.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1023.2" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (2 samples, 0.03%)</title><rect x="1021.1" y="451.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1024.1" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (36 samples, 0.46%)</title><rect x="1021.4" y="483.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1024.4" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (29 samples, 0.37%)</title><rect x="1021.9" y="467.0" width="4.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1024.9" y="478.0"></text>
</g>
<g>
<title>vectorizedMismatch (28 samples, 0.36%)</title><rect x="1022.0" y="451.0" width="4.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1025.0" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (4 samples, 0.05%)</title><rect x="1026.3" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1029.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.tombstone (11 samples, 0.14%)</title><rect x="1027.0" y="563.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1030.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.&lt;init&gt; (8 samples, 0.10%)</title><rect x="1027.5" y="547.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1030.5" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.09%)</title><rect x="1027.6" y="531.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1030.6" y="542.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.09%)</title><rect x="1027.6" y="515.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1030.6" y="526.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.06%)</title><rect x="1027.9" y="499.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1030.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (9 samples, 0.12%)</title><rect x="1028.7" y="579.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1031.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.sizeInBytes (4 samples, 0.05%)</title><rect x="1028.7" y="563.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1031.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (4 samples, 0.05%)</title><rect x="1028.7" y="547.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1031.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getSizeOfFlushedRow (5 samples, 0.06%)</title><rect x="1029.3" y="563.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1032.3" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (5 samples, 0.06%)</title><rect x="1029.3" y="547.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1032.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (11 samples, 0.14%)</title><rect x="1030.2" y="643.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1033.2" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (11 samples, 0.14%)</title><rect x="1030.2" y="627.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1033.2" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.06%)</title><rect x="1031.1" y="611.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1034.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (33 samples, 0.43%)</title><rect x="1032.0" y="675.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1035.0" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.21%)</title><rect x="1033.9" y="659.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1036.9" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.21%)</title><rect x="1033.9" y="643.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1036.9" y="654.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (2 samples, 0.03%)</title><rect x="1036.0" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1039.0" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.06%)</title><rect x="1036.3" y="659.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1039.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (23 samples, 0.30%)</title><rect x="1037.1" y="675.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1040.1" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (22 samples, 0.28%)</title><rect x="1037.2" y="659.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1040.2" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (22 samples, 0.28%)</title><rect x="1037.2" y="643.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1040.2" y="654.0"></text>
</g>
<g>
<title>java/lang/String.charAt (17 samples, 0.22%)</title><rect x="1038.0" y="627.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1041.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (17 samples, 0.22%)</title><rect x="1038.0" y="611.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1041.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.04%)</title><rect x="1040.6" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1043.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.10%)</title><rect x="1041.0" y="675.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1044.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.06%)</title><rect x="1041.5" y="659.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1044.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.06%)</title><rect x="1041.5" y="643.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.5" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.05%)</title><rect x="1041.6" y="627.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1044.6" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.05%)</title><rect x="1041.6" y="611.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1044.6" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (4 samples, 0.05%)</title><rect x="1041.6" y="595.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.6" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (27 samples, 0.35%)</title><rect x="1042.2" y="675.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1045.2" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.13%)</title><rect x="1044.8" y="659.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1047.8" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.09%)</title><rect x="1045.3" y="643.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1048.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1045.7" y="627.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1048.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.03%)</title><rect x="1045.9" y="611.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1048.9" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (328 samples, 4.23%)</title><rect x="1046.3" y="691.0" width="49.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1049.3" y="702.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (328 samples, 4.23%)</title><rect x="1046.3" y="675.0" width="49.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1049.3" y="686.0">one/n..</text>
</g>
<g>
<title>[unknown] (44 samples, 0.57%)</title><rect x="1047.3" y="659.0" width="6.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1050.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.57%)</title><rect x="1047.3" y="643.0" width="6.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1050.3" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (30 samples, 0.39%)</title><rect x="1047.3" y="627.0" width="4.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1050.3" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.04%)</title><rect x="1047.4" y="611.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1050.4" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.03%)</title><rect x="1048.2" y="611.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1051.2" y="622.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="1048.5" y="611.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1051.5" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (18 samples, 0.23%)</title><rect x="1048.9" y="611.0" width="2.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1051.9" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.04%)</title><rect x="1049.4" y="595.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1052.4" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.06%)</title><rect x="1049.8" y="595.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1052.8" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (6 samples, 0.08%)</title><rect x="1050.6" y="595.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1053.6" y="606.0"></text>
</g>
<g>
<title>__libc_recv (5 samples, 0.06%)</title><rect x="1051.8" y="627.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1054.8" y="638.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (6 samples, 0.08%)</title><rect x="1052.6" y="627.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1055.6" y="638.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.04%)</title><rect x="1053.5" y="627.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1056.5" y="638.0"></text>
</g>
<g>
<title>__libc_recv (275 samples, 3.54%)</title><rect x="1053.9" y="659.0" width="41.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1056.9" y="670.0">__l..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (204 samples, 2.63%)</title><rect x="1064.7" y="643.0" width="31.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1067.7" y="654.0">en..</text>
</g>
<g>
<title>do_syscall_64 (204 samples, 2.63%)</title><rect x="1064.7" y="627.0" width="31.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1067.7" y="638.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (170 samples, 2.19%)</title><rect x="1069.9" y="611.0" width="25.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1072.9" y="622.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (165 samples, 2.13%)</title><rect x="1070.7" y="595.0" width="25.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1073.7" y="606.0">_..</text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="1071.4" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1074.4" y="590.0"></text>
</g>
<g>
<title>import_single_range (5 samples, 0.06%)</title><rect x="1071.7" y="579.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1074.7" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (121 samples, 1.56%)</title><rect x="1072.5" y="579.0" width="18.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1075.5" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (120 samples, 1.55%)</title><rect x="1072.6" y="563.0" width="18.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1075.6" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (16 samples, 0.21%)</title><rect x="1076.7" y="547.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1079.7" y="558.0"></text>
</g>
<g>
<title>skb_release_all (15 samples, 0.19%)</title><rect x="1076.7" y="531.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1079.7" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (15 samples, 0.19%)</title><rect x="1076.7" y="515.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1079.7" y="526.0"></text>
</g>
<g>
<title>sock_rfree (14 samples, 0.18%)</title><rect x="1076.9" y="499.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1079.9" y="510.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.03%)</title><rect x="1079.3" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1082.3" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (9 samples, 0.12%)</title><rect x="1079.6" y="547.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1082.6" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (8 samples, 0.10%)</title><rect x="1079.8" y="531.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1082.8" y="542.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="1081.0" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1084.0" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="1081.0" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1084.0" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (44 samples, 0.57%)</title><rect x="1081.3" y="547.0" width="6.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1084.3" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (43 samples, 0.55%)</title><rect x="1081.5" y="531.0" width="6.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1084.5" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (23 samples, 0.30%)</title><rect x="1081.8" y="515.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1084.8" y="526.0"></text>
</g>
<g>
<title>copyout (20 samples, 0.26%)</title><rect x="1082.2" y="499.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1085.2" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (18 samples, 0.23%)</title><rect x="1082.5" y="483.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1085.5" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (18 samples, 0.23%)</title><rect x="1085.3" y="515.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1088.3" y="526.0"></text>
</g>
<g>
<title>__check_object_size (13 samples, 0.17%)</title><rect x="1086.0" y="499.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1089.0" y="510.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.03%)</title><rect x="1086.6" y="483.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1089.6" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (7 samples, 0.09%)</title><rect x="1086.9" y="483.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1089.9" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (6 samples, 0.08%)</title><rect x="1088.0" y="547.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1091.0" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (4 samples, 0.05%)</title><rect x="1088.3" y="531.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1091.3" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (13 samples, 0.17%)</title><rect x="1088.9" y="547.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1091.9" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.08%)</title><rect x="1090.0" y="531.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1093.0" y="542.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.05%)</title><rect x="1090.3" y="515.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1093.3" y="526.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.05%)</title><rect x="1090.3" y="499.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1093.3" y="510.0"></text>
</g>
<g>
<title>sock_recvmsg (20 samples, 0.26%)</title><rect x="1090.9" y="579.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1093.9" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (19 samples, 0.24%)</title><rect x="1091.0" y="563.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1094.0" y="574.0"></text>
</g>
<g>
<title>sock_has_perm (17 samples, 0.22%)</title><rect x="1091.3" y="547.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1094.3" y="558.0"></text>
</g>
<g>
<title>avc_has_perm (10 samples, 0.13%)</title><rect x="1092.4" y="531.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1095.4" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (12 samples, 0.15%)</title><rect x="1093.9" y="579.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1096.9" y="590.0"></text>
</g>
<g>
<title>__fget_light (11 samples, 0.14%)</title><rect x="1094.1" y="563.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1097.1" y="574.0"></text>
</g>
<g>
<title>__fget (9 samples, 0.12%)</title><rect x="1094.4" y="547.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1097.4" y="558.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.04%)</title><rect x="1095.7" y="659.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1098.7" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.05%)</title><rect x="1096.2" y="707.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1099.2" y="718.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.05%)</title><rect x="1096.2" y="691.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1099.2" y="702.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="1096.5" y="675.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1099.5" y="686.0"></text>
</g>
<g>
<title>[pool-1-thread-1 tid=25257] (44 samples, 0.57%)</title><rect x="1096.8" y="755.0" width="6.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1099.8" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.run (44 samples, 0.57%)</title><rect x="1096.8" y="739.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1099.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (44 samples, 0.57%)</title><rect x="1096.8" y="723.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1099.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (44 samples, 0.57%)</title><rect x="1096.8" y="707.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1099.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (44 samples, 0.57%)</title><rect x="1096.8" y="691.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1099.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (44 samples, 0.57%)</title><rect x="1096.8" y="675.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1099.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (44 samples, 0.57%)</title><rect x="1096.8" y="659.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1099.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2 samples, 0.03%)</title><rect x="1097.0" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1100.0" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="1097.0" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1100.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (41 samples, 0.53%)</title><rect x="1097.3" y="643.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1100.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.04%)</title><rect x="1097.3" y="627.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1100.3" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.04%)</title><rect x="1097.3" y="611.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1100.3" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.04%)</title><rect x="1097.3" y="595.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1100.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (35 samples, 0.45%)</title><rect x="1097.7" y="627.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1100.7" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (33 samples, 0.43%)</title><rect x="1097.7" y="611.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1100.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (33 samples, 0.43%)</title><rect x="1097.7" y="595.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1100.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (33 samples, 0.43%)</title><rect x="1097.7" y="579.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1100.7" y="590.0"></text>
</g>
<g>
<title>__libc_write (32 samples, 0.41%)</title><rect x="1097.9" y="563.0" width="4.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1100.9" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.22%)</title><rect x="1100.2" y="547.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1103.2" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.22%)</title><rect x="1100.2" y="531.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1103.2" y="542.0"></text>
</g>
<g>
<title>ksys_write (14 samples, 0.18%)</title><rect x="1100.6" y="515.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1103.6" y="526.0"></text>
</g>
<g>
<title>vfs_write (12 samples, 0.15%)</title><rect x="1100.9" y="499.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1103.9" y="510.0"></text>
</g>
<g>
<title>new_sync_write (11 samples, 0.14%)</title><rect x="1101.1" y="483.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1104.1" y="494.0"></text>
</g>
<g>
<title>generic_file_write_iter (11 samples, 0.14%)</title><rect x="1101.1" y="467.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1104.1" y="478.0"></text>
</g>
<g>
<title>__generic_file_write_iter (9 samples, 0.12%)</title><rect x="1101.4" y="451.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1104.4" y="462.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.03%)</title><rect x="1101.4" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1104.4" y="446.0"></text>
</g>
<g>
<title>generic_perform_write (7 samples, 0.09%)</title><rect x="1101.7" y="435.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1104.7" y="446.0"></text>
</g>
<g>
<title>shmem_write_begin (3 samples, 0.04%)</title><rect x="1101.7" y="419.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1104.7" y="430.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (3 samples, 0.04%)</title><rect x="1101.7" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1104.7" y="414.0"></text>
</g>
<g>
<title>find_lock_entry (3 samples, 0.04%)</title><rect x="1101.7" y="387.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1104.7" y="398.0"></text>
</g>
<g>
<title>shmem_write_end (4 samples, 0.05%)</title><rect x="1102.1" y="419.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1105.1" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.03%)</title><rect x="1102.7" y="611.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1105.7" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="1102.7" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1105.7" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.03%)</title><rect x="1102.7" y="579.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1105.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.04%)</title><rect x="1103.0" y="627.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1106.0" y="638.0"></text>
</g>
<g>
<title>[pool-1-thread-2 tid=25259] (22 samples, 0.28%)</title><rect x="1103.5" y="755.0" width="3.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1106.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.run (21 samples, 0.27%)</title><rect x="1103.7" y="739.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1106.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (21 samples, 0.27%)</title><rect x="1103.7" y="723.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1106.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (21 samples, 0.27%)</title><rect x="1103.7" y="707.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1106.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (21 samples, 0.27%)</title><rect x="1103.7" y="691.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1106.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (21 samples, 0.27%)</title><rect x="1103.7" y="675.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1106.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (21 samples, 0.27%)</title><rect x="1103.7" y="659.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1106.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (20 samples, 0.26%)</title><rect x="1103.8" y="643.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1106.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.03%)</title><rect x="1103.8" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1106.8" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.03%)</title><rect x="1103.8" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1106.8" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.03%)</title><rect x="1103.8" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1106.8" y="606.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.03%)</title><rect x="1103.8" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1106.8" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.03%)</title><rect x="1103.8" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1106.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (18 samples, 0.23%)</title><rect x="1104.1" y="627.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1107.1" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (18 samples, 0.23%)</title><rect x="1104.1" y="611.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1107.1" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (18 samples, 0.23%)</title><rect x="1104.1" y="595.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1107.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (18 samples, 0.23%)</title><rect x="1104.1" y="579.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1107.1" y="590.0"></text>
</g>
<g>
<title>__libc_write (16 samples, 0.21%)</title><rect x="1104.1" y="563.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1107.1" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.15%)</title><rect x="1104.7" y="547.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1107.7" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.15%)</title><rect x="1104.7" y="531.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1107.7" y="542.0"></text>
</g>
<g>
<title>ksys_write (10 samples, 0.13%)</title><rect x="1105.0" y="515.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1108.0" y="526.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="1105.0" y="499.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1108.0" y="510.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="1105.0" y="483.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1108.0" y="494.0"></text>
</g>
<g>
<title>vfs_write (7 samples, 0.09%)</title><rect x="1105.5" y="499.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1108.5" y="510.0"></text>
</g>
<g>
<title>new_sync_write (6 samples, 0.08%)</title><rect x="1105.6" y="483.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1108.6" y="494.0"></text>
</g>
<g>
<title>generic_file_write_iter (6 samples, 0.08%)</title><rect x="1105.6" y="467.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1108.6" y="478.0"></text>
</g>
<g>
<title>__generic_file_write_iter (6 samples, 0.08%)</title><rect x="1105.6" y="451.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1108.6" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (5 samples, 0.06%)</title><rect x="1105.8" y="435.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1108.8" y="446.0"></text>
</g>
<g>
<title>shmem_write_begin (2 samples, 0.03%)</title><rect x="1106.1" y="419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1109.1" y="430.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (2 samples, 0.03%)</title><rect x="1106.1" y="403.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1109.1" y="414.0"></text>
</g>
<g>
<title>find_lock_entry (2 samples, 0.03%)</title><rect x="1106.1" y="387.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1109.1" y="398.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.03%)</title><rect x="1106.1" y="371.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1109.1" y="382.0"></text>
</g>
<g>
<title>[pool-1-thread-3 tid=25261] (22 samples, 0.28%)</title><rect x="1106.8" y="755.0" width="3.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1109.8" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.run (22 samples, 0.28%)</title><rect x="1106.8" y="739.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1109.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (22 samples, 0.28%)</title><rect x="1106.8" y="723.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1109.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (22 samples, 0.28%)</title><rect x="1106.8" y="707.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1109.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (22 samples, 0.28%)</title><rect x="1106.8" y="691.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1109.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (22 samples, 0.28%)</title><rect x="1106.8" y="675.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1109.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (22 samples, 0.28%)</title><rect x="1106.8" y="659.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1109.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (21 samples, 0.27%)</title><rect x="1107.0" y="643.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1110.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (19 samples, 0.24%)</title><rect x="1107.1" y="627.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1110.1" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (18 samples, 0.23%)</title><rect x="1107.1" y="611.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1110.1" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (18 samples, 0.23%)</title><rect x="1107.1" y="595.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1110.1" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (18 samples, 0.23%)</title><rect x="1107.1" y="579.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1110.1" y="590.0"></text>
</g>
<g>
<title>__libc_write (18 samples, 0.23%)</title><rect x="1107.1" y="563.0" width="2.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1110.1" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.13%)</title><rect x="1108.4" y="547.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1111.4" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.13%)</title><rect x="1108.4" y="531.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1111.4" y="542.0"></text>
</g>
<g>
<title>ksys_write (9 samples, 0.12%)</title><rect x="1108.5" y="515.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1111.5" y="526.0"></text>
</g>
<g>
<title>vfs_write (8 samples, 0.10%)</title><rect x="1108.7" y="499.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1111.7" y="510.0"></text>
</g>
<g>
<title>new_sync_write (7 samples, 0.09%)</title><rect x="1108.8" y="483.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1111.8" y="494.0"></text>
</g>
<g>
<title>generic_file_write_iter (7 samples, 0.09%)</title><rect x="1108.8" y="467.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1111.8" y="478.0"></text>
</g>
<g>
<title>__generic_file_write_iter (5 samples, 0.06%)</title><rect x="1109.0" y="451.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1112.0" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (5 samples, 0.06%)</title><rect x="1109.0" y="435.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1112.0" y="446.0"></text>
</g>
<g>
<title>shmem_write_begin (4 samples, 0.05%)</title><rect x="1109.1" y="419.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1112.1" y="430.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (3 samples, 0.04%)</title><rect x="1109.3" y="403.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1112.3" y="414.0"></text>
</g>
<g>
<title>[pool-1-thread-4 tid=25262] (48 samples, 0.62%)</title><rect x="1110.2" y="755.0" width="7.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1113.2" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.run (46 samples, 0.59%)</title><rect x="1110.5" y="739.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1113.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (46 samples, 0.59%)</title><rect x="1110.5" y="723.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1113.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (46 samples, 0.59%)</title><rect x="1110.5" y="707.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1113.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (46 samples, 0.59%)</title><rect x="1110.5" y="691.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1113.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (46 samples, 0.59%)</title><rect x="1110.5" y="675.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1113.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (45 samples, 0.58%)</title><rect x="1110.6" y="659.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1113.6" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (41 samples, 0.53%)</title><rect x="1111.3" y="643.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1114.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (2 samples, 0.03%)</title><rect x="1111.3" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1114.3" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (2 samples, 0.03%)</title><rect x="1111.3" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1114.3" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.03%)</title><rect x="1111.3" y="595.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1114.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (38 samples, 0.49%)</title><rect x="1111.6" y="627.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1114.6" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (36 samples, 0.46%)</title><rect x="1111.7" y="611.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1114.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (36 samples, 0.46%)</title><rect x="1111.7" y="595.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1114.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (36 samples, 0.46%)</title><rect x="1111.7" y="579.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1114.7" y="590.0"></text>
</g>
<g>
<title>__libc_write (35 samples, 0.45%)</title><rect x="1111.9" y="563.0" width="5.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1114.9" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.27%)</title><rect x="1114.0" y="547.0" width="3.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1117.0" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.27%)</title><rect x="1114.0" y="531.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1117.0" y="542.0"></text>
</g>
<g>
<title>ksys_write (16 samples, 0.21%)</title><rect x="1114.7" y="515.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1117.7" y="526.0"></text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.05%)</title><rect x="1114.7" y="499.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1117.7" y="510.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.04%)</title><rect x="1114.9" y="483.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1117.9" y="494.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="1114.9" y="467.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1117.9" y="478.0"></text>
</g>
<g>
<title>vfs_write (12 samples, 0.15%)</title><rect x="1115.4" y="499.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1118.4" y="510.0"></text>
</g>
<g>
<title>new_sync_write (11 samples, 0.14%)</title><rect x="1115.5" y="483.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1118.5" y="494.0"></text>
</g>
<g>
<title>generic_file_write_iter (11 samples, 0.14%)</title><rect x="1115.5" y="467.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1118.5" y="478.0"></text>
</g>
<g>
<title>__generic_file_write_iter (11 samples, 0.14%)</title><rect x="1115.5" y="451.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1118.5" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (11 samples, 0.14%)</title><rect x="1115.5" y="435.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1118.5" y="446.0"></text>
</g>
<g>
<title>shmem_write_begin (7 samples, 0.09%)</title><rect x="1115.7" y="419.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1118.7" y="430.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (7 samples, 0.09%)</title><rect x="1115.7" y="403.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1118.7" y="414.0"></text>
</g>
<g>
<title>find_lock_entry (5 samples, 0.06%)</title><rect x="1115.8" y="387.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1118.8" y="398.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.04%)</title><rect x="1116.0" y="371.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1119.0" y="382.0"></text>
</g>
<g>
<title>shmem_write_end (3 samples, 0.04%)</title><rect x="1116.7" y="419.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1119.7" y="430.0"></text>
</g>
<g>
<title>unlock_page (3 samples, 0.04%)</title><rect x="1116.7" y="403.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1119.7" y="414.0"></text>
</g>
<g>
<title>[pool-1-thread-5 tid=25263] (46 samples, 0.59%)</title><rect x="1117.5" y="755.0" width="7.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1120.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.run (45 samples, 0.58%)</title><rect x="1117.6" y="739.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1120.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (45 samples, 0.58%)</title><rect x="1117.6" y="723.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1120.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (45 samples, 0.58%)</title><rect x="1117.6" y="707.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (45 samples, 0.58%)</title><rect x="1117.6" y="691.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1120.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (45 samples, 0.58%)</title><rect x="1117.6" y="675.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1120.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (45 samples, 0.58%)</title><rect x="1117.6" y="659.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1120.6" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (44 samples, 0.57%)</title><rect x="1117.8" y="643.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1120.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.04%)</title><rect x="1117.8" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1120.8" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.04%)</title><rect x="1117.8" y="611.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1120.8" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.03%)</title><rect x="1117.9" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1120.9" y="606.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.03%)</title><rect x="1117.9" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1120.9" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.03%)</title><rect x="1117.9" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1120.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (39 samples, 0.50%)</title><rect x="1118.2" y="627.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1121.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (35 samples, 0.45%)</title><rect x="1118.4" y="611.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1121.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (35 samples, 0.45%)</title><rect x="1118.4" y="595.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1121.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (35 samples, 0.45%)</title><rect x="1118.4" y="579.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1121.4" y="590.0"></text>
</g>
<g>
<title>__libc_write (34 samples, 0.44%)</title><rect x="1118.5" y="563.0" width="5.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1121.5" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.24%)</title><rect x="1120.8" y="547.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1123.8" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.24%)</title><rect x="1120.8" y="531.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1123.8" y="542.0"></text>
</g>
<g>
<title>ksys_write (15 samples, 0.19%)</title><rect x="1121.4" y="515.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1124.4" y="526.0"></text>
</g>
<g>
<title>vfs_write (14 samples, 0.18%)</title><rect x="1121.6" y="499.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1124.6" y="510.0"></text>
</g>
<g>
<title>new_sync_write (12 samples, 0.15%)</title><rect x="1121.9" y="483.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1124.9" y="494.0"></text>
</g>
<g>
<title>generic_file_write_iter (12 samples, 0.15%)</title><rect x="1121.9" y="467.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1124.9" y="478.0"></text>
</g>
<g>
<title>__generic_file_write_iter (7 samples, 0.09%)</title><rect x="1122.2" y="451.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1125.2" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (5 samples, 0.06%)</title><rect x="1122.5" y="435.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1125.5" y="446.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (2 samples, 0.03%)</title><rect x="1122.5" y="419.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1125.5" y="430.0"></text>
</g>
<g>
<title>shmem_write_begin (2 samples, 0.03%)</title><rect x="1122.8" y="419.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1125.8" y="430.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (2 samples, 0.03%)</title><rect x="1122.8" y="403.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1125.8" y="414.0"></text>
</g>
<g>
<title>find_lock_entry (2 samples, 0.03%)</title><rect x="1122.8" y="387.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1125.8" y="398.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.03%)</title><rect x="1122.8" y="371.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1125.8" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.04%)</title><rect x="1123.7" y="611.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1126.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.04%)</title><rect x="1123.7" y="595.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1126.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.03%)</title><rect x="1124.2" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1127.2" y="638.0"></text>
</g>
<g>
<title>[tid=25109] (76 samples, 0.98%)</title><rect x="1124.5" y="755.0" width="11.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1127.5" y="766.0"></text>
</g>
<g>
<title>start_thread (75 samples, 0.97%)</title><rect x="1124.6" y="739.0" width="11.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1127.6" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (75 samples, 0.97%)</title><rect x="1124.6" y="723.0" width="11.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1127.6" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (75 samples, 0.97%)</title><rect x="1124.6" y="707.0" width="11.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1127.6" y="718.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (75 samples, 0.97%)</title><rect x="1124.6" y="691.0" width="11.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1127.6" y="702.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (11 samples, 0.14%)</title><rect x="1124.6" y="675.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1127.6" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (8 samples, 0.10%)</title><rect x="1124.8" y="659.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1127.8" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.04%)</title><rect x="1125.4" y="643.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1128.4" y="654.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (62 samples, 0.80%)</title><rect x="1126.3" y="675.0" width="9.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1129.3" y="686.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (62 samples, 0.80%)</title><rect x="1126.3" y="659.0" width="9.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1129.3" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (60 samples, 0.77%)</title><rect x="1126.3" y="643.0" width="9.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1129.3" y="654.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (60 samples, 0.77%)</title><rect x="1126.3" y="627.0" width="9.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1129.3" y="638.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (59 samples, 0.76%)</title><rect x="1126.5" y="611.0" width="8.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1129.5" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (50 samples, 0.64%)</title><rect x="1126.5" y="595.0" width="7.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1129.5" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (29 samples, 0.37%)</title><rect x="1129.6" y="579.0" width="4.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1132.6" y="590.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (4 samples, 0.05%)</title><rect x="1133.3" y="563.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1136.3" y="574.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (9 samples, 0.12%)</title><rect x="1134.1" y="595.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1137.1" y="606.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (8 samples, 0.10%)</title><rect x="1134.1" y="579.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1137.1" y="590.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (2 samples, 0.03%)</title><rect x="1134.2" y="563.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1137.2" y="574.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (3 samples, 0.04%)</title><rect x="1134.5" y="563.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1137.5" y="574.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1135.0" y="563.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1138.0" y="574.0"></text>
</g>
<g>
<title>[tid=25111] (50 samples, 0.64%)</title><rect x="1136.0" y="755.0" width="7.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1139.0" y="766.0"></text>
</g>
<g>
<title>start_thread (49 samples, 0.63%)</title><rect x="1136.2" y="739.0" width="7.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1139.2" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (49 samples, 0.63%)</title><rect x="1136.2" y="723.0" width="7.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1139.2" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (49 samples, 0.63%)</title><rect x="1136.2" y="707.0" width="7.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1139.2" y="718.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (29 samples, 0.37%)</title><rect x="1136.2" y="691.0" width="4.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1139.2" y="702.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (29 samples, 0.37%)</title><rect x="1136.2" y="675.0" width="4.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1139.2" y="686.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.153] (15 samples, 0.19%)</title><rect x="1136.5" y="659.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1139.5" y="670.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (12 samples, 0.15%)</title><rect x="1136.9" y="643.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1139.9" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (11 samples, 0.14%)</title><rect x="1136.9" y="627.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1139.9" y="638.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (11 samples, 0.14%)</title><rect x="1138.9" y="659.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.9" y="670.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (10 samples, 0.13%)</title><rect x="1139.1" y="643.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1142.1" y="654.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (20 samples, 0.26%)</title><rect x="1140.6" y="691.0" width="3.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1143.6" y="702.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (20 samples, 0.26%)</title><rect x="1140.6" y="675.0" width="3.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1143.6" y="686.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (19 samples, 0.24%)</title><rect x="1140.6" y="659.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1143.6" y="670.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (7 samples, 0.09%)</title><rect x="1142.3" y="643.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1145.3" y="654.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (3 samples, 0.04%)</title><rect x="1142.7" y="627.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1145.7" y="638.0"></text>
</g>
<g>
<title>[tid=25114] (6 samples, 0.08%)</title><rect x="1143.6" y="755.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1146.6" y="766.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.05%)</title><rect x="1143.9" y="739.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1146.9" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.05%)</title><rect x="1143.9" y="723.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1146.9" y="734.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.05%)</title><rect x="1143.9" y="707.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1146.9" y="718.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.05%)</title><rect x="1143.9" y="691.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1146.9" y="702.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (2 samples, 0.03%)</title><rect x="1143.9" y="675.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1146.9" y="686.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.54] (2 samples, 0.03%)</title><rect x="1144.2" y="675.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1147.2" y="686.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.03%)</title><rect x="1144.2" y="659.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1147.2" y="670.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.03%)</title><rect x="1144.2" y="643.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1147.2" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.03%)</title><rect x="1144.2" y="627.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1147.2" y="638.0"></text>
</g>
<g>
<title>[tid=25118] (63 samples, 0.81%)</title><rect x="1144.5" y="755.0" width="9.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1147.5" y="766.0"></text>
</g>
<g>
<title>start_thread (63 samples, 0.81%)</title><rect x="1144.5" y="739.0" width="9.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1147.5" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (63 samples, 0.81%)</title><rect x="1144.5" y="723.0" width="9.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1147.5" y="734.0"></text>
</g>
<g>
<title>JavaThread::run() (63 samples, 0.81%)</title><rect x="1144.5" y="707.0" width="9.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1147.5" y="718.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (63 samples, 0.81%)</title><rect x="1144.5" y="691.0" width="9.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1147.5" y="702.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (63 samples, 0.81%)</title><rect x="1144.5" y="675.0" width="9.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1147.5" y="686.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (63 samples, 0.81%)</title><rect x="1144.5" y="659.0" width="9.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1147.5" y="670.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (63 samples, 0.81%)</title><rect x="1144.5" y="643.0" width="9.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1147.5" y="654.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (63 samples, 0.81%)</title><rect x="1144.5" y="627.0" width="9.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1147.5" y="638.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (24 samples, 0.31%)</title><rect x="1144.5" y="611.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1147.5" y="622.0"></text>
</g>
<g>
<title>Matcher::match() (2 samples, 0.03%)</title><rect x="1144.7" y="595.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1147.7" y="606.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 0.03%)</title><rect x="1144.7" y="579.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1147.7" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (20 samples, 0.26%)</title><rect x="1145.2" y="595.0" width="3.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1148.2" y="606.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (6 samples, 0.08%)</title><rect x="1145.6" y="579.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1148.6" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (3 samples, 0.04%)</title><rect x="1145.6" y="563.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1148.6" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.03%)</title><rect x="1146.1" y="563.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1149.1" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (3 samples, 0.04%)</title><rect x="1146.5" y="579.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1149.5" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (2 samples, 0.03%)</title><rect x="1147.0" y="579.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1150.0" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (3 samples, 0.04%)</title><rect x="1147.3" y="579.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1150.3" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (2 samples, 0.03%)</title><rect x="1147.4" y="563.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1150.4" y="574.0"></text>
</g>
<g>
<title>Compile::Optimize() (35 samples, 0.45%)</title><rect x="1148.2" y="611.0" width="5.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1151.2" y="622.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (2 samples, 0.03%)</title><rect x="1148.2" y="595.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1151.2" y="606.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (2 samples, 0.03%)</title><rect x="1148.2" y="579.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1151.2" y="590.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="1148.2" y="563.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1151.2" y="574.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (27 samples, 0.35%)</title><rect x="1148.6" y="595.0" width="4.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1151.6" y="606.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (23 samples, 0.30%)</title><rect x="1148.8" y="579.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1151.8" y="590.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (21 samples, 0.27%)</title><rect x="1149.1" y="563.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.1" y="574.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (20 samples, 0.26%)</title><rect x="1149.3" y="547.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1152.3" y="558.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (16 samples, 0.21%)</title><rect x="1149.9" y="531.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1152.9" y="542.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (2 samples, 0.03%)</title><rect x="1152.3" y="579.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.3" y="590.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.05%)</title><rect x="1152.8" y="595.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1155.8" y="606.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.05%)</title><rect x="1152.8" y="579.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1155.8" y="590.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (3 samples, 0.04%)</title><rect x="1152.8" y="563.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1155.8" y="574.0"></text>
</g>
<g>
<title>Node::del_req(unsigned int) (2 samples, 0.03%)</title><rect x="1152.9" y="547.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1155.9" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1153.5" y="611.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.5" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1153.5" y="595.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1156.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1153.5" y="579.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.05%)</title><rect x="1153.5" y="563.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1156.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.05%)</title><rect x="1153.5" y="547.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1156.5" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1153.5" y="531.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.5" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1153.5" y="515.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1156.5" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1153.5" y="499.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.5" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1153.5" y="483.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1156.5" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1153.5" y="467.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.5" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1153.5" y="451.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1156.5" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1153.5" y="435.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.5" y="446.0"></text>
</g>
<g>
<title>[tid=25122] (2 samples, 0.03%)</title><rect x="1154.3" y="755.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1157.3" y="766.0"></text>
</g>
<g>
<title>[tid=25221] (79 samples, 1.02%)</title><rect x="1154.6" y="755.0" width="12.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1157.6" y="766.0"></text>
</g>
<g>
<title>start_thread (78 samples, 1.00%)</title><rect x="1154.7" y="739.0" width="11.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1157.7" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (78 samples, 1.00%)</title><rect x="1154.7" y="723.0" width="11.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1157.7" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (78 samples, 1.00%)</title><rect x="1154.7" y="707.0" width="11.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1157.7" y="718.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (77 samples, 0.99%)</title><rect x="1154.9" y="691.0" width="11.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.9" y="702.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (19 samples, 0.24%)</title><rect x="1154.9" y="675.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1157.9" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (17 samples, 0.22%)</title><rect x="1155.0" y="659.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1158.0" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (8 samples, 0.10%)</title><rect x="1156.4" y="643.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1159.4" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1157.3" y="627.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1160.3" y="638.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (51 samples, 0.66%)</title><rect x="1157.8" y="675.0" width="7.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1160.8" y="686.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (51 samples, 0.66%)</title><rect x="1157.8" y="659.0" width="7.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1160.8" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (51 samples, 0.66%)</title><rect x="1157.8" y="643.0" width="7.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1160.8" y="654.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (51 samples, 0.66%)</title><rect x="1157.8" y="627.0" width="7.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1160.8" y="638.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (51 samples, 0.66%)</title><rect x="1157.8" y="611.0" width="7.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1160.8" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (37 samples, 0.48%)</title><rect x="1157.8" y="595.0" width="5.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1160.8" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (21 samples, 0.27%)</title><rect x="1160.2" y="579.0" width="3.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1163.2" y="590.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (8 samples, 0.10%)</title><rect x="1162.2" y="563.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1165.2" y="574.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (14 samples, 0.18%)</title><rect x="1163.4" y="595.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1166.4" y="606.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (12 samples, 0.15%)</title><rect x="1163.4" y="579.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1166.4" y="590.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (3 samples, 0.04%)</title><rect x="1163.9" y="563.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.9" y="574.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (4 samples, 0.05%)</title><rect x="1164.5" y="563.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1167.5" y="574.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (2 samples, 0.03%)</title><rect x="1165.2" y="579.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1168.2" y="590.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.03%)</title><rect x="1165.5" y="675.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1168.5" y="686.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.03%)</title><rect x="1165.5" y="659.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.5" y="670.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.03%)</title><rect x="1165.5" y="643.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1168.5" y="654.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.03%)</title><rect x="1165.5" y="627.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1168.5" y="638.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (5 samples, 0.06%)</title><rect x="1165.8" y="675.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1168.8" y="686.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (4 samples, 0.05%)</title><rect x="1165.8" y="659.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1168.8" y="670.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (3 samples, 0.04%)</title><rect x="1166.0" y="643.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.0" y="654.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (2 samples, 0.03%)</title><rect x="1166.1" y="627.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.1" y="638.0"></text>
</g>
<g>
<title>[tid=25222] (76 samples, 0.98%)</title><rect x="1166.6" y="755.0" width="11.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1169.6" y="766.0"></text>
</g>
<g>
<title>start_thread (76 samples, 0.98%)</title><rect x="1166.6" y="739.0" width="11.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1169.6" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (76 samples, 0.98%)</title><rect x="1166.6" y="723.0" width="11.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1169.6" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (76 samples, 0.98%)</title><rect x="1166.6" y="707.0" width="11.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1169.6" y="718.0"></text>
</g>
<g>
<title>G1CMRemarkTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="1166.6" y="691.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.6" y="702.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (2 samples, 0.03%)</title><rect x="1166.6" y="675.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.6" y="686.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.03%)</title><rect x="1166.6" y="659.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1169.6" y="670.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (73 samples, 0.94%)</title><rect x="1166.9" y="691.0" width="11.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.9" y="702.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (22 samples, 0.28%)</title><rect x="1166.9" y="675.0" width="3.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.9" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (13 samples, 0.17%)</title><rect x="1167.2" y="659.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1170.2" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (9 samples, 0.12%)</title><rect x="1167.8" y="643.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1170.8" y="654.0"></text>
</g>
<g>
<title>SpinPause (7 samples, 0.09%)</title><rect x="1169.2" y="659.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1172.2" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (50 samples, 0.64%)</title><rect x="1170.2" y="675.0" width="7.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.2" y="686.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (50 samples, 0.64%)</title><rect x="1170.2" y="659.0" width="7.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.2" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (50 samples, 0.64%)</title><rect x="1170.2" y="643.0" width="7.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.2" y="654.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (50 samples, 0.64%)</title><rect x="1170.2" y="627.0" width="7.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.2" y="638.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (50 samples, 0.64%)</title><rect x="1170.2" y="611.0" width="7.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.2" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (37 samples, 0.48%)</title><rect x="1170.2" y="595.0" width="5.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.2" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (18 samples, 0.23%)</title><rect x="1173.0" y="579.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1176.0" y="590.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (6 samples, 0.08%)</title><rect x="1174.6" y="563.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1177.6" y="574.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (13 samples, 0.17%)</title><rect x="1175.9" y="595.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1178.9" y="606.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (12 samples, 0.15%)</title><rect x="1175.9" y="579.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.9" y="590.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (4 samples, 0.05%)</title><rect x="1176.3" y="563.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.3" y="574.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (3 samples, 0.04%)</title><rect x="1177.1" y="563.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.1" y="574.0"></text>
</g>
<g>
<title>[tid=25223] (78 samples, 1.00%)</title><rect x="1178.1" y="755.0" width="11.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1181.1" y="766.0"></text>
</g>
<g>
<title>start_thread (78 samples, 1.00%)</title><rect x="1178.1" y="739.0" width="11.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1181.1" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (78 samples, 1.00%)</title><rect x="1178.1" y="723.0" width="11.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1181.1" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (78 samples, 1.00%)</title><rect x="1178.1" y="707.0" width="11.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.1" y="718.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (75 samples, 0.97%)</title><rect x="1178.1" y="691.0" width="11.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.1" y="702.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (21 samples, 0.27%)</title><rect x="1178.1" y="675.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.1" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (14 samples, 0.18%)</title><rect x="1178.1" y="659.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.1" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (7 samples, 0.09%)</title><rect x="1179.2" y="643.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.2" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.04%)</title><rect x="1179.8" y="627.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.8" y="638.0"></text>
</g>
<g>
<title>SpinPause (7 samples, 0.09%)</title><rect x="1180.3" y="659.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1183.3" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (53 samples, 0.68%)</title><rect x="1181.3" y="675.0" width="8.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.3" y="686.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (53 samples, 0.68%)</title><rect x="1181.3" y="659.0" width="8.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.3" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (53 samples, 0.68%)</title><rect x="1181.3" y="643.0" width="8.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.3" y="654.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (53 samples, 0.68%)</title><rect x="1181.3" y="627.0" width="8.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.3" y="638.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (53 samples, 0.68%)</title><rect x="1181.3" y="611.0" width="8.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.3" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (43 samples, 0.55%)</title><rect x="1181.3" y="595.0" width="6.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.3" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (21 samples, 0.27%)</title><rect x="1184.4" y="579.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.4" y="590.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (8 samples, 0.10%)</title><rect x="1186.4" y="563.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.4" y="574.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1187.6" y="579.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.6" y="590.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (10 samples, 0.13%)</title><rect x="1187.9" y="595.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.9" y="606.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (8 samples, 0.10%)</title><rect x="1187.9" y="579.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.9" y="590.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (4 samples, 0.05%)</title><rect x="1188.5" y="563.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.5" y="574.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.03%)</title><rect x="1189.1" y="579.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.1" y="590.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="1189.5" y="691.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.5" y="702.0"></text>
</g>
<g>
<title>SymbolTable::possibly_parallel_unlink(int*, int*) (2 samples, 0.03%)</title><rect x="1189.5" y="675.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.5" y="686.0"></text>
</g>
</g>
</svg>
