<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="805"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="805"> </text>
<g id="frames">
<g>
<title>all (7,707 samples, 100.00%)</title><rect x="10.0" y="771.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="782.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=26108] (1,944 samples, 25.22%)</title><rect x="10.0" y="755.0" width="297.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="766.0">[NIO Selector #0 tid=26108]</text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (2 samples, 0.03%)</title><rect x="10.0" y="739.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.03%)</title><rect x="10.0" y="723.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.04%)</title><rect x="10.3" y="739.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.3" y="750.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="10.5" y="723.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.5" y="734.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.03%)</title><rect x="10.9" y="739.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.9" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,935 samples, 25.11%)</title><rect x="11.4" y="739.0" width="296.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.4" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (3 samples, 0.04%)</title><rect x="11.8" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.08%)</title><rect x="12.3" y="723.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.08%)</title><rect x="12.3" y="707.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (277 samples, 3.59%)</title><rect x="13.2" y="723.0" width="42.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="16.2" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (6 samples, 0.08%)</title><rect x="13.4" y="707.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (4 samples, 0.05%)</title><rect x="13.7" y="691.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (270 samples, 3.50%)</title><rect x="14.3" y="707.0" width="41.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.3" y="718.0">one..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (249 samples, 3.23%)</title><rect x="15.2" y="691.0" width="38.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="18.2" y="702.0">.an..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (78 samples, 1.01%)</title><rect x="41.4" y="675.0" width="11.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="44.4" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (78 samples, 1.01%)</title><rect x="41.4" y="659.0" width="11.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="44.4" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (59 samples, 0.77%)</title><rect x="44.3" y="643.0" width="9.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="47.3" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (56 samples, 0.73%)</title><rect x="44.8" y="627.0" width="8.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="47.8" y="638.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.08%)</title><rect x="45.1" y="611.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="48.1" y="622.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.08%)</title><rect x="45.1" y="595.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="48.1" y="606.0"></text>
</g>
<g>
<title>ep_poll (39 samples, 0.51%)</title><rect x="46.0" y="611.0" width="6.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="49.0" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (24 samples, 0.31%)</title><rect x="47.5" y="595.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="50.5" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (10 samples, 0.13%)</title><rect x="49.0" y="579.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="52.0" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (9 samples, 0.12%)</title><rect x="49.2" y="563.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="52.2" y="574.0"></text>
</g>
<g>
<title>sock_poll (8 samples, 0.10%)</title><rect x="49.3" y="547.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="52.3" y="558.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.05%)</title><rect x="50.0" y="531.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="53.0" y="542.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="50.6" y="579.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="53.6" y="590.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="50.9" y="579.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="53.9" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.05%)</title><rect x="51.3" y="595.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="54.3" y="606.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.05%)</title><rect x="51.3" y="579.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="54.3" y="590.0"></text>
</g>
<g>
<title>fput_many (9 samples, 0.12%)</title><rect x="52.0" y="611.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="55.0" y="622.0"></text>
</g>
<g>
<title>__GI___clock_gettime (8 samples, 0.10%)</title><rect x="53.5" y="691.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="56.5" y="702.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="54.4" y="675.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="57.4" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.03%)</title><rect x="54.7" y="691.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="57.7" y="702.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.04%)</title><rect x="55.0" y="691.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="58.0" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,646 samples, 21.36%)</title><rect x="55.6" y="723.0" width="252.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.6" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,639 samples, 21.27%)</title><rect x="56.5" y="707.0" width="251.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="59.5" y="718.0">one/nio/http/HttpSession.processR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,468 samples, 19.05%)</title><rect x="56.9" y="691.0" width="224.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="59.9" y="702.0">one/nio/http/HttpSession.proce..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,364 samples, 17.70%)</title><rect x="59.0" y="675.0" width="208.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.0" y="686.0">one/nio/http/HttpSession.ha..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,363 samples, 17.69%)</title><rect x="59.1" y="659.0" width="208.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.1" y="670.0">one/nio/http/HttpServer.han..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1,343 samples, 17.43%)</title><rect x="59.3" y="643.0" width="205.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.3" y="654.0">RequestHandler0_entity.hand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,153 samples, 14.96%)</title><rect x="59.5" y="627.0" width="176.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.5" y="638.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.04%)</title><rect x="61.3" y="611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="61.3" y="595.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="61.3" y="579.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.3" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,135 samples, 14.73%)</title><rect x="61.8" y="611.0" width="173.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="64.8" y="622.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (21 samples, 0.27%)</title><rect x="61.8" y="595.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (18 samples, 0.23%)</title><rect x="62.2" y="579.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="65.2" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.09%)</title><rect x="62.5" y="563.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.04%)</title><rect x="63.1" y="547.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.03%)</title><rect x="63.3" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.3" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.12%)</title><rect x="63.6" y="563.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="66.6" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (9 samples, 0.12%)</title><rect x="63.6" y="547.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.04%)</title><rect x="64.5" y="531.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.5" y="542.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.03%)</title><rect x="64.5" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.5" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,114 samples, 14.45%)</title><rect x="65.0" y="595.0" width="170.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.0" y="606.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,112 samples, 14.43%)</title><rect x="65.3" y="579.0" width="170.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.3" y="590.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,108 samples, 14.38%)</title><rect x="65.3" y="563.0" width="169.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.3" y="574.0">one/nio/net/Session$Ar..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,106 samples, 14.35%)</title><rect x="65.6" y="547.0" width="169.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.6" y="558.0">one/nio/net/NativeSock..</text>
</g>
<g>
<title>.annobin_send.c (1,078 samples, 13.99%)</title><rect x="66.5" y="531.0" width="165.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="69.5" y="542.0">.annobin_send.c</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.04%)</title><rect x="74.3" y="515.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="77.3" y="526.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="74.8" y="515.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="77.8" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,022 samples, 13.26%)</title><rect x="75.1" y="515.0" width="156.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="78.1" y="526.0">entry_SYSCALL_64_aft..</text>
</g>
<g>
<title>do_syscall_64 (1,022 samples, 13.26%)</title><rect x="75.1" y="499.0" width="156.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="78.1" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,005 samples, 13.04%)</title><rect x="77.7" y="483.0" width="153.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="80.7" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,001 samples, 12.99%)</title><rect x="78.3" y="467.0" width="153.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="81.3" y="478.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (4 samples, 0.05%)</title><rect x="79.2" y="451.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="82.2" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (985 samples, 12.78%)</title><rect x="80.0" y="451.0" width="150.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="83.0" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (7 samples, 0.09%)</title><rect x="80.0" y="435.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="83.0" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (7 samples, 0.09%)</title><rect x="80.0" y="419.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="83.0" y="430.0"></text>
</g>
<g>
<title>avc_has_perm (7 samples, 0.09%)</title><rect x="80.0" y="403.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="83.0" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (978 samples, 12.69%)</title><rect x="81.0" y="435.0" width="149.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="84.0" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (3 samples, 0.04%)</title><rect x="81.5" y="419.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="84.5" y="430.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="81.7" y="403.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="84.7" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (972 samples, 12.61%)</title><rect x="82.0" y="419.0" width="148.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="85.0" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="82.6" y="403.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="85.6" y="414.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.03%)</title><rect x="82.7" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="85.7" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (917 samples, 11.90%)</title><rect x="83.0" y="403.0" width="140.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="86.0" y="414.0">__tcp_push_pending..</text>
</g>
<g>
<title>tcp_write_xmit (917 samples, 11.90%)</title><rect x="83.0" y="387.0" width="140.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="86.0" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (901 samples, 11.69%)</title><rect x="83.6" y="371.0" width="138.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="86.6" y="382.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (875 samples, 11.35%)</title><rect x="84.6" y="355.0" width="133.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="87.6" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (6 samples, 0.08%)</title><rect x="84.7" y="339.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="87.7" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.05%)</title><rect x="85.0" y="323.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="88.0" y="334.0"></text>
</g>
<g>
<title>ip_local_out (161 samples, 2.09%)</title><rect x="85.6" y="339.0" width="24.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="88.6" y="350.0">i..</text>
</g>
<g>
<title>__ip_local_out (161 samples, 2.09%)</title><rect x="85.6" y="323.0" width="24.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="88.6" y="334.0">_..</text>
</g>
<g>
<title>ip_send_check (3 samples, 0.04%)</title><rect x="85.8" y="307.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="88.8" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (157 samples, 2.04%)</title><rect x="86.2" y="307.0" width="24.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="89.2" y="318.0">n..</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (49 samples, 0.64%)</title><rect x="86.7" y="291.0" width="7.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="89.7" y="302.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.03%)</title><rect x="94.2" y="291.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="97.2" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (9 samples, 0.12%)</title><rect x="94.5" y="291.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="97.5" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.09%)</title><rect x="94.8" y="275.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="97.8" y="286.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (11 samples, 0.14%)</title><rect x="95.9" y="291.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="98.9" y="302.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (9 samples, 0.12%)</title><rect x="97.6" y="291.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="100.6" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (8 samples, 0.10%)</title><rect x="99.0" y="291.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="102.0" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (5 samples, 0.06%)</title><rect x="100.2" y="291.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="103.2" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (51 samples, 0.66%)</title><rect x="100.9" y="291.0" width="7.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="103.9" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (16 samples, 0.21%)</title><rect x="102.8" y="275.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="105.8" y="286.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (2 samples, 0.03%)</title><rect x="105.4" y="275.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="108.4" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (16 samples, 0.21%)</title><rect x="105.7" y="275.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="108.7" y="286.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (8 samples, 0.10%)</title><rect x="106.9" y="259.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="109.9" y="270.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (4 samples, 0.05%)</title><rect x="108.1" y="275.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="111.1" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (9 samples, 0.12%)</title><rect x="108.8" y="291.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="111.8" y="302.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (5 samples, 0.06%)</title><rect x="109.1" y="275.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="112.1" y="286.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (2 samples, 0.03%)</title><rect x="109.8" y="275.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="112.8" y="286.0"></text>
</g>
<g>
<title>ip_output (707 samples, 9.17%)</title><rect x="110.3" y="339.0" width="108.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="113.3" y="350.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (636 samples, 8.25%)</title><rect x="112.0" y="323.0" width="97.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="115.0" y="334.0">ip_finish_o..</text>
</g>
<g>
<title>__dev_queue_xmit (64 samples, 0.83%)</title><rect x="113.7" y="307.0" width="9.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="116.7" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (49 samples, 0.64%)</title><rect x="115.5" y="291.0" width="7.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="118.5" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (47 samples, 0.61%)</title><rect x="115.8" y="275.0" width="7.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="118.8" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (7 samples, 0.09%)</title><rect x="117.3" y="259.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="120.3" y="270.0"></text>
</g>
<g>
<title>netif_rx (18 samples, 0.23%)</title><rect x="118.4" y="259.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="121.4" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (16 samples, 0.21%)</title><rect x="118.7" y="243.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="121.7" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (9 samples, 0.12%)</title><rect x="119.8" y="227.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="122.8" y="238.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (6 samples, 0.08%)</title><rect x="121.2" y="259.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="124.2" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (6 samples, 0.08%)</title><rect x="122.1" y="259.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="125.1" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (561 samples, 7.28%)</title><rect x="123.5" y="307.0" width="85.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="126.5" y="318.0">__local_bh..</text>
</g>
<g>
<title>do_softirq.part.0 (561 samples, 7.28%)</title><rect x="123.5" y="291.0" width="85.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="126.5" y="302.0">do_softirq..</text>
</g>
<g>
<title>do_softirq_own_stack (553 samples, 7.18%)</title><rect x="124.7" y="275.0" width="84.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="127.7" y="286.0">do_softirq..</text>
</g>
<g>
<title>__softirqentry_text_start (553 samples, 7.18%)</title><rect x="124.7" y="259.0" width="84.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="127.7" y="270.0">__softirqe..</text>
</g>
<g>
<title>net_rx_action (540 samples, 7.01%)</title><rect x="126.7" y="243.0" width="82.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="129.7" y="254.0">net_rx_ac..</text>
</g>
<g>
<title>process_backlog (534 samples, 6.93%)</title><rect x="127.6" y="227.0" width="81.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="130.6" y="238.0">process_b..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (525 samples, 6.81%)</title><rect x="129.0" y="211.0" width="80.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="132.0" y="222.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.04%)</title><rect x="129.0" y="195.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="132.0" y="206.0"></text>
</g>
<g>
<title>ip_rcv (522 samples, 6.77%)</title><rect x="129.4" y="195.0" width="79.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="132.4" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (390 samples, 5.06%)</title><rect x="131.0" y="179.0" width="59.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="134.0" y="190.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (312 samples, 4.05%)</title><rect x="131.7" y="163.0" width="47.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="134.7" y="174.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (309 samples, 4.01%)</title><rect x="132.2" y="147.0" width="47.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="135.2" y="158.0">ip_p..</text>
</g>
<g>
<title>raw_local_deliver (4 samples, 0.05%)</title><rect x="132.9" y="131.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="135.9" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (300 samples, 3.89%)</title><rect x="133.6" y="131.0" width="45.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="136.6" y="142.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (21 samples, 0.27%)</title><rect x="135.4" y="115.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="138.4" y="126.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="138.6" y="115.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="141.6" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.04%)</title><rect x="138.9" y="115.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="141.9" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.04%)</title><rect x="138.9" y="99.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="141.9" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (3 samples, 0.04%)</title><rect x="138.9" y="83.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="141.9" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (261 samples, 3.39%)</title><rect x="139.4" y="115.0" width="39.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="142.4" y="126.0">tcp..</text>
</g>
<g>
<title>tcp_rcv_established (260 samples, 3.37%)</title><rect x="139.5" y="99.0" width="39.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="142.5" y="110.0">tcp..</text>
</g>
<g>
<title>tcp_ack (73 samples, 0.95%)</title><rect x="140.1" y="83.0" width="11.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="143.1" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (23 samples, 0.30%)</title><rect x="143.4" y="67.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="146.4" y="78.0"></text>
</g>
<g>
<title>__slab_free (8 samples, 0.10%)</title><rect x="143.4" y="51.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="146.4" y="62.0"></text>
</g>
<g>
<title>kfree (5 samples, 0.06%)</title><rect x="144.6" y="51.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="147.6" y="62.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.12%)</title><rect x="145.5" y="51.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="148.5" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (4 samples, 0.05%)</title><rect x="146.9" y="67.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="149.9" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (4 samples, 0.05%)</title><rect x="147.5" y="67.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="150.5" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.03%)</title><rect x="148.6" y="67.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="151.6" y="78.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="148.6" y="51.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="151.6" y="62.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (3 samples, 0.04%)</title><rect x="148.9" y="67.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="151.9" y="78.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.05%)</title><rect x="149.3" y="67.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="152.3" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (5 samples, 0.06%)</title><rect x="149.9" y="67.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="152.9" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (4 samples, 0.05%)</title><rect x="150.7" y="67.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="153.7" y="78.0"></text>
</g>
<g>
<title>tcp_data_queue (177 samples, 2.30%)</title><rect x="151.3" y="83.0" width="27.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="154.3" y="94.0">t..</text>
</g>
<g>
<title>dst_release (4 samples, 0.05%)</title><rect x="151.5" y="67.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="154.5" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (172 samples, 2.23%)</title><rect x="152.1" y="67.0" width="26.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="155.1" y="78.0">s..</text>
</g>
<g>
<title>__wake_up_common_lock (164 samples, 2.13%)</title><rect x="153.2" y="51.0" width="25.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="156.2" y="62.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (162 samples, 2.10%)</title><rect x="153.5" y="35.0" width="24.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="156.5" y="46.0">_..</text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.08%)</title><rect x="178.4" y="83.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="181.4" y="94.0"></text>
</g>
<g>
<title>ktime_get (6 samples, 0.08%)</title><rect x="178.4" y="67.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="181.4" y="78.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="179.0" y="51.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="182.0" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (73 samples, 0.95%)</title><rect x="179.5" y="163.0" width="11.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="182.5" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (52 samples, 0.67%)</title><rect x="179.6" y="147.0" width="8.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="182.6" y="158.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (5 samples, 0.06%)</title><rect x="185.9" y="131.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="188.9" y="142.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (6 samples, 0.08%)</title><rect x="186.7" y="131.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="189.7" y="142.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.03%)</title><rect x="187.6" y="147.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="190.6" y="158.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (6 samples, 0.08%)</title><rect x="187.9" y="147.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="190.9" y="158.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (3 samples, 0.04%)</title><rect x="189.0" y="147.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="192.0" y="158.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (3 samples, 0.04%)</title><rect x="189.4" y="147.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="192.4" y="158.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (2 samples, 0.03%)</title><rect x="189.6" y="131.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="192.6" y="142.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (3 samples, 0.04%)</title><rect x="190.1" y="147.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="193.1" y="158.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (8 samples, 0.10%)</title><rect x="190.7" y="179.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="193.7" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (114 samples, 1.48%)</title><rect x="191.9" y="179.0" width="17.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="194.9" y="190.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (4 samples, 0.05%)</title><rect x="192.7" y="163.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="195.7" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (84 samples, 1.09%)</title><rect x="193.3" y="163.0" width="12.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="196.3" y="174.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (4 samples, 0.05%)</title><rect x="206.3" y="163.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="209.3" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (2 samples, 0.03%)</title><rect x="206.9" y="163.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="209.9" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (4 samples, 0.05%)</title><rect x="207.2" y="163.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="210.2" y="174.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (3 samples, 0.04%)</title><rect x="207.8" y="163.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="210.8" y="174.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (7 samples, 0.09%)</title><rect x="208.3" y="163.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="211.3" y="174.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (3 samples, 0.04%)</title><rect x="208.9" y="147.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="211.9" y="158.0"></text>
</g>
<g>
<title>ip_finish_output (9 samples, 0.12%)</title><rect x="209.3" y="323.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="212.3" y="334.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.05%)</title><rect x="210.1" y="307.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="213.1" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (51 samples, 0.66%)</title><rect x="210.7" y="323.0" width="7.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="213.7" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (13 samples, 0.17%)</title><rect x="210.9" y="307.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="213.9" y="318.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.03%)</title><rect x="212.9" y="307.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="215.9" y="318.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (3 samples, 0.04%)</title><rect x="213.2" y="307.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="216.2" y="318.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (13 samples, 0.17%)</title><rect x="213.6" y="307.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="216.6" y="318.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (10 samples, 0.13%)</title><rect x="214.1" y="291.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="217.1" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (12 samples, 0.16%)</title><rect x="215.6" y="307.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="218.6" y="318.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (5 samples, 0.06%)</title><rect x="216.4" y="291.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="219.4" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute (6 samples, 0.08%)</title><rect x="217.5" y="307.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="220.5" y="318.0"></text>
</g>
<g>
<title>__skb_clone (8 samples, 0.10%)</title><rect x="218.5" y="355.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="221.5" y="366.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="219.5" y="339.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="222.5" y="350.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.03%)</title><rect x="219.9" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="222.9" y="366.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.04%)</title><rect x="220.5" y="355.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="223.5" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.03%)</title><rect x="221.1" y="355.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="224.1" y="366.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.04%)</title><rect x="221.6" y="371.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="224.6" y="382.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="221.7" y="355.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="224.7" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.04%)</title><rect x="222.1" y="371.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="225.1" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="222.1" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="225.1" y="366.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="222.1" y="339.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="225.1" y="350.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (6 samples, 0.08%)</title><rect x="222.5" y="371.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="225.5" y="382.0"></text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.08%)</title><rect x="223.4" y="403.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="226.4" y="414.0"></text>
</g>
<g>
<title>copyin (4 samples, 0.05%)</title><rect x="223.6" y="387.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="226.6" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.05%)</title><rect x="223.6" y="371.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="226.6" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (21 samples, 0.27%)</title><rect x="224.4" y="403.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="227.4" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (19 samples, 0.25%)</title><rect x="224.7" y="387.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="227.7" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (6 samples, 0.08%)</title><rect x="225.3" y="371.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="228.3" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.06%)</title><rect x="225.4" y="355.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="228.4" y="366.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (7 samples, 0.09%)</title><rect x="226.2" y="371.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="229.2" y="382.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="227.3" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="230.3" y="382.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.05%)</title><rect x="227.6" y="403.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="230.6" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (11 samples, 0.14%)</title><rect x="228.6" y="403.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="231.6" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (11 samples, 0.14%)</title><rect x="228.6" y="387.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="231.6" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (6 samples, 0.08%)</title><rect x="229.4" y="371.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="232.4" y="382.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.03%)</title><rect x="230.5" y="403.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="233.5" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.06%)</title><rect x="230.8" y="451.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="233.8" y="462.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.05%)</title><rect x="230.9" y="435.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="233.9" y="446.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="231.1" y="419.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="234.1" y="430.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.26%)</title><rect x="231.5" y="531.0" width="3.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="234.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.26%)</title><rect x="231.5" y="515.0" width="3.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="234.5" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (17 samples, 0.22%)</title><rect x="231.5" y="499.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="234.5" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (13 samples, 0.17%)</title><rect x="232.2" y="483.0" width="1.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="235.2" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.04%)</title><rect x="232.6" y="467.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="235.6" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (7 samples, 0.09%)</title><rect x="233.1" y="467.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="236.1" y="478.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="234.1" y="499.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="237.1" y="510.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="234.6" y="531.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="237.6" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.05%)</title><rect x="234.9" y="563.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="237.9" y="574.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.05%)</title><rect x="234.9" y="547.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="237.9" y="558.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="235.1" y="531.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="238.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="235.5" y="611.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="238.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="235.7" y="595.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="238.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="235.7" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (18 samples, 0.23%)</title><rect x="236.0" y="627.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="239.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="236.4" y="611.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="239.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="236.4" y="595.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="239.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (6 samples, 0.08%)</title><rect x="236.9" y="611.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="239.9" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="237.5" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="240.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.04%)</title><rect x="237.8" y="611.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="240.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="237.8" y="595.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.8" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="238.0" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="241.0" y="590.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.04%)</title><rect x="238.3" y="611.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="241.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="238.4" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="241.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="238.4" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="241.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="238.4" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="241.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (171 samples, 2.22%)</title><rect x="238.7" y="627.0" width="26.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="241.7" y="638.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.06%)</title><rect x="238.7" y="611.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="241.7" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.05%)</title><rect x="238.9" y="595.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="241.9" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="238.9" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="241.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="238.9" y="563.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.9" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="238.9" y="547.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="241.9" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.05%)</title><rect x="238.9" y="531.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="241.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.04%)</title><rect x="238.9" y="515.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="241.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (166 samples, 2.15%)</title><rect x="239.5" y="611.0" width="25.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="242.5" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (166 samples, 2.15%)</title><rect x="239.5" y="595.0" width="25.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.5" y="606.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (149 samples, 1.93%)</title><rect x="239.7" y="579.0" width="22.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="242.7" y="590.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (148 samples, 1.92%)</title><rect x="239.7" y="563.0" width="22.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="242.7" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (148 samples, 1.92%)</title><rect x="239.7" y="547.0" width="22.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="242.7" y="558.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (12 samples, 0.16%)</title><rect x="241.5" y="531.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="244.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (12 samples, 0.16%)</title><rect x="241.5" y="515.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="244.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (41 samples, 0.53%)</title><rect x="243.3" y="531.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="246.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (2 samples, 0.03%)</title><rect x="249.6" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (9 samples, 0.12%)</title><rect x="250.1" y="531.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="253.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (69 samples, 0.90%)</title><rect x="251.5" y="531.0" width="10.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="254.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (63 samples, 0.82%)</title><rect x="252.4" y="515.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (46 samples, 0.60%)</title><rect x="255.0" y="499.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="258.0" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (5 samples, 0.06%)</title><rect x="255.9" y="483.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="258.9" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (17 samples, 0.22%)</title><rect x="256.7" y="483.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="259.7" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (8 samples, 0.10%)</title><rect x="258.0" y="467.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="261.0" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="258.8" y="451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="261.8" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (18 samples, 0.23%)</title><rect x="259.3" y="483.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.3" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (16 samples, 0.21%)</title><rect x="259.6" y="467.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="262.6" y="478.0"></text>
</g>
<g>
<title>vectorizedMismatch (13 samples, 0.17%)</title><rect x="260.0" y="451.0" width="2.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="263.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (2 samples, 0.03%)</title><rect x="262.0" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="265.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (16 samples, 0.21%)</title><rect x="262.5" y="579.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="265.5" y="590.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.05%)</title><rect x="262.8" y="563.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="265.8" y="574.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.03%)</title><rect x="263.4" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="266.4" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.05%)</title><rect x="263.7" y="563.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="266.7" y="574.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="264.0" y="547.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="267.0" y="558.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="264.0" y="531.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="267.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.&lt;init&gt; (4 samples, 0.05%)</title><rect x="264.3" y="563.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="267.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (11 samples, 0.14%)</title><rect x="265.1" y="643.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="268.1" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (11 samples, 0.14%)</title><rect x="265.1" y="627.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="268.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="265.4" y="611.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="268.4" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.09%)</title><rect x="265.7" y="611.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="268.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (7 samples, 0.09%)</title><rect x="265.7" y="595.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.04%)</title><rect x="266.3" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="269.3" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (7 samples, 0.09%)</title><rect x="266.8" y="643.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="269.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.09%)</title><rect x="266.8" y="627.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="269.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="267.2" y="611.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="270.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="267.5" y="595.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="270.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (41 samples, 0.53%)</title><rect x="267.8" y="675.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="270.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (18 samples, 0.23%)</title><rect x="269.7" y="659.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="272.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.12%)</title><rect x="271.0" y="643.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="274.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.12%)</title><rect x="271.0" y="627.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (7 samples, 0.09%)</title><rect x="271.4" y="611.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.4" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.14%)</title><rect x="272.4" y="659.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="275.4" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.14%)</title><rect x="272.4" y="643.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="275.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (19 samples, 0.25%)</title><rect x="274.1" y="675.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="277.1" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (14 samples, 0.18%)</title><rect x="274.3" y="659.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="277.3" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (14 samples, 0.18%)</title><rect x="274.3" y="643.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="277.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="275.9" y="627.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (4 samples, 0.05%)</title><rect x="276.4" y="659.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="279.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (6 samples, 0.08%)</title><rect x="277.0" y="675.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="280.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="277.5" y="659.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.5" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (14 samples, 0.18%)</title><rect x="277.9" y="675.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="280.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (12 samples, 0.16%)</title><rect x="277.9" y="659.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (12 samples, 0.16%)</title><rect x="277.9" y="643.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="280.9" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.05%)</title><rect x="279.0" y="627.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="282.0" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.05%)</title><rect x="279.0" y="611.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="282.0" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (4 samples, 0.05%)</title><rect x="279.0" y="595.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="282.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="279.8" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="282.8" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="279.8" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="282.8" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="279.8" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="282.8" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.12%)</title><rect x="280.2" y="675.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.2" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.12%)</title><rect x="280.2" y="659.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="283.2" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (169 samples, 2.19%)</title><rect x="281.6" y="691.0" width="25.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="284.6" y="702.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (168 samples, 2.18%)</title><rect x="281.8" y="675.0" width="25.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="284.8" y="686.0">o..</text>
</g>
<g>
<title>[unknown] (37 samples, 0.48%)</title><rect x="282.2" y="659.0" width="5.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="285.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.48%)</title><rect x="282.2" y="643.0" width="5.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="285.2" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (31 samples, 0.40%)</title><rect x="282.2" y="627.0" width="4.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="285.2" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (6 samples, 0.08%)</title><rect x="282.4" y="611.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="285.4" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="283.3" y="611.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="286.3" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.03%)</title><rect x="283.6" y="611.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="286.6" y="622.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (6 samples, 0.08%)</title><rect x="283.9" y="611.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="286.9" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (14 samples, 0.18%)</title><rect x="284.8" y="611.0" width="2.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="287.8" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.05%)</title><rect x="285.3" y="595.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="288.3" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.04%)</title><rect x="285.9" y="595.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="288.9" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (4 samples, 0.05%)</title><rect x="286.4" y="595.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="289.4" y="606.0"></text>
</g>
<g>
<title>__libc_recv (2 samples, 0.03%)</title><rect x="287.0" y="627.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="290.0" y="638.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.04%)</title><rect x="287.3" y="627.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="290.3" y="638.0"></text>
</g>
<g>
<title>__libc_recv (127 samples, 1.65%)</title><rect x="287.9" y="659.0" width="19.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="290.9" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (100 samples, 1.30%)</title><rect x="292.0" y="643.0" width="15.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="295.0" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (100 samples, 1.30%)</title><rect x="292.0" y="627.0" width="15.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="295.0" y="638.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (86 samples, 1.12%)</title><rect x="294.2" y="611.0" width="13.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="297.2" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (82 samples, 1.06%)</title><rect x="294.8" y="595.0" width="12.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="297.8" y="606.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="295.2" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="298.2" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (54 samples, 0.70%)</title><rect x="295.5" y="579.0" width="8.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="298.5" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (54 samples, 0.70%)</title><rect x="295.5" y="563.0" width="8.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="298.5" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.13%)</title><rect x="296.6" y="547.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="299.6" y="558.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.08%)</title><rect x="296.6" y="531.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="299.6" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (6 samples, 0.08%)</title><rect x="296.6" y="515.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="299.6" y="526.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.05%)</title><rect x="296.9" y="499.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="299.9" y="510.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.05%)</title><rect x="297.5" y="531.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="300.5" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="298.1" y="547.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="301.1" y="558.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.05%)</title><rect x="298.6" y="547.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="301.6" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="298.9" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="301.9" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (21 samples, 0.27%)</title><rect x="299.2" y="547.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="302.2" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (21 samples, 0.27%)</title><rect x="299.2" y="531.0" width="3.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="302.2" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.06%)</title><rect x="299.4" y="515.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="302.4" y="526.0"></text>
</g>
<g>
<title>copyout (4 samples, 0.05%)</title><rect x="299.5" y="499.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="302.5" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.05%)</title><rect x="299.5" y="483.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="302.5" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (15 samples, 0.19%)</title><rect x="300.1" y="515.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="303.1" y="526.0"></text>
</g>
<g>
<title>__check_object_size (13 samples, 0.17%)</title><rect x="300.4" y="499.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="303.4" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (10 samples, 0.13%)</title><rect x="300.9" y="483.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="303.9" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.03%)</title><rect x="302.4" y="547.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="305.4" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="302.4" y="531.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="305.4" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (7 samples, 0.09%)</title><rect x="302.7" y="547.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="305.7" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.06%)</title><rect x="303.0" y="531.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="306.0" y="542.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.04%)</title><rect x="303.4" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="306.4" y="526.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="303.4" y="499.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="306.4" y="510.0"></text>
</g>
<g>
<title>sock_recvmsg (17 samples, 0.22%)</title><rect x="303.8" y="579.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="306.8" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (17 samples, 0.22%)</title><rect x="303.8" y="563.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="306.8" y="574.0"></text>
</g>
<g>
<title>sock_has_perm (16 samples, 0.21%)</title><rect x="304.0" y="547.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="307.0" y="558.0"></text>
</g>
<g>
<title>avc_has_perm (10 samples, 0.13%)</title><rect x="304.9" y="531.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="307.9" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.08%)</title><rect x="306.4" y="579.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="309.4" y="590.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.08%)</title><rect x="306.4" y="563.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="309.4" y="574.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.04%)</title><rect x="306.9" y="547.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="309.9" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=26109] (3,181 samples, 41.27%)</title><rect x="307.6" y="755.0" width="487.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="310.6" y="766.0">[NIO Selector #1 tid=26109]</text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.05%)</title><rect x="307.9" y="739.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="310.9" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,175 samples, 41.20%)</title><rect x="308.6" y="739.0" width="486.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="311.6" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (373 samples, 4.84%)</title><rect x="309.0" y="723.0" width="57.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="312.0" y="734.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (12 samples, 0.16%)</title><rect x="309.5" y="707.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="312.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (4 samples, 0.05%)</title><rect x="310.7" y="691.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="313.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (358 samples, 4.65%)</title><rect x="311.3" y="707.0" width="54.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.3" y="718.0">one/n..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (333 samples, 4.32%)</title><rect x="312.4" y="691.0" width="51.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="315.4" y="702.0">.anno..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (197 samples, 2.56%)</title><rect x="333.2" y="675.0" width="30.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="336.2" y="686.0">en..</text>
</g>
<g>
<title>do_syscall_64 (197 samples, 2.56%)</title><rect x="333.2" y="659.0" width="30.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="336.2" y="670.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (159 samples, 2.06%)</title><rect x="339.0" y="643.0" width="24.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="342.0" y="654.0">_..</text>
</g>
<g>
<title>do_epoll_wait (157 samples, 2.04%)</title><rect x="339.3" y="627.0" width="24.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="342.3" y="638.0">d..</text>
</g>
<g>
<title>__fget_light (9 samples, 0.12%)</title><rect x="339.9" y="611.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="342.9" y="622.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.09%)</title><rect x="340.3" y="595.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="343.3" y="606.0"></text>
</g>
<g>
<title>ep_poll (138 samples, 1.79%)</title><rect x="341.3" y="611.0" width="21.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="344.3" y="622.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (104 samples, 1.35%)</title><rect x="345.8" y="595.0" width="15.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="348.8" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (56 samples, 0.73%)</title><rect x="351.4" y="579.0" width="8.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="354.4" y="590.0"></text>
</g>
<g>
<title>__list_del_entry_valid (2 samples, 0.03%)</title><rect x="353.4" y="563.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="356.4" y="574.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (41 samples, 0.53%)</title><rect x="353.7" y="563.0" width="6.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="356.7" y="574.0"></text>
</g>
<g>
<title>sock_poll (37 samples, 0.48%)</title><rect x="354.3" y="547.0" width="5.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="357.3" y="558.0"></text>
</g>
<g>
<title>tcp_poll (22 samples, 0.29%)</title><rect x="356.6" y="531.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="359.6" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (7 samples, 0.09%)</title><rect x="358.9" y="515.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="361.9" y="526.0"></text>
</g>
<g>
<title>mutex_lock (6 samples, 0.08%)</title><rect x="360.0" y="579.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="363.0" y="590.0"></text>
</g>
<g>
<title>mutex_unlock (5 samples, 0.06%)</title><rect x="360.9" y="579.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="363.9" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.06%)</title><rect x="361.7" y="595.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="364.7" y="606.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.06%)</title><rect x="361.7" y="579.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="364.7" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="362.1" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="365.1" y="574.0"></text>
</g>
<g>
<title>fput_many (6 samples, 0.08%)</title><rect x="362.5" y="611.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="365.5" y="622.0"></text>
</g>
<g>
<title>__GI___clock_gettime (10 samples, 0.13%)</title><rect x="363.5" y="691.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="366.5" y="702.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.05%)</title><rect x="364.4" y="675.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="367.4" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.05%)</title><rect x="365.1" y="691.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="368.1" y="702.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="365.7" y="691.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="368.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,799 samples, 36.32%)</title><rect x="366.1" y="723.0" width="428.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="369.1" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="367.0" y="707.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="370.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,783 samples, 36.11%)</title><rect x="367.4" y="707.0" width="426.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.4" y="718.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,514 samples, 32.62%)</title><rect x="367.4" y="691.0" width="384.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.4" y="702.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,335 samples, 30.30%)</title><rect x="370.0" y="675.0" width="357.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="373.0" y="686.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,332 samples, 30.26%)</title><rect x="370.4" y="659.0" width="357.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="373.4" y="670.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (2,307 samples, 29.93%)</title><rect x="370.4" y="643.0" width="353.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="373.4" y="654.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,959 samples, 25.42%)</title><rect x="371.3" y="627.0" width="300.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="374.3" y="638.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,937 samples, 25.13%)</title><rect x="373.6" y="611.0" width="296.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="376.6" y="622.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (47 samples, 0.61%)</title><rect x="373.6" y="595.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="376.6" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="374.9" y="579.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="377.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (36 samples, 0.47%)</title><rect x="375.3" y="579.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="378.3" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.03%)</title><rect x="375.3" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="378.3" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.03%)</title><rect x="375.3" y="547.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="378.3" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (17 samples, 0.22%)</title><rect x="375.6" y="563.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.05%)</title><rect x="377.2" y="547.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="380.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="377.8" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="380.8" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (17 samples, 0.22%)</title><rect x="378.2" y="563.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="381.2" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (17 samples, 0.22%)</title><rect x="378.2" y="547.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="381.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.05%)</title><rect x="380.1" y="531.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="383.1" y="542.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (4 samples, 0.05%)</title><rect x="380.1" y="515.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="383.1" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,890 samples, 24.52%)</title><rect x="380.8" y="595.0" width="289.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="383.8" y="606.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,888 samples, 24.50%)</title><rect x="381.1" y="579.0" width="289.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.1" y="590.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,882 samples, 24.42%)</title><rect x="381.4" y="563.0" width="288.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="384.4" y="574.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,880 samples, 24.39%)</title><rect x="381.7" y="547.0" width="287.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.7" y="558.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>.annobin_send.c (1,852 samples, 24.03%)</title><rect x="382.7" y="531.0" width="283.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="385.7" y="542.0">.annobin_send.c</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (14 samples, 0.18%)</title><rect x="395.5" y="515.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="398.5" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,752 samples, 22.73%)</title><rect x="398.0" y="515.0" width="268.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="401.0" y="526.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (1,752 samples, 22.73%)</title><rect x="398.0" y="499.0" width="268.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="401.0" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,720 samples, 22.32%)</title><rect x="402.7" y="483.0" width="263.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="405.7" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,717 samples, 22.28%)</title><rect x="403.2" y="467.0" width="262.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="406.2" y="478.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (1,700 samples, 22.06%)</title><rect x="404.4" y="451.0" width="260.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="407.4" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (12 samples, 0.16%)</title><rect x="404.4" y="435.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="407.4" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (11 samples, 0.14%)</title><rect x="404.6" y="419.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="407.6" y="430.0"></text>
</g>
<g>
<title>avc_has_perm (8 samples, 0.10%)</title><rect x="405.0" y="403.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="408.0" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,688 samples, 21.90%)</title><rect x="406.2" y="435.0" width="258.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="409.2" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (9 samples, 0.12%)</title><rect x="407.0" y="419.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="410.0" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="407.3" y="403.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="410.3" y="414.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.05%)</title><rect x="407.8" y="403.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="410.8" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,674 samples, 21.72%)</title><rect x="408.4" y="419.0" width="256.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="411.4" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (13 samples, 0.17%)</title><rect x="410.8" y="403.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="413.8" y="414.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.03%)</title><rect x="411.4" y="387.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="414.4" y="398.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.08%)</title><rect x="411.8" y="387.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="414.8" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1,562 samples, 20.27%)</title><rect x="412.8" y="403.0" width="239.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="415.8" y="414.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (1,562 samples, 20.27%)</title><rect x="412.8" y="387.0" width="239.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="415.8" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (1,512 samples, 19.62%)</title><rect x="415.1" y="371.0" width="231.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="418.1" y="382.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (1,461 samples, 18.96%)</title><rect x="417.9" y="355.0" width="223.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="420.9" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (14 samples, 0.18%)</title><rect x="419.0" y="339.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="422.0" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (11 samples, 0.14%)</title><rect x="419.4" y="323.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="422.4" y="334.0"></text>
</g>
<g>
<title>ip_local_out (258 samples, 3.35%)</title><rect x="421.2" y="339.0" width="39.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="424.2" y="350.0">ip_..</text>
</g>
<g>
<title>__ip_local_out (257 samples, 3.33%)</title><rect x="421.4" y="323.0" width="39.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="424.4" y="334.0">__i..</text>
</g>
<g>
<title>ip_send_check (7 samples, 0.09%)</title><rect x="421.7" y="307.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="424.7" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (248 samples, 3.22%)</title><rect x="422.8" y="307.0" width="37.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="425.8" y="318.0">nf_..</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (83 samples, 1.08%)</title><rect x="423.1" y="291.0" width="12.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="426.1" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.04%)</title><rect x="435.3" y="275.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="438.3" y="286.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (9 samples, 0.12%)</title><rect x="435.8" y="291.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="438.8" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (32 samples, 0.42%)</title><rect x="437.2" y="291.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="440.2" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (28 samples, 0.36%)</title><rect x="437.8" y="275.0" width="4.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="440.8" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="441.8" y="259.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="444.8" y="270.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (5 samples, 0.06%)</title><rect x="442.1" y="291.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="445.1" y="302.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (5 samples, 0.06%)</title><rect x="442.8" y="291.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="445.8" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (10 samples, 0.13%)</title><rect x="443.6" y="291.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="446.6" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (6 samples, 0.08%)</title><rect x="445.1" y="291.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="448.1" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (80 samples, 1.04%)</title><rect x="446.1" y="291.0" width="12.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="449.1" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (29 samples, 0.38%)</title><rect x="448.8" y="275.0" width="4.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="451.8" y="286.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (2 samples, 0.03%)</title><rect x="453.2" y="275.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="456.2" y="286.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (5 samples, 0.06%)</title><rect x="453.6" y="275.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="456.6" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (19 samples, 0.25%)</title><rect x="454.3" y="275.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="457.3" y="286.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="455.8" y="259.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="458.8" y="270.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (6 samples, 0.08%)</title><rect x="456.3" y="259.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="459.3" y="270.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (7 samples, 0.09%)</title><rect x="457.2" y="275.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="460.2" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (14 samples, 0.18%)</title><rect x="458.3" y="291.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="461.3" y="302.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (2 samples, 0.03%)</title><rect x="459.7" y="275.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="462.7" y="286.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (2 samples, 0.03%)</title><rect x="460.1" y="275.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="463.1" y="286.0"></text>
</g>
<g>
<title>selinux_ipv4_output (2 samples, 0.03%)</title><rect x="460.4" y="291.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="463.4" y="302.0"></text>
</g>
<g>
<title>ip_output (1,180 samples, 15.31%)</title><rect x="460.7" y="339.0" width="180.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="463.7" y="350.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (1,093 samples, 14.18%)</title><rect x="462.6" y="323.0" width="167.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="465.6" y="334.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (57 samples, 0.74%)</title><rect x="466.4" y="307.0" width="8.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="469.4" y="318.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="467.5" y="291.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="470.5" y="302.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (43 samples, 0.56%)</title><rect x="467.8" y="291.0" width="6.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="470.8" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (41 samples, 0.53%)</title><rect x="468.1" y="275.0" width="6.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="471.1" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (6 samples, 0.08%)</title><rect x="468.9" y="259.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="471.9" y="270.0"></text>
</g>
<g>
<title>netif_rx (17 samples, 0.22%)</title><rect x="469.8" y="259.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="472.8" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (17 samples, 0.22%)</title><rect x="469.8" y="243.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="472.8" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (11 samples, 0.14%)</title><rect x="470.7" y="227.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="473.7" y="238.0"></text>
</g>
<g>
<title>sk_free (5 samples, 0.06%)</title><rect x="472.4" y="259.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="475.4" y="270.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (3 samples, 0.04%)</title><rect x="473.2" y="259.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="476.2" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (5 samples, 0.06%)</title><rect x="473.6" y="259.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="476.6" y="270.0"></text>
</g>
<g>
<title>netdev_pick_tx (2 samples, 0.03%)</title><rect x="474.4" y="291.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="477.4" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.04%)</title><rect x="474.7" y="291.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="477.7" y="302.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="474.8" y="275.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="477.8" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1,011 samples, 13.12%)</title><rect x="475.1" y="307.0" width="154.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="478.1" y="318.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.0 (1,011 samples, 13.12%)</title><rect x="475.1" y="291.0" width="154.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="478.1" y="302.0">do_softirq.part.0</text>
</g>
<g>
<title>do_softirq_own_stack (1,004 samples, 13.03%)</title><rect x="476.2" y="275.0" width="153.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="479.2" y="286.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (1,004 samples, 13.03%)</title><rect x="476.2" y="259.0" width="153.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="479.2" y="270.0">__softirqentry_text..</text>
</g>
<g>
<title>net_rx_action (978 samples, 12.69%)</title><rect x="479.9" y="243.0" width="149.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="482.9" y="254.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (5 samples, 0.06%)</title><rect x="481.4" y="227.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="484.4" y="238.0"></text>
</g>
<g>
<title>process_backlog (962 samples, 12.48%)</title><rect x="482.3" y="227.0" width="147.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="485.3" y="238.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb_one_core (947 samples, 12.29%)</title><rect x="484.6" y="211.0" width="145.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="487.6" y="222.0">__netif_receive_sk..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.05%)</title><rect x="484.8" y="195.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="487.8" y="206.0"></text>
</g>
<g>
<title>ip_rcv (942 samples, 12.22%)</title><rect x="485.4" y="195.0" width="144.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="488.4" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (727 samples, 9.43%)</title><rect x="486.6" y="179.0" width="111.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="489.6" y="190.0">ip_local_deli..</text>
</g>
<g>
<title>ip_local_deliver_finish (603 samples, 7.82%)</title><rect x="487.8" y="163.0" width="92.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="490.8" y="174.0">ip_local_de..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (598 samples, 7.76%)</title><rect x="488.6" y="147.0" width="91.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="491.6" y="158.0">ip_protocol..</text>
</g>
<g>
<title>raw_local_deliver (9 samples, 0.12%)</title><rect x="490.0" y="131.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="493.0" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (580 samples, 7.53%)</title><rect x="491.4" y="131.0" width="88.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="494.4" y="142.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (29 samples, 0.38%)</title><rect x="493.8" y="115.0" width="4.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="496.8" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.04%)</title><rect x="497.8" y="99.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="500.8" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock (6 samples, 0.08%)</title><rect x="498.3" y="115.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="501.3" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.09%)</title><rect x="499.2" y="115.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="502.2" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (6 samples, 0.08%)</title><rect x="499.3" y="99.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="502.3" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (6 samples, 0.08%)</title><rect x="499.3" y="83.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="502.3" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (514 samples, 6.67%)</title><rect x="500.4" y="115.0" width="78.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="503.4" y="126.0">tcp_v4_do..</text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="500.4" y="99.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="503.4" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (512 samples, 6.64%)</title><rect x="500.7" y="99.0" width="78.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="503.7" y="110.0">tcp_rcv_e..</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.04%)</title><rect x="501.3" y="83.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="504.3" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.05%)</title><rect x="501.8" y="83.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="504.8" y="94.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="501.9" y="67.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="504.9" y="78.0"></text>
</g>
<g>
<title>tcp_ack (125 samples, 1.62%)</title><rect x="502.4" y="83.0" width="19.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="505.4" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (52 samples, 0.67%)</title><rect x="505.8" y="67.0" width="7.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="508.8" y="78.0"></text>
</g>
<g>
<title>__slab_free (12 samples, 0.16%)</title><rect x="505.9" y="51.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="508.9" y="62.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.04%)</title><rect x="507.8" y="51.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="510.8" y="62.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.03%)</title><rect x="508.2" y="51.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="511.2" y="62.0"></text>
</g>
<g>
<title>skb_release_data (34 samples, 0.44%)</title><rect x="508.5" y="51.0" width="5.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="511.5" y="62.0"></text>
</g>
<g>
<title>__list_del_entry_valid (5 samples, 0.06%)</title><rect x="513.7" y="67.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="516.7" y="78.0"></text>
</g>
<g>
<title>bictcp_acked (12 samples, 0.16%)</title><rect x="514.5" y="67.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="517.5" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (8 samples, 0.10%)</title><rect x="516.3" y="67.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="519.3" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (7 samples, 0.09%)</title><rect x="517.6" y="67.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="520.6" y="78.0"></text>
</g>
<g>
<title>__slab_free (7 samples, 0.09%)</title><rect x="517.6" y="51.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="520.6" y="62.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (3 samples, 0.04%)</title><rect x="518.6" y="67.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="521.6" y="78.0"></text>
</g>
<g>
<title>tcp_newly_delivered (3 samples, 0.04%)</title><rect x="519.1" y="67.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="522.1" y="78.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (4 samples, 0.05%)</title><rect x="519.5" y="67.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="522.5" y="78.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.03%)</title><rect x="520.2" y="67.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="523.2" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.03%)</title><rect x="520.5" y="67.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="523.5" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (5 samples, 0.06%)</title><rect x="520.8" y="67.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="523.8" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.04%)</title><rect x="521.5" y="83.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="524.5" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (345 samples, 4.48%)</title><rect x="522.0" y="83.0" width="52.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="525.0" y="94.0">tcp_d..</text>
</g>
<g>
<title>sock_def_readable (334 samples, 4.33%)</title><rect x="522.8" y="67.0" width="51.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="525.8" y="78.0">sock_..</text>
</g>
<g>
<title>__wake_up_common_lock (322 samples, 4.18%)</title><rect x="524.6" y="51.0" width="49.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="527.6" y="62.0">__wak..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (320 samples, 4.15%)</title><rect x="524.9" y="35.0" width="49.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="527.9" y="46.0">_raw..</text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.05%)</title><rect x="573.9" y="67.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="576.9" y="78.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="574.5" y="67.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="577.5" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (27 samples, 0.35%)</title><rect x="574.8" y="83.0" width="4.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="577.8" y="94.0"></text>
</g>
<g>
<title>ktime_get (17 samples, 0.22%)</title><rect x="576.3" y="67.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="579.3" y="78.0"></text>
</g>
<g>
<title>read_tsc (12 samples, 0.16%)</title><rect x="577.1" y="51.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="580.1" y="62.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (3 samples, 0.04%)</title><rect x="579.1" y="115.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="582.1" y="126.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (4 samples, 0.05%)</title><rect x="579.6" y="115.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="582.6" y="126.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (2 samples, 0.03%)</title><rect x="579.9" y="99.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="582.9" y="110.0"></text>
</g>
<g>
<title>nf_hook_slow (116 samples, 1.51%)</title><rect x="580.2" y="163.0" width="17.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="583.2" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (81 samples, 1.05%)</title><rect x="581.2" y="147.0" width="12.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="584.2" y="158.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (9 samples, 0.12%)</title><rect x="591.5" y="131.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="594.5" y="142.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (5 samples, 0.06%)</title><rect x="592.9" y="131.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="595.9" y="142.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.03%)</title><rect x="593.6" y="147.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="596.6" y="158.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.05%)</title><rect x="594.0" y="147.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="597.0" y="158.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (5 samples, 0.06%)</title><rect x="594.6" y="147.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="597.6" y="158.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (4 samples, 0.05%)</title><rect x="595.3" y="147.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="598.3" y="158.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (4 samples, 0.05%)</title><rect x="595.9" y="147.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="598.9" y="158.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (3 samples, 0.04%)</title><rect x="596.1" y="131.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="599.1" y="142.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (7 samples, 0.09%)</title><rect x="596.6" y="147.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="599.6" y="158.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (2 samples, 0.03%)</title><rect x="597.6" y="147.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="600.6" y="158.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (13 samples, 0.17%)</title><rect x="597.9" y="179.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="600.9" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (193 samples, 2.50%)</title><rect x="600.1" y="179.0" width="29.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="603.1" y="190.0">nf..</text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (6 samples, 0.08%)</title><rect x="601.5" y="163.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="604.5" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (137 samples, 1.78%)</title><rect x="602.4" y="163.0" width="20.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="605.4" y="174.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="623.0" y="147.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="626.0" y="158.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (6 samples, 0.08%)</title><rect x="623.3" y="163.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="626.3" y="174.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (4 samples, 0.05%)</title><rect x="624.3" y="163.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="627.3" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (8 samples, 0.10%)</title><rect x="624.9" y="163.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="627.9" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (3 samples, 0.04%)</title><rect x="626.1" y="163.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="629.1" y="174.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (9 samples, 0.12%)</title><rect x="626.6" y="163.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="629.6" y="174.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (11 samples, 0.14%)</title><rect x="627.9" y="163.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="630.9" y="174.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (2 samples, 0.03%)</title><rect x="629.3" y="147.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="632.3" y="158.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.03%)</title><rect x="629.6" y="243.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="632.6" y="254.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="629.6" y="227.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="632.6" y="238.0"></text>
</g>
<g>
<title>ip_finish_output (10 samples, 0.13%)</title><rect x="629.9" y="323.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="632.9" y="334.0"></text>
</g>
<g>
<title>ipv4_mtu (6 samples, 0.08%)</title><rect x="630.5" y="307.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="633.5" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (65 samples, 0.84%)</title><rect x="631.5" y="323.0" width="9.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="634.5" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (20 samples, 0.26%)</title><rect x="631.9" y="307.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="634.9" y="318.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.05%)</title><rect x="635.0" y="307.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="638.0" y="318.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (9 samples, 0.12%)</title><rect x="635.6" y="307.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="638.6" y="318.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (13 samples, 0.17%)</title><rect x="637.0" y="307.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="640.0" y="318.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (11 samples, 0.14%)</title><rect x="637.3" y="291.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="640.3" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (4 samples, 0.05%)</title><rect x="639.0" y="307.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="642.0" y="318.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (3 samples, 0.04%)</title><rect x="639.1" y="291.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="642.1" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute (8 samples, 0.10%)</title><rect x="639.6" y="307.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="642.6" y="318.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (4 samples, 0.05%)</title><rect x="640.8" y="307.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="643.8" y="318.0"></text>
</g>
<g>
<title>__skb_clone (7 samples, 0.09%)</title><rect x="641.6" y="355.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="644.6" y="366.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="642.3" y="339.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="645.3" y="350.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="642.6" y="355.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="645.6" y="366.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (10 samples, 0.13%)</title><rect x="643.1" y="355.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="646.1" y="366.0"></text>
</g>
<g>
<title>skb_clone (4 samples, 0.05%)</title><rect x="644.6" y="355.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="647.6" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (3 samples, 0.04%)</title><rect x="645.4" y="355.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="648.4" y="366.0"></text>
</g>
<g>
<title>tcp_v4_send_check (5 samples, 0.06%)</title><rect x="645.9" y="355.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="648.9" y="366.0"></text>
</g>
<g>
<title>ktime_get (12 samples, 0.16%)</title><rect x="646.6" y="371.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="649.6" y="382.0"></text>
</g>
<g>
<title>read_tsc (8 samples, 0.10%)</title><rect x="647.2" y="355.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="650.2" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (11 samples, 0.14%)</title><rect x="648.6" y="371.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="651.6" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.06%)</title><rect x="648.9" y="355.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="651.9" y="366.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.06%)</title><rect x="648.9" y="339.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="651.9" y="350.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.05%)</title><rect x="649.7" y="355.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="652.7" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (10 samples, 0.13%)</title><rect x="650.3" y="371.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="653.3" y="382.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (3 samples, 0.04%)</title><rect x="650.9" y="355.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="653.9" y="366.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="651.5" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="654.5" y="366.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="651.5" y="339.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="654.5" y="350.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.05%)</title><rect x="652.0" y="403.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="655.0" y="414.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.03%)</title><rect x="652.1" y="387.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="655.1" y="398.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="652.1" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="655.1" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (46 samples, 0.60%)</title><rect x="652.6" y="403.0" width="7.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="655.6" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (46 samples, 0.60%)</title><rect x="652.6" y="387.0" width="7.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="655.6" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (16 samples, 0.21%)</title><rect x="654.1" y="371.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="657.1" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (15 samples, 0.19%)</title><rect x="654.3" y="355.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="657.3" y="366.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.05%)</title><rect x="655.7" y="339.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="658.7" y="350.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.03%)</title><rect x="656.3" y="339.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="659.3" y="350.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.12%)</title><rect x="656.6" y="371.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="659.6" y="382.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="657.6" y="355.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="660.6" y="366.0"></text>
</g>
<g>
<title>ksize (11 samples, 0.14%)</title><rect x="658.0" y="371.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="661.0" y="382.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.05%)</title><rect x="659.6" y="403.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="662.6" y="414.0"></text>
</g>
<g>
<title>tcp_push (4 samples, 0.05%)</title><rect x="660.4" y="403.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="663.4" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (21 samples, 0.27%)</title><rect x="661.2" y="403.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="664.2" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (19 samples, 0.25%)</title><rect x="661.5" y="387.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="664.5" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (14 samples, 0.18%)</title><rect x="662.1" y="371.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="665.1" y="382.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.03%)</title><rect x="664.4" y="403.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="667.4" y="414.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.12%)</title><rect x="664.7" y="451.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="667.7" y="462.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.12%)</title><rect x="664.7" y="435.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="667.7" y="446.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.06%)</title><rect x="665.3" y="419.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="668.3" y="430.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.26%)</title><rect x="666.4" y="531.0" width="3.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="669.4" y="542.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.26%)</title><rect x="666.4" y="515.0" width="3.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="669.4" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (19 samples, 0.25%)</title><rect x="666.4" y="499.0" width="2.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="669.4" y="510.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (4 samples, 0.05%)</title><rect x="666.8" y="483.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="669.8" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (12 samples, 0.16%)</title><rect x="667.4" y="483.0" width="1.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="670.4" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (8 samples, 0.10%)</title><rect x="667.8" y="467.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="670.8" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.03%)</title><rect x="669.0" y="467.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="672.0" y="478.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.05%)</title><rect x="669.6" y="563.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="672.6" y="574.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.05%)</title><rect x="669.6" y="547.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="672.6" y="558.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.05%)</title><rect x="669.6" y="531.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="672.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="670.2" y="611.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="673.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="670.4" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="673.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="670.4" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="673.4" y="590.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="670.4" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="673.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.isHttp11 (2 samples, 0.03%)</title><rect x="670.8" y="611.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="673.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (17 samples, 0.22%)</title><rect x="671.3" y="627.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="674.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.08%)</title><rect x="671.4" y="611.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="674.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.06%)</title><rect x="671.6" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="674.6" y="606.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="671.7" y="579.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="674.7" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="672.0" y="579.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="675.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="672.3" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.03%)</title><rect x="672.3" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="675.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (4 samples, 0.05%)</title><rect x="672.6" y="611.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="675.6" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="673.0" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.05%)</title><rect x="673.3" y="611.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="673.3" y="595.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="676.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="673.3" y="579.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.05%)</title><rect x="673.3" y="563.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (325 samples, 4.22%)</title><rect x="673.9" y="627.0" width="49.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="676.9" y="638.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.06%)</title><rect x="674.0" y="611.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="677.0" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.06%)</title><rect x="674.0" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.0" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="674.3" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="677.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="674.3" y="563.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.3" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="674.5" y="547.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="677.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.03%)</title><rect x="674.8" y="611.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (317 samples, 4.11%)</title><rect x="675.1" y="611.0" width="48.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.1" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (317 samples, 4.11%)</title><rect x="675.1" y="595.0" width="48.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.1" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (292 samples, 3.79%)</title><rect x="675.1" y="579.0" width="44.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="678.1" y="590.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (291 samples, 3.78%)</title><rect x="675.3" y="563.0" width="44.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="678.3" y="574.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (291 samples, 3.78%)</title><rect x="675.3" y="547.0" width="44.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="678.3" y="558.0">java..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (6 samples, 0.08%)</title><rect x="679.5" y="531.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="682.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (6 samples, 0.08%)</title><rect x="679.5" y="515.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (76 samples, 0.99%)</title><rect x="680.5" y="531.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (2 samples, 0.03%)</title><rect x="692.1" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (16 samples, 0.21%)</title><rect x="692.6" y="531.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.03%)</title><rect x="693.2" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="696.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.03%)</title><rect x="693.2" y="499.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.03%)</title><rect x="693.2" y="483.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.2" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="693.2" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.2" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="693.2" y="451.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.2" y="462.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="693.2" y="435.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="696.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (10 samples, 0.13%)</title><rect x="693.5" y="515.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="696.5" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.10%)</title><rect x="693.8" y="499.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.8" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.10%)</title><rect x="693.8" y="483.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="696.8" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.04%)</title><rect x="694.4" y="467.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="697.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (160 samples, 2.08%)</title><rect x="695.0" y="531.0" width="24.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.0" y="542.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (148 samples, 1.92%)</title><rect x="696.8" y="515.0" width="22.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.8" y="526.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (113 samples, 1.47%)</title><rect x="702.2" y="499.0" width="17.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="705.2" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.08%)</title><rect x="704.0" y="483.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="707.0" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (18 samples, 0.23%)</title><rect x="705.0" y="483.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.0" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (41 samples, 0.53%)</title><rect x="707.7" y="483.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="710.7" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (21 samples, 0.27%)</title><rect x="710.8" y="467.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="713.8" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (8 samples, 0.10%)</title><rect x="712.5" y="451.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="715.5" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (2 samples, 0.03%)</title><rect x="713.7" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="716.7" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (36 samples, 0.47%)</title><rect x="714.0" y="483.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="717.0" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (27 samples, 0.35%)</title><rect x="714.8" y="467.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="717.8" y="478.0"></text>
</g>
<g>
<title>vectorizedMismatch (23 samples, 0.30%)</title><rect x="715.4" y="451.0" width="3.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="718.4" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (4 samples, 0.05%)</title><rect x="718.9" y="467.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="721.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (2 samples, 0.03%)</title><rect x="719.5" y="531.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (25 samples, 0.32%)</title><rect x="719.8" y="579.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="722.8" y="590.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (2 samples, 0.03%)</title><rect x="721.2" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.2" y="574.0"></text>
</g>
<g>
<title>java/lang/Long.&lt;init&gt; (2 samples, 0.03%)</title><rect x="721.2" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="724.2" y="558.0"></text>
</g>
<g>
<title>java/lang/Number.&lt;init&gt; (2 samples, 0.03%)</title><rect x="721.2" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="724.2" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.06%)</title><rect x="721.5" y="563.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="724.5" y="574.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.06%)</title><rect x="721.5" y="547.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="724.5" y="558.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.05%)</title><rect x="721.6" y="531.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="724.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.&lt;init&gt; (8 samples, 0.10%)</title><rect x="722.3" y="563.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="725.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (14 samples, 0.18%)</title><rect x="723.6" y="643.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="726.6" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (14 samples, 0.18%)</title><rect x="723.6" y="627.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="726.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 0.10%)</title><rect x="723.6" y="611.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="726.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.equals (7 samples, 0.09%)</title><rect x="723.8" y="595.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="726.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.coder (7 samples, 0.09%)</title><rect x="723.8" y="579.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="726.8" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (6 samples, 0.08%)</title><rect x="724.9" y="611.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="727.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (6 samples, 0.08%)</title><rect x="724.9" y="595.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="727.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="725.5" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="728.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (11 samples, 0.14%)</title><rect x="725.8" y="643.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="728.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (9 samples, 0.12%)</title><rect x="725.8" y="627.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.06%)</title><rect x="726.4" y="611.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.03%)</title><rect x="727.2" y="627.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (70 samples, 0.91%)</title><rect x="727.5" y="675.0" width="10.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="730.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (27 samples, 0.35%)</title><rect x="730.8" y="659.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.8" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (16 samples, 0.21%)</title><rect x="732.5" y="643.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="735.5" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (16 samples, 0.21%)</title><rect x="732.5" y="627.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (13 samples, 0.17%)</title><rect x="733.0" y="611.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="736.0" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.26%)</title><rect x="735.0" y="659.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="738.0" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.26%)</title><rect x="735.0" y="643.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (37 samples, 0.48%)</title><rect x="738.2" y="675.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="741.2" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (25 samples, 0.32%)</title><rect x="738.6" y="659.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.6" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (25 samples, 0.32%)</title><rect x="738.6" y="643.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="741.6" y="654.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="742.0" y="627.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="745.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.03%)</title><rect x="742.0" y="611.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (9 samples, 0.12%)</title><rect x="742.5" y="659.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="745.5" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (6 samples, 0.08%)</title><rect x="743.8" y="675.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="746.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (26 samples, 0.34%)</title><rect x="744.8" y="675.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.length (7 samples, 0.09%)</title><rect x="744.9" y="659.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (13 samples, 0.17%)</title><rect x="746.0" y="659.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="746.0" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="749.0" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (11 samples, 0.14%)</title><rect x="746.3" y="643.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="749.3" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="747.2" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="750.2" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="747.2" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.2" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.03%)</title><rect x="747.2" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="750.2" y="606.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="747.5" y="627.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="750.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.06%)</title><rect x="748.0" y="659.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.0" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="748.1" y="643.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="751.1" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="748.4" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="751.4" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.27%)</title><rect x="749.1" y="675.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="752.1" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.25%)</title><rect x="749.4" y="659.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="752.4" y="670.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (2 samples, 0.03%)</title><rect x="752.0" y="643.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="755.0" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (269 samples, 3.49%)</title><rect x="752.3" y="691.0" width="41.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="755.3" y="702.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (269 samples, 3.49%)</title><rect x="752.3" y="675.0" width="41.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="755.3" y="686.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.03%)</title><rect x="752.7" y="659.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="755.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.35%)</title><rect x="753.0" y="659.0" width="4.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="756.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.35%)</title><rect x="753.0" y="643.0" width="4.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="756.0" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (22 samples, 0.29%)</title><rect x="753.0" y="627.0" width="3.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="756.0" y="638.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="753.3" y="611.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="756.3" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (18 samples, 0.23%)</title><rect x="753.6" y="611.0" width="2.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="756.6" y="622.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (7 samples, 0.09%)</title><rect x="754.4" y="595.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="757.4" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (5 samples, 0.06%)</title><rect x="755.6" y="595.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="758.6" y="606.0"></text>
</g>
<g>
<title>__libc_recv (2 samples, 0.03%)</title><rect x="756.4" y="627.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="759.4" y="638.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.04%)</title><rect x="756.7" y="627.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="759.7" y="638.0"></text>
</g>
<g>
<title>__libc_recv (233 samples, 3.02%)</title><rect x="757.2" y="659.0" width="35.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="760.2" y="670.0">__l..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="765.4" y="643.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="768.4" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (177 samples, 2.30%)</title><rect x="765.7" y="643.0" width="27.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="768.7" y="654.0">e..</text>
</g>
<g>
<title>do_syscall_64 (177 samples, 2.30%)</title><rect x="765.7" y="627.0" width="27.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="768.7" y="638.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (153 samples, 1.99%)</title><rect x="769.4" y="611.0" width="23.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="772.4" y="622.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (148 samples, 1.92%)</title><rect x="770.2" y="595.0" width="22.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="773.2" y="606.0">_..</text>
</g>
<g>
<title>import_single_range (4 samples, 0.05%)</title><rect x="770.6" y="579.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="773.6" y="590.0"></text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.03%)</title><rect x="770.9" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="773.9" y="574.0"></text>
</g>
<g>
<title>inet_recvmsg (91 samples, 1.18%)</title><rect x="771.3" y="579.0" width="13.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="774.3" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (91 samples, 1.18%)</title><rect x="771.3" y="563.0" width="13.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="774.3" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.13%)</title><rect x="773.1" y="547.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="776.1" y="558.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.08%)</title><rect x="773.1" y="531.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="776.1" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (6 samples, 0.08%)</title><rect x="773.1" y="515.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="776.1" y="526.0"></text>
</g>
<g>
<title>sock_rfree (6 samples, 0.08%)</title><rect x="773.1" y="499.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="776.1" y="510.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.05%)</title><rect x="774.0" y="531.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="777.0" y="542.0"></text>
</g>
<g>
<title>lock_sock_nested (10 samples, 0.13%)</title><rect x="774.8" y="547.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="777.8" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (10 samples, 0.13%)</title><rect x="774.8" y="531.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="777.8" y="542.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="776.3" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="779.3" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="776.3" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="779.3" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (36 samples, 0.47%)</title><rect x="776.6" y="547.0" width="5.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="779.6" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (36 samples, 0.47%)</title><rect x="776.6" y="531.0" width="5.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="779.6" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (13 samples, 0.17%)</title><rect x="777.4" y="515.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="780.4" y="526.0"></text>
</g>
<g>
<title>copyout (11 samples, 0.14%)</title><rect x="777.7" y="499.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="780.7" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (9 samples, 0.12%)</title><rect x="778.0" y="483.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="781.0" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (18 samples, 0.23%)</title><rect x="779.4" y="515.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="782.4" y="526.0"></text>
</g>
<g>
<title>__check_object_size (15 samples, 0.19%)</title><rect x="779.8" y="499.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="782.8" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (9 samples, 0.12%)</title><rect x="780.3" y="483.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="783.3" y="494.0"></text>
</g>
<g>
<title>check_stack_object (3 samples, 0.04%)</title><rect x="781.7" y="483.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="784.7" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.05%)</title><rect x="782.1" y="547.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="785.1" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (16 samples, 0.21%)</title><rect x="782.7" y="547.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="785.7" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (10 samples, 0.13%)</title><rect x="783.7" y="531.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="786.7" y="542.0"></text>
</g>
<g>
<title>ktime_get (9 samples, 0.12%)</title><rect x="783.8" y="515.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="786.8" y="526.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.08%)</title><rect x="784.3" y="499.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="787.3" y="510.0"></text>
</g>
<g>
<title>sock_recvmsg (33 samples, 0.43%)</title><rect x="785.2" y="579.0" width="5.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="788.2" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (32 samples, 0.42%)</title><rect x="785.3" y="563.0" width="4.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="788.3" y="574.0"></text>
</g>
<g>
<title>sock_has_perm (30 samples, 0.39%)</title><rect x="785.6" y="547.0" width="4.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="788.6" y="558.0"></text>
</g>
<g>
<title>avc_has_perm (21 samples, 0.27%)</title><rect x="787.0" y="531.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="790.0" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (17 samples, 0.22%)</title><rect x="790.2" y="579.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="793.2" y="590.0"></text>
</g>
<g>
<title>__fget_light (17 samples, 0.22%)</title><rect x="790.2" y="563.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="793.2" y="574.0"></text>
</g>
<g>
<title>__fget (15 samples, 0.19%)</title><rect x="790.5" y="547.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="793.5" y="558.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.05%)</title><rect x="792.8" y="659.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="795.8" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (8 samples, 0.10%)</title><rect x="793.5" y="707.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="796.5" y="718.0"></text>
</g>
<g>
<title>gettimeofday (7 samples, 0.09%)</title><rect x="793.6" y="691.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="796.6" y="702.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.08%)</title><rect x="793.8" y="675.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="796.8" y="686.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=26111] (1,955 samples, 25.37%)</title><rect x="794.7" y="755.0" width="299.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="797.7" y="766.0">[NIO Selector #3 tid=26111]</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.04%)</title><rect x="795.1" y="739.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="798.1" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.04%)</title><rect x="795.1" y="723.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="798.1" y="734.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.04%)</title><rect x="795.1" y="707.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="798.1" y="718.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="795.1" y="691.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="798.1" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.05%)</title><rect x="795.7" y="739.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="798.7" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,943 samples, 25.21%)</title><rect x="796.5" y="739.0" width="297.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="799.5" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.06%)</title><rect x="796.5" y="723.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="799.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.06%)</title><rect x="796.5" y="707.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="799.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (247 samples, 3.20%)</title><rect x="797.4" y="723.0" width="37.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="800.4" y="734.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (245 samples, 3.18%)</title><rect x="797.7" y="707.0" width="37.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="800.7" y="718.0">one..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (231 samples, 3.00%)</title><rect x="798.2" y="691.0" width="35.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="801.2" y="702.0">.an..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (87 samples, 1.13%)</title><rect x="820.2" y="675.0" width="13.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="823.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (87 samples, 1.13%)</title><rect x="820.2" y="659.0" width="13.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="823.2" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (75 samples, 0.97%)</title><rect x="822.1" y="643.0" width="11.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="825.1" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (74 samples, 0.96%)</title><rect x="822.2" y="627.0" width="11.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="825.2" y="638.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.10%)</title><rect x="822.7" y="611.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="825.7" y="622.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.08%)</title><rect x="823.0" y="595.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="826.0" y="606.0"></text>
</g>
<g>
<title>ep_poll (59 samples, 0.77%)</title><rect x="823.9" y="611.0" width="9.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="826.9" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (43 samples, 0.56%)</title><rect x="825.9" y="595.0" width="6.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="828.9" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (17 samples, 0.22%)</title><rect x="828.5" y="579.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="831.5" y="590.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (17 samples, 0.22%)</title><rect x="828.5" y="563.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="831.5" y="574.0"></text>
</g>
<g>
<title>sock_poll (15 samples, 0.19%)</title><rect x="828.8" y="547.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="831.8" y="558.0"></text>
</g>
<g>
<title>tcp_poll (9 samples, 0.12%)</title><rect x="829.7" y="531.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="832.7" y="542.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.04%)</title><rect x="831.1" y="579.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="834.1" y="590.0"></text>
</g>
<g>
<title>mutex_unlock (6 samples, 0.08%)</title><rect x="831.6" y="579.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="834.6" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.04%)</title><rect x="832.5" y="595.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="835.5" y="606.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.04%)</title><rect x="832.5" y="579.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="835.5" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.04%)</title><rect x="832.5" y="563.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="835.5" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.04%)</title><rect x="832.5" y="547.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="835.5" y="558.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.05%)</title><rect x="833.0" y="611.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="836.0" y="622.0"></text>
</g>
<g>
<title>__GI___clock_gettime (3 samples, 0.04%)</title><rect x="833.7" y="691.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="836.7" y="702.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.05%)</title><rect x="834.2" y="691.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="837.2" y="702.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="834.8" y="691.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="837.8" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,690 samples, 21.93%)</title><rect x="835.2" y="723.0" width="258.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="838.2" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,685 samples, 21.86%)</title><rect x="836.0" y="707.0" width="258.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="839.0" y="718.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,491 samples, 19.35%)</title><rect x="836.2" y="691.0" width="228.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="839.2" y="702.0">one/nio/http/HttpSession.proce..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,375 samples, 17.84%)</title><rect x="838.5" y="675.0" width="210.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="841.5" y="686.0">one/nio/http/HttpSession.han..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,375 samples, 17.84%)</title><rect x="838.5" y="659.0" width="210.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="841.5" y="670.0">one/nio/http/HttpServer.hand..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1,356 samples, 17.59%)</title><rect x="838.6" y="643.0" width="207.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="841.6" y="654.0">RequestHandler0_entity.hand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,175 samples, 15.25%)</title><rect x="838.9" y="627.0" width="179.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="841.9" y="638.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,159 samples, 15.04%)</title><rect x="840.8" y="611.0" width="177.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.8" y="622.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (31 samples, 0.40%)</title><rect x="840.8" y="595.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="843.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (23 samples, 0.30%)</title><rect x="842.0" y="579.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="845.0" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.09%)</title><rect x="842.3" y="563.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="845.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="843.1" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="846.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.03%)</title><rect x="843.1" y="531.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.1" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (14 samples, 0.18%)</title><rect x="843.4" y="563.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="846.4" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (14 samples, 0.18%)</title><rect x="843.4" y="547.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="846.4" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,128 samples, 14.64%)</title><rect x="845.5" y="595.0" width="172.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.5" y="606.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>one/nio/net/Session.write (1,123 samples, 14.57%)</title><rect x="846.3" y="579.0" width="171.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="849.3" y="590.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="846.3" y="563.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="849.3" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="846.3" y="547.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="849.3" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,114 samples, 14.45%)</title><rect x="846.9" y="563.0" width="170.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="849.9" y="574.0">one/nio/net/Session$Ar..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,112 samples, 14.43%)</title><rect x="847.2" y="547.0" width="170.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="850.2" y="558.0">one/nio/net/NativeSock..</text>
</g>
<g>
<title>.annobin_send.c (1,087 samples, 14.10%)</title><rect x="847.8" y="531.0" width="166.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="850.8" y="542.0">.annobin_send.c</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.04%)</title><rect x="854.7" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="857.7" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,039 samples, 13.48%)</title><rect x="855.2" y="515.0" width="159.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="858.2" y="526.0">entry_SYSCALL_64_aft..</text>
</g>
<g>
<title>do_syscall_64 (1,039 samples, 13.48%)</title><rect x="855.2" y="499.0" width="159.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="858.2" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (1,024 samples, 13.29%)</title><rect x="857.5" y="483.0" width="156.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="860.5" y="494.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,023 samples, 13.27%)</title><rect x="857.6" y="467.0" width="156.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="860.6" y="478.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="857.9" y="451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="860.9" y="462.0"></text>
</g>
<g>
<title>sock_sendmsg (1,018 samples, 13.21%)</title><rect x="858.2" y="451.0" width="155.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="861.2" y="462.0">sock_sendmsg</text>
</g>
<g>
<title>security_socket_sendmsg (10 samples, 0.13%)</title><rect x="858.2" y="435.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="861.2" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (8 samples, 0.10%)</title><rect x="858.5" y="419.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="861.5" y="430.0"></text>
</g>
<g>
<title>avc_has_perm (4 samples, 0.05%)</title><rect x="859.1" y="403.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="862.1" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,008 samples, 13.08%)</title><rect x="859.7" y="435.0" width="154.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="862.7" y="446.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="859.9" y="419.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="862.9" y="430.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.05%)</title><rect x="860.2" y="419.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="863.2" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="860.2" y="403.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="863.2" y="414.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="860.5" y="403.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="863.5" y="414.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,001 samples, 12.99%)</title><rect x="860.8" y="419.0" width="153.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="863.8" y="430.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (8 samples, 0.10%)</title><rect x="861.1" y="403.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="864.1" y="414.0"></text>
</g>
<g>
<title>__check_heap_object (5 samples, 0.06%)</title><rect x="861.1" y="387.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="864.1" y="398.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="861.9" y="387.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="864.9" y="398.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (925 samples, 12.00%)</title><rect x="862.3" y="403.0" width="141.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="865.3" y="414.0">__tcp_push_pending..</text>
</g>
<g>
<title>tcp_write_xmit (923 samples, 11.98%)</title><rect x="862.7" y="387.0" width="141.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="865.7" y="398.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (896 samples, 11.63%)</title><rect x="863.7" y="371.0" width="137.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="866.7" y="382.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (858 samples, 11.13%)</title><rect x="866.3" y="355.0" width="131.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="869.3" y="366.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (9 samples, 0.12%)</title><rect x="866.6" y="339.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="869.6" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (8 samples, 0.10%)</title><rect x="866.8" y="323.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="869.8" y="334.0"></text>
</g>
<g>
<title>ip_local_out (156 samples, 2.02%)</title><rect x="868.0" y="339.0" width="23.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="871.0" y="350.0">i..</text>
</g>
<g>
<title>__ip_local_out (155 samples, 2.01%)</title><rect x="868.2" y="323.0" width="23.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="871.2" y="334.0">_..</text>
</g>
<g>
<title>ip_send_check (3 samples, 0.04%)</title><rect x="868.2" y="307.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="871.2" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (152 samples, 1.97%)</title><rect x="868.6" y="307.0" width="23.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="871.6" y="318.0">n..</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (43 samples, 0.56%)</title><rect x="868.8" y="291.0" width="6.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="871.8" y="302.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.03%)</title><rect x="875.4" y="291.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="878.4" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (20 samples, 0.26%)</title><rect x="875.7" y="291.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="878.7" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (16 samples, 0.21%)</title><rect x="876.3" y="275.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="879.3" y="286.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (4 samples, 0.05%)</title><rect x="878.7" y="291.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="881.7" y="302.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (5 samples, 0.06%)</title><rect x="879.3" y="291.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="882.3" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (6 samples, 0.08%)</title><rect x="880.1" y="291.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="883.1" y="302.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (3 samples, 0.04%)</title><rect x="881.0" y="291.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="884.0" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (51 samples, 0.66%)</title><rect x="881.5" y="291.0" width="7.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="884.5" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (18 samples, 0.23%)</title><rect x="882.6" y="275.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="885.6" y="286.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (4 samples, 0.05%)</title><rect x="885.3" y="275.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="888.3" y="286.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (4 samples, 0.05%)</title><rect x="885.9" y="275.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="888.9" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (14 samples, 0.18%)</title><rect x="886.5" y="275.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="889.5" y="286.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (2 samples, 0.03%)</title><rect x="887.9" y="259.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="890.9" y="270.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (2 samples, 0.03%)</title><rect x="888.4" y="259.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="891.4" y="270.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (4 samples, 0.05%)</title><rect x="888.7" y="275.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="891.7" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (15 samples, 0.19%)</title><rect x="889.3" y="291.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="892.3" y="302.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (5 samples, 0.06%)</title><rect x="890.5" y="275.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="893.5" y="286.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (2 samples, 0.03%)</title><rect x="891.3" y="275.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="894.3" y="286.0"></text>
</g>
<g>
<title>selinux_ipv4_output (2 samples, 0.03%)</title><rect x="891.6" y="291.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="894.6" y="302.0"></text>
</g>
<g>
<title>ip_output (691 samples, 8.97%)</title><rect x="891.9" y="339.0" width="105.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="894.9" y="350.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (640 samples, 8.30%)</title><rect x="892.8" y="323.0" width="98.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="895.8" y="334.0">ip_finish_o..</text>
</g>
<g>
<title>__dev_queue_xmit (47 samples, 0.61%)</title><rect x="895.0" y="307.0" width="7.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="898.0" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (32 samples, 0.42%)</title><rect x="896.8" y="291.0" width="4.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="899.8" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (29 samples, 0.38%)</title><rect x="897.3" y="275.0" width="4.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="900.3" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.05%)</title><rect x="897.7" y="259.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="900.7" y="270.0"></text>
</g>
<g>
<title>netif_rx (15 samples, 0.19%)</title><rect x="898.3" y="259.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="901.3" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (14 samples, 0.18%)</title><rect x="898.5" y="243.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="901.5" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (8 samples, 0.10%)</title><rect x="899.4" y="227.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="902.4" y="238.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (3 samples, 0.04%)</title><rect x="900.6" y="259.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="903.6" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (4 samples, 0.05%)</title><rect x="901.1" y="259.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="904.1" y="270.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.04%)</title><rect x="901.7" y="291.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="904.7" y="302.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.03%)</title><rect x="901.9" y="275.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="904.9" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (579 samples, 7.51%)</title><rect x="902.2" y="307.0" width="88.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="905.2" y="318.0">__local_bh..</text>
</g>
<g>
<title>do_softirq.part.0 (577 samples, 7.49%)</title><rect x="902.5" y="291.0" width="88.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="905.5" y="302.0">do_softirq..</text>
</g>
<g>
<title>do_softirq_own_stack (573 samples, 7.43%)</title><rect x="903.1" y="275.0" width="87.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="906.1" y="286.0">do_softirq..</text>
</g>
<g>
<title>__softirqentry_text_start (573 samples, 7.43%)</title><rect x="903.1" y="259.0" width="87.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="906.1" y="270.0">__softirqe..</text>
</g>
<g>
<title>net_rx_action (559 samples, 7.25%)</title><rect x="905.2" y="243.0" width="85.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="908.2" y="254.0">net_rx_act..</text>
</g>
<g>
<title>process_backlog (555 samples, 7.20%)</title><rect x="905.8" y="227.0" width="85.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="908.8" y="238.0">process_ba..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (547 samples, 7.10%)</title><rect x="907.1" y="211.0" width="83.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="910.1" y="222.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_core (8 samples, 0.10%)</title><rect x="907.2" y="195.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="910.2" y="206.0"></text>
</g>
<g>
<title>ip_rcv (538 samples, 6.98%)</title><rect x="908.4" y="195.0" width="82.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="911.4" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (410 samples, 5.32%)</title><rect x="909.5" y="179.0" width="62.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="912.5" y="190.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (335 samples, 4.35%)</title><rect x="909.8" y="163.0" width="51.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="912.8" y="174.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (332 samples, 4.31%)</title><rect x="910.3" y="147.0" width="50.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="913.3" y="158.0">ip_pr..</text>
</g>
<g>
<title>raw_local_deliver (4 samples, 0.05%)</title><rect x="911.0" y="131.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="914.0" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (323 samples, 4.19%)</title><rect x="911.7" y="131.0" width="49.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="914.7" y="142.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (23 samples, 0.30%)</title><rect x="913.9" y="115.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="916.9" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (4 samples, 0.05%)</title><rect x="916.9" y="99.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="919.9" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock (5 samples, 0.06%)</title><rect x="917.5" y="115.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="920.5" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.03%)</title><rect x="918.2" y="115.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="921.2" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.03%)</title><rect x="918.2" y="99.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="921.2" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (2 samples, 0.03%)</title><rect x="918.2" y="83.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="921.2" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (275 samples, 3.57%)</title><rect x="918.7" y="115.0" width="42.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="921.7" y="126.0">tcp_..</text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.04%)</title><rect x="918.7" y="99.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="921.7" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (272 samples, 3.53%)</title><rect x="919.2" y="99.0" width="41.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="922.2" y="110.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.03%)</title><rect x="919.6" y="83.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="922.6" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.06%)</title><rect x="919.9" y="83.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="922.9" y="94.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.06%)</title><rect x="919.9" y="67.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="922.9" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="920.2" y="51.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="923.2" y="62.0"></text>
</g>
<g>
<title>tcp_ack (69 samples, 0.90%)</title><rect x="920.7" y="83.0" width="10.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="923.7" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (25 samples, 0.32%)</title><rect x="923.6" y="67.0" width="3.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="926.6" y="78.0"></text>
</g>
<g>
<title>__slab_free (6 samples, 0.08%)</title><rect x="923.6" y="51.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="926.6" y="62.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="924.5" y="51.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="927.5" y="62.0"></text>
</g>
<g>
<title>skb_release_data (17 samples, 0.22%)</title><rect x="924.8" y="51.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="927.8" y="62.0"></text>
</g>
<g>
<title>__list_del_entry_valid (2 samples, 0.03%)</title><rect x="927.4" y="67.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="930.4" y="78.0"></text>
</g>
<g>
<title>bictcp_acked (6 samples, 0.08%)</title><rect x="927.7" y="67.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="930.7" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="928.6" y="67.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="931.6" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.05%)</title><rect x="929.0" y="67.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="932.0" y="78.0"></text>
</g>
<g>
<title>tcp_newly_delivered (2 samples, 0.03%)</title><rect x="930.0" y="67.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="933.0" y="78.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.03%)</title><rect x="930.5" y="67.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="933.5" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="930.9" y="67.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="933.9" y="78.0"></text>
</g>
<g>
<title>tcp_data_queue (189 samples, 2.45%)</title><rect x="931.4" y="83.0" width="28.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="934.4" y="94.0">tc..</text>
</g>
<g>
<title>dst_release (3 samples, 0.04%)</title><rect x="931.9" y="67.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="934.9" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (179 samples, 2.32%)</title><rect x="932.3" y="67.0" width="27.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="935.3" y="78.0">s..</text>
</g>
<g>
<title>__wake_up_common_lock (173 samples, 2.24%)</title><rect x="933.2" y="51.0" width="26.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="936.2" y="62.0">_..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="933.5" y="35.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="936.5" y="46.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (169 samples, 2.19%)</title><rect x="933.9" y="35.0" width="25.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="936.9" y="46.0">_..</text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.04%)</title><rect x="959.9" y="67.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="962.9" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.04%)</title><rect x="960.3" y="83.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="963.3" y="94.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.03%)</title><rect x="960.5" y="67.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="963.5" y="78.0"></text>
</g>
<g>
<title>nf_hook_slow (73 samples, 0.95%)</title><rect x="961.1" y="163.0" width="11.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="964.1" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (51 samples, 0.66%)</title><rect x="962.3" y="147.0" width="7.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="965.3" y="158.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (6 samples, 0.08%)</title><rect x="968.8" y="131.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="971.8" y="142.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (3 samples, 0.04%)</title><rect x="969.7" y="131.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="972.7" y="142.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.03%)</title><rect x="970.1" y="147.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="973.1" y="158.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (5 samples, 0.06%)</title><rect x="970.4" y="147.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="973.4" y="158.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (5 samples, 0.06%)</title><rect x="971.2" y="147.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="974.2" y="158.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (8 samples, 0.10%)</title><rect x="972.3" y="179.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="975.3" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (112 samples, 1.45%)</title><rect x="973.7" y="179.0" width="17.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="976.7" y="190.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (6 samples, 0.08%)</title><rect x="974.1" y="163.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="977.1" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (72 samples, 0.93%)</title><rect x="975.0" y="163.0" width="11.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="978.0" y="174.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.03%)</title><rect x="986.1" y="163.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="989.1" y="174.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (3 samples, 0.04%)</title><rect x="986.4" y="163.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="989.4" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (7 samples, 0.09%)</title><rect x="986.8" y="163.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="989.8" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (4 samples, 0.05%)</title><rect x="987.9" y="163.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="990.9" y="174.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (4 samples, 0.05%)</title><rect x="988.5" y="163.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="991.5" y="174.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (11 samples, 0.14%)</title><rect x="989.1" y="163.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="992.1" y="174.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (5 samples, 0.06%)</title><rect x="989.7" y="147.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="992.7" y="158.0"></text>
</g>
<g>
<title>ip_finish_output (4 samples, 0.05%)</title><rect x="990.8" y="323.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="993.8" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (41 samples, 0.53%)</title><rect x="991.4" y="323.0" width="6.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="994.4" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (13 samples, 0.17%)</title><rect x="991.6" y="307.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="994.6" y="318.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (5 samples, 0.06%)</title><rect x="993.6" y="307.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="996.6" y="318.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (6 samples, 0.08%)</title><rect x="994.3" y="307.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="997.3" y="318.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (5 samples, 0.06%)</title><rect x="994.5" y="291.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="997.5" y="302.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (7 samples, 0.09%)</title><rect x="995.2" y="307.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="998.2" y="318.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (2 samples, 0.03%)</title><rect x="995.9" y="291.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="998.9" y="302.0"></text>
</g>
<g>
<title>selinux_ip_postroute (6 samples, 0.08%)</title><rect x="996.3" y="307.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="999.3" y="318.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (3 samples, 0.04%)</title><rect x="997.2" y="307.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1000.2" y="318.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.05%)</title><rect x="997.7" y="355.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1000.7" y="366.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.03%)</title><rect x="998.3" y="355.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1001.3" y="366.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.03%)</title><rect x="998.6" y="355.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1001.6" y="366.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (5 samples, 0.06%)</title><rect x="998.9" y="355.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1001.9" y="366.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.03%)</title><rect x="999.8" y="355.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1002.8" y="366.0"></text>
</g>
<g>
<title>tcp_v4_send_check (5 samples, 0.06%)</title><rect x="1000.1" y="355.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1003.1" y="366.0"></text>
</g>
<g>
<title>ktime_get (7 samples, 0.09%)</title><rect x="1000.9" y="371.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1003.9" y="382.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.05%)</title><rect x="1001.4" y="355.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1004.4" y="366.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (7 samples, 0.09%)</title><rect x="1002.0" y="371.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1005.0" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.06%)</title><rect x="1002.1" y="355.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1005.1" y="366.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.06%)</title><rect x="1002.1" y="339.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1005.1" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="1002.4" y="323.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1005.4" y="334.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (6 samples, 0.08%)</title><rect x="1003.1" y="371.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1006.1" y="382.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="1003.7" y="355.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1006.7" y="366.0"></text>
</g>
<g>
<title>_copy_from_iter_full (5 samples, 0.06%)</title><rect x="1004.0" y="403.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1007.0" y="414.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.03%)</title><rect x="1004.1" y="387.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1007.1" y="398.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.03%)</title><rect x="1004.4" y="387.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1007.4" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (40 samples, 0.52%)</title><rect x="1004.7" y="403.0" width="6.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1007.7" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (39 samples, 0.51%)</title><rect x="1004.9" y="387.0" width="6.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1007.9" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (13 samples, 0.17%)</title><rect x="1005.7" y="371.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1008.7" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (13 samples, 0.17%)</title><rect x="1005.7" y="355.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1008.7" y="366.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.04%)</title><rect x="1006.7" y="339.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1009.7" y="350.0"></text>
</g>
<g>
<title>kmalloc_slab (3 samples, 0.04%)</title><rect x="1007.2" y="339.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1010.2" y="350.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (16 samples, 0.21%)</title><rect x="1007.6" y="371.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1010.6" y="382.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.03%)</title><rect x="1009.6" y="355.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1012.6" y="366.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.06%)</title><rect x="1010.1" y="371.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1013.1" y="382.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.04%)</title><rect x="1010.9" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1013.9" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (15 samples, 0.19%)</title><rect x="1011.6" y="403.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1014.6" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (13 samples, 0.17%)</title><rect x="1011.9" y="387.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1014.9" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (7 samples, 0.09%)</title><rect x="1012.2" y="371.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1015.2" y="382.0"></text>
</g>
<g>
<title>tcp_established_options (4 samples, 0.05%)</title><rect x="1013.3" y="371.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1016.3" y="382.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.22%)</title><rect x="1014.2" y="531.0" width="2.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1017.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.22%)</title><rect x="1014.2" y="515.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1017.2" y="526.0"></text>
</g>
<g>
<title>.annobin_send.c (2 samples, 0.03%)</title><rect x="1014.2" y="499.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1017.2" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (13 samples, 0.17%)</title><rect x="1014.5" y="499.0" width="2.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1017.5" y="510.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (9 samples, 0.12%)</title><rect x="1015.2" y="483.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1018.2" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.04%)</title><rect x="1015.3" y="467.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1018.3" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (5 samples, 0.06%)</title><rect x="1015.8" y="467.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1018.8" y="478.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.05%)</title><rect x="1016.8" y="531.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1019.8" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.06%)</title><rect x="1017.4" y="563.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1020.4" y="574.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.06%)</title><rect x="1017.4" y="547.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1020.4" y="558.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="1017.8" y="531.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1020.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="1018.2" y="611.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1021.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="1018.2" y="595.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1021.2" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="1018.4" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1021.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (14 samples, 0.18%)</title><rect x="1018.8" y="627.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1021.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="1019.0" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1022.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (4 samples, 0.05%)</title><rect x="1019.3" y="611.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1022.3" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.04%)</title><rect x="1019.4" y="595.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1022.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="1019.9" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1022.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="1019.9" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1022.9" y="606.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.06%)</title><rect x="1020.2" y="611.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1023.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.06%)</title><rect x="1020.2" y="595.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1023.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.06%)</title><rect x="1020.2" y="579.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1023.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.06%)</title><rect x="1020.2" y="563.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1023.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (165 samples, 2.14%)</title><rect x="1021.0" y="627.0" width="25.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1024.0" y="638.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.05%)</title><rect x="1021.0" y="611.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1024.0" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.05%)</title><rect x="1021.0" y="595.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1024.0" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1021.0" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1024.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1021.0" y="563.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1024.0" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1021.1" y="547.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1024.1" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="1021.3" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1024.3" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="1021.3" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1024.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (160 samples, 2.08%)</title><rect x="1021.7" y="611.0" width="24.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1024.7" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (160 samples, 2.08%)</title><rect x="1021.7" y="595.0" width="24.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1024.7" y="606.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (149 samples, 1.93%)</title><rect x="1021.9" y="579.0" width="22.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1024.9" y="590.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (147 samples, 1.91%)</title><rect x="1022.0" y="563.0" width="22.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1025.0" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (147 samples, 1.91%)</title><rect x="1022.0" y="547.0" width="22.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1025.0" y="558.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (9 samples, 0.12%)</title><rect x="1025.4" y="531.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1028.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (9 samples, 0.12%)</title><rect x="1025.4" y="515.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1028.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (25 samples, 0.32%)</title><rect x="1026.8" y="531.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1029.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1030.6" y="531.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1033.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (22 samples, 0.29%)</title><rect x="1031.2" y="531.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1034.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (16 samples, 0.21%)</title><rect x="1032.1" y="515.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1035.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.18%)</title><rect x="1032.5" y="499.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1035.5" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.18%)</title><rect x="1032.5" y="483.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1035.5" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.13%)</title><rect x="1032.8" y="467.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1035.8" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.04%)</title><rect x="1033.5" y="451.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1036.5" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="1033.5" y="435.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1036.5" y="446.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.03%)</title><rect x="1034.0" y="451.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1037.0" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="1034.3" y="467.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1037.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (61 samples, 0.79%)</title><rect x="1034.6" y="531.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1037.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (50 samples, 0.65%)</title><rect x="1036.3" y="515.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1039.3" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (34 samples, 0.44%)</title><rect x="1038.7" y="499.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1041.7" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.05%)</title><rect x="1038.9" y="483.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1041.9" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (9 samples, 0.12%)</title><rect x="1039.5" y="483.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1042.5" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.13%)</title><rect x="1040.9" y="483.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1043.9" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.08%)</title><rect x="1041.5" y="467.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1044.5" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (10 samples, 0.13%)</title><rect x="1042.4" y="483.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1045.4" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (9 samples, 0.12%)</title><rect x="1042.4" y="467.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1045.4" y="478.0"></text>
</g>
<g>
<title>vectorizedMismatch (8 samples, 0.10%)</title><rect x="1042.6" y="451.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1045.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (4 samples, 0.05%)</title><rect x="1043.9" y="531.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1046.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (10 samples, 0.13%)</title><rect x="1044.7" y="579.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1047.7" y="590.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="1045.0" y="563.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1048.0" y="574.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="1045.2" y="547.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1048.2" y="558.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="1045.2" y="531.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1048.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1045.5" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1048.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (10 samples, 0.13%)</title><rect x="1046.4" y="643.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1049.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (10 samples, 0.13%)</title><rect x="1046.4" y="627.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1049.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.08%)</title><rect x="1046.5" y="611.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1049.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.05%)</title><rect x="1046.8" y="595.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1049.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.coder (4 samples, 0.05%)</title><rect x="1046.8" y="579.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1049.8" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.04%)</title><rect x="1047.5" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1050.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.04%)</title><rect x="1047.5" y="595.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1050.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="1047.6" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1050.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (7 samples, 0.09%)</title><rect x="1047.9" y="643.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1050.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.06%)</title><rect x="1048.1" y="627.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1051.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="1048.4" y="611.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1051.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (37 samples, 0.48%)</title><rect x="1049.0" y="675.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1052.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (16 samples, 0.21%)</title><rect x="1050.5" y="659.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1053.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.09%)</title><rect x="1051.9" y="643.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1054.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.09%)</title><rect x="1051.9" y="627.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1054.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.06%)</title><rect x="1052.2" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1055.2" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.14%)</title><rect x="1053.0" y="659.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1056.0" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.14%)</title><rect x="1053.0" y="643.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1056.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (24 samples, 0.31%)</title><rect x="1054.7" y="675.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1057.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (15 samples, 0.19%)</title><rect x="1055.0" y="659.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1058.0" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (15 samples, 0.19%)</title><rect x="1055.0" y="643.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1058.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="1056.9" y="627.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1059.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (7 samples, 0.09%)</title><rect x="1057.3" y="659.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1060.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (5 samples, 0.06%)</title><rect x="1058.3" y="675.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1061.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (22 samples, 0.29%)</title><rect x="1059.1" y="675.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1062.1" y="686.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="1059.7" y="659.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1062.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (13 samples, 0.17%)</title><rect x="1060.0" y="659.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1063.0" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.17%)</title><rect x="1060.0" y="643.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1063.0" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (5 samples, 0.06%)</title><rect x="1060.8" y="627.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1063.8" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (5 samples, 0.06%)</title><rect x="1060.8" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1063.8" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (5 samples, 0.06%)</title><rect x="1060.8" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1063.8" y="606.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.04%)</title><rect x="1061.5" y="627.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1064.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.04%)</title><rect x="1062.0" y="659.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1065.0" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="1062.2" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1065.2" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="1062.2" y="627.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1065.2" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.16%)</title><rect x="1062.6" y="675.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1065.6" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.16%)</title><rect x="1062.6" y="659.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1065.6" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (193 samples, 2.50%)</title><rect x="1064.5" y="691.0" width="29.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1067.5" y="702.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (192 samples, 2.49%)</title><rect x="1064.6" y="675.0" width="29.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1067.6" y="686.0">on..</text>
</g>
<g>
<title>[unknown] (34 samples, 0.44%)</title><rect x="1065.1" y="659.0" width="5.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1068.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.44%)</title><rect x="1065.1" y="643.0" width="5.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1068.1" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (25 samples, 0.32%)</title><rect x="1065.1" y="627.0" width="3.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1068.1" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.04%)</title><rect x="1065.2" y="611.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1068.2" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="1065.8" y="611.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1068.8" y="622.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (5 samples, 0.06%)</title><rect x="1066.3" y="611.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1069.3" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (12 samples, 0.16%)</title><rect x="1067.1" y="611.0" width="1.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1070.1" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (7 samples, 0.09%)</title><rect x="1067.2" y="595.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1070.2" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (4 samples, 0.05%)</title><rect x="1068.3" y="595.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1071.3" y="606.0"></text>
</g>
<g>
<title>__libc_recv (2 samples, 0.03%)</title><rect x="1068.9" y="627.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1071.9" y="638.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (7 samples, 0.09%)</title><rect x="1069.2" y="627.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1072.2" y="638.0"></text>
</g>
<g>
<title>__libc_recv (153 samples, 1.99%)</title><rect x="1070.3" y="659.0" width="23.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1073.3" y="670.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (108 samples, 1.40%)</title><rect x="1077.2" y="643.0" width="16.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1080.2" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (108 samples, 1.40%)</title><rect x="1077.2" y="627.0" width="16.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1080.2" y="638.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (88 samples, 1.14%)</title><rect x="1080.1" y="611.0" width="13.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1083.1" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (85 samples, 1.10%)</title><rect x="1080.5" y="595.0" width="13.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1083.5" y="606.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="1080.8" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1083.8" y="590.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="1081.1" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1084.1" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (51 samples, 0.66%)</title><rect x="1081.4" y="579.0" width="7.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1084.4" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (51 samples, 0.66%)</title><rect x="1081.4" y="563.0" width="7.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1084.4" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.06%)</title><rect x="1082.5" y="547.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1085.5" y="558.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.06%)</title><rect x="1082.5" y="531.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1085.5" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.06%)</title><rect x="1082.5" y="515.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1085.5" y="526.0"></text>
</g>
<g>
<title>sock_rfree (5 samples, 0.06%)</title><rect x="1082.5" y="499.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1085.5" y="510.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="1083.6" y="547.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1086.6" y="558.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="1083.9" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1086.9" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (24 samples, 0.31%)</title><rect x="1084.2" y="547.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1087.2" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (24 samples, 0.31%)</title><rect x="1084.2" y="531.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1087.2" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (6 samples, 0.08%)</title><rect x="1084.5" y="515.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1087.5" y="526.0"></text>
</g>
<g>
<title>copyout (6 samples, 0.08%)</title><rect x="1084.5" y="499.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1087.5" y="510.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.08%)</title><rect x="1084.5" y="483.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1087.5" y="494.0"></text>
</g>
<g>
<title>simple_copy_to_iter (16 samples, 0.21%)</title><rect x="1085.4" y="515.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1088.4" y="526.0"></text>
</g>
<g>
<title>__check_object_size (14 samples, 0.18%)</title><rect x="1085.7" y="499.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1088.7" y="510.0"></text>
</g>
<g>
<title>__check_heap_object (3 samples, 0.04%)</title><rect x="1085.9" y="483.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1088.9" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (10 samples, 0.13%)</title><rect x="1086.3" y="483.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1089.3" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.04%)</title><rect x="1087.9" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1090.9" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (6 samples, 0.08%)</title><rect x="1088.3" y="547.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1091.3" y="558.0"></text>
</g>
<g>
<title>sock_recvmsg (14 samples, 0.18%)</title><rect x="1089.3" y="579.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1092.3" y="590.0"></text>
</g>
<g>
<title>security_socket_recvmsg (14 samples, 0.18%)</title><rect x="1089.3" y="563.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1092.3" y="574.0"></text>
</g>
<g>
<title>sock_has_perm (12 samples, 0.16%)</title><rect x="1089.6" y="547.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1092.6" y="558.0"></text>
</g>
<g>
<title>avc_has_perm (9 samples, 0.12%)</title><rect x="1090.0" y="531.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1093.0" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (14 samples, 0.18%)</title><rect x="1091.4" y="579.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1094.4" y="590.0"></text>
</g>
<g>
<title>__fget_light (14 samples, 0.18%)</title><rect x="1091.4" y="563.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1094.4" y="574.0"></text>
</g>
<g>
<title>__fget (11 samples, 0.14%)</title><rect x="1091.9" y="547.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1094.9" y="558.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="1093.7" y="659.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1096.7" y="670.0"></text>
</g>
<g>
<title>[pool-1-thread-1 tid=26243] (289 samples, 3.75%)</title><rect x="1094.0" y="755.0" width="44.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1097.0" y="766.0">[poo..</text>
</g>
<g>
<title>[unknown_Java] (5 samples, 0.06%)</title><rect x="1094.2" y="739.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1097.2" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.run (282 samples, 3.66%)</title><rect x="1095.1" y="739.0" width="43.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1098.1" y="750.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (282 samples, 3.66%)</title><rect x="1095.1" y="723.0" width="43.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1098.1" y="734.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (282 samples, 3.66%)</title><rect x="1095.1" y="707.0" width="43.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1098.1" y="718.0">java..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (282 samples, 3.66%)</title><rect x="1095.1" y="691.0" width="43.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.1" y="702.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (282 samples, 3.66%)</title><rect x="1095.1" y="675.0" width="43.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.1" y="686.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (282 samples, 3.66%)</title><rect x="1095.1" y="659.0" width="43.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1098.1" y="670.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.09%)</title><rect x="1095.7" y="643.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1098.7" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="1095.7" y="627.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1098.7" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="1095.7" y="611.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1098.7" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.09%)</title><rect x="1095.7" y="595.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1098.7" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="1097.1" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1100.1" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="1097.1" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1100.1" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="1097.1" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1100.1" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="1097.1" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1100.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (12 samples, 0.16%)</title><rect x="1097.4" y="643.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1100.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (10 samples, 0.13%)</title><rect x="1097.5" y="627.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1100.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (6 samples, 0.08%)</title><rect x="1098.1" y="611.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1101.1" y="622.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.04%)</title><rect x="1098.3" y="595.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1101.3" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="1098.7" y="595.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1101.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (3 samples, 0.04%)</title><rect x="1099.4" y="643.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1102.4" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="1099.5" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1102.5" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1099.5" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1102.5" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1099.5" y="595.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1102.5" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1099.5" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1102.5" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1099.5" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1102.5" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="1099.5" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1102.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (251 samples, 3.26%)</title><rect x="1099.8" y="643.0" width="38.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1102.8" y="654.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (9 samples, 0.12%)</title><rect x="1100.0" y="627.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1103.0" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (9 samples, 0.12%)</title><rect x="1100.0" y="611.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1103.0" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.09%)</title><rect x="1100.3" y="595.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1103.3" y="606.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.05%)</title><rect x="1100.6" y="579.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1103.6" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.05%)</title><rect x="1100.6" y="563.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1103.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (236 samples, 3.06%)</title><rect x="1101.4" y="627.0" width="36.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1104.4" y="638.0">sun..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (6 samples, 0.08%)</title><rect x="1101.5" y="611.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1104.5" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (6 samples, 0.08%)</title><rect x="1101.5" y="595.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1104.5" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.03%)</title><rect x="1101.8" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1104.8" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="1101.8" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1104.8" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="1101.8" y="547.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1104.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.03%)</title><rect x="1102.1" y="579.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1105.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.03%)</title><rect x="1102.1" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1105.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.03%)</title><rect x="1102.1" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1105.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (212 samples, 2.75%)</title><rect x="1102.4" y="611.0" width="32.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1105.4" y="622.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (212 samples, 2.75%)</title><rect x="1102.4" y="595.0" width="32.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1105.4" y="606.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (212 samples, 2.75%)</title><rect x="1102.4" y="579.0" width="32.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1105.4" y="590.0">su..</text>
</g>
<g>
<title>__libc_write (202 samples, 2.62%)</title><rect x="1102.9" y="563.0" width="30.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1105.9" y="574.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (132 samples, 1.71%)</title><rect x="1113.6" y="547.0" width="20.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1116.6" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (132 samples, 1.71%)</title><rect x="1113.6" y="531.0" width="20.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1116.6" y="542.0"></text>
</g>
<g>
<title>ksys_write (107 samples, 1.39%)</title><rect x="1117.4" y="515.0" width="16.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1120.4" y="526.0"></text>
</g>
<g>
<title>__fdget_pos (17 samples, 0.22%)</title><rect x="1117.7" y="499.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1120.7" y="510.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.10%)</title><rect x="1118.2" y="483.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1121.2" y="494.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.06%)</title><rect x="1118.7" y="467.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1121.7" y="478.0"></text>
</g>
<g>
<title>mutex_lock (6 samples, 0.08%)</title><rect x="1119.4" y="483.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1122.4" y="494.0"></text>
</g>
<g>
<title>vfs_write (86 samples, 1.12%)</title><rect x="1120.6" y="499.0" width="13.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1123.6" y="510.0"></text>
</g>
<g>
<title>__sb_end_write (3 samples, 0.04%)</title><rect x="1120.8" y="483.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1123.8" y="494.0"></text>
</g>
<g>
<title>__sb_start_write (4 samples, 0.05%)</title><rect x="1121.3" y="483.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1124.3" y="494.0"></text>
</g>
<g>
<title>new_sync_write (73 samples, 0.95%)</title><rect x="1122.0" y="483.0" width="11.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1125.0" y="494.0"></text>
</g>
<g>
<title>generic_file_write_iter (72 samples, 0.93%)</title><rect x="1122.2" y="467.0" width="11.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1125.2" y="478.0"></text>
</g>
<g>
<title>__generic_file_write_iter (61 samples, 0.79%)</title><rect x="1122.6" y="451.0" width="9.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1125.6" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (56 samples, 0.73%)</title><rect x="1123.4" y="435.0" width="8.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1126.4" y="446.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (6 samples, 0.08%)</title><rect x="1124.3" y="419.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1127.3" y="430.0"></text>
</g>
<g>
<title>copyin (4 samples, 0.05%)</title><rect x="1124.6" y="403.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1127.6" y="414.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.05%)</title><rect x="1124.6" y="387.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1127.6" y="398.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (12 samples, 0.16%)</title><rect x="1125.2" y="419.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1128.2" y="430.0"></text>
</g>
<g>
<title>shmem_write_begin (20 samples, 0.26%)</title><rect x="1127.1" y="419.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1130.1" y="430.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (18 samples, 0.23%)</title><rect x="1127.4" y="403.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1130.4" y="414.0"></text>
</g>
<g>
<title>find_lock_entry (15 samples, 0.19%)</title><rect x="1127.5" y="387.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1130.5" y="398.0"></text>
</g>
<g>
<title>find_get_entry (10 samples, 0.13%)</title><rect x="1128.1" y="371.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1131.1" y="382.0"></text>
</g>
<g>
<title>xas_load (5 samples, 0.06%)</title><rect x="1128.9" y="355.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1131.9" y="366.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.03%)</title><rect x="1129.4" y="339.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1132.4" y="350.0"></text>
</g>
<g>
<title>shmem_alloc_and_acct_page (2 samples, 0.03%)</title><rect x="1129.8" y="387.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1132.8" y="398.0"></text>
</g>
<g>
<title>shmem_write_end (12 samples, 0.16%)</title><rect x="1130.1" y="419.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1133.1" y="430.0"></text>
</g>
<g>
<title>set_page_dirty (3 samples, 0.04%)</title><rect x="1131.4" y="403.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1134.4" y="414.0"></text>
</g>
<g>
<title>page_mapping (2 samples, 0.03%)</title><rect x="1131.5" y="387.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1134.5" y="398.0"></text>
</g>
<g>
<title>down_write (3 samples, 0.04%)</title><rect x="1132.0" y="451.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1135.0" y="462.0"></text>
</g>
<g>
<title>up_write (4 samples, 0.05%)</title><rect x="1132.6" y="451.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1135.6" y="462.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.05%)</title><rect x="1133.2" y="483.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1136.2" y="494.0"></text>
</g>
<g>
<title>selinux_file_permission (3 samples, 0.04%)</title><rect x="1133.4" y="467.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1136.4" y="478.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.08%)</title><rect x="1133.8" y="563.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1136.8" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (17 samples, 0.22%)</title><rect x="1134.9" y="611.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1137.9" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.05%)</title><rect x="1135.0" y="595.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1138.0" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.04%)</title><rect x="1135.2" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1138.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (11 samples, 0.14%)</title><rect x="1135.8" y="595.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1138.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (5 samples, 0.06%)</title><rect x="1137.5" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1140.5" y="638.0"></text>
</g>
<g>
<title>[tid=26087] (100 samples, 1.30%)</title><rect x="1138.2" y="755.0" width="15.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1141.2" y="766.0"></text>
</g>
<g>
<title>start_thread (100 samples, 1.30%)</title><rect x="1138.2" y="739.0" width="15.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1141.2" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (100 samples, 1.30%)</title><rect x="1138.2" y="723.0" width="15.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1141.2" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (100 samples, 1.30%)</title><rect x="1138.2" y="707.0" width="15.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1141.2" y="718.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (99 samples, 1.28%)</title><rect x="1138.2" y="691.0" width="15.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1141.2" y="702.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (41 samples, 0.53%)</title><rect x="1138.2" y="675.0" width="6.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1141.2" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (37 samples, 0.48%)</title><rect x="1138.4" y="659.0" width="5.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1141.4" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (14 samples, 0.18%)</title><rect x="1141.9" y="643.0" width="2.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1144.9" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (4 samples, 0.05%)</title><rect x="1143.5" y="627.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1146.5" y="638.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.03%)</title><rect x="1144.1" y="659.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1147.1" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (52 samples, 0.67%)</title><rect x="1144.5" y="675.0" width="8.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1147.5" y="686.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (52 samples, 0.67%)</title><rect x="1144.5" y="659.0" width="8.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1147.5" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (52 samples, 0.67%)</title><rect x="1144.5" y="643.0" width="8.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1147.5" y="654.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (52 samples, 0.67%)</title><rect x="1144.5" y="627.0" width="8.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1147.5" y="638.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (52 samples, 0.67%)</title><rect x="1144.5" y="611.0" width="8.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1147.5" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (45 samples, 0.58%)</title><rect x="1144.5" y="595.0" width="6.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1147.5" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (22 samples, 0.29%)</title><rect x="1147.9" y="579.0" width="3.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1150.9" y="590.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (6 samples, 0.08%)</title><rect x="1150.3" y="563.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1153.3" y="574.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (7 samples, 0.09%)</title><rect x="1151.4" y="595.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1154.4" y="606.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (7 samples, 0.09%)</title><rect x="1151.4" y="579.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.4" y="590.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (4 samples, 0.05%)</title><rect x="1151.7" y="563.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1154.7" y="574.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.04%)</title><rect x="1152.5" y="675.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1155.5" y="686.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (3 samples, 0.04%)</title><rect x="1152.5" y="659.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1155.5" y="670.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (3 samples, 0.04%)</title><rect x="1152.5" y="643.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1155.5" y="654.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (3 samples, 0.04%)</title><rect x="1152.5" y="627.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1155.5" y="638.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.03%)</title><rect x="1152.5" y="611.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1155.5" y="622.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.03%)</title><rect x="1152.5" y="595.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1155.5" y="606.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (3 samples, 0.04%)</title><rect x="1152.9" y="675.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1155.9" y="686.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (3 samples, 0.04%)</title><rect x="1152.9" y="659.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.9" y="670.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (2 samples, 0.03%)</title><rect x="1153.1" y="643.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1156.1" y="654.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (2 samples, 0.03%)</title><rect x="1153.1" y="627.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.1" y="638.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (2 samples, 0.03%)</title><rect x="1153.1" y="611.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.1" y="622.0"></text>
</g>
<g>
<title>[tid=26089] (65 samples, 0.84%)</title><rect x="1153.6" y="755.0" width="9.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1156.6" y="766.0"></text>
</g>
<g>
<title>start_thread (64 samples, 0.83%)</title><rect x="1153.7" y="739.0" width="9.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1156.7" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (64 samples, 0.83%)</title><rect x="1153.7" y="723.0" width="9.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1156.7" y="734.0"></text>
</g>
<g>
<title>GangWorker::loop() (64 samples, 0.83%)</title><rect x="1153.7" y="707.0" width="9.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.7" y="718.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (37 samples, 0.48%)</title><rect x="1153.7" y="691.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.7" y="702.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (36 samples, 0.47%)</title><rect x="1153.7" y="675.0" width="5.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.7" y="686.0"></text>
</g>
<g>
<title>BitMap::get_next_one_offset(unsigned long, unsigned long) const [clone .part.97] (2 samples, 0.03%)</title><rect x="1153.9" y="659.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1156.9" y="670.0"></text>
</g>
<g>
<title>G1CMTask::drain_global_stack(bool) [clone .constprop.394] (2 samples, 0.03%)</title><rect x="1154.2" y="659.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1157.2" y="670.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.153] (19 samples, 0.25%)</title><rect x="1154.5" y="659.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1157.5" y="670.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (15 samples, 0.19%)</title><rect x="1155.1" y="643.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1158.1" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (14 samples, 0.18%)</title><rect x="1155.2" y="627.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1158.2" y="638.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (11 samples, 0.14%)</title><rect x="1157.5" y="659.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1160.5" y="670.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (7 samples, 0.09%)</title><rect x="1157.8" y="643.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1160.8" y="654.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (27 samples, 0.35%)</title><rect x="1159.4" y="691.0" width="4.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.4" y="702.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (27 samples, 0.35%)</title><rect x="1159.4" y="675.0" width="4.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1162.4" y="686.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (25 samples, 0.32%)</title><rect x="1159.4" y="659.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.4" y="670.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (5 samples, 0.06%)</title><rect x="1162.3" y="643.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1165.3" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1163.2" y="659.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1166.2" y="670.0"></text>
</g>
<g>
<title>[tid=26092] (7 samples, 0.09%)</title><rect x="1163.7" y="755.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1166.7" y="766.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.08%)</title><rect x="1163.8" y="739.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1166.8" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.08%)</title><rect x="1163.8" y="723.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1166.8" y="734.0"></text>
</g>
<g>
<title>VMThread::run() (6 samples, 0.08%)</title><rect x="1163.8" y="707.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1166.8" y="718.0"></text>
</g>
<g>
<title>VMThread::loop() (6 samples, 0.08%)</title><rect x="1163.8" y="691.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1166.8" y="702.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.54] (4 samples, 0.05%)</title><rect x="1163.8" y="675.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.8" y="686.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (4 samples, 0.05%)</title><rect x="1163.8" y="659.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1166.8" y="670.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (4 samples, 0.05%)</title><rect x="1163.8" y="643.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1166.8" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (4 samples, 0.05%)</title><rect x="1163.8" y="627.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.8" y="638.0"></text>
</g>
<g>
<title>__GI_sched_yield (2 samples, 0.03%)</title><rect x="1164.4" y="675.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1167.4" y="686.0"></text>
</g>
<g>
<title>[tid=26096] (145 samples, 1.88%)</title><rect x="1164.7" y="755.0" width="22.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1167.7" y="766.0">[..</text>
</g>
<g>
<title>start_thread (144 samples, 1.87%)</title><rect x="1164.9" y="739.0" width="22.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1167.9" y="750.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (144 samples, 1.87%)</title><rect x="1164.9" y="723.0" width="22.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1167.9" y="734.0">t..</text>
</g>
<g>
<title>JavaThread::run() (144 samples, 1.87%)</title><rect x="1164.9" y="707.0" width="22.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1167.9" y="718.0">J..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (144 samples, 1.87%)</title><rect x="1164.9" y="691.0" width="22.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1167.9" y="702.0">J..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (144 samples, 1.87%)</title><rect x="1164.9" y="675.0" width="22.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1167.9" y="686.0">C..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (144 samples, 1.87%)</title><rect x="1164.9" y="659.0" width="22.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.9" y="670.0">C..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (144 samples, 1.87%)</title><rect x="1164.9" y="643.0" width="22.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1167.9" y="654.0">C..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (144 samples, 1.87%)</title><rect x="1164.9" y="627.0" width="22.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.9" y="638.0">C..</text>
</g>
<g>
<title>Compile::Code_Gen() (72 samples, 0.93%)</title><rect x="1164.9" y="611.0" width="11.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1167.9" y="622.0"></text>
</g>
<g>
<title>Compile::Output() (3 samples, 0.04%)</title><rect x="1164.9" y="595.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1167.9" y="606.0"></text>
</g>
<g>
<title>Matcher::match() (3 samples, 0.04%)</title><rect x="1165.7" y="595.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1168.7" y="606.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (3 samples, 0.04%)</title><rect x="1165.7" y="579.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1168.7" y="590.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (2 samples, 0.03%)</title><rect x="1165.7" y="563.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1168.7" y="574.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (5 samples, 0.06%)</title><rect x="1166.1" y="595.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.1" y="606.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (4 samples, 0.05%)</title><rect x="1166.3" y="579.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1169.3" y="590.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.03%)</title><rect x="1166.3" y="563.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.3" y="574.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (2 samples, 0.03%)</title><rect x="1166.3" y="547.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1169.3" y="558.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.03%)</title><rect x="1166.6" y="563.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1169.6" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (59 samples, 0.77%)</title><rect x="1166.9" y="595.0" width="9.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1169.9" y="606.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (6 samples, 0.08%)</title><rect x="1167.5" y="579.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1170.5" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (2 samples, 0.03%)</title><rect x="1167.6" y="563.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1170.6" y="574.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (3 samples, 0.04%)</title><rect x="1168.0" y="563.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1171.0" y="574.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (2 samples, 0.03%)</title><rect x="1168.1" y="547.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.1" y="558.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (3 samples, 0.04%)</title><rect x="1168.4" y="579.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1171.4" y="590.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (3 samples, 0.04%)</title><rect x="1168.4" y="563.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.4" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (4 samples, 0.05%)</title><rect x="1168.9" y="579.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1171.9" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (12 samples, 0.16%)</title><rect x="1169.5" y="579.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.5" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (6 samples, 0.08%)</title><rect x="1170.1" y="563.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.1" y="574.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="1170.7" y="547.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.7" y="558.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (2 samples, 0.03%)</title><rect x="1171.0" y="563.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.0" y="574.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (2 samples, 0.03%)</title><rect x="1171.0" y="547.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.0" y="558.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (2 samples, 0.03%)</title><rect x="1171.3" y="579.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.3" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.03%)</title><rect x="1171.3" y="563.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1174.3" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (4 samples, 0.05%)</title><rect x="1171.6" y="579.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1174.6" y="590.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.03%)</title><rect x="1171.8" y="563.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1174.8" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (2 samples, 0.03%)</title><rect x="1172.2" y="579.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.2" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (6 samples, 0.08%)</title><rect x="1172.5" y="579.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.5" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (2 samples, 0.03%)</title><rect x="1173.0" y="563.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.0" y="574.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (2 samples, 0.03%)</title><rect x="1173.6" y="579.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1176.6" y="590.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (2 samples, 0.03%)</title><rect x="1173.6" y="563.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.6" y="574.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (2 samples, 0.03%)</title><rect x="1173.9" y="579.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.9" y="590.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="1173.9" y="563.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.9" y="574.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (2 samples, 0.03%)</title><rect x="1174.2" y="579.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.2" y="590.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (6 samples, 0.08%)</title><rect x="1174.5" y="579.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1177.5" y="590.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (2 samples, 0.03%)</title><rect x="1174.5" y="563.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1177.5" y="574.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (3 samples, 0.04%)</title><rect x="1174.8" y="563.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1177.8" y="574.0"></text>
</g>
<g>
<title>Compile::Optimize() (61 samples, 0.79%)</title><rect x="1175.9" y="611.0" width="9.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1178.9" y="622.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.254] (2 samples, 0.03%)</title><rect x="1176.1" y="595.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.1" y="606.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (2 samples, 0.03%)</title><rect x="1176.4" y="595.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.4" y="606.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (47 samples, 0.61%)</title><rect x="1177.0" y="595.0" width="7.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.0" y="606.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (2 samples, 0.03%)</title><rect x="1177.1" y="579.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.1" y="590.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (33 samples, 0.43%)</title><rect x="1177.6" y="579.0" width="5.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.6" y="590.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (31 samples, 0.40%)</title><rect x="1177.9" y="563.0" width="4.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.9" y="574.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (28 samples, 0.36%)</title><rect x="1178.2" y="547.0" width="4.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.2" y="558.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (2 samples, 0.03%)</title><rect x="1178.8" y="531.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.8" y="542.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (22 samples, 0.29%)</title><rect x="1179.1" y="531.0" width="3.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.1" y="542.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (3 samples, 0.04%)</title><rect x="1182.8" y="579.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.8" y="590.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (3 samples, 0.04%)</title><rect x="1182.8" y="563.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.8" y="574.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (5 samples, 0.06%)</title><rect x="1183.3" y="579.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.3" y="590.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.06%)</title><rect x="1183.3" y="563.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.3" y="574.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="1183.7" y="547.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.7" y="558.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.138] (2 samples, 0.03%)</title><rect x="1183.7" y="531.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.7" y="542.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1183.7" y="515.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.7" y="526.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1183.7" y="499.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.7" y="510.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1183.7" y="483.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.7" y="494.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (5 samples, 0.06%)</title><rect x="1184.2" y="595.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.2" y="606.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.06%)</title><rect x="1184.2" y="579.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.2" y="590.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="1184.3" y="563.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.3" y="574.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (2 samples, 0.03%)</title><rect x="1184.9" y="595.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.9" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.13%)</title><rect x="1185.3" y="611.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.3" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.13%)</title><rect x="1185.3" y="595.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.3" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.13%)</title><rect x="1185.3" y="579.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.3" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.13%)</title><rect x="1185.3" y="563.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.3" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.13%)</title><rect x="1185.3" y="547.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.3" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.13%)</title><rect x="1185.3" y="531.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.3" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.12%)</title><rect x="1185.4" y="515.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.4" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.12%)</title><rect x="1185.4" y="499.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.4" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.12%)</title><rect x="1185.4" y="483.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.4" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.12%)</title><rect x="1185.4" y="467.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.4" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.12%)</title><rect x="1185.4" y="451.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.4" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.12%)</title><rect x="1185.4" y="435.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.4" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.09%)</title><rect x="1185.4" y="419.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.4" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.09%)</title><rect x="1185.4" y="403.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.4" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.09%)</title><rect x="1185.4" y="387.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.4" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.09%)</title><rect x="1185.4" y="371.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.4" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.09%)</title><rect x="1185.4" y="355.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.4" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.09%)</title><rect x="1185.4" y="339.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.4" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1185.6" y="323.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.6" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1185.6" y="307.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.6" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1185.6" y="291.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.6" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1185.6" y="275.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.6" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1185.6" y="259.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.6" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1185.6" y="243.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.6" y="254.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1185.9" y="323.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.9" y="334.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1185.9" y="307.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.9" y="318.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1185.9" y="291.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.9" y="302.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1185.9" y="275.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.9" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.05%)</title><rect x="1185.9" y="259.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.9" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.05%)</title><rect x="1185.9" y="243.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.9" y="254.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1185.9" y="227.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.9" y="238.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1185.9" y="211.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.9" y="222.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1185.9" y="195.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.9" y="206.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1185.9" y="179.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.9" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.05%)</title><rect x="1185.9" y="163.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.9" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.05%)</title><rect x="1185.9" y="147.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.9" y="158.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1185.9" y="131.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.9" y="142.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1185.9" y="115.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.9" y="126.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1185.9" y="99.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.9" y="110.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1185.9" y="83.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.9" y="94.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1185.9" y="67.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.9" y="78.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1185.9" y="51.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.9" y="62.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1185.9" y="35.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.9" y="46.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1186.5" y="419.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.5" y="430.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1186.5" y="403.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.5" y="414.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1186.5" y="387.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.5" y="398.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1186.5" y="371.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.5" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1186.5" y="355.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.5" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1186.5" y="339.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.5" y="350.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1186.5" y="323.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.5" y="334.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1186.5" y="307.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.5" y="318.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1186.5" y="291.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.5" y="302.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1186.5" y="275.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.5" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1186.5" y="259.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.5" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1186.5" y="243.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.5" y="254.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1186.5" y="227.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.5" y="238.0"></text>
</g>
<g>
<title>[tid=26097] (16 samples, 0.21%)</title><rect x="1186.9" y="755.0" width="2.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1189.9" y="766.0"></text>
</g>
<g>
<title>start_thread (15 samples, 0.19%)</title><rect x="1187.1" y="739.0" width="2.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1190.1" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (15 samples, 0.19%)</title><rect x="1187.1" y="723.0" width="2.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1190.1" y="734.0"></text>
</g>
<g>
<title>JavaThread::run() (15 samples, 0.19%)</title><rect x="1187.1" y="707.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.1" y="718.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (15 samples, 0.19%)</title><rect x="1187.1" y="691.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.1" y="702.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (15 samples, 0.19%)</title><rect x="1187.1" y="675.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.1" y="686.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (14 samples, 0.18%)</title><rect x="1187.1" y="659.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.1" y="670.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (14 samples, 0.18%)</title><rect x="1187.1" y="643.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.1" y="654.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (14 samples, 0.18%)</title><rect x="1187.1" y="627.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.1" y="638.0"></text>
</g>
<g>
<title>Compilation::compile_method() (14 samples, 0.18%)</title><rect x="1187.1" y="611.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.1" y="622.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (13 samples, 0.17%)</title><rect x="1187.1" y="595.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.1" y="606.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (7 samples, 0.09%)</title><rect x="1187.1" y="579.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.1" y="590.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (4 samples, 0.05%)</title><rect x="1187.1" y="563.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.1" y="574.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (4 samples, 0.05%)</title><rect x="1187.1" y="547.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.1" y="558.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (4 samples, 0.05%)</title><rect x="1187.1" y="531.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.1" y="542.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (4 samples, 0.05%)</title><rect x="1187.1" y="515.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.1" y="526.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (3 samples, 0.04%)</title><rect x="1187.1" y="499.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.1" y="510.0"></text>
</g>
<g>
<title>IR::compute_use_counts() (2 samples, 0.03%)</title><rect x="1187.7" y="563.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.7" y="574.0"></text>
</g>
<g>
<title>BlockList::iterate_backward(BlockClosure*) (2 samples, 0.03%)</title><rect x="1187.7" y="547.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.7" y="558.0"></text>
</g>
<g>
<title>non-virtual thunk to UseCountComputer::block_do(BlockBegin*) (2 samples, 0.03%)</title><rect x="1187.7" y="531.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.7" y="542.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (2 samples, 0.03%)</title><rect x="1188.2" y="579.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.2" y="590.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (2 samples, 0.03%)</title><rect x="1188.2" y="563.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.2" y="574.0"></text>
</g>
<g>
<title>LIR_Assembler::return_op(LIR_OprDesc*) (2 samples, 0.03%)</title><rect x="1188.2" y="547.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.2" y="558.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (4 samples, 0.05%)</title><rect x="1188.5" y="579.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.5" y="590.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (3 samples, 0.04%)</title><rect x="1188.6" y="563.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.6" y="574.0"></text>
</g>
<g>
<title>[tid=26099] (2 samples, 0.03%)</title><rect x="1189.4" y="755.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1192.4" y="766.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.03%)</title><rect x="1189.4" y="739.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1192.4" y="750.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.03%)</title><rect x="1189.4" y="723.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1192.4" y="734.0"></text>
</g>
<g>
<title>JavaThread::run() (2 samples, 0.03%)</title><rect x="1189.4" y="707.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.4" y="718.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2 samples, 0.03%)</title><rect x="1189.4" y="691.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.4" y="702.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (2 samples, 0.03%)</title><rect x="1189.4" y="675.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.4" y="686.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (2 samples, 0.03%)</title><rect x="1189.4" y="659.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.4" y="670.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (2 samples, 0.03%)</title><rect x="1189.4" y="643.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.4" y="654.0"></text>
</g>
<g>
<title>[tid=26100] (2 samples, 0.03%)</title><rect x="1189.7" y="755.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1192.7" y="766.0"></text>
</g>
</g>
</svg>
