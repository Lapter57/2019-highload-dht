<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="629"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="629"> </text>
<g id="frames">
<g>
<title>all (233,370 samples, 100.00%)</title><rect x="10.0" y="595.0" width="1180.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="13.0" y="606.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=1798] (58,358 samples, 25.01%)</title><rect x="10.0" y="579.0" width="295.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="13.0" y="590.0">[NIO Selector #0 tid=1798]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (58,358 samples, 25.01%)</title><rect x="10.0" y="563.0" width="295.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="574.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (58,358 samples, 25.01%)</title><rect x="10.0" y="547.0" width="295.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="558.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (58,358 samples, 25.01%)</title><rect x="10.0" y="531.0" width="295.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="542.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (58,358 samples, 25.01%)</title><rect x="10.0" y="515.0" width="295.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="526.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (57,421 samples, 24.61%)</title><rect x="10.0" y="499.0" width="290.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="510.0">one/nio/http/HttpSession.handleParsedRe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (57,421 samples, 24.61%)</title><rect x="10.0" y="483.0" width="290.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="494.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (57,369 samples, 24.58%)</title><rect x="10.0" y="467.0" width="290.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="478.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (146 samples, 0.06%)</title><rect x="10.0" y="451.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (146 samples, 0.06%)</title><rect x="10.0" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (116 samples, 0.05%)</title><rect x="10.0" y="419.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (116 samples, 0.05%)</title><rect x="10.0" y="403.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.05%)</title><rect x="10.0" y="387.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (57,179 samples, 24.50%)</title><rect x="11.0" y="451.0" width="289.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.0" y="462.0">ru/mail/polis/service/shakhmin/SimpleHt..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (62 samples, 0.03%)</title><rect x="11.3" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (62 samples, 0.03%)</title><rect x="11.3" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.3" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (62 samples, 0.03%)</title><rect x="11.3" y="403.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="14.3" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (73 samples, 0.03%)</title><rect x="11.6" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.6" y="446.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (73 samples, 0.03%)</title><rect x="11.6" y="419.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="14.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (132 samples, 0.06%)</title><rect x="12.0" y="435.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (101 samples, 0.04%)</title><rect x="12.2" y="419.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="15.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (56,839 samples, 24.36%)</title><rect x="12.7" y="435.0" width="287.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.7" y="446.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1,655 samples, 0.71%)</title><rect x="12.7" y="419.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="15.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1,655 samples, 0.71%)</title><rect x="12.7" y="403.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1,655 samples, 0.71%)</title><rect x="12.7" y="387.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1,655 samples, 0.71%)</title><rect x="12.7" y="371.0" width="8.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,655 samples, 0.71%)</title><rect x="12.7" y="355.0" width="8.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,511 samples, 0.65%)</title><rect x="12.7" y="339.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.7" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (556 samples, 0.24%)</title><rect x="12.7" y="323.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (556 samples, 0.24%)</title><rect x="12.7" y="307.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (556 samples, 0.24%)</title><rect x="12.7" y="291.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (556 samples, 0.24%)</title><rect x="12.7" y="275.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (556 samples, 0.24%)</title><rect x="12.7" y="259.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (556 samples, 0.24%)</title><rect x="12.7" y="243.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="15.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (556 samples, 0.24%)</title><rect x="12.7" y="227.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.7" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (556 samples, 0.24%)</title><rect x="12.7" y="211.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.7" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (556 samples, 0.24%)</title><rect x="12.7" y="195.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (556 samples, 0.24%)</title><rect x="12.7" y="179.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (556 samples, 0.24%)</title><rect x="12.7" y="163.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="15.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (556 samples, 0.24%)</title><rect x="12.7" y="147.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (556 samples, 0.24%)</title><rect x="12.7" y="131.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="15.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (556 samples, 0.24%)</title><rect x="12.7" y="115.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (556 samples, 0.24%)</title><rect x="12.7" y="99.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.7" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (511 samples, 0.22%)</title><rect x="12.7" y="83.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.7" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (511 samples, 0.22%)</title><rect x="12.7" y="67.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="15.7" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (511 samples, 0.22%)</title><rect x="12.7" y="51.0" width="2.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="15.7" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (955 samples, 0.41%)</title><rect x="15.5" y="323.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (955 samples, 0.41%)</title><rect x="15.5" y="307.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (955 samples, 0.41%)</title><rect x="15.5" y="291.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (955 samples, 0.41%)</title><rect x="15.5" y="275.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (955 samples, 0.41%)</title><rect x="15.5" y="259.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (955 samples, 0.41%)</title><rect x="15.5" y="243.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (591 samples, 0.25%)</title><rect x="15.5" y="227.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (591 samples, 0.25%)</title><rect x="15.5" y="211.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (591 samples, 0.25%)</title><rect x="15.5" y="195.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (591 samples, 0.25%)</title><rect x="15.5" y="179.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (143 samples, 0.06%)</title><rect x="15.7" y="163.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (75 samples, 0.03%)</title><rect x="15.7" y="147.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (75 samples, 0.03%)</title><rect x="15.7" y="131.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.7" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (75 samples, 0.03%)</title><rect x="15.7" y="115.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="18.7" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (68 samples, 0.03%)</title><rect x="16.1" y="147.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (68 samples, 0.03%)</title><rect x="16.1" y="131.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="19.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (152 samples, 0.07%)</title><rect x="16.4" y="163.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (79 samples, 0.03%)</title><rect x="16.4" y="147.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (79 samples, 0.03%)</title><rect x="16.4" y="131.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (79 samples, 0.03%)</title><rect x="16.4" y="115.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="19.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (73 samples, 0.03%)</title><rect x="16.8" y="147.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (73 samples, 0.03%)</title><rect x="16.8" y="131.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="19.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (64 samples, 0.03%)</title><rect x="17.2" y="163.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (64 samples, 0.03%)</title><rect x="17.2" y="147.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.2" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (64 samples, 0.03%)</title><rect x="17.2" y="131.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.2" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (64 samples, 0.03%)</title><rect x="17.2" y="115.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="20.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (166 samples, 0.07%)</title><rect x="17.5" y="163.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (83 samples, 0.04%)</title><rect x="17.5" y="147.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.5" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (83 samples, 0.04%)</title><rect x="17.5" y="131.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.5" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (83 samples, 0.04%)</title><rect x="17.5" y="115.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="20.5" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (83 samples, 0.04%)</title><rect x="17.9" y="147.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (83 samples, 0.04%)</title><rect x="17.9" y="131.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="20.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (364 samples, 0.16%)</title><rect x="18.5" y="227.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (364 samples, 0.16%)</title><rect x="18.5" y="211.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="21.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (364 samples, 0.16%)</title><rect x="18.5" y="195.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="21.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (364 samples, 0.16%)</title><rect x="18.5" y="179.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="21.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (364 samples, 0.16%)</title><rect x="18.5" y="163.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="21.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (364 samples, 0.16%)</title><rect x="18.5" y="147.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="21.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (364 samples, 0.16%)</title><rect x="18.5" y="131.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.5" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (364 samples, 0.16%)</title><rect x="18.5" y="115.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (364 samples, 0.16%)</title><rect x="18.5" y="99.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (364 samples, 0.16%)</title><rect x="18.5" y="83.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.5" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (343 samples, 0.15%)</title><rect x="18.5" y="67.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.5" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (343 samples, 0.15%)</title><rect x="18.5" y="51.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.5" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (343 samples, 0.15%)</title><rect x="18.5" y="35.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="21.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$64/1686171753.apply (144 samples, 0.06%)</title><rect x="20.3" y="339.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (144 samples, 0.06%)</title><rect x="20.3" y="323.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (144 samples, 0.06%)</title><rect x="20.3" y="307.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (144 samples, 0.06%)</title><rect x="20.3" y="291.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.3" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (144 samples, 0.06%)</title><rect x="20.3" y="275.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="23.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (186 samples, 0.08%)</title><rect x="21.1" y="419.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="24.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (186 samples, 0.08%)</title><rect x="21.1" y="403.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$$Lambda$71/424703209.apply (186 samples, 0.08%)</title><rect x="21.1" y="387.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.lambda$iterator$0 (186 samples, 0.08%)</title><rect x="21.1" y="371.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (52 samples, 0.02%)</title><rect x="21.2" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="24.2" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (52 samples, 0.02%)</title><rect x="21.2" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.2" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (52 samples, 0.02%)</title><rect x="21.2" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.2" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (52 samples, 0.02%)</title><rect x="21.2" y="307.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="24.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (98 samples, 0.04%)</title><rect x="21.5" y="355.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.5" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (98 samples, 0.04%)</title><rect x="21.5" y="339.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.5" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (98 samples, 0.04%)</title><rect x="21.5" y="323.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.5" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (98 samples, 0.04%)</title><rect x="21.5" y="307.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="24.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (63 samples, 0.03%)</title><rect x="22.0" y="419.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.0" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (63 samples, 0.03%)</title><rect x="22.0" y="403.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.0" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (63 samples, 0.03%)</title><rect x="22.0" y="387.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.0" y="398.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (63 samples, 0.03%)</title><rect x="22.0" y="371.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="25.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (56 samples, 0.02%)</title><rect x="22.3" y="419.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.3" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (56 samples, 0.02%)</title><rect x="22.3" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.3" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (56 samples, 0.02%)</title><rect x="22.3" y="387.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.3" y="398.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (56 samples, 0.02%)</title><rect x="22.3" y="371.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="25.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (54,879 samples, 23.52%)</title><rect x="22.6" y="419.0" width="277.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.6" y="430.0">ru/mail/polis/dao/shakhmin/LSMDao.ite..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (54,879 samples, 23.52%)</title><rect x="22.6" y="403.0" width="277.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.6" y="414.0">ru/mail/polis/dao/shakhmin/LSMDao.row..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.combineTables (46,523 samples, 19.94%)</title><rect x="22.6" y="387.0" width="235.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.6" y="398.0">ru/mail/polis/dao/shakhmin/Tabl..</text>
</g>
<g>
<title>java/util/ArrayList.add (170 samples, 0.07%)</title><rect x="22.7" y="371.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (170 samples, 0.07%)</title><rect x="22.7" y="355.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (170 samples, 0.07%)</title><rect x="22.7" y="339.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (170 samples, 0.07%)</title><rect x="22.7" y="323.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.7" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (170 samples, 0.07%)</title><rect x="22.7" y="307.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.7" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (170 samples, 0.07%)</title><rect x="22.7" y="291.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="25.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (475 samples, 0.20%)</title><rect x="23.8" y="371.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.combineTables (278 samples, 0.12%)</title><rect x="23.8" y="355.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="26.8" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (67 samples, 0.03%)</title><rect x="24.0" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (52 samples, 0.02%)</title><rect x="24.3" y="339.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (52 samples, 0.02%)</title><rect x="24.3" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.3" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (52 samples, 0.02%)</title><rect x="24.3" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="27.3" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (52 samples, 0.02%)</title><rect x="24.3" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.3" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (52 samples, 0.02%)</title><rect x="24.3" y="275.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.3" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (52 samples, 0.02%)</title><rect x="24.3" y="259.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="27.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (120 samples, 0.05%)</title><rect x="24.6" y="339.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.transformRows (197 samples, 0.08%)</title><rect x="25.2" y="355.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (134 samples, 0.06%)</title><rect x="25.4" y="339.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (108 samples, 0.05%)</title><rect x="25.5" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (45,819 samples, 19.63%)</title><rect x="26.2" y="371.0" width="231.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.2" y="382.0">ru/mail/polis/dao/shakhmin/SSTa..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (391 samples, 0.17%)</title><rect x="26.2" y="355.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="29.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (45,428 samples, 19.47%)</title><rect x="28.1" y="355.0" width="229.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.1" y="366.0">ru/mail/polis/dao/shakhmin/SST..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (45,428 samples, 19.47%)</title><rect x="28.1" y="339.0" width="229.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="31.1" y="350.0">ru/mail/polis/dao/shakhmin/SST..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (22,692 samples, 9.72%)</title><rect x="28.1" y="323.0" width="114.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="31.1" y="334.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,317 samples, 4.85%)</title><rect x="28.1" y="307.0" width="57.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="31.1" y="318.0">java/n..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,317 samples, 4.85%)</title><rect x="28.1" y="291.0" width="57.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.1" y="302.0">java/n..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,317 samples, 4.85%)</title><rect x="28.1" y="275.0" width="57.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="31.1" y="286.0">java.n..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,375 samples, 4.87%)</title><rect x="85.4" y="307.0" width="57.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="88.4" y="318.0">java/n..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,375 samples, 4.87%)</title><rect x="85.4" y="291.0" width="57.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="88.4" y="302.0">java.n..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (22,736 samples, 9.74%)</title><rect x="142.9" y="323.0" width="114.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.9" y="334.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,318 samples, 4.85%)</title><rect x="142.9" y="307.0" width="57.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.9" y="318.0">java/n..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,318 samples, 4.85%)</title><rect x="142.9" y="291.0" width="57.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.9" y="302.0">java/n..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,318 samples, 4.85%)</title><rect x="142.9" y="275.0" width="57.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="145.9" y="286.0">java.n..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,418 samples, 4.89%)</title><rect x="200.1" y="307.0" width="57.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="203.1" y="318.0">java/n..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,418 samples, 4.89%)</title><rect x="200.1" y="291.0" width="57.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="203.1" y="302.0">java.n..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.transformRows (8,356 samples, 3.58%)</title><rect x="257.8" y="387.0" width="42.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="260.8" y="398.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,806 samples, 2.92%)</title><rect x="258.0" y="371.0" width="34.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="261.0" y="382.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,792 samples, 2.91%)</title><rect x="258.1" y="355.0" width="34.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="261.1" y="366.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (88 samples, 0.04%)</title><rect x="258.2" y="339.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="261.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (88 samples, 0.04%)</title><rect x="258.2" y="323.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="261.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (88 samples, 0.04%)</title><rect x="258.2" y="307.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="261.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (88 samples, 0.04%)</title><rect x="258.2" y="291.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$64/1686171753.apply (88 samples, 0.04%)</title><rect x="258.2" y="275.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="261.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (88 samples, 0.04%)</title><rect x="258.2" y="259.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.2" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (88 samples, 0.04%)</title><rect x="258.2" y="243.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="261.2" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (88 samples, 0.04%)</title><rect x="258.2" y="227.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="261.2" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (248 samples, 0.11%)</title><rect x="258.7" y="339.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="261.7" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (248 samples, 0.11%)</title><rect x="258.7" y="323.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="261.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,381 samples, 2.73%)</title><rect x="260.2" y="339.0" width="32.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="263.2" y="350.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,381 samples, 2.73%)</title><rect x="260.2" y="323.0" width="32.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="263.2" y="334.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (94 samples, 0.04%)</title><rect x="260.2" y="307.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="263.2" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (94 samples, 0.04%)</title><rect x="260.2" y="291.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="263.2" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (92 samples, 0.04%)</title><rect x="260.2" y="275.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="263.2" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,287 samples, 2.69%)</title><rect x="260.7" y="307.0" width="31.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="263.7" y="318.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,287 samples, 2.69%)</title><rect x="260.7" y="291.0" width="31.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="263.7" y="302.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,287 samples, 2.69%)</title><rect x="260.7" y="275.0" width="31.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.7" y="286.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,287 samples, 2.69%)</title><rect x="260.7" y="259.0" width="31.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="263.7" y="270.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,357 samples, 1.87%)</title><rect x="260.7" y="243.0" width="22.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="263.7" y="254.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,357 samples, 1.87%)</title><rect x="260.7" y="227.0" width="22.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.7" y="238.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,357 samples, 1.87%)</title><rect x="260.7" y="211.0" width="22.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="263.7" y="222.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,357 samples, 1.87%)</title><rect x="260.7" y="195.0" width="22.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.7" y="206.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (279 samples, 0.12%)</title><rect x="260.7" y="179.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="263.7" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (279 samples, 0.12%)</title><rect x="260.7" y="163.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="263.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,090 samples, 0.47%)</title><rect x="262.1" y="179.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="265.1" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (545 samples, 0.23%)</title><rect x="262.1" y="163.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="265.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (545 samples, 0.23%)</title><rect x="262.1" y="147.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="265.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (545 samples, 0.23%)</title><rect x="262.1" y="131.0" width="2.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="265.1" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (545 samples, 0.23%)</title><rect x="264.8" y="163.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="267.8" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (545 samples, 0.23%)</title><rect x="264.8" y="147.0" width="2.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="267.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,098 samples, 0.47%)</title><rect x="267.6" y="179.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="270.6" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (577 samples, 0.25%)</title><rect x="267.6" y="163.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="270.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (577 samples, 0.25%)</title><rect x="267.6" y="147.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="270.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (577 samples, 0.25%)</title><rect x="267.6" y="131.0" width="2.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="270.6" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (521 samples, 0.22%)</title><rect x="270.5" y="163.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="273.5" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (521 samples, 0.22%)</title><rect x="270.5" y="147.0" width="2.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="273.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (582 samples, 0.25%)</title><rect x="273.1" y="179.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="276.1" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (582 samples, 0.25%)</title><rect x="273.1" y="163.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="276.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (582 samples, 0.25%)</title><rect x="273.1" y="147.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (582 samples, 0.25%)</title><rect x="273.1" y="131.0" width="3.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="276.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,104 samples, 0.47%)</title><rect x="276.1" y="179.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="279.1" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (533 samples, 0.23%)</title><rect x="276.1" y="163.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="279.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (533 samples, 0.23%)</title><rect x="276.1" y="147.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="279.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (533 samples, 0.23%)</title><rect x="276.1" y="131.0" width="2.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="279.1" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (571 samples, 0.24%)</title><rect x="278.8" y="163.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="281.8" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (571 samples, 0.24%)</title><rect x="278.8" y="147.0" width="2.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="281.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (204 samples, 0.09%)</title><rect x="281.7" y="179.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="284.7" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (204 samples, 0.09%)</title><rect x="281.7" y="163.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="284.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (1,930 samples, 0.83%)</title><rect x="282.7" y="243.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,930 samples, 0.83%)</title><rect x="282.7" y="227.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="285.7" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (1,930 samples, 0.83%)</title><rect x="282.7" y="211.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.7" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,930 samples, 0.83%)</title><rect x="282.7" y="195.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (1,930 samples, 0.83%)</title><rect x="282.7" y="179.0" width="9.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="285.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,930 samples, 0.83%)</title><rect x="282.7" y="163.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="285.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (1,930 samples, 0.83%)</title><rect x="282.7" y="147.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,930 samples, 0.83%)</title><rect x="282.7" y="131.0" width="9.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="285.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (1,930 samples, 0.83%)</title><rect x="282.7" y="115.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="285.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,930 samples, 0.83%)</title><rect x="282.7" y="99.0" width="9.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.7" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,777 samples, 0.76%)</title><rect x="282.7" y="83.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.7" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,777 samples, 0.76%)</title><rect x="282.7" y="67.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="285.7" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,777 samples, 0.76%)</title><rect x="282.7" y="51.0" width="9.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="285.7" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (153 samples, 0.07%)</title><rect x="291.7" y="83.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="294.7" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (153 samples, 0.07%)</title><rect x="291.7" y="67.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="294.7" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,508 samples, 0.65%)</title><rect x="292.5" y="371.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,483 samples, 0.64%)</title><rect x="292.6" y="355.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="295.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,483 samples, 0.64%)</title><rect x="292.6" y="339.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.6" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (522 samples, 0.22%)</title><rect x="292.6" y="323.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (522 samples, 0.22%)</title><rect x="292.6" y="307.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (522 samples, 0.22%)</title><rect x="292.6" y="291.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (522 samples, 0.22%)</title><rect x="292.6" y="275.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="295.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (522 samples, 0.22%)</title><rect x="292.6" y="259.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (522 samples, 0.22%)</title><rect x="292.6" y="243.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (522 samples, 0.22%)</title><rect x="292.6" y="227.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="295.6" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (522 samples, 0.22%)</title><rect x="292.6" y="211.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="295.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (522 samples, 0.22%)</title><rect x="292.6" y="195.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (522 samples, 0.22%)</title><rect x="292.6" y="179.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="295.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (522 samples, 0.22%)</title><rect x="292.6" y="163.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="295.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (522 samples, 0.22%)</title><rect x="292.6" y="147.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (522 samples, 0.22%)</title><rect x="292.6" y="131.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (522 samples, 0.22%)</title><rect x="292.6" y="115.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (522 samples, 0.22%)</title><rect x="292.6" y="99.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="295.6" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (465 samples, 0.20%)</title><rect x="292.6" y="83.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="295.6" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (465 samples, 0.20%)</title><rect x="292.6" y="67.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="295.6" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (465 samples, 0.20%)</title><rect x="292.6" y="51.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="295.6" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (57 samples, 0.02%)</title><rect x="294.9" y="83.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (57 samples, 0.02%)</title><rect x="294.9" y="67.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="297.9" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (961 samples, 0.41%)</title><rect x="295.2" y="323.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (961 samples, 0.41%)</title><rect x="295.2" y="307.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="298.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (961 samples, 0.41%)</title><rect x="295.2" y="291.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="298.2" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (961 samples, 0.41%)</title><rect x="295.2" y="275.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="298.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (961 samples, 0.41%)</title><rect x="295.2" y="259.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (961 samples, 0.41%)</title><rect x="295.2" y="243.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (567 samples, 0.24%)</title><rect x="295.2" y="227.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="298.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (567 samples, 0.24%)</title><rect x="295.2" y="211.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="298.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (567 samples, 0.24%)</title><rect x="295.2" y="195.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (567 samples, 0.24%)</title><rect x="295.2" y="179.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (149 samples, 0.06%)</title><rect x="295.4" y="163.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (74 samples, 0.03%)</title><rect x="295.4" y="147.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (74 samples, 0.03%)</title><rect x="295.4" y="131.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (74 samples, 0.03%)</title><rect x="295.4" y="115.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="298.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (75 samples, 0.03%)</title><rect x="295.8" y="147.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (75 samples, 0.03%)</title><rect x="295.8" y="131.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="298.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (150 samples, 0.06%)</title><rect x="296.2" y="163.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="299.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (74 samples, 0.03%)</title><rect x="296.2" y="147.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="299.2" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (74 samples, 0.03%)</title><rect x="296.2" y="131.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="299.2" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (74 samples, 0.03%)</title><rect x="296.2" y="115.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="299.2" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (76 samples, 0.03%)</title><rect x="296.5" y="147.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="299.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (76 samples, 0.03%)</title><rect x="296.5" y="131.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="299.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (75 samples, 0.03%)</title><rect x="296.9" y="163.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="299.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (75 samples, 0.03%)</title><rect x="296.9" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="299.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (75 samples, 0.03%)</title><rect x="296.9" y="131.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="299.9" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (75 samples, 0.03%)</title><rect x="296.9" y="115.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="299.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (122 samples, 0.05%)</title><rect x="297.3" y="163.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (67 samples, 0.03%)</title><rect x="297.3" y="147.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="300.3" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (67 samples, 0.03%)</title><rect x="297.3" y="131.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="300.3" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (67 samples, 0.03%)</title><rect x="297.3" y="115.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="300.3" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (55 samples, 0.02%)</title><rect x="297.7" y="147.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="300.7" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (55 samples, 0.02%)</title><rect x="297.7" y="131.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="300.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (394 samples, 0.17%)</title><rect x="298.1" y="227.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="301.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (394 samples, 0.17%)</title><rect x="298.1" y="211.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="301.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (394 samples, 0.17%)</title><rect x="298.1" y="195.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="301.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (394 samples, 0.17%)</title><rect x="298.1" y="179.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="301.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (394 samples, 0.17%)</title><rect x="298.1" y="163.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="301.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (394 samples, 0.17%)</title><rect x="298.1" y="147.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="301.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (394 samples, 0.17%)</title><rect x="298.1" y="131.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="301.1" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (394 samples, 0.17%)</title><rect x="298.1" y="115.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="301.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (394 samples, 0.17%)</title><rect x="298.1" y="99.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="301.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (394 samples, 0.17%)</title><rect x="298.1" y="83.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="301.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (370 samples, 0.16%)</title><rect x="298.1" y="67.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="301.1" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (370 samples, 0.16%)</title><rect x="298.1" y="51.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.1" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (370 samples, 0.16%)</title><rect x="298.1" y="35.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="301.1" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (52 samples, 0.02%)</title><rect x="300.1" y="467.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="303.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 0.02%)</title><rect x="300.1" y="451.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="303.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.02%)</title><rect x="300.1" y="435.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (779 samples, 0.33%)</title><rect x="300.3" y="499.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (94 samples, 0.04%)</title><rect x="300.5" y="483.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="303.5" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (94 samples, 0.04%)</title><rect x="300.5" y="467.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="303.5" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (651 samples, 0.28%)</title><rect x="301.0" y="483.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="304.0" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (651 samples, 0.28%)</title><rect x="301.0" y="467.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.0" y="478.0"></text>
</g>
<g>
<title>char[] (547 samples, 0.23%)</title><rect x="301.0" y="451.0" width="2.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="304.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (73 samples, 0.03%)</title><rect x="303.9" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (73 samples, 0.03%)</title><rect x="303.9" y="435.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (73 samples, 0.03%)</title><rect x="303.9" y="419.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.9" y="430.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.03%)</title><rect x="303.9" y="403.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="306.9" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (158 samples, 0.07%)</title><rect x="304.3" y="499.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="307.3" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (158 samples, 0.07%)</title><rect x="304.3" y="483.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="307.3" y="494.0"></text>
</g>
<g>
<title>char[] (78 samples, 0.03%)</title><rect x="304.3" y="467.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="307.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (52 samples, 0.02%)</title><rect x="304.8" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="307.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (52 samples, 0.02%)</title><rect x="304.8" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="307.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (52 samples, 0.02%)</title><rect x="304.8" y="435.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="307.8" y="446.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.02%)</title><rect x="304.8" y="419.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="307.8" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=1799] (58,392 samples, 25.02%)</title><rect x="305.1" y="579.0" width="295.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="308.1" y="590.0">[NIO Selector #1 tid=1799]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (58,392 samples, 25.02%)</title><rect x="305.1" y="563.0" width="295.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.1" y="574.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (503 samples, 0.22%)</title><rect x="305.1" y="547.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="308.1" y="558.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (503 samples, 0.22%)</title><rect x="305.1" y="531.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="308.1" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (57,889 samples, 24.81%)</title><rect x="307.6" y="547.0" width="292.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="310.6" y="558.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (57,889 samples, 24.81%)</title><rect x="307.6" y="531.0" width="292.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.6" y="542.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (57,889 samples, 24.81%)</title><rect x="307.6" y="515.0" width="292.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.6" y="526.0">one/nio/http/HttpSession.processHttpBuf..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (57,417 samples, 24.60%)</title><rect x="307.6" y="499.0" width="290.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="310.6" y="510.0">one/nio/http/HttpSession.handleParsedRe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (57,417 samples, 24.60%)</title><rect x="307.6" y="483.0" width="290.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.6" y="494.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (57,355 samples, 24.58%)</title><rect x="307.6" y="467.0" width="290.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="310.6" y="478.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (180 samples, 0.08%)</title><rect x="307.6" y="451.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="310.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (180 samples, 0.08%)</title><rect x="307.6" y="435.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="310.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (133 samples, 0.06%)</title><rect x="307.6" y="419.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="310.6" y="430.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (133 samples, 0.06%)</title><rect x="307.6" y="403.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="310.6" y="414.0"></text>
</g>
<g>
<title>byte[] (133 samples, 0.06%)</title><rect x="307.6" y="387.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="310.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (58 samples, 0.02%)</title><rect x="308.5" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="311.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (58 samples, 0.02%)</title><rect x="308.5" y="435.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="311.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (58 samples, 0.02%)</title><rect x="308.5" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="311.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (57,117 samples, 24.47%)</title><rect x="308.8" y="451.0" width="288.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="311.8" y="462.0">ru/mail/polis/service/shakhmin/SimpleHt..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (66 samples, 0.03%)</title><rect x="309.4" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="312.4" y="446.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (66 samples, 0.03%)</title><rect x="309.4" y="419.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="312.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (156 samples, 0.07%)</title><rect x="309.7" y="435.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="312.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (126 samples, 0.05%)</title><rect x="309.9" y="419.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.9" y="430.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.03%)</title><rect x="309.9" y="403.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="312.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (56,780 samples, 24.33%)</title><rect x="310.5" y="435.0" width="287.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="313.5" y="446.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1,617 samples, 0.69%)</title><rect x="310.5" y="419.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="313.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1,617 samples, 0.69%)</title><rect x="310.5" y="403.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="313.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1,617 samples, 0.69%)</title><rect x="310.5" y="387.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="313.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1,617 samples, 0.69%)</title><rect x="310.5" y="371.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="313.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,617 samples, 0.69%)</title><rect x="310.5" y="355.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="313.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,494 samples, 0.64%)</title><rect x="310.5" y="339.0" width="7.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="313.5" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (539 samples, 0.23%)</title><rect x="310.5" y="323.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="313.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (539 samples, 0.23%)</title><rect x="310.5" y="307.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="313.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (539 samples, 0.23%)</title><rect x="310.5" y="291.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="313.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (539 samples, 0.23%)</title><rect x="310.5" y="275.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (539 samples, 0.23%)</title><rect x="310.5" y="259.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (539 samples, 0.23%)</title><rect x="310.5" y="243.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (539 samples, 0.23%)</title><rect x="310.5" y="227.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.5" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (539 samples, 0.23%)</title><rect x="310.5" y="211.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="313.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (539 samples, 0.23%)</title><rect x="310.5" y="195.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="313.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (539 samples, 0.23%)</title><rect x="310.5" y="179.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="313.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (539 samples, 0.23%)</title><rect x="310.5" y="163.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (539 samples, 0.23%)</title><rect x="310.5" y="147.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="313.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (539 samples, 0.23%)</title><rect x="310.5" y="131.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (539 samples, 0.23%)</title><rect x="310.5" y="115.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="313.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (539 samples, 0.23%)</title><rect x="310.5" y="99.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="313.5" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (486 samples, 0.21%)</title><rect x="310.5" y="83.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="313.5" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (486 samples, 0.21%)</title><rect x="310.5" y="67.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="313.5" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (486 samples, 0.21%)</title><rect x="310.5" y="51.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="313.5" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (53 samples, 0.02%)</title><rect x="313.0" y="83.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (53 samples, 0.02%)</title><rect x="313.0" y="67.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="316.0" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (955 samples, 0.41%)</title><rect x="313.3" y="323.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="316.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (955 samples, 0.41%)</title><rect x="313.3" y="307.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (955 samples, 0.41%)</title><rect x="313.3" y="291.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (955 samples, 0.41%)</title><rect x="313.3" y="275.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="316.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (955 samples, 0.41%)</title><rect x="313.3" y="259.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (955 samples, 0.41%)</title><rect x="313.3" y="243.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="316.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (569 samples, 0.24%)</title><rect x="313.3" y="227.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="316.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (569 samples, 0.24%)</title><rect x="313.3" y="211.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (569 samples, 0.24%)</title><rect x="313.3" y="195.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="316.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (569 samples, 0.24%)</title><rect x="313.3" y="179.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="316.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (148 samples, 0.06%)</title><rect x="313.5" y="163.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="316.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (65 samples, 0.03%)</title><rect x="313.5" y="147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.5" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (65 samples, 0.03%)</title><rect x="313.5" y="131.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.5" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (65 samples, 0.03%)</title><rect x="313.5" y="115.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="316.5" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (83 samples, 0.04%)</title><rect x="313.8" y="147.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="316.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (83 samples, 0.04%)</title><rect x="313.8" y="131.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="316.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (162 samples, 0.07%)</title><rect x="314.2" y="163.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (82 samples, 0.04%)</title><rect x="314.2" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="317.2" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (82 samples, 0.04%)</title><rect x="314.2" y="131.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.2" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (82 samples, 0.04%)</title><rect x="314.2" y="115.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="317.2" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (80 samples, 0.03%)</title><rect x="314.6" y="147.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (80 samples, 0.03%)</title><rect x="314.6" y="131.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="317.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (65 samples, 0.03%)</title><rect x="315.0" y="163.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="318.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (65 samples, 0.03%)</title><rect x="315.0" y="147.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="318.0" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (65 samples, 0.03%)</title><rect x="315.0" y="131.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="318.0" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (65 samples, 0.03%)</title><rect x="315.0" y="115.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="318.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (126 samples, 0.05%)</title><rect x="315.4" y="163.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="318.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (57 samples, 0.02%)</title><rect x="315.4" y="147.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="318.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (57 samples, 0.02%)</title><rect x="315.4" y="131.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="318.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (57 samples, 0.02%)</title><rect x="315.4" y="115.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="318.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (69 samples, 0.03%)</title><rect x="315.7" y="147.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="318.7" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (69 samples, 0.03%)</title><rect x="315.7" y="131.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="318.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (386 samples, 0.17%)</title><rect x="316.1" y="227.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="319.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (386 samples, 0.17%)</title><rect x="316.1" y="211.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="319.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (386 samples, 0.17%)</title><rect x="316.1" y="195.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="319.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (386 samples, 0.17%)</title><rect x="316.1" y="179.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="319.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (386 samples, 0.17%)</title><rect x="316.1" y="163.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="319.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (386 samples, 0.17%)</title><rect x="316.1" y="147.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="319.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (386 samples, 0.17%)</title><rect x="316.1" y="131.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="319.1" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (386 samples, 0.17%)</title><rect x="316.1" y="115.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="319.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (386 samples, 0.17%)</title><rect x="316.1" y="99.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="319.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (386 samples, 0.17%)</title><rect x="316.1" y="83.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="319.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (370 samples, 0.16%)</title><rect x="316.1" y="67.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="319.1" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (370 samples, 0.16%)</title><rect x="316.1" y="51.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="319.1" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (370 samples, 0.16%)</title><rect x="316.1" y="35.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="319.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$64/1686171753.apply (123 samples, 0.05%)</title><rect x="318.1" y="339.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="321.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (123 samples, 0.05%)</title><rect x="318.1" y="323.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (122 samples, 0.05%)</title><rect x="318.1" y="307.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="321.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (122 samples, 0.05%)</title><rect x="318.1" y="291.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="321.1" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (122 samples, 0.05%)</title><rect x="318.1" y="275.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="321.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (186 samples, 0.08%)</title><rect x="318.7" y="419.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (186 samples, 0.08%)</title><rect x="318.7" y="403.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="321.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$$Lambda$71/424703209.apply (186 samples, 0.08%)</title><rect x="318.7" y="387.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.lambda$iterator$0 (186 samples, 0.08%)</title><rect x="318.7" y="371.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="321.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (72 samples, 0.03%)</title><rect x="318.9" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="321.9" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (72 samples, 0.03%)</title><rect x="318.9" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="321.9" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (72 samples, 0.03%)</title><rect x="318.9" y="323.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="321.9" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (72 samples, 0.03%)</title><rect x="318.9" y="307.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="321.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (68 samples, 0.03%)</title><rect x="319.3" y="355.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="322.3" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (68 samples, 0.03%)</title><rect x="319.3" y="339.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="322.3" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (68 samples, 0.03%)</title><rect x="319.3" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="322.3" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (68 samples, 0.03%)</title><rect x="319.3" y="307.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="322.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (71 samples, 0.03%)</title><rect x="319.7" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="322.7" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (71 samples, 0.03%)</title><rect x="319.7" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.7" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (71 samples, 0.03%)</title><rect x="319.7" y="387.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="322.7" y="398.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (71 samples, 0.03%)</title><rect x="319.7" y="371.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="322.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (64 samples, 0.03%)</title><rect x="320.0" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.0" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (64 samples, 0.03%)</title><rect x="320.0" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="323.0" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (64 samples, 0.03%)</title><rect x="320.0" y="387.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.0" y="398.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (64 samples, 0.03%)</title><rect x="320.0" y="371.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="323.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (54,842 samples, 23.50%)</title><rect x="320.3" y="419.0" width="277.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.3" y="430.0">ru/mail/polis/dao/shakhmin/LSMDao.ite..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (54,842 samples, 23.50%)</title><rect x="320.3" y="403.0" width="277.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="323.3" y="414.0">ru/mail/polis/dao/shakhmin/LSMDao.row..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.combineTables (46,651 samples, 19.99%)</title><rect x="320.3" y="387.0" width="235.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="323.3" y="398.0">ru/mail/polis/dao/shakhmin/Tabl..</text>
</g>
<g>
<title>java/util/ArrayList.add (163 samples, 0.07%)</title><rect x="320.5" y="371.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (163 samples, 0.07%)</title><rect x="320.5" y="355.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="323.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (163 samples, 0.07%)</title><rect x="320.5" y="339.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="323.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (163 samples, 0.07%)</title><rect x="320.5" y="323.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="323.5" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (163 samples, 0.07%)</title><rect x="320.5" y="307.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="323.5" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (161 samples, 0.07%)</title><rect x="320.5" y="291.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="323.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (504 samples, 0.22%)</title><rect x="321.5" y="371.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="324.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.combineTables (297 samples, 0.13%)</title><rect x="321.5" y="355.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="324.5" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (78 samples, 0.03%)</title><rect x="321.7" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="324.7" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (52 samples, 0.02%)</title><rect x="321.8" y="323.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.8" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (52 samples, 0.02%)</title><rect x="321.8" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="324.8" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (52 samples, 0.02%)</title><rect x="321.8" y="291.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="324.8" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (66 samples, 0.03%)</title><rect x="322.1" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="325.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (66 samples, 0.03%)</title><rect x="322.1" y="323.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="325.1" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (66 samples, 0.03%)</title><rect x="322.1" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="325.1" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (66 samples, 0.03%)</title><rect x="322.1" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.1" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (66 samples, 0.03%)</title><rect x="322.1" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.1" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (65 samples, 0.03%)</title><rect x="322.1" y="259.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="325.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (118 samples, 0.05%)</title><rect x="322.4" y="339.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (63 samples, 0.03%)</title><rect x="322.7" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="325.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (63 samples, 0.03%)</title><rect x="322.7" y="307.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="325.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (63 samples, 0.03%)</title><rect x="322.7" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="325.7" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (63 samples, 0.03%)</title><rect x="322.7" y="275.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="325.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.transformRows (205 samples, 0.09%)</title><rect x="323.0" y="355.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="326.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (147 samples, 0.06%)</title><rect x="323.2" y="339.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (131 samples, 0.06%)</title><rect x="323.2" y="323.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="326.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (45,917 samples, 19.68%)</title><rect x="324.0" y="371.0" width="232.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="327.0" y="382.0">ru/mail/polis/dao/shakhmin/SSTa..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (358 samples, 0.15%)</title><rect x="324.0" y="355.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="327.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (45,559 samples, 19.52%)</title><rect x="325.9" y="355.0" width="230.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="328.9" y="366.0">ru/mail/polis/dao/shakhmin/SST..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (45,559 samples, 19.52%)</title><rect x="325.9" y="339.0" width="230.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.9" y="350.0">ru/mail/polis/dao/shakhmin/SST..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (22,672 samples, 9.72%)</title><rect x="325.9" y="323.0" width="114.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.9" y="334.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,357 samples, 4.87%)</title><rect x="325.9" y="307.0" width="57.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="328.9" y="318.0">java/n..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,357 samples, 4.87%)</title><rect x="325.9" y="291.0" width="57.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="328.9" y="302.0">java/n..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,357 samples, 4.87%)</title><rect x="325.9" y="275.0" width="57.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="328.9" y="286.0">java.n..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,315 samples, 4.85%)</title><rect x="383.3" y="307.0" width="57.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.3" y="318.0">java/n..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,315 samples, 4.85%)</title><rect x="383.3" y="291.0" width="57.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="386.3" y="302.0">java.n..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (22,887 samples, 9.81%)</title><rect x="440.5" y="323.0" width="115.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="443.5" y="334.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,382 samples, 4.88%)</title><rect x="440.5" y="307.0" width="57.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="443.5" y="318.0">java/n..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,382 samples, 4.88%)</title><rect x="440.5" y="291.0" width="57.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="443.5" y="302.0">java/n..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,382 samples, 4.88%)</title><rect x="440.5" y="275.0" width="57.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="443.5" y="286.0">java.n..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,505 samples, 4.93%)</title><rect x="498.0" y="307.0" width="58.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.0" y="318.0">java/n..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,505 samples, 4.93%)</title><rect x="498.0" y="291.0" width="58.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="501.0" y="302.0">java.n..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.transformRows (8,191 samples, 3.51%)</title><rect x="556.2" y="387.0" width="41.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.2" y="398.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,634 samples, 2.84%)</title><rect x="556.4" y="371.0" width="33.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="559.4" y="382.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,619 samples, 2.84%)</title><rect x="556.5" y="355.0" width="33.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="559.5" y="366.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (113 samples, 0.05%)</title><rect x="556.6" y="339.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="559.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (113 samples, 0.05%)</title><rect x="556.6" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="559.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (113 samples, 0.05%)</title><rect x="556.6" y="307.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="559.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (113 samples, 0.05%)</title><rect x="556.6" y="291.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="559.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$64/1686171753.apply (113 samples, 0.05%)</title><rect x="556.6" y="275.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="559.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (113 samples, 0.05%)</title><rect x="556.6" y="259.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="559.6" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (113 samples, 0.05%)</title><rect x="556.6" y="243.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="559.6" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (113 samples, 0.05%)</title><rect x="556.6" y="227.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="559.6" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (208 samples, 0.09%)</title><rect x="557.2" y="339.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="560.2" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (208 samples, 0.09%)</title><rect x="557.2" y="323.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="560.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,211 samples, 2.66%)</title><rect x="558.6" y="339.0" width="31.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="561.6" y="350.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,211 samples, 2.66%)</title><rect x="558.6" y="323.0" width="31.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="561.6" y="334.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (97 samples, 0.04%)</title><rect x="558.6" y="307.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="561.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (97 samples, 0.04%)</title><rect x="558.6" y="291.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.6" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (97 samples, 0.04%)</title><rect x="558.6" y="275.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="561.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,114 samples, 2.62%)</title><rect x="559.1" y="307.0" width="30.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.1" y="318.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,114 samples, 2.62%)</title><rect x="559.1" y="291.0" width="30.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="562.1" y="302.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,114 samples, 2.62%)</title><rect x="559.1" y="275.0" width="30.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.1" y="286.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,114 samples, 2.62%)</title><rect x="559.1" y="259.0" width="30.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="562.1" y="270.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,217 samples, 1.81%)</title><rect x="559.1" y="243.0" width="21.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="562.1" y="254.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,217 samples, 1.81%)</title><rect x="559.1" y="227.0" width="21.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.1" y="238.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,217 samples, 1.81%)</title><rect x="559.1" y="211.0" width="21.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="562.1" y="222.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,217 samples, 1.81%)</title><rect x="559.1" y="195.0" width="21.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="562.1" y="206.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (254 samples, 0.11%)</title><rect x="559.1" y="179.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="562.1" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (254 samples, 0.11%)</title><rect x="559.1" y="163.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="562.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,079 samples, 0.46%)</title><rect x="560.3" y="179.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="563.3" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (527 samples, 0.23%)</title><rect x="560.3" y="163.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="563.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (527 samples, 0.23%)</title><rect x="560.3" y="147.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (527 samples, 0.23%)</title><rect x="560.3" y="131.0" width="2.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="563.3" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (552 samples, 0.24%)</title><rect x="563.0" y="163.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="566.0" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (552 samples, 0.24%)</title><rect x="563.0" y="147.0" width="2.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="566.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,051 samples, 0.45%)</title><rect x="565.8" y="179.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="568.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (530 samples, 0.23%)</title><rect x="565.8" y="163.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="568.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (530 samples, 0.23%)</title><rect x="565.8" y="147.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (530 samples, 0.23%)</title><rect x="565.8" y="131.0" width="2.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="568.8" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (521 samples, 0.22%)</title><rect x="568.5" y="163.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="571.5" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (521 samples, 0.22%)</title><rect x="568.5" y="147.0" width="2.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="571.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (554 samples, 0.24%)</title><rect x="571.1" y="179.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.1" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (554 samples, 0.24%)</title><rect x="571.1" y="163.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="574.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (554 samples, 0.24%)</title><rect x="571.1" y="147.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (554 samples, 0.24%)</title><rect x="571.1" y="131.0" width="2.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="574.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,073 samples, 0.46%)</title><rect x="573.9" y="179.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="576.9" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (529 samples, 0.23%)</title><rect x="573.9" y="163.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (529 samples, 0.23%)</title><rect x="573.9" y="147.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="576.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (529 samples, 0.23%)</title><rect x="573.9" y="131.0" width="2.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="576.9" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (544 samples, 0.23%)</title><rect x="576.6" y="163.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="579.6" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (544 samples, 0.23%)</title><rect x="576.6" y="147.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="579.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (206 samples, 0.09%)</title><rect x="579.3" y="179.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="582.3" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (206 samples, 0.09%)</title><rect x="579.3" y="163.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="582.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (1,897 samples, 0.81%)</title><rect x="580.4" y="243.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="583.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,897 samples, 0.81%)</title><rect x="580.4" y="227.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="583.4" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (1,897 samples, 0.81%)</title><rect x="580.4" y="211.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="583.4" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,897 samples, 0.81%)</title><rect x="580.4" y="195.0" width="9.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="583.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (1,897 samples, 0.81%)</title><rect x="580.4" y="179.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,897 samples, 0.81%)</title><rect x="580.4" y="163.0" width="9.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (1,897 samples, 0.81%)</title><rect x="580.4" y="147.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="583.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,897 samples, 0.81%)</title><rect x="580.4" y="131.0" width="9.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="583.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (1,897 samples, 0.81%)</title><rect x="580.4" y="115.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="583.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,897 samples, 0.81%)</title><rect x="580.4" y="99.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="583.4" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,774 samples, 0.76%)</title><rect x="580.4" y="83.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="583.4" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,774 samples, 0.76%)</title><rect x="580.4" y="67.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="583.4" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,774 samples, 0.76%)</title><rect x="580.4" y="51.0" width="8.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="583.4" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (123 samples, 0.05%)</title><rect x="589.3" y="83.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="592.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (123 samples, 0.05%)</title><rect x="589.3" y="67.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="592.3" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,516 samples, 0.65%)</title><rect x="590.0" y="371.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,485 samples, 0.64%)</title><rect x="590.1" y="355.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,485 samples, 0.64%)</title><rect x="590.1" y="339.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.1" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (550 samples, 0.24%)</title><rect x="590.1" y="323.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="593.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (550 samples, 0.24%)</title><rect x="590.1" y="307.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (550 samples, 0.24%)</title><rect x="590.1" y="291.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="593.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (550 samples, 0.24%)</title><rect x="590.1" y="275.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="593.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (550 samples, 0.24%)</title><rect x="590.1" y="259.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="593.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (550 samples, 0.24%)</title><rect x="590.1" y="243.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="593.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (550 samples, 0.24%)</title><rect x="590.1" y="227.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="593.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (550 samples, 0.24%)</title><rect x="590.1" y="211.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="593.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (550 samples, 0.24%)</title><rect x="590.1" y="195.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (550 samples, 0.24%)</title><rect x="590.1" y="179.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="593.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (550 samples, 0.24%)</title><rect x="590.1" y="163.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (550 samples, 0.24%)</title><rect x="590.1" y="147.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="593.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (550 samples, 0.24%)</title><rect x="590.1" y="131.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (550 samples, 0.24%)</title><rect x="590.1" y="115.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="593.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (550 samples, 0.24%)</title><rect x="590.1" y="99.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="593.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (498 samples, 0.21%)</title><rect x="590.1" y="83.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (498 samples, 0.21%)</title><rect x="590.1" y="67.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="593.1" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (498 samples, 0.21%)</title><rect x="590.1" y="51.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="593.1" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (52 samples, 0.02%)</title><rect x="592.6" y="83.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.6" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (52 samples, 0.02%)</title><rect x="592.6" y="67.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="595.6" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (935 samples, 0.40%)</title><rect x="592.9" y="323.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="595.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (935 samples, 0.40%)</title><rect x="592.9" y="307.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="595.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (935 samples, 0.40%)</title><rect x="592.9" y="291.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.9" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (935 samples, 0.40%)</title><rect x="592.9" y="275.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (935 samples, 0.40%)</title><rect x="592.9" y="259.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (935 samples, 0.40%)</title><rect x="592.9" y="243.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="595.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (568 samples, 0.24%)</title><rect x="592.9" y="227.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (568 samples, 0.24%)</title><rect x="592.9" y="211.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (568 samples, 0.24%)</title><rect x="592.9" y="195.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="595.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (568 samples, 0.24%)</title><rect x="592.9" y="179.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="595.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (152 samples, 0.07%)</title><rect x="593.1" y="163.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (75 samples, 0.03%)</title><rect x="593.1" y="147.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="596.1" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (75 samples, 0.03%)</title><rect x="593.1" y="131.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="596.1" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (75 samples, 0.03%)</title><rect x="593.1" y="115.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="596.1" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (77 samples, 0.03%)</title><rect x="593.5" y="147.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="596.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (77 samples, 0.03%)</title><rect x="593.5" y="131.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="596.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (144 samples, 0.06%)</title><rect x="593.9" y="163.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="596.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (76 samples, 0.03%)</title><rect x="593.9" y="147.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="596.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (76 samples, 0.03%)</title><rect x="593.9" y="131.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="596.9" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (76 samples, 0.03%)</title><rect x="593.9" y="115.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="596.9" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (68 samples, 0.03%)</title><rect x="594.3" y="147.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="597.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (68 samples, 0.03%)</title><rect x="594.3" y="131.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="597.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (63 samples, 0.03%)</title><rect x="594.6" y="163.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="597.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (63 samples, 0.03%)</title><rect x="594.6" y="147.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="597.6" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (63 samples, 0.03%)</title><rect x="594.6" y="131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="597.6" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (63 samples, 0.03%)</title><rect x="594.6" y="115.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="597.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (135 samples, 0.06%)</title><rect x="594.9" y="163.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="597.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (64 samples, 0.03%)</title><rect x="594.9" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (64 samples, 0.03%)</title><rect x="594.9" y="131.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="597.9" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (64 samples, 0.03%)</title><rect x="594.9" y="115.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="597.9" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (71 samples, 0.03%)</title><rect x="595.3" y="147.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="598.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (71 samples, 0.03%)</title><rect x="595.3" y="131.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="598.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (367 samples, 0.16%)</title><rect x="595.8" y="227.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (367 samples, 0.16%)</title><rect x="595.8" y="211.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="598.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (367 samples, 0.16%)</title><rect x="595.8" y="195.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="598.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (367 samples, 0.16%)</title><rect x="595.8" y="179.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="598.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (367 samples, 0.16%)</title><rect x="595.8" y="163.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="598.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (367 samples, 0.16%)</title><rect x="595.8" y="147.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="598.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (367 samples, 0.16%)</title><rect x="595.8" y="131.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="598.8" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (367 samples, 0.16%)</title><rect x="595.8" y="115.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="598.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (367 samples, 0.16%)</title><rect x="595.8" y="99.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="598.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (367 samples, 0.16%)</title><rect x="595.8" y="83.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (347 samples, 0.15%)</title><rect x="595.8" y="67.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="598.8" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (347 samples, 0.15%)</title><rect x="595.8" y="51.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="598.8" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (347 samples, 0.15%)</title><rect x="595.8" y="35.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="598.8" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (62 samples, 0.03%)</title><rect x="597.6" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (62 samples, 0.03%)</title><rect x="597.6" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (62 samples, 0.03%)</title><rect x="597.6" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="600.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (333 samples, 0.14%)</title><rect x="597.9" y="499.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="600.9" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (94 samples, 0.04%)</title><rect x="598.2" y="483.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.2" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (94 samples, 0.04%)</title><rect x="598.2" y="467.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="601.2" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (190 samples, 0.08%)</title><rect x="598.7" y="483.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.7" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (190 samples, 0.08%)</title><rect x="598.7" y="467.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="601.7" y="478.0"></text>
</g>
<g>
<title>char[] (100 samples, 0.04%)</title><rect x="598.7" y="451.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="601.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (57 samples, 0.02%)</title><rect x="599.3" y="451.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="602.3" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (57 samples, 0.02%)</title><rect x="599.3" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="602.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (57 samples, 0.02%)</title><rect x="599.3" y="419.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="602.3" y="430.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.02%)</title><rect x="599.3" y="403.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="602.3" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (139 samples, 0.06%)</title><rect x="599.6" y="499.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="602.6" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (139 samples, 0.06%)</title><rect x="599.6" y="483.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.6" y="494.0"></text>
</g>
<g>
<title>char[] (70 samples, 0.03%)</title><rect x="599.6" y="467.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="602.6" y="478.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=1800] (58,223 samples, 24.95%)</title><rect x="600.3" y="579.0" width="294.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="603.3" y="590.0">[NIO Selector #2 tid=1800]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (58,223 samples, 24.95%)</title><rect x="600.3" y="563.0" width="294.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.3" y="574.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (58,221 samples, 24.95%)</title><rect x="600.3" y="547.0" width="294.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="603.3" y="558.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (58,221 samples, 24.95%)</title><rect x="600.3" y="531.0" width="294.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="603.3" y="542.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (58,221 samples, 24.95%)</title><rect x="600.3" y="515.0" width="294.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="603.3" y="526.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (57,309 samples, 24.56%)</title><rect x="600.3" y="499.0" width="289.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.3" y="510.0">one/nio/http/HttpSession.handleParsedRe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (57,309 samples, 24.56%)</title><rect x="600.3" y="483.0" width="289.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.3" y="494.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (57,247 samples, 24.53%)</title><rect x="600.3" y="467.0" width="289.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="603.3" y="478.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (159 samples, 0.07%)</title><rect x="600.3" y="451.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.3" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (159 samples, 0.07%)</title><rect x="600.3" y="435.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="603.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (110 samples, 0.05%)</title><rect x="600.3" y="419.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.3" y="430.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (110 samples, 0.05%)</title><rect x="600.3" y="403.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="603.3" y="414.0"></text>
</g>
<g>
<title>byte[] (110 samples, 0.05%)</title><rect x="600.3" y="387.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="603.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (52 samples, 0.02%)</title><rect x="601.1" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 0.02%)</title><rect x="601.1" y="435.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.02%)</title><rect x="601.1" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="604.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (57,036 samples, 24.44%)</title><rect x="601.4" y="451.0" width="288.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="604.4" y="462.0">ru/mail/polis/service/shakhmin/SimpleHt..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (69 samples, 0.03%)</title><rect x="602.0" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="605.0" y="446.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (69 samples, 0.03%)</title><rect x="602.0" y="419.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="605.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (145 samples, 0.06%)</title><rect x="602.4" y="435.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="605.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (110 samples, 0.05%)</title><rect x="602.5" y="419.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="605.5" y="430.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.02%)</title><rect x="602.5" y="403.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="605.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (56,705 samples, 24.30%)</title><rect x="603.1" y="435.0" width="286.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="606.1" y="446.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1,562 samples, 0.67%)</title><rect x="603.1" y="419.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1,562 samples, 0.67%)</title><rect x="603.1" y="403.0" width="7.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1,562 samples, 0.67%)</title><rect x="603.1" y="387.0" width="7.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1,562 samples, 0.67%)</title><rect x="603.1" y="371.0" width="7.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,562 samples, 0.67%)</title><rect x="603.1" y="355.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,422 samples, 0.61%)</title><rect x="603.1" y="339.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.1" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (489 samples, 0.21%)</title><rect x="603.1" y="323.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (489 samples, 0.21%)</title><rect x="603.1" y="307.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (489 samples, 0.21%)</title><rect x="603.1" y="291.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (489 samples, 0.21%)</title><rect x="603.1" y="275.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (489 samples, 0.21%)</title><rect x="603.1" y="259.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (489 samples, 0.21%)</title><rect x="603.1" y="243.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (489 samples, 0.21%)</title><rect x="603.1" y="227.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (489 samples, 0.21%)</title><rect x="603.1" y="211.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (489 samples, 0.21%)</title><rect x="603.1" y="195.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (489 samples, 0.21%)</title><rect x="603.1" y="179.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (489 samples, 0.21%)</title><rect x="603.1" y="163.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (489 samples, 0.21%)</title><rect x="603.1" y="147.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="606.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (489 samples, 0.21%)</title><rect x="603.1" y="131.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (489 samples, 0.21%)</title><rect x="603.1" y="115.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="606.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (489 samples, 0.21%)</title><rect x="603.1" y="99.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (432 samples, 0.19%)</title><rect x="603.1" y="83.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (432 samples, 0.19%)</title><rect x="603.1" y="67.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.1" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (432 samples, 0.19%)</title><rect x="603.1" y="51.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="606.1" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (57 samples, 0.02%)</title><rect x="605.3" y="83.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.3" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (57 samples, 0.02%)</title><rect x="605.3" y="67.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="608.3" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (932 samples, 0.40%)</title><rect x="605.6" y="323.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="608.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (932 samples, 0.40%)</title><rect x="605.6" y="307.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="608.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (932 samples, 0.40%)</title><rect x="605.6" y="291.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="608.6" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (932 samples, 0.40%)</title><rect x="605.6" y="275.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (932 samples, 0.40%)</title><rect x="605.6" y="259.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (932 samples, 0.40%)</title><rect x="605.6" y="243.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="608.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (577 samples, 0.25%)</title><rect x="605.6" y="227.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (577 samples, 0.25%)</title><rect x="605.6" y="211.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="608.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (577 samples, 0.25%)</title><rect x="605.6" y="195.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="608.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (577 samples, 0.25%)</title><rect x="605.6" y="179.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="608.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (52 samples, 0.02%)</title><rect x="605.6" y="163.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.6" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (52 samples, 0.02%)</title><rect x="605.6" y="147.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="608.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (144 samples, 0.06%)</title><rect x="605.8" y="163.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="608.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (79 samples, 0.03%)</title><rect x="605.8" y="147.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="608.8" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (79 samples, 0.03%)</title><rect x="605.8" y="131.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="608.8" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (79 samples, 0.03%)</title><rect x="605.8" y="115.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="608.8" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (65 samples, 0.03%)</title><rect x="606.2" y="147.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="609.2" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (65 samples, 0.03%)</title><rect x="606.2" y="131.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="609.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (145 samples, 0.06%)</title><rect x="606.6" y="163.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (79 samples, 0.03%)</title><rect x="606.6" y="147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="609.6" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (79 samples, 0.03%)</title><rect x="606.6" y="131.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="609.6" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (79 samples, 0.03%)</title><rect x="606.6" y="115.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="609.6" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (66 samples, 0.03%)</title><rect x="607.0" y="147.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="610.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (66 samples, 0.03%)</title><rect x="607.0" y="131.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="610.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (67 samples, 0.03%)</title><rect x="607.3" y="163.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="610.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (67 samples, 0.03%)</title><rect x="607.3" y="147.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="610.3" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (67 samples, 0.03%)</title><rect x="607.3" y="131.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="610.3" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (67 samples, 0.03%)</title><rect x="607.3" y="115.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="610.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (154 samples, 0.07%)</title><rect x="607.6" y="163.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (72 samples, 0.03%)</title><rect x="607.6" y="147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="610.6" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (72 samples, 0.03%)</title><rect x="607.6" y="131.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="610.6" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (72 samples, 0.03%)</title><rect x="607.6" y="115.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="610.6" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (82 samples, 0.04%)</title><rect x="608.0" y="147.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="611.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (82 samples, 0.04%)</title><rect x="608.0" y="131.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="611.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (355 samples, 0.15%)</title><rect x="608.5" y="227.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="611.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (355 samples, 0.15%)</title><rect x="608.5" y="211.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="611.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (355 samples, 0.15%)</title><rect x="608.5" y="195.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="611.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (355 samples, 0.15%)</title><rect x="608.5" y="179.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="611.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (355 samples, 0.15%)</title><rect x="608.5" y="163.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (355 samples, 0.15%)</title><rect x="608.5" y="147.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (355 samples, 0.15%)</title><rect x="608.5" y="131.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="611.5" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (355 samples, 0.15%)</title><rect x="608.5" y="115.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (355 samples, 0.15%)</title><rect x="608.5" y="99.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="611.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (355 samples, 0.15%)</title><rect x="608.5" y="83.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.5" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (338 samples, 0.14%)</title><rect x="608.5" y="67.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="611.5" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (338 samples, 0.14%)</title><rect x="608.5" y="51.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="611.5" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (338 samples, 0.14%)</title><rect x="608.5" y="35.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="611.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$64/1686171753.apply (140 samples, 0.06%)</title><rect x="610.3" y="339.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (140 samples, 0.06%)</title><rect x="610.3" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="613.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (139 samples, 0.06%)</title><rect x="610.3" y="307.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (139 samples, 0.06%)</title><rect x="610.3" y="291.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="613.3" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (139 samples, 0.06%)</title><rect x="610.3" y="275.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="613.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (186 samples, 0.08%)</title><rect x="611.0" y="419.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (186 samples, 0.08%)</title><rect x="611.0" y="403.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="614.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$$Lambda$71/424703209.apply (186 samples, 0.08%)</title><rect x="611.0" y="387.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="614.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.lambda$iterator$0 (186 samples, 0.08%)</title><rect x="611.0" y="371.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="614.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (94 samples, 0.04%)</title><rect x="611.1" y="355.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="614.1" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (94 samples, 0.04%)</title><rect x="611.1" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="614.1" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (94 samples, 0.04%)</title><rect x="611.1" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="614.1" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (94 samples, 0.04%)</title><rect x="611.1" y="307.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="614.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (61 samples, 0.03%)</title><rect x="611.6" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="614.6" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (61 samples, 0.03%)</title><rect x="611.6" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="614.6" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (61 samples, 0.03%)</title><rect x="611.6" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="614.6" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (61 samples, 0.03%)</title><rect x="611.6" y="307.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="614.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (64 samples, 0.03%)</title><rect x="611.9" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="614.9" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (64 samples, 0.03%)</title><rect x="611.9" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="614.9" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (64 samples, 0.03%)</title><rect x="611.9" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.9" y="398.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (64 samples, 0.03%)</title><rect x="611.9" y="371.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="614.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (71 samples, 0.03%)</title><rect x="612.2" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="615.2" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (71 samples, 0.03%)</title><rect x="612.2" y="403.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.2" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (71 samples, 0.03%)</title><rect x="612.2" y="387.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="615.2" y="398.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (71 samples, 0.03%)</title><rect x="612.2" y="371.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="615.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (54,822 samples, 23.49%)</title><rect x="612.6" y="419.0" width="277.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="615.6" y="430.0">ru/mail/polis/dao/shakhmin/LSMDao.ite..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (54,822 samples, 23.49%)</title><rect x="612.6" y="403.0" width="277.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="615.6" y="414.0">ru/mail/polis/dao/shakhmin/LSMDao.row..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.combineTables (46,484 samples, 19.92%)</title><rect x="612.6" y="387.0" width="235.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="615.6" y="398.0">ru/mail/polis/dao/shakhmin/Tabl..</text>
</g>
<g>
<title>java/util/ArrayList.add (188 samples, 0.08%)</title><rect x="612.7" y="371.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="615.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (188 samples, 0.08%)</title><rect x="612.7" y="355.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="615.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (188 samples, 0.08%)</title><rect x="612.7" y="339.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (188 samples, 0.08%)</title><rect x="612.7" y="323.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="615.7" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (188 samples, 0.08%)</title><rect x="612.7" y="307.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.7" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (182 samples, 0.08%)</title><rect x="612.7" y="291.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="615.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (527 samples, 0.23%)</title><rect x="613.9" y="371.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="616.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.combineTables (286 samples, 0.12%)</title><rect x="613.9" y="355.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="616.9" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (65 samples, 0.03%)</title><rect x="614.1" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="617.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (56 samples, 0.02%)</title><rect x="614.5" y="339.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="617.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (56 samples, 0.02%)</title><rect x="614.5" y="323.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.5" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (56 samples, 0.02%)</title><rect x="614.5" y="307.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="617.5" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (56 samples, 0.02%)</title><rect x="614.5" y="291.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="617.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (56 samples, 0.02%)</title><rect x="614.5" y="275.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (55 samples, 0.02%)</title><rect x="614.5" y="259.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="617.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (119 samples, 0.05%)</title><rect x="614.7" y="339.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="617.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.transformRows (237 samples, 0.10%)</title><rect x="615.4" y="355.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="618.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (50 samples, 0.02%)</title><rect x="615.4" y="339.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="618.4" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (50 samples, 0.02%)</title><rect x="615.4" y="323.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="618.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (157 samples, 0.07%)</title><rect x="615.6" y="339.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="618.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (116 samples, 0.05%)</title><rect x="615.8" y="323.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="618.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (45,704 samples, 19.58%)</title><rect x="616.5" y="371.0" width="231.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="619.5" y="382.0">ru/mail/polis/dao/shakhmin/SSTa..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (368 samples, 0.16%)</title><rect x="616.5" y="355.0" width="1.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="619.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (45,336 samples, 19.43%)</title><rect x="618.4" y="355.0" width="229.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.4" y="366.0">ru/mail/polis/dao/shakhmin/SST..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (45,336 samples, 19.43%)</title><rect x="618.4" y="339.0" width="229.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="621.4" y="350.0">ru/mail/polis/dao/shakhmin/SST..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (22,426 samples, 9.61%)</title><rect x="618.4" y="323.0" width="113.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="621.4" y="334.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,134 samples, 4.77%)</title><rect x="618.4" y="307.0" width="56.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.4" y="318.0">java/n..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,134 samples, 4.77%)</title><rect x="618.4" y="291.0" width="56.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="621.4" y="302.0">java/n..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,134 samples, 4.77%)</title><rect x="618.4" y="275.0" width="56.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="621.4" y="286.0">java.n..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,292 samples, 4.84%)</title><rect x="674.7" y="307.0" width="57.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.7" y="318.0">java/n..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,292 samples, 4.84%)</title><rect x="674.7" y="291.0" width="57.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="677.7" y="302.0">java.n..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (22,910 samples, 9.82%)</title><rect x="731.8" y="323.0" width="115.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.8" y="334.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,427 samples, 4.90%)</title><rect x="731.8" y="307.0" width="57.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.8" y="318.0">java/n..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,427 samples, 4.90%)</title><rect x="731.8" y="291.0" width="57.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="734.8" y="302.0">java/n..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,427 samples, 4.90%)</title><rect x="731.8" y="275.0" width="57.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="734.8" y="286.0">java.n..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,483 samples, 4.92%)</title><rect x="789.6" y="307.0" width="58.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="792.6" y="318.0">java/n..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,483 samples, 4.92%)</title><rect x="789.6" y="291.0" width="58.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="792.6" y="302.0">java.n..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.transformRows (8,338 samples, 3.57%)</title><rect x="847.6" y="387.0" width="42.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.6" y="398.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,791 samples, 2.91%)</title><rect x="847.8" y="371.0" width="34.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.8" y="382.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,776 samples, 2.90%)</title><rect x="847.9" y="355.0" width="34.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.9" y="366.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (109 samples, 0.05%)</title><rect x="848.0" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (109 samples, 0.05%)</title><rect x="848.0" y="323.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.0" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (109 samples, 0.05%)</title><rect x="848.0" y="307.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (109 samples, 0.05%)</title><rect x="848.0" y="291.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$64/1686171753.apply (109 samples, 0.05%)</title><rect x="848.0" y="275.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="851.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (109 samples, 0.05%)</title><rect x="848.0" y="259.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.0" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (109 samples, 0.05%)</title><rect x="848.0" y="243.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.0" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (109 samples, 0.05%)</title><rect x="848.0" y="227.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="851.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (224 samples, 0.10%)</title><rect x="848.5" y="339.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="851.5" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (224 samples, 0.10%)</title><rect x="848.5" y="323.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="851.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,355 samples, 2.72%)</title><rect x="850.0" y="339.0" width="32.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.0" y="350.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,355 samples, 2.72%)</title><rect x="850.0" y="323.0" width="32.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="853.0" y="334.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (96 samples, 0.04%)</title><rect x="850.0" y="307.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="853.0" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (96 samples, 0.04%)</title><rect x="850.0" y="291.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="853.0" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (96 samples, 0.04%)</title><rect x="850.0" y="275.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="853.0" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,259 samples, 2.68%)</title><rect x="850.5" y="307.0" width="31.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="853.5" y="318.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,259 samples, 2.68%)</title><rect x="850.5" y="291.0" width="31.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="853.5" y="302.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,259 samples, 2.68%)</title><rect x="850.5" y="275.0" width="31.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="853.5" y="286.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,259 samples, 2.68%)</title><rect x="850.5" y="259.0" width="31.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="853.5" y="270.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,288 samples, 1.84%)</title><rect x="850.5" y="243.0" width="21.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="853.5" y="254.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,288 samples, 1.84%)</title><rect x="850.5" y="227.0" width="21.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.5" y="238.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,288 samples, 1.84%)</title><rect x="850.5" y="211.0" width="21.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="853.5" y="222.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,288 samples, 1.84%)</title><rect x="850.5" y="195.0" width="21.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.5" y="206.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (287 samples, 0.12%)</title><rect x="850.5" y="179.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="853.5" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (287 samples, 0.12%)</title><rect x="850.5" y="163.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="853.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,074 samples, 0.46%)</title><rect x="852.0" y="179.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.0" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (573 samples, 0.25%)</title><rect x="852.0" y="163.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="855.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (573 samples, 0.25%)</title><rect x="852.0" y="147.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (573 samples, 0.25%)</title><rect x="852.0" y="131.0" width="2.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="855.0" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (501 samples, 0.21%)</title><rect x="854.9" y="163.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="857.9" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (501 samples, 0.21%)</title><rect x="854.9" y="147.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="857.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,078 samples, 0.46%)</title><rect x="857.4" y="179.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="860.4" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (558 samples, 0.24%)</title><rect x="857.4" y="163.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="860.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (558 samples, 0.24%)</title><rect x="857.4" y="147.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="860.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (558 samples, 0.24%)</title><rect x="857.4" y="131.0" width="2.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="860.4" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (520 samples, 0.22%)</title><rect x="860.2" y="163.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="863.2" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (520 samples, 0.22%)</title><rect x="860.2" y="147.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="863.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (559 samples, 0.24%)</title><rect x="862.8" y="179.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="865.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (559 samples, 0.24%)</title><rect x="862.8" y="163.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="865.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (559 samples, 0.24%)</title><rect x="862.8" y="147.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="865.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (559 samples, 0.24%)</title><rect x="862.8" y="131.0" width="2.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="865.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,072 samples, 0.46%)</title><rect x="865.7" y="179.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="868.7" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (513 samples, 0.22%)</title><rect x="865.7" y="163.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="868.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (513 samples, 0.22%)</title><rect x="865.7" y="147.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="868.7" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (513 samples, 0.22%)</title><rect x="865.7" y="131.0" width="2.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="868.7" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (559 samples, 0.24%)</title><rect x="868.3" y="163.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="871.3" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (559 samples, 0.24%)</title><rect x="868.3" y="147.0" width="2.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="871.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (218 samples, 0.09%)</title><rect x="871.1" y="179.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="874.1" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (218 samples, 0.09%)</title><rect x="871.1" y="163.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="874.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (1,971 samples, 0.84%)</title><rect x="872.2" y="243.0" width="10.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="875.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,971 samples, 0.84%)</title><rect x="872.2" y="227.0" width="10.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="875.2" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (1,971 samples, 0.84%)</title><rect x="872.2" y="211.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="875.2" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,971 samples, 0.84%)</title><rect x="872.2" y="195.0" width="10.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="875.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (1,971 samples, 0.84%)</title><rect x="872.2" y="179.0" width="10.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="875.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,971 samples, 0.84%)</title><rect x="872.2" y="163.0" width="10.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (1,971 samples, 0.84%)</title><rect x="872.2" y="147.0" width="10.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,971 samples, 0.84%)</title><rect x="872.2" y="131.0" width="10.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="875.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (1,971 samples, 0.84%)</title><rect x="872.2" y="115.0" width="10.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="875.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,971 samples, 0.84%)</title><rect x="872.2" y="99.0" width="10.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="875.2" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,813 samples, 0.78%)</title><rect x="872.2" y="83.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="875.2" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,813 samples, 0.78%)</title><rect x="872.2" y="67.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="875.2" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,813 samples, 0.78%)</title><rect x="872.2" y="51.0" width="9.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="875.2" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (158 samples, 0.07%)</title><rect x="881.4" y="83.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="884.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (158 samples, 0.07%)</title><rect x="881.4" y="67.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="884.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,512 samples, 0.65%)</title><rect x="882.2" y="371.0" width="7.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="885.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,495 samples, 0.64%)</title><rect x="882.2" y="355.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="885.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,495 samples, 0.64%)</title><rect x="882.2" y="339.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="885.2" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (543 samples, 0.23%)</title><rect x="882.2" y="323.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="885.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (543 samples, 0.23%)</title><rect x="882.2" y="307.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="885.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (543 samples, 0.23%)</title><rect x="882.2" y="291.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="885.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (543 samples, 0.23%)</title><rect x="882.2" y="275.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="885.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (543 samples, 0.23%)</title><rect x="882.2" y="259.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="885.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (543 samples, 0.23%)</title><rect x="882.2" y="243.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="885.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (543 samples, 0.23%)</title><rect x="882.2" y="227.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="885.2" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (543 samples, 0.23%)</title><rect x="882.2" y="211.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="885.2" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (543 samples, 0.23%)</title><rect x="882.2" y="195.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="885.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (543 samples, 0.23%)</title><rect x="882.2" y="179.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="885.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (543 samples, 0.23%)</title><rect x="882.2" y="163.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="885.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (543 samples, 0.23%)</title><rect x="882.2" y="147.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="885.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (543 samples, 0.23%)</title><rect x="882.2" y="131.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="885.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (543 samples, 0.23%)</title><rect x="882.2" y="115.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="885.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (543 samples, 0.23%)</title><rect x="882.2" y="99.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="885.2" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (509 samples, 0.22%)</title><rect x="882.2" y="83.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="885.2" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (509 samples, 0.22%)</title><rect x="882.2" y="67.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="885.2" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (509 samples, 0.22%)</title><rect x="882.2" y="51.0" width="2.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="885.2" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (952 samples, 0.41%)</title><rect x="885.0" y="323.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="888.0" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (952 samples, 0.41%)</title><rect x="885.0" y="307.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="888.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (952 samples, 0.41%)</title><rect x="885.0" y="291.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="888.0" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (952 samples, 0.41%)</title><rect x="885.0" y="275.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="888.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (952 samples, 0.41%)</title><rect x="885.0" y="259.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="888.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (952 samples, 0.41%)</title><rect x="885.0" y="243.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="888.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (576 samples, 0.25%)</title><rect x="885.0" y="227.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="888.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (576 samples, 0.25%)</title><rect x="885.0" y="211.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="888.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (576 samples, 0.25%)</title><rect x="885.0" y="195.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="888.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (576 samples, 0.25%)</title><rect x="885.0" y="179.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="888.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (137 samples, 0.06%)</title><rect x="885.2" y="163.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="888.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (68 samples, 0.03%)</title><rect x="885.2" y="147.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="888.2" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (68 samples, 0.03%)</title><rect x="885.2" y="131.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="888.2" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (68 samples, 0.03%)</title><rect x="885.2" y="115.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="888.2" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (69 samples, 0.03%)</title><rect x="885.5" y="147.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="888.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (69 samples, 0.03%)</title><rect x="885.5" y="131.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="888.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (160 samples, 0.07%)</title><rect x="885.9" y="163.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="888.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (73 samples, 0.03%)</title><rect x="885.9" y="147.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="888.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (73 samples, 0.03%)</title><rect x="885.9" y="131.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="888.9" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (73 samples, 0.03%)</title><rect x="885.9" y="115.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="888.9" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (87 samples, 0.04%)</title><rect x="886.3" y="147.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="889.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (87 samples, 0.04%)</title><rect x="886.3" y="131.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="889.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (75 samples, 0.03%)</title><rect x="886.7" y="163.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="889.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (75 samples, 0.03%)</title><rect x="886.7" y="147.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="889.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (75 samples, 0.03%)</title><rect x="886.7" y="131.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="889.7" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (75 samples, 0.03%)</title><rect x="886.7" y="115.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="889.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (141 samples, 0.06%)</title><rect x="887.1" y="163.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="890.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (57 samples, 0.02%)</title><rect x="887.1" y="147.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="890.1" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (57 samples, 0.02%)</title><rect x="887.1" y="131.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="890.1" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (57 samples, 0.02%)</title><rect x="887.1" y="115.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="890.1" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (84 samples, 0.04%)</title><rect x="887.4" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="890.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (84 samples, 0.04%)</title><rect x="887.4" y="131.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="890.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (376 samples, 0.16%)</title><rect x="887.9" y="227.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="890.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (376 samples, 0.16%)</title><rect x="887.9" y="211.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.9" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (376 samples, 0.16%)</title><rect x="887.9" y="195.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.9" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (376 samples, 0.16%)</title><rect x="887.9" y="179.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="890.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (376 samples, 0.16%)</title><rect x="887.9" y="163.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="890.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (376 samples, 0.16%)</title><rect x="887.9" y="147.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="890.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (376 samples, 0.16%)</title><rect x="887.9" y="131.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="890.9" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (376 samples, 0.16%)</title><rect x="887.9" y="115.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="890.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (376 samples, 0.16%)</title><rect x="887.9" y="99.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (376 samples, 0.16%)</title><rect x="887.9" y="83.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.9" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (354 samples, 0.15%)</title><rect x="887.9" y="67.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.9" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (354 samples, 0.15%)</title><rect x="887.9" y="51.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="890.9" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (354 samples, 0.15%)</title><rect x="887.9" y="35.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="890.9" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (62 samples, 0.03%)</title><rect x="889.8" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="892.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (62 samples, 0.03%)</title><rect x="889.8" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="892.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (62 samples, 0.03%)</title><rect x="889.8" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="892.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (773 samples, 0.33%)</title><rect x="890.1" y="499.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="893.1" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (108 samples, 0.05%)</title><rect x="890.4" y="483.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="893.4" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (108 samples, 0.05%)</title><rect x="890.4" y="467.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="893.4" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (619 samples, 0.27%)</title><rect x="890.9" y="483.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="893.9" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (619 samples, 0.27%)</title><rect x="890.9" y="467.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="893.9" y="478.0"></text>
</g>
<g>
<title>char[] (528 samples, 0.23%)</title><rect x="890.9" y="451.0" width="2.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="893.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (63 samples, 0.03%)</title><rect x="893.7" y="451.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="896.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (63 samples, 0.03%)</title><rect x="893.7" y="435.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="896.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (63 samples, 0.03%)</title><rect x="893.7" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="896.7" y="430.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.03%)</title><rect x="893.7" y="403.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="896.7" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (139 samples, 0.06%)</title><rect x="894.0" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="897.0" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (139 samples, 0.06%)</title><rect x="894.0" y="483.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="897.0" y="494.0"></text>
</g>
<g>
<title>char[] (70 samples, 0.03%)</title><rect x="894.0" y="467.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="897.0" y="478.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=1801] (58,392 samples, 25.02%)</title><rect x="894.7" y="579.0" width="295.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="897.7" y="590.0">[NIO Selector #3 tid=1801]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (58,392 samples, 25.02%)</title><rect x="894.7" y="563.0" width="295.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.7" y="574.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (487 samples, 0.21%)</title><rect x="894.7" y="547.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="897.7" y="558.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (487 samples, 0.21%)</title><rect x="894.7" y="531.0" width="2.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="897.7" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (57,905 samples, 24.81%)</title><rect x="897.2" y="547.0" width="292.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="900.2" y="558.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (57,905 samples, 24.81%)</title><rect x="897.2" y="531.0" width="292.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.2" y="542.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (57,905 samples, 24.81%)</title><rect x="897.2" y="515.0" width="292.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="900.2" y="526.0">one/nio/http/HttpSession.processHttpBuf..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (57,456 samples, 24.62%)</title><rect x="897.2" y="499.0" width="290.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="900.2" y="510.0">one/nio/http/HttpSession.handleParsedRe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (57,456 samples, 24.62%)</title><rect x="897.2" y="483.0" width="290.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.2" y="494.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (57,394 samples, 24.59%)</title><rect x="897.2" y="467.0" width="290.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="900.2" y="478.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (144 samples, 0.06%)</title><rect x="897.2" y="451.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="900.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (144 samples, 0.06%)</title><rect x="897.2" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="900.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (109 samples, 0.05%)</title><rect x="897.2" y="419.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.2" y="430.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (109 samples, 0.05%)</title><rect x="897.2" y="403.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="900.2" y="414.0"></text>
</g>
<g>
<title>byte[] (109 samples, 0.05%)</title><rect x="897.2" y="387.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="900.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (63 samples, 0.03%)</title><rect x="897.9" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="900.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (63 samples, 0.03%)</title><rect x="897.9" y="435.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="900.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (63 samples, 0.03%)</title><rect x="897.9" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/SimpleHttpServer.entity (57,187 samples, 24.50%)</title><rect x="898.2" y="451.0" width="289.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.2" y="462.0">ru/mail/polis/service/shakhmin/SimpleHt..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (70 samples, 0.03%)</title><rect x="898.9" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="901.9" y="446.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (70 samples, 0.03%)</title><rect x="898.9" y="419.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="901.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (130 samples, 0.06%)</title><rect x="899.3" y="435.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="902.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (102 samples, 0.04%)</title><rect x="899.4" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="902.4" y="430.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.02%)</title><rect x="899.4" y="403.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="902.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (56,854 samples, 24.36%)</title><rect x="899.9" y="435.0" width="287.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="902.9" y="446.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (1,674 samples, 0.72%)</title><rect x="899.9" y="419.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="902.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1,674 samples, 0.72%)</title><rect x="899.9" y="403.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="902.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1,674 samples, 0.72%)</title><rect x="899.9" y="387.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="902.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1,674 samples, 0.72%)</title><rect x="899.9" y="371.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="902.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1,674 samples, 0.72%)</title><rect x="899.9" y="355.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="902.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,515 samples, 0.65%)</title><rect x="899.9" y="339.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="902.9" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (538 samples, 0.23%)</title><rect x="899.9" y="323.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="902.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (538 samples, 0.23%)</title><rect x="899.9" y="307.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="902.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (538 samples, 0.23%)</title><rect x="899.9" y="291.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="902.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (538 samples, 0.23%)</title><rect x="899.9" y="275.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="902.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (538 samples, 0.23%)</title><rect x="899.9" y="259.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (538 samples, 0.23%)</title><rect x="899.9" y="243.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="902.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (538 samples, 0.23%)</title><rect x="899.9" y="227.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="902.9" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (538 samples, 0.23%)</title><rect x="899.9" y="211.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="902.9" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (538 samples, 0.23%)</title><rect x="899.9" y="195.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="902.9" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (538 samples, 0.23%)</title><rect x="899.9" y="179.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="902.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (538 samples, 0.23%)</title><rect x="899.9" y="163.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="902.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (538 samples, 0.23%)</title><rect x="899.9" y="147.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (538 samples, 0.23%)</title><rect x="899.9" y="131.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="902.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (538 samples, 0.23%)</title><rect x="899.9" y="115.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="902.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (538 samples, 0.23%)</title><rect x="899.9" y="99.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="902.9" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (487 samples, 0.21%)</title><rect x="899.9" y="83.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.9" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (487 samples, 0.21%)</title><rect x="899.9" y="67.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="902.9" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (487 samples, 0.21%)</title><rect x="899.9" y="51.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="902.9" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (51 samples, 0.02%)</title><rect x="902.4" y="83.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="905.4" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (51 samples, 0.02%)</title><rect x="902.4" y="67.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="905.4" y="78.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (977 samples, 0.42%)</title><rect x="902.6" y="323.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (977 samples, 0.42%)</title><rect x="902.6" y="307.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (977 samples, 0.42%)</title><rect x="902.6" y="291.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.6" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (977 samples, 0.42%)</title><rect x="902.6" y="275.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (977 samples, 0.42%)</title><rect x="902.6" y="259.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="905.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (977 samples, 0.42%)</title><rect x="902.6" y="243.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="905.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (575 samples, 0.25%)</title><rect x="902.6" y="227.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="905.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (575 samples, 0.25%)</title><rect x="902.6" y="211.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="905.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (575 samples, 0.25%)</title><rect x="902.6" y="195.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="905.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (575 samples, 0.25%)</title><rect x="902.6" y="179.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="905.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (148 samples, 0.06%)</title><rect x="902.9" y="163.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="905.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (75 samples, 0.03%)</title><rect x="902.9" y="147.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (75 samples, 0.03%)</title><rect x="902.9" y="131.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.9" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (75 samples, 0.03%)</title><rect x="902.9" y="115.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="905.9" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (73 samples, 0.03%)</title><rect x="903.2" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="906.2" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (73 samples, 0.03%)</title><rect x="903.2" y="131.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="906.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (142 samples, 0.06%)</title><rect x="903.6" y="163.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (73 samples, 0.03%)</title><rect x="903.6" y="147.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="906.6" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (73 samples, 0.03%)</title><rect x="903.6" y="131.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="906.6" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (73 samples, 0.03%)</title><rect x="903.6" y="115.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="906.6" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (69 samples, 0.03%)</title><rect x="904.0" y="147.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="907.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (69 samples, 0.03%)</title><rect x="904.0" y="131.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="907.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (78 samples, 0.03%)</title><rect x="904.3" y="163.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (78 samples, 0.03%)</title><rect x="904.3" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.3" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (78 samples, 0.03%)</title><rect x="904.3" y="131.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="907.3" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (78 samples, 0.03%)</title><rect x="904.3" y="115.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="907.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (132 samples, 0.06%)</title><rect x="904.7" y="163.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="907.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (67 samples, 0.03%)</title><rect x="904.7" y="147.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="907.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (67 samples, 0.03%)</title><rect x="904.7" y="131.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="907.7" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (67 samples, 0.03%)</title><rect x="904.7" y="115.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="907.7" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (65 samples, 0.03%)</title><rect x="905.1" y="147.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="908.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (65 samples, 0.03%)</title><rect x="905.1" y="131.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="908.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (402 samples, 0.17%)</title><rect x="905.6" y="227.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (402 samples, 0.17%)</title><rect x="905.6" y="211.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="908.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (402 samples, 0.17%)</title><rect x="905.6" y="195.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="908.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (402 samples, 0.17%)</title><rect x="905.6" y="179.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="908.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (402 samples, 0.17%)</title><rect x="905.6" y="163.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="908.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (402 samples, 0.17%)</title><rect x="905.6" y="147.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="908.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (402 samples, 0.17%)</title><rect x="905.6" y="131.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="908.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (402 samples, 0.17%)</title><rect x="905.6" y="115.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="908.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (402 samples, 0.17%)</title><rect x="905.6" y="99.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (402 samples, 0.17%)</title><rect x="905.6" y="83.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.6" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (381 samples, 0.16%)</title><rect x="905.6" y="67.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="908.6" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (381 samples, 0.16%)</title><rect x="905.6" y="51.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="908.6" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (381 samples, 0.16%)</title><rect x="905.6" y="35.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="908.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$64/1686171753.apply (159 samples, 0.07%)</title><rect x="907.6" y="339.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="910.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (159 samples, 0.07%)</title><rect x="907.6" y="323.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="910.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (159 samples, 0.07%)</title><rect x="907.6" y="307.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="910.6" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (159 samples, 0.07%)</title><rect x="907.6" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="910.6" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (159 samples, 0.07%)</title><rect x="907.6" y="275.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="910.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (182 samples, 0.08%)</title><rect x="908.4" y="419.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="911.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (182 samples, 0.08%)</title><rect x="908.4" y="403.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="911.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$$Lambda$71/424703209.apply (182 samples, 0.08%)</title><rect x="908.4" y="387.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="911.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.lambda$iterator$0 (182 samples, 0.08%)</title><rect x="908.4" y="371.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="911.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (84 samples, 0.04%)</title><rect x="908.5" y="355.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="911.5" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (84 samples, 0.04%)</title><rect x="908.5" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="911.5" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (84 samples, 0.04%)</title><rect x="908.5" y="323.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="911.5" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (84 samples, 0.04%)</title><rect x="908.5" y="307.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="911.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.getData (70 samples, 0.03%)</title><rect x="909.0" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="912.0" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (70 samples, 0.03%)</title><rect x="909.0" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="912.0" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (70 samples, 0.03%)</title><rect x="909.0" y="323.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="912.0" y="334.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (70 samples, 0.03%)</title><rect x="909.0" y="307.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="912.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (64 samples, 0.03%)</title><rect x="909.3" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="912.3" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (64 samples, 0.03%)</title><rect x="909.3" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="912.3" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (64 samples, 0.03%)</title><rect x="909.3" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="912.3" y="398.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (64 samples, 0.03%)</title><rect x="909.3" y="371.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="912.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (68 samples, 0.03%)</title><rect x="909.6" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="912.6" y="430.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (68 samples, 0.03%)</title><rect x="909.6" y="403.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="912.6" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (68 samples, 0.03%)</title><rect x="909.6" y="387.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="912.6" y="398.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (68 samples, 0.03%)</title><rect x="909.6" y="371.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="912.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (54,866 samples, 23.51%)</title><rect x="910.0" y="419.0" width="277.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.0" y="430.0">ru/mail/polis/dao/shakhmin/LSMDao.ite..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (54,866 samples, 23.51%)</title><rect x="910.0" y="403.0" width="277.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.0" y="414.0">ru/mail/polis/dao/shakhmin/LSMDao.row..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.combineTables (46,572 samples, 19.96%)</title><rect x="910.0" y="387.0" width="235.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="913.0" y="398.0">ru/mail/polis/dao/shakhmin/Tabl..</text>
</g>
<g>
<title>java/util/ArrayList.add (171 samples, 0.07%)</title><rect x="910.2" y="371.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (171 samples, 0.07%)</title><rect x="910.2" y="355.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="913.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (171 samples, 0.07%)</title><rect x="910.2" y="339.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.2" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (171 samples, 0.07%)</title><rect x="910.2" y="323.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.2" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (171 samples, 0.07%)</title><rect x="910.2" y="307.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.2" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (170 samples, 0.07%)</title><rect x="910.2" y="291.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="913.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (464 samples, 0.20%)</title><rect x="911.2" y="371.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.combineTables (287 samples, 0.12%)</title><rect x="911.2" y="355.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="914.2" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (80 samples, 0.03%)</title><rect x="911.3" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="914.3" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (54 samples, 0.02%)</title><rect x="911.4" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.4" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (54 samples, 0.02%)</title><rect x="911.4" y="307.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.4" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (54 samples, 0.02%)</title><rect x="911.4" y="291.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="914.4" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (79 samples, 0.03%)</title><rect x="911.7" y="339.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (79 samples, 0.03%)</title><rect x="911.7" y="323.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="914.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (79 samples, 0.03%)</title><rect x="911.7" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="914.7" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (79 samples, 0.03%)</title><rect x="911.7" y="291.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="914.7" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (79 samples, 0.03%)</title><rect x="911.7" y="275.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.7" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (79 samples, 0.03%)</title><rect x="911.7" y="259.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="914.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (110 samples, 0.05%)</title><rect x="912.1" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="915.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (53 samples, 0.02%)</title><rect x="912.4" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="915.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (53 samples, 0.02%)</title><rect x="912.4" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="915.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (53 samples, 0.02%)</title><rect x="912.4" y="291.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.4" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (53 samples, 0.02%)</title><rect x="912.4" y="275.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="915.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.transformRows (175 samples, 0.07%)</title><rect x="912.7" y="355.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="915.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (116 samples, 0.05%)</title><rect x="912.8" y="339.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="915.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (104 samples, 0.04%)</title><rect x="912.9" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="915.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (45,866 samples, 19.65%)</title><rect x="913.5" y="371.0" width="232.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="916.5" y="382.0">ru/mail/polis/dao/shakhmin/SSTa..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (374 samples, 0.16%)</title><rect x="913.5" y="355.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="916.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (45,492 samples, 19.49%)</title><rect x="915.4" y="355.0" width="230.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="918.4" y="366.0">ru/mail/polis/dao/shakhmin/SST..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (45,492 samples, 19.49%)</title><rect x="915.4" y="339.0" width="230.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="918.4" y="350.0">ru/mail/polis/dao/shakhmin/SST..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (22,538 samples, 9.66%)</title><rect x="915.4" y="323.0" width="114.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="918.4" y="334.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,295 samples, 4.84%)</title><rect x="915.4" y="307.0" width="57.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="918.4" y="318.0">java/n..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,295 samples, 4.84%)</title><rect x="915.4" y="291.0" width="57.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="918.4" y="302.0">java/n..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,295 samples, 4.84%)</title><rect x="915.4" y="275.0" width="57.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="918.4" y="286.0">java.n..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,243 samples, 4.82%)</title><rect x="972.5" y="307.0" width="56.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="975.5" y="318.0">java/n..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,243 samples, 4.82%)</title><rect x="972.5" y="291.0" width="56.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="975.5" y="302.0">java.n..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (22,954 samples, 9.84%)</title><rect x="1029.4" y="323.0" width="116.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1032.4" y="334.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,546 samples, 4.95%)</title><rect x="1029.4" y="307.0" width="58.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1032.4" y="318.0">java/n..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,546 samples, 4.95%)</title><rect x="1029.4" y="291.0" width="58.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1032.4" y="302.0">java/n..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,546 samples, 4.95%)</title><rect x="1029.4" y="275.0" width="58.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1032.4" y="286.0">java.n..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,408 samples, 4.89%)</title><rect x="1087.8" y="307.0" width="57.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1090.8" y="318.0">java/n..</text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,408 samples, 4.89%)</title><rect x="1087.8" y="291.0" width="57.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1090.8" y="302.0">java.n..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.transformRows (8,294 samples, 3.55%)</title><rect x="1145.5" y="387.0" width="41.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1148.5" y="398.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,780 samples, 2.91%)</title><rect x="1145.7" y="371.0" width="34.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1148.7" y="382.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,767 samples, 2.90%)</title><rect x="1145.7" y="355.0" width="34.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1148.7" y="366.0">co..</text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (85 samples, 0.04%)</title><rect x="1145.8" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1148.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (85 samples, 0.04%)</title><rect x="1145.8" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1148.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (85 samples, 0.04%)</title><rect x="1145.8" y="307.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1148.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (85 samples, 0.04%)</title><rect x="1145.8" y="291.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1148.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$64/1686171753.apply (85 samples, 0.04%)</title><rect x="1145.8" y="275.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1148.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (85 samples, 0.04%)</title><rect x="1145.8" y="259.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1148.8" y="270.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (85 samples, 0.04%)</title><rect x="1145.8" y="243.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1148.8" y="254.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (85 samples, 0.04%)</title><rect x="1145.8" y="227.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1148.8" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (212 samples, 0.09%)</title><rect x="1146.3" y="339.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1149.3" y="350.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (212 samples, 0.09%)</title><rect x="1146.3" y="323.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1149.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,404 samples, 2.74%)</title><rect x="1147.6" y="339.0" width="32.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1150.6" y="350.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,404 samples, 2.74%)</title><rect x="1147.6" y="323.0" width="32.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1150.6" y="334.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (109 samples, 0.05%)</title><rect x="1147.6" y="307.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1150.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (109 samples, 0.05%)</title><rect x="1147.6" y="291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1150.6" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (108 samples, 0.05%)</title><rect x="1147.6" y="275.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1150.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,295 samples, 2.70%)</title><rect x="1148.1" y="307.0" width="31.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1151.1" y="318.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,295 samples, 2.70%)</title><rect x="1148.1" y="291.0" width="31.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1151.1" y="302.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,295 samples, 2.70%)</title><rect x="1148.1" y="275.0" width="31.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1151.1" y="286.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,295 samples, 2.70%)</title><rect x="1148.1" y="259.0" width="31.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1151.1" y="270.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,284 samples, 1.84%)</title><rect x="1148.1" y="243.0" width="21.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1151.1" y="254.0">c..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,284 samples, 1.84%)</title><rect x="1148.1" y="227.0" width="21.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1151.1" y="238.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,284 samples, 1.84%)</title><rect x="1148.1" y="211.0" width="21.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1151.1" y="222.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,284 samples, 1.84%)</title><rect x="1148.1" y="195.0" width="21.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1151.1" y="206.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (264 samples, 0.11%)</title><rect x="1148.1" y="179.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1151.1" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (264 samples, 0.11%)</title><rect x="1148.1" y="163.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1151.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,105 samples, 0.47%)</title><rect x="1149.5" y="179.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1152.5" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (580 samples, 0.25%)</title><rect x="1149.5" y="163.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1152.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (580 samples, 0.25%)</title><rect x="1149.5" y="147.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1152.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (580 samples, 0.25%)</title><rect x="1149.5" y="131.0" width="2.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1152.5" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (525 samples, 0.22%)</title><rect x="1152.4" y="163.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.4" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (525 samples, 0.22%)</title><rect x="1152.4" y="147.0" width="2.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1155.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,037 samples, 0.44%)</title><rect x="1155.1" y="179.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1158.1" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (505 samples, 0.22%)</title><rect x="1155.1" y="163.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1158.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (505 samples, 0.22%)</title><rect x="1155.1" y="147.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1158.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (505 samples, 0.22%)</title><rect x="1155.1" y="131.0" width="2.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1158.1" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (532 samples, 0.23%)</title><rect x="1157.6" y="163.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1160.6" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (532 samples, 0.23%)</title><rect x="1157.6" y="147.0" width="2.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1160.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (590 samples, 0.25%)</title><rect x="1160.3" y="179.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1163.3" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (590 samples, 0.25%)</title><rect x="1160.3" y="163.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1163.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (590 samples, 0.25%)</title><rect x="1160.3" y="147.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1163.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (590 samples, 0.25%)</title><rect x="1160.3" y="131.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1163.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,093 samples, 0.47%)</title><rect x="1163.3" y="179.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1166.3" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (520 samples, 0.22%)</title><rect x="1163.3" y="163.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1166.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (520 samples, 0.22%)</title><rect x="1163.3" y="147.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1166.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (520 samples, 0.22%)</title><rect x="1163.3" y="131.0" width="2.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1166.3" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (573 samples, 0.25%)</title><rect x="1165.9" y="163.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1168.9" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (573 samples, 0.25%)</title><rect x="1165.9" y="147.0" width="2.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1168.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Value.of (195 samples, 0.08%)</title><rect x="1168.8" y="179.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1171.8" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Value (195 samples, 0.08%)</title><rect x="1168.8" y="163.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1171.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (2,011 samples, 0.86%)</title><rect x="1169.8" y="243.0" width="10.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1172.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,011 samples, 0.86%)</title><rect x="1169.8" y="227.0" width="10.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1172.8" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (2,011 samples, 0.86%)</title><rect x="1169.8" y="211.0" width="10.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1172.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,011 samples, 0.86%)</title><rect x="1169.8" y="195.0" width="10.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1172.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (2,011 samples, 0.86%)</title><rect x="1169.8" y="179.0" width="10.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1172.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,011 samples, 0.86%)</title><rect x="1169.8" y="163.0" width="10.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1172.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (2,011 samples, 0.86%)</title><rect x="1169.8" y="147.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1172.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,011 samples, 0.86%)</title><rect x="1169.8" y="131.0" width="10.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1172.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (2,011 samples, 0.86%)</title><rect x="1169.8" y="115.0" width="10.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1172.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,011 samples, 0.86%)</title><rect x="1169.8" y="99.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1172.8" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,860 samples, 0.80%)</title><rect x="1169.8" y="83.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1172.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,860 samples, 0.80%)</title><rect x="1169.8" y="67.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1172.8" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,860 samples, 0.80%)</title><rect x="1169.8" y="51.0" width="9.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1172.8" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (151 samples, 0.06%)</title><rect x="1179.2" y="83.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1182.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (151 samples, 0.06%)</title><rect x="1179.2" y="67.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1182.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,471 samples, 0.63%)</title><rect x="1180.0" y="371.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1183.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,447 samples, 0.62%)</title><rect x="1180.1" y="355.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1183.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,447 samples, 0.62%)</title><rect x="1180.1" y="339.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1183.1" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (533 samples, 0.23%)</title><rect x="1180.1" y="323.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1183.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (533 samples, 0.23%)</title><rect x="1180.1" y="307.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1183.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (533 samples, 0.23%)</title><rect x="1180.1" y="291.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1183.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (533 samples, 0.23%)</title><rect x="1180.1" y="275.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1183.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (533 samples, 0.23%)</title><rect x="1180.1" y="259.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1183.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (533 samples, 0.23%)</title><rect x="1180.1" y="243.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1183.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (533 samples, 0.23%)</title><rect x="1180.1" y="227.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1183.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (533 samples, 0.23%)</title><rect x="1180.1" y="211.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (533 samples, 0.23%)</title><rect x="1180.1" y="195.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1183.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (533 samples, 0.23%)</title><rect x="1180.1" y="179.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (533 samples, 0.23%)</title><rect x="1180.1" y="163.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1183.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (533 samples, 0.23%)</title><rect x="1180.1" y="147.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1183.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (533 samples, 0.23%)</title><rect x="1180.1" y="131.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1183.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (533 samples, 0.23%)</title><rect x="1180.1" y="115.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1183.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (533 samples, 0.23%)</title><rect x="1180.1" y="99.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1183.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (485 samples, 0.21%)</title><rect x="1180.1" y="83.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1183.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (485 samples, 0.21%)</title><rect x="1180.1" y="67.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1183.1" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (485 samples, 0.21%)</title><rect x="1180.1" y="51.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1183.1" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (914 samples, 0.39%)</title><rect x="1182.8" y="323.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1185.8" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (914 samples, 0.39%)</title><rect x="1182.8" y="307.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1185.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (914 samples, 0.39%)</title><rect x="1182.8" y="291.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1185.8" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (914 samples, 0.39%)</title><rect x="1182.8" y="275.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1185.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (914 samples, 0.39%)</title><rect x="1182.8" y="259.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1185.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (914 samples, 0.39%)</title><rect x="1182.8" y="243.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1185.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (561 samples, 0.24%)</title><rect x="1182.8" y="227.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1185.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (561 samples, 0.24%)</title><rect x="1182.8" y="211.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1185.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (561 samples, 0.24%)</title><rect x="1182.8" y="195.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1185.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (561 samples, 0.24%)</title><rect x="1182.8" y="179.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1185.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (137 samples, 0.06%)</title><rect x="1183.0" y="163.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1186.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (75 samples, 0.03%)</title><rect x="1183.0" y="147.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1186.0" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (75 samples, 0.03%)</title><rect x="1183.0" y="131.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1186.0" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (75 samples, 0.03%)</title><rect x="1183.0" y="115.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1186.0" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (62 samples, 0.03%)</title><rect x="1183.4" y="147.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1186.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (62 samples, 0.03%)</title><rect x="1183.4" y="131.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1186.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (142 samples, 0.06%)</title><rect x="1183.7" y="163.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1186.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (63 samples, 0.03%)</title><rect x="1183.7" y="147.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1186.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (63 samples, 0.03%)</title><rect x="1183.7" y="131.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1186.7" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (63 samples, 0.03%)</title><rect x="1183.7" y="115.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1186.7" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (79 samples, 0.03%)</title><rect x="1184.0" y="147.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1187.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (79 samples, 0.03%)</title><rect x="1184.0" y="131.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1187.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (78 samples, 0.03%)</title><rect x="1184.4" y="163.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1187.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (78 samples, 0.03%)</title><rect x="1184.4" y="147.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1187.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (78 samples, 0.03%)</title><rect x="1184.4" y="131.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1187.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (78 samples, 0.03%)</title><rect x="1184.4" y="115.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1187.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (140 samples, 0.06%)</title><rect x="1184.8" y="163.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1187.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (71 samples, 0.03%)</title><rect x="1184.8" y="147.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1187.8" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (71 samples, 0.03%)</title><rect x="1184.8" y="131.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1187.8" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (71 samples, 0.03%)</title><rect x="1184.8" y="115.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1187.8" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (69 samples, 0.03%)</title><rect x="1185.1" y="147.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1188.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (69 samples, 0.03%)</title><rect x="1185.1" y="131.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1188.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$59/1155012953.compare (353 samples, 0.15%)</title><rect x="1185.6" y="227.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1188.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (353 samples, 0.15%)</title><rect x="1185.6" y="211.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1188.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (353 samples, 0.15%)</title><rect x="1185.6" y="195.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1188.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (353 samples, 0.15%)</title><rect x="1185.6" y="179.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$57/2138535877.compare (353 samples, 0.15%)</title><rect x="1185.6" y="163.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1188.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (353 samples, 0.15%)</title><rect x="1185.6" y="147.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1188.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$55/753746571.compare (353 samples, 0.15%)</title><rect x="1185.6" y="131.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1188.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (353 samples, 0.15%)</title><rect x="1185.6" y="115.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1188.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$54/519351404.apply (353 samples, 0.15%)</title><rect x="1185.6" y="99.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (353 samples, 0.15%)</title><rect x="1185.6" y="83.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1188.6" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (337 samples, 0.14%)</title><rect x="1185.6" y="67.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1188.6" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (337 samples, 0.14%)</title><rect x="1185.6" y="51.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1188.6" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (337 samples, 0.14%)</title><rect x="1185.6" y="35.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1188.6" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (62 samples, 0.03%)</title><rect x="1187.4" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1190.4" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (62 samples, 0.03%)</title><rect x="1187.4" y="451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1190.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (62 samples, 0.03%)</title><rect x="1187.4" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1190.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (312 samples, 0.13%)</title><rect x="1187.7" y="499.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1190.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (80 samples, 0.03%)</title><rect x="1187.9" y="483.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1190.9" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (80 samples, 0.03%)</title><rect x="1187.9" y="467.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1190.9" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (191 samples, 0.08%)</title><rect x="1188.3" y="483.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.3" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (191 samples, 0.08%)</title><rect x="1188.3" y="467.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.3" y="478.0"></text>
</g>
<g>
<title>char[] (108 samples, 0.05%)</title><rect x="1188.3" y="451.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1191.3" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (61 samples, 0.03%)</title><rect x="1189.0" y="451.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1192.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (61 samples, 0.03%)</title><rect x="1189.0" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1192.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (61 samples, 0.03%)</title><rect x="1189.0" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1192.0" y="430.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.03%)</title><rect x="1189.0" y="403.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1192.0" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (137 samples, 0.06%)</title><rect x="1189.3" y="499.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.3" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (137 samples, 0.06%)</title><rect x="1189.3" y="483.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.3" y="494.0"></text>
</g>
<g>
<title>char[] (70 samples, 0.03%)</title><rect x="1189.3" y="467.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1192.3" y="478.0"></text>
</g>
</g>
</svg>
