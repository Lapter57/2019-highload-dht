<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="789"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="789"> </text>
<g id="frames">
<g>
<title>all (17,542 samples, 100.00%)</title><rect x="10.0" y="755.0" width="1180.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="766.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=14155] (145 samples, 0.83%)</title><rect x="10.0" y="739.0" width="9.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.03%)</title><rect x="10.3" y="723.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.3" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.03%)</title><rect x="10.3" y="707.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.3" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.03%)</title><rect x="10.3" y="691.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.3" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="10.3" y="675.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.3" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.03%)</title><rect x="10.3" y="659.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.3" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.05%)</title><rect x="10.7" y="723.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.7" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.03%)</title><rect x="10.8" y="707.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.8" y="718.0"></text>
</g>
<g>
<title>[not_walkable_Java] (6 samples, 0.03%)</title><rect x="11.2" y="723.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="14.2" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (115 samples, 0.66%)</title><rect x="12.0" y="723.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (37 samples, 0.21%)</title><rect x="12.3" y="707.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (35 samples, 0.20%)</title><rect x="12.4" y="691.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="15.4" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (33 samples, 0.19%)</title><rect x="12.5" y="675.0" width="2.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="15.5" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.11%)</title><rect x="13.4" y="659.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="16.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.11%)</title><rect x="13.4" y="643.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="16.4" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (16 samples, 0.09%)</title><rect x="13.6" y="627.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="16.6" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (16 samples, 0.09%)</title><rect x="13.6" y="611.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="16.6" y="622.0"></text>
</g>
<g>
<title>ep_poll (15 samples, 0.09%)</title><rect x="13.6" y="595.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="16.6" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (11 samples, 0.06%)</title><rect x="13.8" y="579.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="16.8" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.03%)</title><rect x="14.2" y="563.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="17.2" y="574.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (4 samples, 0.02%)</title><rect x="14.2" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="17.2" y="558.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.02%)</title><rect x="14.2" y="531.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="17.2" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (74 samples, 0.42%)</title><rect x="14.8" y="707.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (73 samples, 0.42%)</title><rect x="14.8" y="691.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (44 samples, 0.25%)</title><rect x="14.8" y="675.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (31 samples, 0.18%)</title><rect x="14.8" y="659.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (31 samples, 0.18%)</title><rect x="14.8" y="643.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.8" y="654.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (30 samples, 0.17%)</title><rect x="14.8" y="627.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (28 samples, 0.16%)</title><rect x="15.0" y="611.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (12 samples, 0.07%)</title><rect x="15.0" y="595.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (12 samples, 0.07%)</title><rect x="15.0" y="579.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (4 samples, 0.02%)</title><rect x="15.0" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.02%)</title><rect x="15.6" y="563.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.02%)</title><rect x="15.6" y="547.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.02%)</title><rect x="15.6" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (15 samples, 0.09%)</title><rect x="15.9" y="595.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.08%)</title><rect x="15.9" y="579.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (14 samples, 0.08%)</title><rect x="15.9" y="563.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (12 samples, 0.07%)</title><rect x="15.9" y="547.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.07%)</title><rect x="15.9" y="531.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.07%)</title><rect x="15.9" y="515.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.07%)</title><rect x="15.9" y="499.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.07%)</title><rect x="15.9" y="483.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.07%)</title><rect x="15.9" y="467.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.9" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.06%)</title><rect x="16.0" y="451.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="19.0" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.06%)</title><rect x="16.1" y="435.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="19.1" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.06%)</title><rect x="16.1" y="419.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="19.1" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.05%)</title><rect x="16.1" y="403.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="19.1" y="414.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.05%)</title><rect x="16.1" y="387.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="19.1" y="398.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.05%)</title><rect x="16.1" y="371.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="19.1" y="382.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.05%)</title><rect x="16.2" y="355.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="19.2" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.05%)</title><rect x="16.2" y="339.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="19.2" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.05%)</title><rect x="16.2" y="323.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="19.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.05%)</title><rect x="16.9" y="659.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.03%)</title><rect x="16.9" y="643.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.9" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (29 samples, 0.17%)</title><rect x="17.8" y="675.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.8" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (29 samples, 0.17%)</title><rect x="17.8" y="659.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.8" y="670.0"></text>
</g>
<g>
<title>__libc_recv (23 samples, 0.13%)</title><rect x="18.2" y="643.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="21.2" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.11%)</title><rect x="18.5" y="627.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="21.5" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.11%)</title><rect x="18.5" y="611.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="21.5" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (15 samples, 0.09%)</title><rect x="18.7" y="595.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="21.7" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (15 samples, 0.09%)</title><rect x="18.7" y="579.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="21.7" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (13 samples, 0.07%)</title><rect x="18.7" y="563.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="21.7" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (13 samples, 0.07%)</title><rect x="18.7" y="547.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="21.7" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (10 samples, 0.06%)</title><rect x="18.9" y="531.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="21.9" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 0.06%)</title><rect x="18.9" y="515.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="21.9" y="526.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.04%)</title><rect x="19.1" y="499.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="22.1" y="510.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.03%)</title><rect x="19.3" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="22.3" y="494.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=14165] (229 samples, 1.31%)</title><rect x="19.8" y="739.0" width="15.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="22.8" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (16 samples, 0.09%)</title><rect x="20.2" y="723.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="23.2" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (15 samples, 0.09%)</title><rect x="20.2" y="707.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="23.2" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.03%)</title><rect x="20.4" y="691.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="23.4" y="702.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.02%)</title><rect x="20.5" y="675.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="23.5" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (7 samples, 0.04%)</title><rect x="20.8" y="691.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="23.8" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (6 samples, 0.03%)</title><rect x="20.8" y="675.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="23.8" y="686.0"></text>
</g>
<g>
<title>[not_walkable_Java] (6 samples, 0.03%)</title><rect x="21.2" y="723.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="24.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.07%)</title><rect x="21.6" y="723.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="24.6" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (5 samples, 0.03%)</title><rect x="22.0" y="707.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="25.0" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (187 samples, 1.07%)</title><rect x="22.6" y="723.0" width="12.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (61 samples, 0.35%)</title><rect x="22.7" y="707.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (4 samples, 0.02%)</title><rect x="22.9" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.9" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (4 samples, 0.02%)</title><rect x="22.9" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.9" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (54 samples, 0.31%)</title><rect x="23.2" y="691.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.2" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (49 samples, 0.28%)</title><rect x="23.3" y="675.0" width="3.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="26.3" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.16%)</title><rect x="24.7" y="659.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="27.7" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.16%)</title><rect x="24.7" y="643.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="27.7" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (27 samples, 0.15%)</title><rect x="24.7" y="627.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="27.7" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (27 samples, 0.15%)</title><rect x="24.7" y="611.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="27.7" y="622.0"></text>
</g>
<g>
<title>ep_poll (23 samples, 0.13%)</title><rect x="24.7" y="595.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="27.7" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (17 samples, 0.10%)</title><rect x="25.0" y="579.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="28.0" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.04%)</title><rect x="25.5" y="563.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="28.5" y="574.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (6 samples, 0.03%)</title><rect x="25.6" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="28.6" y="558.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.03%)</title><rect x="25.6" y="531.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="28.6" y="542.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.02%)</title><rect x="25.7" y="515.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="28.7" y="526.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.02%)</title><rect x="26.3" y="595.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="29.3" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (124 samples, 0.71%)</title><rect x="26.8" y="707.0" width="8.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="29.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (120 samples, 0.68%)</title><rect x="27.0" y="691.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (64 samples, 0.36%)</title><rect x="27.1" y="675.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (40 samples, 0.23%)</title><rect x="27.1" y="659.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (40 samples, 0.23%)</title><rect x="27.1" y="643.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.1" y="654.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (39 samples, 0.22%)</title><rect x="27.1" y="627.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (38 samples, 0.22%)</title><rect x="27.2" y="611.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (19 samples, 0.11%)</title><rect x="27.2" y="595.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (19 samples, 0.11%)</title><rect x="27.2" y="579.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="30.2" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (11 samples, 0.06%)</title><rect x="27.2" y="563.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.2" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (4 samples, 0.02%)</title><rect x="27.2" y="547.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.2" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (4 samples, 0.02%)</title><rect x="27.2" y="531.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.2" y="542.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (4 samples, 0.02%)</title><rect x="27.2" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (4 samples, 0.02%)</title><rect x="27.2" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="30.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (4 samples, 0.02%)</title><rect x="27.2" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (6 samples, 0.03%)</title><rect x="27.5" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (5 samples, 0.03%)</title><rect x="27.5" y="531.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.5" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putLong (5 samples, 0.03%)</title><rect x="27.5" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (5 samples, 0.03%)</title><rect x="28.2" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (5 samples, 0.03%)</title><rect x="28.2" y="547.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="31.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (5 samples, 0.03%)</title><rect x="28.2" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (18 samples, 0.10%)</title><rect x="28.5" y="595.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="31.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 0.10%)</title><rect x="28.6" y="579.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="31.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (16 samples, 0.09%)</title><rect x="28.6" y="563.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (14 samples, 0.08%)</title><rect x="28.6" y="547.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="31.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.08%)</title><rect x="28.6" y="531.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.08%)</title><rect x="28.6" y="515.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.08%)</title><rect x="28.6" y="499.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="31.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.08%)</title><rect x="28.6" y="483.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.08%)</title><rect x="28.6" y="467.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="31.6" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.06%)</title><rect x="28.8" y="451.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="31.8" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="29.0" y="435.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="32.0" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="29.0" y="419.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="32.0" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.05%)</title><rect x="29.0" y="403.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="32.0" y="414.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.05%)</title><rect x="29.0" y="387.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="32.0" y="398.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.05%)</title><rect x="29.0" y="371.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="32.0" y="382.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.05%)</title><rect x="29.0" y="355.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="32.0" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.05%)</title><rect x="29.0" y="339.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="32.0" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.05%)</title><rect x="29.0" y="323.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="32.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10 samples, 0.06%)</title><rect x="29.8" y="659.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="32.8" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.03%)</title><rect x="29.9" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.9" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.03%)</title><rect x="29.9" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.02%)</title><rect x="30.4" y="659.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="33.4" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.02%)</title><rect x="30.4" y="643.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.4" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.02%)</title><rect x="30.4" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (7 samples, 0.04%)</title><rect x="30.7" y="659.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="33.7" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (54 samples, 0.31%)</title><rect x="31.4" y="675.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.4" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (54 samples, 0.31%)</title><rect x="31.4" y="659.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.05%)</title><rect x="31.5" y="643.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="34.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.05%)</title><rect x="31.5" y="627.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="34.5" y="638.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 0.05%)</title><rect x="31.5" y="611.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="34.5" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.04%)</title><rect x="31.5" y="595.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="34.5" y="606.0"></text>
</g>
<g>
<title>__libc_recv (44 samples, 0.25%)</title><rect x="32.1" y="643.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="35.1" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.16%)</title><rect x="33.1" y="627.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="36.1" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.16%)</title><rect x="33.1" y="611.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="36.1" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (24 samples, 0.14%)</title><rect x="33.4" y="595.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="36.4" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (24 samples, 0.14%)</title><rect x="33.4" y="579.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="36.4" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (17 samples, 0.10%)</title><rect x="33.4" y="563.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="36.4" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (17 samples, 0.10%)</title><rect x="33.4" y="547.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="36.4" y="558.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.02%)</title><rect x="33.6" y="531.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="36.6" y="542.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.02%)</title><rect x="33.6" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="36.6" y="526.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.02%)</title><rect x="33.6" y="499.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="36.6" y="510.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.02%)</title><rect x="33.6" y="483.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="36.6" y="494.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.03%)</title><rect x="33.9" y="531.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="36.9" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.03%)</title><rect x="34.0" y="515.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="37.0" y="526.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.02%)</title><rect x="34.1" y="499.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="37.1" y="510.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.02%)</title><rect x="34.1" y="483.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="37.1" y="494.0"></text>
</g>
<g>
<title>sock_recvmsg (6 samples, 0.03%)</title><rect x="34.6" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="37.6" y="574.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.03%)</title><rect x="34.6" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="37.6" y="558.0"></text>
</g>
<g>
<title>sock_has_perm (5 samples, 0.03%)</title><rect x="34.6" y="531.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="37.6" y="542.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=14171] (190 samples, 1.08%)</title><rect x="35.2" y="739.0" width="12.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="38.2" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.02%)</title><rect x="35.4" y="723.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="38.4" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.06%)</title><rect x="35.9" y="723.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="38.9" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (10 samples, 0.06%)</title><rect x="36.0" y="707.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="39.0" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (7 samples, 0.04%)</title><rect x="36.2" y="691.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="39.2" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (6 samples, 0.03%)</title><rect x="36.2" y="675.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="39.2" y="686.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.03%)</title><rect x="36.2" y="659.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="39.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="36.8" y="723.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="39.8" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (158 samples, 0.90%)</title><rect x="37.3" y="723.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="40.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (55 samples, 0.31%)</title><rect x="37.3" y="707.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (5 samples, 0.03%)</title><rect x="37.4" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="40.4" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (5 samples, 0.03%)</title><rect x="37.4" y="675.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.4" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (48 samples, 0.27%)</title><rect x="37.8" y="691.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="40.8" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (45 samples, 0.26%)</title><rect x="38.0" y="675.0" width="3.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="41.0" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.17%)</title><rect x="39.1" y="659.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="42.1" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.17%)</title><rect x="39.1" y="643.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="42.1" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (26 samples, 0.15%)</title><rect x="39.3" y="627.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="42.3" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (26 samples, 0.15%)</title><rect x="39.3" y="611.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="42.3" y="622.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.03%)</title><rect x="39.3" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="42.3" y="606.0"></text>
</g>
<g>
<title>ep_poll (16 samples, 0.09%)</title><rect x="39.7" y="595.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="42.7" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (12 samples, 0.07%)</title><rect x="39.9" y="579.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="42.9" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.02%)</title><rect x="40.3" y="563.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="43.3" y="574.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.02%)</title><rect x="40.7" y="595.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="43.7" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (103 samples, 0.59%)</title><rect x="41.0" y="707.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (100 samples, 0.57%)</title><rect x="41.0" y="691.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (72 samples, 0.41%)</title><rect x="41.0" y="675.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="44.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (46 samples, 0.26%)</title><rect x="41.0" y="659.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="44.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (46 samples, 0.26%)</title><rect x="41.0" y="643.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="44.0" y="654.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (46 samples, 0.26%)</title><rect x="41.0" y="627.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="44.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.05%)</title><rect x="41.0" y="611.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="44.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.03%)</title><rect x="41.1" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.03%)</title><rect x="41.1" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (37 samples, 0.21%)</title><rect x="41.6" y="611.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="44.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (11 samples, 0.06%)</title><rect x="41.8" y="595.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="44.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (10 samples, 0.06%)</title><rect x="41.8" y="579.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="44.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (5 samples, 0.03%)</title><rect x="41.8" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (4 samples, 0.02%)</title><rect x="41.8" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="44.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.processRemaining (4 samples, 0.02%)</title><rect x="41.8" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="44.8" y="542.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.mixK2 (4 samples, 0.02%)</title><rect x="41.8" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="44.8" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getLong (4 samples, 0.02%)</title><rect x="41.8" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="44.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (24 samples, 0.14%)</title><rect x="42.5" y="595.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (23 samples, 0.13%)</title><rect x="42.6" y="579.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (23 samples, 0.13%)</title><rect x="42.6" y="563.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="45.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (20 samples, 0.11%)</title><rect x="42.6" y="547.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (20 samples, 0.11%)</title><rect x="42.6" y="531.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (20 samples, 0.11%)</title><rect x="42.6" y="515.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="45.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (20 samples, 0.11%)</title><rect x="42.6" y="499.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.11%)</title><rect x="42.6" y="483.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.11%)</title><rect x="42.6" y="467.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.6" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (18 samples, 0.10%)</title><rect x="42.7" y="451.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="45.7" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.09%)</title><rect x="42.9" y="435.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="45.9" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.09%)</title><rect x="42.9" y="419.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="45.9" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.08%)</title><rect x="43.0" y="403.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="46.0" y="414.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.08%)</title><rect x="43.0" y="387.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="46.0" y="398.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.08%)</title><rect x="43.0" y="371.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="46.0" y="382.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.07%)</title><rect x="43.1" y="355.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="46.1" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.07%)</title><rect x="43.1" y="339.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="46.1" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.07%)</title><rect x="43.1" y="323.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="46.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13 samples, 0.07%)</title><rect x="44.1" y="659.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.03%)</title><rect x="44.1" y="643.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.1" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.04%)</title><rect x="44.4" y="643.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.4" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.04%)</title><rect x="44.4" y="627.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.02%)</title><rect x="45.0" y="659.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.0" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.02%)</title><rect x="45.0" y="643.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.0" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.02%)</title><rect x="45.0" y="627.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (6 samples, 0.03%)</title><rect x="45.2" y="659.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.2" y="670.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (4 samples, 0.02%)</title><rect x="45.3" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.3" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (28 samples, 0.16%)</title><rect x="45.9" y="675.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.9" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (28 samples, 0.16%)</title><rect x="45.9" y="659.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="46.0" y="643.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="49.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="46.0" y="627.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="49.0" y="638.0"></text>
</g>
<g>
<title>__libc_recv (22 samples, 0.13%)</title><rect x="46.3" y="643.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="49.3" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.09%)</title><rect x="46.7" y="627.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="49.7" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.09%)</title><rect x="46.7" y="611.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="49.7" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (13 samples, 0.07%)</title><rect x="46.9" y="595.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="49.9" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (12 samples, 0.07%)</title><rect x="46.9" y="579.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="49.9" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (9 samples, 0.05%)</title><rect x="46.9" y="563.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="49.9" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (9 samples, 0.05%)</title><rect x="46.9" y="547.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="49.9" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.03%)</title><rect x="47.1" y="531.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="50.1" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.03%)</title><rect x="47.1" y="515.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="50.1" y="526.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=14156] (256 samples, 1.46%)</title><rect x="47.9" y="739.0" width="17.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="50.9" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (25 samples, 0.14%)</title><rect x="48.5" y="723.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="51.5" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (23 samples, 0.13%)</title><rect x="48.7" y="707.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="51.7" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.02%)</title><rect x="48.7" y="691.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="51.7" y="702.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.02%)</title><rect x="48.7" y="675.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="51.7" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (18 samples, 0.10%)</title><rect x="48.9" y="691.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="51.9" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (14 samples, 0.08%)</title><rect x="49.1" y="675.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="52.1" y="686.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.03%)</title><rect x="49.4" y="659.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="52.4" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="49.5" y="643.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="52.5" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="49.5" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="52.5" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="49.6" y="611.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="52.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.05%)</title><rect x="50.4" y="723.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="53.4" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (6 samples, 0.03%)</title><rect x="50.6" y="707.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="53.6" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="50.6" y="691.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="53.6" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="50.6" y="675.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="53.6" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="50.7" y="659.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="53.7" y="670.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (210 samples, 1.20%)</title><rect x="51.0" y="723.0" width="14.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (80 samples, 0.46%)</title><rect x="51.5" y="707.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (80 samples, 0.46%)</title><rect x="51.5" y="691.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="54.5" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (71 samples, 0.40%)</title><rect x="51.8" y="675.0" width="4.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="54.8" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.23%)</title><rect x="53.8" y="659.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="56.8" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.23%)</title><rect x="53.8" y="643.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="56.8" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (38 samples, 0.22%)</title><rect x="54.0" y="627.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="57.0" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (38 samples, 0.22%)</title><rect x="54.0" y="611.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="57.0" y="622.0"></text>
</g>
<g>
<title>ep_poll (28 samples, 0.16%)</title><rect x="54.3" y="595.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="57.3" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (24 samples, 0.14%)</title><rect x="54.5" y="579.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="57.5" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (11 samples, 0.06%)</title><rect x="55.1" y="563.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="58.1" y="574.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (7 samples, 0.04%)</title><rect x="55.3" y="547.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="58.3" y="558.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.04%)</title><rect x="55.3" y="531.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="58.3" y="542.0"></text>
</g>
<g>
<title>fput_many (5 samples, 0.03%)</title><rect x="56.2" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="59.2" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (123 samples, 0.70%)</title><rect x="56.9" y="707.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="59.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (120 samples, 0.68%)</title><rect x="57.1" y="691.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (58 samples, 0.33%)</title><rect x="57.1" y="675.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="60.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (41 samples, 0.23%)</title><rect x="57.1" y="659.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (41 samples, 0.23%)</title><rect x="57.1" y="643.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.1" y="654.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (41 samples, 0.23%)</title><rect x="57.1" y="627.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (38 samples, 0.22%)</title><rect x="57.3" y="611.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="60.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (15 samples, 0.09%)</title><rect x="57.4" y="595.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="60.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (15 samples, 0.09%)</title><rect x="57.4" y="579.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="60.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (6 samples, 0.03%)</title><rect x="57.4" y="563.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.4" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (4 samples, 0.02%)</title><rect x="57.6" y="547.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="60.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (5 samples, 0.03%)</title><rect x="58.1" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="61.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (5 samples, 0.03%)</title><rect x="58.1" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (5 samples, 0.03%)</title><rect x="58.1" y="531.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (21 samples, 0.12%)</title><rect x="58.4" y="595.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 0.11%)</title><rect x="58.5" y="579.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (20 samples, 0.11%)</title><rect x="58.5" y="563.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (15 samples, 0.09%)</title><rect x="58.6" y="547.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="61.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 0.09%)</title><rect x="58.6" y="531.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.09%)</title><rect x="58.6" y="515.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 0.09%)</title><rect x="58.6" y="499.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="61.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.09%)</title><rect x="58.6" y="483.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.09%)</title><rect x="58.6" y="467.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.6" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 0.09%)</title><rect x="58.6" y="451.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="61.6" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="58.8" y="435.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="61.8" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="58.8" y="419.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="61.8" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.06%)</title><rect x="58.8" y="403.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="61.8" y="414.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.06%)</title><rect x="58.8" y="387.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="61.8" y="398.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.06%)</title><rect x="58.8" y="371.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="61.8" y="382.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.06%)</title><rect x="58.9" y="355.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="61.9" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.06%)</title><rect x="58.9" y="339.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="61.9" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.06%)</title><rect x="58.9" y="323.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="61.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.05%)</title><rect x="59.8" y="659.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.02%)</title><rect x="59.8" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5 samples, 0.03%)</title><rect x="60.4" y="659.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="63.4" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.03%)</title><rect x="60.4" y="643.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.4" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.03%)</title><rect x="60.4" y="627.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="63.4" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (62 samples, 0.35%)</title><rect x="61.0" y="675.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.0" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (62 samples, 0.35%)</title><rect x="61.0" y="659.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.04%)</title><rect x="61.2" y="643.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="64.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.04%)</title><rect x="61.2" y="627.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="64.2" y="638.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.03%)</title><rect x="61.2" y="611.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="64.2" y="622.0"></text>
</g>
<g>
<title>__libc_recv (52 samples, 0.30%)</title><rect x="61.7" y="643.0" width="3.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="64.7" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.21%)</title><rect x="62.7" y="627.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="65.7" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.21%)</title><rect x="62.7" y="611.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="65.7" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (31 samples, 0.18%)</title><rect x="63.1" y="595.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="66.1" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (29 samples, 0.17%)</title><rect x="63.2" y="579.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="66.2" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (24 samples, 0.14%)</title><rect x="63.3" y="563.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="66.3" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (24 samples, 0.14%)</title><rect x="63.3" y="547.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="66.3" y="558.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.02%)</title><rect x="63.4" y="531.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="66.4" y="542.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.02%)</title><rect x="63.4" y="515.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="66.4" y="526.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.02%)</title><rect x="63.4" y="499.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="66.4" y="510.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.02%)</title><rect x="63.4" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="66.4" y="494.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (14 samples, 0.08%)</title><rect x="63.7" y="531.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="66.7" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (13 samples, 0.07%)</title><rect x="63.7" y="515.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="66.7" y="526.0"></text>
</g>
<g>
<title>_copy_to_iter (6 samples, 0.03%)</title><rect x="63.7" y="499.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="66.7" y="510.0"></text>
</g>
<g>
<title>copyout (5 samples, 0.03%)</title><rect x="63.8" y="483.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="66.8" y="494.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.03%)</title><rect x="63.8" y="467.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="66.8" y="478.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.04%)</title><rect x="64.2" y="499.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="67.2" y="510.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.03%)</title><rect x="64.3" y="483.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="67.3" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.02%)</title><rect x="64.6" y="531.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="67.6" y="542.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=14166] (178 samples, 1.01%)</title><rect x="65.2" y="739.0" width="11.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="68.2" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.02%)</title><rect x="65.2" y="723.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="68.2" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.02%)</title><rect x="65.2" y="707.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="68.2" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.02%)</title><rect x="65.2" y="691.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="68.2" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.02%)</title><rect x="65.2" y="675.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="68.2" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (13 samples, 0.07%)</title><rect x="65.9" y="723.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="68.9" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (12 samples, 0.07%)</title><rect x="66.0" y="707.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="69.0" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (8 samples, 0.05%)</title><rect x="66.2" y="691.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="69.2" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (5 samples, 0.03%)</title><rect x="66.4" y="675.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="69.4" y="686.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.03%)</title><rect x="66.4" y="659.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="69.4" y="670.0"></text>
</g>
<g>
<title>[not_walkable_Java] (4 samples, 0.02%)</title><rect x="66.8" y="723.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="69.8" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (148 samples, 0.84%)</title><rect x="67.2" y="723.0" width="9.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (47 samples, 0.27%)</title><rect x="67.4" y="707.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (46 samples, 0.26%)</title><rect x="67.4" y="691.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.4" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (39 samples, 0.22%)</title><rect x="67.6" y="675.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="70.6" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.12%)</title><rect x="68.9" y="659.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="71.9" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.12%)</title><rect x="68.9" y="643.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="71.9" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (17 samples, 0.10%)</title><rect x="69.1" y="627.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="72.1" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (17 samples, 0.10%)</title><rect x="69.1" y="611.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="72.1" y="622.0"></text>
</g>
<g>
<title>ep_poll (12 samples, 0.07%)</title><rect x="69.3" y="595.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="72.3" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (9 samples, 0.05%)</title><rect x="69.5" y="579.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="72.5" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.04%)</title><rect x="69.6" y="563.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="72.6" y="574.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (4 samples, 0.02%)</title><rect x="69.8" y="547.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="72.8" y="558.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.02%)</title><rect x="69.8" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="72.8" y="542.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.02%)</title><rect x="69.8" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="72.8" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (98 samples, 0.56%)</title><rect x="70.5" y="707.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (95 samples, 0.54%)</title><rect x="70.7" y="691.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (68 samples, 0.39%)</title><rect x="70.7" y="675.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (47 samples, 0.27%)</title><rect x="70.9" y="659.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (47 samples, 0.27%)</title><rect x="70.9" y="643.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.9" y="654.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (47 samples, 0.27%)</title><rect x="70.9" y="627.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (45 samples, 0.26%)</title><rect x="71.0" y="611.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (18 samples, 0.10%)</title><rect x="71.3" y="595.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="74.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (18 samples, 0.10%)</title><rect x="71.3" y="579.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.3" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (10 samples, 0.06%)</title><rect x="71.3" y="563.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.3" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (6 samples, 0.03%)</title><rect x="71.5" y="547.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.5" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (5 samples, 0.03%)</title><rect x="72.2" y="563.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.2" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (5 samples, 0.03%)</title><rect x="72.2" y="547.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (22 samples, 0.13%)</title><rect x="72.6" y="595.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 0.12%)</title><rect x="72.6" y="579.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="75.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (19 samples, 0.11%)</title><rect x="72.7" y="563.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="75.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (14 samples, 0.08%)</title><rect x="72.7" y="547.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="75.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.08%)</title><rect x="72.7" y="531.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.08%)</title><rect x="72.7" y="515.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.08%)</title><rect x="72.7" y="499.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.08%)</title><rect x="72.7" y="483.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.08%)</title><rect x="72.7" y="467.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.7" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.03%)</title><rect x="72.7" y="451.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="75.7" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.05%)</title><rect x="73.0" y="451.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="76.0" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="73.2" y="435.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="76.2" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="73.2" y="419.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="76.2" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.04%)</title><rect x="73.2" y="403.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="76.2" y="414.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="73.2" y="387.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="76.2" y="398.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="73.3" y="371.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="76.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11 samples, 0.06%)</title><rect x="74.0" y="659.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.0" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.03%)</title><rect x="74.2" y="643.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.2" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.03%)</title><rect x="74.2" y="627.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (4 samples, 0.02%)</title><rect x="74.9" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.9" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (27 samples, 0.15%)</title><rect x="75.3" y="675.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.3" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (27 samples, 0.15%)</title><rect x="75.3" y="659.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.3" y="670.0"></text>
</g>
<g>
<title>__libc_recv (24 samples, 0.14%)</title><rect x="75.5" y="643.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="78.5" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.10%)</title><rect x="76.0" y="627.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="79.0" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.10%)</title><rect x="76.0" y="611.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="79.0" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (16 samples, 0.09%)</title><rect x="76.1" y="595.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="79.1" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (15 samples, 0.09%)</title><rect x="76.1" y="579.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="79.1" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (6 samples, 0.03%)</title><rect x="76.3" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="79.3" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (6 samples, 0.03%)</title><rect x="76.3" y="547.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="79.3" y="558.0"></text>
</g>
<g>
<title>sock_recvmsg (6 samples, 0.03%)</title><rect x="76.7" y="563.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="79.7" y="574.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.03%)</title><rect x="76.7" y="547.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="79.7" y="558.0"></text>
</g>
<g>
<title>sock_has_perm (5 samples, 0.03%)</title><rect x="76.7" y="531.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="79.7" y="542.0"></text>
</g>
<g>
<title>avc_has_perm (4 samples, 0.02%)</title><rect x="76.8" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="79.8" y="526.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=14172] (191 samples, 1.09%)</title><rect x="77.1" y="739.0" width="12.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="80.1" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.02%)</title><rect x="77.3" y="723.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="80.3" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.02%)</title><rect x="77.3" y="707.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="80.3" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.02%)</title><rect x="77.3" y="691.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="80.3" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.02%)</title><rect x="77.3" y="675.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="80.3" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.02%)</title><rect x="77.6" y="723.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="80.6" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.03%)</title><rect x="77.9" y="723.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="80.9" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.03%)</title><rect x="77.9" y="707.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="80.9" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (4 samples, 0.02%)</title><rect x="77.9" y="691.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="80.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="78.4" y="723.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="81.4" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (166 samples, 0.95%)</title><rect x="78.8" y="723.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="81.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (62 samples, 0.35%)</title><rect x="78.8" y="707.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (59 samples, 0.34%)</title><rect x="79.0" y="691.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="82.0" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (46 samples, 0.26%)</title><rect x="79.5" y="675.0" width="3.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="82.5" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.17%)</title><rect x="80.6" y="659.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="83.6" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.17%)</title><rect x="80.6" y="643.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="83.6" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (25 samples, 0.14%)</title><rect x="80.9" y="627.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="83.9" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (23 samples, 0.13%)</title><rect x="81.0" y="611.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="84.0" y="622.0"></text>
</g>
<g>
<title>ep_poll (16 samples, 0.09%)</title><rect x="81.2" y="595.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="84.2" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (12 samples, 0.07%)</title><rect x="81.4" y="579.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="84.4" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.03%)</title><rect x="81.8" y="563.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="84.8" y="574.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.02%)</title><rect x="82.3" y="595.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="85.3" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (104 samples, 0.59%)</title><rect x="83.0" y="707.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="86.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (102 samples, 0.58%)</title><rect x="83.1" y="691.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (68 samples, 0.39%)</title><rect x="83.1" y="675.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (47 samples, 0.27%)</title><rect x="83.1" y="659.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (47 samples, 0.27%)</title><rect x="83.1" y="643.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.1" y="654.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (45 samples, 0.26%)</title><rect x="83.1" y="627.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="86.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (44 samples, 0.25%)</title><rect x="83.2" y="611.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (13 samples, 0.07%)</title><rect x="83.3" y="595.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="86.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (11 samples, 0.06%)</title><rect x="83.5" y="579.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (29 samples, 0.17%)</title><rect x="84.2" y="595.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (28 samples, 0.16%)</title><rect x="84.3" y="579.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (28 samples, 0.16%)</title><rect x="84.3" y="563.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (24 samples, 0.14%)</title><rect x="84.3" y="547.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (24 samples, 0.14%)</title><rect x="84.3" y="531.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 0.14%)</title><rect x="84.3" y="515.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 0.14%)</title><rect x="84.3" y="499.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 0.14%)</title><rect x="84.3" y="483.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (24 samples, 0.14%)</title><rect x="84.3" y="467.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.3" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.02%)</title><rect x="84.3" y="451.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="87.3" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_signal (18 samples, 0.10%)</title><rect x="84.7" y="451.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="87.7" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.07%)</title><rect x="85.1" y="435.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="88.1" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.07%)</title><rect x="85.1" y="419.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="88.1" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.06%)</title><rect x="85.2" y="403.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="88.2" y="414.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.06%)</title><rect x="85.2" y="387.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="88.2" y="398.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.06%)</title><rect x="85.2" y="371.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="88.2" y="382.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.05%)</title><rect x="85.3" y="355.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="88.3" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.05%)</title><rect x="85.3" y="339.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="88.3" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.05%)</title><rect x="85.3" y="323.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="88.3" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11 samples, 0.06%)</title><rect x="86.3" y="659.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="89.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.02%)</title><rect x="86.3" y="643.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="89.3" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.03%)</title><rect x="86.5" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="89.5" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.03%)</title><rect x="86.5" y="627.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (5 samples, 0.03%)</title><rect x="87.2" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.2" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (34 samples, 0.19%)</title><rect x="87.7" y="675.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.7" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (34 samples, 0.19%)</title><rect x="87.7" y="659.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="87.7" y="643.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="90.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="87.7" y="627.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="90.7" y="638.0"></text>
</g>
<g>
<title>__libc_recv (30 samples, 0.17%)</title><rect x="88.0" y="643.0" width="2.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="91.0" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.14%)</title><rect x="88.4" y="627.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="91.4" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.14%)</title><rect x="88.4" y="611.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="91.4" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (23 samples, 0.13%)</title><rect x="88.4" y="595.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="91.4" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (23 samples, 0.13%)</title><rect x="88.4" y="579.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="91.4" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (12 samples, 0.07%)</title><rect x="88.6" y="563.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="91.6" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.07%)</title><rect x="88.6" y="547.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="91.6" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.04%)</title><rect x="89.0" y="531.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="92.0" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (7 samples, 0.04%)</title><rect x="89.0" y="515.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="92.0" y="526.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.02%)</title><rect x="89.0" y="499.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="92.0" y="510.0"></text>
</g>
<g>
<title>copyout (4 samples, 0.02%)</title><rect x="89.0" y="483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="92.0" y="494.0"></text>
</g>
<g>
<title>sock_recvmsg (5 samples, 0.03%)</title><rect x="89.4" y="563.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="92.4" y="574.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.03%)</title><rect x="89.4" y="547.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="92.4" y="558.0"></text>
</g>
<g>
<title>sock_has_perm (5 samples, 0.03%)</title><rect x="89.4" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="92.4" y="542.0"></text>
</g>
<g>
<title>avc_has_perm (4 samples, 0.02%)</title><rect x="89.5" y="515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="92.5" y="526.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=14157] (210 samples, 1.20%)</title><rect x="90.0" y="739.0" width="14.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="93.0" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.02%)</title><rect x="90.0" y="723.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="93.0" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.03%)</title><rect x="90.2" y="723.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="93.2" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.02%)</title><rect x="90.2" y="707.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="93.2" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.02%)</title><rect x="90.2" y="691.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="93.2" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (9 samples, 0.05%)</title><rect x="90.6" y="723.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="93.6" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (8 samples, 0.05%)</title><rect x="90.7" y="707.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="93.7" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (5 samples, 0.03%)</title><rect x="90.9" y="691.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="93.9" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (5 samples, 0.03%)</title><rect x="90.9" y="675.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="93.9" y="686.0"></text>
</g>
<g>
<title>[not_walkable_Java] (6 samples, 0.03%)</title><rect x="91.2" y="723.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="94.2" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="91.3" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="94.3" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (5 samples, 0.03%)</title><rect x="91.3" y="691.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="94.3" y="702.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (183 samples, 1.04%)</title><rect x="91.8" y="723.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (78 samples, 0.44%)</title><rect x="92.1" y="707.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="95.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (76 samples, 0.43%)</title><rect x="92.2" y="691.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.2" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (72 samples, 0.41%)</title><rect x="92.3" y="675.0" width="4.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="95.3" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 0.27%)</title><rect x="93.9" y="659.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="96.9" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 0.27%)</title><rect x="93.9" y="643.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="96.9" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (44 samples, 0.25%)</title><rect x="94.2" y="627.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="97.2" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (43 samples, 0.25%)</title><rect x="94.2" y="611.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="97.2" y="622.0"></text>
</g>
<g>
<title>ep_poll (38 samples, 0.22%)</title><rect x="94.5" y="595.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="97.5" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (28 samples, 0.16%)</title><rect x="95.0" y="579.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="98.0" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.05%)</title><rect x="96.3" y="563.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="99.3" y="574.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (6 samples, 0.03%)</title><rect x="96.5" y="547.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="99.5" y="558.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.03%)</title><rect x="96.5" y="531.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="99.5" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (101 samples, 0.58%)</title><rect x="97.3" y="707.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="100.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (99 samples, 0.56%)</title><rect x="97.3" y="691.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (60 samples, 0.34%)</title><rect x="97.4" y="675.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.4" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (36 samples, 0.21%)</title><rect x="97.4" y="659.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="100.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (36 samples, 0.21%)</title><rect x="97.4" y="643.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.4" y="654.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (36 samples, 0.21%)</title><rect x="97.4" y="627.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (34 samples, 0.19%)</title><rect x="97.6" y="611.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="100.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (11 samples, 0.06%)</title><rect x="97.9" y="595.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (11 samples, 0.06%)</title><rect x="97.9" y="579.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="100.9" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (4 samples, 0.02%)</title><rect x="98.0" y="563.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (18 samples, 0.10%)</title><rect x="98.7" y="595.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 0.10%)</title><rect x="98.7" y="579.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (17 samples, 0.10%)</title><rect x="98.7" y="563.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="101.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (8 samples, 0.05%)</title><rect x="98.8" y="547.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.05%)</title><rect x="98.8" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.05%)</title><rect x="98.8" y="515.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.05%)</title><rect x="98.8" y="499.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.05%)</title><rect x="98.8" y="483.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.05%)</title><rect x="98.8" y="467.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (14 samples, 0.08%)</title><rect x="99.9" y="659.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (8 samples, 0.05%)</title><rect x="99.9" y="643.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="102.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.02%)</title><rect x="100.2" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="103.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.02%)</title><rect x="100.2" y="611.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="103.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.02%)</title><rect x="100.2" y="595.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="103.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.02%)</title><rect x="100.8" y="659.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="103.8" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.02%)</title><rect x="100.8" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.8" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.02%)</title><rect x="100.8" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.8" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (38 samples, 0.22%)</title><rect x="101.4" y="675.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.4" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (38 samples, 0.22%)</title><rect x="101.4" y="659.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.03%)</title><rect x="101.4" y="643.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="104.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.03%)</title><rect x="101.4" y="627.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="104.4" y="638.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.02%)</title><rect x="101.4" y="611.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="104.4" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.02%)</title><rect x="101.4" y="595.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="104.4" y="606.0"></text>
</g>
<g>
<title>__libc_recv (30 samples, 0.17%)</title><rect x="101.8" y="643.0" width="2.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="104.8" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.13%)</title><rect x="102.3" y="627.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="105.3" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.13%)</title><rect x="102.3" y="611.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="105.3" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (19 samples, 0.11%)</title><rect x="102.6" y="595.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="105.6" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (17 samples, 0.10%)</title><rect x="102.7" y="579.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="105.7" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (10 samples, 0.06%)</title><rect x="102.7" y="563.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="105.7" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (10 samples, 0.06%)</title><rect x="102.7" y="547.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="105.7" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.02%)</title><rect x="103.0" y="531.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="106.0" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.02%)</title><rect x="103.0" y="515.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="106.0" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.03%)</title><rect x="103.4" y="563.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="106.4" y="574.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.03%)</title><rect x="103.5" y="547.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="106.5" y="558.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.02%)</title><rect x="103.6" y="531.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="106.6" y="542.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=14167] (112 samples, 0.64%)</title><rect x="104.1" y="739.0" width="7.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="107.1" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.02%)</title><rect x="104.2" y="723.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="107.2" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.02%)</title><rect x="104.6" y="723.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="107.6" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.02%)</title><rect x="104.6" y="707.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="107.6" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.02%)</title><rect x="104.6" y="691.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="107.6" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.02%)</title><rect x="104.6" y="675.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="107.6" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.02%)</title><rect x="104.8" y="723.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="107.8" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.02%)</title><rect x="104.8" y="707.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="107.8" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (93 samples, 0.53%)</title><rect x="105.4" y="723.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="108.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (44 samples, 0.25%)</title><rect x="105.4" y="707.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (6 samples, 0.03%)</title><rect x="105.5" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.5" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (6 samples, 0.03%)</title><rect x="105.5" y="675.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.5" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (37 samples, 0.21%)</title><rect x="105.9" y="691.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.9" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (30 samples, 0.17%)</title><rect x="106.1" y="675.0" width="2.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="109.1" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.11%)</title><rect x="106.9" y="659.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="109.9" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.11%)</title><rect x="106.9" y="643.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="109.9" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (17 samples, 0.10%)</title><rect x="107.0" y="627.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="110.0" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (17 samples, 0.10%)</title><rect x="107.0" y="611.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="110.0" y="622.0"></text>
</g>
<g>
<title>ep_poll (13 samples, 0.07%)</title><rect x="107.1" y="595.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="110.1" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (12 samples, 0.07%)</title><rect x="107.2" y="579.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="110.2" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.04%)</title><rect x="107.5" y="563.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="110.5" y="574.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (4 samples, 0.02%)</title><rect x="107.7" y="547.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="110.7" y="558.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.02%)</title><rect x="107.7" y="531.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="110.7" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (49 samples, 0.28%)</title><rect x="108.3" y="707.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="111.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (47 samples, 0.27%)</title><rect x="108.4" y="691.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (31 samples, 0.18%)</title><rect x="108.4" y="675.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="111.4" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (26 samples, 0.15%)</title><rect x="108.4" y="659.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (25 samples, 0.14%)</title><rect x="108.5" y="643.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.5" y="654.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (24 samples, 0.14%)</title><rect x="108.5" y="627.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="111.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (23 samples, 0.13%)</title><rect x="108.5" y="611.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (12 samples, 0.07%)</title><rect x="108.6" y="595.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (12 samples, 0.07%)</title><rect x="108.6" y="579.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (8 samples, 0.05%)</title><rect x="108.6" y="563.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.6" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (5 samples, 0.03%)</title><rect x="108.8" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (10 samples, 0.06%)</title><rect x="109.4" y="595.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="112.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.05%)</title><rect x="109.5" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.05%)</title><rect x="109.5" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (8 samples, 0.05%)</title><rect x="109.5" y="547.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.05%)</title><rect x="109.5" y="531.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="112.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.05%)</title><rect x="109.5" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.05%)</title><rect x="109.5" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.05%)</title><rect x="109.5" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="112.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.05%)</title><rect x="109.5" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.5" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.03%)</title><rect x="109.6" y="451.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="112.6" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="109.8" y="435.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="112.8" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="109.8" y="419.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="112.8" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="109.8" y="403.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="112.8" y="414.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="109.8" y="387.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="112.8" y="398.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="109.8" y="371.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="112.8" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (16 samples, 0.09%)</title><rect x="110.5" y="675.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.5" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (16 samples, 0.09%)</title><rect x="110.5" y="659.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.5" y="670.0"></text>
</g>
<g>
<title>__libc_recv (13 samples, 0.07%)</title><rect x="110.7" y="643.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="113.7" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.06%)</title><rect x="110.9" y="627.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="113.9" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.06%)</title><rect x="110.9" y="611.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="113.9" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (10 samples, 0.06%)</title><rect x="110.9" y="595.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="113.9" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (9 samples, 0.05%)</title><rect x="111.0" y="579.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="114.0" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (5 samples, 0.03%)</title><rect x="111.1" y="563.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="114.1" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.03%)</title><rect x="111.1" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="114.1" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=14173] (94 samples, 0.54%)</title><rect x="111.6" y="739.0" width="6.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="114.6" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.02%)</title><rect x="111.8" y="723.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="114.8" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (84 samples, 0.48%)</title><rect x="112.3" y="723.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (34 samples, 0.19%)</title><rect x="112.3" y="707.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (32 samples, 0.18%)</title><rect x="112.4" y="691.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="115.4" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (29 samples, 0.17%)</title><rect x="112.6" y="675.0" width="1.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="115.6" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.06%)</title><rect x="113.9" y="659.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="116.9" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.06%)</title><rect x="113.9" y="643.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="116.9" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (10 samples, 0.06%)</title><rect x="113.9" y="627.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="116.9" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (10 samples, 0.06%)</title><rect x="113.9" y="611.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="116.9" y="622.0"></text>
</g>
<g>
<title>ep_poll (9 samples, 0.05%)</title><rect x="113.9" y="595.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="116.9" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (5 samples, 0.03%)</title><rect x="114.1" y="579.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="117.1" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (50 samples, 0.29%)</title><rect x="114.6" y="707.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (50 samples, 0.29%)</title><rect x="114.6" y="691.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (33 samples, 0.19%)</title><rect x="114.7" y="675.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="117.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (30 samples, 0.17%)</title><rect x="114.7" y="659.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.7" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (30 samples, 0.17%)</title><rect x="114.7" y="643.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.7" y="654.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (28 samples, 0.16%)</title><rect x="114.7" y="627.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="117.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (25 samples, 0.14%)</title><rect x="114.9" y="611.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="117.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (5 samples, 0.03%)</title><rect x="115.1" y="595.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (5 samples, 0.03%)</title><rect x="115.1" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="118.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (17 samples, 0.10%)</title><rect x="115.4" y="595.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 0.09%)</title><rect x="115.5" y="579.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="118.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (16 samples, 0.09%)</title><rect x="115.5" y="563.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (12 samples, 0.07%)</title><rect x="115.5" y="547.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="118.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.07%)</title><rect x="115.5" y="531.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.07%)</title><rect x="115.5" y="515.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="118.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.07%)</title><rect x="115.5" y="499.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.07%)</title><rect x="115.5" y="483.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.07%)</title><rect x="115.5" y="467.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="118.5" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.05%)</title><rect x="115.7" y="451.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="118.7" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="115.9" y="435.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="118.9" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="115.9" y="419.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="118.9" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="115.9" y="403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="118.9" y="414.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="115.9" y="387.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="118.9" y="398.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="115.9" y="371.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="118.9" y="382.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (16 samples, 0.09%)</title><rect x="116.9" y="675.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="119.9" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (16 samples, 0.09%)</title><rect x="116.9" y="659.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.9" y="670.0"></text>
</g>
<g>
<title>__libc_recv (13 samples, 0.07%)</title><rect x="117.1" y="643.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="120.1" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="117.2" y="627.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="120.2" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="117.2" y="611.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="120.2" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (11 samples, 0.06%)</title><rect x="117.2" y="595.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="120.2" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (11 samples, 0.06%)</title><rect x="117.2" y="579.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="120.2" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (6 samples, 0.03%)</title><rect x="117.2" y="563.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="120.2" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (6 samples, 0.03%)</title><rect x="117.2" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="120.2" y="558.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 0.02%)</title><rect x="117.6" y="563.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="120.6" y="574.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.02%)</title><rect x="117.6" y="547.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="120.6" y="558.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.02%)</title><rect x="117.6" y="531.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="120.6" y="542.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=14158] (71 samples, 0.40%)</title><rect x="118.0" y="739.0" width="4.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="121.0" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (57 samples, 0.32%)</title><rect x="118.8" y="723.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (27 samples, 0.15%)</title><rect x="118.9" y="707.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (26 samples, 0.15%)</title><rect x="119.0" y="691.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.0" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (20 samples, 0.11%)</title><rect x="119.2" y="675.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="122.2" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.09%)</title><rect x="119.4" y="659.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="122.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.09%)</title><rect x="119.4" y="643.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="122.4" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (16 samples, 0.09%)</title><rect x="119.4" y="627.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="122.4" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (16 samples, 0.09%)</title><rect x="119.4" y="611.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="122.4" y="622.0"></text>
</g>
<g>
<title>ep_poll (13 samples, 0.07%)</title><rect x="119.5" y="595.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="122.5" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (12 samples, 0.07%)</title><rect x="119.6" y="579.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="122.6" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.02%)</title><rect x="120.1" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="123.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (29 samples, 0.17%)</title><rect x="120.7" y="707.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (29 samples, 0.17%)</title><rect x="120.7" y="691.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="123.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (14 samples, 0.08%)</title><rect x="120.7" y="675.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="123.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (12 samples, 0.07%)</title><rect x="120.7" y="659.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.7" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (12 samples, 0.07%)</title><rect x="120.7" y="643.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.7" y="654.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (12 samples, 0.07%)</title><rect x="120.7" y="627.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="123.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (10 samples, 0.06%)</title><rect x="120.9" y="611.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="123.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (6 samples, 0.03%)</title><rect x="120.9" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (6 samples, 0.03%)</title><rect x="120.9" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.9" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (15 samples, 0.09%)</title><rect x="121.7" y="675.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.7" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (15 samples, 0.09%)</title><rect x="121.7" y="659.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.7" y="670.0"></text>
</g>
<g>
<title>__libc_recv (14 samples, 0.08%)</title><rect x="121.7" y="643.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="124.7" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="121.9" y="627.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="124.9" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="121.9" y="611.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="124.9" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (10 samples, 0.06%)</title><rect x="122.0" y="595.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="125.0" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (10 samples, 0.06%)</title><rect x="122.0" y="579.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="125.0" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (5 samples, 0.03%)</title><rect x="122.0" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="125.0" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.03%)</title><rect x="122.0" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="125.0" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.02%)</title><rect x="122.1" y="531.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="125.1" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.02%)</title><rect x="122.1" y="515.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="125.1" y="526.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 0.02%)</title><rect x="122.3" y="563.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="125.3" y="574.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.02%)</title><rect x="122.3" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="125.3" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=14168] (177 samples, 1.01%)</title><rect x="122.7" y="739.0" width="11.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="125.7" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.03%)</title><rect x="122.7" y="723.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="125.7" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.02%)</title><rect x="122.9" y="707.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="125.9" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.02%)</title><rect x="122.9" y="691.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="125.9" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.02%)</title><rect x="122.9" y="675.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="125.9" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (9 samples, 0.05%)</title><rect x="123.3" y="723.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="126.3" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.03%)</title><rect x="123.5" y="707.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="126.5" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.03%)</title><rect x="123.5" y="691.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="126.5" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="123.5" y="675.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="126.5" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.02%)</title><rect x="123.6" y="659.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="126.6" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.06%)</title><rect x="123.9" y="723.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="126.9" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (9 samples, 0.05%)</title><rect x="124.0" y="707.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="127.0" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (6 samples, 0.03%)</title><rect x="124.2" y="691.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="127.2" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (6 samples, 0.03%)</title><rect x="124.2" y="675.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="127.2" y="686.0"></text>
</g>
<g>
<title>[not_walkable_Java] (7 samples, 0.04%)</title><rect x="124.6" y="723.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="127.6" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.03%)</title><rect x="124.6" y="707.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="127.6" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (4 samples, 0.02%)</title><rect x="124.6" y="691.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="127.6" y="702.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.02%)</title><rect x="124.6" y="675.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="127.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.04%)</title><rect x="125.0" y="723.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="128.0" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (134 samples, 0.76%)</title><rect x="125.6" y="723.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="128.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (49 samples, 0.28%)</title><rect x="125.8" y="707.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (47 samples, 0.27%)</title><rect x="126.0" y="691.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.0" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (38 samples, 0.22%)</title><rect x="126.1" y="675.0" width="2.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="129.1" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.14%)</title><rect x="127.0" y="659.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="130.0" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.14%)</title><rect x="127.0" y="643.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="130.0" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (22 samples, 0.13%)</title><rect x="127.2" y="627.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="130.2" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (21 samples, 0.12%)</title><rect x="127.2" y="611.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="130.2" y="622.0"></text>
</g>
<g>
<title>ep_poll (14 samples, 0.08%)</title><rect x="127.4" y="595.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="130.4" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (12 samples, 0.07%)</title><rect x="127.4" y="579.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="130.4" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.02%)</title><rect x="127.8" y="563.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="130.8" y="574.0"></text>
</g>
<g>
<title>fput_many (5 samples, 0.03%)</title><rect x="128.3" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="131.3" y="606.0"></text>
</g>
<g>
<title>__GI___clock_gettime (4 samples, 0.02%)</title><rect x="128.7" y="675.0" width="0.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="131.7" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (82 samples, 0.47%)</title><rect x="129.1" y="707.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (81 samples, 0.46%)</title><rect x="129.2" y="691.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (44 samples, 0.25%)</title><rect x="129.2" y="675.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (26 samples, 0.15%)</title><rect x="129.2" y="659.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (26 samples, 0.15%)</title><rect x="129.2" y="643.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.2" y="654.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (26 samples, 0.15%)</title><rect x="129.2" y="627.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (26 samples, 0.15%)</title><rect x="129.2" y="611.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (7 samples, 0.04%)</title><rect x="129.5" y="595.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (7 samples, 0.04%)</title><rect x="129.5" y="579.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="132.5" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (5 samples, 0.03%)</title><rect x="129.5" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="132.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (14 samples, 0.08%)</title><rect x="130.0" y="595.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="133.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.07%)</title><rect x="130.1" y="579.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (13 samples, 0.07%)</title><rect x="130.1" y="563.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (11 samples, 0.06%)</title><rect x="130.1" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="133.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.06%)</title><rect x="130.1" y="531.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.06%)</title><rect x="130.1" y="515.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.06%)</title><rect x="130.1" y="499.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.06%)</title><rect x="130.1" y="483.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.06%)</title><rect x="130.1" y="467.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.1" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.03%)</title><rect x="130.4" y="451.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="133.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.05%)</title><rect x="130.9" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="133.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.03%)</title><rect x="130.9" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.02%)</title><rect x="131.0" y="627.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="134.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.02%)</title><rect x="131.0" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="134.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.02%)</title><rect x="131.0" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.02%)</title><rect x="131.6" y="659.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.6" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (37 samples, 0.21%)</title><rect x="132.2" y="675.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.2" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (37 samples, 0.21%)</title><rect x="132.2" y="659.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="135.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="132.2" y="643.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="135.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="132.2" y="627.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="135.2" y="638.0"></text>
</g>
<g>
<title>__libc_recv (32 samples, 0.18%)</title><rect x="132.5" y="643.0" width="2.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="135.5" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.14%)</title><rect x="133.0" y="627.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="136.0" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.14%)</title><rect x="133.0" y="611.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="136.0" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (22 samples, 0.13%)</title><rect x="133.2" y="595.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="136.2" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (22 samples, 0.13%)</title><rect x="133.2" y="579.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="136.2" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (12 samples, 0.07%)</title><rect x="133.4" y="563.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="136.4" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.07%)</title><rect x="133.4" y="547.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="136.4" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.03%)</title><rect x="133.7" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="136.7" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.03%)</title><rect x="133.7" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="136.7" y="526.0"></text>
</g>
<g>
<title>sock_recvmsg (6 samples, 0.03%)</title><rect x="134.2" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="137.2" y="574.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.03%)</title><rect x="134.2" y="547.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="137.2" y="558.0"></text>
</g>
<g>
<title>sock_has_perm (6 samples, 0.03%)</title><rect x="134.2" y="531.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="137.2" y="542.0"></text>
</g>
<g>
<title>avc_has_perm (4 samples, 0.02%)</title><rect x="134.3" y="515.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="137.3" y="526.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=14174] (271 samples, 1.54%)</title><rect x="134.6" y="739.0" width="18.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="137.6" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.02%)</title><rect x="134.8" y="723.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="137.8" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.03%)</title><rect x="135.1" y="723.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="138.1" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.03%)</title><rect x="135.2" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="138.2" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.03%)</title><rect x="135.2" y="691.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="138.2" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (33 samples, 0.19%)</title><rect x="135.5" y="723.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="138.5" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (33 samples, 0.19%)</title><rect x="135.5" y="707.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="138.5" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (8 samples, 0.05%)</title><rect x="135.9" y="691.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="138.9" y="702.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.03%)</title><rect x="136.1" y="675.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="139.1" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (20 samples, 0.11%)</title><rect x="136.4" y="691.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="139.4" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (18 samples, 0.10%)</title><rect x="136.5" y="675.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="139.5" y="686.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.03%)</title><rect x="136.5" y="659.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="139.5" y="670.0"></text>
</g>
<g>
<title>__lll_unlock_wake (10 samples, 0.06%)</title><rect x="136.9" y="659.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="139.9" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.05%)</title><rect x="137.1" y="643.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="140.1" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.05%)</title><rect x="137.1" y="627.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="140.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.06%)</title><rect x="138.0" y="723.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="141.0" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (10 samples, 0.06%)</title><rect x="138.0" y="707.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="141.0" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="138.3" y="691.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="141.3" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="138.3" y="675.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="141.3" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="138.3" y="659.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="141.3" y="670.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (209 samples, 1.19%)</title><rect x="138.8" y="723.0" width="14.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (62 samples, 0.35%)</title><rect x="138.9" y="707.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="141.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (59 samples, 0.34%)</title><rect x="139.1" y="691.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="142.1" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (52 samples, 0.30%)</title><rect x="139.3" y="675.0" width="3.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="142.3" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.14%)</title><rect x="141.1" y="659.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="144.1" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.14%)</title><rect x="141.1" y="643.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="144.1" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (23 samples, 0.13%)</title><rect x="141.2" y="627.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="144.2" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (22 samples, 0.13%)</title><rect x="141.3" y="611.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="144.3" y="622.0"></text>
</g>
<g>
<title>ep_poll (18 samples, 0.10%)</title><rect x="141.4" y="595.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="144.4" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (14 samples, 0.08%)</title><rect x="141.5" y="579.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="144.5" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.03%)</title><rect x="142.0" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="145.0" y="574.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (5 samples, 0.03%)</title><rect x="142.0" y="547.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="145.0" y="558.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.03%)</title><rect x="142.0" y="531.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="145.0" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (146 samples, 0.83%)</title><rect x="143.1" y="707.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (144 samples, 0.82%)</title><rect x="143.2" y="691.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (102 samples, 0.58%)</title><rect x="143.2" y="675.0" width="6.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (81 samples, 0.46%)</title><rect x="143.3" y="659.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (81 samples, 0.46%)</title><rect x="143.3" y="643.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.3" y="654.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (80 samples, 0.46%)</title><rect x="143.3" y="627.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="146.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.03%)</title><rect x="143.3" y="611.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (75 samples, 0.43%)</title><rect x="143.7" y="611.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (25 samples, 0.14%)</title><rect x="143.8" y="595.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (24 samples, 0.14%)</title><rect x="143.9" y="579.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.9" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (11 samples, 0.06%)</title><rect x="143.9" y="563.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.9" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (5 samples, 0.03%)</title><rect x="144.3" y="547.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="147.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.02%)</title><rect x="144.9" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="147.9" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.02%)</title><rect x="144.9" y="547.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="147.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.02%)</title><rect x="145.2" y="563.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="148.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.02%)</title><rect x="145.2" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.02%)</title><rect x="145.2" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (47 samples, 0.27%)</title><rect x="145.5" y="595.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (46 samples, 0.26%)</title><rect x="145.6" y="579.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="148.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (46 samples, 0.26%)</title><rect x="145.6" y="563.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (35 samples, 0.20%)</title><rect x="145.6" y="547.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (35 samples, 0.20%)</title><rect x="145.6" y="531.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="148.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (35 samples, 0.20%)</title><rect x="145.6" y="515.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (35 samples, 0.20%)</title><rect x="145.6" y="499.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (35 samples, 0.20%)</title><rect x="145.6" y="483.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (35 samples, 0.20%)</title><rect x="145.6" y="467.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.6" y="478.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.05%)</title><rect x="145.8" y="451.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="148.8" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_signal (23 samples, 0.13%)</title><rect x="146.4" y="451.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="149.4" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.09%)</title><rect x="146.8" y="435.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="149.8" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.09%)</title><rect x="146.8" y="419.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="149.8" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.09%)</title><rect x="146.8" y="403.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="149.8" y="414.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.09%)</title><rect x="146.9" y="387.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="149.9" y="398.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.08%)</title><rect x="147.0" y="371.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="150.0" y="382.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.06%)</title><rect x="147.2" y="355.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="150.2" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.06%)</title><rect x="147.2" y="339.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="150.2" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.06%)</title><rect x="147.2" y="323.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="150.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.02%)</title><rect x="148.0" y="547.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.02%)</title><rect x="148.0" y="531.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.03%)</title><rect x="148.2" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.03%)</title><rect x="148.2" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10 samples, 0.06%)</title><rect x="148.8" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.02%)</title><rect x="148.8" y="643.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.8" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.03%)</title><rect x="149.0" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="152.0" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.03%)</title><rect x="149.0" y="627.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (5 samples, 0.03%)</title><rect x="149.5" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.5" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (42 samples, 0.24%)</title><rect x="150.1" y="675.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.1" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (42 samples, 0.24%)</title><rect x="150.1" y="659.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="150.3" y="643.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="153.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="150.3" y="627.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="153.3" y="638.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.02%)</title><rect x="150.3" y="611.0" width="0.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="153.3" y="622.0"></text>
</g>
<g>
<title>__libc_recv (34 samples, 0.19%)</title><rect x="150.6" y="643.0" width="2.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="153.6" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.17%)</title><rect x="150.9" y="627.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="153.9" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.17%)</title><rect x="150.9" y="611.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="153.9" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (27 samples, 0.15%)</title><rect x="151.1" y="595.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="154.1" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (25 samples, 0.14%)</title><rect x="151.2" y="579.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="154.2" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (18 samples, 0.10%)</title><rect x="151.2" y="563.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="154.2" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (18 samples, 0.10%)</title><rect x="151.2" y="547.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="154.2" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (10 samples, 0.06%)</title><rect x="151.6" y="531.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="154.6" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 0.06%)</title><rect x="151.6" y="515.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="154.6" y="526.0"></text>
</g>
<g>
<title>simple_copy_to_iter (8 samples, 0.05%)</title><rect x="151.7" y="499.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="154.7" y="510.0"></text>
</g>
<g>
<title>__check_object_size (8 samples, 0.05%)</title><rect x="151.7" y="483.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="154.7" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.03%)</title><rect x="151.8" y="467.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="154.8" y="478.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 0.02%)</title><rect x="152.4" y="563.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="155.4" y="574.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.02%)</title><rect x="152.4" y="547.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="155.4" y="558.0"></text>
</g>
<g>
<title>[tid=14139] (94 samples, 0.54%)</title><rect x="152.9" y="739.0" width="6.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="155.9" y="750.0"></text>
</g>
<g>
<title>start_thread (89 samples, 0.51%)</title><rect x="153.2" y="723.0" width="6.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="156.2" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (89 samples, 0.51%)</title><rect x="153.2" y="707.0" width="6.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="156.2" y="718.0"></text>
</g>
<g>
<title>GangWorker::loop() (89 samples, 0.51%)</title><rect x="153.2" y="691.0" width="6.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="156.2" y="702.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (80 samples, 0.46%)</title><rect x="153.4" y="675.0" width="5.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="156.4" y="686.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (48 samples, 0.27%)</title><rect x="153.4" y="659.0" width="3.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="156.4" y="670.0"></text>
</g>
<g>
<title>SpinPause (46 samples, 0.26%)</title><rect x="153.5" y="643.0" width="3.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="156.5" y="654.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (15 samples, 0.09%)</title><rect x="156.6" y="659.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="159.6" y="670.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (15 samples, 0.09%)</title><rect x="156.6" y="643.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="159.6" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (15 samples, 0.09%)</title><rect x="156.6" y="627.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="159.6" y="638.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (15 samples, 0.09%)</title><rect x="156.6" y="611.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="159.6" y="622.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (13 samples, 0.07%)</title><rect x="156.7" y="595.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="159.7" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (6 samples, 0.03%)</title><rect x="156.7" y="579.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="159.7" y="590.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.03%)</title><rect x="156.8" y="563.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="159.8" y="574.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (7 samples, 0.04%)</title><rect x="157.1" y="579.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="160.1" y="590.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (7 samples, 0.04%)</title><rect x="157.1" y="563.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="160.1" y="574.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.03%)</title><rect x="157.7" y="659.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="160.7" y="670.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (5 samples, 0.03%)</title><rect x="157.7" y="643.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="160.7" y="654.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (5 samples, 0.03%)</title><rect x="157.7" y="627.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="160.7" y="638.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (4 samples, 0.02%)</title><rect x="157.7" y="611.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="160.7" y="622.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (12 samples, 0.07%)</title><rect x="158.0" y="659.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="161.0" y="670.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (6 samples, 0.03%)</title><rect x="158.1" y="643.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="161.1" y="654.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (5 samples, 0.03%)</title><rect x="158.2" y="627.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="161.2" y="638.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (4 samples, 0.02%)</title><rect x="158.3" y="611.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="161.3" y="622.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (4 samples, 0.02%)</title><rect x="158.5" y="643.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="161.5" y="654.0"></text>
</g>
<g>
<title>G1RemSetScanState::G1ClearCardTableTask::work(unsigned int) (4 samples, 0.02%)</title><rect x="158.8" y="675.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="161.8" y="686.0"></text>
</g>
<g>
<title>[tid=14141] (5 samples, 0.03%)</title><rect x="159.2" y="739.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="162.2" y="750.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.03%)</title><rect x="159.2" y="723.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="162.2" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.03%)</title><rect x="159.2" y="707.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="162.2" y="718.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 0.03%)</title><rect x="159.2" y="691.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="162.2" y="702.0"></text>
</g>
<g>
<title>[tid=14144] (130 samples, 0.74%)</title><rect x="159.7" y="739.0" width="8.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="162.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="159.8" y="723.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="162.8" y="734.0"></text>
</g>
<g>
<title>start_thread (122 samples, 0.70%)</title><rect x="160.3" y="723.0" width="8.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="163.3" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (122 samples, 0.70%)</title><rect x="160.3" y="707.0" width="8.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="163.3" y="718.0"></text>
</g>
<g>
<title>VMThread::run() (122 samples, 0.70%)</title><rect x="160.3" y="691.0" width="8.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="163.3" y="702.0"></text>
</g>
<g>
<title>VMThread::loop() (122 samples, 0.70%)</title><rect x="160.3" y="675.0" width="8.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="163.3" y="686.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (43 samples, 0.25%)</title><rect x="160.3" y="659.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="163.3" y="670.0"></text>
</g>
<g>
<title>SpinPause (14 samples, 0.08%)</title><rect x="163.2" y="659.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="166.2" y="670.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.54] (13 samples, 0.07%)</title><rect x="164.2" y="659.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="167.2" y="670.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (13 samples, 0.07%)</title><rect x="164.2" y="643.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="167.2" y="654.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (13 samples, 0.07%)</title><rect x="164.2" y="627.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="167.2" y="638.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (13 samples, 0.07%)</title><rect x="164.2" y="611.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="167.2" y="622.0"></text>
</g>
<g>
<title>__GI_sched_yield (51 samples, 0.29%)</title><rect x="165.1" y="659.0" width="3.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="168.1" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.12%)</title><rect x="167.1" y="643.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="170.1" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.12%)</title><rect x="167.1" y="627.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="170.1" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (12 samples, 0.07%)</title><rect x="167.6" y="611.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="170.6" y="622.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.07%)</title><rect x="167.6" y="595.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="170.6" y="606.0"></text>
</g>
<g>
<title>__sched_text_start (12 samples, 0.07%)</title><rect x="167.6" y="579.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="170.6" y="590.0"></text>
</g>
<g>
<title>[tid=14148] (68 samples, 0.39%)</title><rect x="168.5" y="739.0" width="4.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="171.5" y="750.0"></text>
</g>
<g>
<title>start_thread (67 samples, 0.38%)</title><rect x="168.5" y="723.0" width="4.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="171.5" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (67 samples, 0.38%)</title><rect x="168.5" y="707.0" width="4.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="171.5" y="718.0"></text>
</g>
<g>
<title>JavaThread::run() (67 samples, 0.38%)</title><rect x="168.5" y="691.0" width="4.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="171.5" y="702.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (67 samples, 0.38%)</title><rect x="168.5" y="675.0" width="4.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="171.5" y="686.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (67 samples, 0.38%)</title><rect x="168.5" y="659.0" width="4.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="171.5" y="670.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (67 samples, 0.38%)</title><rect x="168.5" y="643.0" width="4.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="171.5" y="654.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (67 samples, 0.38%)</title><rect x="168.5" y="627.0" width="4.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="171.5" y="638.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (67 samples, 0.38%)</title><rect x="168.5" y="611.0" width="4.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="171.5" y="622.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (42 samples, 0.24%)</title><rect x="168.5" y="595.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="171.5" y="606.0"></text>
</g>
<g>
<title>Matcher::match() (4 samples, 0.02%)</title><rect x="168.8" y="579.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="171.8" y="590.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (4 samples, 0.02%)</title><rect x="168.8" y="563.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="171.8" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (32 samples, 0.18%)</title><rect x="169.2" y="579.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="172.2" y="590.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (4 samples, 0.02%)</title><rect x="169.4" y="563.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="172.4" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (7 samples, 0.04%)</title><rect x="169.6" y="563.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="172.6" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (4 samples, 0.02%)</title><rect x="170.2" y="563.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="173.2" y="574.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (5 samples, 0.03%)</title><rect x="170.4" y="563.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="173.4" y="574.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (5 samples, 0.03%)</title><rect x="171.0" y="563.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="174.0" y="574.0"></text>
</g>
<g>
<title>Compile::Optimize() (17 samples, 0.10%)</title><rect x="171.4" y="595.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="174.4" y="606.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (10 samples, 0.06%)</title><rect x="171.7" y="579.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="174.7" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.04%)</title><rect x="172.6" y="595.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="175.6" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.04%)</title><rect x="172.6" y="579.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="175.6" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.04%)</title><rect x="172.6" y="563.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="175.6" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.04%)</title><rect x="172.6" y="547.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="175.6" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.04%)</title><rect x="172.6" y="531.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="175.6" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.04%)</title><rect x="172.6" y="515.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="175.6" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.04%)</title><rect x="172.6" y="499.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="175.6" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.03%)</title><rect x="172.6" y="483.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="175.6" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.03%)</title><rect x="172.6" y="467.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="175.6" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.03%)</title><rect x="172.6" y="451.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="175.6" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.03%)</title><rect x="172.6" y="435.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="175.6" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.03%)</title><rect x="172.6" y="419.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="175.6" y="430.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.03%)</title><rect x="172.6" y="403.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="175.6" y="414.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.03%)</title><rect x="172.6" y="387.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="175.6" y="398.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.03%)</title><rect x="172.6" y="371.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="175.6" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.03%)</title><rect x="172.6" y="355.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="175.6" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.02%)</title><rect x="172.7" y="339.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="175.7" y="350.0"></text>
</g>
<g>
<title>[tid=14149] (7 samples, 0.04%)</title><rect x="173.1" y="739.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="176.1" y="750.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.03%)</title><rect x="173.1" y="723.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="176.1" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.03%)</title><rect x="173.1" y="707.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="176.1" y="718.0"></text>
</g>
<g>
<title>JavaThread::run() (6 samples, 0.03%)</title><rect x="173.1" y="691.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="176.1" y="702.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (6 samples, 0.03%)</title><rect x="173.1" y="675.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="176.1" y="686.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (6 samples, 0.03%)</title><rect x="173.1" y="659.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="176.1" y="670.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (5 samples, 0.03%)</title><rect x="173.1" y="643.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="176.1" y="654.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (5 samples, 0.03%)</title><rect x="173.1" y="627.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="176.1" y="638.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (5 samples, 0.03%)</title><rect x="173.1" y="611.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="176.1" y="622.0"></text>
</g>
<g>
<title>Compilation::compile_method() (5 samples, 0.03%)</title><rect x="173.1" y="595.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="176.1" y="606.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (5 samples, 0.03%)</title><rect x="173.1" y="579.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="176.1" y="590.0"></text>
</g>
<g>
<title>[tid=14152] (4 samples, 0.02%)</title><rect x="173.7" y="739.0" width="0.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="176.7" y="750.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.02%)</title><rect x="173.7" y="723.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="176.7" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.02%)</title><rect x="173.7" y="707.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="176.7" y="718.0"></text>
</g>
<g>
<title>WatcherThread::run() (4 samples, 0.02%)</title><rect x="173.7" y="691.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="176.7" y="702.0"></text>
</g>
<g>
<title>[tid=14161] (96 samples, 0.55%)</title><rect x="173.9" y="739.0" width="6.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="176.9" y="750.0"></text>
</g>
<g>
<title>start_thread (92 samples, 0.52%)</title><rect x="174.2" y="723.0" width="6.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="177.2" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (92 samples, 0.52%)</title><rect x="174.2" y="707.0" width="6.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="177.2" y="718.0"></text>
</g>
<g>
<title>GangWorker::loop() (92 samples, 0.52%)</title><rect x="174.2" y="691.0" width="6.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="177.2" y="702.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (84 samples, 0.48%)</title><rect x="174.4" y="675.0" width="5.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="177.4" y="686.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (57 samples, 0.32%)</title><rect x="174.4" y="659.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="177.4" y="670.0"></text>
</g>
<g>
<title>SpinPause (56 samples, 0.32%)</title><rect x="174.5" y="643.0" width="3.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="177.5" y="654.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (11 samples, 0.06%)</title><rect x="178.2" y="659.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="181.2" y="670.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (11 samples, 0.06%)</title><rect x="178.2" y="643.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="181.2" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (10 samples, 0.06%)</title><rect x="178.2" y="627.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="181.2" y="638.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (10 samples, 0.06%)</title><rect x="178.2" y="611.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="181.2" y="622.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (9 samples, 0.05%)</title><rect x="178.2" y="595.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="181.2" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (6 samples, 0.03%)</title><rect x="178.2" y="579.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="181.2" y="590.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 0.03%)</title><rect x="178.2" y="563.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="181.2" y="574.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (13 samples, 0.07%)</title><rect x="179.1" y="659.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="182.1" y="670.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (11 samples, 0.06%)</title><rect x="179.2" y="643.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="182.2" y="654.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (10 samples, 0.06%)</title><rect x="179.2" y="627.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="182.2" y="638.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (10 samples, 0.06%)</title><rect x="179.2" y="611.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="182.2" y="622.0"></text>
</g>
<g>
<title>[tid=14162] (98 samples, 0.56%)</title><rect x="180.4" y="739.0" width="6.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="183.4" y="750.0"></text>
</g>
<g>
<title>start_thread (93 samples, 0.53%)</title><rect x="180.7" y="723.0" width="6.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="183.7" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (93 samples, 0.53%)</title><rect x="180.7" y="707.0" width="6.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="183.7" y="718.0"></text>
</g>
<g>
<title>GangWorker::loop() (93 samples, 0.53%)</title><rect x="180.7" y="691.0" width="6.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="183.7" y="702.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (5 samples, 0.03%)</title><rect x="180.7" y="675.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="183.7" y="686.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (82 samples, 0.47%)</title><rect x="181.1" y="675.0" width="5.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="184.1" y="686.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (59 samples, 0.34%)</title><rect x="181.1" y="659.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="184.1" y="670.0"></text>
</g>
<g>
<title>SpinPause (57 samples, 0.32%)</title><rect x="181.2" y="643.0" width="3.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="184.2" y="654.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (8 samples, 0.05%)</title><rect x="185.0" y="659.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="188.0" y="670.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (8 samples, 0.05%)</title><rect x="185.0" y="643.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="188.0" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (7 samples, 0.04%)</title><rect x="185.0" y="627.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="188.0" y="638.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (7 samples, 0.04%)</title><rect x="185.0" y="611.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="188.0" y="622.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (7 samples, 0.04%)</title><rect x="185.0" y="595.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="188.0" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (6 samples, 0.03%)</title><rect x="185.0" y="579.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="188.0" y="590.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (13 samples, 0.07%)</title><rect x="185.7" y="659.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="188.7" y="670.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (11 samples, 0.06%)</title><rect x="185.7" y="643.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="188.7" y="654.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (9 samples, 0.05%)</title><rect x="185.8" y="627.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="188.8" y="638.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (9 samples, 0.05%)</title><rect x="185.8" y="611.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="188.8" y="622.0"></text>
</g>
<g>
<title>JNIHandleBlock::oops_do(OopClosure*) (4 samples, 0.02%)</title><rect x="186.0" y="595.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="189.0" y="606.0"></text>
</g>
<g>
<title>[tid=14163] (95 samples, 0.54%)</title><rect x="187.0" y="739.0" width="6.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="190.0" y="750.0"></text>
</g>
<g>
<title>start_thread (93 samples, 0.53%)</title><rect x="187.1" y="723.0" width="6.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="190.1" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (93 samples, 0.53%)</title><rect x="187.1" y="707.0" width="6.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="190.1" y="718.0"></text>
</g>
<g>
<title>GangWorker::loop() (93 samples, 0.53%)</title><rect x="187.1" y="691.0" width="6.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="190.1" y="702.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (5 samples, 0.03%)</title><rect x="187.1" y="675.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="190.1" y="686.0"></text>
</g>
<g>
<title>OtherRegionsTable::occupied() const (4 samples, 0.02%)</title><rect x="187.2" y="659.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="190.2" y="670.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (77 samples, 0.44%)</title><rect x="187.5" y="675.0" width="5.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="190.5" y="686.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (54 samples, 0.31%)</title><rect x="187.5" y="659.0" width="3.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="190.5" y="670.0"></text>
</g>
<g>
<title>SpinPause (54 samples, 0.31%)</title><rect x="187.5" y="643.0" width="3.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="190.5" y="654.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (10 samples, 0.06%)</title><rect x="191.2" y="659.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="194.2" y="670.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (10 samples, 0.06%)</title><rect x="191.2" y="643.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="194.2" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (9 samples, 0.05%)</title><rect x="191.2" y="627.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="194.2" y="638.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (9 samples, 0.05%)</title><rect x="191.2" y="611.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="194.2" y="622.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (9 samples, 0.05%)</title><rect x="191.2" y="595.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="194.2" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (6 samples, 0.03%)</title><rect x="191.2" y="579.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="194.2" y="590.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (10 samples, 0.06%)</title><rect x="192.0" y="659.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="195.0" y="670.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (10 samples, 0.06%)</title><rect x="192.0" y="643.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="195.0" y="654.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (9 samples, 0.05%)</title><rect x="192.0" y="627.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="195.0" y="638.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (7 samples, 0.04%)</title><rect x="192.2" y="611.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="195.2" y="622.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (8 samples, 0.05%)</title><rect x="192.8" y="675.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="195.8" y="686.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (8 samples, 0.05%)</title><rect x="192.8" y="659.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="195.8" y="670.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.63] (6 samples, 0.03%)</title><rect x="192.8" y="643.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="195.8" y="654.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.03%)</title><rect x="192.9" y="627.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="195.9" y="638.0"></text>
</g>
<g>
<title>[worker-0 tid=14265] (1,026 samples, 5.85%)</title><rect x="193.4" y="739.0" width="69.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="196.4" y="750.0">[worker..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.03%)</title><rect x="193.4" y="723.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="196.4" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.03%)</title><rect x="193.4" y="707.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="196.4" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.03%)</title><rect x="193.4" y="691.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="196.4" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="193.4" y="675.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="196.4" y="686.0"></text>
</g>
<g>
<title>[unknown_Java] (32 samples, 0.18%)</title><rect x="193.8" y="723.0" width="2.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="196.8" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (988 samples, 5.63%)</title><rect x="195.9" y="723.0" width="66.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="198.9" y="734.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (988 samples, 5.63%)</title><rect x="195.9" y="707.0" width="66.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="198.9" y="718.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (988 samples, 5.63%)</title><rect x="195.9" y="691.0" width="66.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.9" y="702.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (25 samples, 0.14%)</title><rect x="196.1" y="675.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="199.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (25 samples, 0.14%)</title><rect x="196.1" y="659.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="199.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (19 samples, 0.11%)</title><rect x="196.1" y="643.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="199.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (18 samples, 0.10%)</title><rect x="196.2" y="627.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="199.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (18 samples, 0.10%)</title><rect x="196.2" y="611.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.2" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (10 samples, 0.06%)</title><rect x="196.2" y="595.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="199.2" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.03%)</title><rect x="196.3" y="579.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="199.3" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="196.4" y="563.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="199.4" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="196.4" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="199.4" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="196.5" y="531.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="199.5" y="542.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="196.5" y="515.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="199.5" y="526.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="196.5" y="499.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="199.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.05%)</title><rect x="196.9" y="595.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="199.9" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.02%)</title><rect x="197.1" y="579.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="200.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.02%)</title><rect x="197.5" y="643.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="200.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.02%)</title><rect x="197.5" y="627.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="200.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.02%)</title><rect x="197.5" y="611.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="200.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.02%)</title><rect x="197.5" y="595.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="200.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.02%)</title><rect x="197.5" y="579.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.5" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.02%)</title><rect x="197.5" y="563.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="200.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (961 samples, 5.48%)</title><rect x="197.7" y="675.0" width="64.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="200.7" y="686.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (961 samples, 5.48%)</title><rect x="197.7" y="659.0" width="64.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="200.7" y="670.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (117 samples, 0.67%)</title><rect x="197.8" y="643.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (117 samples, 0.67%)</title><rect x="197.8" y="627.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="200.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (117 samples, 0.67%)</title><rect x="197.8" y="611.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="200.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (117 samples, 0.67%)</title><rect x="197.8" y="595.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (117 samples, 0.67%)</title><rect x="197.8" y="579.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="200.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (20 samples, 0.11%)</title><rect x="197.9" y="563.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="200.9" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (20 samples, 0.11%)</title><rect x="197.9" y="547.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="200.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="197.9" y="531.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="200.9" y="542.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="197.9" y="515.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="200.9" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.03%)</title><rect x="197.9" y="499.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="200.9" y="510.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.02%)</title><rect x="198.0" y="483.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="201.0" y="494.0"></text>
</g>
<g>
<title>__libc_recv (14 samples, 0.08%)</title><rect x="198.3" y="531.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="201.3" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.06%)</title><rect x="198.5" y="515.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="201.5" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.06%)</title><rect x="198.5" y="499.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="201.5" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (9 samples, 0.05%)</title><rect x="198.6" y="483.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="201.6" y="494.0"></text>
</g>
<g>
<title>__sys_recvfrom (9 samples, 0.05%)</title><rect x="198.6" y="467.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="201.6" y="478.0"></text>
</g>
<g>
<title>inet_recvmsg (7 samples, 0.04%)</title><rect x="198.7" y="451.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="201.7" y="462.0"></text>
</g>
<g>
<title>tcp_recvmsg (7 samples, 0.04%)</title><rect x="198.7" y="435.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="201.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (5 samples, 0.03%)</title><rect x="199.3" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (4 samples, 0.02%)</title><rect x="199.6" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="202.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (10 samples, 0.06%)</title><rect x="199.9" y="563.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="202.9" y="574.0"></text>
</g>
<g>
<title>setsockopt (9 samples, 0.05%)</title><rect x="200.0" y="547.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="203.0" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (72 samples, 0.41%)</title><rect x="200.6" y="563.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="203.6" y="574.0"></text>
</g>
<g>
<title>.annobin_send.c (71 samples, 0.40%)</title><rect x="200.6" y="547.0" width="4.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="203.6" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (68 samples, 0.39%)</title><rect x="200.8" y="531.0" width="4.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="203.8" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (68 samples, 0.39%)</title><rect x="200.8" y="515.0" width="4.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="203.8" y="526.0"></text>
</g>
<g>
<title>__x64_sys_sendto (67 samples, 0.38%)</title><rect x="200.8" y="499.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="203.8" y="510.0"></text>
</g>
<g>
<title>__sys_sendto (67 samples, 0.38%)</title><rect x="200.8" y="483.0" width="4.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="203.8" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (66 samples, 0.38%)</title><rect x="200.8" y="467.0" width="4.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="203.8" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (66 samples, 0.38%)</title><rect x="200.8" y="451.0" width="4.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="203.8" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (66 samples, 0.38%)</title><rect x="200.8" y="435.0" width="4.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="203.8" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (63 samples, 0.36%)</title><rect x="200.9" y="419.0" width="4.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="203.9" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (63 samples, 0.36%)</title><rect x="200.9" y="403.0" width="4.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="203.9" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (59 samples, 0.34%)</title><rect x="201.0" y="387.0" width="4.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="204.0" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (57 samples, 0.32%)</title><rect x="201.0" y="371.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="204.0" y="382.0"></text>
</g>
<g>
<title>ip_local_out (10 samples, 0.06%)</title><rect x="201.0" y="355.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="204.0" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (10 samples, 0.06%)</title><rect x="201.0" y="339.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="204.0" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.06%)</title><rect x="201.0" y="323.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="204.0" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.03%)</title><rect x="201.0" y="307.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="204.0" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (4 samples, 0.02%)</title><rect x="201.4" y="307.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="204.4" y="318.0"></text>
</g>
<g>
<title>ip_output (47 samples, 0.27%)</title><rect x="201.7" y="355.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="204.7" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (46 samples, 0.26%)</title><rect x="201.7" y="339.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="204.7" y="350.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.02%)</title><rect x="201.8" y="323.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="204.8" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (41 samples, 0.23%)</title><rect x="202.0" y="323.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="205.0" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (41 samples, 0.23%)</title><rect x="202.0" y="307.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="205.0" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (41 samples, 0.23%)</title><rect x="202.0" y="291.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="205.0" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (41 samples, 0.23%)</title><rect x="202.0" y="275.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="205.0" y="286.0"></text>
</g>
<g>
<title>net_rx_action (40 samples, 0.23%)</title><rect x="202.1" y="259.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="205.1" y="270.0"></text>
</g>
<g>
<title>process_backlog (40 samples, 0.23%)</title><rect x="202.1" y="243.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="205.1" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (39 samples, 0.22%)</title><rect x="202.2" y="227.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="205.2" y="238.0"></text>
</g>
<g>
<title>ip_rcv (39 samples, 0.22%)</title><rect x="202.2" y="211.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="205.2" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (29 samples, 0.17%)</title><rect x="202.2" y="195.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="205.2" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (26 samples, 0.15%)</title><rect x="202.2" y="179.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="205.2" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (26 samples, 0.15%)</title><rect x="202.2" y="163.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="205.2" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (26 samples, 0.15%)</title><rect x="202.2" y="147.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="205.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (25 samples, 0.14%)</title><rect x="202.2" y="131.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="205.2" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (25 samples, 0.14%)</title><rect x="202.2" y="115.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="205.2" y="126.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.03%)</title><rect x="202.4" y="99.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="205.4" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (17 samples, 0.10%)</title><rect x="202.7" y="99.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="205.7" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (17 samples, 0.10%)</title><rect x="202.7" y="83.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="205.7" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (17 samples, 0.10%)</title><rect x="202.7" y="67.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="205.7" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.10%)</title><rect x="202.7" y="51.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="205.7" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.04%)</title><rect x="204.3" y="195.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="207.3" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.03%)</title><rect x="204.4" y="179.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="207.4" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (4 samples, 0.02%)</title><rect x="205.4" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (663 samples, 3.78%)</title><rect x="205.7" y="643.0" width="44.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.7" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (663 samples, 3.78%)</title><rect x="205.7" y="627.0" width="44.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.7" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (663 samples, 3.78%)</title><rect x="205.7" y="611.0" width="44.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.7" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (660 samples, 3.76%)</title><rect x="205.9" y="595.0" width="44.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.9" y="606.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (37 samples, 0.21%)</title><rect x="205.9" y="579.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="208.9" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (37 samples, 0.21%)</title><rect x="205.9" y="563.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.9" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (37 samples, 0.21%)</title><rect x="205.9" y="547.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="208.9" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (37 samples, 0.21%)</title><rect x="205.9" y="531.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (37 samples, 0.21%)</title><rect x="205.9" y="515.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.9" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (34 samples, 0.19%)</title><rect x="205.9" y="499.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="208.9" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (16 samples, 0.09%)</title><rect x="206.0" y="483.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="209.0" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (16 samples, 0.09%)</title><rect x="206.0" y="467.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="209.0" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (16 samples, 0.09%)</title><rect x="206.0" y="451.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="209.0" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.08%)</title><rect x="206.2" y="435.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="209.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.08%)</title><rect x="206.2" y="419.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="209.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (13 samples, 0.07%)</title><rect x="206.2" y="403.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (13 samples, 0.07%)</title><rect x="206.2" y="387.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="209.2" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (13 samples, 0.07%)</title><rect x="206.2" y="371.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="209.2" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (13 samples, 0.07%)</title><rect x="206.2" y="355.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="209.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (12 samples, 0.07%)</title><rect x="206.3" y="339.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="209.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (12 samples, 0.07%)</title><rect x="206.3" y="323.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="209.3" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (12 samples, 0.07%)</title><rect x="206.3" y="307.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="209.3" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (12 samples, 0.07%)</title><rect x="206.3" y="291.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="209.3" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="206.3" y="275.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="209.3" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="206.3" y="259.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.3" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="206.4" y="243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (5 samples, 0.03%)</title><rect x="206.8" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="209.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (5 samples, 0.03%)</title><rect x="206.8" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.8" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="206.8" y="243.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="209.8" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="206.8" y="227.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="209.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (17 samples, 0.10%)</title><rect x="207.1" y="483.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="210.1" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (17 samples, 0.10%)</title><rect x="207.1" y="467.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.1" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (14 samples, 0.08%)</title><rect x="207.3" y="451.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="210.3" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (14 samples, 0.08%)</title><rect x="207.3" y="435.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.08%)</title><rect x="207.3" y="419.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="210.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.08%)</title><rect x="207.3" y="403.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7 samples, 0.04%)</title><rect x="207.3" y="387.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (7 samples, 0.04%)</title><rect x="207.3" y="371.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (7 samples, 0.04%)</title><rect x="207.3" y="355.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="210.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (7 samples, 0.04%)</title><rect x="207.3" y="339.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (4 samples, 0.02%)</title><rect x="207.3" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4 samples, 0.02%)</title><rect x="207.3" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="210.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="207.3" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (7 samples, 0.04%)</title><rect x="207.8" y="387.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="210.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (7 samples, 0.04%)</title><rect x="207.8" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (6 samples, 0.03%)</title><rect x="207.8" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="210.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (6 samples, 0.03%)</title><rect x="207.8" y="339.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (4 samples, 0.02%)</title><rect x="208.0" y="323.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.0" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="208.0" y="307.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.0" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (4 samples, 0.02%)</title><rect x="208.0" y="291.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="211.0" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="208.0" y="275.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (621 samples, 3.54%)</title><rect x="208.5" y="579.0" width="41.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="211.5" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (621 samples, 3.54%)</title><rect x="208.5" y="563.0" width="41.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.5" y="574.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (554 samples, 3.16%)</title><rect x="208.5" y="547.0" width="37.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="211.5" y="558.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (41 samples, 0.23%)</title><rect x="208.5" y="531.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (41 samples, 0.23%)</title><rect x="208.5" y="515.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (36 samples, 0.21%)</title><rect x="208.8" y="499.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (34 samples, 0.19%)</title><rect x="208.9" y="483.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (21 samples, 0.12%)</title><rect x="209.8" y="467.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="212.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (18 samples, 0.10%)</title><rect x="210.0" y="451.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="213.0" y="462.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.03%)</title><rect x="210.4" y="435.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="213.4" y="446.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (6 samples, 0.03%)</title><rect x="210.8" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="213.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (20 samples, 0.11%)</title><rect x="211.5" y="531.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (13 samples, 0.07%)</title><rect x="211.5" y="515.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="214.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (13 samples, 0.07%)</title><rect x="211.5" y="499.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="214.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (12 samples, 0.07%)</title><rect x="211.5" y="483.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="214.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (12 samples, 0.07%)</title><rect x="211.5" y="467.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="214.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (12 samples, 0.07%)</title><rect x="211.5" y="451.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (12 samples, 0.07%)</title><rect x="211.5" y="435.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (12 samples, 0.07%)</title><rect x="211.5" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="214.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (12 samples, 0.07%)</title><rect x="211.5" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.02%)</title><rect x="212.1" y="387.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.1" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="212.1" y="371.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="215.1" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="212.1" y="355.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="215.1" y="366.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="212.1" y="339.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="215.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (6 samples, 0.03%)</title><rect x="212.4" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="215.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 0.02%)</title><rect x="212.4" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="215.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (490 samples, 2.79%)</title><rect x="212.8" y="531.0" width="33.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="215.8" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (490 samples, 2.79%)</title><rect x="212.8" y="515.0" width="33.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="215.8" y="526.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (490 samples, 2.79%)</title><rect x="212.8" y="499.0" width="33.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="215.8" y="510.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.05%)</title><rect x="212.9" y="483.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="215.9" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.05%)</title><rect x="212.9" y="467.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="215.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (66 samples, 0.38%)</title><rect x="213.4" y="483.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="216.4" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (5 samples, 0.03%)</title><rect x="213.4" y="467.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.4" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (22 samples, 0.13%)</title><rect x="213.8" y="467.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="216.8" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (22 samples, 0.13%)</title><rect x="213.8" y="451.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.8" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (18 samples, 0.10%)</title><rect x="214.0" y="435.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="217.0" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (18 samples, 0.10%)</title><rect x="214.0" y="419.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="217.0" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (16 samples, 0.09%)</title><rect x="214.2" y="403.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="217.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (15 samples, 0.09%)</title><rect x="214.2" y="387.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="217.2" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (15 samples, 0.09%)</title><rect x="214.2" y="371.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="217.2" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (14 samples, 0.08%)</title><rect x="214.3" y="355.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="217.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (12 samples, 0.07%)</title><rect x="214.4" y="339.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="217.4" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="214.8" y="323.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="217.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (39 samples, 0.22%)</title><rect x="215.2" y="467.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.2" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (39 samples, 0.22%)</title><rect x="215.2" y="451.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.2" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (37 samples, 0.21%)</title><rect x="215.4" y="435.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.4" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (35 samples, 0.20%)</title><rect x="215.5" y="419.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="218.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (35 samples, 0.20%)</title><rect x="215.5" y="403.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (35 samples, 0.20%)</title><rect x="215.5" y="387.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="218.5" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (28 samples, 0.16%)</title><rect x="216.0" y="371.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="219.0" y="382.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.02%)</title><rect x="216.5" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="219.5" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.05%)</title><rect x="216.8" y="355.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="219.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="216.8" y="339.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="217.0" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="220.0" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="217.0" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="220.0" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.05%)</title><rect x="217.3" y="355.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="220.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.05%)</title><rect x="217.3" y="339.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="220.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (415 samples, 2.37%)</title><rect x="217.9" y="483.0" width="27.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="220.9" y="494.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (255 samples, 1.45%)</title><rect x="223.9" y="467.0" width="17.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.9" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (254 samples, 1.45%)</title><rect x="224.0" y="451.0" width="17.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.0" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (235 samples, 1.34%)</title><rect x="225.3" y="435.0" width="15.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="228.3" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (235 samples, 1.34%)</title><rect x="225.3" y="419.0" width="15.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="236.0" y="403.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="239.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.03%)</title><rect x="236.3" y="403.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="239.3" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (61 samples, 0.35%)</title><rect x="236.7" y="403.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="239.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (56 samples, 0.32%)</title><rect x="237.0" y="387.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="240.0" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (53 samples, 0.30%)</title><rect x="237.2" y="371.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="240.2" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (52 samples, 0.30%)</title><rect x="237.3" y="355.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="240.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="239.2" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="242.2" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (19 samples, 0.11%)</title><rect x="239.5" y="339.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="242.5" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="240.5" y="323.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="243.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="240.5" y="307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.5" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="240.5" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="243.5" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="240.8" y="403.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="243.8" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (47 samples, 0.27%)</title><rect x="241.1" y="467.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="244.1" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (44 samples, 0.25%)</title><rect x="241.3" y="451.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="244.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (44 samples, 0.25%)</title><rect x="241.3" y="435.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="244.3" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (39 samples, 0.22%)</title><rect x="241.6" y="419.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="244.6" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (39 samples, 0.22%)</title><rect x="241.6" y="403.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="244.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (39 samples, 0.22%)</title><rect x="241.6" y="387.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="244.6" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (37 samples, 0.21%)</title><rect x="241.6" y="371.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="244.6" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (15 samples, 0.09%)</title><rect x="241.7" y="355.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="244.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (12 samples, 0.07%)</title><rect x="241.9" y="339.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="244.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (11 samples, 0.06%)</title><rect x="242.0" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="245.0" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (10 samples, 0.06%)</title><rect x="242.1" y="307.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="245.1" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (20 samples, 0.11%)</title><rect x="242.7" y="355.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="245.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (20 samples, 0.11%)</title><rect x="242.7" y="339.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="245.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="243.0" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="246.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.05%)</title><rect x="243.5" y="323.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="246.5" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.03%)</title><rect x="243.6" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="246.6" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (20 samples, 0.11%)</title><rect x="244.2" y="467.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (67 samples, 0.38%)</title><rect x="245.8" y="547.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (61 samples, 0.35%)</title><rect x="245.8" y="531.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.8" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (61 samples, 0.35%)</title><rect x="245.8" y="515.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="248.8" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (50 samples, 0.29%)</title><rect x="246.5" y="499.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="249.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (50 samples, 0.29%)</title><rect x="246.5" y="483.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="249.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (50 samples, 0.29%)</title><rect x="246.5" y="467.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.5" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (49 samples, 0.28%)</title><rect x="246.6" y="451.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="249.6" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (47 samples, 0.27%)</title><rect x="246.7" y="435.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (46 samples, 0.26%)</title><rect x="246.8" y="419.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="249.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (26 samples, 0.15%)</title><rect x="246.8" y="403.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="249.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (23 samples, 0.13%)</title><rect x="247.0" y="387.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (21 samples, 0.12%)</title><rect x="247.2" y="371.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (21 samples, 0.12%)</title><rect x="247.2" y="355.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="250.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (9 samples, 0.05%)</title><rect x="247.2" y="339.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="250.2" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="247.2" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="250.2" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.03%)</title><rect x="247.2" y="307.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.03%)</title><rect x="247.2" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.2" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="247.2" y="275.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="250.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (7 samples, 0.04%)</title><rect x="247.8" y="339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="250.8" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (4 samples, 0.02%)</title><rect x="248.0" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.0" y="334.0"></text>
</g>
<g>
<title>java/nio/Bits.swap (4 samples, 0.02%)</title><rect x="248.0" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="251.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (19 samples, 0.11%)</title><rect x="248.6" y="403.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (19 samples, 0.11%)</title><rect x="248.6" y="387.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="251.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (18 samples, 0.10%)</title><rect x="248.7" y="371.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="251.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (18 samples, 0.10%)</title><rect x="248.7" y="355.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="251.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (15 samples, 0.09%)</title><rect x="248.9" y="339.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="251.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (15 samples, 0.09%)</title><rect x="248.9" y="323.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="251.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (15 samples, 0.09%)</title><rect x="248.9" y="307.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="251.9" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (15 samples, 0.09%)</title><rect x="248.9" y="291.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="251.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="248.9" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="251.9" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="248.9" y="259.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.9" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="248.9" y="243.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="251.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (10 samples, 0.06%)</title><rect x="249.2" y="275.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (10 samples, 0.06%)</title><rect x="249.2" y="259.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="252.2" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (9 samples, 0.05%)</title><rect x="249.2" y="243.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="252.2" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (9 samples, 0.05%)</title><rect x="249.2" y="227.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="252.2" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.03%)</title><rect x="249.4" y="211.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.4" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="249.4" y="195.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="252.4" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="249.5" y="179.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="252.5" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="249.5" y="163.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="252.5" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="249.5" y="147.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="252.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.03%)</title><rect x="249.9" y="531.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.03%)</title><rect x="249.9" y="515.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="252.9" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.03%)</title><rect x="249.9" y="499.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.9" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (4 samples, 0.02%)</title><rect x="249.9" y="483.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (4 samples, 0.02%)</title><rect x="249.9" y="467.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (4 samples, 0.02%)</title><rect x="249.9" y="451.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="252.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.sendResponse (180 samples, 1.03%)</title><rect x="250.3" y="643.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="253.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (180 samples, 1.03%)</title><rect x="250.3" y="627.0" width="12.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (174 samples, 0.99%)</title><rect x="250.5" y="611.0" width="11.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="253.5" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (173 samples, 0.99%)</title><rect x="250.5" y="595.0" width="11.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="253.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (173 samples, 0.99%)</title><rect x="250.5" y="579.0" width="11.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="253.5" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (170 samples, 0.97%)</title><rect x="250.7" y="563.0" width="11.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="253.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (168 samples, 0.96%)</title><rect x="250.9" y="547.0" width="11.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="253.9" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (163 samples, 0.93%)</title><rect x="251.0" y="531.0" width="11.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="254.0" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (158 samples, 0.90%)</title><rect x="251.4" y="515.0" width="10.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="254.4" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (158 samples, 0.90%)</title><rect x="251.4" y="499.0" width="10.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="254.4" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (157 samples, 0.89%)</title><rect x="251.4" y="483.0" width="10.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="254.4" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (155 samples, 0.88%)</title><rect x="251.6" y="467.0" width="10.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="254.6" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (150 samples, 0.86%)</title><rect x="251.8" y="451.0" width="10.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="254.8" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (147 samples, 0.84%)</title><rect x="252.0" y="435.0" width="9.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="255.0" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (144 samples, 0.82%)</title><rect x="252.2" y="419.0" width="9.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="255.2" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (126 samples, 0.72%)</title><rect x="252.4" y="403.0" width="8.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="255.4" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (126 samples, 0.72%)</title><rect x="252.4" y="387.0" width="8.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="255.4" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (121 samples, 0.69%)</title><rect x="252.5" y="371.0" width="8.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="255.5" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (114 samples, 0.65%)</title><rect x="252.7" y="355.0" width="7.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="255.7" y="366.0"></text>
</g>
<g>
<title>ip_local_out (23 samples, 0.13%)</title><rect x="252.7" y="339.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="255.7" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (23 samples, 0.13%)</title><rect x="252.7" y="323.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="255.7" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (22 samples, 0.13%)</title><rect x="252.8" y="307.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="255.8" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.04%)</title><rect x="252.8" y="291.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="255.8" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (6 samples, 0.03%)</title><rect x="253.5" y="291.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="256.5" y="302.0"></text>
</g>
<g>
<title>ip_output (91 samples, 0.52%)</title><rect x="254.2" y="339.0" width="6.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="257.2" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (85 samples, 0.48%)</title><rect x="254.3" y="323.0" width="5.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="257.3" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.02%)</title><rect x="254.4" y="307.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="257.4" y="318.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (79 samples, 0.45%)</title><rect x="254.7" y="307.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="257.7" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (79 samples, 0.45%)</title><rect x="254.7" y="291.0" width="5.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="257.7" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (79 samples, 0.45%)</title><rect x="254.7" y="275.0" width="5.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="257.7" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (79 samples, 0.45%)</title><rect x="254.7" y="259.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="257.7" y="270.0"></text>
</g>
<g>
<title>net_rx_action (79 samples, 0.45%)</title><rect x="254.7" y="243.0" width="5.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="257.7" y="254.0"></text>
</g>
<g>
<title>process_backlog (79 samples, 0.45%)</title><rect x="254.7" y="227.0" width="5.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="257.7" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (79 samples, 0.45%)</title><rect x="254.7" y="211.0" width="5.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="257.7" y="222.0"></text>
</g>
<g>
<title>ip_rcv (79 samples, 0.45%)</title><rect x="254.7" y="195.0" width="5.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="257.7" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (67 samples, 0.38%)</title><rect x="254.8" y="179.0" width="4.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="257.8" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (57 samples, 0.32%)</title><rect x="254.9" y="163.0" width="3.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="257.9" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (57 samples, 0.32%)</title><rect x="254.9" y="147.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="257.9" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (57 samples, 0.32%)</title><rect x="254.9" y="131.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="257.9" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (50 samples, 0.29%)</title><rect x="255.3" y="115.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="258.3" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (49 samples, 0.28%)</title><rect x="255.4" y="99.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="258.4" y="110.0"></text>
</g>
<g>
<title>tcp_ack (14 samples, 0.08%)</title><rect x="255.6" y="83.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="258.6" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.02%)</title><rect x="255.9" y="67.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="258.9" y="78.0"></text>
</g>
<g>
<title>tcp_data_queue (29 samples, 0.17%)</title><rect x="256.5" y="83.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="259.5" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (27 samples, 0.15%)</title><rect x="256.7" y="67.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="259.7" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (27 samples, 0.15%)</title><rect x="256.7" y="51.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="259.7" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (27 samples, 0.15%)</title><rect x="256.7" y="35.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="259.7" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.05%)</title><rect x="258.8" y="163.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="261.8" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.03%)</title><rect x="258.8" y="147.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="261.8" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.04%)</title><rect x="259.6" y="179.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="262.6" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="259.8" y="163.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="262.8" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="260.0" y="323.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="263.0" y="334.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.04%)</title><rect x="260.9" y="403.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="263.9" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.04%)</title><rect x="260.9" y="387.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="263.9" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.03%)</title><rect x="261.4" y="403.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="264.4" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.02%)</title><rect x="261.5" y="387.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="264.5" y="398.0"></text>
</g>
<g>
<title>[worker-0 tid=14269] (1,017 samples, 5.80%)</title><rect x="262.4" y="739.0" width="68.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="265.4" y="750.0">[worker..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.02%)</title><rect x="262.5" y="723.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="265.5" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.02%)</title><rect x="262.5" y="707.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="265.5" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.02%)</title><rect x="262.5" y="691.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="265.5" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.02%)</title><rect x="262.5" y="675.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="265.5" y="686.0"></text>
</g>
<g>
<title>[unknown_Java] (28 samples, 0.16%)</title><rect x="262.9" y="723.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="265.9" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.03%)</title><rect x="264.3" y="707.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="267.3" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="264.4" y="691.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="267.4" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="264.4" y="675.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="267.4" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="264.4" y="659.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="267.4" y="670.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="264.4" y="643.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="267.4" y="654.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="264.4" y="627.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="267.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.run (981 samples, 5.59%)</title><rect x="264.7" y="723.0" width="66.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="267.7" y="734.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (981 samples, 5.59%)</title><rect x="264.7" y="707.0" width="66.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.7" y="718.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (981 samples, 5.59%)</title><rect x="264.7" y="691.0" width="66.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="267.7" y="702.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (24 samples, 0.14%)</title><rect x="264.8" y="675.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="267.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (23 samples, 0.13%)</title><rect x="264.9" y="659.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="267.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (18 samples, 0.10%)</title><rect x="264.9" y="643.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="267.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (18 samples, 0.10%)</title><rect x="264.9" y="627.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="267.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (18 samples, 0.10%)</title><rect x="264.9" y="611.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="267.9" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (11 samples, 0.06%)</title><rect x="265.0" y="595.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="268.0" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.03%)</title><rect x="265.1" y="579.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="268.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.03%)</title><rect x="265.7" y="595.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="268.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.02%)</title><rect x="266.2" y="643.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="269.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.02%)</title><rect x="266.2" y="627.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="269.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (955 samples, 5.44%)</title><rect x="266.4" y="675.0" width="64.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="269.4" y="686.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (955 samples, 5.44%)</title><rect x="266.4" y="659.0" width="64.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="269.4" y="670.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (96 samples, 0.55%)</title><rect x="266.4" y="643.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="269.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (96 samples, 0.55%)</title><rect x="266.4" y="627.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="269.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (96 samples, 0.55%)</title><rect x="266.4" y="611.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="269.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (96 samples, 0.55%)</title><rect x="266.4" y="595.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="269.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (96 samples, 0.55%)</title><rect x="266.4" y="579.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="269.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (17 samples, 0.10%)</title><rect x="266.5" y="563.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="269.5" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (17 samples, 0.10%)</title><rect x="266.5" y="547.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="269.5" y="558.0"></text>
</g>
<g>
<title>__libc_recv (14 samples, 0.08%)</title><rect x="266.7" y="531.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="269.7" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.07%)</title><rect x="266.8" y="515.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="269.8" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.07%)</title><rect x="266.8" y="499.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="269.8" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (11 samples, 0.06%)</title><rect x="266.9" y="483.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="269.9" y="494.0"></text>
</g>
<g>
<title>__sys_recvfrom (11 samples, 0.06%)</title><rect x="266.9" y="467.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="269.9" y="478.0"></text>
</g>
<g>
<title>inet_recvmsg (7 samples, 0.04%)</title><rect x="267.0" y="451.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="270.0" y="462.0"></text>
</g>
<g>
<title>tcp_recvmsg (7 samples, 0.04%)</title><rect x="267.0" y="435.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="270.0" y="446.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.02%)</title><rect x="267.2" y="419.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="270.2" y="430.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.02%)</title><rect x="267.2" y="403.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="270.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (4 samples, 0.02%)</title><rect x="267.6" y="563.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (7 samples, 0.04%)</title><rect x="267.9" y="563.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="270.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.03%)</title><rect x="268.0" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="271.0" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (12 samples, 0.07%)</title><rect x="268.4" y="563.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="271.4" y="574.0"></text>
</g>
<g>
<title>setsockopt (12 samples, 0.07%)</title><rect x="268.4" y="547.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="271.4" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="268.7" y="531.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="271.7" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="268.7" y="515.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="271.7" y="526.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (6 samples, 0.03%)</title><rect x="268.8" y="499.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="271.8" y="510.0"></text>
</g>
<g>
<title>__sys_setsockopt (6 samples, 0.03%)</title><rect x="268.8" y="483.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="271.8" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (54 samples, 0.31%)</title><rect x="269.2" y="563.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="272.2" y="574.0"></text>
</g>
<g>
<title>.annobin_send.c (53 samples, 0.30%)</title><rect x="269.2" y="547.0" width="3.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="272.2" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (51 samples, 0.29%)</title><rect x="269.4" y="531.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="272.4" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (51 samples, 0.29%)</title><rect x="269.4" y="515.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="272.4" y="526.0"></text>
</g>
<g>
<title>__x64_sys_sendto (51 samples, 0.29%)</title><rect x="269.4" y="499.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="272.4" y="510.0"></text>
</g>
<g>
<title>__sys_sendto (51 samples, 0.29%)</title><rect x="269.4" y="483.0" width="3.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="272.4" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (51 samples, 0.29%)</title><rect x="269.4" y="467.0" width="3.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="272.4" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (51 samples, 0.29%)</title><rect x="269.4" y="451.0" width="3.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="272.4" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (51 samples, 0.29%)</title><rect x="269.4" y="435.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="272.4" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (47 samples, 0.27%)</title><rect x="269.4" y="419.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="272.4" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (47 samples, 0.27%)</title><rect x="269.4" y="403.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="272.4" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (46 samples, 0.26%)</title><rect x="269.4" y="387.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="272.4" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (43 samples, 0.25%)</title><rect x="269.6" y="371.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="272.6" y="382.0"></text>
</g>
<g>
<title>ip_local_out (11 samples, 0.06%)</title><rect x="269.6" y="355.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="272.6" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (11 samples, 0.06%)</title><rect x="269.6" y="339.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="272.6" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.06%)</title><rect x="269.7" y="323.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="272.7" y="334.0"></text>
</g>
<g>
<title>ip_output (32 samples, 0.18%)</title><rect x="270.3" y="355.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="273.3" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (28 samples, 0.16%)</title><rect x="270.3" y="339.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="273.3" y="350.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.03%)</title><rect x="270.3" y="323.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="273.3" y="334.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.02%)</title><rect x="270.4" y="307.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="273.4" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.02%)</title><rect x="270.4" y="291.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="273.4" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (23 samples, 0.13%)</title><rect x="270.7" y="323.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="273.7" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (23 samples, 0.13%)</title><rect x="270.7" y="307.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="273.7" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (21 samples, 0.12%)</title><rect x="270.8" y="291.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="273.8" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (21 samples, 0.12%)</title><rect x="270.8" y="275.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="273.8" y="286.0"></text>
</g>
<g>
<title>net_rx_action (21 samples, 0.12%)</title><rect x="270.8" y="259.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="273.8" y="270.0"></text>
</g>
<g>
<title>process_backlog (21 samples, 0.12%)</title><rect x="270.8" y="243.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="273.8" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (20 samples, 0.11%)</title><rect x="270.9" y="227.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="273.9" y="238.0"></text>
</g>
<g>
<title>ip_rcv (20 samples, 0.11%)</title><rect x="270.9" y="211.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="273.9" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (14 samples, 0.08%)</title><rect x="270.9" y="195.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="273.9" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (14 samples, 0.08%)</title><rect x="270.9" y="179.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="273.9" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (14 samples, 0.08%)</title><rect x="270.9" y="163.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="273.9" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (14 samples, 0.08%)</title><rect x="270.9" y="147.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="273.9" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (12 samples, 0.07%)</title><rect x="271.0" y="131.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="274.0" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (12 samples, 0.07%)</title><rect x="271.0" y="115.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="274.0" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (7 samples, 0.04%)</title><rect x="271.3" y="99.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="274.3" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (7 samples, 0.04%)</title><rect x="271.3" y="83.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="274.3" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.04%)</title><rect x="271.3" y="67.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="274.3" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.04%)</title><rect x="271.3" y="51.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="274.3" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="271.9" y="195.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="274.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (690 samples, 3.93%)</title><rect x="272.9" y="643.0" width="46.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="275.9" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (690 samples, 3.93%)</title><rect x="272.9" y="627.0" width="46.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="275.9" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (690 samples, 3.93%)</title><rect x="272.9" y="611.0" width="46.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="275.9" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (687 samples, 3.92%)</title><rect x="273.1" y="595.0" width="46.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.1" y="606.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (27 samples, 0.15%)</title><rect x="273.1" y="579.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="276.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (27 samples, 0.15%)</title><rect x="273.1" y="563.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="276.1" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (27 samples, 0.15%)</title><rect x="273.1" y="547.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="276.1" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (27 samples, 0.15%)</title><rect x="273.1" y="531.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="276.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (27 samples, 0.15%)</title><rect x="273.1" y="515.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="276.1" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (18 samples, 0.10%)</title><rect x="273.1" y="499.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.1" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (12 samples, 0.07%)</title><rect x="273.1" y="483.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="276.1" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (12 samples, 0.07%)</title><rect x="273.1" y="467.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="276.1" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (11 samples, 0.06%)</title><rect x="273.1" y="451.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="276.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.06%)</title><rect x="273.1" y="435.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="276.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.06%)</title><rect x="273.1" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="276.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (11 samples, 0.06%)</title><rect x="273.1" y="403.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="276.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (11 samples, 0.06%)</title><rect x="273.1" y="387.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="276.1" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (11 samples, 0.06%)</title><rect x="273.1" y="371.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (11 samples, 0.06%)</title><rect x="273.1" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="276.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (11 samples, 0.06%)</title><rect x="273.1" y="339.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="276.1" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (11 samples, 0.06%)</title><rect x="273.1" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="276.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (11 samples, 0.06%)</title><rect x="273.1" y="307.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="276.1" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (11 samples, 0.06%)</title><rect x="273.1" y="291.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="276.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (8 samples, 0.05%)</title><rect x="273.4" y="275.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="276.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (8 samples, 0.05%)</title><rect x="273.4" y="259.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (8 samples, 0.05%)</title><rect x="273.4" y="243.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.4" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (8 samples, 0.05%)</title><rect x="273.4" y="227.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="276.4" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.04%)</title><rect x="273.4" y="211.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.03%)</title><rect x="273.9" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="276.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.03%)</title><rect x="273.9" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="276.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$75/1432985482.apply (5 samples, 0.03%)</title><rect x="274.5" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="277.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4 samples, 0.02%)</title><rect x="274.6" y="483.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="277.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (657 samples, 3.75%)</title><rect x="275.1" y="579.0" width="44.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="278.1" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (657 samples, 3.75%)</title><rect x="275.1" y="563.0" width="44.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="278.1" y="574.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (594 samples, 3.39%)</title><rect x="275.1" y="547.0" width="40.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="278.1" y="558.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (29 samples, 0.17%)</title><rect x="275.2" y="531.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (29 samples, 0.17%)</title><rect x="275.2" y="515.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (24 samples, 0.14%)</title><rect x="275.5" y="499.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="278.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (22 samples, 0.13%)</title><rect x="275.6" y="483.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="278.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (8 samples, 0.05%)</title><rect x="276.6" y="467.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.04%)</title><rect x="276.6" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="279.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (32 samples, 0.18%)</title><rect x="277.2" y="531.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (19 samples, 0.11%)</title><rect x="277.3" y="515.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (18 samples, 0.10%)</title><rect x="277.3" y="499.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="280.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (18 samples, 0.10%)</title><rect x="277.3" y="483.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (18 samples, 0.10%)</title><rect x="277.3" y="467.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (18 samples, 0.10%)</title><rect x="277.3" y="451.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="280.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (18 samples, 0.10%)</title><rect x="277.3" y="435.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="280.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (18 samples, 0.10%)</title><rect x="277.3" y="419.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="280.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (18 samples, 0.10%)</title><rect x="277.3" y="403.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="280.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (10 samples, 0.06%)</title><rect x="277.9" y="387.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.05%)</title><rect x="277.9" y="371.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="280.9" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="278.1" y="355.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="281.1" y="366.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.03%)</title><rect x="278.1" y="339.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="281.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (11 samples, 0.06%)</title><rect x="278.6" y="515.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.6" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (11 samples, 0.06%)</title><rect x="278.6" y="499.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.6" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8 samples, 0.05%)</title><rect x="278.8" y="483.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="281.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (531 samples, 3.03%)</title><rect x="279.3" y="531.0" width="35.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.3" y="542.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (531 samples, 3.03%)</title><rect x="279.3" y="515.0" width="35.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="282.3" y="526.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (530 samples, 3.02%)</title><rect x="279.4" y="499.0" width="35.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.4" y="510.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="279.5" y="483.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="282.5" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.04%)</title><rect x="279.5" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (109 samples, 0.62%)</title><rect x="279.9" y="483.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="282.9" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (5 samples, 0.03%)</title><rect x="280.0" y="467.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="283.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (48 samples, 0.27%)</title><rect x="280.3" y="467.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="283.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (48 samples, 0.27%)</title><rect x="280.3" y="451.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (39 samples, 0.22%)</title><rect x="281.0" y="435.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="284.0" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (39 samples, 0.22%)</title><rect x="281.0" y="419.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.0" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (33 samples, 0.19%)</title><rect x="281.4" y="403.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.4" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (30 samples, 0.17%)</title><rect x="281.6" y="387.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (30 samples, 0.17%)</title><rect x="281.6" y="371.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="284.6" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="281.8" y="355.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="284.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="281.8" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.8" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (22 samples, 0.13%)</title><rect x="282.1" y="339.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.1" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="283.0" y="323.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.0" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.03%)</title><rect x="283.2" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.2" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (55 samples, 0.31%)</title><rect x="283.6" y="467.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="286.6" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (55 samples, 0.31%)</title><rect x="283.6" y="451.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.6" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (52 samples, 0.30%)</title><rect x="283.8" y="435.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.8" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (48 samples, 0.27%)</title><rect x="284.0" y="419.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="287.0" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (48 samples, 0.27%)</title><rect x="284.0" y="403.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="287.0" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (48 samples, 0.27%)</title><rect x="284.0" y="387.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="287.0" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (43 samples, 0.25%)</title><rect x="284.4" y="371.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="287.4" y="382.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.02%)</title><rect x="284.9" y="355.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="287.9" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (13 samples, 0.07%)</title><rect x="285.2" y="355.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.2" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (11 samples, 0.06%)</title><rect x="285.3" y="339.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="288.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.03%)</title><rect x="285.6" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="288.6" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="285.7" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="288.7" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (18 samples, 0.10%)</title><rect x="286.1" y="355.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.1" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (18 samples, 0.10%)</title><rect x="286.1" y="339.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="286.7" y="323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="287.0" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="290.0" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="287.0" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (413 samples, 2.35%)</title><rect x="287.3" y="483.0" width="27.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.3" y="494.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (266 samples, 1.52%)</title><rect x="292.7" y="467.0" width="17.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="295.7" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (266 samples, 1.52%)</title><rect x="292.7" y="451.0" width="17.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="295.7" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (245 samples, 1.40%)</title><rect x="294.1" y="435.0" width="16.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="297.1" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (244 samples, 1.39%)</title><rect x="294.2" y="419.0" width="16.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="297.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.04%)</title><rect x="305.4" y="403.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="308.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.04%)</title><rect x="305.9" y="403.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.9" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (52 samples, 0.30%)</title><rect x="306.4" y="403.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="309.4" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (51 samples, 0.29%)</title><rect x="306.4" y="387.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (49 samples, 0.28%)</title><rect x="306.6" y="371.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="309.6" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (46 samples, 0.26%)</title><rect x="306.8" y="355.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="309.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.05%)</title><rect x="307.9" y="339.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.9" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="307.9" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="307.9" y="307.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="310.9" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.03%)</title><rect x="308.0" y="291.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="311.0" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (21 samples, 0.12%)</title><rect x="308.5" y="339.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="311.5" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="309.3" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="312.3" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="309.6" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="312.6" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (7 samples, 0.04%)</title><rect x="309.9" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="312.9" y="414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.02%)</title><rect x="310.3" y="403.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="313.3" y="414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.02%)</title><rect x="310.3" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="313.3" y="398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.02%)</title><rect x="310.3" y="371.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="313.3" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (38 samples, 0.22%)</title><rect x="310.6" y="467.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.6" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (35 samples, 0.20%)</title><rect x="310.8" y="451.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="313.8" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (35 samples, 0.20%)</title><rect x="310.8" y="435.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="313.8" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (30 samples, 0.17%)</title><rect x="311.2" y="419.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="314.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (29 samples, 0.17%)</title><rect x="311.2" y="403.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (29 samples, 0.17%)</title><rect x="311.2" y="387.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="314.2" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (16 samples, 0.09%)</title><rect x="311.4" y="371.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="314.4" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="311.4" y="355.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="314.4" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="311.4" y="339.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="314.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="311.4" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.4" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (10 samples, 0.06%)</title><rect x="311.8" y="355.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (10 samples, 0.06%)</title><rect x="311.8" y="339.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (11 samples, 0.06%)</title><rect x="312.4" y="371.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="315.4" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (22 samples, 0.13%)</title><rect x="313.2" y="467.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.2" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (9 samples, 0.05%)</title><rect x="314.0" y="451.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="317.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (63 samples, 0.36%)</title><rect x="315.1" y="547.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="318.1" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (58 samples, 0.33%)</title><rect x="315.1" y="531.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="318.1" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (58 samples, 0.33%)</title><rect x="315.1" y="515.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="318.1" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (49 samples, 0.28%)</title><rect x="315.7" y="499.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="318.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (49 samples, 0.28%)</title><rect x="315.7" y="483.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (48 samples, 0.27%)</title><rect x="315.8" y="467.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="318.8" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (48 samples, 0.27%)</title><rect x="315.8" y="451.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="318.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (47 samples, 0.27%)</title><rect x="315.9" y="435.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="318.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (45 samples, 0.26%)</title><rect x="316.0" y="419.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="319.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (22 samples, 0.13%)</title><rect x="316.1" y="403.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="319.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (20 samples, 0.11%)</title><rect x="316.2" y="387.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="319.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (19 samples, 0.11%)</title><rect x="316.3" y="371.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="319.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (19 samples, 0.11%)</title><rect x="316.3" y="355.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="319.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (11 samples, 0.06%)</title><rect x="316.3" y="339.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="319.3" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (9 samples, 0.05%)</title><rect x="316.3" y="323.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="319.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (9 samples, 0.05%)</title><rect x="316.3" y="307.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="319.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.03%)</title><rect x="316.5" y="291.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="319.5" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="316.5" y="275.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="319.5" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="316.6" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="319.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (6 samples, 0.03%)</title><rect x="317.0" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="320.0" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (4 samples, 0.02%)</title><rect x="317.1" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="320.1" y="334.0"></text>
</g>
<g>
<title>java/nio/Bits.swap (4 samples, 0.02%)</title><rect x="317.1" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="320.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (22 samples, 0.13%)</title><rect x="317.5" y="403.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="320.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (22 samples, 0.13%)</title><rect x="317.5" y="387.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="320.5" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (21 samples, 0.12%)</title><rect x="317.6" y="371.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="320.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (21 samples, 0.12%)</title><rect x="317.6" y="355.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="320.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (5 samples, 0.03%)</title><rect x="317.6" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="320.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (5 samples, 0.03%)</title><rect x="317.6" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="320.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (4 samples, 0.02%)</title><rect x="317.7" y="307.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="320.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4 samples, 0.02%)</title><rect x="317.7" y="291.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="320.7" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (16 samples, 0.09%)</title><rect x="317.9" y="339.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="320.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (16 samples, 0.09%)</title><rect x="317.9" y="323.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="320.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (16 samples, 0.09%)</title><rect x="317.9" y="307.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.9" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (16 samples, 0.09%)</title><rect x="317.9" y="291.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="320.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="317.9" y="275.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="320.9" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="318.0" y="259.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (10 samples, 0.06%)</title><rect x="318.3" y="275.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="321.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (10 samples, 0.06%)</title><rect x="318.3" y="259.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.3" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="318.3" y="243.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.3" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="318.4" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="318.7" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="321.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4 samples, 0.02%)</title><rect x="319.0" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="322.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="319.0" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="322.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.02%)</title><rect x="319.0" y="499.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="322.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.sendResponse (169 samples, 0.96%)</title><rect x="319.3" y="643.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="322.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (169 samples, 0.96%)</title><rect x="319.3" y="627.0" width="11.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="322.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (167 samples, 0.95%)</title><rect x="319.4" y="611.0" width="11.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="322.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.03%)</title><rect x="319.4" y="595.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="322.4" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (162 samples, 0.92%)</title><rect x="319.8" y="595.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="322.8" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (161 samples, 0.92%)</title><rect x="319.8" y="579.0" width="10.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="322.8" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (159 samples, 0.91%)</title><rect x="320.0" y="563.0" width="10.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="323.0" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (159 samples, 0.91%)</title><rect x="320.0" y="547.0" width="10.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.0" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (152 samples, 0.87%)</title><rect x="320.2" y="531.0" width="10.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="323.2" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (146 samples, 0.83%)</title><rect x="320.6" y="515.0" width="9.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="323.6" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (146 samples, 0.83%)</title><rect x="320.6" y="499.0" width="9.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="323.6" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (143 samples, 0.82%)</title><rect x="320.7" y="483.0" width="9.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="323.7" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (142 samples, 0.81%)</title><rect x="320.8" y="467.0" width="9.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="323.8" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (136 samples, 0.78%)</title><rect x="320.9" y="451.0" width="9.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="323.9" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (133 samples, 0.76%)</title><rect x="321.1" y="435.0" width="9.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="324.1" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (133 samples, 0.76%)</title><rect x="321.1" y="419.0" width="9.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="324.1" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (121 samples, 0.69%)</title><rect x="321.3" y="403.0" width="8.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="324.3" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (121 samples, 0.69%)</title><rect x="321.3" y="387.0" width="8.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="324.3" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (114 samples, 0.65%)</title><rect x="321.4" y="371.0" width="7.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="324.4" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (111 samples, 0.63%)</title><rect x="321.5" y="355.0" width="7.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="324.5" y="366.0"></text>
</g>
<g>
<title>ip_local_out (25 samples, 0.14%)</title><rect x="321.8" y="339.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="324.8" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (25 samples, 0.14%)</title><rect x="321.8" y="323.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="324.8" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (23 samples, 0.13%)</title><rect x="321.9" y="307.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="324.9" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.05%)</title><rect x="322.0" y="291.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="325.0" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (10 samples, 0.06%)</title><rect x="322.8" y="291.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="325.8" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (5 samples, 0.03%)</title><rect x="322.8" y="275.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="325.8" y="286.0"></text>
</g>
<g>
<title>ip_output (82 samples, 0.47%)</title><rect x="323.5" y="339.0" width="5.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="326.5" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (74 samples, 0.42%)</title><rect x="323.5" y="323.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="326.5" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (72 samples, 0.41%)</title><rect x="323.6" y="307.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="326.6" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (72 samples, 0.41%)</title><rect x="323.6" y="291.0" width="4.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="326.6" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (72 samples, 0.41%)</title><rect x="323.6" y="275.0" width="4.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="326.6" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (72 samples, 0.41%)</title><rect x="323.6" y="259.0" width="4.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="326.6" y="270.0"></text>
</g>
<g>
<title>net_rx_action (72 samples, 0.41%)</title><rect x="323.6" y="243.0" width="4.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="326.6" y="254.0"></text>
</g>
<g>
<title>process_backlog (70 samples, 0.40%)</title><rect x="323.7" y="227.0" width="4.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="326.7" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (70 samples, 0.40%)</title><rect x="323.7" y="211.0" width="4.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="326.7" y="222.0"></text>
</g>
<g>
<title>ip_rcv (69 samples, 0.39%)</title><rect x="323.8" y="195.0" width="4.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="326.8" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (59 samples, 0.34%)</title><rect x="323.8" y="179.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="326.8" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (52 samples, 0.30%)</title><rect x="323.8" y="163.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="326.8" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (52 samples, 0.30%)</title><rect x="323.8" y="147.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="326.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (51 samples, 0.29%)</title><rect x="323.9" y="131.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="326.9" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.05%)</title><rect x="323.9" y="115.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="326.9" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (43 samples, 0.25%)</title><rect x="324.4" y="115.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="327.4" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (43 samples, 0.25%)</title><rect x="324.4" y="99.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="327.4" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.02%)</title><rect x="324.4" y="83.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="327.4" y="94.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.02%)</title><rect x="324.4" y="67.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="327.4" y="78.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.07%)</title><rect x="324.7" y="83.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="327.7" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (27 samples, 0.15%)</title><rect x="325.5" y="83.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="328.5" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (26 samples, 0.15%)</title><rect x="325.5" y="67.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="328.5" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (26 samples, 0.15%)</title><rect x="325.5" y="51.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="328.5" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (26 samples, 0.15%)</title><rect x="325.5" y="35.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="328.5" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.04%)</title><rect x="327.3" y="163.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="330.3" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.03%)</title><rect x="327.3" y="147.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="330.3" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.06%)</title><rect x="327.8" y="179.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="330.8" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.04%)</title><rect x="328.0" y="163.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="331.0" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.04%)</title><rect x="328.5" y="323.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="331.5" y="334.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.03%)</title><rect x="329.5" y="403.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="332.5" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.03%)</title><rect x="329.5" y="387.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="332.5" y="398.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.02%)</title><rect x="330.1" y="451.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="333.1" y="462.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.02%)</title><rect x="330.1" y="435.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="333.1" y="446.0"></text>
</g>
<g>
<title>[worker-0 tid=14275] (922 samples, 5.26%)</title><rect x="330.8" y="739.0" width="62.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="333.8" y="750.0">[worke..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.02%)</title><rect x="330.9" y="723.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="333.9" y="734.0"></text>
</g>
<g>
<title>[unknown_Java] (20 samples, 0.11%)</title><rect x="331.2" y="723.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="334.2" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (895 samples, 5.10%)</title><rect x="332.6" y="723.0" width="60.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="335.6" y="734.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (895 samples, 5.10%)</title><rect x="332.6" y="707.0" width="60.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="335.6" y="718.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (895 samples, 5.10%)</title><rect x="332.6" y="691.0" width="60.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="335.6" y="702.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (41 samples, 0.23%)</title><rect x="332.6" y="675.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="335.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (40 samples, 0.23%)</title><rect x="332.6" y="659.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (36 samples, 0.21%)</title><rect x="332.7" y="643.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (35 samples, 0.20%)</title><rect x="332.7" y="627.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="335.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (35 samples, 0.20%)</title><rect x="332.7" y="611.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="335.7" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (16 samples, 0.09%)</title><rect x="332.8" y="595.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="335.8" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (10 samples, 0.06%)</title><rect x="333.1" y="579.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="336.1" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="333.2" y="563.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="336.2" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="333.2" y="547.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="336.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.10%)</title><rect x="333.9" y="595.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="336.9" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (12 samples, 0.07%)</title><rect x="334.0" y="579.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="337.0" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.06%)</title><rect x="334.1" y="563.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="337.1" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.06%)</title><rect x="334.1" y="547.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="337.1" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.04%)</title><rect x="334.3" y="531.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="337.3" y="542.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="334.4" y="515.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="337.4" y="526.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.03%)</title><rect x="334.4" y="499.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="337.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (853 samples, 4.86%)</title><rect x="335.4" y="675.0" width="57.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="338.4" y="686.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (853 samples, 4.86%)</title><rect x="335.4" y="659.0" width="57.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="338.4" y="670.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (122 samples, 0.70%)</title><rect x="335.4" y="643.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="338.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (122 samples, 0.70%)</title><rect x="335.4" y="627.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="338.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (122 samples, 0.70%)</title><rect x="335.4" y="611.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="338.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (121 samples, 0.69%)</title><rect x="335.5" y="595.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="338.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (121 samples, 0.69%)</title><rect x="335.5" y="579.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (26 samples, 0.15%)</title><rect x="335.6" y="563.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="338.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (26 samples, 0.15%)</title><rect x="335.6" y="547.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="338.6" y="558.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.04%)</title><rect x="335.6" y="531.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="338.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.04%)</title><rect x="335.6" y="515.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="338.6" y="526.0"></text>
</g>
<g>
<title>__libc_recv (19 samples, 0.11%)</title><rect x="336.1" y="531.0" width="1.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="339.1" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.09%)</title><rect x="336.3" y="515.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="339.3" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.09%)</title><rect x="336.3" y="499.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="339.3" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (13 samples, 0.07%)</title><rect x="336.5" y="483.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="339.5" y="494.0"></text>
</g>
<g>
<title>__sys_recvfrom (13 samples, 0.07%)</title><rect x="336.5" y="467.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="339.5" y="478.0"></text>
</g>
<g>
<title>inet_recvmsg (8 samples, 0.05%)</title><rect x="336.7" y="451.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="339.7" y="462.0"></text>
</g>
<g>
<title>tcp_recvmsg (8 samples, 0.05%)</title><rect x="336.7" y="435.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="339.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (6 samples, 0.03%)</title><rect x="337.4" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="340.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (7 samples, 0.04%)</title><rect x="337.8" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="340.8" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.02%)</title><rect x="338.0" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="341.0" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (18 samples, 0.10%)</title><rect x="338.3" y="563.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="341.3" y="574.0"></text>
</g>
<g>
<title>setsockopt (17 samples, 0.10%)</title><rect x="338.3" y="547.0" width="1.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="341.3" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="338.9" y="531.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="341.9" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="338.9" y="515.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="341.9" y="526.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (7 samples, 0.04%)</title><rect x="339.0" y="499.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="342.0" y="510.0"></text>
</g>
<g>
<title>__sys_setsockopt (6 samples, 0.03%)</title><rect x="339.1" y="483.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="342.1" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (59 samples, 0.34%)</title><rect x="339.5" y="563.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="342.5" y="574.0"></text>
</g>
<g>
<title>.annobin_send.c (59 samples, 0.34%)</title><rect x="339.5" y="547.0" width="3.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="342.5" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 0.33%)</title><rect x="339.5" y="531.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="342.5" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (58 samples, 0.33%)</title><rect x="339.5" y="515.0" width="3.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="342.5" y="526.0"></text>
</g>
<g>
<title>__x64_sys_sendto (57 samples, 0.32%)</title><rect x="339.6" y="499.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="342.6" y="510.0"></text>
</g>
<g>
<title>__sys_sendto (57 samples, 0.32%)</title><rect x="339.6" y="483.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="342.6" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (56 samples, 0.32%)</title><rect x="339.6" y="467.0" width="3.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="342.6" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (56 samples, 0.32%)</title><rect x="339.6" y="451.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="342.6" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (56 samples, 0.32%)</title><rect x="339.6" y="435.0" width="3.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="342.6" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (53 samples, 0.30%)</title><rect x="339.6" y="419.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="342.6" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (53 samples, 0.30%)</title><rect x="339.6" y="403.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="342.6" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (53 samples, 0.30%)</title><rect x="339.6" y="387.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="342.6" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (52 samples, 0.30%)</title><rect x="339.7" y="371.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="342.7" y="382.0"></text>
</g>
<g>
<title>ip_local_out (15 samples, 0.09%)</title><rect x="339.7" y="355.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="342.7" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (15 samples, 0.09%)</title><rect x="339.7" y="339.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="342.7" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.08%)</title><rect x="339.7" y="323.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="342.7" y="334.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.02%)</title><rect x="339.9" y="307.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="342.9" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (6 samples, 0.03%)</title><rect x="340.3" y="307.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="343.3" y="318.0"></text>
</g>
<g>
<title>ip_output (37 samples, 0.21%)</title><rect x="340.7" y="355.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="343.7" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (35 samples, 0.20%)</title><rect x="340.8" y="339.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="343.8" y="350.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.02%)</title><rect x="340.8" y="323.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="343.8" y="334.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.02%)</title><rect x="340.8" y="307.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="343.8" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.02%)</title><rect x="340.8" y="291.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="343.8" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (31 samples, 0.18%)</title><rect x="341.0" y="323.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="344.0" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (31 samples, 0.18%)</title><rect x="341.0" y="307.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="344.0" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (31 samples, 0.18%)</title><rect x="341.0" y="291.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="344.0" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (31 samples, 0.18%)</title><rect x="341.0" y="275.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="344.0" y="286.0"></text>
</g>
<g>
<title>net_rx_action (31 samples, 0.18%)</title><rect x="341.0" y="259.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="344.0" y="270.0"></text>
</g>
<g>
<title>process_backlog (31 samples, 0.18%)</title><rect x="341.0" y="243.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="344.0" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (30 samples, 0.17%)</title><rect x="341.1" y="227.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="344.1" y="238.0"></text>
</g>
<g>
<title>ip_rcv (29 samples, 0.17%)</title><rect x="341.2" y="211.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="344.2" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (25 samples, 0.14%)</title><rect x="341.2" y="195.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="344.2" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (21 samples, 0.12%)</title><rect x="341.2" y="179.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="344.2" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (21 samples, 0.12%)</title><rect x="341.2" y="163.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="344.2" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (20 samples, 0.11%)</title><rect x="341.3" y="147.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="344.3" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (19 samples, 0.11%)</title><rect x="341.4" y="131.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="344.4" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (19 samples, 0.11%)</title><rect x="341.4" y="115.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="344.4" y="126.0"></text>
</g>
<g>
<title>tcp_ack (7 samples, 0.04%)</title><rect x="341.4" y="99.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="344.4" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (11 samples, 0.06%)</title><rect x="341.9" y="99.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="344.9" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (10 samples, 0.06%)</title><rect x="342.0" y="83.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="345.0" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (8 samples, 0.05%)</title><rect x="342.1" y="67.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="345.1" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.05%)</title><rect x="342.1" y="51.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="345.1" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="342.8" y="195.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="345.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (551 samples, 3.14%)</title><rect x="343.6" y="643.0" width="37.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="346.6" y="654.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (551 samples, 3.14%)</title><rect x="343.6" y="627.0" width="37.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="346.6" y="638.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (551 samples, 3.14%)</title><rect x="343.6" y="611.0" width="37.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="346.6" y="622.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (549 samples, 3.13%)</title><rect x="343.8" y="595.0" width="36.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="346.8" y="606.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (28 samples, 0.16%)</title><rect x="343.8" y="579.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="346.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (28 samples, 0.16%)</title><rect x="343.8" y="563.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="346.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (28 samples, 0.16%)</title><rect x="343.8" y="547.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="346.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (28 samples, 0.16%)</title><rect x="343.8" y="531.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="346.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (28 samples, 0.16%)</title><rect x="343.8" y="515.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="346.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (25 samples, 0.14%)</title><rect x="343.8" y="499.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.8" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (16 samples, 0.09%)</title><rect x="343.9" y="483.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (16 samples, 0.09%)</title><rect x="343.9" y="467.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="346.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (15 samples, 0.09%)</title><rect x="344.0" y="451.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="347.0" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.07%)</title><rect x="344.1" y="435.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="347.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.07%)</title><rect x="344.2" y="419.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="347.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (10 samples, 0.06%)</title><rect x="344.3" y="403.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="347.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (9 samples, 0.05%)</title><rect x="344.4" y="387.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="347.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (9 samples, 0.05%)</title><rect x="344.4" y="371.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="347.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (9 samples, 0.05%)</title><rect x="344.4" y="355.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="347.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (8 samples, 0.05%)</title><rect x="344.5" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="347.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.05%)</title><rect x="344.5" y="323.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="347.5" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (8 samples, 0.05%)</title><rect x="344.5" y="307.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="347.5" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (8 samples, 0.05%)</title><rect x="344.5" y="291.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (4 samples, 0.02%)</title><rect x="344.7" y="275.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="347.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4 samples, 0.02%)</title><rect x="344.7" y="259.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="347.7" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="344.7" y="243.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="347.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8 samples, 0.05%)</title><rect x="345.0" y="483.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="348.0" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.05%)</title><rect x="345.0" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.0" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.05%)</title><rect x="345.0" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="348.0" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.05%)</title><rect x="345.0" y="435.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="348.0" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="345.0" y="419.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="348.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="345.0" y="403.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5 samples, 0.03%)</title><rect x="345.0" y="387.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="348.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5 samples, 0.03%)</title><rect x="345.0" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="348.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5 samples, 0.03%)</title><rect x="345.0" y="355.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="348.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5 samples, 0.03%)</title><rect x="345.0" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="348.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (517 samples, 2.95%)</title><rect x="345.9" y="579.0" width="34.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.9" y="590.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (517 samples, 2.95%)</title><rect x="345.9" y="563.0" width="34.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="348.9" y="574.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (456 samples, 2.60%)</title><rect x="345.9" y="547.0" width="30.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="348.9" y="558.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (22 samples, 0.13%)</title><rect x="346.1" y="531.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="349.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (22 samples, 0.13%)</title><rect x="346.1" y="515.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="349.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (21 samples, 0.12%)</title><rect x="346.1" y="499.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (20 samples, 0.11%)</title><rect x="346.2" y="483.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="349.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.03%)</title><rect x="346.7" y="467.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="349.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (8 samples, 0.05%)</title><rect x="347.0" y="467.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.02%)</title><rect x="347.3" y="451.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="350.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (37 samples, 0.21%)</title><rect x="347.7" y="531.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (25 samples, 0.14%)</title><rect x="347.8" y="515.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="350.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (24 samples, 0.14%)</title><rect x="347.8" y="499.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="350.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (23 samples, 0.13%)</title><rect x="347.9" y="483.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="350.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (23 samples, 0.13%)</title><rect x="347.9" y="467.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="350.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (21 samples, 0.12%)</title><rect x="348.0" y="451.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="351.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (20 samples, 0.11%)</title><rect x="348.1" y="435.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="351.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (20 samples, 0.11%)</title><rect x="348.1" y="419.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="351.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (20 samples, 0.11%)</title><rect x="348.1" y="403.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="351.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 0.05%)</title><rect x="348.9" y="387.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="351.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.05%)</title><rect x="348.9" y="371.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="351.9" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="349.0" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="352.0" y="366.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.04%)</title><rect x="349.0" y="339.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="352.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (10 samples, 0.06%)</title><rect x="349.5" y="515.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="352.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8 samples, 0.05%)</title><rect x="349.5" y="499.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="352.5" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8 samples, 0.05%)</title><rect x="349.5" y="483.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (393 samples, 2.24%)</title><rect x="350.2" y="531.0" width="26.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="353.2" y="542.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (393 samples, 2.24%)</title><rect x="350.2" y="515.0" width="26.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="353.2" y="526.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (393 samples, 2.24%)</title><rect x="350.2" y="499.0" width="26.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="353.2" y="510.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.06%)</title><rect x="350.2" y="483.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="353.2" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.06%)</title><rect x="350.2" y="467.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="353.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (57 samples, 0.32%)</title><rect x="350.8" y="483.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="353.8" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (5 samples, 0.03%)</title><rect x="350.8" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="353.8" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (28 samples, 0.16%)</title><rect x="351.2" y="467.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="354.2" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (28 samples, 0.16%)</title><rect x="351.2" y="451.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="354.2" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (25 samples, 0.14%)</title><rect x="351.4" y="435.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="354.4" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="351.4" y="419.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="354.4" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="351.7" y="403.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="354.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="351.7" y="387.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="354.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="351.7" y="371.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="354.7" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (19 samples, 0.11%)</title><rect x="351.8" y="355.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="354.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="351.8" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="354.8" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="351.9" y="323.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="354.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="351.9" y="307.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="354.9" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="351.9" y="291.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="354.9" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.08%)</title><rect x="352.1" y="339.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="355.1" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="352.4" y="323.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="355.4" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="352.7" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="355.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="352.7" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="355.7" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (24 samples, 0.14%)</title><rect x="353.1" y="467.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="356.1" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (24 samples, 0.14%)</title><rect x="353.1" y="451.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="356.1" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (23 samples, 0.13%)</title><rect x="353.1" y="435.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="356.1" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (22 samples, 0.13%)</title><rect x="353.2" y="419.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="356.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (22 samples, 0.13%)</title><rect x="353.2" y="403.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="356.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (22 samples, 0.13%)</title><rect x="353.2" y="387.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="356.2" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (19 samples, 0.11%)</title><rect x="353.4" y="371.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.4" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="353.5" y="355.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="356.5" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="353.5" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.5" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (13 samples, 0.07%)</title><rect x="353.8" y="355.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="356.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (13 samples, 0.07%)</title><rect x="353.8" y="339.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="356.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="354.3" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="357.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (326 samples, 1.86%)</title><rect x="354.7" y="483.0" width="21.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="357.7" y="494.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (209 samples, 1.19%)</title><rect x="359.5" y="467.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="362.5" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (209 samples, 1.19%)</title><rect x="359.5" y="451.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="362.5" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (200 samples, 1.14%)</title><rect x="360.1" y="435.0" width="13.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="363.1" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (199 samples, 1.13%)</title><rect x="360.2" y="419.0" width="13.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="363.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="369.1" y="403.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="372.1" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (54 samples, 0.31%)</title><rect x="369.5" y="403.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="372.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (50 samples, 0.29%)</title><rect x="369.8" y="387.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="372.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (48 samples, 0.27%)</title><rect x="369.9" y="371.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="372.9" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (48 samples, 0.27%)</title><rect x="369.9" y="355.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="372.9" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="371.6" y="339.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="374.6" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (18 samples, 0.10%)</title><rect x="372.0" y="339.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="375.0" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.03%)</title><rect x="373.2" y="403.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="376.2" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (26 samples, 0.15%)</title><rect x="373.6" y="467.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="376.6" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (26 samples, 0.15%)</title><rect x="373.6" y="451.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="376.6" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (26 samples, 0.15%)</title><rect x="373.6" y="435.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="376.6" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="373.6" y="419.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="376.6" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (23 samples, 0.13%)</title><rect x="373.8" y="403.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="376.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (23 samples, 0.13%)</title><rect x="373.8" y="387.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="376.8" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (19 samples, 0.11%)</title><rect x="373.8" y="371.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="376.8" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (11 samples, 0.06%)</title><rect x="373.9" y="355.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="376.9" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="374.0" y="339.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="377.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (9 samples, 0.05%)</title><rect x="374.0" y="323.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="377.0" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.04%)</title><rect x="374.2" y="307.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="377.2" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (7 samples, 0.04%)</title><rect x="374.7" y="355.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="377.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (7 samples, 0.04%)</title><rect x="374.7" y="339.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="377.7" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (17 samples, 0.10%)</title><rect x="375.3" y="467.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="378.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (61 samples, 0.35%)</title><rect x="376.6" y="547.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="379.6" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (55 samples, 0.31%)</title><rect x="376.6" y="531.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="379.6" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (55 samples, 0.31%)</title><rect x="376.6" y="515.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="379.6" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (41 samples, 0.23%)</title><rect x="377.5" y="499.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (41 samples, 0.23%)</title><rect x="377.5" y="483.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="380.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (41 samples, 0.23%)</title><rect x="377.5" y="467.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="380.5" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (41 samples, 0.23%)</title><rect x="377.5" y="451.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (41 samples, 0.23%)</title><rect x="377.5" y="435.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="380.5" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (41 samples, 0.23%)</title><rect x="377.5" y="419.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="380.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (17 samples, 0.10%)</title><rect x="377.5" y="403.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="380.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (14 samples, 0.08%)</title><rect x="377.7" y="387.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (14 samples, 0.08%)</title><rect x="377.7" y="371.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="380.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (14 samples, 0.08%)</title><rect x="377.7" y="355.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="380.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (9 samples, 0.05%)</title><rect x="377.7" y="339.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="380.7" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (8 samples, 0.05%)</title><rect x="377.7" y="323.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="380.7" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (8 samples, 0.05%)</title><rect x="377.7" y="307.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="380.7" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.05%)</title><rect x="377.7" y="291.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="380.7" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="377.7" y="275.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="380.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (4 samples, 0.02%)</title><rect x="378.4" y="339.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="381.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (24 samples, 0.14%)</title><rect x="378.7" y="403.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="381.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (24 samples, 0.14%)</title><rect x="378.7" y="387.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="381.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (24 samples, 0.14%)</title><rect x="378.7" y="371.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="381.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (24 samples, 0.14%)</title><rect x="378.7" y="355.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="381.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (4 samples, 0.02%)</title><rect x="378.7" y="339.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="381.7" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="378.7" y="323.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="381.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (4 samples, 0.02%)</title><rect x="378.7" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="381.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4 samples, 0.02%)</title><rect x="378.7" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="381.7" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (20 samples, 0.11%)</title><rect x="379.0" y="339.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="382.0" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (20 samples, 0.11%)</title><rect x="379.0" y="323.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="382.0" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (20 samples, 0.11%)</title><rect x="379.0" y="307.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="382.0" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (20 samples, 0.11%)</title><rect x="379.0" y="291.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="382.0" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="379.0" y="275.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.0" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="379.0" y="259.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="382.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (15 samples, 0.09%)</title><rect x="379.3" y="275.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (15 samples, 0.09%)</title><rect x="379.3" y="259.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="382.3" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (12 samples, 0.07%)</title><rect x="379.3" y="243.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.3" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (12 samples, 0.07%)</title><rect x="379.3" y="227.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.3" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.04%)</title><rect x="379.6" y="211.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.6" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="379.6" y="195.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.6" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="379.8" y="179.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="382.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="379.8" y="163.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.8" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="379.8" y="147.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.03%)</title><rect x="380.3" y="531.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="383.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.03%)</title><rect x="380.3" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.3" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.03%)</title><rect x="380.4" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="383.4" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (5 samples, 0.03%)</title><rect x="380.4" y="483.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="383.4" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (5 samples, 0.03%)</title><rect x="380.4" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="383.4" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5 samples, 0.03%)</title><rect x="380.4" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="383.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="380.4" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="383.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="380.4" y="419.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="383.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (4 samples, 0.02%)</title><rect x="380.4" y="403.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="383.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (4 samples, 0.02%)</title><rect x="380.4" y="387.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="383.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (4 samples, 0.02%)</title><rect x="380.4" y="371.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="383.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="380.4" y="355.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="383.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.sendResponse (179 samples, 1.02%)</title><rect x="380.7" y="643.0" width="12.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="383.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (179 samples, 1.02%)</title><rect x="380.7" y="627.0" width="12.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="383.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (177 samples, 1.01%)</title><rect x="380.8" y="611.0" width="11.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="383.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.03%)</title><rect x="380.8" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.03%)</title><rect x="380.8" y="579.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="383.8" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.03%)</title><rect x="380.8" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.8" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.03%)</title><rect x="380.8" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.8" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (172 samples, 0.98%)</title><rect x="381.1" y="595.0" width="11.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.1" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (172 samples, 0.98%)</title><rect x="381.1" y="579.0" width="11.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="384.1" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (170 samples, 0.97%)</title><rect x="381.2" y="563.0" width="11.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="384.2" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (170 samples, 0.97%)</title><rect x="381.2" y="547.0" width="11.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="384.2" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (166 samples, 0.95%)</title><rect x="381.2" y="531.0" width="11.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="384.2" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (158 samples, 0.90%)</title><rect x="381.8" y="515.0" width="10.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="384.8" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (158 samples, 0.90%)</title><rect x="381.8" y="499.0" width="10.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="384.8" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (155 samples, 0.88%)</title><rect x="381.9" y="483.0" width="10.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="384.9" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (155 samples, 0.88%)</title><rect x="381.9" y="467.0" width="10.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="384.9" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (151 samples, 0.86%)</title><rect x="382.1" y="451.0" width="10.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="385.1" y="462.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.03%)</title><rect x="382.1" y="435.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="385.1" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (6 samples, 0.03%)</title><rect x="382.1" y="419.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="385.1" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (145 samples, 0.83%)</title><rect x="382.5" y="435.0" width="9.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="385.5" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (145 samples, 0.83%)</title><rect x="382.5" y="419.0" width="9.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="385.5" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (138 samples, 0.79%)</title><rect x="382.6" y="403.0" width="9.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="385.6" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (138 samples, 0.79%)</title><rect x="382.6" y="387.0" width="9.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="385.6" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (133 samples, 0.76%)</title><rect x="382.7" y="371.0" width="8.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="385.7" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (131 samples, 0.75%)</title><rect x="382.7" y="355.0" width="8.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="385.7" y="366.0"></text>
</g>
<g>
<title>ip_local_out (32 samples, 0.18%)</title><rect x="382.9" y="339.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="385.9" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (32 samples, 0.18%)</title><rect x="382.9" y="323.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="385.9" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (32 samples, 0.18%)</title><rect x="382.9" y="307.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="385.9" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (10 samples, 0.06%)</title><rect x="382.9" y="291.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="385.9" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (14 samples, 0.08%)</title><rect x="384.0" y="291.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="387.0" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (6 samples, 0.03%)</title><rect x="384.1" y="275.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="387.1" y="286.0"></text>
</g>
<g>
<title>ip_output (96 samples, 0.55%)</title><rect x="385.1" y="339.0" width="6.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="388.1" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (90 samples, 0.51%)</title><rect x="385.1" y="323.0" width="6.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="388.1" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.03%)</title><rect x="385.3" y="307.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="388.3" y="318.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (83 samples, 0.47%)</title><rect x="385.6" y="307.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="388.6" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (83 samples, 0.47%)</title><rect x="385.6" y="291.0" width="5.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="388.6" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (83 samples, 0.47%)</title><rect x="385.6" y="275.0" width="5.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="388.6" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (83 samples, 0.47%)</title><rect x="385.6" y="259.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="388.6" y="270.0"></text>
</g>
<g>
<title>net_rx_action (82 samples, 0.47%)</title><rect x="385.7" y="243.0" width="5.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="388.7" y="254.0"></text>
</g>
<g>
<title>process_backlog (80 samples, 0.46%)</title><rect x="385.8" y="227.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="388.8" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (80 samples, 0.46%)</title><rect x="385.8" y="211.0" width="5.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="388.8" y="222.0"></text>
</g>
<g>
<title>ip_rcv (80 samples, 0.46%)</title><rect x="385.8" y="195.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="388.8" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (63 samples, 0.36%)</title><rect x="385.8" y="179.0" width="4.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="388.8" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (53 samples, 0.30%)</title><rect x="385.8" y="163.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="388.8" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (53 samples, 0.30%)</title><rect x="385.8" y="147.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="388.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (51 samples, 0.29%)</title><rect x="386.0" y="131.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="389.0" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.02%)</title><rect x="386.1" y="115.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="389.1" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (45 samples, 0.26%)</title><rect x="386.4" y="115.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="389.4" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (45 samples, 0.26%)</title><rect x="386.4" y="99.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="389.4" y="110.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.06%)</title><rect x="386.6" y="83.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="389.6" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (31 samples, 0.18%)</title><rect x="387.2" y="83.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="390.2" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (30 samples, 0.17%)</title><rect x="387.3" y="67.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="390.3" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (28 samples, 0.16%)</title><rect x="387.4" y="51.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="390.4" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (27 samples, 0.15%)</title><rect x="387.5" y="35.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="390.5" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.06%)</title><rect x="389.4" y="163.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="392.4" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="389.6" y="147.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="392.6" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.09%)</title><rect x="390.1" y="179.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="393.1" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (10 samples, 0.06%)</title><rect x="390.3" y="163.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="393.3" y="174.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.02%)</title><rect x="391.9" y="403.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="394.9" y="414.0"></text>
</g>
<g>
<title>[worker-1 tid=14268] (1,023 samples, 5.83%)</title><rect x="392.8" y="739.0" width="68.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="395.8" y="750.0">[worker..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.02%)</title><rect x="392.9" y="723.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="395.9" y="734.0"></text>
</g>
<g>
<title>[unknown_Java] (31 samples, 0.18%)</title><rect x="393.4" y="723.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="396.4" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.02%)</title><rect x="395.2" y="707.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="398.2" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.run (984 samples, 5.61%)</title><rect x="395.4" y="723.0" width="66.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.4" y="734.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (984 samples, 5.61%)</title><rect x="395.4" y="707.0" width="66.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="398.4" y="718.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (984 samples, 5.61%)</title><rect x="395.4" y="691.0" width="66.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.4" y="702.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (20 samples, 0.11%)</title><rect x="395.6" y="675.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (19 samples, 0.11%)</title><rect x="395.6" y="659.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="398.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.08%)</title><rect x="395.6" y="643.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="398.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (14 samples, 0.08%)</title><rect x="395.6" y="627.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="398.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (14 samples, 0.08%)</title><rect x="395.6" y="611.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.6" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (13 samples, 0.07%)</title><rect x="395.7" y="595.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="398.7" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.04%)</title><rect x="396.0" y="579.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="399.0" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="396.2" y="563.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="399.2" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="396.2" y="547.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="399.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (962 samples, 5.48%)</title><rect x="396.9" y="675.0" width="64.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="399.9" y="686.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (962 samples, 5.48%)</title><rect x="396.9" y="659.0" width="64.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.9" y="670.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (99 samples, 0.56%)</title><rect x="396.9" y="643.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="399.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (99 samples, 0.56%)</title><rect x="396.9" y="627.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="399.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (99 samples, 0.56%)</title><rect x="396.9" y="611.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (98 samples, 0.56%)</title><rect x="397.0" y="595.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="400.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (98 samples, 0.56%)</title><rect x="397.0" y="579.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="400.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (19 samples, 0.11%)</title><rect x="397.1" y="563.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="400.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (19 samples, 0.11%)</title><rect x="397.1" y="547.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="400.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="397.2" y="531.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="400.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="397.2" y="515.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="400.2" y="526.0"></text>
</g>
<g>
<title>__libc_recv (12 samples, 0.07%)</title><rect x="397.5" y="531.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="400.5" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="397.6" y="515.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="400.6" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="397.6" y="499.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="400.6" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (11 samples, 0.06%)</title><rect x="397.6" y="483.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="400.6" y="494.0"></text>
</g>
<g>
<title>__sys_recvfrom (11 samples, 0.06%)</title><rect x="397.6" y="467.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="400.6" y="478.0"></text>
</g>
<g>
<title>inet_recvmsg (9 samples, 0.05%)</title><rect x="397.7" y="451.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="400.7" y="462.0"></text>
</g>
<g>
<title>tcp_recvmsg (9 samples, 0.05%)</title><rect x="397.7" y="435.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="400.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (8 samples, 0.05%)</title><rect x="398.3" y="563.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (7 samples, 0.04%)</title><rect x="398.9" y="563.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="401.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.03%)</title><rect x="398.9" y="547.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="401.9" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (6 samples, 0.03%)</title><rect x="399.5" y="563.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="402.5" y="574.0"></text>
</g>
<g>
<title>setsockopt (6 samples, 0.03%)</title><rect x="399.5" y="547.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="402.5" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="399.6" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="402.6" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="399.6" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="402.6" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (54 samples, 0.31%)</title><rect x="399.9" y="563.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="402.9" y="574.0"></text>
</g>
<g>
<title>.annobin_send.c (53 samples, 0.30%)</title><rect x="399.9" y="547.0" width="3.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="402.9" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (50 samples, 0.29%)</title><rect x="400.1" y="531.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="403.1" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (50 samples, 0.29%)</title><rect x="400.1" y="515.0" width="3.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="403.1" y="526.0"></text>
</g>
<g>
<title>__x64_sys_sendto (49 samples, 0.28%)</title><rect x="400.2" y="499.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="403.2" y="510.0"></text>
</g>
<g>
<title>__sys_sendto (49 samples, 0.28%)</title><rect x="400.2" y="483.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="403.2" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (48 samples, 0.27%)</title><rect x="400.3" y="467.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="403.3" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (48 samples, 0.27%)</title><rect x="400.3" y="451.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="403.3" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (48 samples, 0.27%)</title><rect x="400.3" y="435.0" width="3.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="403.3" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (45 samples, 0.26%)</title><rect x="400.3" y="419.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="403.3" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (45 samples, 0.26%)</title><rect x="400.3" y="403.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="403.3" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (43 samples, 0.25%)</title><rect x="400.4" y="387.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="403.4" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (42 samples, 0.24%)</title><rect x="400.4" y="371.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="403.4" y="382.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 0.03%)</title><rect x="400.5" y="355.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="403.5" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (5 samples, 0.03%)</title><rect x="400.5" y="339.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="403.5" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="400.5" y="323.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="403.5" y="334.0"></text>
</g>
<g>
<title>ip_output (36 samples, 0.21%)</title><rect x="400.8" y="355.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="403.8" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (34 samples, 0.19%)</title><rect x="401.0" y="339.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="404.0" y="350.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.02%)</title><rect x="401.0" y="323.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="404.0" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (30 samples, 0.17%)</title><rect x="401.2" y="323.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="404.2" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (30 samples, 0.17%)</title><rect x="401.2" y="307.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="404.2" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (30 samples, 0.17%)</title><rect x="401.2" y="291.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="404.2" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (30 samples, 0.17%)</title><rect x="401.2" y="275.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="404.2" y="286.0"></text>
</g>
<g>
<title>net_rx_action (28 samples, 0.16%)</title><rect x="401.4" y="259.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="404.4" y="270.0"></text>
</g>
<g>
<title>process_backlog (27 samples, 0.15%)</title><rect x="401.4" y="243.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="404.4" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (26 samples, 0.15%)</title><rect x="401.5" y="227.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="404.5" y="238.0"></text>
</g>
<g>
<title>ip_rcv (26 samples, 0.15%)</title><rect x="401.5" y="211.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="404.5" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (22 samples, 0.13%)</title><rect x="401.5" y="195.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="404.5" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (20 samples, 0.11%)</title><rect x="401.5" y="179.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="404.5" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (20 samples, 0.11%)</title><rect x="401.5" y="163.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="404.5" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (20 samples, 0.11%)</title><rect x="401.5" y="147.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="404.5" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (16 samples, 0.09%)</title><rect x="401.8" y="131.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="404.8" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (16 samples, 0.09%)</title><rect x="401.8" y="115.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="404.8" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (14 samples, 0.08%)</title><rect x="401.9" y="99.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="404.9" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (13 samples, 0.07%)</title><rect x="402.0" y="83.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="405.0" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 0.07%)</title><rect x="402.0" y="67.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="405.0" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.07%)</title><rect x="402.0" y="51.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="405.0" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="403.0" y="195.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="406.0" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="403.0" y="179.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="406.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (696 samples, 3.97%)</title><rect x="403.6" y="643.0" width="46.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.6" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (696 samples, 3.97%)</title><rect x="403.6" y="627.0" width="46.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="406.6" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (696 samples, 3.97%)</title><rect x="403.6" y="611.0" width="46.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="406.6" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (693 samples, 3.95%)</title><rect x="403.8" y="595.0" width="46.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="406.8" y="606.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (30 samples, 0.17%)</title><rect x="403.8" y="579.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (30 samples, 0.17%)</title><rect x="403.8" y="563.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="406.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (30 samples, 0.17%)</title><rect x="403.8" y="547.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="406.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (30 samples, 0.17%)</title><rect x="403.8" y="531.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="406.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (30 samples, 0.17%)</title><rect x="403.8" y="515.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="406.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (29 samples, 0.17%)</title><rect x="403.8" y="499.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.8" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (14 samples, 0.08%)</title><rect x="403.9" y="483.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="406.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (14 samples, 0.08%)</title><rect x="403.9" y="467.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (13 samples, 0.07%)</title><rect x="404.0" y="451.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="407.0" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.07%)</title><rect x="404.1" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="407.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.07%)</title><rect x="404.1" y="419.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="407.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (9 samples, 0.05%)</title><rect x="404.3" y="403.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (9 samples, 0.05%)</title><rect x="404.3" y="387.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="407.3" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (9 samples, 0.05%)</title><rect x="404.3" y="371.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="407.3" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (9 samples, 0.05%)</title><rect x="404.3" y="355.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="407.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (7 samples, 0.04%)</title><rect x="404.4" y="339.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="407.4" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.04%)</title><rect x="404.4" y="323.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (7 samples, 0.04%)</title><rect x="404.4" y="307.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.4" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.04%)</title><rect x="404.4" y="291.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (5 samples, 0.03%)</title><rect x="404.5" y="275.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="407.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (5 samples, 0.03%)</title><rect x="404.5" y="259.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="407.5" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="404.5" y="243.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="407.5" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.03%)</title><rect x="404.5" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="407.5" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="404.6" y="211.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="407.6" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="404.6" y="195.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="407.6" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (14 samples, 0.08%)</title><rect x="404.9" y="483.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="407.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (14 samples, 0.08%)</title><rect x="404.9" y="467.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="407.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (12 samples, 0.07%)</title><rect x="405.0" y="451.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="408.0" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (12 samples, 0.07%)</title><rect x="405.0" y="435.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="408.0" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.07%)</title><rect x="405.0" y="419.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="408.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.07%)</title><rect x="405.0" y="403.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="408.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (9 samples, 0.05%)</title><rect x="405.0" y="387.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="408.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (8 samples, 0.05%)</title><rect x="405.1" y="371.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="408.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (8 samples, 0.05%)</title><rect x="405.1" y="355.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="408.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (8 samples, 0.05%)</title><rect x="405.1" y="339.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="408.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (4 samples, 0.02%)</title><rect x="405.3" y="323.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (659 samples, 3.76%)</title><rect x="406.1" y="579.0" width="44.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="409.1" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (659 samples, 3.76%)</title><rect x="406.1" y="563.0" width="44.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="409.1" y="574.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (568 samples, 3.24%)</title><rect x="406.1" y="547.0" width="38.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="409.1" y="558.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (33 samples, 0.19%)</title><rect x="406.2" y="531.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="409.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (32 samples, 0.18%)</title><rect x="406.3" y="515.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="409.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (27 samples, 0.15%)</title><rect x="406.5" y="499.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="409.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (26 samples, 0.15%)</title><rect x="406.6" y="483.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="409.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (20 samples, 0.11%)</title><rect x="407.0" y="467.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="410.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (9 samples, 0.05%)</title><rect x="407.8" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="410.8" y="462.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (5 samples, 0.03%)</title><rect x="408.0" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (34 samples, 0.19%)</title><rect x="408.6" y="531.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="411.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (25 samples, 0.14%)</title><rect x="408.6" y="515.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="411.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (21 samples, 0.12%)</title><rect x="408.7" y="499.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (21 samples, 0.12%)</title><rect x="408.7" y="483.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="411.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (20 samples, 0.11%)</title><rect x="408.8" y="467.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="411.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (19 samples, 0.11%)</title><rect x="408.8" y="451.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (16 samples, 0.09%)</title><rect x="409.0" y="435.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="412.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (16 samples, 0.09%)</title><rect x="409.0" y="419.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="412.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.04%)</title><rect x="409.0" y="403.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="412.0" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="409.0" y="387.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="412.0" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="409.0" y="371.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="412.0" y="382.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.03%)</title><rect x="409.1" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="412.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (9 samples, 0.05%)</title><rect x="409.5" y="403.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="412.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.03%)</title><rect x="409.7" y="387.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="412.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="409.8" y="371.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="412.8" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="409.8" y="355.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.8" y="366.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.03%)</title><rect x="409.8" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="412.8" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.02%)</title><rect x="409.8" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="412.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (8 samples, 0.05%)</title><rect x="410.3" y="515.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.3" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (7 samples, 0.04%)</title><rect x="410.3" y="499.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.3" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6 samples, 0.03%)</title><rect x="410.4" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (497 samples, 2.83%)</title><rect x="410.8" y="531.0" width="33.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="413.8" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (497 samples, 2.83%)</title><rect x="410.8" y="515.0" width="33.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.8" y="526.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (497 samples, 2.83%)</title><rect x="410.8" y="499.0" width="33.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.8" y="510.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (15 samples, 0.09%)</title><rect x="410.8" y="483.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="413.8" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (15 samples, 0.09%)</title><rect x="410.8" y="467.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.8" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.03%)</title><rect x="411.5" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="414.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (79 samples, 0.45%)</title><rect x="411.9" y="483.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="414.9" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (39 samples, 0.22%)</title><rect x="412.0" y="467.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (39 samples, 0.22%)</title><rect x="412.0" y="451.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="415.0" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (28 samples, 0.16%)</title><rect x="412.7" y="435.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="415.7" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (28 samples, 0.16%)</title><rect x="412.7" y="419.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="415.7" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (28 samples, 0.16%)</title><rect x="412.7" y="403.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (28 samples, 0.16%)</title><rect x="412.7" y="387.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="415.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (28 samples, 0.16%)</title><rect x="412.7" y="371.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="415.7" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (28 samples, 0.16%)</title><rect x="412.7" y="355.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="415.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.05%)</title><rect x="412.7" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="415.7" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="412.9" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="415.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="412.9" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.9" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="412.9" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="415.9" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (20 samples, 0.11%)</title><rect x="413.3" y="339.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.3" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="414.1" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (38 samples, 0.22%)</title><rect x="414.6" y="467.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.6" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (38 samples, 0.22%)</title><rect x="414.6" y="451.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="417.6" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (37 samples, 0.21%)</title><rect x="414.7" y="435.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.7" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (34 samples, 0.19%)</title><rect x="414.9" y="419.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="417.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (34 samples, 0.19%)</title><rect x="414.9" y="403.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (34 samples, 0.19%)</title><rect x="414.9" y="387.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.9" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (30 samples, 0.17%)</title><rect x="415.1" y="371.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="418.1" y="382.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (5 samples, 0.03%)</title><rect x="415.4" y="355.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="418.4" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.05%)</title><rect x="415.7" y="355.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="418.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="415.8" y="339.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="415.9" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="418.9" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="415.9" y="307.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="418.9" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.08%)</title><rect x="416.2" y="355.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="419.2" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.08%)</title><rect x="416.2" y="339.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="419.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="416.7" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (403 samples, 2.30%)</title><rect x="417.2" y="483.0" width="27.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="420.2" y="494.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (268 samples, 1.53%)</title><rect x="423.0" y="467.0" width="18.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="426.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (266 samples, 1.52%)</title><rect x="423.2" y="451.0" width="17.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="426.2" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (249 samples, 1.42%)</title><rect x="424.3" y="435.0" width="16.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="427.3" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (248 samples, 1.41%)</title><rect x="424.4" y="419.0" width="16.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.4" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.03%)</title><rect x="435.5" y="403.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.5" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (71 samples, 0.40%)</title><rect x="435.8" y="403.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="438.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (66 samples, 0.38%)</title><rect x="436.1" y="387.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="439.1" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (63 samples, 0.36%)</title><rect x="436.3" y="371.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="439.3" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (59 samples, 0.34%)</title><rect x="436.6" y="355.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="439.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (23 samples, 0.13%)</title><rect x="439.0" y="339.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.0" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="440.0" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="443.0" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="440.3" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="443.3" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.03%)</title><rect x="440.6" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="443.6" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (28 samples, 0.16%)</title><rect x="441.0" y="467.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="444.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (27 samples, 0.15%)</title><rect x="441.1" y="451.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="444.1" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (26 samples, 0.15%)</title><rect x="441.2" y="435.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="444.2" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (21 samples, 0.12%)</title><rect x="441.5" y="419.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="444.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (21 samples, 0.12%)</title><rect x="441.5" y="403.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="444.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (21 samples, 0.12%)</title><rect x="441.5" y="387.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="444.5" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (17 samples, 0.10%)</title><rect x="441.6" y="371.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="444.6" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="441.7" y="355.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="444.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="441.7" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="444.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="441.7" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="444.7" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="441.7" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="444.7" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.06%)</title><rect x="442.0" y="355.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="445.0" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.06%)</title><rect x="442.0" y="339.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="445.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="442.3" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="445.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (17 samples, 0.10%)</title><rect x="442.9" y="467.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="445.9" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (5 samples, 0.03%)</title><rect x="443.7" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="446.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (91 samples, 0.52%)</title><rect x="444.3" y="547.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="447.3" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (84 samples, 0.48%)</title><rect x="444.3" y="531.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="447.3" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (83 samples, 0.47%)</title><rect x="444.4" y="515.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="447.4" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (70 samples, 0.40%)</title><rect x="445.3" y="499.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="448.3" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (70 samples, 0.40%)</title><rect x="445.3" y="483.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="448.3" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (69 samples, 0.39%)</title><rect x="445.4" y="467.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="448.4" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (68 samples, 0.39%)</title><rect x="445.4" y="451.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="448.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (65 samples, 0.37%)</title><rect x="445.6" y="435.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="448.6" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (65 samples, 0.37%)</title><rect x="445.6" y="419.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="448.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (29 samples, 0.17%)</title><rect x="445.8" y="403.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="448.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (25 samples, 0.14%)</title><rect x="446.0" y="387.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="449.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (25 samples, 0.14%)</title><rect x="446.0" y="371.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="449.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (25 samples, 0.14%)</title><rect x="446.0" y="355.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="449.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (13 samples, 0.07%)</title><rect x="446.1" y="339.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.1" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (10 samples, 0.06%)</title><rect x="446.1" y="323.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="449.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (10 samples, 0.06%)</title><rect x="446.1" y="307.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="449.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.05%)</title><rect x="446.2" y="291.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="449.2" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="446.2" y="275.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="449.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (4 samples, 0.02%)</title><rect x="447.0" y="339.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="450.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (5 samples, 0.03%)</title><rect x="447.2" y="339.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="450.2" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="447.2" y="323.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="450.2" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.03%)</title><rect x="447.2" y="307.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="450.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.03%)</title><rect x="447.2" y="291.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="450.2" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="447.2" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="450.2" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="447.2" y="259.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.2" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="447.2" y="243.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="450.2" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="447.2" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.2" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="447.3" y="211.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="450.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (34 samples, 0.19%)</title><rect x="447.7" y="403.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="450.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (34 samples, 0.19%)</title><rect x="447.7" y="387.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="450.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (34 samples, 0.19%)</title><rect x="447.7" y="371.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="450.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (34 samples, 0.19%)</title><rect x="447.7" y="355.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="450.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (31 samples, 0.18%)</title><rect x="447.9" y="339.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="450.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (31 samples, 0.18%)</title><rect x="447.9" y="323.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (31 samples, 0.18%)</title><rect x="447.9" y="307.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="450.9" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (31 samples, 0.18%)</title><rect x="447.9" y="291.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.05%)</title><rect x="448.0" y="275.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="451.0" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.05%)</title><rect x="448.0" y="259.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="451.0" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.03%)</title><rect x="448.0" y="243.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="451.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (21 samples, 0.12%)</title><rect x="448.5" y="275.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="451.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (21 samples, 0.12%)</title><rect x="448.5" y="259.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="451.5" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (16 samples, 0.09%)</title><rect x="448.6" y="243.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="451.6" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (16 samples, 0.09%)</title><rect x="448.6" y="227.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.6" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.03%)</title><rect x="449.3" y="211.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="452.3" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="449.4" y="195.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="452.4" y="206.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="449.7" y="243.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.03%)</title><rect x="450.0" y="531.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="453.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.03%)</title><rect x="450.0" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.03%)</title><rect x="450.0" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.0" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (6 samples, 0.03%)</title><rect x="450.0" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="453.0" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (6 samples, 0.03%)</title><rect x="450.0" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.0" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (6 samples, 0.03%)</title><rect x="450.0" y="451.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="453.0" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="450.1" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="450.1" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (5 samples, 0.03%)</title><rect x="450.1" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="453.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (5 samples, 0.03%)</title><rect x="450.1" y="387.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="453.1" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (5 samples, 0.03%)</title><rect x="450.1" y="371.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="453.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.03%)</title><rect x="450.1" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="453.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.sendResponse (167 samples, 0.95%)</title><rect x="450.4" y="643.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="453.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (167 samples, 0.95%)</title><rect x="450.4" y="627.0" width="11.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (162 samples, 0.92%)</title><rect x="450.6" y="611.0" width="10.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.6" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (161 samples, 0.92%)</title><rect x="450.7" y="595.0" width="10.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="453.7" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (161 samples, 0.92%)</title><rect x="450.7" y="579.0" width="10.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.7" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (156 samples, 0.89%)</title><rect x="450.9" y="563.0" width="10.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.9" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (155 samples, 0.88%)</title><rect x="450.9" y="547.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.9" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (147 samples, 0.84%)</title><rect x="451.0" y="531.0" width="9.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="454.0" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (141 samples, 0.80%)</title><rect x="451.4" y="515.0" width="9.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="454.4" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (141 samples, 0.80%)</title><rect x="451.4" y="499.0" width="9.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="454.4" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (135 samples, 0.77%)</title><rect x="451.7" y="483.0" width="9.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="454.7" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (134 samples, 0.76%)</title><rect x="451.8" y="467.0" width="9.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="454.8" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (128 samples, 0.73%)</title><rect x="451.9" y="451.0" width="8.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="454.9" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (125 samples, 0.71%)</title><rect x="452.1" y="435.0" width="8.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="455.1" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (123 samples, 0.70%)</title><rect x="452.3" y="419.0" width="8.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="455.3" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (113 samples, 0.64%)</title><rect x="452.3" y="403.0" width="7.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="455.3" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (113 samples, 0.64%)</title><rect x="452.3" y="387.0" width="7.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="455.3" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (111 samples, 0.63%)</title><rect x="452.3" y="371.0" width="7.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="455.3" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (108 samples, 0.62%)</title><rect x="452.5" y="355.0" width="7.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="455.5" y="366.0"></text>
</g>
<g>
<title>ip_local_out (15 samples, 0.09%)</title><rect x="452.5" y="339.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="455.5" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (15 samples, 0.09%)</title><rect x="452.5" y="323.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="455.5" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.09%)</title><rect x="452.5" y="307.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="455.5" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="452.5" y="291.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="455.5" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (7 samples, 0.04%)</title><rect x="453.0" y="291.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="456.0" y="302.0"></text>
</g>
<g>
<title>ip_output (93 samples, 0.53%)</title><rect x="453.5" y="339.0" width="6.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="456.5" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (88 samples, 0.50%)</title><rect x="453.5" y="323.0" width="5.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="456.5" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.03%)</title><rect x="453.6" y="307.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="456.6" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.03%)</title><rect x="453.6" y="291.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="456.6" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.03%)</title><rect x="453.6" y="275.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="456.6" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (81 samples, 0.46%)</title><rect x="454.0" y="307.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="457.0" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (81 samples, 0.46%)</title><rect x="454.0" y="291.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="457.0" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (81 samples, 0.46%)</title><rect x="454.0" y="275.0" width="5.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="457.0" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (81 samples, 0.46%)</title><rect x="454.0" y="259.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="457.0" y="270.0"></text>
</g>
<g>
<title>net_rx_action (80 samples, 0.46%)</title><rect x="454.0" y="243.0" width="5.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="457.0" y="254.0"></text>
</g>
<g>
<title>process_backlog (79 samples, 0.45%)</title><rect x="454.1" y="227.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="457.1" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (76 samples, 0.43%)</title><rect x="454.3" y="211.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="457.3" y="222.0"></text>
</g>
<g>
<title>ip_rcv (73 samples, 0.42%)</title><rect x="454.5" y="195.0" width="4.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="457.5" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (59 samples, 0.34%)</title><rect x="454.6" y="179.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="457.6" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (55 samples, 0.31%)</title><rect x="454.6" y="163.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="457.6" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (55 samples, 0.31%)</title><rect x="454.6" y="147.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="457.6" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (54 samples, 0.31%)</title><rect x="454.6" y="131.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="457.6" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.03%)</title><rect x="454.8" y="115.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="457.8" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (47 samples, 0.27%)</title><rect x="455.1" y="115.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="458.1" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (47 samples, 0.27%)</title><rect x="455.1" y="99.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="458.1" y="110.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.02%)</title><rect x="455.2" y="83.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="458.2" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (41 samples, 0.23%)</title><rect x="455.4" y="83.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="458.4" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (39 samples, 0.22%)</title><rect x="455.5" y="67.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="458.5" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (37 samples, 0.21%)</title><rect x="455.6" y="51.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="458.6" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (37 samples, 0.21%)</title><rect x="455.6" y="35.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="458.6" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="458.3" y="163.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="461.3" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.07%)</title><rect x="458.5" y="179.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="461.5" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (9 samples, 0.05%)</title><rect x="458.6" y="163.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="461.6" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="459.4" y="323.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="462.4" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="459.4" y="307.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="462.4" y="318.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.02%)</title><rect x="460.1" y="403.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="463.1" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.02%)</title><rect x="460.1" y="387.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="463.1" y="398.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.02%)</title><rect x="460.6" y="451.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="463.6" y="462.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.02%)</title><rect x="460.6" y="435.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="463.6" y="446.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.02%)</title><rect x="460.6" y="419.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="463.6" y="430.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="461.0" y="531.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="464.0" y="542.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="461.0" y="515.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="464.0" y="526.0"></text>
</g>
<g>
<title>[worker-1 tid=14271] (1,010 samples, 5.76%)</title><rect x="461.6" y="739.0" width="68.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="464.6" y="750.0">[worker..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.03%)</title><rect x="461.6" y="723.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="464.6" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.03%)</title><rect x="461.6" y="707.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="464.6" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.03%)</title><rect x="461.6" y="691.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="464.6" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="461.6" y="675.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="464.6" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.03%)</title><rect x="461.6" y="659.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="464.6" y="670.0"></text>
</g>
<g>
<title>[unknown_Java] (39 samples, 0.22%)</title><rect x="462.0" y="723.0" width="2.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="465.0" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.02%)</title><rect x="464.3" y="707.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="467.3" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.run (966 samples, 5.51%)</title><rect x="464.6" y="723.0" width="65.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="467.6" y="734.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (966 samples, 5.51%)</title><rect x="464.6" y="707.0" width="65.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="467.6" y="718.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (966 samples, 5.51%)</title><rect x="464.6" y="691.0" width="65.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="467.6" y="702.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (25 samples, 0.14%)</title><rect x="464.7" y="675.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (25 samples, 0.14%)</title><rect x="464.7" y="659.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="467.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (18 samples, 0.10%)</title><rect x="464.8" y="643.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (17 samples, 0.10%)</title><rect x="464.9" y="627.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (17 samples, 0.10%)</title><rect x="464.9" y="611.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="467.9" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (10 samples, 0.06%)</title><rect x="464.9" y="595.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="467.9" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.04%)</title><rect x="465.1" y="579.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="468.1" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="465.2" y="563.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="468.2" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="465.2" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="468.2" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="465.3" y="531.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="468.3" y="542.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="465.3" y="515.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="468.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.04%)</title><rect x="465.5" y="595.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="468.5" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.03%)</title><rect x="465.5" y="579.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="468.5" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="465.5" y="563.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="468.5" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="465.5" y="547.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="468.5" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="465.5" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="468.5" y="542.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="465.5" y="515.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="468.5" y="526.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.03%)</title><rect x="465.6" y="499.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="468.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.03%)</title><rect x="466.1" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="469.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.03%)</title><rect x="466.1" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="469.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.03%)</title><rect x="466.1" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="469.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.03%)</title><rect x="466.1" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.03%)</title><rect x="466.1" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="469.1" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.03%)</title><rect x="466.1" y="563.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="469.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (939 samples, 5.35%)</title><rect x="466.4" y="675.0" width="63.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="469.4" y="686.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (938 samples, 5.35%)</title><rect x="466.5" y="659.0" width="63.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.5" y="670.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (88 samples, 0.50%)</title><rect x="466.5" y="643.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (87 samples, 0.50%)</title><rect x="466.5" y="627.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="469.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (87 samples, 0.50%)</title><rect x="466.5" y="611.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="469.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (86 samples, 0.49%)</title><rect x="466.6" y="595.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (86 samples, 0.49%)</title><rect x="466.6" y="579.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="469.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (18 samples, 0.10%)</title><rect x="466.6" y="563.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="469.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (17 samples, 0.10%)</title><rect x="466.7" y="547.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.7" y="558.0"></text>
</g>
<g>
<title>__libc_recv (13 samples, 0.07%)</title><rect x="466.8" y="531.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="469.8" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="466.9" y="515.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="469.9" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="466.9" y="499.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="469.9" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (10 samples, 0.06%)</title><rect x="467.0" y="483.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="470.0" y="494.0"></text>
</g>
<g>
<title>__sys_recvfrom (10 samples, 0.06%)</title><rect x="467.0" y="467.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="470.0" y="478.0"></text>
</g>
<g>
<title>inet_recvmsg (7 samples, 0.04%)</title><rect x="467.2" y="451.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="470.2" y="462.0"></text>
</g>
<g>
<title>tcp_recvmsg (6 samples, 0.03%)</title><rect x="467.3" y="435.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="470.3" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (14 samples, 0.08%)</title><rect x="468.2" y="563.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="471.2" y="574.0"></text>
</g>
<g>
<title>setsockopt (14 samples, 0.08%)</title><rect x="468.2" y="547.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="471.2" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.05%)</title><rect x="468.6" y="531.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="471.6" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.05%)</title><rect x="468.6" y="515.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="471.6" y="526.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (7 samples, 0.04%)</title><rect x="468.7" y="499.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="471.7" y="510.0"></text>
</g>
<g>
<title>__sys_setsockopt (6 samples, 0.03%)</title><rect x="468.8" y="483.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="471.8" y="494.0"></text>
</g>
<g>
<title>security_socket_setsockopt (5 samples, 0.03%)</title><rect x="468.8" y="467.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="471.8" y="478.0"></text>
</g>
<g>
<title>selinux_socket_setsockopt (5 samples, 0.03%)</title><rect x="468.8" y="451.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="471.8" y="462.0"></text>
</g>
<g>
<title>sock_has_perm (5 samples, 0.03%)</title><rect x="468.8" y="435.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="471.8" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (46 samples, 0.26%)</title><rect x="469.2" y="563.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="472.2" y="574.0"></text>
</g>
<g>
<title>.annobin_send.c (43 samples, 0.25%)</title><rect x="469.2" y="547.0" width="2.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="472.2" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.25%)</title><rect x="469.2" y="531.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="472.2" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (43 samples, 0.25%)</title><rect x="469.2" y="515.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="472.2" y="526.0"></text>
</g>
<g>
<title>__x64_sys_sendto (43 samples, 0.25%)</title><rect x="469.2" y="499.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="472.2" y="510.0"></text>
</g>
<g>
<title>__sys_sendto (43 samples, 0.25%)</title><rect x="469.2" y="483.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="472.2" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (43 samples, 0.25%)</title><rect x="469.2" y="467.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="472.2" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (43 samples, 0.25%)</title><rect x="469.2" y="451.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="472.2" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (43 samples, 0.25%)</title><rect x="469.2" y="435.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="472.2" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (43 samples, 0.25%)</title><rect x="469.2" y="419.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="472.2" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (43 samples, 0.25%)</title><rect x="469.2" y="403.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="472.2" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (41 samples, 0.23%)</title><rect x="469.2" y="387.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="472.2" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (39 samples, 0.22%)</title><rect x="469.2" y="371.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="472.2" y="382.0"></text>
</g>
<g>
<title>ip_local_out (10 samples, 0.06%)</title><rect x="469.3" y="355.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="472.3" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (10 samples, 0.06%)</title><rect x="469.3" y="339.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="472.3" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.06%)</title><rect x="469.3" y="323.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="472.3" y="334.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (6 samples, 0.03%)</title><rect x="469.5" y="307.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="472.5" y="318.0"></text>
</g>
<g>
<title>ip_output (28 samples, 0.16%)</title><rect x="470.0" y="355.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="473.0" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (26 samples, 0.15%)</title><rect x="470.0" y="339.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="473.0" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (25 samples, 0.14%)</title><rect x="470.0" y="323.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="473.0" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (25 samples, 0.14%)</title><rect x="470.0" y="307.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="473.0" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (25 samples, 0.14%)</title><rect x="470.0" y="291.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="473.0" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (25 samples, 0.14%)</title><rect x="470.0" y="275.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="473.0" y="286.0"></text>
</g>
<g>
<title>net_rx_action (25 samples, 0.14%)</title><rect x="470.0" y="259.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="473.0" y="270.0"></text>
</g>
<g>
<title>process_backlog (25 samples, 0.14%)</title><rect x="470.0" y="243.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="473.0" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (24 samples, 0.14%)</title><rect x="470.1" y="227.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="473.1" y="238.0"></text>
</g>
<g>
<title>ip_rcv (23 samples, 0.13%)</title><rect x="470.2" y="211.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="473.2" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (15 samples, 0.09%)</title><rect x="470.2" y="195.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="473.2" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (13 samples, 0.07%)</title><rect x="470.2" y="179.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="473.2" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (13 samples, 0.07%)</title><rect x="470.2" y="163.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="473.2" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (13 samples, 0.07%)</title><rect x="470.2" y="147.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="473.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (12 samples, 0.07%)</title><rect x="470.2" y="131.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="473.2" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (12 samples, 0.07%)</title><rect x="470.2" y="115.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="473.2" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (7 samples, 0.04%)</title><rect x="470.4" y="99.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="473.4" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (6 samples, 0.03%)</title><rect x="470.5" y="83.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="473.5" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.03%)</title><rect x="470.6" y="67.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="473.6" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.03%)</title><rect x="470.6" y="51.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="473.6" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.05%)</title><rect x="471.2" y="195.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="474.2" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.03%)</title><rect x="471.3" y="179.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="474.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (668 samples, 3.81%)</title><rect x="472.4" y="643.0" width="44.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="475.4" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (668 samples, 3.81%)</title><rect x="472.4" y="627.0" width="44.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.4" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (668 samples, 3.81%)</title><rect x="472.4" y="611.0" width="44.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="475.4" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (664 samples, 3.79%)</title><rect x="472.7" y="595.0" width="44.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="475.7" y="606.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (31 samples, 0.18%)</title><rect x="472.7" y="579.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (31 samples, 0.18%)</title><rect x="472.7" y="563.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (31 samples, 0.18%)</title><rect x="472.7" y="547.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="475.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (31 samples, 0.18%)</title><rect x="472.7" y="531.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (31 samples, 0.18%)</title><rect x="472.7" y="515.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="475.7" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (29 samples, 0.17%)</title><rect x="472.7" y="499.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="475.7" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (21 samples, 0.12%)</title><rect x="472.7" y="483.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="475.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (21 samples, 0.12%)</title><rect x="472.7" y="467.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.7" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (20 samples, 0.11%)</title><rect x="472.7" y="451.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="475.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 0.11%)</title><rect x="472.8" y="435.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="475.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.10%)</title><rect x="472.9" y="419.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (15 samples, 0.09%)</title><rect x="473.1" y="403.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="476.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (14 samples, 0.08%)</title><rect x="473.1" y="387.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.1" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (13 samples, 0.07%)</title><rect x="473.2" y="371.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="476.2" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (13 samples, 0.07%)</title><rect x="473.2" y="355.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="476.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (11 samples, 0.06%)</title><rect x="473.3" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (11 samples, 0.06%)</title><rect x="473.3" y="323.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.3" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (11 samples, 0.06%)</title><rect x="473.3" y="307.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="476.3" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (11 samples, 0.06%)</title><rect x="473.3" y="291.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="476.3" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="473.3" y="275.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="476.3" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="473.3" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.3" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.03%)</title><rect x="473.3" y="243.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (6 samples, 0.03%)</title><rect x="473.7" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="476.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (6 samples, 0.03%)</title><rect x="473.7" y="259.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="476.7" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="473.7" y="243.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="476.7" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.03%)</title><rect x="473.7" y="227.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="476.7" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8 samples, 0.05%)</title><rect x="474.1" y="483.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="477.1" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.05%)</title><rect x="474.1" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.1" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.05%)</title><rect x="474.1" y="451.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="477.1" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.05%)</title><rect x="474.1" y="435.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="474.1" y="419.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="477.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="474.1" y="403.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (5 samples, 0.03%)</title><rect x="474.3" y="387.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (5 samples, 0.03%)</title><rect x="474.3" y="371.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.3" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (5 samples, 0.03%)</title><rect x="474.3" y="355.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.03%)</title><rect x="474.3" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (631 samples, 3.60%)</title><rect x="474.9" y="579.0" width="42.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.9" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (631 samples, 3.60%)</title><rect x="474.9" y="563.0" width="42.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="477.9" y="574.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (554 samples, 3.16%)</title><rect x="474.9" y="547.0" width="37.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="477.9" y="558.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (35 samples, 0.20%)</title><rect x="475.0" y="531.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (35 samples, 0.20%)</title><rect x="475.0" y="515.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (31 samples, 0.18%)</title><rect x="475.2" y="499.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="478.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (31 samples, 0.18%)</title><rect x="475.2" y="483.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.2" y="494.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.03%)</title><rect x="475.4" y="467.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="478.4" y="478.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (5 samples, 0.03%)</title><rect x="475.8" y="467.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="478.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.03%)</title><rect x="476.1" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (13 samples, 0.07%)</title><rect x="476.4" y="467.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="479.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (9 samples, 0.05%)</title><rect x="476.7" y="451.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.7" y="462.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (5 samples, 0.03%)</title><rect x="477.0" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (29 samples, 0.17%)</title><rect x="477.4" y="531.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (9 samples, 0.05%)</title><rect x="477.5" y="515.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (6 samples, 0.03%)</title><rect x="477.5" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.03%)</title><rect x="477.6" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (5 samples, 0.03%)</title><rect x="477.6" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.03%)</title><rect x="477.6" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="480.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (5 samples, 0.03%)</title><rect x="477.6" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (5 samples, 0.03%)</title><rect x="477.6" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (5 samples, 0.03%)</title><rect x="477.6" y="403.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (19 samples, 0.11%)</title><rect x="478.1" y="515.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.1" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (17 samples, 0.10%)</title><rect x="478.1" y="499.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.1" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (16 samples, 0.09%)</title><rect x="478.2" y="483.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="481.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (5 samples, 0.03%)</title><rect x="478.2" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (4 samples, 0.02%)</title><rect x="478.6" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="481.6" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.02%)</title><rect x="479.0" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.0" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.02%)</title><rect x="479.0" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="482.0" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (4 samples, 0.02%)</title><rect x="479.0" y="435.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (487 samples, 2.78%)</title><rect x="479.4" y="531.0" width="32.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="482.4" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (487 samples, 2.78%)</title><rect x="479.4" y="515.0" width="32.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="482.4" y="526.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (487 samples, 2.78%)</title><rect x="479.4" y="499.0" width="32.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.4" y="510.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="479.4" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.4" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="479.4" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (84 samples, 0.48%)</title><rect x="479.7" y="483.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="482.7" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (4 samples, 0.02%)</title><rect x="479.7" y="467.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="482.7" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (36 samples, 0.21%)</title><rect x="479.9" y="467.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="482.9" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (36 samples, 0.21%)</title><rect x="479.9" y="451.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="482.9" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (27 samples, 0.15%)</title><rect x="480.5" y="435.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="483.5" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="480.5" y="419.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="483.5" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="480.5" y="403.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="483.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (26 samples, 0.15%)</title><rect x="480.5" y="387.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="483.5" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (26 samples, 0.15%)</title><rect x="480.5" y="371.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="483.5" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="480.6" y="355.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="483.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="480.6" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="483.6" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="480.7" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="483.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="480.7" y="307.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="483.7" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="480.7" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="483.7" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (19 samples, 0.11%)</title><rect x="481.0" y="339.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.0" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.03%)</title><rect x="481.9" y="323.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="484.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="482.0" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="485.0" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="482.0" y="291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="485.0" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (44 samples, 0.25%)</title><rect x="482.3" y="467.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (44 samples, 0.25%)</title><rect x="482.3" y="451.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="485.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (43 samples, 0.25%)</title><rect x="482.4" y="435.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.4" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (42 samples, 0.24%)</title><rect x="482.5" y="419.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (42 samples, 0.24%)</title><rect x="482.5" y="403.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="485.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (41 samples, 0.23%)</title><rect x="482.6" y="387.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="485.6" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (37 samples, 0.21%)</title><rect x="482.8" y="371.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.8" y="382.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.02%)</title><rect x="483.2" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="486.2" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="483.5" y="355.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.5" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="483.5" y="339.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="483.6" y="323.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.6" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.04%)</title><rect x="483.6" y="307.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="486.6" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (18 samples, 0.10%)</title><rect x="484.1" y="355.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="487.1" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (18 samples, 0.10%)</title><rect x="484.1" y="339.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="484.8" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (399 samples, 2.27%)</title><rect x="485.3" y="483.0" width="26.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.3" y="494.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (256 samples, 1.46%)</title><rect x="490.8" y="467.0" width="17.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.8" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (255 samples, 1.45%)</title><rect x="490.9" y="451.0" width="17.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.9" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (241 samples, 1.37%)</title><rect x="491.8" y="435.0" width="16.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.8" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (240 samples, 1.37%)</title><rect x="491.9" y="419.0" width="16.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.9" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.03%)</title><rect x="503.3" y="403.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="506.3" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (57 samples, 0.32%)</title><rect x="503.7" y="403.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (57 samples, 0.32%)</title><rect x="503.7" y="387.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="506.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (56 samples, 0.32%)</title><rect x="503.8" y="371.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="506.8" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (55 samples, 0.31%)</title><rect x="503.9" y="355.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="506.9" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.06%)</title><rect x="505.9" y="339.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.9" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="506.1" y="323.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="509.1" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="506.1" y="307.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="509.1" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.04%)</title><rect x="506.1" y="291.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="509.1" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (15 samples, 0.09%)</title><rect x="506.6" y="339.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="509.6" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="507.6" y="403.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="510.6" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (43 samples, 0.25%)</title><rect x="508.0" y="467.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (42 samples, 0.24%)</title><rect x="508.1" y="451.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="511.1" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (42 samples, 0.24%)</title><rect x="508.1" y="435.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="511.1" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (36 samples, 0.21%)</title><rect x="508.5" y="419.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="511.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (36 samples, 0.21%)</title><rect x="508.5" y="403.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="511.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (36 samples, 0.21%)</title><rect x="508.5" y="387.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="511.5" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (26 samples, 0.15%)</title><rect x="508.7" y="371.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="511.7" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (11 samples, 0.06%)</title><rect x="508.7" y="355.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="508.9" y="339.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="511.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="509.0" y="323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.0" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.03%)</title><rect x="509.1" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="512.1" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.08%)</title><rect x="509.5" y="355.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="512.5" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.08%)</title><rect x="509.5" y="339.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="512.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.05%)</title><rect x="510.4" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.4" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (17 samples, 0.10%)</title><rect x="510.9" y="467.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="513.9" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (7 samples, 0.04%)</title><rect x="511.5" y="451.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="514.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (77 samples, 0.44%)</title><rect x="512.1" y="547.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.1" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (68 samples, 0.39%)</title><rect x="512.1" y="531.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.1" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (68 samples, 0.39%)</title><rect x="512.1" y="515.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.1" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (4 samples, 0.02%)</title><rect x="512.6" y="499.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.6" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (56 samples, 0.32%)</title><rect x="512.8" y="499.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.8" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (56 samples, 0.32%)</title><rect x="512.8" y="483.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.8" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (55 samples, 0.31%)</title><rect x="512.9" y="467.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="515.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (54 samples, 0.31%)</title><rect x="513.0" y="451.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="516.0" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (53 samples, 0.30%)</title><rect x="513.0" y="435.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.0" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (53 samples, 0.30%)</title><rect x="513.0" y="419.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="516.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (24 samples, 0.14%)</title><rect x="513.0" y="403.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="516.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (22 samples, 0.13%)</title><rect x="513.2" y="387.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (22 samples, 0.13%)</title><rect x="513.2" y="371.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="516.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (21 samples, 0.12%)</title><rect x="513.2" y="355.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="516.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (10 samples, 0.06%)</title><rect x="513.2" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.2" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (9 samples, 0.05%)</title><rect x="513.2" y="323.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.2" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (9 samples, 0.05%)</title><rect x="513.2" y="307.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.05%)</title><rect x="513.2" y="291.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.2" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (9 samples, 0.05%)</title><rect x="513.2" y="275.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="516.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (5 samples, 0.03%)</title><rect x="513.9" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="516.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (5 samples, 0.03%)</title><rect x="514.3" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="517.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (29 samples, 0.17%)</title><rect x="514.6" y="403.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (29 samples, 0.17%)</title><rect x="514.6" y="387.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="517.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (29 samples, 0.17%)</title><rect x="514.6" y="371.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="517.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (29 samples, 0.17%)</title><rect x="514.6" y="355.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (8 samples, 0.05%)</title><rect x="514.6" y="339.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (8 samples, 0.05%)</title><rect x="514.6" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="517.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (8 samples, 0.05%)</title><rect x="514.6" y="307.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="517.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (8 samples, 0.05%)</title><rect x="514.6" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="517.6" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="514.7" y="275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="517.7" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="514.7" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.7" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="514.7" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.7" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (21 samples, 0.12%)</title><rect x="515.2" y="339.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (21 samples, 0.12%)</title><rect x="515.2" y="323.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.2" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (21 samples, 0.12%)</title><rect x="515.2" y="307.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="518.2" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (21 samples, 0.12%)</title><rect x="515.2" y="291.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="518.2" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="515.2" y="275.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.2" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="515.2" y="259.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (14 samples, 0.08%)</title><rect x="515.6" y="275.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="518.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (14 samples, 0.08%)</title><rect x="515.6" y="259.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.6" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14 samples, 0.08%)</title><rect x="515.6" y="243.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.6" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14 samples, 0.08%)</title><rect x="515.6" y="227.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="518.6" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.03%)</title><rect x="516.2" y="211.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.2" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="516.2" y="195.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.2" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="516.2" y="179.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="519.2" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="516.2" y="163.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="519.2" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="516.2" y="147.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.05%)</title><rect x="516.7" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="519.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.05%)</title><rect x="516.7" y="515.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="519.7" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.05%)</title><rect x="516.7" y="499.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="519.7" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (7 samples, 0.04%)</title><rect x="516.7" y="483.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (7 samples, 0.04%)</title><rect x="516.7" y="467.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.7" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (7 samples, 0.04%)</title><rect x="516.7" y="451.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="516.8" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="516.8" y="419.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (6 samples, 0.03%)</title><rect x="516.8" y="403.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="519.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (6 samples, 0.03%)</title><rect x="516.8" y="387.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.8" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (6 samples, 0.03%)</title><rect x="516.8" y="371.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="519.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (6 samples, 0.03%)</title><rect x="516.8" y="355.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="519.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (4 samples, 0.02%)</title><rect x="516.9" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="516.9" y="323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="519.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (4 samples, 0.02%)</title><rect x="516.9" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.9" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="516.9" y="291.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.sendResponse (182 samples, 1.04%)</title><rect x="517.3" y="643.0" width="12.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="520.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (182 samples, 1.04%)</title><rect x="517.3" y="627.0" width="12.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (179 samples, 1.02%)</title><rect x="517.5" y="611.0" width="12.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="520.5" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (178 samples, 1.01%)</title><rect x="517.5" y="595.0" width="12.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="520.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (178 samples, 1.01%)</title><rect x="517.5" y="579.0" width="12.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.5" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (172 samples, 0.98%)</title><rect x="517.7" y="563.0" width="11.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (172 samples, 0.98%)</title><rect x="517.7" y="547.0" width="11.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.7" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (168 samples, 0.96%)</title><rect x="517.7" y="531.0" width="11.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="520.7" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (160 samples, 0.91%)</title><rect x="518.3" y="515.0" width="10.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="521.3" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (160 samples, 0.91%)</title><rect x="518.3" y="499.0" width="10.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="521.3" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (159 samples, 0.91%)</title><rect x="518.3" y="483.0" width="10.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="521.3" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (158 samples, 0.90%)</title><rect x="518.4" y="467.0" width="10.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="521.4" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (154 samples, 0.88%)</title><rect x="518.5" y="451.0" width="10.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="521.5" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (154 samples, 0.88%)</title><rect x="518.5" y="435.0" width="10.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="521.5" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (153 samples, 0.87%)</title><rect x="518.6" y="419.0" width="10.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="521.6" y="430.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.02%)</title><rect x="518.6" y="403.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="521.6" y="414.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (136 samples, 0.78%)</title><rect x="518.9" y="403.0" width="9.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="521.9" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (136 samples, 0.78%)</title><rect x="518.9" y="387.0" width="9.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="521.9" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (134 samples, 0.76%)</title><rect x="518.9" y="371.0" width="9.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="521.9" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (128 samples, 0.73%)</title><rect x="518.9" y="355.0" width="8.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="521.9" y="366.0"></text>
</g>
<g>
<title>ip_local_out (27 samples, 0.15%)</title><rect x="518.9" y="339.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="521.9" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (27 samples, 0.15%)</title><rect x="518.9" y="323.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="521.9" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (24 samples, 0.14%)</title><rect x="519.1" y="307.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="522.1" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (9 samples, 0.05%)</title><rect x="519.1" y="291.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="522.1" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (9 samples, 0.05%)</title><rect x="519.9" y="291.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="522.9" y="302.0"></text>
</g>
<g>
<title>ip_output (101 samples, 0.58%)</title><rect x="520.8" y="339.0" width="6.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="523.8" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (95 samples, 0.54%)</title><rect x="520.9" y="323.0" width="6.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="523.9" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 0.06%)</title><rect x="521.0" y="307.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="524.0" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.03%)</title><rect x="521.2" y="291.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="524.2" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.03%)</title><rect x="521.2" y="275.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="524.2" y="286.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.03%)</title><rect x="521.2" y="259.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="524.2" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.02%)</title><rect x="521.3" y="243.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="524.3" y="254.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (84 samples, 0.48%)</title><rect x="521.6" y="307.0" width="5.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="524.6" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (83 samples, 0.47%)</title><rect x="521.7" y="291.0" width="5.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="524.7" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (83 samples, 0.47%)</title><rect x="521.7" y="275.0" width="5.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="524.7" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (83 samples, 0.47%)</title><rect x="521.7" y="259.0" width="5.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="524.7" y="270.0"></text>
</g>
<g>
<title>net_rx_action (81 samples, 0.46%)</title><rect x="521.8" y="243.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="524.8" y="254.0"></text>
</g>
<g>
<title>process_backlog (80 samples, 0.46%)</title><rect x="521.9" y="227.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="524.9" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (78 samples, 0.44%)</title><rect x="522.0" y="211.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="525.0" y="222.0"></text>
</g>
<g>
<title>ip_rcv (77 samples, 0.44%)</title><rect x="522.1" y="195.0" width="5.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="525.1" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (60 samples, 0.34%)</title><rect x="522.1" y="179.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="525.1" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (50 samples, 0.29%)</title><rect x="522.1" y="163.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="525.1" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (50 samples, 0.29%)</title><rect x="522.1" y="147.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="525.1" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (50 samples, 0.29%)</title><rect x="522.1" y="131.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="525.1" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (46 samples, 0.26%)</title><rect x="522.4" y="115.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="525.4" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (46 samples, 0.26%)</title><rect x="522.4" y="99.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="525.4" y="110.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.07%)</title><rect x="522.5" y="83.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="525.5" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (30 samples, 0.17%)</title><rect x="523.3" y="83.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="526.3" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (27 samples, 0.15%)</title><rect x="523.5" y="67.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="526.5" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (25 samples, 0.14%)</title><rect x="523.7" y="51.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="526.7" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (25 samples, 0.14%)</title><rect x="523.7" y="35.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="526.7" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.06%)</title><rect x="525.5" y="163.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="528.5" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.03%)</title><rect x="525.5" y="147.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="528.5" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.08%)</title><rect x="526.3" y="179.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="529.3" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.05%)</title><rect x="526.4" y="163.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="529.4" y="174.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.02%)</title><rect x="528.1" y="403.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="531.1" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.03%)</title><rect x="528.5" y="403.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="531.5" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.03%)</title><rect x="528.5" y="387.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="531.5" y="398.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.02%)</title><rect x="529.2" y="563.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="532.2" y="574.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.02%)</title><rect x="529.2" y="547.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="532.2" y="558.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.02%)</title><rect x="529.2" y="531.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="532.2" y="542.0"></text>
</g>
<g>
<title>[worker-1 tid=14276] (929 samples, 5.30%)</title><rect x="529.6" y="739.0" width="62.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="532.6" y="750.0">[worke..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.03%)</title><rect x="529.6" y="723.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="532.6" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.03%)</title><rect x="529.6" y="707.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="532.6" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (6 samples, 0.03%)</title><rect x="529.6" y="691.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="532.6" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.03%)</title><rect x="529.6" y="675.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="532.6" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.02%)</title><rect x="529.6" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="532.6" y="670.0"></text>
</g>
<g>
<title>[unknown_Java] (34 samples, 0.19%)</title><rect x="530.1" y="723.0" width="2.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="533.1" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.03%)</title><rect x="532.1" y="707.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="535.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="532.1" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="535.1" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="532.1" y="675.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="535.1" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.run (887 samples, 5.06%)</title><rect x="532.4" y="723.0" width="59.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="535.4" y="734.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (887 samples, 5.06%)</title><rect x="532.4" y="707.0" width="59.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="535.4" y="718.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (887 samples, 5.06%)</title><rect x="532.4" y="691.0" width="59.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="535.4" y="702.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (50 samples, 0.29%)</title><rect x="532.5" y="675.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (50 samples, 0.29%)</title><rect x="532.5" y="659.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="535.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (35 samples, 0.20%)</title><rect x="532.7" y="643.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="535.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (31 samples, 0.18%)</title><rect x="532.9" y="627.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="535.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (31 samples, 0.18%)</title><rect x="532.9" y="611.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="535.9" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (16 samples, 0.09%)</title><rect x="533.0" y="595.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="536.0" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (11 samples, 0.06%)</title><rect x="533.2" y="579.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="536.2" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.05%)</title><rect x="533.4" y="563.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="536.4" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.05%)</title><rect x="533.4" y="547.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="536.4" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="533.7" y="531.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="536.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.08%)</title><rect x="534.1" y="595.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="537.1" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (9 samples, 0.05%)</title><rect x="534.1" y="579.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="537.1" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.05%)</title><rect x="534.2" y="563.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="537.2" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.05%)</title><rect x="534.2" y="547.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="537.2" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="534.3" y="531.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="537.3" y="542.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="534.3" y="515.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="537.3" y="526.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.03%)</title><rect x="534.3" y="499.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="537.3" y="510.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.03%)</title><rect x="534.4" y="483.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="537.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (5 samples, 0.03%)</title><rect x="535.1" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="538.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (5 samples, 0.03%)</title><rect x="535.1" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.1" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (4 samples, 0.02%)</title><rect x="535.1" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.03%)</title><rect x="535.4" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="538.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.03%)</title><rect x="535.4" y="627.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="538.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.03%)</title><rect x="535.4" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="538.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.03%)</title><rect x="535.4" y="595.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="538.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.03%)</title><rect x="535.4" y="579.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="538.4" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.03%)</title><rect x="535.5" y="563.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="538.5" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="535.6" y="547.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="538.6" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="535.6" y="531.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="538.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (836 samples, 4.77%)</title><rect x="535.8" y="675.0" width="56.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="538.8" y="686.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (836 samples, 4.77%)</title><rect x="535.8" y="659.0" width="56.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="538.8" y="670.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (129 samples, 0.74%)</title><rect x="535.9" y="643.0" width="8.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (127 samples, 0.72%)</title><rect x="536.0" y="627.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="539.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (127 samples, 0.72%)</title><rect x="536.0" y="611.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="539.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.03%)</title><rect x="536.0" y="595.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="539.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.02%)</title><rect x="536.1" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="539.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (122 samples, 0.70%)</title><rect x="536.4" y="595.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="539.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (122 samples, 0.70%)</title><rect x="536.4" y="579.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="539.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (23 samples, 0.13%)</title><rect x="536.4" y="563.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.4" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (23 samples, 0.13%)</title><rect x="536.4" y="547.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="539.4" y="558.0"></text>
</g>
<g>
<title>__libc_recv (18 samples, 0.10%)</title><rect x="536.6" y="531.0" width="1.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="539.6" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.09%)</title><rect x="536.8" y="515.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="539.8" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.09%)</title><rect x="536.8" y="499.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="539.8" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (15 samples, 0.09%)</title><rect x="536.8" y="483.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="539.8" y="494.0"></text>
</g>
<g>
<title>__sys_recvfrom (15 samples, 0.09%)</title><rect x="536.8" y="467.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="539.8" y="478.0"></text>
</g>
<g>
<title>inet_recvmsg (11 samples, 0.06%)</title><rect x="537.0" y="451.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="540.0" y="462.0"></text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 0.06%)</title><rect x="537.0" y="435.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="540.0" y="446.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.02%)</title><rect x="537.4" y="419.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="540.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (4 samples, 0.02%)</title><rect x="537.9" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="540.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (11 samples, 0.06%)</title><rect x="538.2" y="563.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.2" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (9 samples, 0.05%)</title><rect x="538.3" y="547.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.3" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (16 samples, 0.09%)</title><rect x="538.9" y="563.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="541.9" y="574.0"></text>
</g>
<g>
<title>setsockopt (16 samples, 0.09%)</title><rect x="538.9" y="547.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="541.9" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="539.6" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="542.6" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="539.6" y="515.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="542.6" y="526.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (6 samples, 0.03%)</title><rect x="539.6" y="499.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="542.6" y="510.0"></text>
</g>
<g>
<title>__sys_setsockopt (5 samples, 0.03%)</title><rect x="539.7" y="483.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="542.7" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (65 samples, 0.37%)</title><rect x="540.0" y="563.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="543.0" y="574.0"></text>
</g>
<g>
<title>.annobin_send.c (62 samples, 0.35%)</title><rect x="540.0" y="547.0" width="4.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="543.0" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (60 samples, 0.34%)</title><rect x="540.1" y="531.0" width="4.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="543.1" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (60 samples, 0.34%)</title><rect x="540.1" y="515.0" width="4.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="543.1" y="526.0"></text>
</g>
<g>
<title>__x64_sys_sendto (60 samples, 0.34%)</title><rect x="540.1" y="499.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="543.1" y="510.0"></text>
</g>
<g>
<title>__sys_sendto (60 samples, 0.34%)</title><rect x="540.1" y="483.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="543.1" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (58 samples, 0.33%)</title><rect x="540.3" y="467.0" width="3.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="543.3" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (57 samples, 0.32%)</title><rect x="540.3" y="451.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="543.3" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (57 samples, 0.32%)</title><rect x="540.3" y="435.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="543.3" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (51 samples, 0.29%)</title><rect x="540.3" y="419.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="543.3" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (51 samples, 0.29%)</title><rect x="540.3" y="403.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="543.3" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (49 samples, 0.28%)</title><rect x="540.3" y="387.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="543.3" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (46 samples, 0.26%)</title><rect x="540.4" y="371.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="543.4" y="382.0"></text>
</g>
<g>
<title>ip_local_out (9 samples, 0.05%)</title><rect x="540.5" y="355.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="543.5" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (9 samples, 0.05%)</title><rect x="540.5" y="339.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="543.5" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.05%)</title><rect x="540.5" y="323.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="543.5" y="334.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (4 samples, 0.02%)</title><rect x="540.8" y="307.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="543.8" y="318.0"></text>
</g>
<g>
<title>ip_output (36 samples, 0.21%)</title><rect x="541.1" y="355.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="544.1" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (35 samples, 0.20%)</title><rect x="541.1" y="339.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="544.1" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (32 samples, 0.18%)</title><rect x="541.3" y="323.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="544.3" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (32 samples, 0.18%)</title><rect x="541.3" y="307.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="544.3" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (32 samples, 0.18%)</title><rect x="541.3" y="291.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="544.3" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (32 samples, 0.18%)</title><rect x="541.3" y="275.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="544.3" y="286.0"></text>
</g>
<g>
<title>net_rx_action (32 samples, 0.18%)</title><rect x="541.3" y="259.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="544.3" y="270.0"></text>
</g>
<g>
<title>process_backlog (31 samples, 0.18%)</title><rect x="541.3" y="243.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="544.3" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (31 samples, 0.18%)</title><rect x="541.3" y="227.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="544.3" y="238.0"></text>
</g>
<g>
<title>ip_rcv (31 samples, 0.18%)</title><rect x="541.3" y="211.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="544.3" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (23 samples, 0.13%)</title><rect x="541.4" y="195.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="544.4" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (19 samples, 0.11%)</title><rect x="541.4" y="179.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="544.4" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (19 samples, 0.11%)</title><rect x="541.4" y="163.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="544.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (19 samples, 0.11%)</title><rect x="541.4" y="147.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="544.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (18 samples, 0.10%)</title><rect x="541.5" y="131.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="544.5" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (18 samples, 0.10%)</title><rect x="541.5" y="115.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="544.5" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (14 samples, 0.08%)</title><rect x="541.7" y="99.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="544.7" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (10 samples, 0.06%)</title><rect x="541.9" y="83.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="544.9" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.06%)</title><rect x="541.9" y="67.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="544.9" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.06%)</title><rect x="541.9" y="51.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="544.9" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="542.7" y="179.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="545.7" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.03%)</title><rect x="543.0" y="195.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="546.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (516 samples, 2.94%)</title><rect x="544.6" y="643.0" width="34.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="547.6" y="654.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (516 samples, 2.94%)</title><rect x="544.6" y="627.0" width="34.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.6" y="638.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (516 samples, 2.94%)</title><rect x="544.6" y="611.0" width="34.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.6" y="622.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (516 samples, 2.94%)</title><rect x="544.6" y="595.0" width="34.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="547.6" y="606.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (29 samples, 0.17%)</title><rect x="544.6" y="579.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (29 samples, 0.17%)</title><rect x="544.6" y="563.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.6" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (29 samples, 0.17%)</title><rect x="544.6" y="547.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.6" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (29 samples, 0.17%)</title><rect x="544.6" y="531.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="547.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (29 samples, 0.17%)</title><rect x="544.6" y="515.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.6" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (26 samples, 0.15%)</title><rect x="544.7" y="499.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="547.7" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (17 samples, 0.10%)</title><rect x="544.7" y="483.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="547.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (17 samples, 0.10%)</title><rect x="544.7" y="467.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.7" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (17 samples, 0.10%)</title><rect x="544.7" y="451.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.09%)</title><rect x="544.8" y="435.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="547.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.09%)</title><rect x="544.8" y="419.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (12 samples, 0.07%)</title><rect x="545.0" y="403.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="548.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (11 samples, 0.06%)</title><rect x="545.1" y="387.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.1" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (11 samples, 0.06%)</title><rect x="545.1" y="371.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="548.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (11 samples, 0.06%)</title><rect x="545.1" y="355.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (9 samples, 0.05%)</title><rect x="545.2" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (9 samples, 0.05%)</title><rect x="545.2" y="323.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="548.2" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (9 samples, 0.05%)</title><rect x="545.2" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="548.2" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (9 samples, 0.05%)</title><rect x="545.2" y="291.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="548.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (7 samples, 0.04%)</title><rect x="545.4" y="275.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (7 samples, 0.04%)</title><rect x="545.4" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="548.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="545.4" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="548.4" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.03%)</title><rect x="545.4" y="227.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (9 samples, 0.05%)</title><rect x="545.8" y="483.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.8" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (9 samples, 0.05%)</title><rect x="545.8" y="467.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.8" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7 samples, 0.04%)</title><rect x="546.0" y="451.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="549.0" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7 samples, 0.04%)</title><rect x="546.0" y="435.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="549.0" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.04%)</title><rect x="546.0" y="419.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="549.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.04%)</title><rect x="546.0" y="403.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="549.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.03%)</title><rect x="546.0" y="387.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="549.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (6 samples, 0.03%)</title><rect x="546.0" y="371.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (6 samples, 0.03%)</title><rect x="546.0" y="355.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="549.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (6 samples, 0.03%)</title><rect x="546.0" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="549.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (4 samples, 0.02%)</title><rect x="546.0" y="323.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="549.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (484 samples, 2.76%)</title><rect x="546.7" y="579.0" width="32.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="549.7" y="590.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (484 samples, 2.76%)</title><rect x="546.7" y="563.0" width="32.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="549.7" y="574.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (426 samples, 2.43%)</title><rect x="546.7" y="547.0" width="28.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.7" y="558.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (20 samples, 0.11%)</title><rect x="546.7" y="531.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="549.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (20 samples, 0.11%)</title><rect x="546.7" y="515.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="549.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (15 samples, 0.09%)</title><rect x="547.0" y="499.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="550.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (14 samples, 0.08%)</title><rect x="547.1" y="483.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="550.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (6 samples, 0.03%)</title><rect x="547.6" y="467.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (21 samples, 0.12%)</title><rect x="548.1" y="531.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="551.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (14 samples, 0.08%)</title><rect x="548.3" y="515.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="551.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (12 samples, 0.07%)</title><rect x="548.3" y="499.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="551.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (11 samples, 0.06%)</title><rect x="548.3" y="483.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (11 samples, 0.06%)</title><rect x="548.3" y="467.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="551.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (11 samples, 0.06%)</title><rect x="548.3" y="451.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="551.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (11 samples, 0.06%)</title><rect x="548.3" y="435.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="551.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (11 samples, 0.06%)</title><rect x="548.3" y="419.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="551.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (9 samples, 0.05%)</title><rect x="548.5" y="403.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="551.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.02%)</title><rect x="548.8" y="387.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="551.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="548.8" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="551.8" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="548.8" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="551.8" y="366.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="548.8" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="551.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (5 samples, 0.03%)</title><rect x="549.2" y="515.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="552.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5 samples, 0.03%)</title><rect x="549.2" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (5 samples, 0.03%)</title><rect x="549.2" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="552.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (383 samples, 2.18%)</title><rect x="549.5" y="531.0" width="25.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.5" y="542.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (383 samples, 2.18%)</title><rect x="549.5" y="515.0" width="25.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.5" y="526.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (383 samples, 2.18%)</title><rect x="549.5" y="499.0" width="25.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="552.5" y="510.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="549.6" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="552.6" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="549.6" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (62 samples, 0.35%)</title><rect x="549.9" y="483.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.9" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (23 samples, 0.13%)</title><rect x="550.2" y="467.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="553.2" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (23 samples, 0.13%)</title><rect x="550.2" y="451.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="553.2" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (18 samples, 0.10%)</title><rect x="550.4" y="435.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.4" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (18 samples, 0.10%)</title><rect x="550.4" y="419.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="553.4" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (16 samples, 0.09%)</title><rect x="550.6" y="403.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="553.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (16 samples, 0.09%)</title><rect x="550.6" y="387.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="553.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (16 samples, 0.09%)</title><rect x="550.6" y="371.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="553.6" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (16 samples, 0.09%)</title><rect x="550.6" y="355.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="553.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="550.6" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="553.6" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="550.6" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="553.6" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.06%)</title><rect x="550.9" y="339.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="553.9" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (35 samples, 0.20%)</title><rect x="551.7" y="467.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.7" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (35 samples, 0.20%)</title><rect x="551.7" y="451.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="554.7" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (33 samples, 0.19%)</title><rect x="551.8" y="435.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.8" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (33 samples, 0.19%)</title><rect x="551.8" y="419.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (33 samples, 0.19%)</title><rect x="551.8" y="403.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="554.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (32 samples, 0.18%)</title><rect x="551.9" y="387.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.9" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (26 samples, 0.15%)</title><rect x="552.3" y="371.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.3" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (11 samples, 0.06%)</title><rect x="552.6" y="355.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="555.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.06%)</title><rect x="552.6" y="339.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.03%)</title><rect x="552.9" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.9" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.03%)</title><rect x="552.9" y="307.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="555.9" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.06%)</title><rect x="553.3" y="355.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="556.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.06%)</title><rect x="553.3" y="339.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="553.7" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.7" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.03%)</title><rect x="553.7" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (316 samples, 1.80%)</title><rect x="554.1" y="483.0" width="21.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.1" y="494.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (223 samples, 1.27%)</title><rect x="557.8" y="467.0" width="15.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="560.8" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (223 samples, 1.27%)</title><rect x="557.8" y="451.0" width="15.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="560.8" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (209 samples, 1.19%)</title><rect x="558.7" y="435.0" width="14.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="561.7" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (208 samples, 1.19%)</title><rect x="558.8" y="419.0" width="14.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="561.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="567.0" y="403.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.02%)</title><rect x="567.2" y="403.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.2" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (67 samples, 0.38%)</title><rect x="567.5" y="403.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="570.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (65 samples, 0.37%)</title><rect x="567.6" y="387.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (63 samples, 0.36%)</title><rect x="567.8" y="371.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.8" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (61 samples, 0.35%)</title><rect x="567.9" y="355.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.9" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="570.0" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.0" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="570.0" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="573.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="570.0" y="307.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.0" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.04%)</title><rect x="570.0" y="291.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.0" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (22 samples, 0.13%)</title><rect x="570.5" y="339.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="573.5" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="571.1" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.1" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.03%)</title><rect x="571.5" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="574.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="571.7" y="307.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.7" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="571.7" y="291.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="574.7" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (10 samples, 0.06%)</title><rect x="572.0" y="403.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.0" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (25 samples, 0.14%)</title><rect x="572.8" y="467.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="575.8" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (22 samples, 0.13%)</title><rect x="573.0" y="451.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="576.0" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (21 samples, 0.12%)</title><rect x="573.0" y="435.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="576.0" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (18 samples, 0.10%)</title><rect x="573.2" y="419.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="576.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (16 samples, 0.09%)</title><rect x="573.4" y="403.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="576.4" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (15 samples, 0.09%)</title><rect x="573.4" y="387.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.4" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="573.6" y="371.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.6" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="573.6" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="576.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="574.1" y="371.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="577.1" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (12 samples, 0.07%)</title><rect x="574.4" y="467.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="577.4" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (6 samples, 0.03%)</title><rect x="574.8" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="577.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (58 samples, 0.33%)</title><rect x="575.3" y="547.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="578.3" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (53 samples, 0.30%)</title><rect x="575.3" y="531.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.3" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (53 samples, 0.30%)</title><rect x="575.3" y="515.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="578.3" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (47 samples, 0.27%)</title><rect x="575.6" y="499.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="578.6" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (47 samples, 0.27%)</title><rect x="575.6" y="483.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="578.6" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (46 samples, 0.26%)</title><rect x="575.6" y="467.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.6" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (46 samples, 0.26%)</title><rect x="575.6" y="451.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.6" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (43 samples, 0.25%)</title><rect x="575.9" y="435.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (43 samples, 0.25%)</title><rect x="575.9" y="419.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="578.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (22 samples, 0.13%)</title><rect x="575.9" y="403.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="578.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (4 samples, 0.02%)</title><rect x="576.0" y="387.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="579.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (16 samples, 0.09%)</title><rect x="576.3" y="387.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="579.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (15 samples, 0.09%)</title><rect x="576.3" y="371.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="579.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (15 samples, 0.09%)</title><rect x="576.3" y="355.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="579.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (10 samples, 0.06%)</title><rect x="576.3" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="579.3" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (7 samples, 0.04%)</title><rect x="576.3" y="323.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="579.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (7 samples, 0.04%)</title><rect x="576.3" y="307.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="579.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.04%)</title><rect x="576.3" y="291.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="579.3" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="576.3" y="275.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="579.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (21 samples, 0.12%)</title><rect x="577.3" y="403.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="580.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (21 samples, 0.12%)</title><rect x="577.3" y="387.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="580.3" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (20 samples, 0.11%)</title><rect x="577.4" y="371.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="580.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (20 samples, 0.11%)</title><rect x="577.4" y="355.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="580.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (17 samples, 0.10%)</title><rect x="577.6" y="339.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="580.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (17 samples, 0.10%)</title><rect x="577.6" y="323.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="580.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (17 samples, 0.10%)</title><rect x="577.6" y="307.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.6" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (17 samples, 0.10%)</title><rect x="577.6" y="291.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.6" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.05%)</title><rect x="577.6" y="275.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.05%)</title><rect x="577.6" y="259.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="580.6" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.04%)</title><rect x="577.7" y="243.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="580.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (4 samples, 0.02%)</title><rect x="577.9" y="227.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="580.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (8 samples, 0.05%)</title><rect x="578.1" y="275.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="581.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (8 samples, 0.05%)</title><rect x="578.1" y="259.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="581.1" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (7 samples, 0.04%)</title><rect x="578.1" y="243.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="581.1" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (7 samples, 0.04%)</title><rect x="578.1" y="227.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="581.1" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.03%)</title><rect x="578.3" y="211.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="581.3" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="578.3" y="195.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="581.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.03%)</title><rect x="578.9" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="581.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.03%)</title><rect x="578.9" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="581.9" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.03%)</title><rect x="578.9" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.9" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (4 samples, 0.02%)</title><rect x="578.9" y="483.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="581.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (4 samples, 0.02%)</title><rect x="578.9" y="467.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (4 samples, 0.02%)</title><rect x="578.9" y="451.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="581.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.sendResponse (190 samples, 1.08%)</title><rect x="579.3" y="643.0" width="12.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="582.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (190 samples, 1.08%)</title><rect x="579.3" y="627.0" width="12.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="582.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (187 samples, 1.07%)</title><rect x="579.5" y="611.0" width="12.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.03%)</title><rect x="579.5" y="595.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="582.5" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.02%)</title><rect x="579.6" y="579.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="582.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (181 samples, 1.03%)</title><rect x="579.9" y="595.0" width="12.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="582.9" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (181 samples, 1.03%)</title><rect x="579.9" y="579.0" width="12.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="582.9" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (178 samples, 1.01%)</title><rect x="580.1" y="563.0" width="12.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="583.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (178 samples, 1.01%)</title><rect x="580.1" y="547.0" width="12.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="583.1" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (176 samples, 1.00%)</title><rect x="580.1" y="531.0" width="11.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="583.1" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (171 samples, 0.97%)</title><rect x="580.4" y="515.0" width="11.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="583.4" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (171 samples, 0.97%)</title><rect x="580.4" y="499.0" width="11.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="583.4" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (168 samples, 0.96%)</title><rect x="580.6" y="483.0" width="11.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="583.6" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (168 samples, 0.96%)</title><rect x="580.6" y="467.0" width="11.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="583.6" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (167 samples, 0.95%)</title><rect x="580.7" y="451.0" width="11.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="583.7" y="462.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.03%)</title><rect x="580.7" y="435.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="583.7" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (6 samples, 0.03%)</title><rect x="580.7" y="419.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="583.7" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (161 samples, 0.92%)</title><rect x="581.1" y="435.0" width="10.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="584.1" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (157 samples, 0.89%)</title><rect x="581.4" y="419.0" width="10.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="584.4" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (140 samples, 0.80%)</title><rect x="581.4" y="403.0" width="9.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="584.4" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (140 samples, 0.80%)</title><rect x="581.4" y="387.0" width="9.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="584.4" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (133 samples, 0.76%)</title><rect x="581.5" y="371.0" width="8.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="584.5" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (129 samples, 0.74%)</title><rect x="581.6" y="355.0" width="8.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="584.6" y="366.0"></text>
</g>
<g>
<title>ip_local_out (27 samples, 0.15%)</title><rect x="581.6" y="339.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="584.6" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (27 samples, 0.15%)</title><rect x="581.6" y="323.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="584.6" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (27 samples, 0.15%)</title><rect x="581.6" y="307.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="584.6" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (10 samples, 0.06%)</title><rect x="581.6" y="291.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="584.6" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (6 samples, 0.03%)</title><rect x="583.0" y="291.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="586.0" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (4 samples, 0.02%)</title><rect x="583.0" y="275.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="586.0" y="286.0"></text>
</g>
<g>
<title>ip_output (102 samples, 0.58%)</title><rect x="583.5" y="339.0" width="6.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="586.5" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (92 samples, 0.52%)</title><rect x="583.5" y="323.0" width="6.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="586.5" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (87 samples, 0.50%)</title><rect x="583.9" y="307.0" width="5.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="586.9" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (87 samples, 0.50%)</title><rect x="583.9" y="291.0" width="5.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="586.9" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (86 samples, 0.49%)</title><rect x="583.9" y="275.0" width="5.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="586.9" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (86 samples, 0.49%)</title><rect x="583.9" y="259.0" width="5.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="586.9" y="270.0"></text>
</g>
<g>
<title>net_rx_action (84 samples, 0.48%)</title><rect x="584.1" y="243.0" width="5.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="587.1" y="254.0"></text>
</g>
<g>
<title>process_backlog (83 samples, 0.47%)</title><rect x="584.1" y="227.0" width="5.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="587.1" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (81 samples, 0.46%)</title><rect x="584.3" y="211.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="587.3" y="222.0"></text>
</g>
<g>
<title>ip_rcv (79 samples, 0.45%)</title><rect x="584.4" y="195.0" width="5.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="587.4" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (69 samples, 0.39%)</title><rect x="584.5" y="179.0" width="4.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="587.5" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (55 samples, 0.31%)</title><rect x="584.5" y="163.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="587.5" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (55 samples, 0.31%)</title><rect x="584.5" y="147.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="587.5" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (55 samples, 0.31%)</title><rect x="584.5" y="131.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="587.5" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (50 samples, 0.29%)</title><rect x="584.9" y="115.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="587.9" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (50 samples, 0.29%)</title><rect x="584.9" y="99.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="587.9" y="110.0"></text>
</g>
<g>
<title>tcp_ack (13 samples, 0.07%)</title><rect x="585.1" y="83.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="588.1" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.02%)</title><rect x="585.4" y="67.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="588.4" y="78.0"></text>
</g>
<g>
<title>tcp_data_queue (32 samples, 0.18%)</title><rect x="585.9" y="83.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="588.9" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (31 samples, 0.18%)</title><rect x="586.0" y="67.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="589.0" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (30 samples, 0.17%)</title><rect x="586.1" y="51.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="589.1" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (30 samples, 0.17%)</title><rect x="586.1" y="35.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="589.1" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.07%)</title><rect x="588.2" y="163.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="591.2" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.04%)</title><rect x="588.3" y="147.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="591.3" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.05%)</title><rect x="589.2" y="179.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="592.2" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.04%)</title><rect x="589.2" y="163.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="592.2" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.05%)</title><rect x="589.8" y="323.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="592.8" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="589.8" y="307.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="592.8" y="318.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.02%)</title><rect x="590.6" y="371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="593.6" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.04%)</title><rect x="590.9" y="403.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="593.9" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.04%)</title><rect x="590.9" y="387.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="593.9" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.03%)</title><rect x="591.6" y="403.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="594.6" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.03%)</title><rect x="591.6" y="387.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="594.6" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.02%)</title><rect x="591.7" y="371.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="594.7" y="382.0"></text>
</g>
<g>
<title>[worker-2 tid=14267] (1,021 samples, 5.82%)</title><rect x="592.1" y="739.0" width="68.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="595.1" y="750.0">[worker..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.03%)</title><rect x="592.3" y="723.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="595.3" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.03%)</title><rect x="592.3" y="707.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="595.3" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (6 samples, 0.03%)</title><rect x="592.3" y="691.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="595.3" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.03%)</title><rect x="592.3" y="675.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="595.3" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.03%)</title><rect x="592.3" y="659.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="595.3" y="670.0"></text>
</g>
<g>
<title>[unknown_Java] (28 samples, 0.16%)</title><rect x="592.7" y="723.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="595.7" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.04%)</title><rect x="594.1" y="707.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="597.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="594.2" y="691.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="597.2" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="594.2" y="675.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="597.2" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="594.3" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="597.3" y="670.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="594.3" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="597.3" y="654.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="594.3" y="627.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="597.3" y="638.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="594.3" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="597.3" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="594.3" y="595.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="597.3" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.03%)</title><rect x="594.3" y="579.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="597.3" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.run (983 samples, 5.60%)</title><rect x="594.6" y="723.0" width="66.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.6" y="734.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (983 samples, 5.60%)</title><rect x="594.6" y="707.0" width="66.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.6" y="718.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (983 samples, 5.60%)</title><rect x="594.6" y="691.0" width="66.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.6" y="702.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (29 samples, 0.17%)</title><rect x="594.6" y="675.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="597.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (29 samples, 0.17%)</title><rect x="594.6" y="659.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (22 samples, 0.13%)</title><rect x="594.8" y="643.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (21 samples, 0.12%)</title><rect x="594.9" y="627.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="597.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (21 samples, 0.12%)</title><rect x="594.9" y="611.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.9" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (14 samples, 0.08%)</title><rect x="594.9" y="595.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="597.9" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.03%)</title><rect x="594.9" y="579.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="597.9" y="590.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.04%)</title><rect x="595.3" y="579.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="598.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.04%)</title><rect x="595.8" y="595.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="598.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (953 samples, 5.43%)</title><rect x="596.6" y="675.0" width="64.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.6" y="686.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (953 samples, 5.43%)</title><rect x="596.6" y="659.0" width="64.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.6" y="670.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (87 samples, 0.50%)</title><rect x="596.8" y="643.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="599.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (87 samples, 0.50%)</title><rect x="596.8" y="627.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (87 samples, 0.50%)</title><rect x="596.8" y="611.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (86 samples, 0.49%)</title><rect x="596.8" y="595.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="599.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (86 samples, 0.49%)</title><rect x="596.8" y="579.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="599.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (18 samples, 0.10%)</title><rect x="597.0" y="563.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.0" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (18 samples, 0.10%)</title><rect x="597.0" y="547.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="600.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="597.0" y="531.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="600.0" y="542.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="597.0" y="515.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="600.0" y="526.0"></text>
</g>
<g>
<title>__libc_recv (13 samples, 0.07%)</title><rect x="597.3" y="531.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="600.3" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="597.4" y="515.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="600.4" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="597.4" y="499.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="600.4" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (11 samples, 0.06%)</title><rect x="597.4" y="483.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="600.4" y="494.0"></text>
</g>
<g>
<title>__sys_recvfrom (11 samples, 0.06%)</title><rect x="597.4" y="467.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="600.4" y="478.0"></text>
</g>
<g>
<title>inet_recvmsg (11 samples, 0.06%)</title><rect x="597.4" y="451.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="600.4" y="462.0"></text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 0.06%)</title><rect x="597.4" y="435.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="600.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (6 samples, 0.03%)</title><rect x="598.2" y="563.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="601.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (4 samples, 0.02%)</title><rect x="598.2" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="601.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (4 samples, 0.02%)</title><rect x="598.6" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="601.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (14 samples, 0.08%)</title><rect x="598.9" y="563.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="601.9" y="574.0"></text>
</g>
<g>
<title>setsockopt (14 samples, 0.08%)</title><rect x="598.9" y="547.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="601.9" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.06%)</title><rect x="599.1" y="531.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="602.1" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.06%)</title><rect x="599.1" y="515.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="602.1" y="526.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (8 samples, 0.05%)</title><rect x="599.3" y="499.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="602.3" y="510.0"></text>
</g>
<g>
<title>__sys_setsockopt (7 samples, 0.04%)</title><rect x="599.3" y="483.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="602.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (40 samples, 0.23%)</title><rect x="599.8" y="563.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.8" y="574.0"></text>
</g>
<g>
<title>.annobin_send.c (37 samples, 0.21%)</title><rect x="599.9" y="547.0" width="2.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="602.9" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.21%)</title><rect x="599.9" y="531.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="602.9" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 0.21%)</title><rect x="599.9" y="515.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="602.9" y="526.0"></text>
</g>
<g>
<title>__x64_sys_sendto (37 samples, 0.21%)</title><rect x="599.9" y="499.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="602.9" y="510.0"></text>
</g>
<g>
<title>__sys_sendto (37 samples, 0.21%)</title><rect x="599.9" y="483.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="602.9" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (37 samples, 0.21%)</title><rect x="599.9" y="467.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="602.9" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (37 samples, 0.21%)</title><rect x="599.9" y="451.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="602.9" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (37 samples, 0.21%)</title><rect x="599.9" y="435.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="602.9" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (34 samples, 0.19%)</title><rect x="599.9" y="419.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="602.9" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (34 samples, 0.19%)</title><rect x="599.9" y="403.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="602.9" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (34 samples, 0.19%)</title><rect x="599.9" y="387.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="602.9" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (34 samples, 0.19%)</title><rect x="599.9" y="371.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="602.9" y="382.0"></text>
</g>
<g>
<title>ip_local_out (6 samples, 0.03%)</title><rect x="599.9" y="355.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="602.9" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (6 samples, 0.03%)</title><rect x="599.9" y="339.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="602.9" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.03%)</title><rect x="599.9" y="323.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="602.9" y="334.0"></text>
</g>
<g>
<title>ip_output (28 samples, 0.16%)</title><rect x="600.3" y="355.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="603.3" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (27 samples, 0.15%)</title><rect x="600.3" y="339.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="603.3" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (26 samples, 0.15%)</title><rect x="600.4" y="323.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="603.4" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (26 samples, 0.15%)</title><rect x="600.4" y="307.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="603.4" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (26 samples, 0.15%)</title><rect x="600.4" y="291.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="603.4" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (26 samples, 0.15%)</title><rect x="600.4" y="275.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="603.4" y="286.0"></text>
</g>
<g>
<title>net_rx_action (25 samples, 0.14%)</title><rect x="600.4" y="259.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="603.4" y="270.0"></text>
</g>
<g>
<title>process_backlog (25 samples, 0.14%)</title><rect x="600.4" y="243.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="603.4" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (25 samples, 0.14%)</title><rect x="600.4" y="227.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="603.4" y="238.0"></text>
</g>
<g>
<title>ip_rcv (25 samples, 0.14%)</title><rect x="600.4" y="211.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="603.4" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (19 samples, 0.11%)</title><rect x="600.4" y="195.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="603.4" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (16 samples, 0.09%)</title><rect x="600.4" y="179.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="603.4" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (16 samples, 0.09%)</title><rect x="600.4" y="163.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="603.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (16 samples, 0.09%)</title><rect x="600.4" y="147.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="603.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (11 samples, 0.06%)</title><rect x="600.7" y="131.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="603.7" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (11 samples, 0.06%)</title><rect x="600.7" y="115.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="603.7" y="126.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.03%)</title><rect x="600.8" y="99.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="603.8" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (5 samples, 0.03%)</title><rect x="601.1" y="99.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="604.1" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.02%)</title><rect x="601.1" y="83.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="604.1" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.02%)</title><rect x="601.1" y="67.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="604.1" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.02%)</title><rect x="601.1" y="51.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="604.1" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.03%)</title><rect x="601.7" y="195.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="604.7" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="601.7" y="179.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="604.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (674 samples, 3.84%)</title><rect x="602.6" y="643.0" width="45.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.6" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (674 samples, 3.84%)</title><rect x="602.6" y="627.0" width="45.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="605.6" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (674 samples, 3.84%)</title><rect x="602.6" y="611.0" width="45.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.6" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (674 samples, 3.84%)</title><rect x="602.6" y="595.0" width="45.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.6" y="606.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (35 samples, 0.20%)</title><rect x="602.6" y="579.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (35 samples, 0.20%)</title><rect x="602.6" y="563.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="605.6" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (35 samples, 0.20%)</title><rect x="602.6" y="547.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.6" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (35 samples, 0.20%)</title><rect x="602.6" y="531.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (35 samples, 0.20%)</title><rect x="602.6" y="515.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="605.6" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (33 samples, 0.19%)</title><rect x="602.6" y="499.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="605.6" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (22 samples, 0.13%)</title><rect x="602.6" y="483.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.6" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (22 samples, 0.13%)</title><rect x="602.6" y="467.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.6" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (22 samples, 0.13%)</title><rect x="602.6" y="451.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.6" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 0.12%)</title><rect x="602.7" y="435.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="605.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (19 samples, 0.11%)</title><rect x="602.8" y="419.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="605.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (19 samples, 0.11%)</title><rect x="602.8" y="403.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="605.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (19 samples, 0.11%)</title><rect x="602.8" y="387.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.8" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (19 samples, 0.11%)</title><rect x="602.8" y="371.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (19 samples, 0.11%)</title><rect x="602.8" y="355.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (19 samples, 0.11%)</title><rect x="602.8" y="339.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="605.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (19 samples, 0.11%)</title><rect x="602.8" y="323.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="605.8" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (19 samples, 0.11%)</title><rect x="602.8" y="307.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.8" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (19 samples, 0.11%)</title><rect x="602.8" y="291.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="605.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (16 samples, 0.09%)</title><rect x="603.0" y="275.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (16 samples, 0.09%)</title><rect x="603.0" y="259.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="606.0" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14 samples, 0.08%)</title><rect x="603.0" y="243.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="606.0" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14 samples, 0.08%)</title><rect x="603.0" y="227.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.0" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.05%)</title><rect x="603.3" y="211.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="606.3" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="603.4" y="195.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.4" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="603.6" y="179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.6" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="603.6" y="163.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.6" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="603.6" y="147.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.6" y="158.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="603.6" y="131.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.6" y="142.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (11 samples, 0.06%)</title><rect x="604.1" y="483.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.1" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (11 samples, 0.06%)</title><rect x="604.1" y="467.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="607.1" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (11 samples, 0.06%)</title><rect x="604.1" y="451.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="607.1" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (11 samples, 0.06%)</title><rect x="604.1" y="435.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="607.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.06%)</title><rect x="604.1" y="419.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.06%)</title><rect x="604.1" y="403.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (8 samples, 0.05%)</title><rect x="604.3" y="387.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (8 samples, 0.05%)</title><rect x="604.3" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.3" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (8 samples, 0.05%)</title><rect x="604.3" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.05%)</title><rect x="604.3" y="339.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (7 samples, 0.04%)</title><rect x="604.4" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="607.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.04%)</title><rect x="604.4" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="607.4" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (7 samples, 0.04%)</title><rect x="604.4" y="291.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.4" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.04%)</title><rect x="604.4" y="275.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (5 samples, 0.03%)</title><rect x="604.5" y="259.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (5 samples, 0.03%)</title><rect x="604.5" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="607.5" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="604.5" y="227.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="607.5" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.03%)</title><rect x="604.5" y="211.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (638 samples, 3.64%)</title><rect x="605.0" y="579.0" width="43.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.0" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (637 samples, 3.63%)</title><rect x="605.1" y="563.0" width="42.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="608.1" y="574.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (566 samples, 3.23%)</title><rect x="605.1" y="547.0" width="38.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.1" y="558.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (27 samples, 0.15%)</title><rect x="605.1" y="531.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (27 samples, 0.15%)</title><rect x="605.1" y="515.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="608.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (25 samples, 0.14%)</title><rect x="605.2" y="499.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="608.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (25 samples, 0.14%)</title><rect x="605.2" y="483.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (18 samples, 0.10%)</title><rect x="605.7" y="467.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (13 samples, 0.07%)</title><rect x="606.0" y="451.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="609.0" y="462.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (8 samples, 0.05%)</title><rect x="606.3" y="435.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="609.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (21 samples, 0.12%)</title><rect x="607.0" y="531.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="610.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (13 samples, 0.07%)</title><rect x="607.0" y="515.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="610.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (8 samples, 0.05%)</title><rect x="607.1" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="610.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.05%)</title><rect x="607.1" y="483.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (8 samples, 0.05%)</title><rect x="607.1" y="467.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (8 samples, 0.05%)</title><rect x="607.1" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (8 samples, 0.05%)</title><rect x="607.1" y="435.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="610.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (8 samples, 0.05%)</title><rect x="607.1" y="419.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="610.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (8 samples, 0.05%)</title><rect x="607.1" y="403.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.03%)</title><rect x="607.2" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.2" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.03%)</title><rect x="607.2" y="371.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="610.2" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.03%)</title><rect x="607.2" y="355.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.2" y="366.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="607.3" y="339.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="610.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (4 samples, 0.02%)</title><rect x="607.6" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="610.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (8 samples, 0.05%)</title><rect x="607.9" y="515.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="610.9" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (7 samples, 0.04%)</title><rect x="607.9" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="610.9" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (7 samples, 0.04%)</title><rect x="607.9" y="483.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="610.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (517 samples, 2.95%)</title><rect x="608.4" y="531.0" width="34.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="611.4" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (517 samples, 2.95%)</title><rect x="608.4" y="515.0" width="34.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.4" y="526.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (517 samples, 2.95%)</title><rect x="608.4" y="499.0" width="34.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.4" y="510.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.06%)</title><rect x="608.5" y="483.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="611.5" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.06%)</title><rect x="608.5" y="467.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (92 samples, 0.52%)</title><rect x="609.1" y="483.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="612.1" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (5 samples, 0.03%)</title><rect x="609.1" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="612.1" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (39 samples, 0.22%)</title><rect x="609.5" y="467.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="612.5" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (39 samples, 0.22%)</title><rect x="609.5" y="451.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="612.5" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (34 samples, 0.19%)</title><rect x="609.8" y="435.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.8" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (34 samples, 0.19%)</title><rect x="609.8" y="419.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="612.8" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (32 samples, 0.18%)</title><rect x="610.0" y="403.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="613.0" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (31 samples, 0.18%)</title><rect x="610.0" y="387.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="613.0" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (31 samples, 0.18%)</title><rect x="610.0" y="371.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="613.0" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="610.3" y="355.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="613.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.05%)</title><rect x="610.3" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="613.3" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="610.4" y="323.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.03%)</title><rect x="610.4" y="307.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="613.4" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.03%)</title><rect x="610.4" y="291.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="613.4" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (19 samples, 0.11%)</title><rect x="610.8" y="339.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="613.8" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (48 samples, 0.27%)</title><rect x="612.1" y="467.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="615.1" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (48 samples, 0.27%)</title><rect x="612.1" y="451.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.1" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (47 samples, 0.27%)</title><rect x="612.2" y="435.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.2" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (46 samples, 0.26%)</title><rect x="612.2" y="419.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="615.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (46 samples, 0.26%)</title><rect x="612.2" y="403.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="615.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (46 samples, 0.26%)</title><rect x="612.2" y="387.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="615.2" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (42 samples, 0.24%)</title><rect x="612.5" y="371.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.5" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (11 samples, 0.06%)</title><rect x="613.1" y="355.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="616.1" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.06%)</title><rect x="613.2" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="616.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (9 samples, 0.05%)</title><rect x="613.3" y="323.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="616.3" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.05%)</title><rect x="613.3" y="307.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="616.3" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (22 samples, 0.13%)</title><rect x="613.9" y="355.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="616.9" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (22 samples, 0.13%)</title><rect x="613.9" y="339.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="616.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (414 samples, 2.36%)</title><rect x="615.3" y="483.0" width="27.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.3" y="494.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (270 samples, 1.54%)</title><rect x="621.3" y="467.0" width="18.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (269 samples, 1.53%)</title><rect x="621.3" y="451.0" width="18.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="624.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (247 samples, 1.41%)</title><rect x="622.8" y="435.0" width="16.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.8" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (245 samples, 1.40%)</title><rect x="622.9" y="419.0" width="16.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="625.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="633.5" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.5" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.04%)</title><rect x="633.8" y="403.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.8" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (67 samples, 0.38%)</title><rect x="634.3" y="403.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="637.3" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (63 samples, 0.36%)</title><rect x="634.6" y="387.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (58 samples, 0.33%)</title><rect x="634.9" y="371.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="637.9" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (53 samples, 0.30%)</title><rect x="635.2" y="355.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.2" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.05%)</title><rect x="636.7" y="339.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.7" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="637.0" y="323.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="640.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="637.0" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="640.0" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (23 samples, 0.13%)</title><rect x="637.3" y="339.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="640.3" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.05%)</title><rect x="638.8" y="403.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="641.8" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (37 samples, 0.21%)</title><rect x="639.4" y="467.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.4" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (35 samples, 0.20%)</title><rect x="639.6" y="451.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.6" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (35 samples, 0.20%)</title><rect x="639.6" y="435.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="642.6" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (30 samples, 0.17%)</title><rect x="639.9" y="419.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="642.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (29 samples, 0.17%)</title><rect x="640.0" y="403.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.0" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (29 samples, 0.17%)</title><rect x="640.0" y="387.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.0" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (21 samples, 0.12%)</title><rect x="640.1" y="371.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.1" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.06%)</title><rect x="640.2" y="355.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="643.2" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="640.2" y="339.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="640.5" y="323.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="643.5" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="640.5" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.5" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (10 samples, 0.06%)</title><rect x="640.8" y="355.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="643.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (10 samples, 0.06%)</title><rect x="640.8" y="339.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="641.5" y="371.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.5" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (18 samples, 0.10%)</title><rect x="641.9" y="467.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.9" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (6 samples, 0.03%)</title><rect x="642.4" y="451.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (71 samples, 0.40%)</title><rect x="643.2" y="547.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="646.2" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (61 samples, 0.35%)</title><rect x="643.2" y="531.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="646.2" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (61 samples, 0.35%)</title><rect x="643.2" y="515.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="646.2" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (51 samples, 0.29%)</title><rect x="643.7" y="499.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (51 samples, 0.29%)</title><rect x="643.7" y="483.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="646.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (50 samples, 0.29%)</title><rect x="643.8" y="467.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="646.8" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (50 samples, 0.29%)</title><rect x="643.8" y="451.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="646.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (48 samples, 0.27%)</title><rect x="643.9" y="435.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="646.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (47 samples, 0.27%)</title><rect x="644.0" y="419.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="647.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (14 samples, 0.08%)</title><rect x="644.0" y="403.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (13 samples, 0.07%)</title><rect x="644.1" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (11 samples, 0.06%)</title><rect x="644.2" y="371.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="647.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (10 samples, 0.06%)</title><rect x="644.3" y="355.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (7 samples, 0.04%)</title><rect x="644.3" y="339.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="647.3" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (7 samples, 0.04%)</title><rect x="644.3" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (7 samples, 0.04%)</title><rect x="644.3" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="647.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.04%)</title><rect x="644.3" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.3" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="644.3" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="647.3" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="644.4" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="647.4" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="644.4" y="243.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.4" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="644.4" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="647.4" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="644.5" y="211.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="647.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (33 samples, 0.19%)</title><rect x="644.9" y="403.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (32 samples, 0.18%)</title><rect x="645.0" y="387.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="648.0" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (32 samples, 0.18%)</title><rect x="645.0" y="371.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="648.0" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (32 samples, 0.18%)</title><rect x="645.0" y="355.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (29 samples, 0.17%)</title><rect x="645.2" y="339.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="648.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (29 samples, 0.17%)</title><rect x="645.2" y="323.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="648.2" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (29 samples, 0.17%)</title><rect x="645.2" y="307.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.2" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (29 samples, 0.17%)</title><rect x="645.2" y="291.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="648.2" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.05%)</title><rect x="645.3" y="275.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="648.3" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.05%)</title><rect x="645.3" y="259.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.3" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.04%)</title><rect x="645.3" y="243.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="648.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (20 samples, 0.11%)</title><rect x="645.8" y="275.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (19 samples, 0.11%)</title><rect x="645.9" y="259.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.9" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (16 samples, 0.09%)</title><rect x="645.9" y="243.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="648.9" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14 samples, 0.08%)</title><rect x="646.0" y="227.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.0" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.03%)</title><rect x="646.5" y="211.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="649.5" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="646.5" y="195.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="649.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (10 samples, 0.06%)</title><rect x="647.3" y="531.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (10 samples, 0.06%)</title><rect x="647.3" y="515.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.3" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.06%)</title><rect x="647.3" y="499.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="650.3" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (9 samples, 0.05%)</title><rect x="647.3" y="483.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.3" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (9 samples, 0.05%)</title><rect x="647.3" y="467.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="650.3" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (9 samples, 0.05%)</title><rect x="647.3" y="451.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.05%)</title><rect x="647.3" y="435.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="650.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="647.4" y="419.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (8 samples, 0.05%)</title><rect x="647.4" y="403.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="650.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (8 samples, 0.05%)</title><rect x="647.4" y="387.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (8 samples, 0.05%)</title><rect x="647.4" y="371.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.05%)</title><rect x="647.4" y="355.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (5 samples, 0.03%)</title><rect x="647.6" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="650.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.03%)</title><rect x="647.6" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (5 samples, 0.03%)</title><rect x="647.6" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.6" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (5 samples, 0.03%)</title><rect x="647.6" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="650.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (4 samples, 0.02%)</title><rect x="647.6" y="275.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="650.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4 samples, 0.02%)</title><rect x="647.6" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.6" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="647.6" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.6" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="647.6" y="227.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="650.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.sendResponse (190 samples, 1.08%)</title><rect x="648.0" y="643.0" width="12.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="651.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (190 samples, 1.08%)</title><rect x="648.0" y="627.0" width="12.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="651.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (187 samples, 1.07%)</title><rect x="648.2" y="611.0" width="12.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="651.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.05%)</title><rect x="648.2" y="595.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="651.2" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.03%)</title><rect x="648.3" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="651.3" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.03%)</title><rect x="648.3" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="651.3" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (179 samples, 1.02%)</title><rect x="648.7" y="595.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="651.7" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (178 samples, 1.01%)</title><rect x="648.8" y="579.0" width="11.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="651.8" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (176 samples, 1.00%)</title><rect x="648.9" y="563.0" width="11.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="651.9" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (175 samples, 1.00%)</title><rect x="649.0" y="547.0" width="11.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="652.0" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (168 samples, 0.96%)</title><rect x="649.1" y="531.0" width="11.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="652.1" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (162 samples, 0.92%)</title><rect x="649.5" y="515.0" width="10.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="652.5" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (162 samples, 0.92%)</title><rect x="649.5" y="499.0" width="10.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="652.5" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (160 samples, 0.91%)</title><rect x="649.6" y="483.0" width="10.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="652.6" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (159 samples, 0.91%)</title><rect x="649.6" y="467.0" width="10.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="652.6" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (157 samples, 0.89%)</title><rect x="649.7" y="451.0" width="10.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="652.7" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (154 samples, 0.88%)</title><rect x="649.9" y="435.0" width="10.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="652.9" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (154 samples, 0.88%)</title><rect x="649.9" y="419.0" width="10.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="652.9" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (138 samples, 0.79%)</title><rect x="650.1" y="403.0" width="9.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="653.1" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (138 samples, 0.79%)</title><rect x="650.1" y="387.0" width="9.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="653.1" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (132 samples, 0.75%)</title><rect x="650.1" y="371.0" width="8.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="653.1" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (127 samples, 0.72%)</title><rect x="650.2" y="355.0" width="8.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="653.2" y="366.0"></text>
</g>
<g>
<title>ip_local_out (25 samples, 0.14%)</title><rect x="650.4" y="339.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="653.4" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (25 samples, 0.14%)</title><rect x="650.4" y="323.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="653.4" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (24 samples, 0.14%)</title><rect x="650.5" y="307.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="653.5" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="650.5" y="291.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="653.5" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (5 samples, 0.03%)</title><rect x="650.8" y="291.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="653.8" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (8 samples, 0.05%)</title><rect x="651.5" y="291.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="654.5" y="302.0"></text>
</g>
<g>
<title>ip_output (100 samples, 0.57%)</title><rect x="652.1" y="339.0" width="6.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="655.1" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (93 samples, 0.53%)</title><rect x="652.1" y="323.0" width="6.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="655.1" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (15 samples, 0.09%)</title><rect x="652.2" y="307.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="655.2" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (11 samples, 0.06%)</title><rect x="652.4" y="291.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="655.4" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (11 samples, 0.06%)</title><rect x="652.4" y="275.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="655.4" y="286.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.03%)</title><rect x="652.4" y="259.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="655.4" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.03%)</title><rect x="652.4" y="243.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="655.4" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.02%)</title><rect x="652.5" y="227.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="655.5" y="238.0"></text>
</g>
<g>
<title>tcp_wfree (4 samples, 0.02%)</title><rect x="652.9" y="259.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="655.9" y="270.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (77 samples, 0.44%)</title><rect x="653.2" y="307.0" width="5.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="656.2" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (77 samples, 0.44%)</title><rect x="653.2" y="291.0" width="5.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="656.2" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (76 samples, 0.43%)</title><rect x="653.3" y="275.0" width="5.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="656.3" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (76 samples, 0.43%)</title><rect x="653.3" y="259.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="656.3" y="270.0"></text>
</g>
<g>
<title>net_rx_action (72 samples, 0.41%)</title><rect x="653.5" y="243.0" width="4.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="656.5" y="254.0"></text>
</g>
<g>
<title>process_backlog (71 samples, 0.40%)</title><rect x="653.6" y="227.0" width="4.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="656.6" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (70 samples, 0.40%)</title><rect x="653.7" y="211.0" width="4.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="656.7" y="222.0"></text>
</g>
<g>
<title>ip_rcv (69 samples, 0.39%)</title><rect x="653.7" y="195.0" width="4.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="656.7" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (59 samples, 0.34%)</title><rect x="653.7" y="179.0" width="4.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="656.7" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (43 samples, 0.25%)</title><rect x="653.8" y="163.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="656.8" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (43 samples, 0.25%)</title><rect x="653.8" y="147.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="656.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (42 samples, 0.24%)</title><rect x="653.9" y="131.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="656.9" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (38 samples, 0.22%)</title><rect x="654.2" y="115.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="657.2" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (38 samples, 0.22%)</title><rect x="654.2" y="99.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="657.2" y="110.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.05%)</title><rect x="654.2" y="83.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="657.2" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (29 samples, 0.17%)</title><rect x="654.7" y="83.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="657.7" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (25 samples, 0.14%)</title><rect x="654.8" y="67.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="657.8" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (24 samples, 0.14%)</title><rect x="654.9" y="51.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="657.9" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (24 samples, 0.14%)</title><rect x="654.9" y="35.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="657.9" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.09%)</title><rect x="656.7" y="163.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="659.7" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (9 samples, 0.05%)</title><rect x="656.8" y="147.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="659.8" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.05%)</title><rect x="657.8" y="179.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="660.8" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.04%)</title><rect x="657.8" y="163.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="660.8" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.03%)</title><rect x="658.4" y="323.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="661.4" y="334.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.03%)</title><rect x="659.0" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="662.0" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.04%)</title><rect x="659.5" y="403.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="662.5" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.04%)</title><rect x="659.5" y="387.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="662.5" y="398.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.02%)</title><rect x="659.7" y="371.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="662.7" y="382.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="660.4" y="531.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="663.4" y="542.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="660.4" y="515.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="663.4" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.02%)</title><rect x="660.4" y="499.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="663.4" y="510.0"></text>
</g>
<g>
<title>[worker-2 tid=14272] (1,018 samples, 5.80%)</title><rect x="660.7" y="739.0" width="68.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="663.7" y="750.0">[worker..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (12 samples, 0.07%)</title><rect x="660.9" y="723.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="663.9" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (12 samples, 0.07%)</title><rect x="660.9" y="707.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="663.9" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (12 samples, 0.07%)</title><rect x="660.9" y="691.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="663.9" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (12 samples, 0.07%)</title><rect x="660.9" y="675.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="663.9" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (9 samples, 0.05%)</title><rect x="661.0" y="659.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="664.0" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (5 samples, 0.03%)</title><rect x="661.1" y="643.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="664.1" y="654.0"></text>
</g>
<g>
<title>[unknown_Java] (25 samples, 0.14%)</title><rect x="661.8" y="723.0" width="1.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="664.8" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (978 samples, 5.58%)</title><rect x="663.4" y="723.0" width="65.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.4" y="734.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (978 samples, 5.58%)</title><rect x="663.4" y="707.0" width="65.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="666.4" y="718.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (978 samples, 5.58%)</title><rect x="663.4" y="691.0" width="65.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.4" y="702.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (20 samples, 0.11%)</title><rect x="663.6" y="675.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="666.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (20 samples, 0.11%)</title><rect x="663.6" y="659.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15 samples, 0.09%)</title><rect x="663.6" y="643.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (13 samples, 0.07%)</title><rect x="663.8" y="627.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.07%)</title><rect x="663.8" y="611.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="666.8" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 0.05%)</title><rect x="663.8" y="595.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="666.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="664.4" y="595.0" width="0.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="667.4" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.02%)</title><rect x="664.4" y="579.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="667.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (956 samples, 5.45%)</title><rect x="664.9" y="675.0" width="64.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="667.9" y="686.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (956 samples, 5.45%)</title><rect x="664.9" y="659.0" width="64.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="667.9" y="670.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (110 samples, 0.63%)</title><rect x="665.1" y="643.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (110 samples, 0.63%)</title><rect x="665.1" y="627.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="668.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (110 samples, 0.63%)</title><rect x="665.1" y="611.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (110 samples, 0.63%)</title><rect x="665.1" y="595.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="668.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (110 samples, 0.63%)</title><rect x="665.1" y="579.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (23 samples, 0.13%)</title><rect x="665.2" y="563.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="668.2" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (23 samples, 0.13%)</title><rect x="665.2" y="547.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="668.2" y="558.0"></text>
</g>
<g>
<title>__libc_recv (20 samples, 0.11%)</title><rect x="665.3" y="531.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="668.3" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.07%)</title><rect x="665.8" y="515.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="668.8" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.07%)</title><rect x="665.8" y="499.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="668.8" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (12 samples, 0.07%)</title><rect x="665.9" y="483.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="668.9" y="494.0"></text>
</g>
<g>
<title>__sys_recvfrom (12 samples, 0.07%)</title><rect x="665.9" y="467.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="668.9" y="478.0"></text>
</g>
<g>
<title>inet_recvmsg (8 samples, 0.05%)</title><rect x="666.1" y="451.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="669.1" y="462.0"></text>
</g>
<g>
<title>tcp_recvmsg (8 samples, 0.05%)</title><rect x="666.1" y="435.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="669.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (4 samples, 0.02%)</title><rect x="666.7" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="669.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (4 samples, 0.02%)</title><rect x="667.0" y="563.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.0" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.02%)</title><rect x="667.0" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="670.0" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (13 samples, 0.07%)</title><rect x="667.3" y="563.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.3" y="574.0"></text>
</g>
<g>
<title>setsockopt (13 samples, 0.07%)</title><rect x="667.3" y="547.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="670.3" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="667.4" y="531.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="670.4" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="667.4" y="515.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="670.4" y="526.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (6 samples, 0.03%)</title><rect x="667.7" y="499.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="670.7" y="510.0"></text>
</g>
<g>
<title>__sys_setsockopt (6 samples, 0.03%)</title><rect x="667.7" y="483.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="670.7" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (62 samples, 0.35%)</title><rect x="668.1" y="563.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="671.1" y="574.0"></text>
</g>
<g>
<title>.annobin_send.c (61 samples, 0.35%)</title><rect x="668.1" y="547.0" width="4.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="671.1" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (61 samples, 0.35%)</title><rect x="668.1" y="531.0" width="4.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="671.1" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (61 samples, 0.35%)</title><rect x="668.1" y="515.0" width="4.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="671.1" y="526.0"></text>
</g>
<g>
<title>__x64_sys_sendto (56 samples, 0.32%)</title><rect x="668.4" y="499.0" width="3.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="671.4" y="510.0"></text>
</g>
<g>
<title>__sys_sendto (56 samples, 0.32%)</title><rect x="668.4" y="483.0" width="3.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="671.4" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (55 samples, 0.31%)</title><rect x="668.5" y="467.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="671.5" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (54 samples, 0.31%)</title><rect x="668.5" y="451.0" width="3.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="671.5" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (54 samples, 0.31%)</title><rect x="668.5" y="435.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="671.5" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (48 samples, 0.27%)</title><rect x="668.6" y="419.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="671.6" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (48 samples, 0.27%)</title><rect x="668.6" y="403.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="671.6" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (47 samples, 0.27%)</title><rect x="668.6" y="387.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="671.6" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (46 samples, 0.26%)</title><rect x="668.6" y="371.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="671.6" y="382.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 0.03%)</title><rect x="668.7" y="355.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="671.7" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (5 samples, 0.03%)</title><rect x="668.7" y="339.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="671.7" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="668.7" y="323.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="671.7" y="334.0"></text>
</g>
<g>
<title>ip_output (40 samples, 0.23%)</title><rect x="669.0" y="355.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="672.0" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (38 samples, 0.22%)</title><rect x="669.1" y="339.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="672.1" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (33 samples, 0.19%)</title><rect x="669.4" y="323.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="672.4" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (33 samples, 0.19%)</title><rect x="669.4" y="307.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="672.4" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (31 samples, 0.18%)</title><rect x="669.6" y="291.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="672.6" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (31 samples, 0.18%)</title><rect x="669.6" y="275.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="672.6" y="286.0"></text>
</g>
<g>
<title>net_rx_action (31 samples, 0.18%)</title><rect x="669.6" y="259.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="672.6" y="270.0"></text>
</g>
<g>
<title>process_backlog (31 samples, 0.18%)</title><rect x="669.6" y="243.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="672.6" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (30 samples, 0.17%)</title><rect x="669.6" y="227.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="672.6" y="238.0"></text>
</g>
<g>
<title>ip_rcv (29 samples, 0.17%)</title><rect x="669.7" y="211.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="672.7" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (24 samples, 0.14%)</title><rect x="669.7" y="195.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="672.7" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (21 samples, 0.12%)</title><rect x="669.8" y="179.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="672.8" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (21 samples, 0.12%)</title><rect x="669.8" y="163.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="672.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (21 samples, 0.12%)</title><rect x="669.8" y="147.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="672.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (21 samples, 0.12%)</title><rect x="669.8" y="131.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="672.8" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (21 samples, 0.12%)</title><rect x="669.8" y="115.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="672.8" y="126.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.03%)</title><rect x="669.8" y="99.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="672.8" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (14 samples, 0.08%)</title><rect x="670.2" y="99.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="673.2" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (14 samples, 0.08%)</title><rect x="670.2" y="83.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="673.2" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 0.08%)</title><rect x="670.2" y="67.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="673.2" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.08%)</title><rect x="670.2" y="51.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="673.2" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="671.4" y="195.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="674.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (667 samples, 3.80%)</title><rect x="672.5" y="643.0" width="44.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="675.5" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (667 samples, 3.80%)</title><rect x="672.5" y="627.0" width="44.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="675.5" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (667 samples, 3.80%)</title><rect x="672.5" y="611.0" width="44.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="675.5" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (664 samples, 3.79%)</title><rect x="672.7" y="595.0" width="44.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.7" y="606.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (24 samples, 0.14%)</title><rect x="672.7" y="579.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="675.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (24 samples, 0.14%)</title><rect x="672.7" y="563.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="675.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (24 samples, 0.14%)</title><rect x="672.7" y="547.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="675.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (24 samples, 0.14%)</title><rect x="672.7" y="531.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="675.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (24 samples, 0.14%)</title><rect x="672.7" y="515.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="675.7" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (20 samples, 0.11%)</title><rect x="672.8" y="499.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.8" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (10 samples, 0.06%)</title><rect x="672.9" y="483.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="675.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (10 samples, 0.06%)</title><rect x="672.9" y="467.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="675.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (8 samples, 0.05%)</title><rect x="673.0" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.0" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="673.0" y="435.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="676.0" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="673.0" y="419.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (8 samples, 0.05%)</title><rect x="673.0" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="676.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (8 samples, 0.05%)</title><rect x="673.0" y="387.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="676.0" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (7 samples, 0.04%)</title><rect x="673.1" y="371.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.04%)</title><rect x="673.1" y="355.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="676.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (7 samples, 0.04%)</title><rect x="673.1" y="339.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="676.1" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.04%)</title><rect x="673.1" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="676.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (7 samples, 0.04%)</title><rect x="673.1" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.1" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.04%)</title><rect x="673.1" y="291.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.1" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="673.1" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.1" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="673.1" y="259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="676.1" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (9 samples, 0.05%)</title><rect x="673.5" y="483.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (9 samples, 0.05%)</title><rect x="673.5" y="467.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="676.5" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.05%)</title><rect x="673.6" y="451.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="676.6" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.05%)</title><rect x="673.6" y="435.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.6" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="673.6" y="419.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="673.6" y="403.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="676.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (5 samples, 0.03%)</title><rect x="673.8" y="387.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (5 samples, 0.03%)</title><rect x="673.8" y="371.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="676.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (4 samples, 0.02%)</title><rect x="673.9" y="355.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="676.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="673.9" y="339.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="676.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (638 samples, 3.64%)</title><rect x="674.5" y="579.0" width="42.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.5" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (638 samples, 3.64%)</title><rect x="674.5" y="563.0" width="42.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="677.5" y="574.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (552 samples, 3.15%)</title><rect x="674.5" y="547.0" width="37.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="677.5" y="558.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (33 samples, 0.19%)</title><rect x="674.5" y="531.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (33 samples, 0.19%)</title><rect x="674.5" y="515.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="677.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (30 samples, 0.17%)</title><rect x="674.5" y="499.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="677.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (29 samples, 0.17%)</title><rect x="674.6" y="483.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="677.6" y="494.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.03%)</title><rect x="674.9" y="467.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="677.9" y="478.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (4 samples, 0.02%)</title><rect x="675.3" y="467.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="678.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.03%)</title><rect x="675.5" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="678.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (10 samples, 0.06%)</title><rect x="675.9" y="467.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.04%)</title><rect x="676.1" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (27 samples, 0.15%)</title><rect x="676.8" y="531.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (15 samples, 0.09%)</title><rect x="677.0" y="515.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (12 samples, 0.07%)</title><rect x="677.0" y="499.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (12 samples, 0.07%)</title><rect x="677.0" y="483.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="680.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (12 samples, 0.07%)</title><rect x="677.0" y="467.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="680.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (11 samples, 0.06%)</title><rect x="677.1" y="451.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="680.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (11 samples, 0.06%)</title><rect x="677.1" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (11 samples, 0.06%)</title><rect x="677.1" y="419.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (10 samples, 0.06%)</title><rect x="677.2" y="403.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.02%)</title><rect x="677.6" y="387.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="677.6" y="371.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="680.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (9 samples, 0.05%)</title><rect x="678.0" y="515.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="681.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6 samples, 0.03%)</title><rect x="678.0" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="681.0" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6 samples, 0.03%)</title><rect x="678.0" y="483.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (490 samples, 2.79%)</title><rect x="678.6" y="531.0" width="33.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="681.6" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (490 samples, 2.79%)</title><rect x="678.6" y="515.0" width="33.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="681.6" y="526.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (490 samples, 2.79%)</title><rect x="678.6" y="499.0" width="33.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="681.6" y="510.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.03%)</title><rect x="678.6" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.6" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.03%)</title><rect x="678.6" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (74 samples, 0.42%)</title><rect x="679.0" y="483.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (4 samples, 0.02%)</title><rect x="679.1" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="682.1" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (36 samples, 0.21%)</title><rect x="679.4" y="467.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="682.4" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (36 samples, 0.21%)</title><rect x="679.4" y="451.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="682.4" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (29 samples, 0.17%)</title><rect x="679.8" y="435.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="682.8" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (29 samples, 0.17%)</title><rect x="679.8" y="419.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.8" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (28 samples, 0.16%)</title><rect x="679.9" y="403.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="682.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (26 samples, 0.15%)</title><rect x="680.0" y="387.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="683.0" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (26 samples, 0.15%)</title><rect x="680.0" y="371.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.0" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="680.1" y="355.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.1" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="680.1" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="683.1" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (21 samples, 0.12%)</title><rect x="680.4" y="339.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.4" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.03%)</title><rect x="681.3" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="684.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (33 samples, 0.19%)</title><rect x="681.8" y="467.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="684.8" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (33 samples, 0.19%)</title><rect x="681.8" y="451.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="684.8" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (32 samples, 0.18%)</title><rect x="681.9" y="435.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="684.9" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (31 samples, 0.18%)</title><rect x="681.9" y="419.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="684.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (31 samples, 0.18%)</title><rect x="681.9" y="403.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (31 samples, 0.18%)</title><rect x="681.9" y="387.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.9" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="682.3" y="371.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.3" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="682.8" y="355.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="685.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="682.9" y="339.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="685.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="682.9" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.9" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="682.9" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.9" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.06%)</title><rect x="683.3" y="355.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.06%)</title><rect x="683.3" y="339.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (410 samples, 2.34%)</title><rect x="684.0" y="483.0" width="27.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.0" y="494.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (264 samples, 1.50%)</title><rect x="690.1" y="467.0" width="17.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="693.1" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (263 samples, 1.50%)</title><rect x="690.2" y="451.0" width="17.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="693.2" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (254 samples, 1.45%)</title><rect x="690.8" y="435.0" width="17.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.8" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (253 samples, 1.44%)</title><rect x="690.9" y="419.0" width="17.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="701.6" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="704.6" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (10 samples, 0.06%)</title><rect x="701.9" y="403.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.9" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (66 samples, 0.38%)</title><rect x="702.6" y="403.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (62 samples, 0.35%)</title><rect x="702.9" y="387.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="705.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (56 samples, 0.32%)</title><rect x="703.3" y="371.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="706.3" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (56 samples, 0.32%)</title><rect x="703.3" y="355.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="706.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (14 samples, 0.08%)</title><rect x="704.9" y="339.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="707.9" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (12 samples, 0.07%)</title><rect x="705.0" y="323.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (12 samples, 0.07%)</title><rect x="705.0" y="307.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="708.0" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (12 samples, 0.07%)</title><rect x="705.0" y="291.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.0" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (18 samples, 0.10%)</title><rect x="705.8" y="339.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="708.8" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.03%)</title><rect x="706.7" y="323.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.7" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (10 samples, 0.06%)</title><rect x="707.0" y="403.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="710.0" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (37 samples, 0.21%)</title><rect x="707.9" y="467.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.9" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (37 samples, 0.21%)</title><rect x="707.9" y="451.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.9" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (37 samples, 0.21%)</title><rect x="707.9" y="435.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="710.9" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (32 samples, 0.18%)</title><rect x="708.2" y="419.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="711.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (30 samples, 0.17%)</title><rect x="708.4" y="403.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.4" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (30 samples, 0.17%)</title><rect x="708.4" y="387.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="711.4" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="708.6" y="371.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="711.6" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="708.8" y="355.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="711.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="708.8" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="711.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="708.8" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.8" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="708.8" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="711.8" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (13 samples, 0.07%)</title><rect x="709.1" y="355.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="712.1" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (13 samples, 0.07%)</title><rect x="709.1" y="339.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="712.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="709.4" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="712.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="709.7" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="710.0" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="713.0" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (15 samples, 0.09%)</title><rect x="710.4" y="467.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="713.4" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (8 samples, 0.05%)</title><rect x="710.9" y="451.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (86 samples, 0.49%)</title><rect x="711.6" y="547.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="714.6" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (78 samples, 0.44%)</title><rect x="711.6" y="531.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.6" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (78 samples, 0.44%)</title><rect x="711.6" y="515.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="714.6" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (62 samples, 0.35%)</title><rect x="712.4" y="499.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="715.4" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (62 samples, 0.35%)</title><rect x="712.4" y="483.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="715.4" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (62 samples, 0.35%)</title><rect x="712.4" y="467.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.4" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (62 samples, 0.35%)</title><rect x="712.4" y="451.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="715.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (61 samples, 0.35%)</title><rect x="712.5" y="435.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.5" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (61 samples, 0.35%)</title><rect x="712.5" y="419.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (33 samples, 0.19%)</title><rect x="712.5" y="403.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="715.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (30 samples, 0.17%)</title><rect x="712.7" y="387.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="715.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (30 samples, 0.17%)</title><rect x="712.7" y="371.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="715.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (30 samples, 0.17%)</title><rect x="712.7" y="355.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="715.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (21 samples, 0.12%)</title><rect x="712.7" y="339.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="715.7" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (16 samples, 0.09%)</title><rect x="712.7" y="323.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="715.7" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (16 samples, 0.09%)</title><rect x="712.7" y="307.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="715.7" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (14 samples, 0.08%)</title><rect x="712.8" y="291.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="715.8" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (14 samples, 0.08%)</title><rect x="712.8" y="275.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.8" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="713.5" y="259.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="716.5" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="713.5" y="243.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="713.5" y="227.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="716.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (4 samples, 0.02%)</title><rect x="714.1" y="339.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (28 samples, 0.16%)</title><rect x="714.7" y="403.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="717.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (27 samples, 0.15%)</title><rect x="714.8" y="387.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="717.8" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (27 samples, 0.15%)</title><rect x="714.8" y="371.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="717.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (27 samples, 0.15%)</title><rect x="714.8" y="355.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="717.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (6 samples, 0.03%)</title><rect x="714.8" y="339.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (6 samples, 0.03%)</title><rect x="714.8" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (5 samples, 0.03%)</title><rect x="714.8" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="717.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (5 samples, 0.03%)</title><rect x="714.8" y="291.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.8" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (21 samples, 0.12%)</title><rect x="715.2" y="339.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="718.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (21 samples, 0.12%)</title><rect x="715.2" y="323.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="718.2" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (21 samples, 0.12%)</title><rect x="715.2" y="307.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="718.2" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (21 samples, 0.12%)</title><rect x="715.2" y="291.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.2" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.03%)</title><rect x="715.3" y="275.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.3" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.03%)</title><rect x="715.3" y="259.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="718.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (12 samples, 0.07%)</title><rect x="715.7" y="275.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="718.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (12 samples, 0.07%)</title><rect x="715.7" y="259.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.7" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11 samples, 0.06%)</title><rect x="715.7" y="243.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.7" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (10 samples, 0.06%)</title><rect x="715.8" y="227.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="718.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.hasNext (4 samples, 0.02%)</title><rect x="716.6" y="499.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (8 samples, 0.05%)</title><rect x="716.8" y="531.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (8 samples, 0.05%)</title><rect x="716.8" y="515.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="719.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.05%)</title><rect x="716.8" y="499.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="719.8" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (4 samples, 0.02%)</title><rect x="716.8" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.8" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (4 samples, 0.02%)</title><rect x="716.8" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="719.8" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (4 samples, 0.02%)</title><rect x="716.8" y="451.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="716.8" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="716.8" y="419.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="719.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (4 samples, 0.02%)</title><rect x="716.8" y="403.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (4 samples, 0.02%)</title><rect x="716.8" y="387.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.8" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (4 samples, 0.02%)</title><rect x="716.8" y="371.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="719.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="716.8" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (4 samples, 0.02%)</title><rect x="716.8" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="716.8" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="719.8" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (4 samples, 0.02%)</title><rect x="716.8" y="307.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="719.8" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="716.8" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.8" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.02%)</title><rect x="717.1" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.1" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.02%)</title><rect x="717.1" y="467.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="720.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.sendResponse (176 samples, 1.00%)</title><rect x="717.4" y="643.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="720.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (176 samples, 1.00%)</title><rect x="717.4" y="627.0" width="11.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (171 samples, 0.97%)</title><rect x="717.7" y="611.0" width="11.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.03%)</title><rect x="717.7" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="720.7" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.03%)</title><rect x="717.7" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.7" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (166 samples, 0.95%)</title><rect x="718.0" y="595.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="721.0" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (166 samples, 0.95%)</title><rect x="718.0" y="579.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="721.0" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (164 samples, 0.93%)</title><rect x="718.1" y="563.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="721.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (163 samples, 0.93%)</title><rect x="718.1" y="547.0" width="11.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="721.1" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (157 samples, 0.89%)</title><rect x="718.4" y="531.0" width="10.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="721.4" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (141 samples, 0.80%)</title><rect x="719.5" y="515.0" width="9.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="722.5" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (141 samples, 0.80%)</title><rect x="719.5" y="499.0" width="9.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="722.5" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (138 samples, 0.79%)</title><rect x="719.7" y="483.0" width="9.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="722.7" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (138 samples, 0.79%)</title><rect x="719.7" y="467.0" width="9.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="722.7" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (132 samples, 0.75%)</title><rect x="719.7" y="451.0" width="8.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="722.7" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (130 samples, 0.74%)</title><rect x="719.9" y="435.0" width="8.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="722.9" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (129 samples, 0.74%)</title><rect x="719.9" y="419.0" width="8.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="722.9" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (120 samples, 0.68%)</title><rect x="720.1" y="403.0" width="8.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="723.1" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (120 samples, 0.68%)</title><rect x="720.1" y="387.0" width="8.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="723.1" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (114 samples, 0.65%)</title><rect x="720.3" y="371.0" width="7.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="723.3" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (111 samples, 0.63%)</title><rect x="720.4" y="355.0" width="7.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="723.4" y="366.0"></text>
</g>
<g>
<title>ip_local_out (27 samples, 0.15%)</title><rect x="720.5" y="339.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="723.5" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (27 samples, 0.15%)</title><rect x="720.5" y="323.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="723.5" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (26 samples, 0.15%)</title><rect x="720.5" y="307.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="723.5" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (10 samples, 0.06%)</title><rect x="720.5" y="291.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="723.5" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (11 samples, 0.06%)</title><rect x="721.6" y="291.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="724.6" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (6 samples, 0.03%)</title><rect x="721.6" y="275.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="724.6" y="286.0"></text>
</g>
<g>
<title>ip_output (83 samples, 0.47%)</title><rect x="722.3" y="339.0" width="5.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="725.3" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (74 samples, 0.42%)</title><rect x="722.4" y="323.0" width="4.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="725.4" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (71 samples, 0.40%)</title><rect x="722.6" y="307.0" width="4.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="725.6" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (71 samples, 0.40%)</title><rect x="722.6" y="291.0" width="4.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="725.6" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (71 samples, 0.40%)</title><rect x="722.6" y="275.0" width="4.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="725.6" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (71 samples, 0.40%)</title><rect x="722.6" y="259.0" width="4.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="725.6" y="270.0"></text>
</g>
<g>
<title>net_rx_action (70 samples, 0.40%)</title><rect x="722.6" y="243.0" width="4.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="725.6" y="254.0"></text>
</g>
<g>
<title>process_backlog (68 samples, 0.39%)</title><rect x="722.8" y="227.0" width="4.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="725.8" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (65 samples, 0.37%)</title><rect x="723.0" y="211.0" width="4.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="726.0" y="222.0"></text>
</g>
<g>
<title>ip_rcv (63 samples, 0.36%)</title><rect x="723.1" y="195.0" width="4.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="726.1" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (51 samples, 0.29%)</title><rect x="723.1" y="179.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="726.1" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (44 samples, 0.25%)</title><rect x="723.1" y="163.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="726.1" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (44 samples, 0.25%)</title><rect x="723.1" y="147.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="726.1" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (44 samples, 0.25%)</title><rect x="723.1" y="131.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="726.1" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (41 samples, 0.23%)</title><rect x="723.3" y="115.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="726.3" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (41 samples, 0.23%)</title><rect x="723.3" y="99.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="726.3" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (35 samples, 0.20%)</title><rect x="723.6" y="83.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="726.6" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (32 samples, 0.18%)</title><rect x="723.8" y="67.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="726.8" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (30 samples, 0.17%)</title><rect x="723.9" y="51.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="726.9" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (30 samples, 0.17%)</title><rect x="723.9" y="35.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="726.9" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.04%)</title><rect x="726.1" y="163.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="729.1" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.03%)</title><rect x="726.1" y="147.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="729.1" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.06%)</title><rect x="726.7" y="179.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="729.7" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.04%)</title><rect x="726.7" y="163.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="729.7" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="727.5" y="323.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="730.5" y="334.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.03%)</title><rect x="728.6" y="451.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="731.6" y="462.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.03%)</title><rect x="728.6" y="435.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="731.6" y="446.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.02%)</title><rect x="728.7" y="419.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="731.7" y="430.0"></text>
</g>
<g>
<title>[worker-2 tid=14278] (928 samples, 5.29%)</title><rect x="729.2" y="739.0" width="62.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="732.2" y="750.0">[worke..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.05%)</title><rect x="729.4" y="723.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="732.4" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.05%)</title><rect x="729.4" y="707.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="732.4" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (8 samples, 0.05%)</title><rect x="729.4" y="691.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="732.4" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.05%)</title><rect x="729.4" y="675.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="732.4" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (7 samples, 0.04%)</title><rect x="729.4" y="659.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="732.4" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (4 samples, 0.02%)</title><rect x="729.5" y="643.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="732.5" y="654.0"></text>
</g>
<g>
<title>[unknown_Java] (23 samples, 0.13%)</title><rect x="730.0" y="723.0" width="1.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="733.0" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (894 samples, 5.10%)</title><rect x="731.5" y="723.0" width="60.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="734.5" y="734.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (894 samples, 5.10%)</title><rect x="731.5" y="707.0" width="60.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.5" y="718.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (894 samples, 5.10%)</title><rect x="731.5" y="691.0" width="60.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.5" y="702.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (49 samples, 0.28%)</title><rect x="731.6" y="675.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="734.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (48 samples, 0.27%)</title><rect x="731.6" y="659.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="734.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (37 samples, 0.21%)</title><rect x="731.6" y="643.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (31 samples, 0.18%)</title><rect x="732.0" y="627.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (31 samples, 0.18%)</title><rect x="732.0" y="611.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.0" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (22 samples, 0.13%)</title><rect x="732.0" y="595.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="735.0" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (12 samples, 0.07%)</title><rect x="732.3" y="579.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="735.3" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="732.7" y="563.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="735.7" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="732.7" y="547.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="735.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.05%)</title><rect x="733.5" y="595.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="736.5" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.04%)</title><rect x="733.5" y="579.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="736.5" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="733.7" y="563.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="736.7" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="733.7" y="547.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="736.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.06%)</title><rect x="734.2" y="643.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="737.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.06%)</title><rect x="734.2" y="627.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="737.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.06%)</title><rect x="734.2" y="611.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="737.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.06%)</title><rect x="734.2" y="595.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="737.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.06%)</title><rect x="734.2" y="579.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.2" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.04%)</title><rect x="734.4" y="563.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="737.4" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="734.5" y="547.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="737.5" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="734.5" y="531.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="737.5" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="734.5" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="737.5" y="526.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="734.5" y="499.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="737.5" y="510.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.03%)</title><rect x="734.5" y="483.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="737.5" y="494.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="734.5" y="467.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="737.5" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="734.5" y="451.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="737.5" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.03%)</title><rect x="734.5" y="435.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="737.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (844 samples, 4.81%)</title><rect x="734.9" y="675.0" width="56.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="737.9" y="686.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (844 samples, 4.81%)</title><rect x="734.9" y="659.0" width="56.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="737.9" y="670.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (125 samples, 0.71%)</title><rect x="734.9" y="643.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="737.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (125 samples, 0.71%)</title><rect x="734.9" y="627.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="737.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (125 samples, 0.71%)</title><rect x="734.9" y="611.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (125 samples, 0.71%)</title><rect x="734.9" y="595.0" width="8.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="737.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (125 samples, 0.71%)</title><rect x="734.9" y="579.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="737.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (21 samples, 0.12%)</title><rect x="735.1" y="563.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="738.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (20 samples, 0.11%)</title><rect x="735.1" y="547.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="738.1" y="558.0"></text>
</g>
<g>
<title>__libc_recv (20 samples, 0.11%)</title><rect x="735.1" y="531.0" width="1.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="738.1" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.10%)</title><rect x="735.3" y="515.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="738.3" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.10%)</title><rect x="735.3" y="499.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="738.3" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (15 samples, 0.09%)</title><rect x="735.5" y="483.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="738.5" y="494.0"></text>
</g>
<g>
<title>__sys_recvfrom (15 samples, 0.09%)</title><rect x="735.5" y="467.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="738.5" y="478.0"></text>
</g>
<g>
<title>inet_recvmsg (14 samples, 0.08%)</title><rect x="735.5" y="451.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="738.5" y="462.0"></text>
</g>
<g>
<title>tcp_recvmsg (13 samples, 0.07%)</title><rect x="735.6" y="435.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="738.6" y="446.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.03%)</title><rect x="735.9" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="738.9" y="430.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.03%)</title><rect x="735.9" y="403.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="738.9" y="414.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.03%)</title><rect x="735.9" y="387.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="738.9" y="398.0"></text>
</g>
<g>
<title>copyout (4 samples, 0.02%)</title><rect x="735.9" y="371.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="738.9" y="382.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.02%)</title><rect x="735.9" y="355.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="738.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (9 samples, 0.05%)</title><rect x="736.5" y="563.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="739.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (5 samples, 0.03%)</title><rect x="736.7" y="547.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="739.7" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.02%)</title><rect x="736.8" y="531.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="739.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (5 samples, 0.03%)</title><rect x="737.1" y="563.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="740.1" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.02%)</title><rect x="737.1" y="547.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.1" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (14 samples, 0.08%)</title><rect x="737.4" y="563.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="740.4" y="574.0"></text>
</g>
<g>
<title>setsockopt (14 samples, 0.08%)</title><rect x="737.4" y="547.0" width="1.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="740.4" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="737.8" y="531.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="740.8" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="737.8" y="515.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="740.8" y="526.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (8 samples, 0.05%)</title><rect x="737.8" y="499.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="740.8" y="510.0"></text>
</g>
<g>
<title>__sys_setsockopt (8 samples, 0.05%)</title><rect x="737.8" y="483.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="740.8" y="494.0"></text>
</g>
<g>
<title>security_socket_setsockopt (4 samples, 0.02%)</title><rect x="737.8" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="740.8" y="478.0"></text>
</g>
<g>
<title>selinux_socket_setsockopt (4 samples, 0.02%)</title><rect x="737.8" y="451.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="740.8" y="462.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.02%)</title><rect x="737.8" y="435.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="740.8" y="446.0"></text>
</g>
<g>
<title>sock_setsockopt (4 samples, 0.02%)</title><rect x="738.1" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="741.1" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (72 samples, 0.41%)</title><rect x="738.4" y="563.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="741.4" y="574.0"></text>
</g>
<g>
<title>.annobin_send.c (67 samples, 0.38%)</title><rect x="738.4" y="547.0" width="4.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="741.4" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (65 samples, 0.37%)</title><rect x="738.6" y="531.0" width="4.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="741.6" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (65 samples, 0.37%)</title><rect x="738.6" y="515.0" width="4.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="741.6" y="526.0"></text>
</g>
<g>
<title>__x64_sys_sendto (65 samples, 0.37%)</title><rect x="738.6" y="499.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="741.6" y="510.0"></text>
</g>
<g>
<title>__sys_sendto (65 samples, 0.37%)</title><rect x="738.6" y="483.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="741.6" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (64 samples, 0.36%)</title><rect x="738.6" y="467.0" width="4.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="741.6" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (64 samples, 0.36%)</title><rect x="738.6" y="451.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="741.6" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (64 samples, 0.36%)</title><rect x="738.6" y="435.0" width="4.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="741.6" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (60 samples, 0.34%)</title><rect x="738.6" y="419.0" width="4.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="741.6" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (60 samples, 0.34%)</title><rect x="738.6" y="403.0" width="4.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="741.6" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (59 samples, 0.34%)</title><rect x="738.6" y="387.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="741.6" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (52 samples, 0.30%)</title><rect x="738.8" y="371.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="741.8" y="382.0"></text>
</g>
<g>
<title>ip_local_out (15 samples, 0.09%)</title><rect x="738.9" y="355.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="741.9" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (15 samples, 0.09%)</title><rect x="738.9" y="339.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="741.9" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.09%)</title><rect x="738.9" y="323.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="741.9" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.04%)</title><rect x="738.9" y="307.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="741.9" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (6 samples, 0.03%)</title><rect x="739.5" y="307.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="742.5" y="318.0"></text>
</g>
<g>
<title>ip_output (35 samples, 0.20%)</title><rect x="739.9" y="355.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="742.9" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (32 samples, 0.18%)</title><rect x="739.9" y="339.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="742.9" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (31 samples, 0.18%)</title><rect x="740.0" y="323.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="743.0" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (30 samples, 0.17%)</title><rect x="740.1" y="307.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="743.1" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (30 samples, 0.17%)</title><rect x="740.1" y="291.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="743.1" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (30 samples, 0.17%)</title><rect x="740.1" y="275.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="743.1" y="286.0"></text>
</g>
<g>
<title>net_rx_action (28 samples, 0.16%)</title><rect x="740.2" y="259.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="743.2" y="270.0"></text>
</g>
<g>
<title>process_backlog (27 samples, 0.15%)</title><rect x="740.3" y="243.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="743.3" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (27 samples, 0.15%)</title><rect x="740.3" y="227.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="743.3" y="238.0"></text>
</g>
<g>
<title>ip_rcv (27 samples, 0.15%)</title><rect x="740.3" y="211.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="743.3" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (24 samples, 0.14%)</title><rect x="740.3" y="195.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="743.3" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (19 samples, 0.11%)</title><rect x="740.3" y="179.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="743.3" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (19 samples, 0.11%)</title><rect x="740.3" y="163.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="743.3" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (19 samples, 0.11%)</title><rect x="740.3" y="147.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="743.3" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (17 samples, 0.10%)</title><rect x="740.3" y="131.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="743.3" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (17 samples, 0.10%)</title><rect x="740.3" y="115.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="743.3" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (13 samples, 0.07%)</title><rect x="740.5" y="99.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="743.5" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (13 samples, 0.07%)</title><rect x="740.5" y="83.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="743.5" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 0.07%)</title><rect x="740.5" y="67.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="743.5" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.07%)</title><rect x="740.5" y="51.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="743.5" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="741.5" y="179.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="744.5" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="741.5" y="163.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="744.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (548 samples, 3.12%)</title><rect x="743.3" y="643.0" width="36.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="746.3" y="654.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (548 samples, 3.12%)</title><rect x="743.3" y="627.0" width="36.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="746.3" y="638.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (548 samples, 3.12%)</title><rect x="743.3" y="611.0" width="36.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="746.3" y="622.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (545 samples, 3.11%)</title><rect x="743.5" y="595.0" width="36.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.5" y="606.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (27 samples, 0.15%)</title><rect x="743.6" y="579.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="746.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (27 samples, 0.15%)</title><rect x="743.6" y="563.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.6" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (27 samples, 0.15%)</title><rect x="743.6" y="547.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.6" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (27 samples, 0.15%)</title><rect x="743.6" y="531.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="746.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (27 samples, 0.15%)</title><rect x="743.6" y="515.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="746.6" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (25 samples, 0.14%)</title><rect x="743.6" y="499.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="746.6" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (18 samples, 0.10%)</title><rect x="743.7" y="483.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="746.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (17 samples, 0.10%)</title><rect x="743.7" y="467.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="746.7" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (17 samples, 0.10%)</title><rect x="743.7" y="451.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.10%)</title><rect x="743.7" y="435.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="746.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (16 samples, 0.09%)</title><rect x="743.8" y="419.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (15 samples, 0.09%)</title><rect x="743.9" y="403.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="746.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (14 samples, 0.08%)</title><rect x="744.0" y="387.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.0" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (14 samples, 0.08%)</title><rect x="744.0" y="371.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.0" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (14 samples, 0.08%)</title><rect x="744.0" y="355.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (13 samples, 0.07%)</title><rect x="744.0" y="339.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.0" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (13 samples, 0.07%)</title><rect x="744.0" y="323.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="747.0" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (13 samples, 0.07%)</title><rect x="744.0" y="307.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="747.0" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (13 samples, 0.07%)</title><rect x="744.0" y="291.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.0" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="744.1" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="747.1" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="744.1" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="747.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (8 samples, 0.05%)</title><rect x="744.4" y="275.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (8 samples, 0.05%)</title><rect x="744.4" y="259.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (7 samples, 0.04%)</title><rect x="744.4" y="243.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.4" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (7 samples, 0.04%)</title><rect x="744.4" y="227.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.03%)</title><rect x="744.9" y="483.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="747.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.03%)</title><rect x="744.9" y="467.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6 samples, 0.03%)</title><rect x="744.9" y="451.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.9" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6 samples, 0.03%)</title><rect x="744.9" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="747.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="744.9" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="747.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="744.9" y="403.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.02%)</title><rect x="744.9" y="387.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4 samples, 0.02%)</title><rect x="744.9" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4 samples, 0.02%)</title><rect x="744.9" y="355.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="747.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4 samples, 0.02%)</title><rect x="744.9" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="747.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (517 samples, 2.95%)</title><rect x="745.4" y="579.0" width="34.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="748.4" y="590.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (517 samples, 2.95%)</title><rect x="745.4" y="563.0" width="34.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="748.4" y="574.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (460 samples, 2.62%)</title><rect x="745.4" y="547.0" width="31.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="748.4" y="558.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (28 samples, 0.16%)</title><rect x="745.6" y="531.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="748.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (28 samples, 0.16%)</title><rect x="745.6" y="515.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="748.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (27 samples, 0.15%)</title><rect x="745.6" y="499.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="748.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (25 samples, 0.14%)</title><rect x="745.8" y="483.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="748.8" y="494.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (4 samples, 0.02%)</title><rect x="746.0" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="749.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (14 samples, 0.08%)</title><rect x="746.5" y="467.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="749.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.04%)</title><rect x="747.0" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="750.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (25 samples, 0.14%)</title><rect x="747.8" y="531.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (17 samples, 0.10%)</title><rect x="748.0" y="515.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="751.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (14 samples, 0.08%)</title><rect x="748.1" y="499.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (12 samples, 0.07%)</title><rect x="748.1" y="483.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (12 samples, 0.07%)</title><rect x="748.1" y="467.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="751.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (12 samples, 0.07%)</title><rect x="748.1" y="451.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="751.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (11 samples, 0.06%)</title><rect x="748.2" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (11 samples, 0.06%)</title><rect x="748.2" y="419.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (11 samples, 0.06%)</title><rect x="748.2" y="403.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.02%)</title><rect x="748.7" y="387.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="748.7" y="371.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="751.7" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="748.7" y="355.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="751.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (5 samples, 0.03%)</title><rect x="749.1" y="515.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="752.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (400 samples, 2.28%)</title><rect x="749.5" y="531.0" width="26.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="752.5" y="542.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (400 samples, 2.28%)</title><rect x="749.5" y="515.0" width="26.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="752.5" y="526.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (400 samples, 2.28%)</title><rect x="749.5" y="499.0" width="26.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="752.5" y="510.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.05%)</title><rect x="749.5" y="483.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="752.5" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.05%)</title><rect x="749.5" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.5" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.03%)</title><rect x="749.7" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (66 samples, 0.38%)</title><rect x="750.0" y="483.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="753.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (4 samples, 0.02%)</title><rect x="750.0" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="753.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (27 samples, 0.15%)</title><rect x="750.3" y="467.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="753.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (27 samples, 0.15%)</title><rect x="750.3" y="451.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (22 samples, 0.13%)</title><rect x="750.6" y="435.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="753.6" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (22 samples, 0.13%)</title><rect x="750.6" y="419.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.6" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (19 samples, 0.11%)</title><rect x="750.8" y="403.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="753.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (19 samples, 0.11%)</title><rect x="750.8" y="387.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (19 samples, 0.11%)</title><rect x="750.8" y="371.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.8" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (19 samples, 0.11%)</title><rect x="750.8" y="355.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (16 samples, 0.09%)</title><rect x="751.0" y="339.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="754.0" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="751.6" y="323.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (35 samples, 0.20%)</title><rect x="752.1" y="467.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="755.1" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (35 samples, 0.20%)</title><rect x="752.1" y="451.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="755.1" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (33 samples, 0.19%)</title><rect x="752.2" y="435.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="755.2" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (30 samples, 0.17%)</title><rect x="752.4" y="419.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="755.4" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (29 samples, 0.17%)</title><rect x="752.5" y="403.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="755.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (28 samples, 0.16%)</title><rect x="752.6" y="387.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="755.6" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (22 samples, 0.13%)</title><rect x="753.0" y="371.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.0" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="753.2" y="355.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.2" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.05%)</title><rect x="753.3" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="756.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="753.5" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.5" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="753.5" y="307.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.5" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.05%)</title><rect x="753.8" y="355.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="756.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.05%)</title><rect x="753.8" y="339.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="756.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (326 samples, 1.86%)</title><rect x="754.4" y="483.0" width="22.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="757.4" y="494.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (211 samples, 1.20%)</title><rect x="759.2" y="467.0" width="14.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="762.2" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (211 samples, 1.20%)</title><rect x="759.2" y="451.0" width="14.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.2" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (199 samples, 1.13%)</title><rect x="760.0" y="435.0" width="13.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="763.0" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (198 samples, 1.13%)</title><rect x="760.1" y="419.0" width="13.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="763.1" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (44 samples, 0.25%)</title><rect x="770.0" y="403.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="773.0" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (39 samples, 0.22%)</title><rect x="770.3" y="387.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (35 samples, 0.20%)</title><rect x="770.6" y="371.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="773.6" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (35 samples, 0.20%)</title><rect x="770.6" y="355.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="773.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (16 samples, 0.09%)</title><rect x="771.9" y="339.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.9" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="772.6" y="323.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="775.6" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.03%)</title><rect x="772.9" y="403.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="775.9" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (34 samples, 0.19%)</title><rect x="773.4" y="467.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.4" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (31 samples, 0.18%)</title><rect x="773.6" y="451.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="776.6" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (31 samples, 0.18%)</title><rect x="773.6" y="435.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.6" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (28 samples, 0.16%)</title><rect x="773.8" y="419.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="776.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="773.9" y="403.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="776.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="773.9" y="387.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.9" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (24 samples, 0.14%)</title><rect x="774.0" y="371.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="777.0" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="774.2" y="355.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="777.2" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="774.2" y="339.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.05%)</title><rect x="774.2" y="323.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="777.2" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.05%)</title><rect x="774.2" y="307.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="777.2" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (12 samples, 0.07%)</title><rect x="774.8" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="777.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (12 samples, 0.07%)</title><rect x="774.8" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="777.8" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (7 samples, 0.04%)</title><rect x="775.7" y="467.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (57 samples, 0.32%)</title><rect x="776.4" y="547.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="779.4" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (53 samples, 0.30%)</title><rect x="776.4" y="531.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.4" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (53 samples, 0.30%)</title><rect x="776.4" y="515.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="779.4" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (44 samples, 0.25%)</title><rect x="776.9" y="499.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.9" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (44 samples, 0.25%)</title><rect x="776.9" y="483.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="779.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (44 samples, 0.25%)</title><rect x="776.9" y="467.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="779.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (44 samples, 0.25%)</title><rect x="776.9" y="451.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="779.9" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (43 samples, 0.25%)</title><rect x="777.0" y="435.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="780.0" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (43 samples, 0.25%)</title><rect x="777.0" y="419.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="780.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (22 samples, 0.13%)</title><rect x="777.0" y="403.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="780.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (17 samples, 0.10%)</title><rect x="777.3" y="387.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (17 samples, 0.10%)</title><rect x="777.3" y="371.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="780.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (17 samples, 0.10%)</title><rect x="777.3" y="355.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (8 samples, 0.05%)</title><rect x="777.3" y="339.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.3" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="777.3" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.03%)</title><rect x="777.3" y="307.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="780.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.03%)</title><rect x="777.4" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="777.5" y="275.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (4 samples, 0.02%)</title><rect x="777.9" y="339.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="780.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (5 samples, 0.03%)</title><rect x="778.1" y="339.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="781.1" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="778.1" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="781.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.03%)</title><rect x="778.1" y="307.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="778.2" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="781.2" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="778.2" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.2" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="778.2" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="781.2" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="778.2" y="243.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="781.2" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="778.2" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="781.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (21 samples, 0.12%)</title><rect x="778.5" y="403.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="781.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (21 samples, 0.12%)</title><rect x="778.5" y="387.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.5" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (21 samples, 0.12%)</title><rect x="778.5" y="371.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="781.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (21 samples, 0.12%)</title><rect x="778.5" y="355.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="781.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (5 samples, 0.03%)</title><rect x="778.5" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (5 samples, 0.03%)</title><rect x="778.5" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="781.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (5 samples, 0.03%)</title><rect x="778.5" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="781.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (5 samples, 0.03%)</title><rect x="778.5" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.5" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (16 samples, 0.09%)</title><rect x="778.8" y="339.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="781.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (16 samples, 0.09%)</title><rect x="778.8" y="323.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.8" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (16 samples, 0.09%)</title><rect x="778.8" y="307.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.8" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (16 samples, 0.09%)</title><rect x="778.8" y="291.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (16 samples, 0.09%)</title><rect x="778.8" y="275.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="781.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (16 samples, 0.09%)</title><rect x="778.8" y="259.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="781.8" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (15 samples, 0.09%)</title><rect x="778.9" y="243.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="781.9" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (15 samples, 0.09%)</title><rect x="778.9" y="227.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.9" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.03%)</title><rect x="779.5" y="211.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="782.5" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="779.5" y="195.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="782.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4 samples, 0.02%)</title><rect x="779.9" y="531.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="782.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="779.9" y="515.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="782.9" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.02%)</title><rect x="779.9" y="499.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="782.9" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (4 samples, 0.02%)</title><rect x="779.9" y="483.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="782.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (4 samples, 0.02%)</title><rect x="779.9" y="467.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="782.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (4 samples, 0.02%)</title><rect x="779.9" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="782.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.sendResponse (170 samples, 0.97%)</title><rect x="780.2" y="643.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="783.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (170 samples, 0.97%)</title><rect x="780.2" y="627.0" width="11.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="783.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (167 samples, 0.95%)</title><rect x="780.4" y="611.0" width="11.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="783.4" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (165 samples, 0.94%)</title><rect x="780.5" y="595.0" width="11.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="783.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (165 samples, 0.94%)</title><rect x="780.5" y="579.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.5" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (164 samples, 0.93%)</title><rect x="780.6" y="563.0" width="11.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="783.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (162 samples, 0.92%)</title><rect x="780.7" y="547.0" width="10.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.7" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (156 samples, 0.89%)</title><rect x="780.8" y="531.0" width="10.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="783.8" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (151 samples, 0.86%)</title><rect x="781.2" y="515.0" width="10.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="784.2" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (151 samples, 0.86%)</title><rect x="781.2" y="499.0" width="10.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="784.2" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (146 samples, 0.83%)</title><rect x="781.5" y="483.0" width="9.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="784.5" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (146 samples, 0.83%)</title><rect x="781.5" y="467.0" width="9.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="784.5" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (140 samples, 0.80%)</title><rect x="781.5" y="451.0" width="9.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="784.5" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (140 samples, 0.80%)</title><rect x="781.5" y="435.0" width="9.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="784.5" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (139 samples, 0.79%)</title><rect x="781.6" y="419.0" width="9.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="784.6" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (127 samples, 0.72%)</title><rect x="781.6" y="403.0" width="8.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="784.6" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (127 samples, 0.72%)</title><rect x="781.6" y="387.0" width="8.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="784.6" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (122 samples, 0.70%)</title><rect x="781.7" y="371.0" width="8.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="784.7" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (117 samples, 0.67%)</title><rect x="781.8" y="355.0" width="7.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="784.8" y="366.0"></text>
</g>
<g>
<title>ip_local_out (25 samples, 0.14%)</title><rect x="782.0" y="339.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="785.0" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (25 samples, 0.14%)</title><rect x="782.0" y="323.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="785.0" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (23 samples, 0.13%)</title><rect x="782.1" y="307.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="785.1" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (14 samples, 0.08%)</title><rect x="782.6" y="291.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="785.6" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (4 samples, 0.02%)</title><rect x="783.1" y="275.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="786.1" y="286.0"></text>
</g>
<g>
<title>ip_output (90 samples, 0.51%)</title><rect x="783.6" y="339.0" width="6.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="786.6" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (84 samples, 0.48%)</title><rect x="783.7" y="323.0" width="5.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="786.7" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.03%)</title><rect x="783.8" y="307.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="786.8" y="318.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (77 samples, 0.44%)</title><rect x="784.2" y="307.0" width="5.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="787.2" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (77 samples, 0.44%)</title><rect x="784.2" y="291.0" width="5.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="787.2" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (73 samples, 0.42%)</title><rect x="784.4" y="275.0" width="5.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="787.4" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (73 samples, 0.42%)</title><rect x="784.4" y="259.0" width="5.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="787.4" y="270.0"></text>
</g>
<g>
<title>net_rx_action (73 samples, 0.42%)</title><rect x="784.4" y="243.0" width="5.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="787.4" y="254.0"></text>
</g>
<g>
<title>process_backlog (72 samples, 0.41%)</title><rect x="784.5" y="227.0" width="4.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="787.5" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (70 samples, 0.40%)</title><rect x="784.6" y="211.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="787.6" y="222.0"></text>
</g>
<g>
<title>ip_rcv (70 samples, 0.40%)</title><rect x="784.6" y="195.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="787.6" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (51 samples, 0.29%)</title><rect x="784.7" y="179.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="787.7" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (45 samples, 0.26%)</title><rect x="784.7" y="163.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="787.7" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (45 samples, 0.26%)</title><rect x="784.7" y="147.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="787.7" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (43 samples, 0.25%)</title><rect x="784.9" y="131.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="787.9" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.03%)</title><rect x="784.9" y="115.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="787.9" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (37 samples, 0.21%)</title><rect x="785.3" y="115.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="788.3" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (37 samples, 0.21%)</title><rect x="785.3" y="99.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="788.3" y="110.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.05%)</title><rect x="785.4" y="83.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="788.4" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (27 samples, 0.15%)</title><rect x="785.9" y="83.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="788.9" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (23 samples, 0.13%)</title><rect x="786.0" y="67.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="789.0" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (21 samples, 0.12%)</title><rect x="786.1" y="51.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="789.1" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.11%)</title><rect x="786.2" y="35.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="789.2" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.03%)</title><rect x="787.7" y="163.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="790.7" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.03%)</title><rect x="787.7" y="147.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="790.7" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (17 samples, 0.10%)</title><rect x="788.2" y="179.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="791.2" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (13 samples, 0.07%)</title><rect x="788.3" y="163.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="791.3" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="789.4" y="323.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="792.4" y="334.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.02%)</title><rect x="790.2" y="403.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="793.2" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.02%)</title><rect x="790.2" y="387.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="793.2" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.03%)</title><rect x="790.6" y="403.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="793.6" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.03%)</title><rect x="790.6" y="387.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="793.6" y="398.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.03%)</title><rect x="790.9" y="451.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="793.9" y="462.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.03%)</title><rect x="791.0" y="435.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="794.0" y="446.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="791.3" y="531.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="794.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="791.3" y="515.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="794.3" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.02%)</title><rect x="791.3" y="499.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="794.3" y="510.0"></text>
</g>
<g>
<title>[worker-3 tid=14266] (1,023 samples, 5.83%)</title><rect x="791.6" y="739.0" width="68.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="794.6" y="750.0">[worker..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (13 samples, 0.07%)</title><rect x="791.8" y="723.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="794.8" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (13 samples, 0.07%)</title><rect x="791.8" y="707.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="794.8" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (10 samples, 0.06%)</title><rect x="791.9" y="691.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="794.9" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (9 samples, 0.05%)</title><rect x="791.9" y="675.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="794.9" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (6 samples, 0.03%)</title><rect x="792.0" y="659.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="795.0" y="670.0"></text>
</g>
<g>
<title>[unknown_Java] (38 samples, 0.22%)</title><rect x="792.7" y="723.0" width="2.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="795.7" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.03%)</title><rect x="794.9" y="707.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="797.9" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.run (969 samples, 5.52%)</title><rect x="795.3" y="723.0" width="65.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="798.3" y="734.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (969 samples, 5.52%)</title><rect x="795.3" y="707.0" width="65.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="798.3" y="718.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (969 samples, 5.52%)</title><rect x="795.3" y="691.0" width="65.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="798.3" y="702.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (19 samples, 0.11%)</title><rect x="795.3" y="675.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="798.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (18 samples, 0.10%)</title><rect x="795.4" y="659.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="798.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10 samples, 0.06%)</title><rect x="795.4" y="643.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="798.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.06%)</title><rect x="795.4" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.06%)</title><rect x="795.4" y="611.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.4" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 0.05%)</title><rect x="795.4" y="595.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="798.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.04%)</title><rect x="796.2" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="799.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.04%)</title><rect x="796.2" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.03%)</title><rect x="796.2" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.03%)</title><rect x="796.2" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="799.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.03%)</title><rect x="796.2" y="579.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="799.2" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.02%)</title><rect x="796.4" y="563.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="799.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (949 samples, 5.41%)</title><rect x="796.6" y="675.0" width="63.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="799.6" y="686.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (949 samples, 5.41%)</title><rect x="796.6" y="659.0" width="63.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="799.6" y="670.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (102 samples, 0.58%)</title><rect x="796.7" y="643.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="799.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (102 samples, 0.58%)</title><rect x="796.7" y="627.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="799.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (102 samples, 0.58%)</title><rect x="796.7" y="611.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.7" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.02%)</title><rect x="796.7" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (98 samples, 0.56%)</title><rect x="797.0" y="595.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="800.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (98 samples, 0.56%)</title><rect x="797.0" y="579.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (16 samples, 0.09%)</title><rect x="797.0" y="563.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="800.0" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (16 samples, 0.09%)</title><rect x="797.0" y="547.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="800.0" y="558.0"></text>
</g>
<g>
<title>__libc_recv (14 samples, 0.08%)</title><rect x="797.2" y="531.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="800.2" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="797.3" y="515.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="800.3" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="797.3" y="499.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="800.3" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (11 samples, 0.06%)</title><rect x="797.3" y="483.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="800.3" y="494.0"></text>
</g>
<g>
<title>__sys_recvfrom (11 samples, 0.06%)</title><rect x="797.3" y="467.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="800.3" y="478.0"></text>
</g>
<g>
<title>inet_recvmsg (8 samples, 0.05%)</title><rect x="797.4" y="451.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="800.4" y="462.0"></text>
</g>
<g>
<title>tcp_recvmsg (8 samples, 0.05%)</title><rect x="797.4" y="435.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="800.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (4 samples, 0.02%)</title><rect x="798.1" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="801.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (15 samples, 0.09%)</title><rect x="798.4" y="563.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="801.4" y="574.0"></text>
</g>
<g>
<title>setsockopt (14 samples, 0.08%)</title><rect x="798.5" y="547.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="801.5" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="798.8" y="531.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="801.8" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="798.8" y="515.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="801.8" y="526.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (8 samples, 0.05%)</title><rect x="798.9" y="499.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="801.9" y="510.0"></text>
</g>
<g>
<title>__sys_setsockopt (8 samples, 0.05%)</title><rect x="798.9" y="483.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="801.9" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (60 samples, 0.34%)</title><rect x="799.4" y="563.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.4" y="574.0"></text>
</g>
<g>
<title>.annobin_send.c (57 samples, 0.32%)</title><rect x="799.5" y="547.0" width="3.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="802.5" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (56 samples, 0.32%)</title><rect x="799.6" y="531.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="802.6" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (56 samples, 0.32%)</title><rect x="799.6" y="515.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="802.6" y="526.0"></text>
</g>
<g>
<title>__x64_sys_sendto (56 samples, 0.32%)</title><rect x="799.6" y="499.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="802.6" y="510.0"></text>
</g>
<g>
<title>__sys_sendto (55 samples, 0.31%)</title><rect x="799.6" y="483.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="802.6" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (55 samples, 0.31%)</title><rect x="799.6" y="467.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="802.6" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (54 samples, 0.31%)</title><rect x="799.7" y="451.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="802.7" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (54 samples, 0.31%)</title><rect x="799.7" y="435.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="802.7" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (54 samples, 0.31%)</title><rect x="799.7" y="419.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="802.7" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (54 samples, 0.31%)</title><rect x="799.7" y="403.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="802.7" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (53 samples, 0.30%)</title><rect x="799.7" y="387.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="802.7" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (50 samples, 0.29%)</title><rect x="799.7" y="371.0" width="3.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="802.7" y="382.0"></text>
</g>
<g>
<title>ip_local_out (9 samples, 0.05%)</title><rect x="799.9" y="355.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="802.9" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (9 samples, 0.05%)</title><rect x="799.9" y="339.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="802.9" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.05%)</title><rect x="799.9" y="323.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="802.9" y="334.0"></text>
</g>
<g>
<title>ip_output (39 samples, 0.22%)</title><rect x="800.5" y="355.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="803.5" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (38 samples, 0.22%)</title><rect x="800.5" y="339.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="803.5" y="350.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.03%)</title><rect x="800.5" y="323.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="803.5" y="334.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.03%)</title><rect x="800.5" y="307.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="803.5" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.03%)</title><rect x="800.5" y="291.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="803.5" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (32 samples, 0.18%)</title><rect x="800.9" y="323.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="803.9" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (32 samples, 0.18%)</title><rect x="800.9" y="307.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="803.9" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (32 samples, 0.18%)</title><rect x="800.9" y="291.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="803.9" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (32 samples, 0.18%)</title><rect x="800.9" y="275.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="803.9" y="286.0"></text>
</g>
<g>
<title>net_rx_action (32 samples, 0.18%)</title><rect x="800.9" y="259.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="803.9" y="270.0"></text>
</g>
<g>
<title>process_backlog (32 samples, 0.18%)</title><rect x="800.9" y="243.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="803.9" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (32 samples, 0.18%)</title><rect x="800.9" y="227.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="803.9" y="238.0"></text>
</g>
<g>
<title>ip_rcv (32 samples, 0.18%)</title><rect x="800.9" y="211.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="803.9" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (29 samples, 0.17%)</title><rect x="800.9" y="195.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="803.9" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (27 samples, 0.15%)</title><rect x="800.9" y="179.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="803.9" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (27 samples, 0.15%)</title><rect x="800.9" y="163.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="803.9" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (27 samples, 0.15%)</title><rect x="800.9" y="147.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="803.9" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (25 samples, 0.14%)</title><rect x="801.0" y="131.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="804.0" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (25 samples, 0.14%)</title><rect x="801.0" y="115.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="804.0" y="126.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.03%)</title><rect x="801.1" y="99.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="804.1" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (17 samples, 0.10%)</title><rect x="801.5" y="99.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="804.5" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (17 samples, 0.10%)</title><rect x="801.5" y="83.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="804.5" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (16 samples, 0.09%)</title><rect x="801.6" y="67.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="804.6" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (16 samples, 0.09%)</title><rect x="801.6" y="51.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="804.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (670 samples, 3.82%)</title><rect x="803.6" y="643.0" width="45.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="806.6" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (670 samples, 3.82%)</title><rect x="803.6" y="627.0" width="45.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="806.6" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (670 samples, 3.82%)</title><rect x="803.6" y="611.0" width="45.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="806.6" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (667 samples, 3.80%)</title><rect x="803.8" y="595.0" width="44.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="806.8" y="606.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (28 samples, 0.16%)</title><rect x="803.8" y="579.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="806.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (28 samples, 0.16%)</title><rect x="803.8" y="563.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="806.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (28 samples, 0.16%)</title><rect x="803.8" y="547.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="806.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (28 samples, 0.16%)</title><rect x="803.8" y="531.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="806.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (27 samples, 0.15%)</title><rect x="803.8" y="515.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (24 samples, 0.14%)</title><rect x="803.9" y="499.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.9" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (19 samples, 0.11%)</title><rect x="803.9" y="483.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="806.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (19 samples, 0.11%)</title><rect x="803.9" y="467.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="806.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (19 samples, 0.11%)</title><rect x="803.9" y="451.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="806.9" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.10%)</title><rect x="804.0" y="435.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="807.0" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.09%)</title><rect x="804.2" y="419.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="807.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (14 samples, 0.08%)</title><rect x="804.2" y="403.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (12 samples, 0.07%)</title><rect x="804.4" y="387.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="807.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (12 samples, 0.07%)</title><rect x="804.4" y="371.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="807.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (12 samples, 0.07%)</title><rect x="804.4" y="355.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="807.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (12 samples, 0.07%)</title><rect x="804.4" y="339.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="807.4" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (12 samples, 0.07%)</title><rect x="804.4" y="323.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="807.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (12 samples, 0.07%)</title><rect x="804.4" y="307.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="807.4" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (12 samples, 0.07%)</title><rect x="804.4" y="291.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="807.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="804.4" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="807.4" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="804.4" y="259.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (7 samples, 0.04%)</title><rect x="804.7" y="275.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (7 samples, 0.04%)</title><rect x="804.7" y="259.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.7" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="804.7" y="243.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.7" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.03%)</title><rect x="804.7" y="227.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="807.7" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="804.8" y="211.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="807.8" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="804.8" y="195.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="807.8" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.03%)</title><rect x="805.2" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.2" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.03%)</title><rect x="805.2" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="808.2" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.03%)</title><rect x="805.2" y="451.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.2" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.03%)</title><rect x="805.2" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="805.2" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="805.2" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (639 samples, 3.64%)</title><rect x="805.6" y="579.0" width="43.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="808.6" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (639 samples, 3.64%)</title><rect x="805.6" y="563.0" width="43.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.6" y="574.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (555 samples, 3.16%)</title><rect x="805.6" y="547.0" width="37.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="808.6" y="558.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (25 samples, 0.14%)</title><rect x="805.6" y="531.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (25 samples, 0.14%)</title><rect x="805.6" y="515.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="808.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (23 samples, 0.13%)</title><rect x="805.7" y="499.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="808.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (22 samples, 0.13%)</title><rect x="805.8" y="483.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (20 samples, 0.11%)</title><rect x="805.9" y="467.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (13 samples, 0.07%)</title><rect x="806.4" y="451.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="809.4" y="462.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.03%)</title><rect x="806.5" y="435.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="809.5" y="446.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (5 samples, 0.03%)</title><rect x="806.9" y="435.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="809.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.02%)</title><rect x="807.3" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="810.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="807.3" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="810.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (4 samples, 0.02%)</title><rect x="807.3" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="810.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (4 samples, 0.02%)</title><rect x="807.3" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="810.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (4 samples, 0.02%)</title><rect x="807.3" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="810.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (28 samples, 0.16%)</title><rect x="807.6" y="531.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (20 samples, 0.11%)</title><rect x="807.8" y="515.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (16 samples, 0.09%)</title><rect x="807.9" y="499.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="810.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (16 samples, 0.09%)</title><rect x="807.9" y="483.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="810.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (16 samples, 0.09%)</title><rect x="807.9" y="467.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="810.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (16 samples, 0.09%)</title><rect x="807.9" y="451.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="810.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (15 samples, 0.09%)</title><rect x="807.9" y="435.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="810.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (15 samples, 0.09%)</title><rect x="807.9" y="419.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (13 samples, 0.07%)</title><rect x="808.1" y="403.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="811.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.04%)</title><rect x="808.5" y="387.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="811.5" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="808.5" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.03%)</title><rect x="808.5" y="355.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="811.5" y="366.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="808.7" y="339.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="811.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (5 samples, 0.03%)</title><rect x="809.1" y="515.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="812.1" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5 samples, 0.03%)</title><rect x="809.1" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="812.1" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="809.2" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (498 samples, 2.84%)</title><rect x="809.5" y="531.0" width="33.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="812.5" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (498 samples, 2.84%)</title><rect x="809.5" y="515.0" width="33.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="812.5" y="526.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (498 samples, 2.84%)</title><rect x="809.5" y="499.0" width="33.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.5" y="510.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (74 samples, 0.42%)</title><rect x="809.7" y="483.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="812.7" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (6 samples, 0.03%)</title><rect x="809.7" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="812.7" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (36 samples, 0.21%)</title><rect x="810.1" y="467.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="813.1" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (36 samples, 0.21%)</title><rect x="810.1" y="451.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.1" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (30 samples, 0.17%)</title><rect x="810.5" y="435.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="813.5" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (30 samples, 0.17%)</title><rect x="810.5" y="419.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.5" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (28 samples, 0.16%)</title><rect x="810.6" y="403.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="810.7" y="387.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="813.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="810.7" y="371.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.7" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="810.7" y="355.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="813.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.06%)</title><rect x="810.7" y="339.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.7" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="810.7" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.05%)</title><rect x="810.8" y="307.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="813.8" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.05%)</title><rect x="810.8" y="291.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="813.8" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (17 samples, 0.10%)</title><rect x="811.4" y="339.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="814.4" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (32 samples, 0.18%)</title><rect x="812.5" y="467.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="815.5" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (32 samples, 0.18%)</title><rect x="812.5" y="451.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="815.5" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (30 samples, 0.17%)</title><rect x="812.6" y="435.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="815.6" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (29 samples, 0.17%)</title><rect x="812.7" y="419.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (29 samples, 0.17%)</title><rect x="812.7" y="403.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="815.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (28 samples, 0.16%)</title><rect x="812.8" y="387.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="815.8" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="813.0" y="371.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="816.0" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="813.3" y="355.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="816.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.05%)</title><rect x="813.4" y="339.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="816.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="813.6" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="816.6" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="813.6" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="816.6" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.06%)</title><rect x="813.9" y="355.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="816.9" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.06%)</title><rect x="813.9" y="339.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="816.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="814.4" y="323.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="817.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (421 samples, 2.40%)</title><rect x="814.6" y="483.0" width="28.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="817.6" y="494.0">ru..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (252 samples, 1.44%)</title><rect x="820.6" y="467.0" width="17.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="823.6" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (252 samples, 1.44%)</title><rect x="820.6" y="451.0" width="17.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.6" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (239 samples, 1.36%)</title><rect x="821.5" y="435.0" width="16.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="824.5" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (239 samples, 1.36%)</title><rect x="821.5" y="419.0" width="16.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="824.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="831.9" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="834.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (9 samples, 0.05%)</title><rect x="832.2" y="403.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="835.2" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (64 samples, 0.36%)</title><rect x="832.8" y="403.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (58 samples, 0.33%)</title><rect x="833.2" y="387.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="836.2" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (52 samples, 0.30%)</title><rect x="833.6" y="371.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="836.6" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (50 samples, 0.29%)</title><rect x="833.8" y="355.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="836.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="835.7" y="339.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="838.7" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="835.7" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="838.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.03%)</title><rect x="835.7" y="307.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="838.7" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.03%)</title><rect x="835.7" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="838.7" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (13 samples, 0.07%)</title><rect x="836.1" y="339.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.1" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.03%)</title><rect x="837.1" y="403.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="840.1" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (48 samples, 0.27%)</title><rect x="837.6" y="467.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="840.6" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (47 samples, 0.27%)</title><rect x="837.7" y="451.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="840.7" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (46 samples, 0.26%)</title><rect x="837.7" y="435.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="840.7" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (39 samples, 0.22%)</title><rect x="838.2" y="419.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="841.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (38 samples, 0.22%)</title><rect x="838.3" y="403.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="841.3" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (38 samples, 0.22%)</title><rect x="838.3" y="387.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="841.3" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (28 samples, 0.16%)</title><rect x="838.3" y="371.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.3" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="838.4" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="841.4" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="838.4" y="339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="841.4" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (20 samples, 0.11%)</title><rect x="838.9" y="355.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="841.9" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (20 samples, 0.11%)</title><rect x="838.9" y="339.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="841.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.05%)</title><rect x="839.7" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="842.7" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.04%)</title><rect x="839.7" y="307.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.7" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (9 samples, 0.05%)</title><rect x="840.2" y="371.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.2" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (29 samples, 0.17%)</title><rect x="840.8" y="467.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="843.8" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (13 samples, 0.07%)</title><rect x="841.7" y="451.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="844.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (84 samples, 0.48%)</title><rect x="843.0" y="547.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="846.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (75 samples, 0.43%)</title><rect x="843.0" y="531.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="846.0" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (75 samples, 0.43%)</title><rect x="843.0" y="515.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="846.0" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (60 samples, 0.34%)</title><rect x="844.0" y="499.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="847.0" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (60 samples, 0.34%)</title><rect x="844.0" y="483.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="847.0" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (59 samples, 0.34%)</title><rect x="844.0" y="467.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="847.0" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (58 samples, 0.33%)</title><rect x="844.1" y="451.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="847.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (56 samples, 0.32%)</title><rect x="844.2" y="435.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="847.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (56 samples, 0.32%)</title><rect x="844.2" y="419.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="847.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (33 samples, 0.19%)</title><rect x="844.2" y="403.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="847.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (32 samples, 0.18%)</title><rect x="844.3" y="387.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (32 samples, 0.18%)</title><rect x="844.3" y="371.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="847.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (32 samples, 0.18%)</title><rect x="844.3" y="355.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="847.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (16 samples, 0.09%)</title><rect x="844.3" y="339.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="847.3" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (12 samples, 0.07%)</title><rect x="844.3" y="323.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="847.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11 samples, 0.06%)</title><rect x="844.4" y="307.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="847.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (10 samples, 0.06%)</title><rect x="844.4" y="291.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (10 samples, 0.06%)</title><rect x="844.4" y="275.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.4" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="844.7" y="259.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="847.7" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="844.7" y="243.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="847.7" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="844.8" y="227.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="847.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (10 samples, 0.06%)</title><rect x="845.4" y="339.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="848.4" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="845.5" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="848.5" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="845.5" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="848.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (5 samples, 0.03%)</title><rect x="846.1" y="339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="849.1" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="846.1" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="849.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.03%)</title><rect x="846.1" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.03%)</title><rect x="846.1" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="849.1" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="846.1" y="275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="849.1" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="846.1" y="259.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="849.1" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="846.1" y="243.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="849.1" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="846.1" y="227.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="849.1" y="238.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="846.1" y="211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="849.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (23 samples, 0.13%)</title><rect x="846.5" y="403.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="849.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (23 samples, 0.13%)</title><rect x="846.5" y="387.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="849.5" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (23 samples, 0.13%)</title><rect x="846.5" y="371.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="849.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (23 samples, 0.13%)</title><rect x="846.5" y="355.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="849.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (20 samples, 0.11%)</title><rect x="846.7" y="339.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.7" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (20 samples, 0.11%)</title><rect x="846.7" y="323.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.7" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (20 samples, 0.11%)</title><rect x="846.7" y="307.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="849.7" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (20 samples, 0.11%)</title><rect x="846.7" y="291.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="849.7" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.03%)</title><rect x="846.8" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.03%)</title><rect x="846.8" y="259.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="849.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (12 samples, 0.07%)</title><rect x="847.2" y="275.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (12 samples, 0.07%)</title><rect x="847.2" y="259.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="850.2" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11 samples, 0.06%)</title><rect x="847.2" y="243.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="850.2" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (10 samples, 0.06%)</title><rect x="847.3" y="227.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.3" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.03%)</title><rect x="847.5" y="211.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="850.5" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="847.5" y="195.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.5" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="847.6" y="179.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="850.6" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="847.6" y="163.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.6" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="847.6" y="147.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="850.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.05%)</title><rect x="848.0" y="531.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="851.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.05%)</title><rect x="848.0" y="515.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="851.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.05%)</title><rect x="848.0" y="499.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="851.0" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (8 samples, 0.05%)</title><rect x="848.0" y="483.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="851.0" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (8 samples, 0.05%)</title><rect x="848.0" y="467.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="851.0" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (8 samples, 0.05%)</title><rect x="848.0" y="451.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.0" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="848.0" y="435.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="851.0" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="848.0" y="419.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="851.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (7 samples, 0.04%)</title><rect x="848.1" y="403.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="851.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (7 samples, 0.04%)</title><rect x="848.1" y="387.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="851.1" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (7 samples, 0.04%)</title><rect x="848.1" y="371.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="851.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.04%)</title><rect x="848.1" y="355.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (7 samples, 0.04%)</title><rect x="848.1" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="851.1" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.04%)</title><rect x="848.1" y="323.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="851.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (7 samples, 0.04%)</title><rect x="848.1" y="307.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.1" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.04%)</title><rect x="848.1" y="291.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="851.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (4 samples, 0.02%)</title><rect x="848.3" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4 samples, 0.02%)</title><rect x="848.3" y="259.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="851.3" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="848.3" y="243.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="851.3" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="848.3" y="227.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.sendResponse (176 samples, 1.00%)</title><rect x="848.6" y="643.0" width="11.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (176 samples, 1.00%)</title><rect x="848.6" y="627.0" width="11.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="851.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (169 samples, 0.96%)</title><rect x="849.0" y="611.0" width="11.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="852.0" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (166 samples, 0.95%)</title><rect x="849.2" y="595.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="852.2" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (166 samples, 0.95%)</title><rect x="849.2" y="579.0" width="11.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="852.2" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (165 samples, 0.94%)</title><rect x="849.3" y="563.0" width="11.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="852.3" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (164 samples, 0.93%)</title><rect x="849.4" y="547.0" width="11.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="852.4" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (159 samples, 0.91%)</title><rect x="849.4" y="531.0" width="10.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="852.4" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (152 samples, 0.87%)</title><rect x="849.8" y="515.0" width="10.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="852.8" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (152 samples, 0.87%)</title><rect x="849.8" y="499.0" width="10.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="852.8" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (149 samples, 0.85%)</title><rect x="850.0" y="483.0" width="10.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="853.0" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (149 samples, 0.85%)</title><rect x="850.0" y="467.0" width="10.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="853.0" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (149 samples, 0.85%)</title><rect x="850.0" y="451.0" width="10.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="853.0" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (147 samples, 0.84%)</title><rect x="850.2" y="435.0" width="9.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="853.2" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (147 samples, 0.84%)</title><rect x="850.2" y="419.0" width="9.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="853.2" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (137 samples, 0.78%)</title><rect x="850.3" y="403.0" width="9.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="853.3" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (137 samples, 0.78%)</title><rect x="850.3" y="387.0" width="9.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="853.3" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (132 samples, 0.75%)</title><rect x="850.3" y="371.0" width="8.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="853.3" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (125 samples, 0.71%)</title><rect x="850.5" y="355.0" width="8.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="853.5" y="366.0"></text>
</g>
<g>
<title>ip_local_out (26 samples, 0.15%)</title><rect x="850.6" y="339.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="853.6" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (26 samples, 0.15%)</title><rect x="850.6" y="323.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="853.6" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (26 samples, 0.15%)</title><rect x="850.6" y="307.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="853.6" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.04%)</title><rect x="850.6" y="291.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="853.6" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (12 samples, 0.07%)</title><rect x="851.4" y="291.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="854.4" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (4 samples, 0.02%)</title><rect x="851.4" y="275.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="854.4" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (5 samples, 0.03%)</title><rect x="851.8" y="275.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="854.8" y="286.0"></text>
</g>
<g>
<title>ip_output (98 samples, 0.56%)</title><rect x="852.3" y="339.0" width="6.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="855.3" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (91 samples, 0.52%)</title><rect x="852.4" y="323.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="855.4" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.02%)</title><rect x="852.5" y="307.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="855.5" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.02%)</title><rect x="852.5" y="291.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="855.5" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.02%)</title><rect x="852.5" y="275.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="855.5" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (86 samples, 0.49%)</title><rect x="852.7" y="307.0" width="5.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="855.7" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (86 samples, 0.49%)</title><rect x="852.7" y="291.0" width="5.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="855.7" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (83 samples, 0.47%)</title><rect x="852.9" y="275.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="855.9" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (83 samples, 0.47%)</title><rect x="852.9" y="259.0" width="5.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="855.9" y="270.0"></text>
</g>
<g>
<title>net_rx_action (83 samples, 0.47%)</title><rect x="852.9" y="243.0" width="5.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="855.9" y="254.0"></text>
</g>
<g>
<title>process_backlog (83 samples, 0.47%)</title><rect x="852.9" y="227.0" width="5.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="855.9" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (83 samples, 0.47%)</title><rect x="852.9" y="211.0" width="5.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="855.9" y="222.0"></text>
</g>
<g>
<title>ip_rcv (79 samples, 0.45%)</title><rect x="853.2" y="195.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="856.2" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (64 samples, 0.36%)</title><rect x="853.2" y="179.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="856.2" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (50 samples, 0.29%)</title><rect x="853.2" y="163.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="856.2" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (50 samples, 0.29%)</title><rect x="853.2" y="147.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="856.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (50 samples, 0.29%)</title><rect x="853.2" y="131.0" width="3.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="856.2" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.03%)</title><rect x="853.2" y="115.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="856.2" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (43 samples, 0.25%)</title><rect x="853.7" y="115.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="856.7" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (43 samples, 0.25%)</title><rect x="853.7" y="99.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="856.7" y="110.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.07%)</title><rect x="853.8" y="83.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="856.8" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (27 samples, 0.15%)</title><rect x="854.6" y="83.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="857.6" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (25 samples, 0.14%)</title><rect x="854.6" y="67.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="857.6" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (25 samples, 0.14%)</title><rect x="854.6" y="51.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="857.6" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (25 samples, 0.14%)</title><rect x="854.6" y="35.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="857.6" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.08%)</title><rect x="856.6" y="163.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="859.6" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (9 samples, 0.05%)</title><rect x="856.6" y="147.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="859.6" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.07%)</title><rect x="857.6" y="179.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="860.6" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.05%)</title><rect x="857.6" y="163.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="860.6" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.03%)</title><rect x="858.5" y="323.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="861.5" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.03%)</title><rect x="858.5" y="307.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="861.5" y="318.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.02%)</title><rect x="859.6" y="403.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="862.6" y="414.0"></text>
</g>
<g>
<title>[worker-3 tid=14273] (1,016 samples, 5.79%)</title><rect x="860.5" y="739.0" width="68.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="863.5" y="750.0">[worker..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (9 samples, 0.05%)</title><rect x="860.5" y="723.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="863.5" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.05%)</title><rect x="860.6" y="707.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="863.6" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (8 samples, 0.05%)</title><rect x="860.6" y="691.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="863.6" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.05%)</title><rect x="860.6" y="675.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="863.6" y="686.0"></text>
</g>
<g>
<title>[unknown_Java] (29 samples, 0.17%)</title><rect x="861.1" y="723.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="864.1" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.05%)</title><rect x="862.5" y="707.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="865.5" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="862.5" y="691.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="865.5" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="862.5" y="675.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="865.5" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.05%)</title><rect x="862.5" y="659.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="865.5" y="670.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.05%)</title><rect x="862.5" y="643.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="865.5" y="654.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.05%)</title><rect x="862.5" y="627.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="865.5" y="638.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.04%)</title><rect x="862.6" y="611.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="865.6" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.04%)</title><rect x="862.6" y="595.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="865.6" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.04%)</title><rect x="862.6" y="579.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="865.6" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.run (977 samples, 5.57%)</title><rect x="863.1" y="723.0" width="65.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="866.1" y="734.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (977 samples, 5.57%)</title><rect x="863.1" y="707.0" width="65.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="866.1" y="718.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (977 samples, 5.57%)</title><rect x="863.1" y="691.0" width="65.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="866.1" y="702.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (24 samples, 0.14%)</title><rect x="863.1" y="675.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="866.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (22 samples, 0.13%)</title><rect x="863.1" y="659.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="866.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (18 samples, 0.10%)</title><rect x="863.1" y="643.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="866.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (16 samples, 0.09%)</title><rect x="863.3" y="627.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="866.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (16 samples, 0.09%)</title><rect x="863.3" y="611.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="866.3" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (10 samples, 0.06%)</title><rect x="863.3" y="595.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="866.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.03%)</title><rect x="864.0" y="595.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="867.0" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.02%)</title><rect x="864.0" y="579.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="867.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (953 samples, 5.43%)</title><rect x="864.7" y="675.0" width="64.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.7" y="686.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (953 samples, 5.43%)</title><rect x="864.7" y="659.0" width="64.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="867.7" y="670.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (84 samples, 0.48%)</title><rect x="864.8" y="643.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (84 samples, 0.48%)</title><rect x="864.8" y="627.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="867.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (84 samples, 0.48%)</title><rect x="864.8" y="611.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="867.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (82 samples, 0.47%)</title><rect x="865.0" y="595.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="868.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (82 samples, 0.47%)</title><rect x="865.0" y="579.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="868.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (19 samples, 0.11%)</title><rect x="865.0" y="563.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="868.0" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (19 samples, 0.11%)</title><rect x="865.0" y="547.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="868.0" y="558.0"></text>
</g>
<g>
<title>__libc_recv (14 samples, 0.08%)</title><rect x="865.3" y="531.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="868.3" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.07%)</title><rect x="865.4" y="515.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="868.4" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.07%)</title><rect x="865.4" y="499.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="868.4" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (11 samples, 0.06%)</title><rect x="865.5" y="483.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="868.5" y="494.0"></text>
</g>
<g>
<title>__sys_recvfrom (10 samples, 0.06%)</title><rect x="865.6" y="467.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="868.6" y="478.0"></text>
</g>
<g>
<title>inet_recvmsg (8 samples, 0.05%)</title><rect x="865.6" y="451.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="868.6" y="462.0"></text>
</g>
<g>
<title>tcp_recvmsg (8 samples, 0.05%)</title><rect x="865.6" y="435.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="868.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (4 samples, 0.02%)</title><rect x="866.3" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="869.3" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.02%)</title><rect x="866.3" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="869.3" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (11 samples, 0.06%)</title><rect x="866.6" y="563.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="869.6" y="574.0"></text>
</g>
<g>
<title>setsockopt (10 samples, 0.06%)</title><rect x="866.6" y="547.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="869.6" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="867.0" y="531.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="870.0" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="867.0" y="515.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="870.0" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (43 samples, 0.25%)</title><rect x="867.3" y="563.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="870.3" y="574.0"></text>
</g>
<g>
<title>.annobin_send.c (41 samples, 0.23%)</title><rect x="867.3" y="547.0" width="2.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="870.3" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.21%)</title><rect x="867.6" y="531.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="870.6" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 0.21%)</title><rect x="867.6" y="515.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="870.6" y="526.0"></text>
</g>
<g>
<title>__x64_sys_sendto (36 samples, 0.21%)</title><rect x="867.7" y="499.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="870.7" y="510.0"></text>
</g>
<g>
<title>__sys_sendto (36 samples, 0.21%)</title><rect x="867.7" y="483.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="870.7" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (36 samples, 0.21%)</title><rect x="867.7" y="467.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="870.7" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (35 samples, 0.20%)</title><rect x="867.7" y="451.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="870.7" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (34 samples, 0.19%)</title><rect x="867.8" y="435.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="870.8" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (31 samples, 0.18%)</title><rect x="867.8" y="419.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="870.8" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (31 samples, 0.18%)</title><rect x="867.8" y="403.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="870.8" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (30 samples, 0.17%)</title><rect x="867.8" y="387.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="870.8" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (30 samples, 0.17%)</title><rect x="867.8" y="371.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="870.8" y="382.0"></text>
</g>
<g>
<title>ip_local_out (9 samples, 0.05%)</title><rect x="867.9" y="355.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="870.9" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (9 samples, 0.05%)</title><rect x="867.9" y="339.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="870.9" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.05%)</title><rect x="867.9" y="323.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="870.9" y="334.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (5 samples, 0.03%)</title><rect x="868.1" y="307.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="871.1" y="318.0"></text>
</g>
<g>
<title>ip_output (20 samples, 0.11%)</title><rect x="868.5" y="355.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="871.5" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (19 samples, 0.11%)</title><rect x="868.5" y="339.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="871.5" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (19 samples, 0.11%)</title><rect x="868.5" y="323.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="871.5" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (19 samples, 0.11%)</title><rect x="868.5" y="307.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="871.5" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (19 samples, 0.11%)</title><rect x="868.5" y="291.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="871.5" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (19 samples, 0.11%)</title><rect x="868.5" y="275.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="871.5" y="286.0"></text>
</g>
<g>
<title>net_rx_action (19 samples, 0.11%)</title><rect x="868.5" y="259.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="871.5" y="270.0"></text>
</g>
<g>
<title>process_backlog (18 samples, 0.10%)</title><rect x="868.5" y="243.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="871.5" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (18 samples, 0.10%)</title><rect x="868.5" y="227.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="871.5" y="238.0"></text>
</g>
<g>
<title>ip_rcv (18 samples, 0.10%)</title><rect x="868.5" y="211.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="871.5" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (12 samples, 0.07%)</title><rect x="868.5" y="195.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="871.5" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (12 samples, 0.07%)</title><rect x="868.5" y="179.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="871.5" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (12 samples, 0.07%)</title><rect x="868.5" y="163.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="871.5" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (11 samples, 0.06%)</title><rect x="868.6" y="147.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="871.6" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (9 samples, 0.05%)</title><rect x="868.7" y="131.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="871.7" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (9 samples, 0.05%)</title><rect x="868.7" y="115.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="871.7" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (5 samples, 0.03%)</title><rect x="868.9" y="99.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="871.9" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.02%)</title><rect x="868.9" y="83.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="871.9" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.02%)</title><rect x="868.9" y="67.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="871.9" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.02%)</title><rect x="868.9" y="51.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="871.9" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="869.4" y="195.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="872.4" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.03%)</title><rect x="869.4" y="179.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="872.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (680 samples, 3.88%)</title><rect x="870.5" y="643.0" width="45.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="873.5" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (679 samples, 3.87%)</title><rect x="870.5" y="627.0" width="45.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="873.5" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (679 samples, 3.87%)</title><rect x="870.5" y="611.0" width="45.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="873.5" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (676 samples, 3.85%)</title><rect x="870.8" y="595.0" width="45.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="873.8" y="606.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (29 samples, 0.17%)</title><rect x="870.8" y="579.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="873.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (29 samples, 0.17%)</title><rect x="870.8" y="563.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="873.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (29 samples, 0.17%)</title><rect x="870.8" y="547.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="873.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (29 samples, 0.17%)</title><rect x="870.8" y="531.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="873.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (28 samples, 0.16%)</title><rect x="870.9" y="515.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="873.9" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (25 samples, 0.14%)</title><rect x="870.9" y="499.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="873.9" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (17 samples, 0.10%)</title><rect x="870.9" y="483.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="873.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (17 samples, 0.10%)</title><rect x="870.9" y="467.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="873.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (17 samples, 0.10%)</title><rect x="870.9" y="451.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="873.9" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.10%)</title><rect x="870.9" y="435.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="873.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.10%)</title><rect x="870.9" y="419.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="873.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (16 samples, 0.09%)</title><rect x="871.0" y="403.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="874.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (15 samples, 0.09%)</title><rect x="871.0" y="387.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="874.0" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (15 samples, 0.09%)</title><rect x="871.0" y="371.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="874.0" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (15 samples, 0.09%)</title><rect x="871.0" y="355.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="874.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (13 samples, 0.07%)</title><rect x="871.2" y="339.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="874.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (13 samples, 0.07%)</title><rect x="871.2" y="323.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.2" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (13 samples, 0.07%)</title><rect x="871.2" y="307.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.2" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (13 samples, 0.07%)</title><rect x="871.2" y="291.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="874.2" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="871.2" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="874.2" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="871.2" y="259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="874.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (8 samples, 0.05%)</title><rect x="871.5" y="275.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="874.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (8 samples, 0.05%)</title><rect x="871.5" y="259.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.5" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (8 samples, 0.05%)</title><rect x="871.5" y="243.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="874.5" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (7 samples, 0.04%)</title><rect x="871.6" y="227.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="874.6" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="871.8" y="211.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.8" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="871.8" y="195.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="874.8" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8 samples, 0.05%)</title><rect x="872.0" y="483.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="875.0" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.05%)</title><rect x="872.0" y="467.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="875.0" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.05%)</title><rect x="872.0" y="451.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="875.0" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.05%)</title><rect x="872.0" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="875.0" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="872.0" y="419.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="875.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="872.0" y="403.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="875.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.03%)</title><rect x="872.0" y="387.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="875.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (6 samples, 0.03%)</title><rect x="872.0" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="875.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (6 samples, 0.03%)</title><rect x="872.0" y="355.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="875.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (6 samples, 0.03%)</title><rect x="872.0" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (645 samples, 3.68%)</title><rect x="872.8" y="579.0" width="43.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.8" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (645 samples, 3.68%)</title><rect x="872.8" y="563.0" width="43.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="875.8" y="574.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (571 samples, 3.26%)</title><rect x="872.8" y="547.0" width="38.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="875.8" y="558.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (33 samples, 0.19%)</title><rect x="873.0" y="531.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (33 samples, 0.19%)</title><rect x="873.0" y="515.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (29 samples, 0.17%)</title><rect x="873.2" y="499.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="876.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (24 samples, 0.14%)</title><rect x="873.5" y="483.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.5" y="494.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (8 samples, 0.05%)</title><rect x="873.9" y="467.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="876.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.03%)</title><rect x="874.4" y="467.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="877.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (5 samples, 0.03%)</title><rect x="874.8" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="877.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.03%)</title><rect x="874.8" y="451.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="877.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (28 samples, 0.16%)</title><rect x="875.2" y="531.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="878.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (13 samples, 0.07%)</title><rect x="875.3" y="515.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="878.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (11 samples, 0.06%)</title><rect x="875.3" y="499.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="878.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.05%)</title><rect x="875.3" y="483.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="878.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (8 samples, 0.05%)</title><rect x="875.3" y="467.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="878.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (8 samples, 0.05%)</title><rect x="875.3" y="451.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="878.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (8 samples, 0.05%)</title><rect x="875.3" y="435.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="878.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (8 samples, 0.05%)</title><rect x="875.3" y="419.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (6 samples, 0.03%)</title><rect x="875.5" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="878.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (13 samples, 0.07%)</title><rect x="876.2" y="515.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="879.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (12 samples, 0.07%)</title><rect x="876.2" y="499.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="879.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (12 samples, 0.07%)</title><rect x="876.2" y="483.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="879.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (508 samples, 2.90%)</title><rect x="877.1" y="531.0" width="34.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="880.1" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (508 samples, 2.90%)</title><rect x="877.1" y="515.0" width="34.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="880.1" y="526.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (507 samples, 2.89%)</title><rect x="877.1" y="499.0" width="34.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="880.1" y="510.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="877.2" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="880.2" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.03%)</title><rect x="877.2" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="880.2" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.02%)</title><rect x="877.3" y="451.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="880.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (81 samples, 0.46%)</title><rect x="877.5" y="483.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="880.5" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (38 samples, 0.22%)</title><rect x="877.7" y="467.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="880.7" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (38 samples, 0.22%)</title><rect x="877.7" y="451.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="880.7" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (29 samples, 0.17%)</title><rect x="878.4" y="435.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="881.4" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (29 samples, 0.17%)</title><rect x="878.4" y="419.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="881.4" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (28 samples, 0.16%)</title><rect x="878.4" y="403.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="881.4" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="878.5" y="387.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="881.5" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="878.5" y="371.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="881.5" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="878.6" y="355.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="881.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="878.6" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="881.6" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (21 samples, 0.12%)</title><rect x="878.9" y="339.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="881.9" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="879.8" y="323.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="882.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (40 samples, 0.23%)</title><rect x="880.3" y="467.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="883.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (40 samples, 0.23%)</title><rect x="880.3" y="451.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="883.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (36 samples, 0.21%)</title><rect x="880.6" y="435.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="883.6" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (34 samples, 0.19%)</title><rect x="880.7" y="419.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="883.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (34 samples, 0.19%)</title><rect x="880.7" y="403.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="883.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (34 samples, 0.19%)</title><rect x="880.7" y="387.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="883.7" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (31 samples, 0.18%)</title><rect x="880.9" y="371.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="883.9" y="382.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.02%)</title><rect x="881.4" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="884.4" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="881.7" y="355.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="884.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="881.8" y="339.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="884.8" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.08%)</title><rect x="882.1" y="355.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="885.1" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.08%)</title><rect x="882.1" y="339.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="885.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (420 samples, 2.39%)</title><rect x="883.0" y="483.0" width="28.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="886.0" y="494.0">ru..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (280 samples, 1.60%)</title><rect x="888.0" y="467.0" width="18.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="891.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (279 samples, 1.59%)</title><rect x="888.0" y="451.0" width="18.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="891.0" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (265 samples, 1.51%)</title><rect x="889.0" y="435.0" width="17.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="892.0" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (264 samples, 1.50%)</title><rect x="889.0" y="419.0" width="17.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="892.0" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="900.0" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (9 samples, 0.05%)</title><rect x="900.3" y="403.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="903.3" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (76 samples, 0.43%)</title><rect x="901.0" y="403.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="904.0" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (72 samples, 0.41%)</title><rect x="901.2" y="387.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="904.2" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (69 samples, 0.39%)</title><rect x="901.4" y="371.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="904.4" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (67 samples, 0.38%)</title><rect x="901.6" y="355.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="904.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="904.4" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="907.4" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="904.5" y="323.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="907.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="904.5" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="907.5" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="904.5" y="291.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="907.5" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (18 samples, 0.10%)</title><rect x="904.9" y="339.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.9" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="905.6" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="908.6" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (10 samples, 0.06%)</title><rect x="906.1" y="403.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="909.1" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (42 samples, 0.24%)</title><rect x="906.8" y="467.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="909.8" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (39 samples, 0.22%)</title><rect x="907.0" y="451.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="910.0" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (39 samples, 0.22%)</title><rect x="907.0" y="435.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="910.0" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (37 samples, 0.21%)</title><rect x="907.1" y="419.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="910.1" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (37 samples, 0.21%)</title><rect x="907.1" y="403.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="910.1" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (37 samples, 0.21%)</title><rect x="907.1" y="387.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="910.1" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (30 samples, 0.17%)</title><rect x="907.3" y="371.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="910.3" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (11 samples, 0.06%)</title><rect x="907.4" y="355.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="910.4" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="907.5" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="910.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="907.7" y="323.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="910.7" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="907.8" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="910.8" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (18 samples, 0.10%)</title><rect x="908.2" y="355.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="911.2" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (18 samples, 0.10%)</title><rect x="908.2" y="339.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="911.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.04%)</title><rect x="908.9" y="323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="911.9" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.04%)</title><rect x="908.9" y="307.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="911.9" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="909.4" y="371.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="912.4" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (23 samples, 0.13%)</title><rect x="909.6" y="467.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="912.6" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (6 samples, 0.03%)</title><rect x="910.6" y="451.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="913.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (74 samples, 0.42%)</title><rect x="911.2" y="547.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="914.2" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (67 samples, 0.38%)</title><rect x="911.2" y="531.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="914.2" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (66 samples, 0.38%)</title><rect x="911.3" y="515.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="914.3" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (57 samples, 0.32%)</title><rect x="911.9" y="499.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.9" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (57 samples, 0.32%)</title><rect x="911.9" y="483.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="914.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (57 samples, 0.32%)</title><rect x="911.9" y="467.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="914.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (57 samples, 0.32%)</title><rect x="911.9" y="451.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="914.9" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (55 samples, 0.31%)</title><rect x="912.1" y="435.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="915.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (54 samples, 0.31%)</title><rect x="912.1" y="419.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="915.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (32 samples, 0.18%)</title><rect x="912.2" y="403.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="915.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (30 samples, 0.17%)</title><rect x="912.3" y="387.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (29 samples, 0.17%)</title><rect x="912.4" y="371.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="915.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (29 samples, 0.17%)</title><rect x="912.4" y="355.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (12 samples, 0.07%)</title><rect x="912.4" y="339.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="915.4" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (12 samples, 0.07%)</title><rect x="912.4" y="323.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="915.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (12 samples, 0.07%)</title><rect x="912.4" y="307.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="915.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (10 samples, 0.06%)</title><rect x="912.5" y="291.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.5" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (10 samples, 0.06%)</title><rect x="912.5" y="275.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="915.5" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="912.7" y="259.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="915.7" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="912.7" y="243.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="915.7" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="912.9" y="227.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (11 samples, 0.06%)</title><rect x="913.2" y="339.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="916.2" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (6 samples, 0.03%)</title><rect x="913.5" y="323.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="916.5" y="334.0"></text>
</g>
<g>
<title>java/nio/Bits.swap (6 samples, 0.03%)</title><rect x="913.5" y="307.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="916.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (5 samples, 0.03%)</title><rect x="913.9" y="339.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="916.9" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="913.9" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (21 samples, 0.12%)</title><rect x="914.3" y="403.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="917.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (20 samples, 0.11%)</title><rect x="914.4" y="387.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="917.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (19 samples, 0.11%)</title><rect x="914.5" y="371.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="917.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (19 samples, 0.11%)</title><rect x="914.5" y="355.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="917.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (4 samples, 0.02%)</title><rect x="914.5" y="339.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="917.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="914.5" y="323.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="917.5" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (15 samples, 0.09%)</title><rect x="914.7" y="339.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="917.7" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (15 samples, 0.09%)</title><rect x="914.7" y="323.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="917.7" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (15 samples, 0.09%)</title><rect x="914.7" y="307.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.7" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (15 samples, 0.09%)</title><rect x="914.7" y="291.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="917.7" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="914.7" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="917.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="914.7" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="917.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (11 samples, 0.06%)</title><rect x="915.0" y="275.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (11 samples, 0.06%)</title><rect x="915.0" y="259.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="918.0" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11 samples, 0.06%)</title><rect x="915.0" y="243.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="918.0" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (10 samples, 0.06%)</title><rect x="915.1" y="227.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (7 samples, 0.04%)</title><rect x="915.8" y="531.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (7 samples, 0.04%)</title><rect x="915.8" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="918.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.04%)</title><rect x="915.8" y="499.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="918.8" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (5 samples, 0.03%)</title><rect x="915.8" y="483.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.8" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (5 samples, 0.03%)</title><rect x="915.8" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.8" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5 samples, 0.03%)</title><rect x="915.8" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="918.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="915.8" y="435.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="918.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="915.8" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="918.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (5 samples, 0.03%)</title><rect x="915.8" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="918.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (5 samples, 0.03%)</title><rect x="915.8" y="387.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="918.8" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (5 samples, 0.03%)</title><rect x="915.8" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="918.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.03%)</title><rect x="915.8" y="355.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="918.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (4 samples, 0.02%)</title><rect x="915.8" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="918.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="915.8" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="918.8" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (4 samples, 0.02%)</title><rect x="915.8" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.8" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="915.8" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="918.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.sendResponse (187 samples, 1.07%)</title><rect x="916.2" y="643.0" width="12.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="919.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (187 samples, 1.07%)</title><rect x="916.2" y="627.0" width="12.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="919.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (179 samples, 1.02%)</title><rect x="916.7" y="611.0" width="12.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="919.7" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (176 samples, 1.00%)</title><rect x="916.9" y="595.0" width="11.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="919.9" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (176 samples, 1.00%)</title><rect x="916.9" y="579.0" width="11.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="919.9" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (172 samples, 0.98%)</title><rect x="917.2" y="563.0" width="11.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="920.2" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (171 samples, 0.97%)</title><rect x="917.2" y="547.0" width="11.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="920.2" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (165 samples, 0.94%)</title><rect x="917.5" y="531.0" width="11.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="920.5" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (158 samples, 0.90%)</title><rect x="918.0" y="515.0" width="10.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="921.0" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (158 samples, 0.90%)</title><rect x="918.0" y="499.0" width="10.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="921.0" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (158 samples, 0.90%)</title><rect x="918.0" y="483.0" width="10.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="921.0" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (157 samples, 0.89%)</title><rect x="918.0" y="467.0" width="10.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="921.0" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (153 samples, 0.87%)</title><rect x="918.2" y="451.0" width="10.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="921.2" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (151 samples, 0.86%)</title><rect x="918.4" y="435.0" width="10.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="921.4" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (151 samples, 0.86%)</title><rect x="918.4" y="419.0" width="10.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="921.4" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (142 samples, 0.81%)</title><rect x="918.4" y="403.0" width="9.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="921.4" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (142 samples, 0.81%)</title><rect x="918.4" y="387.0" width="9.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="921.4" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (138 samples, 0.79%)</title><rect x="918.5" y="371.0" width="9.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="921.5" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (131 samples, 0.75%)</title><rect x="918.7" y="355.0" width="8.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="921.7" y="366.0"></text>
</g>
<g>
<title>ip_local_out (19 samples, 0.11%)</title><rect x="918.8" y="339.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="921.8" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (19 samples, 0.11%)</title><rect x="918.8" y="323.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="921.8" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (19 samples, 0.11%)</title><rect x="918.8" y="307.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="921.8" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.04%)</title><rect x="918.8" y="291.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="921.8" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (8 samples, 0.05%)</title><rect x="919.5" y="291.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="922.5" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (4 samples, 0.02%)</title><rect x="919.5" y="275.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="922.5" y="286.0"></text>
</g>
<g>
<title>ip_output (111 samples, 0.63%)</title><rect x="920.1" y="339.0" width="7.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="923.1" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (100 samples, 0.57%)</title><rect x="920.1" y="323.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="923.1" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.03%)</title><rect x="920.1" y="307.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="923.1" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.03%)</title><rect x="920.1" y="291.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="923.1" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.03%)</title><rect x="920.1" y="275.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="923.1" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (94 samples, 0.54%)</title><rect x="920.5" y="307.0" width="6.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="923.5" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (94 samples, 0.54%)</title><rect x="920.5" y="291.0" width="6.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="923.5" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (94 samples, 0.54%)</title><rect x="920.5" y="275.0" width="6.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="923.5" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (94 samples, 0.54%)</title><rect x="920.5" y="259.0" width="6.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="923.5" y="270.0"></text>
</g>
<g>
<title>net_rx_action (88 samples, 0.50%)</title><rect x="920.9" y="243.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="923.9" y="254.0"></text>
</g>
<g>
<title>process_backlog (88 samples, 0.50%)</title><rect x="920.9" y="227.0" width="5.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="923.9" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (88 samples, 0.50%)</title><rect x="920.9" y="211.0" width="5.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="923.9" y="222.0"></text>
</g>
<g>
<title>ip_rcv (86 samples, 0.49%)</title><rect x="921.0" y="195.0" width="5.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="924.0" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (69 samples, 0.39%)</title><rect x="921.0" y="179.0" width="4.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="924.0" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (59 samples, 0.34%)</title><rect x="921.0" y="163.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="924.0" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (59 samples, 0.34%)</title><rect x="921.0" y="147.0" width="4.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="924.0" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (59 samples, 0.34%)</title><rect x="921.0" y="131.0" width="4.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="924.0" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (52 samples, 0.30%)</title><rect x="921.5" y="115.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="924.5" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (52 samples, 0.30%)</title><rect x="921.5" y="99.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="924.5" y="110.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.07%)</title><rect x="921.5" y="83.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="924.5" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (38 samples, 0.22%)</title><rect x="922.3" y="83.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="925.3" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (34 samples, 0.19%)</title><rect x="922.5" y="67.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="925.5" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (34 samples, 0.19%)</title><rect x="922.5" y="51.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="925.5" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (33 samples, 0.19%)</title><rect x="922.5" y="35.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="925.5" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.06%)</title><rect x="925.0" y="163.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="928.0" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.03%)</title><rect x="925.1" y="147.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="928.1" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.09%)</title><rect x="925.8" y="179.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="928.8" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (10 samples, 0.06%)</title><rect x="925.9" y="163.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="928.9" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.06%)</title><rect x="926.8" y="323.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="929.8" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.03%)</title><rect x="926.9" y="307.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="929.9" y="318.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.03%)</title><rect x="928.0" y="403.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="931.0" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.03%)</title><rect x="928.0" y="387.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="931.0" y="398.0"></text>
</g>
<g>
<title>[worker-3 tid=14277] (920 samples, 5.24%)</title><rect x="928.8" y="739.0" width="61.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="931.8" y="750.0">[worke..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.04%)</title><rect x="928.8" y="723.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="931.8" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.03%)</title><rect x="928.9" y="707.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="931.9" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.03%)</title><rect x="928.9" y="691.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="931.9" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="928.9" y="675.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="931.9" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.02%)</title><rect x="929.0" y="659.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="932.0" y="670.0"></text>
</g>
<g>
<title>[unknown_Java] (23 samples, 0.13%)</title><rect x="929.3" y="723.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="932.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (889 samples, 5.07%)</title><rect x="930.9" y="723.0" width="59.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.9" y="734.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (889 samples, 5.07%)</title><rect x="930.9" y="707.0" width="59.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="933.9" y="718.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (889 samples, 5.07%)</title><rect x="930.9" y="691.0" width="59.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="933.9" y="702.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (49 samples, 0.28%)</title><rect x="930.9" y="675.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (48 samples, 0.27%)</title><rect x="930.9" y="659.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="933.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (35 samples, 0.20%)</title><rect x="931.0" y="643.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="934.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (31 samples, 0.18%)</title><rect x="931.2" y="627.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="934.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (31 samples, 0.18%)</title><rect x="931.2" y="611.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="934.2" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (21 samples, 0.12%)</title><rect x="931.3" y="595.0" width="1.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="934.3" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (14 samples, 0.08%)</title><rect x="931.6" y="579.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="934.6" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.06%)</title><rect x="931.9" y="563.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="934.9" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.06%)</title><rect x="931.9" y="547.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="934.9" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="932.3" y="531.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="935.3" y="542.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="932.3" y="515.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="935.3" y="526.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="932.3" y="499.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="935.3" y="510.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.05%)</title><rect x="932.7" y="595.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="935.7" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.03%)</title><rect x="932.8" y="579.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="935.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="932.9" y="563.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="935.9" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="932.9" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="935.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.02%)</title><rect x="933.3" y="643.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="936.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.02%)</title><rect x="933.3" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="936.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.05%)</title><rect x="933.6" y="643.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="936.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.05%)</title><rect x="933.6" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="936.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.05%)</title><rect x="933.6" y="611.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="936.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.05%)</title><rect x="933.6" y="595.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="936.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.05%)</title><rect x="933.6" y="579.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="936.6" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.03%)</title><rect x="933.7" y="563.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="936.7" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="933.7" y="547.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="936.7" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="933.7" y="531.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="936.7" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="933.7" y="515.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="936.7" y="526.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="933.7" y="499.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="936.7" y="510.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.03%)</title><rect x="933.7" y="483.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="936.7" y="494.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="933.8" y="467.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="936.8" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="933.8" y="451.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="936.8" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.03%)</title><rect x="933.8" y="435.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="936.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (840 samples, 4.79%)</title><rect x="934.2" y="675.0" width="56.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="937.2" y="686.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (840 samples, 4.79%)</title><rect x="934.2" y="659.0" width="56.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="937.2" y="670.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (124 samples, 0.71%)</title><rect x="934.3" y="643.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="937.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (122 samples, 0.70%)</title><rect x="934.4" y="627.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="937.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (122 samples, 0.70%)</title><rect x="934.4" y="611.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="937.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (119 samples, 0.68%)</title><rect x="934.6" y="595.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="937.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (119 samples, 0.68%)</title><rect x="934.6" y="579.0" width="8.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="937.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (22 samples, 0.13%)</title><rect x="934.8" y="563.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.8" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (22 samples, 0.13%)</title><rect x="934.8" y="547.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="937.8" y="558.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="934.8" y="531.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="937.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="934.8" y="515.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="937.8" y="526.0"></text>
</g>
<g>
<title>__libc_recv (17 samples, 0.10%)</title><rect x="935.1" y="531.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="938.1" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.07%)</title><rect x="935.4" y="515.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="938.4" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.07%)</title><rect x="935.4" y="499.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="938.4" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (13 samples, 0.07%)</title><rect x="935.4" y="483.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="938.4" y="494.0"></text>
</g>
<g>
<title>__sys_recvfrom (12 samples, 0.07%)</title><rect x="935.5" y="467.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="938.5" y="478.0"></text>
</g>
<g>
<title>inet_recvmsg (11 samples, 0.06%)</title><rect x="935.5" y="451.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="938.5" y="462.0"></text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 0.06%)</title><rect x="935.5" y="435.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="938.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (4 samples, 0.02%)</title><rect x="936.3" y="563.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="939.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (6 samples, 0.03%)</title><rect x="936.5" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="939.5" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.03%)</title><rect x="936.5" y="547.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="939.5" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (20 samples, 0.11%)</title><rect x="937.0" y="563.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="940.0" y="574.0"></text>
</g>
<g>
<title>setsockopt (17 samples, 0.10%)</title><rect x="937.2" y="547.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="940.2" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="937.6" y="531.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="940.6" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="937.6" y="515.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="940.6" y="526.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (10 samples, 0.06%)</title><rect x="937.6" y="499.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="940.6" y="510.0"></text>
</g>
<g>
<title>__sys_setsockopt (10 samples, 0.06%)</title><rect x="937.6" y="483.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="940.6" y="494.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.03%)</title><rect x="938.0" y="467.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="941.0" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (62 samples, 0.35%)</title><rect x="938.4" y="563.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="941.4" y="574.0"></text>
</g>
<g>
<title>.annobin_send.c (60 samples, 0.34%)</title><rect x="938.4" y="547.0" width="4.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="941.4" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (57 samples, 0.32%)</title><rect x="938.6" y="531.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="941.6" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (57 samples, 0.32%)</title><rect x="938.6" y="515.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="941.6" y="526.0"></text>
</g>
<g>
<title>__x64_sys_sendto (57 samples, 0.32%)</title><rect x="938.6" y="499.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="941.6" y="510.0"></text>
</g>
<g>
<title>__sys_sendto (56 samples, 0.32%)</title><rect x="938.7" y="483.0" width="3.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="941.7" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (54 samples, 0.31%)</title><rect x="938.8" y="467.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="941.8" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (53 samples, 0.30%)</title><rect x="938.8" y="451.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="941.8" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (53 samples, 0.30%)</title><rect x="938.8" y="435.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="941.8" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (47 samples, 0.27%)</title><rect x="938.9" y="419.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="941.9" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (47 samples, 0.27%)</title><rect x="938.9" y="403.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="941.9" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (44 samples, 0.25%)</title><rect x="939.0" y="387.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="942.0" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (40 samples, 0.23%)</title><rect x="939.2" y="371.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="942.2" y="382.0"></text>
</g>
<g>
<title>ip_local_out (10 samples, 0.06%)</title><rect x="939.2" y="355.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="942.2" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (10 samples, 0.06%)</title><rect x="939.2" y="339.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="942.2" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.05%)</title><rect x="939.2" y="323.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="942.2" y="334.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (4 samples, 0.02%)</title><rect x="939.6" y="307.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="942.6" y="318.0"></text>
</g>
<g>
<title>ip_output (30 samples, 0.17%)</title><rect x="939.8" y="355.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="942.8" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (25 samples, 0.14%)</title><rect x="940.0" y="339.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="943.0" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (24 samples, 0.14%)</title><rect x="940.0" y="323.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="943.0" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (24 samples, 0.14%)</title><rect x="940.0" y="307.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="943.0" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (24 samples, 0.14%)</title><rect x="940.0" y="291.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="943.0" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (24 samples, 0.14%)</title><rect x="940.0" y="275.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="943.0" y="286.0"></text>
</g>
<g>
<title>net_rx_action (24 samples, 0.14%)</title><rect x="940.0" y="259.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="943.0" y="270.0"></text>
</g>
<g>
<title>process_backlog (24 samples, 0.14%)</title><rect x="940.0" y="243.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="943.0" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (23 samples, 0.13%)</title><rect x="940.1" y="227.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="943.1" y="238.0"></text>
</g>
<g>
<title>ip_rcv (21 samples, 0.12%)</title><rect x="940.2" y="211.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="943.2" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (18 samples, 0.10%)</title><rect x="940.2" y="195.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="943.2" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (14 samples, 0.08%)</title><rect x="940.2" y="179.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="943.2" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (14 samples, 0.08%)</title><rect x="940.2" y="163.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="943.2" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (14 samples, 0.08%)</title><rect x="940.2" y="147.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="943.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (13 samples, 0.07%)</title><rect x="940.3" y="131.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="943.3" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (13 samples, 0.07%)</title><rect x="940.3" y="115.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="943.3" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (11 samples, 0.06%)</title><rect x="940.4" y="99.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="943.4" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (10 samples, 0.06%)</title><rect x="940.4" y="83.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="943.4" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (9 samples, 0.05%)</title><rect x="940.4" y="67.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="943.4" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.05%)</title><rect x="940.4" y="51.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="943.4" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="941.2" y="179.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="944.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (552 samples, 3.15%)</title><rect x="942.6" y="643.0" width="37.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="945.6" y="654.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (552 samples, 3.15%)</title><rect x="942.6" y="627.0" width="37.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="945.6" y="638.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (552 samples, 3.15%)</title><rect x="942.6" y="611.0" width="37.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="945.6" y="622.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (549 samples, 3.13%)</title><rect x="942.8" y="595.0" width="36.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="945.8" y="606.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (30 samples, 0.17%)</title><rect x="942.8" y="579.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="945.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (30 samples, 0.17%)</title><rect x="942.8" y="563.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="945.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (30 samples, 0.17%)</title><rect x="942.8" y="547.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="945.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (30 samples, 0.17%)</title><rect x="942.8" y="531.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="945.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (30 samples, 0.17%)</title><rect x="942.8" y="515.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="945.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (25 samples, 0.14%)</title><rect x="942.9" y="499.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="945.9" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (16 samples, 0.09%)</title><rect x="942.9" y="483.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="945.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (16 samples, 0.09%)</title><rect x="942.9" y="467.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="945.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (15 samples, 0.09%)</title><rect x="942.9" y="451.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="945.9" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.08%)</title><rect x="943.0" y="435.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="946.0" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.08%)</title><rect x="943.0" y="419.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="946.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (13 samples, 0.07%)</title><rect x="943.1" y="403.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="946.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (13 samples, 0.07%)</title><rect x="943.1" y="387.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="946.1" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (13 samples, 0.07%)</title><rect x="943.1" y="371.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="946.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (13 samples, 0.07%)</title><rect x="943.1" y="355.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="946.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (10 samples, 0.06%)</title><rect x="943.3" y="339.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="946.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (10 samples, 0.06%)</title><rect x="943.3" y="323.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="946.3" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (10 samples, 0.06%)</title><rect x="943.3" y="307.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="946.3" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (10 samples, 0.06%)</title><rect x="943.3" y="291.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="946.3" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="943.3" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="946.3" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="943.3" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="946.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (5 samples, 0.03%)</title><rect x="943.6" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="946.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (5 samples, 0.03%)</title><rect x="943.6" y="259.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="946.6" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="943.6" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="946.6" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.03%)</title><rect x="943.6" y="227.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="946.6" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="943.7" y="211.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="946.7" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="943.7" y="195.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="946.7" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="943.7" y="179.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="946.7" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="943.7" y="163.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="946.7" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="943.7" y="147.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="946.7" y="158.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (9 samples, 0.05%)</title><rect x="943.9" y="483.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="946.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (9 samples, 0.05%)</title><rect x="943.9" y="467.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="946.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (9 samples, 0.05%)</title><rect x="943.9" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="946.9" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (9 samples, 0.05%)</title><rect x="943.9" y="435.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="946.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="944.0" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="947.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="944.0" y="403.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="947.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7 samples, 0.04%)</title><rect x="944.0" y="387.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="947.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (6 samples, 0.03%)</title><rect x="944.1" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="947.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (6 samples, 0.03%)</title><rect x="944.1" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="947.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (6 samples, 0.03%)</title><rect x="944.1" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="947.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (4 samples, 0.02%)</title><rect x="944.1" y="323.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="947.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (517 samples, 2.95%)</title><rect x="944.9" y="579.0" width="34.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="947.9" y="590.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (517 samples, 2.95%)</title><rect x="944.9" y="563.0" width="34.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="947.9" y="574.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (454 samples, 2.59%)</title><rect x="944.9" y="547.0" width="30.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="947.9" y="558.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (23 samples, 0.13%)</title><rect x="945.0" y="531.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="948.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (23 samples, 0.13%)</title><rect x="945.0" y="515.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="948.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (17 samples, 0.10%)</title><rect x="945.3" y="499.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="948.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (14 samples, 0.08%)</title><rect x="945.6" y="483.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="948.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (8 samples, 0.05%)</title><rect x="946.0" y="467.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="949.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.02%)</title><rect x="946.2" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="949.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (23 samples, 0.13%)</title><rect x="946.8" y="531.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="949.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (14 samples, 0.08%)</title><rect x="947.0" y="515.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="950.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (12 samples, 0.07%)</title><rect x="947.0" y="499.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="950.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (12 samples, 0.07%)</title><rect x="947.0" y="483.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="950.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (12 samples, 0.07%)</title><rect x="947.0" y="467.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="950.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (12 samples, 0.07%)</title><rect x="947.0" y="451.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="950.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (12 samples, 0.07%)</title><rect x="947.0" y="435.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="950.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (12 samples, 0.07%)</title><rect x="947.0" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="950.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (12 samples, 0.07%)</title><rect x="947.0" y="403.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="950.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.03%)</title><rect x="947.5" y="387.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="950.5" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="947.5" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="950.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="947.6" y="355.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="950.6" y="366.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="947.6" y="339.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="950.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (6 samples, 0.03%)</title><rect x="948.0" y="515.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="951.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5 samples, 0.03%)</title><rect x="948.0" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="951.0" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (5 samples, 0.03%)</title><rect x="948.0" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="951.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (403 samples, 2.30%)</title><rect x="948.4" y="531.0" width="27.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="951.4" y="542.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (403 samples, 2.30%)</title><rect x="948.4" y="515.0" width="27.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="951.4" y="526.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (403 samples, 2.30%)</title><rect x="948.4" y="499.0" width="27.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="951.4" y="510.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.06%)</title><rect x="948.4" y="483.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="951.4" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.06%)</title><rect x="948.4" y="467.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="951.4" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.02%)</title><rect x="948.8" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="951.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (71 samples, 0.40%)</title><rect x="949.1" y="483.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="952.1" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (31 samples, 0.18%)</title><rect x="949.3" y="467.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="952.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (31 samples, 0.18%)</title><rect x="949.3" y="451.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="952.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (25 samples, 0.14%)</title><rect x="949.7" y="435.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="952.7" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="949.7" y="419.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="952.7" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="949.7" y="403.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="952.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="949.7" y="387.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="952.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="949.7" y="371.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="952.7" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="949.7" y="355.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="952.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="949.7" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="952.7" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="949.7" y="323.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="952.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="949.8" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="952.8" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="949.8" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="952.8" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (19 samples, 0.11%)</title><rect x="950.1" y="339.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="953.1" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.03%)</title><rect x="950.9" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="953.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="951.1" y="307.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="954.1" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="951.1" y="291.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="954.1" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (38 samples, 0.22%)</title><rect x="951.3" y="467.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="954.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (38 samples, 0.22%)</title><rect x="951.3" y="451.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="954.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (36 samples, 0.21%)</title><rect x="951.5" y="435.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="954.5" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (36 samples, 0.21%)</title><rect x="951.5" y="419.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="954.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (36 samples, 0.21%)</title><rect x="951.5" y="403.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="954.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (36 samples, 0.21%)</title><rect x="951.5" y="387.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="954.5" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (28 samples, 0.16%)</title><rect x="952.0" y="371.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="955.0" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="952.6" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="955.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="952.6" y="339.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="955.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.03%)</title><rect x="952.6" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="955.6" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="952.7" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="955.7" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (13 samples, 0.07%)</title><rect x="953.0" y="355.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="956.0" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (13 samples, 0.07%)</title><rect x="953.0" y="339.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="956.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (321 samples, 1.83%)</title><rect x="953.9" y="483.0" width="21.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="956.9" y="494.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (209 samples, 1.19%)</title><rect x="959.2" y="467.0" width="14.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="962.2" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (209 samples, 1.19%)</title><rect x="959.2" y="451.0" width="14.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="962.2" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (202 samples, 1.15%)</title><rect x="959.6" y="435.0" width="13.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="962.6" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (201 samples, 1.15%)</title><rect x="959.7" y="419.0" width="13.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="962.7" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.03%)</title><rect x="968.4" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="971.4" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (61 samples, 0.35%)</title><rect x="968.7" y="403.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="971.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (59 samples, 0.34%)</title><rect x="968.8" y="387.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="971.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (56 samples, 0.32%)</title><rect x="969.0" y="371.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="972.0" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (53 samples, 0.30%)</title><rect x="969.2" y="355.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="972.2" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="970.7" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="973.7" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (24 samples, 0.14%)</title><rect x="971.0" y="339.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="974.0" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="972.1" y="323.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="975.1" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.03%)</title><rect x="972.8" y="403.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="975.8" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (24 samples, 0.14%)</title><rect x="973.3" y="467.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="976.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (23 samples, 0.13%)</title><rect x="973.3" y="451.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="976.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (23 samples, 0.13%)</title><rect x="973.3" y="435.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="976.3" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="973.5" y="419.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="976.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="973.5" y="403.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="976.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="973.5" y="387.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="976.5" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (13 samples, 0.07%)</title><rect x="973.6" y="371.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="976.6" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="973.7" y="355.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.05%)</title><rect x="973.9" y="355.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="976.9" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.05%)</title><rect x="973.9" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="976.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="974.1" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="977.1" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="974.2" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="977.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="974.5" y="371.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="977.5" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (8 samples, 0.05%)</title><rect x="974.9" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="977.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (63 samples, 0.36%)</title><rect x="975.5" y="547.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="978.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (53 samples, 0.30%)</title><rect x="975.5" y="531.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="978.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (52 samples, 0.30%)</title><rect x="975.6" y="515.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="978.6" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (43 samples, 0.25%)</title><rect x="976.1" y="499.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="979.1" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (43 samples, 0.25%)</title><rect x="976.1" y="483.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="979.1" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (43 samples, 0.25%)</title><rect x="976.1" y="467.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="979.1" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (43 samples, 0.25%)</title><rect x="976.1" y="451.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="979.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (42 samples, 0.24%)</title><rect x="976.2" y="435.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="979.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (40 samples, 0.23%)</title><rect x="976.3" y="419.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="979.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (23 samples, 0.13%)</title><rect x="976.4" y="403.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="979.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (20 samples, 0.11%)</title><rect x="976.5" y="387.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="979.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (20 samples, 0.11%)</title><rect x="976.5" y="371.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="979.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (20 samples, 0.11%)</title><rect x="976.5" y="355.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="979.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (7 samples, 0.04%)</title><rect x="976.5" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="979.5" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (7 samples, 0.04%)</title><rect x="976.5" y="323.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="979.5" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (7 samples, 0.04%)</title><rect x="976.5" y="307.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="979.5" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.03%)</title><rect x="976.6" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="979.6" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="976.6" y="275.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="979.6" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="976.7" y="259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="979.7" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="976.7" y="243.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="979.7" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="976.7" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="979.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (8 samples, 0.05%)</title><rect x="977.0" y="339.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="980.0" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (4 samples, 0.02%)</title><rect x="977.2" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="980.2" y="334.0"></text>
</g>
<g>
<title>java/nio/Bits.swap (4 samples, 0.02%)</title><rect x="977.2" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="980.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (4 samples, 0.02%)</title><rect x="977.5" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="980.5" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="977.5" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="980.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (16 samples, 0.09%)</title><rect x="977.9" y="403.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="980.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (16 samples, 0.09%)</title><rect x="977.9" y="387.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="980.9" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (16 samples, 0.09%)</title><rect x="977.9" y="371.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="980.9" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (16 samples, 0.09%)</title><rect x="977.9" y="355.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="980.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (4 samples, 0.02%)</title><rect x="977.9" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="980.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="977.9" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="980.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (4 samples, 0.02%)</title><rect x="977.9" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="980.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4 samples, 0.02%)</title><rect x="977.9" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="980.9" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (12 samples, 0.07%)</title><rect x="978.2" y="339.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (12 samples, 0.07%)</title><rect x="978.2" y="323.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="981.2" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (12 samples, 0.07%)</title><rect x="978.2" y="307.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="981.2" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (12 samples, 0.07%)</title><rect x="978.2" y="291.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="981.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (9 samples, 0.05%)</title><rect x="978.4" y="275.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (8 samples, 0.05%)</title><rect x="978.4" y="259.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="981.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (7 samples, 0.04%)</title><rect x="978.4" y="243.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="981.4" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (7 samples, 0.04%)</title><rect x="978.4" y="227.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.4" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.03%)</title><rect x="978.5" y="211.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="981.5" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="978.6" y="195.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="981.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (10 samples, 0.06%)</title><rect x="979.1" y="531.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="982.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (10 samples, 0.06%)</title><rect x="979.1" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="982.1" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.06%)</title><rect x="979.1" y="499.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="982.1" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (7 samples, 0.04%)</title><rect x="979.1" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="982.1" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (7 samples, 0.04%)</title><rect x="979.1" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="982.1" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (7 samples, 0.04%)</title><rect x="979.1" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="982.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.04%)</title><rect x="979.1" y="435.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="982.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="979.1" y="419.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="982.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (5 samples, 0.03%)</title><rect x="979.2" y="403.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="982.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (4 samples, 0.02%)</title><rect x="979.3" y="387.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="982.3" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (4 samples, 0.02%)</title><rect x="979.3" y="371.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="982.3" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="979.3" y="355.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="982.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (4 samples, 0.02%)</title><rect x="979.3" y="339.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="982.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="979.3" y="323.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="982.3" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (4 samples, 0.02%)</title><rect x="979.3" y="307.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="982.3" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="979.3" y="291.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="982.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.sendResponse (163 samples, 0.93%)</title><rect x="979.7" y="643.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="982.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (163 samples, 0.93%)</title><rect x="979.7" y="627.0" width="11.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="982.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (158 samples, 0.90%)</title><rect x="979.9" y="611.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="982.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.02%)</title><rect x="979.9" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="982.9" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (154 samples, 0.88%)</title><rect x="980.2" y="595.0" width="10.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="983.2" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (154 samples, 0.88%)</title><rect x="980.2" y="579.0" width="10.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="983.2" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (150 samples, 0.86%)</title><rect x="980.5" y="563.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="983.5" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (149 samples, 0.85%)</title><rect x="980.5" y="547.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="983.5" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (147 samples, 0.84%)</title><rect x="980.6" y="531.0" width="9.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="983.6" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (142 samples, 0.81%)</title><rect x="980.9" y="515.0" width="9.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="983.9" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (142 samples, 0.81%)</title><rect x="980.9" y="499.0" width="9.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="983.9" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (139 samples, 0.79%)</title><rect x="981.1" y="483.0" width="9.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="984.1" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (139 samples, 0.79%)</title><rect x="981.1" y="467.0" width="9.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="984.1" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (139 samples, 0.79%)</title><rect x="981.1" y="451.0" width="9.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="984.1" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (137 samples, 0.78%)</title><rect x="981.3" y="435.0" width="9.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="984.3" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (137 samples, 0.78%)</title><rect x="981.3" y="419.0" width="9.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="984.3" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (127 samples, 0.72%)</title><rect x="981.3" y="403.0" width="8.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="984.3" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (127 samples, 0.72%)</title><rect x="981.3" y="387.0" width="8.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="984.3" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (124 samples, 0.71%)</title><rect x="981.4" y="371.0" width="8.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="984.4" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (121 samples, 0.69%)</title><rect x="981.4" y="355.0" width="8.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="984.4" y="366.0"></text>
</g>
<g>
<title>ip_local_out (24 samples, 0.14%)</title><rect x="981.5" y="339.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="984.5" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (24 samples, 0.14%)</title><rect x="981.5" y="323.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="984.5" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (23 samples, 0.13%)</title><rect x="981.6" y="307.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="984.6" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.03%)</title><rect x="981.6" y="291.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="984.6" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (12 samples, 0.07%)</title><rect x="982.3" y="291.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="985.3" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (5 samples, 0.03%)</title><rect x="982.5" y="275.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="985.5" y="286.0"></text>
</g>
<g>
<title>ip_output (95 samples, 0.54%)</title><rect x="983.2" y="339.0" width="6.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="986.2" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (88 samples, 0.50%)</title><rect x="983.2" y="323.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="986.2" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.04%)</title><rect x="983.3" y="307.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="986.3" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.03%)</title><rect x="983.4" y="291.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="986.4" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.02%)</title><rect x="983.5" y="275.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="986.5" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (80 samples, 0.46%)</title><rect x="983.8" y="307.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="986.8" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (79 samples, 0.45%)</title><rect x="983.8" y="291.0" width="5.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="986.8" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (79 samples, 0.45%)</title><rect x="983.8" y="275.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="986.8" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (79 samples, 0.45%)</title><rect x="983.8" y="259.0" width="5.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="986.8" y="270.0"></text>
</g>
<g>
<title>net_rx_action (75 samples, 0.43%)</title><rect x="984.0" y="243.0" width="5.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="987.0" y="254.0"></text>
</g>
<g>
<title>process_backlog (75 samples, 0.43%)</title><rect x="984.0" y="227.0" width="5.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="987.0" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (74 samples, 0.42%)</title><rect x="984.1" y="211.0" width="5.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="987.1" y="222.0"></text>
</g>
<g>
<title>ip_rcv (73 samples, 0.42%)</title><rect x="984.2" y="195.0" width="4.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="987.2" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (61 samples, 0.35%)</title><rect x="984.3" y="179.0" width="4.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="987.3" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (51 samples, 0.29%)</title><rect x="984.3" y="163.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="987.3" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (51 samples, 0.29%)</title><rect x="984.3" y="147.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="987.3" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (48 samples, 0.27%)</title><rect x="984.5" y="131.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="987.5" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (44 samples, 0.25%)</title><rect x="984.8" y="115.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="987.8" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (44 samples, 0.25%)</title><rect x="984.8" y="99.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="987.8" y="110.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.07%)</title><rect x="984.9" y="83.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="987.9" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (27 samples, 0.15%)</title><rect x="985.8" y="83.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="988.8" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (25 samples, 0.14%)</title><rect x="985.9" y="67.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="988.9" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (25 samples, 0.14%)</title><rect x="985.9" y="51.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="988.9" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (24 samples, 0.14%)</title><rect x="986.0" y="35.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="989.0" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.06%)</title><rect x="987.7" y="163.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="990.7" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.04%)</title><rect x="987.7" y="147.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="990.7" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.05%)</title><rect x="988.5" y="179.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="991.5" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (9 samples, 0.05%)</title><rect x="988.5" y="163.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="991.5" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="989.2" y="323.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="992.2" y="334.0"></text>
</g>
<g>
<title>[worker-4 tid=14270] (1,024 samples, 5.84%)</title><rect x="990.7" y="739.0" width="68.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="993.7" y="750.0">[worker..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.04%)</title><rect x="991.0" y="723.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="994.0" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.04%)</title><rect x="991.0" y="707.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="994.0" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (7 samples, 0.04%)</title><rect x="991.0" y="691.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="994.0" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.04%)</title><rect x="991.0" y="675.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="994.0" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (6 samples, 0.03%)</title><rect x="991.0" y="659.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="994.0" y="670.0"></text>
</g>
<g>
<title>[unknown_Java] (39 samples, 0.22%)</title><rect x="991.5" y="723.0" width="2.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="994.5" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.03%)</title><rect x="993.8" y="707.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="996.8" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="993.8" y="691.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="996.8" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="993.8" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="996.8" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="993.8" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="996.8" y="670.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="993.8" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="996.8" y="654.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="993.8" y="627.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="996.8" y="638.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.02%)</title><rect x="993.8" y="611.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="996.8" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="993.8" y="595.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="996.8" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.02%)</title><rect x="993.8" y="579.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="996.8" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.run (973 samples, 5.55%)</title><rect x="994.1" y="723.0" width="65.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="997.1" y="734.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (973 samples, 5.55%)</title><rect x="994.1" y="707.0" width="65.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="997.1" y="718.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (973 samples, 5.55%)</title><rect x="994.1" y="691.0" width="65.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="997.1" y="702.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (24 samples, 0.14%)</title><rect x="994.2" y="675.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="997.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (23 samples, 0.13%)</title><rect x="994.3" y="659.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="997.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (19 samples, 0.11%)</title><rect x="994.4" y="643.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="997.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (16 samples, 0.09%)</title><rect x="994.6" y="627.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="997.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (16 samples, 0.09%)</title><rect x="994.6" y="611.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="997.6" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (12 samples, 0.07%)</title><rect x="994.6" y="595.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="997.6" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (10 samples, 0.06%)</title><rect x="994.7" y="579.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="997.7" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="994.9" y="563.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="997.9" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="994.9" y="547.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="997.9" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="994.9" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="997.9" y="542.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="994.9" y="515.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="997.9" y="526.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="995.0" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="998.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="995.4" y="595.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="998.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (948 samples, 5.40%)</title><rect x="995.8" y="675.0" width="63.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.8" y="686.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (948 samples, 5.40%)</title><rect x="995.8" y="659.0" width="63.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.8" y="670.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (95 samples, 0.54%)</title><rect x="996.0" y="643.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="999.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (95 samples, 0.54%)</title><rect x="996.0" y="627.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="999.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (95 samples, 0.54%)</title><rect x="996.0" y="611.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="999.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (95 samples, 0.54%)</title><rect x="996.0" y="595.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="999.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (95 samples, 0.54%)</title><rect x="996.0" y="579.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="999.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (24 samples, 0.14%)</title><rect x="996.3" y="563.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="999.3" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (24 samples, 0.14%)</title><rect x="996.3" y="547.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="999.3" y="558.0"></text>
</g>
<g>
<title>__libc_recv (22 samples, 0.13%)</title><rect x="996.4" y="531.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="999.4" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.11%)</title><rect x="996.6" y="515.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="999.6" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.11%)</title><rect x="996.6" y="499.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="999.6" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (17 samples, 0.10%)</title><rect x="996.7" y="483.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="999.7" y="494.0"></text>
</g>
<g>
<title>__sys_recvfrom (16 samples, 0.09%)</title><rect x="996.8" y="467.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="999.8" y="478.0"></text>
</g>
<g>
<title>inet_recvmsg (14 samples, 0.08%)</title><rect x="996.8" y="451.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="999.8" y="462.0"></text>
</g>
<g>
<title>tcp_recvmsg (14 samples, 0.08%)</title><rect x="996.8" y="435.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="999.8" y="446.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (7 samples, 0.04%)</title><rect x="997.3" y="419.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1000.3" y="430.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (6 samples, 0.03%)</title><rect x="997.3" y="403.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1000.3" y="414.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.03%)</title><rect x="997.4" y="387.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1000.4" y="398.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.02%)</title><rect x="997.5" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1000.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (6 samples, 0.03%)</title><rect x="998.0" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1001.0" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.03%)</title><rect x="998.0" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1001.0" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (4 samples, 0.02%)</title><rect x="998.4" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1001.4" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (53 samples, 0.30%)</title><rect x="998.7" y="563.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1001.7" y="574.0"></text>
</g>
<g>
<title>.annobin_send.c (52 samples, 0.30%)</title><rect x="998.7" y="547.0" width="3.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1001.7" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (51 samples, 0.29%)</title><rect x="998.8" y="531.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1001.8" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (51 samples, 0.29%)</title><rect x="998.8" y="515.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1001.8" y="526.0"></text>
</g>
<g>
<title>__x64_sys_sendto (49 samples, 0.28%)</title><rect x="998.9" y="499.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1001.9" y="510.0"></text>
</g>
<g>
<title>__sys_sendto (49 samples, 0.28%)</title><rect x="998.9" y="483.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1001.9" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (49 samples, 0.28%)</title><rect x="998.9" y="467.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1001.9" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (48 samples, 0.27%)</title><rect x="999.0" y="451.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1002.0" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (47 samples, 0.27%)</title><rect x="999.0" y="435.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1002.0" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (44 samples, 0.25%)</title><rect x="999.1" y="419.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1002.1" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (44 samples, 0.25%)</title><rect x="999.1" y="403.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1002.1" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (44 samples, 0.25%)</title><rect x="999.1" y="387.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1002.1" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (41 samples, 0.23%)</title><rect x="999.2" y="371.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1002.2" y="382.0"></text>
</g>
<g>
<title>ip_local_out (9 samples, 0.05%)</title><rect x="999.2" y="355.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1002.2" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (9 samples, 0.05%)</title><rect x="999.2" y="339.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1002.2" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.05%)</title><rect x="999.2" y="323.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1002.2" y="334.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (4 samples, 0.02%)</title><rect x="999.4" y="307.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1002.4" y="318.0"></text>
</g>
<g>
<title>ip_output (32 samples, 0.18%)</title><rect x="999.8" y="355.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1002.8" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (29 samples, 0.17%)</title><rect x="999.8" y="339.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1002.8" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (26 samples, 0.15%)</title><rect x="1000.0" y="323.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1003.0" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (26 samples, 0.15%)</title><rect x="1000.0" y="307.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1003.0" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (26 samples, 0.15%)</title><rect x="1000.0" y="291.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1003.0" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (26 samples, 0.15%)</title><rect x="1000.0" y="275.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1003.0" y="286.0"></text>
</g>
<g>
<title>net_rx_action (26 samples, 0.15%)</title><rect x="1000.0" y="259.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1003.0" y="270.0"></text>
</g>
<g>
<title>process_backlog (25 samples, 0.14%)</title><rect x="1000.0" y="243.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1003.0" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (25 samples, 0.14%)</title><rect x="1000.0" y="227.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1003.0" y="238.0"></text>
</g>
<g>
<title>ip_rcv (25 samples, 0.14%)</title><rect x="1000.0" y="211.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1003.0" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (22 samples, 0.13%)</title><rect x="1000.0" y="195.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1003.0" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (17 samples, 0.10%)</title><rect x="1000.0" y="179.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1003.0" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (17 samples, 0.10%)</title><rect x="1000.0" y="163.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1003.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (17 samples, 0.10%)</title><rect x="1000.0" y="147.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1003.0" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (14 samples, 0.08%)</title><rect x="1000.2" y="131.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1003.2" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (14 samples, 0.08%)</title><rect x="1000.2" y="115.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1003.2" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (8 samples, 0.05%)</title><rect x="1000.6" y="99.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1003.6" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (6 samples, 0.03%)</title><rect x="1000.6" y="83.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1003.6" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.03%)</title><rect x="1000.6" y="67.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1003.6" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.03%)</title><rect x="1000.6" y="51.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1003.6" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="1001.2" y="179.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1004.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (660 samples, 3.76%)</title><rect x="1002.4" y="643.0" width="44.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1005.4" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (660 samples, 3.76%)</title><rect x="1002.4" y="627.0" width="44.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1005.4" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (660 samples, 3.76%)</title><rect x="1002.4" y="611.0" width="44.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1005.4" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (659 samples, 3.76%)</title><rect x="1002.5" y="595.0" width="44.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1005.5" y="606.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (22 samples, 0.13%)</title><rect x="1002.5" y="579.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1005.5" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (22 samples, 0.13%)</title><rect x="1002.5" y="563.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1005.5" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (22 samples, 0.13%)</title><rect x="1002.5" y="547.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1005.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (22 samples, 0.13%)</title><rect x="1002.5" y="531.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1005.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (22 samples, 0.13%)</title><rect x="1002.5" y="515.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (21 samples, 0.12%)</title><rect x="1002.5" y="499.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1005.5" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (15 samples, 0.09%)</title><rect x="1002.5" y="483.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1005.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (15 samples, 0.09%)</title><rect x="1002.5" y="467.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.5" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (15 samples, 0.09%)</title><rect x="1002.5" y="451.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1005.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.09%)</title><rect x="1002.5" y="435.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1005.5" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.09%)</title><rect x="1002.5" y="419.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1005.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (14 samples, 0.08%)</title><rect x="1002.6" y="403.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1005.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (14 samples, 0.08%)</title><rect x="1002.6" y="387.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1005.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (14 samples, 0.08%)</title><rect x="1002.6" y="371.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1005.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (14 samples, 0.08%)</title><rect x="1002.6" y="355.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1005.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (12 samples, 0.07%)</title><rect x="1002.7" y="339.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.7" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (12 samples, 0.07%)</title><rect x="1002.7" y="323.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1005.7" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (12 samples, 0.07%)</title><rect x="1002.7" y="307.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1005.7" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (12 samples, 0.07%)</title><rect x="1002.7" y="291.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1005.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (9 samples, 0.05%)</title><rect x="1002.9" y="275.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (9 samples, 0.05%)</title><rect x="1002.9" y="259.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1005.9" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (8 samples, 0.05%)</title><rect x="1002.9" y="243.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1005.9" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (8 samples, 0.05%)</title><rect x="1002.9" y="227.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1005.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.03%)</title><rect x="1003.5" y="483.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1006.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.03%)</title><rect x="1003.5" y="467.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1006.5" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6 samples, 0.03%)</title><rect x="1003.5" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1006.5" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6 samples, 0.03%)</title><rect x="1003.5" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1006.5" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="1003.5" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1006.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="1003.5" y="403.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1006.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (635 samples, 3.62%)</title><rect x="1004.1" y="579.0" width="42.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1007.1" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (635 samples, 3.62%)</title><rect x="1004.1" y="563.0" width="42.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1007.1" y="574.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (557 samples, 3.18%)</title><rect x="1004.1" y="547.0" width="37.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1007.1" y="558.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (29 samples, 0.17%)</title><rect x="1004.2" y="531.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1007.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (28 samples, 0.16%)</title><rect x="1004.3" y="515.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1007.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (27 samples, 0.15%)</title><rect x="1004.3" y="499.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1007.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (26 samples, 0.15%)</title><rect x="1004.3" y="483.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1007.3" y="494.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (4 samples, 0.02%)</title><rect x="1004.7" y="467.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1007.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.03%)</title><rect x="1004.9" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1007.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (12 samples, 0.07%)</title><rect x="1005.3" y="467.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1008.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 0.05%)</title><rect x="1005.6" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1008.6" y="462.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="1005.6" y="435.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1008.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (25 samples, 0.14%)</title><rect x="1006.4" y="531.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1009.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (16 samples, 0.09%)</title><rect x="1006.4" y="515.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1009.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (14 samples, 0.08%)</title><rect x="1006.4" y="499.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1009.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (14 samples, 0.08%)</title><rect x="1006.4" y="483.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1009.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (14 samples, 0.08%)</title><rect x="1006.4" y="467.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1009.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (14 samples, 0.08%)</title><rect x="1006.4" y="451.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1009.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (14 samples, 0.08%)</title><rect x="1006.4" y="435.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1009.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (14 samples, 0.08%)</title><rect x="1006.4" y="419.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1009.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (10 samples, 0.06%)</title><rect x="1006.7" y="403.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1009.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (8 samples, 0.05%)</title><rect x="1007.5" y="515.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1010.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6 samples, 0.03%)</title><rect x="1007.5" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1010.5" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1007.5" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1010.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.02%)</title><rect x="1007.6" y="467.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1010.6" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.02%)</title><rect x="1007.6" y="451.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1010.6" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (4 samples, 0.02%)</title><rect x="1007.6" y="435.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1010.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (498 samples, 2.84%)</title><rect x="1008.0" y="531.0" width="33.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1011.0" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (498 samples, 2.84%)</title><rect x="1008.0" y="515.0" width="33.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1011.0" y="526.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (498 samples, 2.84%)</title><rect x="1008.0" y="499.0" width="33.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1011.0" y="510.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.05%)</title><rect x="1008.2" y="483.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1011.2" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.05%)</title><rect x="1008.2" y="467.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1011.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (75 samples, 0.43%)</title><rect x="1008.8" y="483.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1011.8" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (4 samples, 0.02%)</title><rect x="1008.8" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1011.8" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (30 samples, 0.17%)</title><rect x="1009.1" y="467.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1012.1" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (30 samples, 0.17%)</title><rect x="1009.1" y="451.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1012.1" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (28 samples, 0.16%)</title><rect x="1009.3" y="435.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1012.3" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (28 samples, 0.16%)</title><rect x="1009.3" y="419.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1012.3" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (22 samples, 0.13%)</title><rect x="1009.6" y="403.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1012.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (22 samples, 0.13%)</title><rect x="1009.6" y="387.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1012.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (21 samples, 0.12%)</title><rect x="1009.7" y="371.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1012.7" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (21 samples, 0.12%)</title><rect x="1009.7" y="355.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1012.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="1009.7" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1012.7" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="1009.7" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1012.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.03%)</title><rect x="1009.7" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1012.7" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.03%)</title><rect x="1009.7" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1012.7" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (15 samples, 0.09%)</title><rect x="1010.1" y="339.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1013.1" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (40 samples, 0.23%)</title><rect x="1011.1" y="467.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1014.1" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (40 samples, 0.23%)</title><rect x="1011.1" y="451.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1014.1" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (39 samples, 0.22%)</title><rect x="1011.2" y="435.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1014.2" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (31 samples, 0.18%)</title><rect x="1011.7" y="419.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1014.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (31 samples, 0.18%)</title><rect x="1011.7" y="403.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1014.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (31 samples, 0.18%)</title><rect x="1011.7" y="387.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1014.7" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="1012.1" y="371.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1015.1" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="1012.6" y="355.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1015.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="1012.6" y="339.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1015.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="1012.8" y="323.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1015.8" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="1012.8" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1015.8" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.06%)</title><rect x="1013.1" y="355.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1016.1" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.06%)</title><rect x="1013.1" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1016.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (412 samples, 2.35%)</title><rect x="1013.8" y="483.0" width="27.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1016.8" y="494.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (258 samples, 1.47%)</title><rect x="1019.9" y="467.0" width="17.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1022.9" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (256 samples, 1.46%)</title><rect x="1020.0" y="451.0" width="17.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1023.0" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (244 samples, 1.39%)</title><rect x="1020.8" y="435.0" width="16.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1023.8" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (242 samples, 1.38%)</title><rect x="1021.0" y="419.0" width="16.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1024.0" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.04%)</title><rect x="1031.7" y="403.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1034.7" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (63 samples, 0.36%)</title><rect x="1032.2" y="403.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1035.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (60 samples, 0.34%)</title><rect x="1032.4" y="387.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1035.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (57 samples, 0.32%)</title><rect x="1032.6" y="371.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1035.6" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (56 samples, 0.32%)</title><rect x="1032.7" y="355.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1035.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (25 samples, 0.14%)</title><rect x="1034.7" y="339.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1037.7" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.03%)</title><rect x="1036.0" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1039.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="1036.1" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1039.1" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="1036.1" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1039.1" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.06%)</title><rect x="1036.4" y="403.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1039.4" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (40 samples, 0.23%)</title><rect x="1037.2" y="467.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1040.2" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (40 samples, 0.23%)</title><rect x="1037.2" y="451.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1040.2" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (38 samples, 0.22%)</title><rect x="1037.4" y="435.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1040.4" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (34 samples, 0.19%)</title><rect x="1037.6" y="419.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1040.6" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (34 samples, 0.19%)</title><rect x="1037.6" y="403.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1040.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (34 samples, 0.19%)</title><rect x="1037.6" y="387.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1040.6" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (26 samples, 0.15%)</title><rect x="1037.7" y="371.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1040.7" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.06%)</title><rect x="1037.7" y="355.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1040.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="1037.9" y="339.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1040.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.03%)</title><rect x="1038.0" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1041.0" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.03%)</title><rect x="1038.0" y="307.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1041.0" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (16 samples, 0.09%)</title><rect x="1038.4" y="355.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1041.4" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (16 samples, 0.09%)</title><rect x="1038.4" y="339.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1041.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="1038.6" y="323.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1041.6" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="1039.1" y="323.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1042.1" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="1039.2" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1042.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.04%)</title><rect x="1039.5" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1042.5" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (21 samples, 0.12%)</title><rect x="1039.9" y="467.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1042.9" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (9 samples, 0.05%)</title><rect x="1040.7" y="451.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1043.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (78 samples, 0.44%)</title><rect x="1041.5" y="547.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (73 samples, 0.42%)</title><rect x="1041.5" y="531.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1044.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (73 samples, 0.42%)</title><rect x="1041.5" y="515.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1044.5" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (65 samples, 0.37%)</title><rect x="1042.1" y="499.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.1" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (65 samples, 0.37%)</title><rect x="1042.1" y="483.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1045.1" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (65 samples, 0.37%)</title><rect x="1042.1" y="467.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.1" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (64 samples, 0.36%)</title><rect x="1042.1" y="451.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1045.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.35%)</title><rect x="1042.3" y="435.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1045.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.35%)</title><rect x="1042.3" y="419.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1045.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (33 samples, 0.19%)</title><rect x="1042.4" y="403.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1045.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (27 samples, 0.15%)</title><rect x="1042.8" y="387.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1045.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (27 samples, 0.15%)</title><rect x="1042.8" y="371.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1045.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (27 samples, 0.15%)</title><rect x="1042.8" y="355.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1045.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (16 samples, 0.09%)</title><rect x="1042.8" y="339.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1045.8" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13 samples, 0.07%)</title><rect x="1042.8" y="323.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1045.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13 samples, 0.07%)</title><rect x="1042.8" y="307.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1045.8" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (11 samples, 0.06%)</title><rect x="1043.0" y="291.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1046.0" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (11 samples, 0.06%)</title><rect x="1043.0" y="275.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.0" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="1043.2" y="259.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.2" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="1043.2" y="243.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1046.2" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1043.3" y="227.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1046.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (9 samples, 0.05%)</title><rect x="1043.9" y="339.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1046.9" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (4 samples, 0.02%)</title><rect x="1044.2" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1047.2" y="334.0"></text>
</g>
<g>
<title>java/nio/Bits.swap (4 samples, 0.02%)</title><rect x="1044.2" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1047.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (27 samples, 0.15%)</title><rect x="1044.6" y="403.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1047.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (27 samples, 0.15%)</title><rect x="1044.6" y="387.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1047.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (27 samples, 0.15%)</title><rect x="1044.6" y="371.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1047.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (27 samples, 0.15%)</title><rect x="1044.6" y="355.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1047.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (25 samples, 0.14%)</title><rect x="1044.8" y="339.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1047.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (25 samples, 0.14%)</title><rect x="1044.8" y="323.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1047.8" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (25 samples, 0.14%)</title><rect x="1044.8" y="307.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1047.8" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (25 samples, 0.14%)</title><rect x="1044.8" y="291.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1047.8" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="1044.8" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1047.8" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="1044.8" y="259.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1047.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (18 samples, 0.10%)</title><rect x="1045.2" y="275.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1048.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (18 samples, 0.10%)</title><rect x="1045.2" y="259.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.2" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (16 samples, 0.09%)</title><rect x="1045.2" y="243.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1048.2" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (16 samples, 0.09%)</title><rect x="1045.2" y="227.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.2" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1046.0" y="211.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1049.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.03%)</title><rect x="1046.5" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1049.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1046.5" y="515.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1049.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.03%)</title><rect x="1046.5" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.5" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (4 samples, 0.02%)</title><rect x="1046.5" y="483.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1049.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (4 samples, 0.02%)</title><rect x="1046.5" y="467.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1049.5" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (4 samples, 0.02%)</title><rect x="1046.5" y="451.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1049.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="1046.5" y="435.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1049.5" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="1046.5" y="419.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1049.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (4 samples, 0.02%)</title><rect x="1046.5" y="403.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1049.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (4 samples, 0.02%)</title><rect x="1046.5" y="387.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1049.5" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (4 samples, 0.02%)</title><rect x="1046.5" y="371.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1049.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="1046.5" y="355.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.sendResponse (190 samples, 1.08%)</title><rect x="1046.8" y="643.0" width="12.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1049.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (190 samples, 1.08%)</title><rect x="1046.8" y="627.0" width="12.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1049.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (186 samples, 1.06%)</title><rect x="1047.0" y="611.0" width="12.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1050.0" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (184 samples, 1.05%)</title><rect x="1047.1" y="595.0" width="12.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1050.1" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (184 samples, 1.05%)</title><rect x="1047.1" y="579.0" width="12.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1050.1" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (180 samples, 1.03%)</title><rect x="1047.4" y="563.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1050.4" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (179 samples, 1.02%)</title><rect x="1047.5" y="547.0" width="12.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1050.5" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (173 samples, 0.99%)</title><rect x="1047.5" y="531.0" width="11.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1050.5" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (165 samples, 0.94%)</title><rect x="1048.0" y="515.0" width="11.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1051.0" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (165 samples, 0.94%)</title><rect x="1048.0" y="499.0" width="11.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1051.0" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (162 samples, 0.92%)</title><rect x="1048.2" y="483.0" width="10.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1051.2" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (161 samples, 0.92%)</title><rect x="1048.3" y="467.0" width="10.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1051.3" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (156 samples, 0.89%)</title><rect x="1048.5" y="451.0" width="10.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1051.5" y="462.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.02%)</title><rect x="1048.5" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1051.5" y="446.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.02%)</title><rect x="1048.5" y="419.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1051.5" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (152 samples, 0.87%)</title><rect x="1048.8" y="435.0" width="10.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1051.8" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (150 samples, 0.86%)</title><rect x="1048.9" y="419.0" width="10.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1051.9" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (138 samples, 0.79%)</title><rect x="1049.1" y="403.0" width="9.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1052.1" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (138 samples, 0.79%)</title><rect x="1049.1" y="387.0" width="9.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1052.1" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (135 samples, 0.77%)</title><rect x="1049.1" y="371.0" width="9.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1052.1" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (130 samples, 0.74%)</title><rect x="1049.3" y="355.0" width="8.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1052.3" y="366.0"></text>
</g>
<g>
<title>ip_local_out (27 samples, 0.15%)</title><rect x="1049.6" y="339.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1052.6" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (27 samples, 0.15%)</title><rect x="1049.6" y="323.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1052.6" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (25 samples, 0.14%)</title><rect x="1049.7" y="307.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1052.7" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="1049.7" y="291.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1052.7" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (6 samples, 0.03%)</title><rect x="1050.0" y="291.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1053.0" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="1050.2" y="275.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1053.2" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (12 samples, 0.07%)</title><rect x="1050.5" y="291.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1053.5" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (7 samples, 0.04%)</title><rect x="1050.6" y="275.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1053.6" y="286.0"></text>
</g>
<g>
<title>ip_output (99 samples, 0.56%)</title><rect x="1051.4" y="339.0" width="6.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1054.4" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (86 samples, 0.49%)</title><rect x="1051.4" y="323.0" width="5.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1054.4" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.05%)</title><rect x="1051.5" y="307.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1054.5" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.04%)</title><rect x="1051.6" y="291.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1054.6" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.03%)</title><rect x="1051.6" y="275.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1054.6" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (77 samples, 0.44%)</title><rect x="1052.0" y="307.0" width="5.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1055.0" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (77 samples, 0.44%)</title><rect x="1052.0" y="291.0" width="5.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1055.0" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (75 samples, 0.43%)</title><rect x="1052.2" y="275.0" width="5.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1055.2" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (75 samples, 0.43%)</title><rect x="1052.2" y="259.0" width="5.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1055.2" y="270.0"></text>
</g>
<g>
<title>net_rx_action (75 samples, 0.43%)</title><rect x="1052.2" y="243.0" width="5.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1055.2" y="254.0"></text>
</g>
<g>
<title>process_backlog (75 samples, 0.43%)</title><rect x="1052.2" y="227.0" width="5.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1055.2" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (75 samples, 0.43%)</title><rect x="1052.2" y="211.0" width="5.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1055.2" y="222.0"></text>
</g>
<g>
<title>ip_rcv (74 samples, 0.42%)</title><rect x="1052.2" y="195.0" width="5.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1055.2" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (57 samples, 0.32%)</title><rect x="1052.2" y="179.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1055.2" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (49 samples, 0.28%)</title><rect x="1052.2" y="163.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1055.2" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (49 samples, 0.28%)</title><rect x="1052.2" y="147.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1055.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (49 samples, 0.28%)</title><rect x="1052.2" y="131.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1055.2" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (43 samples, 0.25%)</title><rect x="1052.6" y="115.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1055.6" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (42 samples, 0.24%)</title><rect x="1052.6" y="99.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1055.6" y="110.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.05%)</title><rect x="1052.6" y="83.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1055.6" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.02%)</title><rect x="1052.7" y="67.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1055.7" y="78.0"></text>
</g>
<g>
<title>tcp_data_queue (33 samples, 0.19%)</title><rect x="1053.2" y="83.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1056.2" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (31 samples, 0.18%)</title><rect x="1053.2" y="67.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1056.2" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (30 samples, 0.17%)</title><rect x="1053.3" y="51.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1056.3" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (30 samples, 0.17%)</title><rect x="1053.3" y="35.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1056.3" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.05%)</title><rect x="1055.5" y="163.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1058.5" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.04%)</title><rect x="1055.5" y="147.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1058.5" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (17 samples, 0.10%)</title><rect x="1056.1" y="179.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1059.1" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (13 samples, 0.07%)</title><rect x="1056.1" y="163.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1059.1" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.06%)</title><rect x="1057.4" y="323.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1060.4" y="334.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (4 samples, 0.02%)</title><rect x="1057.8" y="307.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1060.8" y="318.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.03%)</title><rect x="1058.4" y="403.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1061.4" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.03%)</title><rect x="1058.4" y="387.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1061.4" y="398.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="1059.1" y="531.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1062.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="1059.1" y="515.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1062.1" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.02%)</title><rect x="1059.1" y="499.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1062.1" y="510.0"></text>
</g>
<g>
<title>[worker-4 tid=14274] (1,017 samples, 5.80%)</title><rect x="1059.6" y="739.0" width="68.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1062.6" y="750.0">[worker..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.04%)</title><rect x="1059.7" y="723.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1062.7" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.03%)</title><rect x="1059.8" y="707.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1062.8" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (6 samples, 0.03%)</title><rect x="1059.8" y="691.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1062.8" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.03%)</title><rect x="1059.8" y="675.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1062.8" y="686.0"></text>
</g>
<g>
<title>[unknown_Java] (32 samples, 0.18%)</title><rect x="1060.4" y="723.0" width="2.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1063.4" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.02%)</title><rect x="1062.3" y="707.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1065.3" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.run (972 samples, 5.54%)</title><rect x="1062.6" y="723.0" width="65.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1065.6" y="734.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (972 samples, 5.54%)</title><rect x="1062.6" y="707.0" width="65.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1065.6" y="718.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (972 samples, 5.54%)</title><rect x="1062.6" y="691.0" width="65.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1065.6" y="702.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (37 samples, 0.21%)</title><rect x="1062.7" y="675.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1065.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (35 samples, 0.20%)</title><rect x="1062.8" y="659.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (25 samples, 0.14%)</title><rect x="1063.0" y="643.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1066.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (23 samples, 0.13%)</title><rect x="1063.1" y="627.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1066.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (23 samples, 0.13%)</title><rect x="1063.1" y="611.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1066.1" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (10 samples, 0.06%)</title><rect x="1063.1" y="595.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1066.1" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.04%)</title><rect x="1063.2" y="579.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1066.2" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="1063.3" y="563.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1066.3" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="1063.3" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1066.3" y="558.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.07%)</title><rect x="1063.8" y="595.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1066.8" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (11 samples, 0.06%)</title><rect x="1063.8" y="579.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1066.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.05%)</title><rect x="1064.0" y="563.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1067.0" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.05%)</title><rect x="1064.0" y="547.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1067.0" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.04%)</title><rect x="1064.1" y="531.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1067.1" y="542.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.04%)</title><rect x="1064.1" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1067.1" y="526.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.04%)</title><rect x="1064.1" y="499.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1067.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.03%)</title><rect x="1064.7" y="643.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1067.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.03%)</title><rect x="1064.7" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1067.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.03%)</title><rect x="1064.8" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1067.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.03%)</title><rect x="1064.8" y="595.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1067.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.03%)</title><rect x="1064.8" y="579.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1067.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (933 samples, 5.32%)</title><rect x="1065.2" y="675.0" width="62.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1068.2" y="686.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (933 samples, 5.32%)</title><rect x="1065.2" y="659.0" width="62.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1068.2" y="670.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (97 samples, 0.55%)</title><rect x="1065.4" y="643.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1068.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (97 samples, 0.55%)</title><rect x="1065.4" y="627.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1068.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (97 samples, 0.55%)</title><rect x="1065.4" y="611.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1068.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (96 samples, 0.55%)</title><rect x="1065.4" y="595.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1068.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (96 samples, 0.55%)</title><rect x="1065.4" y="579.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1068.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (16 samples, 0.09%)</title><rect x="1065.6" y="563.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1068.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (16 samples, 0.09%)</title><rect x="1065.6" y="547.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1068.6" y="558.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="1065.6" y="531.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1068.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="1065.6" y="515.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1068.6" y="526.0"></text>
</g>
<g>
<title>__libc_recv (10 samples, 0.06%)</title><rect x="1065.9" y="531.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1068.9" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.05%)</title><rect x="1066.0" y="515.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1069.0" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.05%)</title><rect x="1066.0" y="499.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1069.0" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (8 samples, 0.05%)</title><rect x="1066.0" y="483.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1069.0" y="494.0"></text>
</g>
<g>
<title>__sys_recvfrom (8 samples, 0.05%)</title><rect x="1066.0" y="467.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1069.0" y="478.0"></text>
</g>
<g>
<title>inet_recvmsg (8 samples, 0.05%)</title><rect x="1066.0" y="451.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1069.0" y="462.0"></text>
</g>
<g>
<title>tcp_recvmsg (8 samples, 0.05%)</title><rect x="1066.0" y="435.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1069.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (10 samples, 0.06%)</title><rect x="1066.9" y="563.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1069.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (10 samples, 0.06%)</title><rect x="1066.9" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1069.9" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (8 samples, 0.05%)</title><rect x="1067.6" y="563.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1070.6" y="574.0"></text>
</g>
<g>
<title>setsockopt (7 samples, 0.04%)</title><rect x="1067.6" y="547.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1070.6" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="1067.8" y="531.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1070.8" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="1067.8" y="515.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1070.8" y="526.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (5 samples, 0.03%)</title><rect x="1067.8" y="499.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1070.8" y="510.0"></text>
</g>
<g>
<title>__sys_setsockopt (5 samples, 0.03%)</title><rect x="1067.8" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1070.8" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (55 samples, 0.31%)</title><rect x="1068.1" y="563.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1071.1" y="574.0"></text>
</g>
<g>
<title>.annobin_send.c (53 samples, 0.30%)</title><rect x="1068.2" y="547.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1071.2" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (53 samples, 0.30%)</title><rect x="1068.2" y="531.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1071.2" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (53 samples, 0.30%)</title><rect x="1068.2" y="515.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1071.2" y="526.0"></text>
</g>
<g>
<title>__x64_sys_sendto (53 samples, 0.30%)</title><rect x="1068.2" y="499.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1071.2" y="510.0"></text>
</g>
<g>
<title>__sys_sendto (53 samples, 0.30%)</title><rect x="1068.2" y="483.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1071.2" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (51 samples, 0.29%)</title><rect x="1068.2" y="467.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1071.2" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (50 samples, 0.29%)</title><rect x="1068.2" y="451.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1071.2" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (50 samples, 0.29%)</title><rect x="1068.2" y="435.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1071.2" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (46 samples, 0.26%)</title><rect x="1068.3" y="419.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1071.3" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (46 samples, 0.26%)</title><rect x="1068.3" y="403.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1071.3" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (46 samples, 0.26%)</title><rect x="1068.3" y="387.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1071.3" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (44 samples, 0.25%)</title><rect x="1068.4" y="371.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1071.4" y="382.0"></text>
</g>
<g>
<title>ip_local_out (6 samples, 0.03%)</title><rect x="1068.4" y="355.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1071.4" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (6 samples, 0.03%)</title><rect x="1068.4" y="339.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1071.4" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="1068.5" y="323.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1071.5" y="334.0"></text>
</g>
<g>
<title>ip_output (37 samples, 0.21%)</title><rect x="1068.9" y="355.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1071.9" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (35 samples, 0.20%)</title><rect x="1068.9" y="339.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1071.9" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (30 samples, 0.17%)</title><rect x="1069.2" y="323.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1072.2" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (30 samples, 0.17%)</title><rect x="1069.2" y="307.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1072.2" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (30 samples, 0.17%)</title><rect x="1069.2" y="291.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1072.2" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (30 samples, 0.17%)</title><rect x="1069.2" y="275.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1072.2" y="286.0"></text>
</g>
<g>
<title>net_rx_action (30 samples, 0.17%)</title><rect x="1069.2" y="259.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1072.2" y="270.0"></text>
</g>
<g>
<title>process_backlog (30 samples, 0.17%)</title><rect x="1069.2" y="243.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1072.2" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (29 samples, 0.17%)</title><rect x="1069.3" y="227.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1072.3" y="238.0"></text>
</g>
<g>
<title>ip_rcv (29 samples, 0.17%)</title><rect x="1069.3" y="211.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1072.3" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (23 samples, 0.13%)</title><rect x="1069.3" y="195.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1072.3" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (20 samples, 0.11%)</title><rect x="1069.3" y="179.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1072.3" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (20 samples, 0.11%)</title><rect x="1069.3" y="163.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1072.3" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (20 samples, 0.11%)</title><rect x="1069.3" y="147.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1072.3" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (16 samples, 0.09%)</title><rect x="1069.5" y="131.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1072.5" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (16 samples, 0.09%)</title><rect x="1069.5" y="115.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1072.5" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (10 samples, 0.06%)</title><rect x="1069.9" y="99.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1072.9" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (7 samples, 0.04%)</title><rect x="1070.0" y="83.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1073.0" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.04%)</title><rect x="1070.0" y="67.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1073.0" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.04%)</title><rect x="1070.0" y="51.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1073.0" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="1070.9" y="195.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1073.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (671 samples, 3.83%)</title><rect x="1071.9" y="643.0" width="45.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1074.9" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (671 samples, 3.83%)</title><rect x="1071.9" y="627.0" width="45.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1074.9" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (671 samples, 3.83%)</title><rect x="1071.9" y="611.0" width="45.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1074.9" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (668 samples, 3.81%)</title><rect x="1072.1" y="595.0" width="44.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1075.1" y="606.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (28 samples, 0.16%)</title><rect x="1072.1" y="579.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1075.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (28 samples, 0.16%)</title><rect x="1072.1" y="563.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1075.1" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (28 samples, 0.16%)</title><rect x="1072.1" y="547.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1075.1" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (28 samples, 0.16%)</title><rect x="1072.1" y="531.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1075.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (28 samples, 0.16%)</title><rect x="1072.1" y="515.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1075.1" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (22 samples, 0.13%)</title><rect x="1072.2" y="499.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1075.2" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (15 samples, 0.09%)</title><rect x="1072.2" y="483.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1075.2" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (15 samples, 0.09%)</title><rect x="1072.2" y="467.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1075.2" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (15 samples, 0.09%)</title><rect x="1072.2" y="451.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1075.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.09%)</title><rect x="1072.2" y="435.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1075.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (14 samples, 0.08%)</title><rect x="1072.3" y="419.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (13 samples, 0.07%)</title><rect x="1072.3" y="403.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1075.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (13 samples, 0.07%)</title><rect x="1072.3" y="387.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1075.3" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (13 samples, 0.07%)</title><rect x="1072.3" y="371.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1075.3" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (13 samples, 0.07%)</title><rect x="1072.3" y="355.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1075.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (12 samples, 0.07%)</title><rect x="1072.4" y="339.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1075.4" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (12 samples, 0.07%)</title><rect x="1072.4" y="323.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1075.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (12 samples, 0.07%)</title><rect x="1072.4" y="307.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1075.4" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (12 samples, 0.07%)</title><rect x="1072.4" y="291.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1075.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (9 samples, 0.05%)</title><rect x="1072.6" y="275.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1075.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (8 samples, 0.05%)</title><rect x="1072.7" y="259.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1075.7" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="1072.7" y="243.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1075.7" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.03%)</title><rect x="1072.7" y="227.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1075.7" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1072.8" y="211.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1075.8" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1072.8" y="195.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1075.8" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7 samples, 0.04%)</title><rect x="1073.2" y="483.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1076.2" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7 samples, 0.04%)</title><rect x="1073.2" y="467.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1076.2" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.03%)</title><rect x="1073.4" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1076.4" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.03%)</title><rect x="1073.4" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1076.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="1073.4" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1076.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="1073.4" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1076.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (4 samples, 0.02%)</title><rect x="1073.4" y="387.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1076.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (4 samples, 0.02%)</title><rect x="1073.4" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1076.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (4 samples, 0.02%)</title><rect x="1073.4" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1076.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="1073.4" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1076.4" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (4 samples, 0.02%)</title><rect x="1073.4" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1076.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="1073.4" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1076.4" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (4 samples, 0.02%)</title><rect x="1073.4" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1076.4" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="1073.4" y="275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1076.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (637 samples, 3.63%)</title><rect x="1074.2" y="579.0" width="42.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1077.2" y="590.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (637 samples, 3.63%)</title><rect x="1074.2" y="563.0" width="42.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1077.2" y="574.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (556 samples, 3.17%)</title><rect x="1074.2" y="547.0" width="37.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1077.2" y="558.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (35 samples, 0.20%)</title><rect x="1074.2" y="531.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1077.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (35 samples, 0.20%)</title><rect x="1074.2" y="515.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1077.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (32 samples, 0.18%)</title><rect x="1074.3" y="499.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1077.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (30 samples, 0.17%)</title><rect x="1074.4" y="483.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1077.4" y="494.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (7 samples, 0.04%)</title><rect x="1075.1" y="467.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1078.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.04%)</title><rect x="1075.6" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1078.6" y="478.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (4 samples, 0.02%)</title><rect x="1075.8" y="451.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1078.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (6 samples, 0.03%)</title><rect x="1076.0" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1079.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.03%)</title><rect x="1076.0" y="451.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1079.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (19 samples, 0.11%)</title><rect x="1076.6" y="531.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (8 samples, 0.05%)</title><rect x="1076.7" y="515.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1079.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (7 samples, 0.04%)</title><rect x="1076.7" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1079.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (7 samples, 0.04%)</title><rect x="1076.7" y="483.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1079.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (7 samples, 0.04%)</title><rect x="1076.7" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1079.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (7 samples, 0.04%)</title><rect x="1076.7" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (6 samples, 0.03%)</title><rect x="1076.7" y="435.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1079.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (6 samples, 0.03%)</title><rect x="1076.7" y="419.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1079.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (6 samples, 0.03%)</title><rect x="1076.7" y="403.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1079.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (10 samples, 0.06%)</title><rect x="1077.2" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1080.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8 samples, 0.05%)</title><rect x="1077.2" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1080.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8 samples, 0.05%)</title><rect x="1077.2" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1080.2" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.02%)</title><rect x="1077.5" y="467.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1080.5" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.02%)</title><rect x="1077.5" y="451.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1080.5" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (4 samples, 0.02%)</title><rect x="1077.5" y="435.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1080.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (501 samples, 2.86%)</title><rect x="1077.9" y="531.0" width="33.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1080.9" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (501 samples, 2.86%)</title><rect x="1077.9" y="515.0" width="33.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1080.9" y="526.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (501 samples, 2.86%)</title><rect x="1077.9" y="499.0" width="33.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1080.9" y="510.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="1077.9" y="483.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1080.9" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.04%)</title><rect x="1077.9" y="467.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1080.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (76 samples, 0.43%)</title><rect x="1078.4" y="483.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1081.4" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.getInt (5 samples, 0.03%)</title><rect x="1078.4" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1081.4" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (34 samples, 0.19%)</title><rect x="1078.7" y="467.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1081.7" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (34 samples, 0.19%)</title><rect x="1078.7" y="451.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1081.7" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (30 samples, 0.17%)</title><rect x="1079.0" y="435.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1082.0" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (30 samples, 0.17%)</title><rect x="1079.0" y="419.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1082.0" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="1079.3" y="403.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1082.3" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="1079.3" y="387.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1082.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="1079.3" y="371.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1082.3" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="1079.3" y="355.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1082.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="1079.3" y="339.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1082.3" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="1079.5" y="323.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1082.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="1079.6" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1082.6" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="1079.6" y="291.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1082.6" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (16 samples, 0.09%)</title><rect x="1080.0" y="339.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1083.0" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="1080.8" y="323.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1083.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (37 samples, 0.21%)</title><rect x="1081.0" y="467.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1084.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (37 samples, 0.21%)</title><rect x="1081.0" y="451.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1084.0" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (36 samples, 0.21%)</title><rect x="1081.1" y="435.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1084.1" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (36 samples, 0.21%)</title><rect x="1081.1" y="419.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1084.1" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (36 samples, 0.21%)</title><rect x="1081.1" y="403.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1084.1" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (36 samples, 0.21%)</title><rect x="1081.1" y="387.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1084.1" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (32 samples, 0.18%)</title><rect x="1081.4" y="371.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1084.4" y="382.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1081.4" y="355.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1084.4" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="1081.7" y="355.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1084.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="1081.7" y="339.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1084.7" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (21 samples, 0.12%)</title><rect x="1082.1" y="355.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1085.1" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (21 samples, 0.12%)</title><rect x="1082.1" y="339.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1085.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="1083.1" y="323.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1086.1" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="1083.2" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1086.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (417 samples, 2.38%)</title><rect x="1083.5" y="483.0" width="28.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1086.5" y="494.0">ru..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (266 samples, 1.52%)</title><rect x="1089.7" y="467.0" width="17.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1092.7" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (264 samples, 1.50%)</title><rect x="1089.8" y="451.0" width="17.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1092.8" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (243 samples, 1.39%)</title><rect x="1091.3" y="435.0" width="16.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1094.3" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (243 samples, 1.39%)</title><rect x="1091.3" y="419.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1094.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="1103.0" y="403.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1106.0" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (9 samples, 0.05%)</title><rect x="1103.2" y="403.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1106.2" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (48 samples, 0.27%)</title><rect x="1103.8" y="403.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1106.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (45 samples, 0.26%)</title><rect x="1104.0" y="387.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1107.0" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (44 samples, 0.25%)</title><rect x="1104.1" y="371.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1107.1" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (44 samples, 0.25%)</title><rect x="1104.1" y="355.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1107.1" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.05%)</title><rect x="1105.7" y="339.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1108.7" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="1105.8" y="323.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1108.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.03%)</title><rect x="1105.8" y="307.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1108.8" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.03%)</title><rect x="1105.8" y="291.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1108.8" y="302.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (12 samples, 0.07%)</title><rect x="1106.3" y="339.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1109.3" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.03%)</title><rect x="1107.1" y="403.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1110.1" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (43 samples, 0.25%)</title><rect x="1107.6" y="467.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1110.6" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (42 samples, 0.24%)</title><rect x="1107.7" y="451.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1110.7" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (41 samples, 0.23%)</title><rect x="1107.7" y="435.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1110.7" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (33 samples, 0.19%)</title><rect x="1108.3" y="419.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1111.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (33 samples, 0.19%)</title><rect x="1108.3" y="403.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1111.3" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (32 samples, 0.18%)</title><rect x="1108.3" y="387.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1111.3" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (28 samples, 0.16%)</title><rect x="1108.4" y="371.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1111.4" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="1108.5" y="355.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.5" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.05%)</title><rect x="1108.6" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1111.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="1108.9" y="323.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.9" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="1108.9" y="307.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1111.9" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (17 samples, 0.10%)</title><rect x="1109.1" y="355.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1112.1" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (17 samples, 0.10%)</title><rect x="1109.1" y="339.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1112.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="1109.5" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1112.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.05%)</title><rect x="1109.8" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1112.8" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.04%)</title><rect x="1109.8" y="307.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1112.8" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (15 samples, 0.09%)</title><rect x="1110.5" y="467.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1113.5" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (6 samples, 0.03%)</title><rect x="1111.0" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1114.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (81 samples, 0.46%)</title><rect x="1111.6" y="547.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1114.6" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (72 samples, 0.41%)</title><rect x="1111.6" y="531.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1114.6" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (72 samples, 0.41%)</title><rect x="1111.6" y="515.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1114.6" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (62 samples, 0.35%)</title><rect x="1111.9" y="499.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1114.9" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (62 samples, 0.35%)</title><rect x="1111.9" y="483.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1114.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (61 samples, 0.35%)</title><rect x="1112.0" y="467.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1115.0" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (60 samples, 0.34%)</title><rect x="1112.0" y="451.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1115.0" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 0.32%)</title><rect x="1112.2" y="435.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1115.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (55 samples, 0.31%)</title><rect x="1112.4" y="419.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1115.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (26 samples, 0.15%)</title><rect x="1112.4" y="403.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1115.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (24 samples, 0.14%)</title><rect x="1112.6" y="387.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1115.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (23 samples, 0.13%)</title><rect x="1112.6" y="371.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1115.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (23 samples, 0.13%)</title><rect x="1112.6" y="355.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1115.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (11 samples, 0.06%)</title><rect x="1112.6" y="339.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1115.6" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (9 samples, 0.05%)</title><rect x="1112.6" y="323.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1115.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (8 samples, 0.05%)</title><rect x="1112.7" y="307.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1115.7" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.04%)</title><rect x="1112.8" y="291.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1115.8" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1112.8" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1115.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (9 samples, 0.05%)</title><rect x="1113.4" y="339.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1116.4" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (4 samples, 0.02%)</title><rect x="1113.7" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1116.7" y="334.0"></text>
</g>
<g>
<title>java/nio/Bits.swap (4 samples, 0.02%)</title><rect x="1113.7" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1116.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (28 samples, 0.16%)</title><rect x="1114.2" y="403.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1117.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (28 samples, 0.16%)</title><rect x="1114.2" y="387.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1117.2" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (26 samples, 0.15%)</title><rect x="1114.3" y="371.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1117.3" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (26 samples, 0.15%)</title><rect x="1114.3" y="355.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1117.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (23 samples, 0.13%)</title><rect x="1114.5" y="339.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1117.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (23 samples, 0.13%)</title><rect x="1114.5" y="323.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1117.5" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (23 samples, 0.13%)</title><rect x="1114.5" y="307.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1117.5" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (23 samples, 0.13%)</title><rect x="1114.5" y="291.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1117.5" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.05%)</title><rect x="1114.5" y="275.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1117.5" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.05%)</title><rect x="1114.5" y="259.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1117.5" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.03%)</title><rect x="1114.7" y="243.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1117.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (14 samples, 0.08%)</title><rect x="1115.1" y="275.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1118.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (14 samples, 0.08%)</title><rect x="1115.1" y="259.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1118.1" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13 samples, 0.07%)</title><rect x="1115.1" y="243.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1118.1" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13 samples, 0.07%)</title><rect x="1115.1" y="227.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1118.1" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.04%)</title><rect x="1115.5" y="211.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1118.5" y="222.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="1115.5" y="195.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1118.5" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1115.7" y="179.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.7" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1115.7" y="163.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.7" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1115.7" y="147.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1118.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.hasNext (4 samples, 0.02%)</title><rect x="1116.1" y="499.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1119.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.05%)</title><rect x="1116.4" y="531.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1119.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.05%)</title><rect x="1116.4" y="515.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1119.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.05%)</title><rect x="1116.4" y="499.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1119.4" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (5 samples, 0.03%)</title><rect x="1116.4" y="483.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.4" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (5 samples, 0.03%)</title><rect x="1116.4" y="467.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1119.4" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5 samples, 0.03%)</title><rect x="1116.4" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1119.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="1116.4" y="435.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1119.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="1116.4" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (5 samples, 0.03%)</title><rect x="1116.4" y="403.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1119.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (5 samples, 0.03%)</title><rect x="1116.4" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1119.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (5 samples, 0.03%)</title><rect x="1116.4" y="371.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1119.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="1116.5" y="355.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1119.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (4 samples, 0.02%)</title><rect x="1116.5" y="339.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1119.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="1116.5" y="323.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1119.5" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (4 samples, 0.02%)</title><rect x="1116.5" y="307.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1119.5" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="1116.5" y="291.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1119.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.02%)</title><rect x="1116.7" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1119.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.02%)</title><rect x="1116.7" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1119.7" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.02%)</title><rect x="1116.7" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1119.7" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.02%)</title><rect x="1116.7" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1119.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="1116.7" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1119.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="1116.7" y="403.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1119.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.sendResponse (163 samples, 0.93%)</title><rect x="1117.0" y="643.0" width="11.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1120.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (163 samples, 0.93%)</title><rect x="1117.0" y="627.0" width="11.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1120.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (156 samples, 0.89%)</title><rect x="1117.4" y="611.0" width="10.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1120.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.02%)</title><rect x="1117.4" y="595.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1120.4" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (152 samples, 0.87%)</title><rect x="1117.6" y="595.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1120.6" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (151 samples, 0.86%)</title><rect x="1117.7" y="579.0" width="10.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1120.7" y="590.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.02%)</title><rect x="1117.7" y="563.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1120.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (145 samples, 0.83%)</title><rect x="1118.1" y="563.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1121.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (145 samples, 0.83%)</title><rect x="1118.1" y="547.0" width="9.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1121.1" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (141 samples, 0.80%)</title><rect x="1118.2" y="531.0" width="9.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1121.2" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (139 samples, 0.79%)</title><rect x="1118.3" y="515.0" width="9.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1121.3" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (139 samples, 0.79%)</title><rect x="1118.3" y="499.0" width="9.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1121.3" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (139 samples, 0.79%)</title><rect x="1118.3" y="483.0" width="9.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1121.3" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (139 samples, 0.79%)</title><rect x="1118.3" y="467.0" width="9.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1121.3" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (133 samples, 0.76%)</title><rect x="1118.3" y="451.0" width="8.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1121.3" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (132 samples, 0.75%)</title><rect x="1118.4" y="435.0" width="8.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1121.4" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (130 samples, 0.74%)</title><rect x="1118.5" y="419.0" width="8.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1121.5" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (120 samples, 0.68%)</title><rect x="1118.7" y="403.0" width="8.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1121.7" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (120 samples, 0.68%)</title><rect x="1118.7" y="387.0" width="8.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1121.7" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (114 samples, 0.65%)</title><rect x="1118.8" y="371.0" width="7.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1121.8" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (110 samples, 0.63%)</title><rect x="1118.8" y="355.0" width="7.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1121.8" y="366.0"></text>
</g>
<g>
<title>ip_local_out (19 samples, 0.11%)</title><rect x="1118.8" y="339.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1121.8" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (19 samples, 0.11%)</title><rect x="1118.8" y="323.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1121.8" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (19 samples, 0.11%)</title><rect x="1118.8" y="307.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1121.8" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.05%)</title><rect x="1118.8" y="291.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1121.8" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (6 samples, 0.03%)</title><rect x="1119.5" y="291.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1122.5" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (4 samples, 0.02%)</title><rect x="1119.6" y="275.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1122.6" y="286.0"></text>
</g>
<g>
<title>ip_output (90 samples, 0.51%)</title><rect x="1120.1" y="339.0" width="6.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1123.1" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (80 samples, 0.46%)</title><rect x="1120.2" y="323.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1123.2" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.03%)</title><rect x="1120.2" y="307.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1123.2" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.02%)</title><rect x="1120.2" y="291.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1123.2" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.02%)</title><rect x="1120.2" y="275.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1123.2" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (75 samples, 0.43%)</title><rect x="1120.5" y="307.0" width="5.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1123.5" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (75 samples, 0.43%)</title><rect x="1120.5" y="291.0" width="5.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1123.5" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (74 samples, 0.42%)</title><rect x="1120.6" y="275.0" width="5.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1123.6" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (74 samples, 0.42%)</title><rect x="1120.6" y="259.0" width="5.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1123.6" y="270.0"></text>
</g>
<g>
<title>net_rx_action (70 samples, 0.40%)</title><rect x="1120.8" y="243.0" width="4.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1123.8" y="254.0"></text>
</g>
<g>
<title>process_backlog (69 samples, 0.39%)</title><rect x="1120.9" y="227.0" width="4.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1123.9" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (69 samples, 0.39%)</title><rect x="1120.9" y="211.0" width="4.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1123.9" y="222.0"></text>
</g>
<g>
<title>ip_rcv (68 samples, 0.39%)</title><rect x="1121.0" y="195.0" width="4.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1124.0" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (59 samples, 0.34%)</title><rect x="1121.0" y="179.0" width="4.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1124.0" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (51 samples, 0.29%)</title><rect x="1121.1" y="163.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1124.1" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (51 samples, 0.29%)</title><rect x="1121.1" y="147.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1124.1" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (49 samples, 0.28%)</title><rect x="1121.2" y="131.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1124.2" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.03%)</title><rect x="1121.3" y="115.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1124.3" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (43 samples, 0.25%)</title><rect x="1121.6" y="115.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1124.6" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (43 samples, 0.25%)</title><rect x="1121.6" y="99.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1124.6" y="110.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.05%)</title><rect x="1121.7" y="83.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1124.7" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (31 samples, 0.18%)</title><rect x="1122.3" y="83.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1125.3" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (28 samples, 0.16%)</title><rect x="1122.4" y="67.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1125.4" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (28 samples, 0.16%)</title><rect x="1122.4" y="51.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1125.4" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (27 samples, 0.15%)</title><rect x="1122.5" y="35.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1125.5" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.04%)</title><rect x="1124.5" y="163.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1127.5" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.04%)</title><rect x="1124.5" y="147.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1127.5" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.05%)</title><rect x="1125.0" y="179.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1128.0" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.03%)</title><rect x="1125.2" y="163.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1128.2" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.05%)</title><rect x="1125.6" y="323.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1128.6" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="1125.7" y="307.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1128.7" y="318.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.02%)</title><rect x="1126.5" y="371.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1129.5" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.02%)</title><rect x="1126.5" y="355.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1129.5" y="366.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.02%)</title><rect x="1126.5" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1129.5" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.02%)</title><rect x="1126.5" y="323.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1129.5" y="334.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.02%)</title><rect x="1126.8" y="403.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1129.8" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.02%)</title><rect x="1126.8" y="387.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1129.8" y="398.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.03%)</title><rect x="1127.2" y="451.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1130.2" y="462.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.03%)</title><rect x="1127.2" y="435.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1130.2" y="446.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.03%)</title><rect x="1127.3" y="419.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1130.3" y="430.0"></text>
</g>
<g>
<title>[worker-4 tid=14279] (922 samples, 5.26%)</title><rect x="1128.0" y="739.0" width="62.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1131.0" y="750.0">[worke..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (18 samples, 0.10%)</title><rect x="1128.0" y="723.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1131.0" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (18 samples, 0.10%)</title><rect x="1128.0" y="707.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1131.0" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (17 samples, 0.10%)</title><rect x="1128.1" y="691.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1131.1" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (15 samples, 0.09%)</title><rect x="1128.1" y="675.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1131.1" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (9 samples, 0.05%)</title><rect x="1128.2" y="659.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1131.2" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (8 samples, 0.05%)</title><rect x="1128.2" y="643.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1131.2" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (5 samples, 0.03%)</title><rect x="1128.5" y="627.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1131.5" y="638.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (4 samples, 0.02%)</title><rect x="1128.9" y="659.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1131.9" y="670.0"></text>
</g>
<g>
<title>[unknown_Java] (19 samples, 0.11%)</title><rect x="1129.3" y="723.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1132.3" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.05%)</title><rect x="1130.1" y="707.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1133.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="1130.1" y="691.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1133.1" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="1130.1" y="675.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1133.1" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="1130.2" y="659.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1133.2" y="670.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="1130.2" y="643.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1133.2" y="654.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.03%)</title><rect x="1130.2" y="627.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1133.2" y="638.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="1130.3" y="611.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1133.3" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="1130.3" y="595.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1133.3" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.03%)</title><rect x="1130.3" y="579.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1133.3" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.run (883 samples, 5.03%)</title><rect x="1130.6" y="723.0" width="59.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1133.6" y="734.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (883 samples, 5.03%)</title><rect x="1130.6" y="707.0" width="59.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1133.6" y="718.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (883 samples, 5.03%)</title><rect x="1130.6" y="691.0" width="59.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1133.6" y="702.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (52 samples, 0.30%)</title><rect x="1130.7" y="675.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1133.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (50 samples, 0.29%)</title><rect x="1130.8" y="659.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1133.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (39 samples, 0.22%)</title><rect x="1130.9" y="643.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (33 samples, 0.19%)</title><rect x="1131.3" y="627.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1134.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (33 samples, 0.19%)</title><rect x="1131.3" y="611.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.3" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (23 samples, 0.13%)</title><rect x="1131.3" y="595.0" width="1.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1134.3" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (14 samples, 0.08%)</title><rect x="1131.7" y="579.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1134.7" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="1131.9" y="563.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1134.9" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="1131.9" y="547.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1134.9" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="1132.3" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1135.3" y="542.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="1132.4" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1135.4" y="526.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="1132.4" y="499.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1135.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.06%)</title><rect x="1132.9" y="595.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1135.9" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.03%)</title><rect x="1133.0" y="579.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1136.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.05%)</title><rect x="1133.6" y="643.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1136.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.05%)</title><rect x="1133.6" y="627.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1136.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.05%)</title><rect x="1133.6" y="611.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1136.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.04%)</title><rect x="1133.7" y="595.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1136.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.04%)</title><rect x="1133.7" y="579.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1136.7" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.03%)</title><rect x="1133.8" y="563.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1136.8" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="1133.8" y="547.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1136.8" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="1133.8" y="531.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1136.8" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="1133.8" y="515.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1136.8" y="526.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="1133.8" y="499.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1136.8" y="510.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.03%)</title><rect x="1133.8" y="483.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1136.8" y="494.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="1133.8" y="467.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1136.8" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="1133.8" y="451.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1136.8" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.03%)</title><rect x="1133.8" y="435.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1136.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (830 samples, 4.73%)</title><rect x="1134.2" y="675.0" width="55.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1137.2" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (830 samples, 4.73%)</title><rect x="1134.2" y="659.0" width="55.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1137.2" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (109 samples, 0.62%)</title><rect x="1134.4" y="643.0" width="7.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1137.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (109 samples, 0.62%)</title><rect x="1134.4" y="627.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1137.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (109 samples, 0.62%)</title><rect x="1134.4" y="611.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1137.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (109 samples, 0.62%)</title><rect x="1134.4" y="595.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (109 samples, 0.62%)</title><rect x="1134.4" y="579.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1137.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (21 samples, 0.12%)</title><rect x="1134.6" y="563.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1137.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (21 samples, 0.12%)</title><rect x="1134.6" y="547.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1137.6" y="558.0"></text>
</g>
<g>
<title>__libc_recv (19 samples, 0.11%)</title><rect x="1134.7" y="531.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1137.7" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.10%)</title><rect x="1134.8" y="515.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1137.8" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.10%)</title><rect x="1134.8" y="499.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1137.8" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (15 samples, 0.09%)</title><rect x="1135.0" y="483.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1138.0" y="494.0"></text>
</g>
<g>
<title>__sys_recvfrom (15 samples, 0.09%)</title><rect x="1135.0" y="467.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1138.0" y="478.0"></text>
</g>
<g>
<title>inet_recvmsg (12 samples, 0.07%)</title><rect x="1135.0" y="451.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1138.0" y="462.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.07%)</title><rect x="1135.0" y="435.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1138.0" y="446.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.02%)</title><rect x="1135.4" y="419.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1138.4" y="430.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.02%)</title><rect x="1135.4" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1138.4" y="414.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.02%)</title><rect x="1135.4" y="387.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1138.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (5 samples, 0.03%)</title><rect x="1136.0" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1139.0" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (12 samples, 0.07%)</title><rect x="1136.6" y="563.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1139.6" y="574.0"></text>
</g>
<g>
<title>setsockopt (11 samples, 0.06%)</title><rect x="1136.7" y="547.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1139.7" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="1136.9" y="531.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1139.9" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="1136.9" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1139.9" y="526.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (6 samples, 0.03%)</title><rect x="1137.0" y="499.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1140.0" y="510.0"></text>
</g>
<g>
<title>__sys_setsockopt (6 samples, 0.03%)</title><rect x="1137.0" y="483.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1140.0" y="494.0"></text>
</g>
<g>
<title>sock_setsockopt (4 samples, 0.02%)</title><rect x="1137.1" y="467.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1140.1" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (61 samples, 0.35%)</title><rect x="1137.4" y="563.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1140.4" y="574.0"></text>
</g>
<g>
<title>.annobin_send.c (59 samples, 0.34%)</title><rect x="1137.5" y="547.0" width="3.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1140.5" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (56 samples, 0.32%)</title><rect x="1137.7" y="531.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1140.7" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (56 samples, 0.32%)</title><rect x="1137.7" y="515.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1140.7" y="526.0"></text>
</g>
<g>
<title>__x64_sys_sendto (55 samples, 0.31%)</title><rect x="1137.7" y="499.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1140.7" y="510.0"></text>
</g>
<g>
<title>__sys_sendto (55 samples, 0.31%)</title><rect x="1137.7" y="483.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1140.7" y="494.0"></text>
</g>
<g>
<title>sock_sendmsg (54 samples, 0.31%)</title><rect x="1137.8" y="467.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1140.8" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg (54 samples, 0.31%)</title><rect x="1137.8" y="451.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1140.8" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (53 samples, 0.30%)</title><rect x="1137.9" y="435.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1140.9" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (50 samples, 0.29%)</title><rect x="1137.9" y="419.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1140.9" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (50 samples, 0.29%)</title><rect x="1137.9" y="403.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1140.9" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (46 samples, 0.26%)</title><rect x="1137.9" y="387.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1140.9" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (44 samples, 0.25%)</title><rect x="1138.0" y="371.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1141.0" y="382.0"></text>
</g>
<g>
<title>ip_local_out (9 samples, 0.05%)</title><rect x="1138.0" y="355.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1141.0" y="366.0"></text>
</g>
<g>
<title>__ip_local_out (9 samples, 0.05%)</title><rect x="1138.0" y="339.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1141.0" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.05%)</title><rect x="1138.1" y="323.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1141.1" y="334.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (4 samples, 0.02%)</title><rect x="1138.3" y="307.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1141.3" y="318.0"></text>
</g>
<g>
<title>ip_output (35 samples, 0.20%)</title><rect x="1138.6" y="355.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1141.6" y="366.0"></text>
</g>
<g>
<title>ip_finish_output2 (34 samples, 0.19%)</title><rect x="1138.6" y="339.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1141.6" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (33 samples, 0.19%)</title><rect x="1138.7" y="323.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1141.7" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (33 samples, 0.19%)</title><rect x="1138.7" y="307.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1141.7" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (33 samples, 0.19%)</title><rect x="1138.7" y="291.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1141.7" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (33 samples, 0.19%)</title><rect x="1138.7" y="275.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1141.7" y="286.0"></text>
</g>
<g>
<title>net_rx_action (32 samples, 0.18%)</title><rect x="1138.7" y="259.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1141.7" y="270.0"></text>
</g>
<g>
<title>process_backlog (32 samples, 0.18%)</title><rect x="1138.7" y="243.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1141.7" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (32 samples, 0.18%)</title><rect x="1138.7" y="227.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1141.7" y="238.0"></text>
</g>
<g>
<title>ip_rcv (32 samples, 0.18%)</title><rect x="1138.7" y="211.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1141.7" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (24 samples, 0.14%)</title><rect x="1138.7" y="195.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1141.7" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (19 samples, 0.11%)</title><rect x="1138.7" y="179.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1141.7" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (18 samples, 0.10%)</title><rect x="1138.8" y="163.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1141.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (18 samples, 0.10%)</title><rect x="1138.8" y="147.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1141.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (15 samples, 0.09%)</title><rect x="1139.0" y="131.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1142.0" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (14 samples, 0.08%)</title><rect x="1139.1" y="115.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1142.1" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (11 samples, 0.06%)</title><rect x="1139.3" y="99.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1142.3" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (11 samples, 0.06%)</title><rect x="1139.3" y="83.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1142.3" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (9 samples, 0.05%)</title><rect x="1139.4" y="67.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1142.4" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.05%)</title><rect x="1139.4" y="51.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1142.4" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="1140.0" y="179.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1143.0" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.03%)</title><rect x="1140.0" y="163.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1143.0" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.03%)</title><rect x="1140.5" y="195.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1143.5" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="1140.5" y="179.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1143.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (549 samples, 3.13%)</title><rect x="1141.7" y="643.0" width="36.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1144.7" y="654.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (549 samples, 3.13%)</title><rect x="1141.7" y="627.0" width="36.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1144.7" y="638.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (548 samples, 3.12%)</title><rect x="1141.8" y="611.0" width="36.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1144.8" y="622.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (546 samples, 3.11%)</title><rect x="1141.9" y="595.0" width="36.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1144.9" y="606.0">ru/..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (26 samples, 0.15%)</title><rect x="1142.0" y="579.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1145.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (26 samples, 0.15%)</title><rect x="1142.0" y="563.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1145.0" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (26 samples, 0.15%)</title><rect x="1142.0" y="547.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1145.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (26 samples, 0.15%)</title><rect x="1142.0" y="531.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1145.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (26 samples, 0.15%)</title><rect x="1142.0" y="515.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1145.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (26 samples, 0.15%)</title><rect x="1142.0" y="499.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1145.0" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (18 samples, 0.10%)</title><rect x="1142.0" y="483.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1145.0" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (18 samples, 0.10%)</title><rect x="1142.0" y="467.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1145.0" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (17 samples, 0.10%)</title><rect x="1142.1" y="451.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.10%)</title><rect x="1142.1" y="435.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1145.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 0.09%)</title><rect x="1142.2" y="419.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (12 samples, 0.07%)</title><rect x="1142.4" y="403.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1145.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (12 samples, 0.07%)</title><rect x="1142.4" y="387.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1145.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (12 samples, 0.07%)</title><rect x="1142.4" y="371.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1145.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (12 samples, 0.07%)</title><rect x="1142.4" y="355.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1145.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (11 samples, 0.06%)</title><rect x="1142.5" y="339.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1145.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (11 samples, 0.06%)</title><rect x="1142.5" y="323.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1145.5" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (11 samples, 0.06%)</title><rect x="1142.5" y="307.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1145.5" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (11 samples, 0.06%)</title><rect x="1142.5" y="291.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1145.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (8 samples, 0.05%)</title><rect x="1142.6" y="275.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (8 samples, 0.05%)</title><rect x="1142.6" y="259.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1145.6" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="1142.6" y="243.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1145.6" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="1142.8" y="227.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1145.8" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8 samples, 0.05%)</title><rect x="1143.2" y="483.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1146.2" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.05%)</title><rect x="1143.2" y="467.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1146.2" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.05%)</title><rect x="1143.2" y="451.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1146.2" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.05%)</title><rect x="1143.2" y="435.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1146.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="1143.2" y="419.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1146.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.05%)</title><rect x="1143.2" y="403.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1146.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (5 samples, 0.03%)</title><rect x="1143.5" y="387.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1146.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (5 samples, 0.03%)</title><rect x="1143.5" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1146.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (5 samples, 0.03%)</title><rect x="1143.5" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1146.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.03%)</title><rect x="1143.5" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1146.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (4 samples, 0.02%)</title><rect x="1143.5" y="323.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1146.5" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="1143.5" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1146.5" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (4 samples, 0.02%)</title><rect x="1143.5" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1146.5" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="1143.5" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1146.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (514 samples, 2.93%)</title><rect x="1144.1" y="579.0" width="34.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1147.1" y="590.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (514 samples, 2.93%)</title><rect x="1144.1" y="563.0" width="34.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1147.1" y="574.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (445 samples, 2.54%)</title><rect x="1144.1" y="547.0" width="29.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1147.1" y="558.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (8 samples, 0.05%)</title><rect x="1144.1" y="531.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1147.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (8 samples, 0.05%)</title><rect x="1144.1" y="515.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1147.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (7 samples, 0.04%)</title><rect x="1144.1" y="499.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1147.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (7 samples, 0.04%)</title><rect x="1144.1" y="483.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1147.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (27 samples, 0.15%)</title><rect x="1144.8" y="531.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1147.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (19 samples, 0.11%)</title><rect x="1144.8" y="515.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1147.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (17 samples, 0.10%)</title><rect x="1144.8" y="499.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1147.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (17 samples, 0.10%)</title><rect x="1144.8" y="483.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1147.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (17 samples, 0.10%)</title><rect x="1144.8" y="467.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1147.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (17 samples, 0.10%)</title><rect x="1144.8" y="451.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1147.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (16 samples, 0.09%)</title><rect x="1144.9" y="435.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1147.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (16 samples, 0.09%)</title><rect x="1144.9" y="419.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1147.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (16 samples, 0.09%)</title><rect x="1144.9" y="403.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1147.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (8 samples, 0.05%)</title><rect x="1146.1" y="515.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1149.1" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (7 samples, 0.04%)</title><rect x="1146.1" y="499.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1149.1" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (7 samples, 0.04%)</title><rect x="1146.1" y="483.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (407 samples, 2.32%)</title><rect x="1146.6" y="531.0" width="27.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1149.6" y="542.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (407 samples, 2.32%)</title><rect x="1146.6" y="515.0" width="27.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1149.6" y="526.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (407 samples, 2.32%)</title><rect x="1146.6" y="499.0" width="27.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1149.6" y="510.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="1146.6" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1149.6" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.03%)</title><rect x="1146.6" y="467.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (60 samples, 0.34%)</title><rect x="1146.9" y="483.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1149.9" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (27 samples, 0.15%)</title><rect x="1147.2" y="467.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1150.2" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (27 samples, 0.15%)</title><rect x="1147.2" y="451.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1150.2" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (24 samples, 0.14%)</title><rect x="1147.4" y="435.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1150.4" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (24 samples, 0.14%)</title><rect x="1147.4" y="419.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1150.4" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (24 samples, 0.14%)</title><rect x="1147.4" y="403.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1150.4" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (23 samples, 0.13%)</title><rect x="1147.4" y="387.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1150.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (22 samples, 0.13%)</title><rect x="1147.5" y="371.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1150.5" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (21 samples, 0.12%)</title><rect x="1147.6" y="355.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1150.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (18 samples, 0.10%)</title><rect x="1147.8" y="339.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1150.8" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="1148.6" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1151.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (30 samples, 0.17%)</title><rect x="1149.0" y="467.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1152.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (30 samples, 0.17%)</title><rect x="1149.0" y="451.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1152.0" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (30 samples, 0.17%)</title><rect x="1149.0" y="435.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1152.0" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (26 samples, 0.15%)</title><rect x="1149.2" y="419.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1152.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (26 samples, 0.15%)</title><rect x="1149.2" y="403.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1152.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (26 samples, 0.15%)</title><rect x="1149.2" y="387.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1152.2" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (21 samples, 0.12%)</title><rect x="1149.6" y="371.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1152.6" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.05%)</title><rect x="1150.4" y="355.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1153.4" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.05%)</title><rect x="1150.4" y="339.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1153.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (342 samples, 1.95%)</title><rect x="1151.0" y="483.0" width="23.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1154.0" y="494.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (207 samples, 1.18%)</title><rect x="1156.3" y="467.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1159.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (206 samples, 1.17%)</title><rect x="1156.4" y="451.0" width="13.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1159.4" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (195 samples, 1.11%)</title><rect x="1157.0" y="435.0" width="13.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1160.0" y="446.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (195 samples, 1.11%)</title><rect x="1157.0" y="419.0" width="13.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1160.0" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (53 samples, 0.30%)</title><rect x="1165.9" y="403.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1168.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (48 samples, 0.27%)</title><rect x="1166.3" y="387.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1169.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (45 samples, 0.26%)</title><rect x="1166.5" y="371.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1169.5" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (43 samples, 0.25%)</title><rect x="1166.6" y="355.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1169.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (18 samples, 0.10%)</title><rect x="1168.3" y="339.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1171.3" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="1168.9" y="323.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1171.9" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="1169.2" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1172.2" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.05%)</title><rect x="1169.5" y="403.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1172.5" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (37 samples, 0.21%)</title><rect x="1170.2" y="467.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1173.2" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (35 samples, 0.20%)</title><rect x="1170.4" y="451.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1173.4" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (33 samples, 0.19%)</title><rect x="1170.5" y="435.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1173.5" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (31 samples, 0.18%)</title><rect x="1170.6" y="419.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1173.6" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (31 samples, 0.18%)</title><rect x="1170.6" y="403.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1173.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (31 samples, 0.18%)</title><rect x="1170.6" y="387.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1173.6" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="1170.8" y="371.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1173.8" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="1171.0" y="355.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1174.0" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="1171.1" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1174.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="1171.2" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1174.2" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="1171.2" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1174.2" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (15 samples, 0.09%)</title><rect x="1171.5" y="355.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1174.5" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (15 samples, 0.09%)</title><rect x="1171.5" y="339.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1174.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="1172.0" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1175.0" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (17 samples, 0.10%)</title><rect x="1172.7" y="467.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1175.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (69 samples, 0.39%)</title><rect x="1174.0" y="547.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1177.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (59 samples, 0.34%)</title><rect x="1174.1" y="531.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1177.1" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (59 samples, 0.34%)</title><rect x="1174.1" y="515.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1177.1" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (53 samples, 0.30%)</title><rect x="1174.5" y="499.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1177.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (53 samples, 0.30%)</title><rect x="1174.5" y="483.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1177.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (52 samples, 0.30%)</title><rect x="1174.5" y="467.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1177.5" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (52 samples, 0.30%)</title><rect x="1174.5" y="451.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1177.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (51 samples, 0.29%)</title><rect x="1174.6" y="435.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1177.6" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (51 samples, 0.29%)</title><rect x="1174.6" y="419.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1177.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (27 samples, 0.15%)</title><rect x="1174.7" y="403.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1177.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (27 samples, 0.15%)</title><rect x="1174.7" y="387.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1177.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (27 samples, 0.15%)</title><rect x="1174.7" y="371.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1177.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (27 samples, 0.15%)</title><rect x="1174.7" y="355.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1177.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (12 samples, 0.07%)</title><rect x="1174.7" y="339.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1177.7" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (8 samples, 0.05%)</title><rect x="1174.7" y="323.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1177.7" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (8 samples, 0.05%)</title><rect x="1174.7" y="307.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1177.7" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1174.8" y="291.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1177.8" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1174.9" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1177.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (11 samples, 0.06%)</title><rect x="1175.5" y="339.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1178.5" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="1175.5" y="323.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1178.5" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="1175.5" y="307.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1178.5" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1175.5" y="291.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1178.5" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (4 samples, 0.02%)</title><rect x="1175.9" y="323.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1178.9" y="334.0"></text>
</g>
<g>
<title>java/nio/Bits.swap (4 samples, 0.02%)</title><rect x="1175.9" y="307.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1178.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (23 samples, 0.13%)</title><rect x="1176.5" y="403.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1179.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (22 samples, 0.13%)</title><rect x="1176.5" y="387.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1179.5" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (21 samples, 0.12%)</title><rect x="1176.6" y="371.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (21 samples, 0.12%)</title><rect x="1176.6" y="355.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1179.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (4 samples, 0.02%)</title><rect x="1176.6" y="339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="1176.6" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1179.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (17 samples, 0.10%)</title><rect x="1176.9" y="339.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1179.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (17 samples, 0.10%)</title><rect x="1176.9" y="323.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1179.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (17 samples, 0.10%)</title><rect x="1176.9" y="307.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1179.9" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (17 samples, 0.10%)</title><rect x="1176.9" y="291.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1179.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.05%)</title><rect x="1176.9" y="275.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1179.9" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.05%)</title><rect x="1176.9" y="259.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1179.9" y="270.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="1177.1" y="243.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1180.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (8 samples, 0.05%)</title><rect x="1177.5" y="275.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1180.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (7 samples, 0.04%)</title><rect x="1177.6" y="259.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1180.6" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="1177.6" y="243.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1180.6" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.03%)</title><rect x="1177.6" y="227.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1180.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.05%)</title><rect x="1178.0" y="531.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1181.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.05%)</title><rect x="1178.0" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1181.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.05%)</title><rect x="1178.0" y="499.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1181.0" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (8 samples, 0.05%)</title><rect x="1178.0" y="483.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1181.0" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (8 samples, 0.05%)</title><rect x="1178.0" y="467.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1181.0" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (8 samples, 0.05%)</title><rect x="1178.0" y="451.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1181.0" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.04%)</title><rect x="1178.1" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1181.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="1178.2" y="419.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1181.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (5 samples, 0.03%)</title><rect x="1178.2" y="403.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1181.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (5 samples, 0.03%)</title><rect x="1178.2" y="387.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1181.2" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (5 samples, 0.03%)</title><rect x="1178.2" y="371.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1181.2" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.03%)</title><rect x="1178.2" y="355.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1181.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (4 samples, 0.02%)</title><rect x="1178.3" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1181.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="1178.3" y="323.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1181.3" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (4 samples, 0.02%)</title><rect x="1178.3" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1181.3" y="318.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="1178.3" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1181.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.sendResponse (169 samples, 0.96%)</title><rect x="1178.6" y="643.0" width="11.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1181.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (169 samples, 0.96%)</title><rect x="1178.6" y="627.0" width="11.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1181.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (165 samples, 0.94%)</title><rect x="1178.8" y="611.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1181.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.02%)</title><rect x="1178.8" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1181.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.02%)</title><rect x="1178.8" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1181.8" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (161 samples, 0.92%)</title><rect x="1179.1" y="595.0" width="10.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1182.1" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (161 samples, 0.92%)</title><rect x="1179.1" y="579.0" width="10.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1182.1" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (155 samples, 0.88%)</title><rect x="1179.4" y="563.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1182.4" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (154 samples, 0.88%)</title><rect x="1179.4" y="547.0" width="10.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1182.4" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (148 samples, 0.84%)</title><rect x="1179.6" y="531.0" width="9.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1182.6" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (140 samples, 0.80%)</title><rect x="1180.1" y="515.0" width="9.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1183.1" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (140 samples, 0.80%)</title><rect x="1180.1" y="499.0" width="9.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1183.1" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (139 samples, 0.79%)</title><rect x="1180.2" y="483.0" width="9.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1183.2" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (138 samples, 0.79%)</title><rect x="1180.2" y="467.0" width="9.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1183.2" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (134 samples, 0.76%)</title><rect x="1180.4" y="451.0" width="9.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1183.4" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (132 samples, 0.75%)</title><rect x="1180.6" y="435.0" width="8.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1183.6" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (130 samples, 0.74%)</title><rect x="1180.7" y="419.0" width="8.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1183.7" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (120 samples, 0.68%)</title><rect x="1180.8" y="403.0" width="8.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1183.8" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (120 samples, 0.68%)</title><rect x="1180.8" y="387.0" width="8.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1183.8" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (115 samples, 0.66%)</title><rect x="1181.0" y="371.0" width="7.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1184.0" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (112 samples, 0.64%)</title><rect x="1181.1" y="355.0" width="7.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1184.1" y="366.0"></text>
</g>
<g>
<title>ip_local_out (26 samples, 0.15%)</title><rect x="1181.1" y="339.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1184.1" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (26 samples, 0.15%)</title><rect x="1181.1" y="323.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1184.1" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (26 samples, 0.15%)</title><rect x="1181.1" y="307.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1184.1" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.05%)</title><rect x="1181.1" y="291.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1184.1" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (14 samples, 0.08%)</title><rect x="1181.9" y="291.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1184.9" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (8 samples, 0.05%)</title><rect x="1182.1" y="275.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1185.1" y="286.0"></text>
</g>
<g>
<title>ip_output (86 samples, 0.49%)</title><rect x="1182.8" y="339.0" width="5.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1185.8" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (75 samples, 0.43%)</title><rect x="1182.8" y="323.0" width="5.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1185.8" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.03%)</title><rect x="1182.9" y="307.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1185.9" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.03%)</title><rect x="1183.0" y="291.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1186.0" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.02%)</title><rect x="1183.1" y="275.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1186.1" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (67 samples, 0.38%)</title><rect x="1183.3" y="307.0" width="4.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1186.3" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (67 samples, 0.38%)</title><rect x="1183.3" y="291.0" width="4.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1186.3" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (67 samples, 0.38%)</title><rect x="1183.3" y="275.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1186.3" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (67 samples, 0.38%)</title><rect x="1183.3" y="259.0" width="4.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1186.3" y="270.0"></text>
</g>
<g>
<title>net_rx_action (66 samples, 0.38%)</title><rect x="1183.4" y="243.0" width="4.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1186.4" y="254.0"></text>
</g>
<g>
<title>process_backlog (66 samples, 0.38%)</title><rect x="1183.4" y="227.0" width="4.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1186.4" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (64 samples, 0.36%)</title><rect x="1183.5" y="211.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1186.5" y="222.0"></text>
</g>
<g>
<title>ip_rcv (63 samples, 0.36%)</title><rect x="1183.6" y="195.0" width="4.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1186.6" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (51 samples, 0.29%)</title><rect x="1183.6" y="179.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1186.6" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (45 samples, 0.26%)</title><rect x="1183.7" y="163.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1186.7" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (45 samples, 0.26%)</title><rect x="1183.7" y="147.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1186.7" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (45 samples, 0.26%)</title><rect x="1183.7" y="131.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1186.7" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.02%)</title><rect x="1183.9" y="115.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1186.9" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (37 samples, 0.21%)</title><rect x="1184.2" y="115.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1187.2" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (37 samples, 0.21%)</title><rect x="1184.2" y="99.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1187.2" y="110.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.06%)</title><rect x="1184.5" y="83.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1187.5" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (22 samples, 0.13%)</title><rect x="1185.2" y="83.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1188.2" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (20 samples, 0.11%)</title><rect x="1185.2" y="67.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1188.2" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (19 samples, 0.11%)</title><rect x="1185.3" y="51.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1188.3" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (19 samples, 0.11%)</title><rect x="1185.3" y="35.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1188.3" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="1186.7" y="163.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1189.7" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.05%)</title><rect x="1187.2" y="179.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1190.2" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.05%)</title><rect x="1187.2" y="163.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1190.2" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.05%)</title><rect x="1188.0" y="323.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1191.0" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.03%)</title><rect x="1188.0" y="307.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1191.0" y="318.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.04%)</title><rect x="1188.9" y="403.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1191.9" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.04%)</title><rect x="1188.9" y="387.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1191.9" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.02%)</title><rect x="1189.1" y="371.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1192.1" y="382.0"></text>
</g>
</g>
</svg>
