<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="389"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="389"> </text>
<g id="frames">
<g>
<title>all (309,262 samples, 100.00%)</title><rect x="10.0" y="355.0" width="1180.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="366.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=14155] (23,755 samples, 7.68%)</title><rect x="10.0" y="339.0" width="90.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="13.0" y="350.0">[NIO Selec..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (23,755 samples, 7.68%)</title><rect x="10.0" y="323.0" width="90.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="334.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/Session.process (23,755 samples, 7.68%)</title><rect x="10.0" y="307.0" width="90.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="318.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (164 samples, 0.05%)</title><rect x="10.0" y="291.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (164 samples, 0.05%)</title><rect x="10.0" y="275.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (164 samples, 0.05%)</title><rect x="10.0" y="259.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (164 samples, 0.05%)</title><rect x="10.0" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (164 samples, 0.05%)</title><rect x="10.0" y="227.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (164 samples, 0.05%)</title><rect x="10.0" y="211.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (164 samples, 0.05%)</title><rect x="10.0" y="195.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (164 samples, 0.05%)</title><rect x="10.0" y="179.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (164 samples, 0.05%)</title><rect x="10.0" y="163.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (164 samples, 0.05%)</title><rect x="10.0" y="147.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (164 samples, 0.05%)</title><rect x="10.0" y="131.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (164 samples, 0.05%)</title><rect x="10.0" y="115.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (164 samples, 0.05%)</title><rect x="10.0" y="99.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (164 samples, 0.05%)</title><rect x="10.0" y="83.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (164 samples, 0.05%)</title><rect x="10.0" y="67.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (164 samples, 0.05%)</title><rect x="10.0" y="51.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (164 samples, 0.05%)</title><rect x="10.0" y="35.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="13.0" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (23,591 samples, 7.63%)</title><rect x="10.6" y="291.0" width="90.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="13.6" y="302.0">ru.mail.po..</text>
</g>
<g>
<title>[NIO Selector #0 tid=14165] (817 samples, 0.26%)</title><rect x="100.6" y="339.0" width="3.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="103.6" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (817 samples, 0.26%)</title><rect x="100.6" y="323.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="103.6" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (817 samples, 0.26%)</title><rect x="100.6" y="307.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="103.6" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (788 samples, 0.25%)</title><rect x="100.7" y="291.0" width="3.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="103.7" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=14171] (51,827 samples, 16.76%)</title><rect x="103.8" y="339.0" width="197.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="106.8" y="350.0">[NIO Selector #0 tid=14171]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (51,827 samples, 16.76%)</title><rect x="103.8" y="323.0" width="197.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="106.8" y="334.0">one/nio/server/SelectorThr..</text>
</g>
<g>
<title>one/nio/net/Session.process (51,827 samples, 16.76%)</title><rect x="103.8" y="307.0" width="197.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="106.8" y="318.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (499 samples, 0.16%)</title><rect x="103.8" y="291.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (499 samples, 0.16%)</title><rect x="103.8" y="275.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (499 samples, 0.16%)</title><rect x="103.8" y="259.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (499 samples, 0.16%)</title><rect x="103.8" y="243.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.8" y="254.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (499 samples, 0.16%)</title><rect x="103.8" y="227.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="106.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (499 samples, 0.16%)</title><rect x="103.8" y="211.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (499 samples, 0.16%)</title><rect x="103.8" y="195.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (499 samples, 0.16%)</title><rect x="103.8" y="179.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (499 samples, 0.16%)</title><rect x="103.8" y="163.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (499 samples, 0.16%)</title><rect x="103.8" y="147.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (499 samples, 0.16%)</title><rect x="103.8" y="131.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="106.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (499 samples, 0.16%)</title><rect x="103.8" y="115.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (499 samples, 0.16%)</title><rect x="103.8" y="99.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="106.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (499 samples, 0.16%)</title><rect x="103.8" y="83.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.8" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (499 samples, 0.16%)</title><rect x="103.8" y="67.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.8" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (499 samples, 0.16%)</title><rect x="103.8" y="51.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="106.8" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (499 samples, 0.16%)</title><rect x="103.8" y="35.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="106.8" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (51,328 samples, 16.60%)</title><rect x="105.7" y="291.0" width="195.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="108.7" y="302.0">ru.mail.polis.service.sha..</text>
</g>
<g>
<title>[NIO Selector #1 tid=14156] (25,268 samples, 8.17%)</title><rect x="301.5" y="339.0" width="96.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="304.5" y="350.0">[NIO Select..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (25,268 samples, 8.17%)</title><rect x="301.5" y="323.0" width="96.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.5" y="334.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/Session.process (25,268 samples, 8.17%)</title><rect x="301.5" y="307.0" width="96.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="304.5" y="318.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (203 samples, 0.07%)</title><rect x="301.5" y="291.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="304.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (203 samples, 0.07%)</title><rect x="301.5" y="275.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (203 samples, 0.07%)</title><rect x="301.5" y="259.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (203 samples, 0.07%)</title><rect x="301.5" y="243.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.5" y="254.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (203 samples, 0.07%)</title><rect x="301.5" y="227.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="304.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (203 samples, 0.07%)</title><rect x="301.5" y="211.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="304.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (203 samples, 0.07%)</title><rect x="301.5" y="195.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (203 samples, 0.07%)</title><rect x="301.5" y="179.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="304.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (203 samples, 0.07%)</title><rect x="301.5" y="163.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="304.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (202 samples, 0.07%)</title><rect x="301.5" y="147.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (202 samples, 0.07%)</title><rect x="301.5" y="131.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (202 samples, 0.07%)</title><rect x="301.5" y="115.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="304.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (202 samples, 0.07%)</title><rect x="301.5" y="99.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="304.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (202 samples, 0.07%)</title><rect x="301.5" y="83.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="304.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (202 samples, 0.07%)</title><rect x="301.5" y="67.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.5" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (202 samples, 0.07%)</title><rect x="301.5" y="51.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="304.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (202 samples, 0.07%)</title><rect x="301.5" y="35.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="304.5" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (25,065 samples, 8.10%)</title><rect x="302.3" y="291.0" width="95.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="305.3" y="302.0">ru.mail.pol..</text>
</g>
<g>
<title>[NIO Selector #1 tid=14166] (67,663 samples, 21.88%)</title><rect x="397.9" y="339.0" width="258.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="400.9" y="350.0">[NIO Selector #1 tid=14166]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (67,663 samples, 21.88%)</title><rect x="397.9" y="323.0" width="258.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="400.9" y="334.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (67,663 samples, 21.88%)</title><rect x="397.9" y="307.0" width="258.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.9" y="318.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (354 samples, 0.11%)</title><rect x="397.9" y="291.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="400.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (354 samples, 0.11%)</title><rect x="397.9" y="275.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="400.9" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (354 samples, 0.11%)</title><rect x="397.9" y="259.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="400.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (354 samples, 0.11%)</title><rect x="397.9" y="243.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="400.9" y="254.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (354 samples, 0.11%)</title><rect x="397.9" y="227.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="400.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (354 samples, 0.11%)</title><rect x="397.9" y="211.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="400.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (354 samples, 0.11%)</title><rect x="397.9" y="195.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="400.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (354 samples, 0.11%)</title><rect x="397.9" y="179.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="400.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (354 samples, 0.11%)</title><rect x="397.9" y="163.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="400.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (352 samples, 0.11%)</title><rect x="397.9" y="147.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="400.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (352 samples, 0.11%)</title><rect x="397.9" y="131.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="400.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (352 samples, 0.11%)</title><rect x="397.9" y="115.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="400.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (352 samples, 0.11%)</title><rect x="397.9" y="99.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="400.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (352 samples, 0.11%)</title><rect x="397.9" y="83.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="400.9" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (352 samples, 0.11%)</title><rect x="397.9" y="67.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.9" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (352 samples, 0.11%)</title><rect x="397.9" y="51.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="400.9" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (352 samples, 0.11%)</title><rect x="397.9" y="35.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="400.9" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (67,309 samples, 21.76%)</title><rect x="399.3" y="291.0" width="256.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="402.3" y="302.0">ru.mail.polis.service.shakhmin.Sto..</text>
</g>
<g>
<title>[NIO Selector #1 tid=14172] (24,877 samples, 8.04%)</title><rect x="656.1" y="339.0" width="94.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="659.1" y="350.0">[NIO Select..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (24,877 samples, 8.04%)</title><rect x="656.1" y="323.0" width="94.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.1" y="334.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/Session.process (24,877 samples, 8.04%)</title><rect x="656.1" y="307.0" width="94.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.1" y="318.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (314 samples, 0.10%)</title><rect x="656.1" y="291.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (314 samples, 0.10%)</title><rect x="656.1" y="275.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (314 samples, 0.10%)</title><rect x="656.1" y="259.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (314 samples, 0.10%)</title><rect x="656.1" y="243.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.1" y="254.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (314 samples, 0.10%)</title><rect x="656.1" y="227.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="659.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (314 samples, 0.10%)</title><rect x="656.1" y="211.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="659.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (314 samples, 0.10%)</title><rect x="656.1" y="195.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (314 samples, 0.10%)</title><rect x="656.1" y="179.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (314 samples, 0.10%)</title><rect x="656.1" y="163.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (314 samples, 0.10%)</title><rect x="656.1" y="147.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="659.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (314 samples, 0.10%)</title><rect x="656.1" y="131.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="659.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (314 samples, 0.10%)</title><rect x="656.1" y="115.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="659.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (314 samples, 0.10%)</title><rect x="656.1" y="99.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="659.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (314 samples, 0.10%)</title><rect x="656.1" y="83.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="659.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (314 samples, 0.10%)</title><rect x="656.1" y="67.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="659.1" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (314 samples, 0.10%)</title><rect x="656.1" y="51.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="659.1" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (314 samples, 0.10%)</title><rect x="656.1" y="35.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="659.1" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (24,563 samples, 7.94%)</title><rect x="657.3" y="291.0" width="93.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="660.3" y="302.0">ru.mail.pol..</text>
</g>
<g>
<title>[NIO Selector #2 tid=14157] (27,612 samples, 8.93%)</title><rect x="751.0" y="339.0" width="105.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="754.0" y="350.0">[NIO Selector..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (27,612 samples, 8.93%)</title><rect x="751.0" y="323.0" width="105.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="754.0" y="334.0">one/nio/serve..</text>
</g>
<g>
<title>one/nio/net/Session.process (27,612 samples, 8.93%)</title><rect x="751.0" y="307.0" width="105.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.0" y="318.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (202 samples, 0.07%)</title><rect x="751.0" y="291.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (202 samples, 0.07%)</title><rect x="751.0" y="275.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (202 samples, 0.07%)</title><rect x="751.0" y="259.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (202 samples, 0.07%)</title><rect x="751.0" y="243.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.0" y="254.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (202 samples, 0.07%)</title><rect x="751.0" y="227.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="754.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (202 samples, 0.07%)</title><rect x="751.0" y="211.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="754.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (202 samples, 0.07%)</title><rect x="751.0" y="195.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (202 samples, 0.07%)</title><rect x="751.0" y="179.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (202 samples, 0.07%)</title><rect x="751.0" y="163.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (201 samples, 0.06%)</title><rect x="751.0" y="147.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (201 samples, 0.06%)</title><rect x="751.0" y="131.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (201 samples, 0.06%)</title><rect x="751.0" y="115.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (201 samples, 0.06%)</title><rect x="751.0" y="99.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (201 samples, 0.06%)</title><rect x="751.0" y="83.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (201 samples, 0.06%)</title><rect x="751.0" y="67.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="754.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (201 samples, 0.06%)</title><rect x="751.0" y="51.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.0" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (201 samples, 0.06%)</title><rect x="751.0" y="35.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="754.0" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (27,410 samples, 8.86%)</title><rect x="751.8" y="291.0" width="104.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="754.8" y="302.0">ru.mail.poli..</text>
</g>
<g>
<title>[NIO Selector #2 tid=14167] (3,437 samples, 1.11%)</title><rect x="856.4" y="339.0" width="13.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="859.4" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,437 samples, 1.11%)</title><rect x="856.4" y="323.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="859.4" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (3,437 samples, 1.11%)</title><rect x="856.4" y="307.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="859.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (69 samples, 0.02%)</title><rect x="856.4" y="291.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="859.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (69 samples, 0.02%)</title><rect x="856.4" y="275.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="859.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (69 samples, 0.02%)</title><rect x="856.4" y="259.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="859.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (69 samples, 0.02%)</title><rect x="856.4" y="243.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="859.4" y="254.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (69 samples, 0.02%)</title><rect x="856.4" y="227.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="859.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (69 samples, 0.02%)</title><rect x="856.4" y="211.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="859.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (69 samples, 0.02%)</title><rect x="856.4" y="195.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="859.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (69 samples, 0.02%)</title><rect x="856.4" y="179.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="859.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (69 samples, 0.02%)</title><rect x="856.4" y="163.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="859.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (69 samples, 0.02%)</title><rect x="856.4" y="147.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="859.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (69 samples, 0.02%)</title><rect x="856.4" y="131.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="859.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (69 samples, 0.02%)</title><rect x="856.4" y="115.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="859.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (69 samples, 0.02%)</title><rect x="856.4" y="99.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="859.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (69 samples, 0.02%)</title><rect x="856.4" y="83.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="859.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (69 samples, 0.02%)</title><rect x="856.4" y="67.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="859.4" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (69 samples, 0.02%)</title><rect x="856.4" y="51.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="859.4" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (69 samples, 0.02%)</title><rect x="856.4" y="35.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="859.4" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (3,368 samples, 1.09%)</title><rect x="856.6" y="291.0" width="12.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="859.6" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=14173] (949 samples, 0.31%)</title><rect x="869.5" y="339.0" width="3.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="872.5" y="350.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (949 samples, 0.31%)</title><rect x="869.5" y="323.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="872.5" y="334.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (949 samples, 0.31%)</title><rect x="869.5" y="307.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="872.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (87 samples, 0.03%)</title><rect x="869.5" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="872.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (87 samples, 0.03%)</title><rect x="869.5" y="275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="872.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (87 samples, 0.03%)</title><rect x="869.5" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="872.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (87 samples, 0.03%)</title><rect x="869.5" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="872.5" y="254.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (87 samples, 0.03%)</title><rect x="869.5" y="227.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="872.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (87 samples, 0.03%)</title><rect x="869.5" y="211.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="872.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (87 samples, 0.03%)</title><rect x="869.5" y="195.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="872.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (87 samples, 0.03%)</title><rect x="869.5" y="179.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="872.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (87 samples, 0.03%)</title><rect x="869.5" y="163.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="872.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (87 samples, 0.03%)</title><rect x="869.5" y="147.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="872.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (87 samples, 0.03%)</title><rect x="869.5" y="131.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="872.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (87 samples, 0.03%)</title><rect x="869.5" y="115.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="872.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (87 samples, 0.03%)</title><rect x="869.5" y="99.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="872.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (87 samples, 0.03%)</title><rect x="869.5" y="83.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="872.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (87 samples, 0.03%)</title><rect x="869.5" y="67.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="872.5" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (87 samples, 0.03%)</title><rect x="869.5" y="51.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="872.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (87 samples, 0.03%)</title><rect x="869.5" y="35.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="872.5" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (862 samples, 0.28%)</title><rect x="869.8" y="291.0" width="3.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="872.8" y="302.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=14158] (24,860 samples, 8.04%)</title><rect x="873.1" y="339.0" width="94.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="876.1" y="350.0">[NIO Select..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (24,860 samples, 8.04%)</title><rect x="873.1" y="323.0" width="94.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.1" y="334.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/Session.process (24,860 samples, 8.04%)</title><rect x="873.1" y="307.0" width="94.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="876.1" y="318.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (194 samples, 0.06%)</title><rect x="873.1" y="291.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="876.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (194 samples, 0.06%)</title><rect x="873.1" y="275.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="876.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (194 samples, 0.06%)</title><rect x="873.1" y="259.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (194 samples, 0.06%)</title><rect x="873.1" y="243.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="876.1" y="254.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (194 samples, 0.06%)</title><rect x="873.1" y="227.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="876.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (194 samples, 0.06%)</title><rect x="873.1" y="211.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="876.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (194 samples, 0.06%)</title><rect x="873.1" y="195.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="876.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (194 samples, 0.06%)</title><rect x="873.1" y="179.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (194 samples, 0.06%)</title><rect x="873.1" y="163.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="876.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (194 samples, 0.06%)</title><rect x="873.1" y="147.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (194 samples, 0.06%)</title><rect x="873.1" y="131.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="876.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (194 samples, 0.06%)</title><rect x="873.1" y="115.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="876.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (194 samples, 0.06%)</title><rect x="873.1" y="99.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="876.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (194 samples, 0.06%)</title><rect x="873.1" y="83.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="876.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (194 samples, 0.06%)</title><rect x="873.1" y="67.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="876.1" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (194 samples, 0.06%)</title><rect x="873.1" y="51.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="876.1" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (194 samples, 0.06%)</title><rect x="873.1" y="35.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="876.1" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (24,666 samples, 7.98%)</title><rect x="873.8" y="291.0" width="94.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="876.8" y="302.0">ru.mail.pol..</text>
</g>
<g>
<title>[NIO Selector #3 tid=14168] (24,537 samples, 7.93%)</title><rect x="967.9" y="339.0" width="93.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="970.9" y="350.0">[NIO Select..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (24,537 samples, 7.93%)</title><rect x="967.9" y="323.0" width="93.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="970.9" y="334.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/Session.process (24,537 samples, 7.93%)</title><rect x="967.9" y="307.0" width="93.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="970.9" y="318.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (189 samples, 0.06%)</title><rect x="967.9" y="291.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="970.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (189 samples, 0.06%)</title><rect x="967.9" y="275.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="970.9" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (189 samples, 0.06%)</title><rect x="967.9" y="259.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="970.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (189 samples, 0.06%)</title><rect x="967.9" y="243.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="970.9" y="254.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (189 samples, 0.06%)</title><rect x="967.9" y="227.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="970.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (189 samples, 0.06%)</title><rect x="967.9" y="211.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="970.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (189 samples, 0.06%)</title><rect x="967.9" y="195.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="970.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (189 samples, 0.06%)</title><rect x="967.9" y="179.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="970.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (189 samples, 0.06%)</title><rect x="967.9" y="163.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="970.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (188 samples, 0.06%)</title><rect x="967.9" y="147.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="970.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (188 samples, 0.06%)</title><rect x="967.9" y="131.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (188 samples, 0.06%)</title><rect x="967.9" y="115.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="970.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (188 samples, 0.06%)</title><rect x="967.9" y="99.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="970.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (188 samples, 0.06%)</title><rect x="967.9" y="83.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="970.9" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (188 samples, 0.06%)</title><rect x="967.9" y="67.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="970.9" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (188 samples, 0.06%)</title><rect x="967.9" y="51.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.9" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (188 samples, 0.06%)</title><rect x="967.9" y="35.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="970.9" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (24,348 samples, 7.87%)</title><rect x="968.7" y="291.0" width="92.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="971.7" y="302.0">ru.mail.pol..</text>
</g>
<g>
<title>[NIO Selector #3 tid=14174] (24,267 samples, 7.85%)</title><rect x="1061.6" y="339.0" width="92.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1064.6" y="350.0">[NIO Select..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (24,267 samples, 7.85%)</title><rect x="1061.6" y="323.0" width="92.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.6" y="334.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/Session.process (24,267 samples, 7.85%)</title><rect x="1061.6" y="307.0" width="92.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.6" y="318.0">one/nio/net..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (283 samples, 0.09%)</title><rect x="1061.6" y="291.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1064.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (283 samples, 0.09%)</title><rect x="1061.6" y="275.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1064.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (283 samples, 0.09%)</title><rect x="1061.6" y="259.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (283 samples, 0.09%)</title><rect x="1061.6" y="243.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1064.6" y="254.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (283 samples, 0.09%)</title><rect x="1061.6" y="227.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (283 samples, 0.09%)</title><rect x="1061.6" y="211.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (283 samples, 0.09%)</title><rect x="1061.6" y="195.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1064.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (283 samples, 0.09%)</title><rect x="1061.6" y="179.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (283 samples, 0.09%)</title><rect x="1061.6" y="163.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1064.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (283 samples, 0.09%)</title><rect x="1061.6" y="147.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (283 samples, 0.09%)</title><rect x="1061.6" y="131.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1064.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (283 samples, 0.09%)</title><rect x="1061.6" y="115.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (283 samples, 0.09%)</title><rect x="1061.6" y="99.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1064.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (283 samples, 0.09%)</title><rect x="1061.6" y="83.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1064.6" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (283 samples, 0.09%)</title><rect x="1061.6" y="67.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1064.6" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (283 samples, 0.09%)</title><rect x="1061.6" y="51.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.6" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (283 samples, 0.09%)</title><rect x="1061.6" y="35.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1064.6" y="46.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (23,984 samples, 7.76%)</title><rect x="1062.6" y="291.0" width="91.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1065.6" y="302.0">ru.mail.pol..</text>
</g>
<g>
<title>[worker-0 tid=14265] (655 samples, 0.21%)</title><rect x="1154.2" y="339.0" width="2.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1157.2" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (655 samples, 0.21%)</title><rect x="1154.2" y="323.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (655 samples, 0.21%)</title><rect x="1154.2" y="307.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1157.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (655 samples, 0.21%)</title><rect x="1154.2" y="291.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1157.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (611 samples, 0.20%)</title><rect x="1154.2" y="275.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1157.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (611 samples, 0.20%)</title><rect x="1154.2" y="259.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1157.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (105 samples, 0.03%)</title><rect x="1154.2" y="243.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1157.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (105 samples, 0.03%)</title><rect x="1154.2" y="227.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1157.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (105 samples, 0.03%)</title><rect x="1154.2" y="211.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1157.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (105 samples, 0.03%)</title><rect x="1154.2" y="195.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (105 samples, 0.03%)</title><rect x="1154.2" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1157.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (105 samples, 0.03%)</title><rect x="1154.2" y="163.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1157.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (506 samples, 0.16%)</title><rect x="1154.6" y="243.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1157.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (506 samples, 0.16%)</title><rect x="1154.6" y="227.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1157.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (506 samples, 0.16%)</title><rect x="1154.6" y="211.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (506 samples, 0.16%)</title><rect x="1154.6" y="195.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1157.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (506 samples, 0.16%)</title><rect x="1154.6" y="179.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1157.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (506 samples, 0.16%)</title><rect x="1154.6" y="163.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1157.6" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (506 samples, 0.16%)</title><rect x="1154.6" y="147.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1157.6" y="158.0"></text>
</g>
<g>
<title>[worker-0 tid=14269] (575 samples, 0.19%)</title><rect x="1156.7" y="339.0" width="2.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1159.7" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (575 samples, 0.19%)</title><rect x="1156.7" y="323.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1159.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (575 samples, 0.19%)</title><rect x="1156.7" y="307.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1159.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (575 samples, 0.19%)</title><rect x="1156.7" y="291.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1159.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (513 samples, 0.17%)</title><rect x="1156.7" y="275.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1159.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (513 samples, 0.17%)</title><rect x="1156.7" y="259.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1159.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (110 samples, 0.04%)</title><rect x="1156.7" y="243.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1159.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (110 samples, 0.04%)</title><rect x="1156.7" y="227.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (110 samples, 0.04%)</title><rect x="1156.7" y="211.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1159.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (110 samples, 0.04%)</title><rect x="1156.7" y="195.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1159.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (110 samples, 0.04%)</title><rect x="1156.7" y="179.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1159.7" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (110 samples, 0.04%)</title><rect x="1156.7" y="163.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1159.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (403 samples, 0.13%)</title><rect x="1157.1" y="243.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1160.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (403 samples, 0.13%)</title><rect x="1157.1" y="227.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1160.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (403 samples, 0.13%)</title><rect x="1157.1" y="211.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1160.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (403 samples, 0.13%)</title><rect x="1157.1" y="195.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1160.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (403 samples, 0.13%)</title><rect x="1157.1" y="179.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1160.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (403 samples, 0.13%)</title><rect x="1157.1" y="163.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1160.1" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (403 samples, 0.13%)</title><rect x="1157.1" y="147.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1160.1" y="158.0"></text>
</g>
<g>
<title>[worker-0 tid=14275] (706 samples, 0.23%)</title><rect x="1158.9" y="339.0" width="2.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1161.9" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (706 samples, 0.23%)</title><rect x="1158.9" y="323.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1161.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (706 samples, 0.23%)</title><rect x="1158.9" y="307.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1161.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (706 samples, 0.23%)</title><rect x="1158.9" y="291.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1161.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (639 samples, 0.21%)</title><rect x="1158.9" y="275.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1161.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (639 samples, 0.21%)</title><rect x="1158.9" y="259.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (207 samples, 0.07%)</title><rect x="1158.9" y="243.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1161.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (207 samples, 0.07%)</title><rect x="1158.9" y="227.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1161.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (207 samples, 0.07%)</title><rect x="1158.9" y="211.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1161.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (207 samples, 0.07%)</title><rect x="1158.9" y="195.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (207 samples, 0.07%)</title><rect x="1158.9" y="179.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1161.9" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (207 samples, 0.07%)</title><rect x="1158.9" y="163.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1161.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (432 samples, 0.14%)</title><rect x="1159.6" y="243.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1162.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (432 samples, 0.14%)</title><rect x="1159.6" y="227.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1162.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (432 samples, 0.14%)</title><rect x="1159.6" y="211.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1162.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (432 samples, 0.14%)</title><rect x="1159.6" y="195.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1162.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (432 samples, 0.14%)</title><rect x="1159.6" y="179.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1162.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (432 samples, 0.14%)</title><rect x="1159.6" y="163.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1162.6" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (432 samples, 0.14%)</title><rect x="1159.6" y="147.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1162.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (67 samples, 0.02%)</title><rect x="1161.3" y="275.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1164.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (67 samples, 0.02%)</title><rect x="1161.3" y="259.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1164.3" y="270.0"></text>
</g>
<g>
<title>[worker-1 tid=14268] (643 samples, 0.21%)</title><rect x="1161.5" y="339.0" width="2.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1164.5" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (643 samples, 0.21%)</title><rect x="1161.5" y="323.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1164.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (643 samples, 0.21%)</title><rect x="1161.5" y="307.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1164.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (643 samples, 0.21%)</title><rect x="1161.5" y="291.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1164.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (581 samples, 0.19%)</title><rect x="1161.5" y="275.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1164.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (581 samples, 0.19%)</title><rect x="1161.5" y="259.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1164.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (108 samples, 0.03%)</title><rect x="1161.5" y="243.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1164.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (108 samples, 0.03%)</title><rect x="1161.5" y="227.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1164.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (108 samples, 0.03%)</title><rect x="1161.5" y="211.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1164.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (108 samples, 0.03%)</title><rect x="1161.5" y="195.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1164.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (108 samples, 0.03%)</title><rect x="1161.5" y="179.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1164.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (108 samples, 0.03%)</title><rect x="1161.5" y="163.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1164.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (473 samples, 0.15%)</title><rect x="1162.0" y="243.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1165.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (473 samples, 0.15%)</title><rect x="1162.0" y="227.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1165.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (473 samples, 0.15%)</title><rect x="1162.0" y="211.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1165.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (473 samples, 0.15%)</title><rect x="1162.0" y="195.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1165.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (473 samples, 0.15%)</title><rect x="1162.0" y="179.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1165.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (473 samples, 0.15%)</title><rect x="1162.0" y="163.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1165.0" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (473 samples, 0.15%)</title><rect x="1162.0" y="147.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1165.0" y="158.0"></text>
</g>
<g>
<title>[worker-1 tid=14271] (551 samples, 0.18%)</title><rect x="1164.0" y="339.0" width="2.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1167.0" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (551 samples, 0.18%)</title><rect x="1164.0" y="323.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1167.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (551 samples, 0.18%)</title><rect x="1164.0" y="307.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1167.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (551 samples, 0.18%)</title><rect x="1164.0" y="291.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1167.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (486 samples, 0.16%)</title><rect x="1164.0" y="275.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1167.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (486 samples, 0.16%)</title><rect x="1164.0" y="259.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1167.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (84 samples, 0.03%)</title><rect x="1164.0" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1167.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (84 samples, 0.03%)</title><rect x="1164.0" y="227.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1167.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (84 samples, 0.03%)</title><rect x="1164.0" y="211.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1167.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (84 samples, 0.03%)</title><rect x="1164.0" y="195.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1167.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (84 samples, 0.03%)</title><rect x="1164.0" y="179.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1167.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (84 samples, 0.03%)</title><rect x="1164.0" y="163.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1167.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (402 samples, 0.13%)</title><rect x="1164.3" y="243.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1167.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (402 samples, 0.13%)</title><rect x="1164.3" y="227.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1167.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (402 samples, 0.13%)</title><rect x="1164.3" y="211.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1167.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (402 samples, 0.13%)</title><rect x="1164.3" y="195.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (402 samples, 0.13%)</title><rect x="1164.3" y="179.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1167.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (402 samples, 0.13%)</title><rect x="1164.3" y="163.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1167.3" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (402 samples, 0.13%)</title><rect x="1164.3" y="147.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1167.3" y="158.0"></text>
</g>
<g>
<title>[worker-1 tid=14276] (678 samples, 0.22%)</title><rect x="1166.1" y="339.0" width="2.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1169.1" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (678 samples, 0.22%)</title><rect x="1166.1" y="323.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1169.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (678 samples, 0.22%)</title><rect x="1166.1" y="307.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1169.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (678 samples, 0.22%)</title><rect x="1166.1" y="291.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1169.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (613 samples, 0.20%)</title><rect x="1166.1" y="275.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1169.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (613 samples, 0.20%)</title><rect x="1166.1" y="259.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1169.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (211 samples, 0.07%)</title><rect x="1166.1" y="243.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1169.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (211 samples, 0.07%)</title><rect x="1166.1" y="227.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1169.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (211 samples, 0.07%)</title><rect x="1166.1" y="211.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1169.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (211 samples, 0.07%)</title><rect x="1166.1" y="195.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1169.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (211 samples, 0.07%)</title><rect x="1166.1" y="179.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1169.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (211 samples, 0.07%)</title><rect x="1166.1" y="163.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1169.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (402 samples, 0.13%)</title><rect x="1166.9" y="243.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1169.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (402 samples, 0.13%)</title><rect x="1166.9" y="227.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1169.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (402 samples, 0.13%)</title><rect x="1166.9" y="211.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1169.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (402 samples, 0.13%)</title><rect x="1166.9" y="195.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1169.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (402 samples, 0.13%)</title><rect x="1166.9" y="179.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1169.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (402 samples, 0.13%)</title><rect x="1166.9" y="163.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1169.9" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (402 samples, 0.13%)</title><rect x="1166.9" y="147.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1169.9" y="158.0"></text>
</g>
<g>
<title>[worker-2 tid=14267] (613 samples, 0.20%)</title><rect x="1168.7" y="339.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1171.7" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (613 samples, 0.20%)</title><rect x="1168.7" y="323.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1171.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (613 samples, 0.20%)</title><rect x="1168.7" y="307.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1171.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (613 samples, 0.20%)</title><rect x="1168.7" y="291.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1171.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (551 samples, 0.18%)</title><rect x="1168.7" y="275.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1171.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (551 samples, 0.18%)</title><rect x="1168.7" y="259.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1171.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (101 samples, 0.03%)</title><rect x="1168.7" y="243.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1171.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (101 samples, 0.03%)</title><rect x="1168.7" y="227.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1171.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (101 samples, 0.03%)</title><rect x="1168.7" y="211.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1171.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (101 samples, 0.03%)</title><rect x="1168.7" y="195.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1171.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (101 samples, 0.03%)</title><rect x="1168.7" y="179.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1171.7" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (101 samples, 0.03%)</title><rect x="1168.7" y="163.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1171.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (450 samples, 0.15%)</title><rect x="1169.1" y="243.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1172.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (450 samples, 0.15%)</title><rect x="1169.1" y="227.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1172.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (450 samples, 0.15%)</title><rect x="1169.1" y="211.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1172.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (450 samples, 0.15%)</title><rect x="1169.1" y="195.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1172.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (450 samples, 0.15%)</title><rect x="1169.1" y="179.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1172.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (450 samples, 0.15%)</title><rect x="1169.1" y="163.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1172.1" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (450 samples, 0.15%)</title><rect x="1169.1" y="147.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1172.1" y="158.0"></text>
</g>
<g>
<title>[worker-2 tid=14272] (578 samples, 0.19%)</title><rect x="1171.0" y="339.0" width="2.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1174.0" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (578 samples, 0.19%)</title><rect x="1171.0" y="323.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1174.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (578 samples, 0.19%)</title><rect x="1171.0" y="307.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1174.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (578 samples, 0.19%)</title><rect x="1171.0" y="291.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1174.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (513 samples, 0.17%)</title><rect x="1171.0" y="275.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1174.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (513 samples, 0.17%)</title><rect x="1171.0" y="259.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1174.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (82 samples, 0.03%)</title><rect x="1171.0" y="243.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1174.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (82 samples, 0.03%)</title><rect x="1171.0" y="227.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1174.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (82 samples, 0.03%)</title><rect x="1171.0" y="211.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1174.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (82 samples, 0.03%)</title><rect x="1171.0" y="195.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1174.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (82 samples, 0.03%)</title><rect x="1171.0" y="179.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1174.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (82 samples, 0.03%)</title><rect x="1171.0" y="163.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1174.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (431 samples, 0.14%)</title><rect x="1171.3" y="243.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1174.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (431 samples, 0.14%)</title><rect x="1171.3" y="227.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1174.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (431 samples, 0.14%)</title><rect x="1171.3" y="211.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1174.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (431 samples, 0.14%)</title><rect x="1171.3" y="195.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1174.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (431 samples, 0.14%)</title><rect x="1171.3" y="179.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1174.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (431 samples, 0.14%)</title><rect x="1171.3" y="163.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1174.3" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (431 samples, 0.14%)</title><rect x="1171.3" y="147.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1174.3" y="158.0"></text>
</g>
<g>
<title>[worker-2 tid=14278] (667 samples, 0.22%)</title><rect x="1173.2" y="339.0" width="2.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1176.2" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (667 samples, 0.22%)</title><rect x="1173.2" y="323.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1176.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (667 samples, 0.22%)</title><rect x="1173.2" y="307.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1176.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (667 samples, 0.22%)</title><rect x="1173.2" y="291.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1176.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (615 samples, 0.20%)</title><rect x="1173.2" y="275.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1176.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (615 samples, 0.20%)</title><rect x="1173.2" y="259.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1176.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (187 samples, 0.06%)</title><rect x="1173.2" y="243.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1176.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (187 samples, 0.06%)</title><rect x="1173.2" y="227.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1176.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (187 samples, 0.06%)</title><rect x="1173.2" y="211.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1176.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (187 samples, 0.06%)</title><rect x="1173.2" y="195.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1176.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (187 samples, 0.06%)</title><rect x="1173.2" y="179.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1176.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (187 samples, 0.06%)</title><rect x="1173.2" y="163.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1176.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (428 samples, 0.14%)</title><rect x="1173.9" y="243.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1176.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (428 samples, 0.14%)</title><rect x="1173.9" y="227.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1176.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (428 samples, 0.14%)</title><rect x="1173.9" y="211.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1176.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (428 samples, 0.14%)</title><rect x="1173.9" y="195.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1176.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (428 samples, 0.14%)</title><rect x="1173.9" y="179.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1176.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (428 samples, 0.14%)</title><rect x="1173.9" y="163.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1176.9" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (428 samples, 0.14%)</title><rect x="1173.9" y="147.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1176.9" y="158.0"></text>
</g>
<g>
<title>[worker-3 tid=14266] (615 samples, 0.20%)</title><rect x="1175.8" y="339.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1178.8" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (615 samples, 0.20%)</title><rect x="1175.8" y="323.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1178.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (615 samples, 0.20%)</title><rect x="1175.8" y="307.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1178.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (615 samples, 0.20%)</title><rect x="1175.8" y="291.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1178.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (555 samples, 0.18%)</title><rect x="1175.8" y="275.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1178.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (555 samples, 0.18%)</title><rect x="1175.8" y="259.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1178.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (116 samples, 0.04%)</title><rect x="1175.8" y="243.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1178.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (116 samples, 0.04%)</title><rect x="1175.8" y="227.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1178.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (116 samples, 0.04%)</title><rect x="1175.8" y="211.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1178.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (116 samples, 0.04%)</title><rect x="1175.8" y="195.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1178.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (116 samples, 0.04%)</title><rect x="1175.8" y="179.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1178.8" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (116 samples, 0.04%)</title><rect x="1175.8" y="163.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1178.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (439 samples, 0.14%)</title><rect x="1176.2" y="243.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1179.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (439 samples, 0.14%)</title><rect x="1176.2" y="227.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1179.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (439 samples, 0.14%)</title><rect x="1176.2" y="211.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1179.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (439 samples, 0.14%)</title><rect x="1176.2" y="195.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1179.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (439 samples, 0.14%)</title><rect x="1176.2" y="179.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1179.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (439 samples, 0.14%)</title><rect x="1176.2" y="163.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1179.2" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (439 samples, 0.14%)</title><rect x="1176.2" y="147.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1179.2" y="158.0"></text>
</g>
<g>
<title>[worker-3 tid=14273] (587 samples, 0.19%)</title><rect x="1178.1" y="339.0" width="2.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1181.1" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (587 samples, 0.19%)</title><rect x="1178.1" y="323.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1181.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (587 samples, 0.19%)</title><rect x="1178.1" y="307.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1181.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (587 samples, 0.19%)</title><rect x="1178.1" y="291.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1181.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (531 samples, 0.17%)</title><rect x="1178.1" y="275.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1181.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (531 samples, 0.17%)</title><rect x="1178.1" y="259.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1181.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (106 samples, 0.03%)</title><rect x="1178.1" y="243.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1181.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (106 samples, 0.03%)</title><rect x="1178.1" y="227.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1181.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (106 samples, 0.03%)</title><rect x="1178.1" y="211.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1181.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (106 samples, 0.03%)</title><rect x="1178.1" y="195.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1181.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (106 samples, 0.03%)</title><rect x="1178.1" y="179.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1181.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (106 samples, 0.03%)</title><rect x="1178.1" y="163.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1181.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (425 samples, 0.14%)</title><rect x="1178.5" y="243.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1181.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (425 samples, 0.14%)</title><rect x="1178.5" y="227.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1181.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (425 samples, 0.14%)</title><rect x="1178.5" y="211.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1181.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (425 samples, 0.14%)</title><rect x="1178.5" y="195.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1181.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (425 samples, 0.14%)</title><rect x="1178.5" y="179.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1181.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (425 samples, 0.14%)</title><rect x="1178.5" y="163.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1181.5" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (425 samples, 0.14%)</title><rect x="1178.5" y="147.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1181.5" y="158.0"></text>
</g>
<g>
<title>[worker-3 tid=14277] (660 samples, 0.21%)</title><rect x="1180.4" y="339.0" width="2.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1183.4" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (660 samples, 0.21%)</title><rect x="1180.4" y="323.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1183.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (660 samples, 0.21%)</title><rect x="1180.4" y="307.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (660 samples, 0.21%)</title><rect x="1180.4" y="291.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1183.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (611 samples, 0.20%)</title><rect x="1180.4" y="275.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1183.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (611 samples, 0.20%)</title><rect x="1180.4" y="259.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1183.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (206 samples, 0.07%)</title><rect x="1180.4" y="243.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1183.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (206 samples, 0.07%)</title><rect x="1180.4" y="227.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1183.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (206 samples, 0.07%)</title><rect x="1180.4" y="211.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1183.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (206 samples, 0.07%)</title><rect x="1180.4" y="195.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1183.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (206 samples, 0.07%)</title><rect x="1180.4" y="179.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1183.4" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (206 samples, 0.07%)</title><rect x="1180.4" y="163.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1183.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (405 samples, 0.13%)</title><rect x="1181.2" y="243.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1184.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (405 samples, 0.13%)</title><rect x="1181.2" y="227.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1184.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (405 samples, 0.13%)</title><rect x="1181.2" y="211.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1184.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (405 samples, 0.13%)</title><rect x="1181.2" y="195.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1184.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (405 samples, 0.13%)</title><rect x="1181.2" y="179.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1184.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (405 samples, 0.13%)</title><rect x="1181.2" y="163.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1184.2" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (405 samples, 0.13%)</title><rect x="1181.2" y="147.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1184.2" y="158.0"></text>
</g>
<g>
<title>[worker-4 tid=14270] (612 samples, 0.20%)</title><rect x="1182.9" y="339.0" width="2.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1185.9" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (612 samples, 0.20%)</title><rect x="1182.9" y="323.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1185.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (612 samples, 0.20%)</title><rect x="1182.9" y="307.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1185.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (612 samples, 0.20%)</title><rect x="1182.9" y="291.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1185.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (551 samples, 0.18%)</title><rect x="1182.9" y="275.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1185.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (551 samples, 0.18%)</title><rect x="1182.9" y="259.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1185.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (115 samples, 0.04%)</title><rect x="1182.9" y="243.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1185.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (115 samples, 0.04%)</title><rect x="1182.9" y="227.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1185.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (115 samples, 0.04%)</title><rect x="1182.9" y="211.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1185.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (115 samples, 0.04%)</title><rect x="1182.9" y="195.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1185.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (115 samples, 0.04%)</title><rect x="1182.9" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1185.9" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (115 samples, 0.04%)</title><rect x="1182.9" y="163.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1185.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (436 samples, 0.14%)</title><rect x="1183.3" y="243.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1186.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (436 samples, 0.14%)</title><rect x="1183.3" y="227.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1186.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (436 samples, 0.14%)</title><rect x="1183.3" y="211.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1186.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (436 samples, 0.14%)</title><rect x="1183.3" y="195.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1186.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (436 samples, 0.14%)</title><rect x="1183.3" y="179.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1186.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (436 samples, 0.14%)</title><rect x="1183.3" y="163.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1186.3" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (436 samples, 0.14%)</title><rect x="1183.3" y="147.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1186.3" y="158.0"></text>
</g>
<g>
<title>[worker-4 tid=14274] (548 samples, 0.18%)</title><rect x="1185.2" y="339.0" width="2.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1188.2" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (548 samples, 0.18%)</title><rect x="1185.2" y="323.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1188.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (548 samples, 0.18%)</title><rect x="1185.2" y="307.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1188.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (548 samples, 0.18%)</title><rect x="1185.2" y="291.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (502 samples, 0.16%)</title><rect x="1185.2" y="275.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (502 samples, 0.16%)</title><rect x="1185.2" y="259.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1188.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (88 samples, 0.03%)</title><rect x="1185.2" y="243.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1188.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (88 samples, 0.03%)</title><rect x="1185.2" y="227.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1188.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (88 samples, 0.03%)</title><rect x="1185.2" y="211.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1188.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (88 samples, 0.03%)</title><rect x="1185.2" y="195.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1188.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (88 samples, 0.03%)</title><rect x="1185.2" y="179.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (88 samples, 0.03%)</title><rect x="1185.2" y="163.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1188.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (414 samples, 0.13%)</title><rect x="1185.6" y="243.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1188.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (414 samples, 0.13%)</title><rect x="1185.6" y="227.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1188.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (414 samples, 0.13%)</title><rect x="1185.6" y="211.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1188.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (414 samples, 0.13%)</title><rect x="1185.6" y="195.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1188.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (414 samples, 0.13%)</title><rect x="1185.6" y="179.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1188.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (414 samples, 0.13%)</title><rect x="1185.6" y="163.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1188.6" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (414 samples, 0.13%)</title><rect x="1185.6" y="147.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1188.6" y="158.0"></text>
</g>
<g>
<title>[worker-4 tid=14279] (705 samples, 0.23%)</title><rect x="1187.3" y="339.0" width="2.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1190.3" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (705 samples, 0.23%)</title><rect x="1187.3" y="323.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1190.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (705 samples, 0.23%)</title><rect x="1187.3" y="307.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1190.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (705 samples, 0.23%)</title><rect x="1187.3" y="291.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1190.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (643 samples, 0.21%)</title><rect x="1187.3" y="275.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1190.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (643 samples, 0.21%)</title><rect x="1187.3" y="259.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1190.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (207 samples, 0.07%)</title><rect x="1187.3" y="243.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1190.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (207 samples, 0.07%)</title><rect x="1187.3" y="227.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1190.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (207 samples, 0.07%)</title><rect x="1187.3" y="211.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1190.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (207 samples, 0.07%)</title><rect x="1187.3" y="195.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1190.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (207 samples, 0.07%)</title><rect x="1187.3" y="179.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1190.3" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (207 samples, 0.07%)</title><rect x="1187.3" y="163.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1190.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (436 samples, 0.14%)</title><rect x="1188.1" y="243.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (436 samples, 0.14%)</title><rect x="1188.1" y="227.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (436 samples, 0.14%)</title><rect x="1188.1" y="211.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1191.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (436 samples, 0.14%)</title><rect x="1188.1" y="195.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1191.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (436 samples, 0.14%)</title><rect x="1188.1" y="179.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1191.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (436 samples, 0.14%)</title><rect x="1188.1" y="163.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.1" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (436 samples, 0.14%)</title><rect x="1188.1" y="147.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1191.1" y="158.0"></text>
</g>
</g>
</svg>
