<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="629"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="629"> </text>
<g id="frames">
<g>
<title>all (1,809,763 samples, 100.00%)</title><rect x="10.0" y="595.0" width="1180.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="13.0" y="606.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=14155] (65,491 samples, 3.62%)</title><rect x="10.0" y="579.0" width="42.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="590.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (65,491 samples, 3.62%)</title><rect x="10.0" y="563.0" width="42.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="574.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3,122 samples, 0.17%)</title><rect x="10.0" y="547.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (3,122 samples, 0.17%)</title><rect x="10.0" y="531.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (62,369 samples, 3.45%)</title><rect x="12.0" y="547.0" width="40.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.0" y="558.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (62,369 samples, 3.45%)</title><rect x="12.0" y="531.0" width="40.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="15.0" y="542.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (62,368 samples, 3.45%)</title><rect x="12.0" y="515.0" width="40.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.0" y="526.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (38,792 samples, 2.14%)</title><rect x="12.0" y="499.0" width="25.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.0" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (38,792 samples, 2.14%)</title><rect x="12.0" y="483.0" width="25.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.0" y="494.0">o..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (32,996 samples, 1.82%)</title><rect x="12.0" y="467.0" width="21.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="15.0" y="478.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4,562 samples, 0.25%)</title><rect x="12.0" y="451.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,562 samples, 0.25%)</title><rect x="12.0" y="435.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,562 samples, 0.25%)</title><rect x="12.0" y="419.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2,444 samples, 0.14%)</title><rect x="12.0" y="403.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="15.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,118 samples, 0.12%)</title><rect x="13.6" y="403.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="16.6" y="414.0"></text>
</g>
<g>
<title>byte[] (2,118 samples, 0.12%)</title><rect x="13.6" y="387.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="16.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (28,434 samples, 1.57%)</title><rect x="15.0" y="451.0" width="18.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,885 samples, 0.10%)</title><rect x="15.0" y="435.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,885 samples, 0.10%)</title><rect x="15.0" y="419.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,885 samples, 0.10%)</title><rect x="15.0" y="403.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,885 samples, 0.10%)</title><rect x="15.0" y="387.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.0" y="398.0"></text>
</g>
<g>
<title>byte[] (1,885 samples, 0.10%)</title><rect x="15.0" y="371.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="18.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,269 samples, 0.13%)</title><rect x="16.2" y="435.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,269 samples, 0.13%)</title><rect x="16.2" y="419.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.get$Lambda (1,132 samples, 0.06%)</title><rect x="16.2" y="403.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.2" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$61 (1,132 samples, 0.06%)</title><rect x="16.2" y="387.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="19.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.get$Lambda (1,137 samples, 0.06%)</title><rect x="17.0" y="403.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.0" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$73 (1,137 samples, 0.06%)</title><rect x="17.0" y="387.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="20.0" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,374 samples, 0.13%)</title><rect x="17.7" y="435.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.7" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,374 samples, 0.13%)</title><rect x="17.7" y="419.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.7" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,374 samples, 0.13%)</title><rect x="17.7" y="403.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="20.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (17,617 samples, 0.97%)</title><rect x="19.3" y="435.0" width="11.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (17,617 samples, 0.97%)</title><rect x="19.3" y="419.0" width="11.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (10,958 samples, 0.61%)</title><rect x="19.3" y="403.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (6,904 samples, 0.38%)</title><rect x="19.3" y="387.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (6,904 samples, 0.38%)</title><rect x="19.3" y="371.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="22.3" y="382.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (2,429 samples, 0.13%)</title><rect x="19.3" y="355.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="22.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (4,475 samples, 0.25%)</title><rect x="20.9" y="355.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (4,475 samples, 0.25%)</title><rect x="20.9" y="339.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (4,475 samples, 0.25%)</title><rect x="20.9" y="323.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4,475 samples, 0.25%)</title><rect x="20.9" y="307.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.9" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,349 samples, 0.13%)</title><rect x="20.9" y="291.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="23.9" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2,126 samples, 0.12%)</title><rect x="22.4" y="291.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.4" y="302.0"></text>
</g>
<g>
<title>byte[] (2,126 samples, 0.12%)</title><rect x="22.4" y="275.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="25.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (4,054 samples, 0.22%)</title><rect x="23.8" y="387.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (4,054 samples, 0.22%)</title><rect x="23.8" y="371.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.8" y="382.0"></text>
</g>
<g>
<title>byte[] (2,081 samples, 0.11%)</title><rect x="23.8" y="355.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="26.8" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,973 samples, 0.11%)</title><rect x="25.1" y="355.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,973 samples, 0.11%)</title><rect x="25.1" y="339.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="28.1" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,973 samples, 0.11%)</title><rect x="25.1" y="323.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="28.1" y="334.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1,847 samples, 0.10%)</title><rect x="26.4" y="403.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="29.4" y="414.0"></text>
</g>
<g>
<title>java.lang.Long (1,847 samples, 0.10%)</title><rect x="26.4" y="387.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="29.4" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.isEmpty (2,324 samples, 0.13%)</title><rect x="27.6" y="403.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="30.6" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (2,324 samples, 0.13%)</title><rect x="27.6" y="387.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.6" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (2,324 samples, 0.13%)</title><rect x="27.6" y="371.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="30.6" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (2,455 samples, 0.14%)</title><rect x="29.2" y="403.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.2" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (2,455 samples, 0.14%)</title><rect x="29.2" y="387.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="32.2" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (2,455 samples, 0.14%)</title><rect x="29.2" y="371.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="32.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (4,259 samples, 0.24%)</title><rect x="30.8" y="435.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="33.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,196 samples, 0.12%)</title><rect x="30.8" y="419.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="33.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,196 samples, 0.12%)</title><rect x="30.8" y="403.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.get$Lambda (2,196 samples, 0.12%)</title><rect x="30.8" y="387.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="33.8" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$64 (2,196 samples, 0.12%)</title><rect x="30.8" y="371.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="33.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,063 samples, 0.11%)</title><rect x="32.2" y="419.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="35.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2,063 samples, 0.11%)</title><rect x="32.2" y="403.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="35.2" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2,062 samples, 0.11%)</title><rect x="32.2" y="387.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="35.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5,796 samples, 0.32%)</title><rect x="33.6" y="467.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="36.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (5,796 samples, 0.32%)</title><rect x="33.6" y="451.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="36.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5,796 samples, 0.32%)</title><rect x="33.6" y="435.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String (2,870 samples, 0.16%)</title><rect x="33.6" y="419.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="36.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,926 samples, 0.16%)</title><rect x="35.4" y="419.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="38.4" y="430.0"></text>
</g>
<g>
<title>byte[] (2,926 samples, 0.16%)</title><rect x="35.4" y="403.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="38.4" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (14,919 samples, 0.82%)</title><rect x="37.3" y="499.0" width="9.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="40.3" y="510.0"></text>
</g>
<g>
<title>one.nio.http.Request (2,670 samples, 0.15%)</title><rect x="37.3" y="483.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="40.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3,230 samples, 0.18%)</title><rect x="39.1" y="483.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.1" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (2,764 samples, 0.15%)</title><rect x="39.1" y="467.0" width="1.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="42.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (466 samples, 0.03%)</title><rect x="40.9" y="467.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="43.9" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9,019 samples, 0.50%)</title><rect x="41.2" y="483.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.2" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9,019 samples, 0.50%)</title><rect x="41.2" y="467.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="44.2" y="478.0"></text>
</g>
<g>
<title>char[] (3,020 samples, 0.17%)</title><rect x="41.2" y="451.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="44.2" y="462.0"></text>
</g>
<g>
<title>char[] (510 samples, 0.03%)</title><rect x="43.1" y="451.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="46.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String (2,329 samples, 0.13%)</title><rect x="43.5" y="451.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="46.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,160 samples, 0.17%)</title><rect x="45.0" y="451.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,160 samples, 0.17%)</title><rect x="45.0" y="435.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,160 samples, 0.17%)</title><rect x="45.0" y="419.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.0" y="430.0"></text>
</g>
<g>
<title>byte[] (2,988 samples, 0.17%)</title><rect x="45.0" y="403.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="48.0" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,657 samples, 0.48%)</title><rect x="47.1" y="499.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.1" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,657 samples, 0.48%)</title><rect x="47.1" y="483.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="50.1" y="494.0"></text>
</g>
<g>
<title>char[] (2,715 samples, 0.15%)</title><rect x="47.1" y="467.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="50.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String (2,870 samples, 0.16%)</title><rect x="48.9" y="467.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="51.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,005 samples, 0.17%)</title><rect x="50.7" y="467.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,005 samples, 0.17%)</title><rect x="50.7" y="451.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,005 samples, 0.17%)</title><rect x="50.7" y="435.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="53.7" y="446.0"></text>
</g>
<g>
<title>byte[] (3,005 samples, 0.17%)</title><rect x="50.7" y="419.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="53.7" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=14165] (70,776 samples, 3.91%)</title><rect x="52.7" y="579.0" width="46.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="55.7" y="590.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (70,776 samples, 3.91%)</title><rect x="52.7" y="563.0" width="46.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.7" y="574.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.process (70,776 samples, 3.91%)</title><rect x="52.7" y="547.0" width="46.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="55.7" y="558.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (70,776 samples, 3.91%)</title><rect x="52.7" y="531.0" width="46.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="55.7" y="542.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (70,775 samples, 3.91%)</title><rect x="52.7" y="515.0" width="46.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.7" y="526.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (39,664 samples, 2.19%)</title><rect x="52.7" y="499.0" width="25.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.7" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (39,664 samples, 2.19%)</title><rect x="52.7" y="483.0" width="25.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="55.7" y="494.0">o..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (35,495 samples, 1.96%)</title><rect x="52.7" y="467.0" width="23.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.7" y="478.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3,582 samples, 0.20%)</title><rect x="52.7" y="451.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,582 samples, 0.20%)</title><rect x="52.7" y="435.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="55.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,582 samples, 0.20%)</title><rect x="52.7" y="419.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1,525 samples, 0.08%)</title><rect x="52.7" y="403.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="55.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,057 samples, 0.11%)</title><rect x="53.7" y="403.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.7" y="414.0"></text>
</g>
<g>
<title>byte[] (2,057 samples, 0.11%)</title><rect x="53.7" y="387.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="56.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (31,913 samples, 1.76%)</title><rect x="55.0" y="451.0" width="20.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,344 samples, 0.07%)</title><rect x="55.0" y="435.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,344 samples, 0.07%)</title><rect x="55.0" y="419.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,344 samples, 0.07%)</title><rect x="55.0" y="403.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="58.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,344 samples, 0.07%)</title><rect x="55.0" y="387.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.0" y="398.0"></text>
</g>
<g>
<title>byte[] (1,344 samples, 0.07%)</title><rect x="55.0" y="371.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="58.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,585 samples, 0.09%)</title><rect x="55.9" y="435.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="58.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,585 samples, 0.09%)</title><rect x="55.9" y="419.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="58.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.get$Lambda (908 samples, 0.05%)</title><rect x="55.9" y="403.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="58.9" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$61 (908 samples, 0.05%)</title><rect x="55.9" y="387.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="58.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.get$Lambda (677 samples, 0.04%)</title><rect x="56.5" y="403.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.5" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$73 (677 samples, 0.04%)</title><rect x="56.5" y="387.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="59.5" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,259 samples, 0.18%)</title><rect x="56.9" y="435.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.9" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,259 samples, 0.18%)</title><rect x="56.9" y="419.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.9" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,259 samples, 0.18%)</title><rect x="56.9" y="403.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="59.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (21,915 samples, 1.21%)</title><rect x="59.1" y="435.0" width="14.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (21,915 samples, 1.21%)</title><rect x="59.1" y="419.0" width="14.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (15,325 samples, 0.85%)</title><rect x="59.1" y="403.0" width="10.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (9,953 samples, 0.55%)</title><rect x="59.1" y="387.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (9,953 samples, 0.55%)</title><rect x="59.1" y="371.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.1" y="382.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (3,444 samples, 0.19%)</title><rect x="59.1" y="355.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="62.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (6,509 samples, 0.36%)</title><rect x="61.3" y="355.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (6,509 samples, 0.36%)</title><rect x="61.3" y="339.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (6,509 samples, 0.36%)</title><rect x="61.3" y="323.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6,509 samples, 0.36%)</title><rect x="61.3" y="307.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.3" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,380 samples, 0.19%)</title><rect x="61.3" y="291.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="64.3" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3,129 samples, 0.17%)</title><rect x="63.5" y="291.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.5" y="302.0"></text>
</g>
<g>
<title>byte[] (3,129 samples, 0.17%)</title><rect x="63.5" y="275.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="66.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (5,372 samples, 0.30%)</title><rect x="65.6" y="387.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (5,372 samples, 0.30%)</title><rect x="65.6" y="371.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.6" y="382.0"></text>
</g>
<g>
<title>byte[] (2,085 samples, 0.12%)</title><rect x="65.6" y="355.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="68.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,287 samples, 0.18%)</title><rect x="66.9" y="355.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,287 samples, 0.18%)</title><rect x="66.9" y="339.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.9" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,287 samples, 0.18%)</title><rect x="66.9" y="323.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="69.9" y="334.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1,449 samples, 0.08%)</title><rect x="69.1" y="403.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.1" y="414.0"></text>
</g>
<g>
<title>java.lang.Long (1,449 samples, 0.08%)</title><rect x="69.1" y="387.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="72.1" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.isEmpty (1,765 samples, 0.10%)</title><rect x="70.0" y="403.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.0" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (1,765 samples, 0.10%)</title><rect x="70.0" y="387.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.0" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (1,765 samples, 0.10%)</title><rect x="70.0" y="371.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="73.0" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3,331 samples, 0.18%)</title><rect x="71.2" y="403.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.2" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3,331 samples, 0.18%)</title><rect x="71.2" y="387.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.2" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (3,331 samples, 0.18%)</title><rect x="71.2" y="371.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="74.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (3,774 samples, 0.21%)</title><rect x="73.4" y="435.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,769 samples, 0.10%)</title><rect x="73.4" y="419.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,769 samples, 0.10%)</title><rect x="73.4" y="403.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.get$Lambda (1,769 samples, 0.10%)</title><rect x="73.4" y="387.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.4" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$64 (1,769 samples, 0.10%)</title><rect x="73.4" y="371.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="76.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,005 samples, 0.11%)</title><rect x="74.5" y="419.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2,005 samples, 0.11%)</title><rect x="74.5" y="403.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.5" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2,000 samples, 0.11%)</title><rect x="74.5" y="387.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="77.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4,169 samples, 0.23%)</title><rect x="75.8" y="467.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,169 samples, 0.23%)</title><rect x="75.8" y="451.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,169 samples, 0.23%)</title><rect x="75.8" y="435.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.8" y="446.0"></text>
</g>
<g>
<title>java.lang.String (1,595 samples, 0.09%)</title><rect x="75.8" y="419.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="78.8" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,574 samples, 0.14%)</title><rect x="76.9" y="419.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="79.9" y="430.0"></text>
</g>
<g>
<title>byte[] (2,574 samples, 0.14%)</title><rect x="76.9" y="403.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="79.9" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (22,276 samples, 1.23%)</title><rect x="78.6" y="499.0" width="14.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="81.6" y="510.0"></text>
</g>
<g>
<title>one.nio.http.Request (3,686 samples, 0.20%)</title><rect x="78.6" y="483.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="81.6" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5,070 samples, 0.28%)</title><rect x="81.0" y="483.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="84.0" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (3,895 samples, 0.22%)</title><rect x="81.0" y="467.0" width="2.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="84.0" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (1,175 samples, 0.06%)</title><rect x="83.5" y="467.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="86.5" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13,520 samples, 0.75%)</title><rect x="84.3" y="483.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.3" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13,520 samples, 0.75%)</title><rect x="84.3" y="467.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.3" y="478.0"></text>
</g>
<g>
<title>char[] (6,010 samples, 0.33%)</title><rect x="84.3" y="451.0" width="3.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="87.3" y="462.0"></text>
</g>
<g>
<title>char[] (1,525 samples, 0.08%)</title><rect x="88.2" y="451.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="91.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (1,673 samples, 0.09%)</title><rect x="89.2" y="451.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="92.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,312 samples, 0.24%)</title><rect x="90.3" y="451.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.3" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,312 samples, 0.24%)</title><rect x="90.3" y="435.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4,312 samples, 0.24%)</title><rect x="90.3" y="419.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="93.3" y="430.0"></text>
</g>
<g>
<title>byte[] (4,312 samples, 0.24%)</title><rect x="90.3" y="403.0" width="2.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="93.3" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,835 samples, 0.49%)</title><rect x="93.1" y="499.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="96.1" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,835 samples, 0.49%)</title><rect x="93.1" y="483.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.1" y="494.0"></text>
</g>
<g>
<title>char[] (3,552 samples, 0.20%)</title><rect x="93.1" y="467.0" width="2.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="96.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String (2,823 samples, 0.16%)</title><rect x="95.4" y="467.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="98.4" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,458 samples, 0.14%)</title><rect x="97.2" y="467.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,458 samples, 0.14%)</title><rect x="97.2" y="451.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,458 samples, 0.14%)</title><rect x="97.2" y="435.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.2" y="446.0"></text>
</g>
<g>
<title>byte[] (2,458 samples, 0.14%)</title><rect x="97.2" y="419.0" width="1.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="100.2" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=14171] (70,364 samples, 3.89%)</title><rect x="98.9" y="579.0" width="45.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="101.9" y="590.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (70,364 samples, 3.89%)</title><rect x="98.9" y="563.0" width="45.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="101.9" y="574.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.process (70,364 samples, 3.89%)</title><rect x="98.9" y="547.0" width="45.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.9" y="558.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (70,364 samples, 3.89%)</title><rect x="98.9" y="531.0" width="45.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.9" y="542.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (70,364 samples, 3.89%)</title><rect x="98.9" y="515.0" width="45.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="101.9" y="526.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (40,019 samples, 2.21%)</title><rect x="98.9" y="499.0" width="26.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.9" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (40,019 samples, 2.21%)</title><rect x="98.9" y="483.0" width="26.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.9" y="494.0">o..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (35,798 samples, 1.98%)</title><rect x="98.9" y="467.0" width="23.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.9" y="478.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4,106 samples, 0.23%)</title><rect x="98.9" y="451.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,106 samples, 0.23%)</title><rect x="98.9" y="435.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,106 samples, 0.23%)</title><rect x="98.9" y="419.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1,779 samples, 0.10%)</title><rect x="98.9" y="403.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="101.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,327 samples, 0.13%)</title><rect x="100.0" y="403.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="103.0" y="414.0"></text>
</g>
<g>
<title>byte[] (2,327 samples, 0.13%)</title><rect x="100.0" y="387.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="103.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (31,692 samples, 1.75%)</title><rect x="101.5" y="451.0" width="20.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,350 samples, 0.07%)</title><rect x="101.5" y="435.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,350 samples, 0.07%)</title><rect x="101.5" y="419.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,350 samples, 0.07%)</title><rect x="101.5" y="403.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,350 samples, 0.07%)</title><rect x="101.5" y="387.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.5" y="398.0"></text>
</g>
<g>
<title>byte[] (1,350 samples, 0.07%)</title><rect x="101.5" y="371.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="104.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,485 samples, 0.08%)</title><rect x="102.4" y="435.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,485 samples, 0.08%)</title><rect x="102.4" y="419.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="105.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.get$Lambda (768 samples, 0.04%)</title><rect x="102.4" y="403.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="105.4" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$61 (768 samples, 0.04%)</title><rect x="102.4" y="387.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="105.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.get$Lambda (717 samples, 0.04%)</title><rect x="102.9" y="403.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.9" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$73 (717 samples, 0.04%)</title><rect x="102.9" y="387.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="105.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,155 samples, 0.17%)</title><rect x="103.4" y="435.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.4" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,155 samples, 0.17%)</title><rect x="103.4" y="419.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.4" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,155 samples, 0.17%)</title><rect x="103.4" y="403.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="106.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (22,007 samples, 1.22%)</title><rect x="105.5" y="435.0" width="14.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (22,007 samples, 1.22%)</title><rect x="105.5" y="419.0" width="14.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (15,211 samples, 0.84%)</title><rect x="105.5" y="403.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (9,499 samples, 0.52%)</title><rect x="105.5" y="387.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (9,499 samples, 0.52%)</title><rect x="105.5" y="371.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.5" y="382.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (3,370 samples, 0.19%)</title><rect x="105.5" y="355.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="108.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (6,129 samples, 0.34%)</title><rect x="107.7" y="355.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (6,129 samples, 0.34%)</title><rect x="107.7" y="339.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (6,129 samples, 0.34%)</title><rect x="107.7" y="323.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="110.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6,129 samples, 0.34%)</title><rect x="107.7" y="307.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="110.7" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,054 samples, 0.17%)</title><rect x="107.7" y="291.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="110.7" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3,075 samples, 0.17%)</title><rect x="109.6" y="291.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="112.6" y="302.0"></text>
</g>
<g>
<title>byte[] (3,075 samples, 0.17%)</title><rect x="109.6" y="275.0" width="2.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="112.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (5,712 samples, 0.32%)</title><rect x="111.6" y="387.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="114.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (5,712 samples, 0.32%)</title><rect x="111.6" y="371.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.6" y="382.0"></text>
</g>
<g>
<title>byte[] (2,224 samples, 0.12%)</title><rect x="111.6" y="355.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="114.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,488 samples, 0.19%)</title><rect x="113.1" y="355.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="116.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,488 samples, 0.19%)</title><rect x="113.1" y="339.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="116.1" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,488 samples, 0.19%)</title><rect x="113.1" y="323.0" width="2.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="116.1" y="334.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1,502 samples, 0.08%)</title><rect x="115.4" y="403.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.4" y="414.0"></text>
</g>
<g>
<title>java.lang.Long (1,502 samples, 0.08%)</title><rect x="115.4" y="387.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="118.4" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.isEmpty (1,701 samples, 0.09%)</title><rect x="116.4" y="403.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="119.4" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (1,701 samples, 0.09%)</title><rect x="116.4" y="387.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="119.4" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (1,701 samples, 0.09%)</title><rect x="116.4" y="371.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="119.4" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3,554 samples, 0.20%)</title><rect x="117.5" y="403.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.5" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3,554 samples, 0.20%)</title><rect x="117.5" y="387.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.5" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (3,554 samples, 0.20%)</title><rect x="117.5" y="371.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="120.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (3,661 samples, 0.20%)</title><rect x="119.8" y="435.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="122.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,724 samples, 0.10%)</title><rect x="119.8" y="419.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,724 samples, 0.10%)</title><rect x="119.8" y="403.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.get$Lambda (1,724 samples, 0.10%)</title><rect x="119.8" y="387.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.8" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$64 (1,724 samples, 0.10%)</title><rect x="119.8" y="371.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="122.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,937 samples, 0.11%)</title><rect x="120.9" y="419.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="123.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,937 samples, 0.11%)</title><rect x="120.9" y="403.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="123.9" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,932 samples, 0.11%)</title><rect x="120.9" y="387.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="123.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4,221 samples, 0.23%)</title><rect x="122.2" y="467.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="125.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,221 samples, 0.23%)</title><rect x="122.2" y="451.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="125.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,221 samples, 0.23%)</title><rect x="122.2" y="435.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="125.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String (1,540 samples, 0.09%)</title><rect x="122.2" y="419.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="125.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,681 samples, 0.15%)</title><rect x="123.2" y="419.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.2" y="430.0"></text>
</g>
<g>
<title>byte[] (2,681 samples, 0.15%)</title><rect x="123.2" y="403.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="126.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (22,109 samples, 1.22%)</title><rect x="124.9" y="499.0" width="14.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="127.9" y="510.0"></text>
</g>
<g>
<title>one.nio.http.Request (3,169 samples, 0.18%)</title><rect x="124.9" y="483.0" width="2.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="127.9" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5,520 samples, 0.31%)</title><rect x="127.0" y="483.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.0" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (5,216 samples, 0.29%)</title><rect x="127.0" y="467.0" width="3.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="130.0" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13,420 samples, 0.74%)</title><rect x="130.6" y="483.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.6" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13,420 samples, 0.74%)</title><rect x="130.6" y="467.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.6" y="478.0"></text>
</g>
<g>
<title>char[] (7,385 samples, 0.41%)</title><rect x="130.6" y="451.0" width="4.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="133.6" y="462.0"></text>
</g>
<g>
<title>char[] (692 samples, 0.04%)</title><rect x="135.4" y="451.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="138.4" y="462.0"></text>
</g>
<g>
<title>java.lang.String (1,821 samples, 0.10%)</title><rect x="135.9" y="451.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="138.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,522 samples, 0.19%)</title><rect x="137.1" y="451.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,522 samples, 0.19%)</title><rect x="137.1" y="435.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="140.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,522 samples, 0.19%)</title><rect x="137.1" y="419.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="140.1" y="430.0"></text>
</g>
<g>
<title>byte[] (3,514 samples, 0.19%)</title><rect x="137.1" y="403.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="140.1" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,236 samples, 0.46%)</title><rect x="139.4" y="499.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.4" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,236 samples, 0.46%)</title><rect x="139.4" y="483.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="142.4" y="494.0"></text>
</g>
<g>
<title>char[] (3,815 samples, 0.21%)</title><rect x="139.4" y="467.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="142.4" y="478.0"></text>
</g>
<g>
<title>java.lang.String (1,938 samples, 0.11%)</title><rect x="141.8" y="467.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="144.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,482 samples, 0.14%)</title><rect x="143.1" y="467.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,482 samples, 0.14%)</title><rect x="143.1" y="451.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,482 samples, 0.14%)</title><rect x="143.1" y="435.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.1" y="446.0"></text>
</g>
<g>
<title>byte[] (2,482 samples, 0.14%)</title><rect x="143.1" y="419.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="146.1" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=14156] (38,862 samples, 2.15%)</title><rect x="144.7" y="579.0" width="25.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="147.7" y="590.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (38,862 samples, 2.15%)</title><rect x="144.7" y="563.0" width="25.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="147.7" y="574.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2,522 samples, 0.14%)</title><rect x="144.7" y="547.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="147.7" y="558.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2,522 samples, 0.14%)</title><rect x="144.7" y="531.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="147.7" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (36,340 samples, 2.01%)</title><rect x="146.4" y="547.0" width="23.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.4" y="558.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (36,340 samples, 2.01%)</title><rect x="146.4" y="531.0" width="23.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.4" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (36,340 samples, 2.01%)</title><rect x="146.4" y="515.0" width="23.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.4" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (21,220 samples, 1.17%)</title><rect x="146.4" y="499.0" width="13.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.4" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (21,220 samples, 1.17%)</title><rect x="146.4" y="483.0" width="13.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="149.4" y="494.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (18,037 samples, 1.00%)</title><rect x="146.4" y="467.0" width="11.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2,511 samples, 0.14%)</title><rect x="146.4" y="451.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,511 samples, 0.14%)</title><rect x="146.4" y="435.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,511 samples, 0.14%)</title><rect x="146.4" y="419.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1,352 samples, 0.07%)</title><rect x="146.4" y="403.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="149.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,159 samples, 0.06%)</title><rect x="147.3" y="403.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="150.3" y="414.0"></text>
</g>
<g>
<title>byte[] (1,159 samples, 0.06%)</title><rect x="147.3" y="387.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="150.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (15,526 samples, 0.86%)</title><rect x="148.0" y="451.0" width="10.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="151.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,072 samples, 0.06%)</title><rect x="148.0" y="435.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,072 samples, 0.06%)</title><rect x="148.0" y="419.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,072 samples, 0.06%)</title><rect x="148.0" y="403.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.0" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,072 samples, 0.06%)</title><rect x="148.0" y="387.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.0" y="398.0"></text>
</g>
<g>
<title>byte[] (1,072 samples, 0.06%)</title><rect x="148.0" y="371.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="151.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,141 samples, 0.06%)</title><rect x="148.7" y="435.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,141 samples, 0.06%)</title><rect x="148.7" y="419.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.get$Lambda (1,141 samples, 0.06%)</title><rect x="148.7" y="403.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.7" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$73 (1,141 samples, 0.06%)</title><rect x="148.7" y="387.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="151.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,342 samples, 0.07%)</title><rect x="149.5" y="435.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="152.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,342 samples, 0.07%)</title><rect x="149.5" y="419.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="152.5" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,342 samples, 0.07%)</title><rect x="149.5" y="403.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="152.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (9,745 samples, 0.54%)</title><rect x="150.3" y="435.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (9,745 samples, 0.54%)</title><rect x="150.3" y="419.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="153.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (6,284 samples, 0.35%)</title><rect x="150.3" y="403.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (3,777 samples, 0.21%)</title><rect x="150.3" y="387.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (3,777 samples, 0.21%)</title><rect x="150.3" y="371.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.3" y="382.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (1,349 samples, 0.07%)</title><rect x="150.3" y="355.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="153.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (2,428 samples, 0.13%)</title><rect x="151.2" y="355.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2,428 samples, 0.13%)</title><rect x="151.2" y="339.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2,428 samples, 0.13%)</title><rect x="151.2" y="323.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="154.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,428 samples, 0.13%)</title><rect x="151.2" y="307.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.2" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,243 samples, 0.07%)</title><rect x="151.2" y="291.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="154.2" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,185 samples, 0.07%)</title><rect x="152.0" y="291.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="155.0" y="302.0"></text>
</g>
<g>
<title>byte[] (1,185 samples, 0.07%)</title><rect x="152.0" y="275.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="155.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (2,507 samples, 0.14%)</title><rect x="152.8" y="387.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (2,507 samples, 0.14%)</title><rect x="152.8" y="371.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.8" y="382.0"></text>
</g>
<g>
<title>byte[] (1,126 samples, 0.06%)</title><rect x="152.8" y="355.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="155.8" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,381 samples, 0.08%)</title><rect x="153.5" y="355.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="156.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,381 samples, 0.08%)</title><rect x="153.5" y="339.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.5" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,381 samples, 0.08%)</title><rect x="153.5" y="323.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="156.5" y="334.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (957 samples, 0.05%)</title><rect x="154.4" y="403.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.4" y="414.0"></text>
</g>
<g>
<title>java.lang.Long (957 samples, 0.05%)</title><rect x="154.4" y="387.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="157.4" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.isEmpty (1,231 samples, 0.07%)</title><rect x="155.1" y="403.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="158.1" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (1,231 samples, 0.07%)</title><rect x="155.1" y="387.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.1" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (1,231 samples, 0.07%)</title><rect x="155.1" y="371.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="158.1" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (1,259 samples, 0.07%)</title><rect x="155.9" y="403.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.9" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (1,259 samples, 0.07%)</title><rect x="155.9" y="387.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.9" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (1,259 samples, 0.07%)</title><rect x="155.9" y="371.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="158.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (2,195 samples, 0.12%)</title><rect x="156.7" y="435.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,167 samples, 0.06%)</title><rect x="156.7" y="419.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,167 samples, 0.06%)</title><rect x="156.7" y="403.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="159.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.get$Lambda (1,167 samples, 0.06%)</title><rect x="156.7" y="387.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="159.7" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$64 (1,167 samples, 0.06%)</title><rect x="156.7" y="371.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="159.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,028 samples, 0.06%)</title><rect x="157.5" y="419.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,028 samples, 0.06%)</title><rect x="157.5" y="403.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="160.5" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,027 samples, 0.06%)</title><rect x="157.5" y="387.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="160.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3,183 samples, 0.18%)</title><rect x="158.1" y="467.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,183 samples, 0.18%)</title><rect x="158.1" y="451.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="161.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,183 samples, 0.18%)</title><rect x="158.1" y="435.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="161.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (1,625 samples, 0.09%)</title><rect x="158.1" y="419.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="161.1" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,558 samples, 0.09%)</title><rect x="159.2" y="419.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.2" y="430.0"></text>
</g>
<g>
<title>byte[] (1,558 samples, 0.09%)</title><rect x="159.2" y="403.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="162.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9,507 samples, 0.53%)</title><rect x="160.2" y="499.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.2" y="510.0"></text>
</g>
<g>
<title>one.nio.http.Request (1,888 samples, 0.10%)</title><rect x="160.2" y="483.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="163.2" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,752 samples, 0.10%)</title><rect x="161.4" y="483.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="164.4" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (1,599 samples, 0.09%)</title><rect x="161.4" y="467.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="164.4" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,867 samples, 0.32%)</title><rect x="162.6" y="483.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="165.6" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,867 samples, 0.32%)</title><rect x="162.6" y="467.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.6" y="478.0"></text>
</g>
<g>
<title>char[] (1,898 samples, 0.10%)</title><rect x="162.6" y="451.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="165.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (1,710 samples, 0.09%)</title><rect x="164.0" y="451.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="167.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,029 samples, 0.11%)</title><rect x="165.1" y="451.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="168.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,029 samples, 0.11%)</title><rect x="165.1" y="435.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,029 samples, 0.11%)</title><rect x="165.1" y="419.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.1" y="430.0"></text>
</g>
<g>
<title>byte[] (1,931 samples, 0.11%)</title><rect x="165.1" y="403.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="168.1" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,613 samples, 0.31%)</title><rect x="166.4" y="499.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.4" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,613 samples, 0.31%)</title><rect x="166.4" y="483.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="169.4" y="494.0"></text>
</g>
<g>
<title>char[] (1,594 samples, 0.09%)</title><rect x="166.4" y="467.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="169.4" y="478.0"></text>
</g>
<g>
<title>java.lang.String (1,776 samples, 0.10%)</title><rect x="167.5" y="467.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="170.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,200 samples, 0.12%)</title><rect x="168.6" y="467.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,200 samples, 0.12%)</title><rect x="168.6" y="451.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,200 samples, 0.12%)</title><rect x="168.6" y="435.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.6" y="446.0"></text>
</g>
<g>
<title>byte[] (2,200 samples, 0.12%)</title><rect x="168.6" y="419.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="171.6" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=14166] (70,843 samples, 3.91%)</title><rect x="170.1" y="579.0" width="46.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="173.1" y="590.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (70,843 samples, 3.91%)</title><rect x="170.1" y="563.0" width="46.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="173.1" y="574.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4,067 samples, 0.22%)</title><rect x="170.1" y="547.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.1" y="558.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (4,067 samples, 0.22%)</title><rect x="170.1" y="531.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="173.1" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (66,776 samples, 3.69%)</title><rect x="172.7" y="547.0" width="43.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="175.7" y="558.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (66,776 samples, 3.69%)</title><rect x="172.7" y="531.0" width="43.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="175.7" y="542.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (66,776 samples, 3.69%)</title><rect x="172.7" y="515.0" width="43.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.7" y="526.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (37,839 samples, 2.09%)</title><rect x="172.7" y="499.0" width="24.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="175.7" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (37,839 samples, 2.09%)</title><rect x="172.7" y="483.0" width="24.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.7" y="494.0">o..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (33,439 samples, 1.85%)</title><rect x="172.7" y="467.0" width="21.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="175.7" y="478.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2,777 samples, 0.15%)</title><rect x="172.7" y="451.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="175.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,777 samples, 0.15%)</title><rect x="172.7" y="435.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="175.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,777 samples, 0.15%)</title><rect x="172.7" y="419.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="175.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1,365 samples, 0.08%)</title><rect x="172.7" y="403.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="175.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,412 samples, 0.08%)</title><rect x="173.6" y="403.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="176.6" y="414.0"></text>
</g>
<g>
<title>byte[] (1,412 samples, 0.08%)</title><rect x="173.6" y="387.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="176.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (30,662 samples, 1.69%)</title><rect x="174.5" y="451.0" width="20.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,428 samples, 0.08%)</title><rect x="174.5" y="435.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="177.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,428 samples, 0.08%)</title><rect x="174.5" y="419.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="177.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,428 samples, 0.08%)</title><rect x="174.5" y="403.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="177.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,428 samples, 0.08%)</title><rect x="174.5" y="387.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.5" y="398.0"></text>
</g>
<g>
<title>byte[] (1,428 samples, 0.08%)</title><rect x="174.5" y="371.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="177.5" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,636 samples, 0.09%)</title><rect x="175.5" y="435.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,636 samples, 0.09%)</title><rect x="175.5" y="419.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.get$Lambda (733 samples, 0.04%)</title><rect x="175.5" y="403.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="178.5" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$61 (733 samples, 0.04%)</title><rect x="175.5" y="387.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="178.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.get$Lambda (903 samples, 0.05%)</title><rect x="175.9" y="403.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.9" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$73 (903 samples, 0.05%)</title><rect x="175.9" y="387.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="178.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,428 samples, 0.19%)</title><rect x="176.5" y="435.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="179.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,428 samples, 0.19%)</title><rect x="176.5" y="419.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="179.5" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,428 samples, 0.19%)</title><rect x="176.5" y="403.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="179.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (21,016 samples, 1.16%)</title><rect x="178.8" y="435.0" width="13.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="181.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (21,016 samples, 1.16%)</title><rect x="178.8" y="419.0" width="13.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="181.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (14,173 samples, 0.78%)</title><rect x="178.8" y="403.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="181.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (8,995 samples, 0.50%)</title><rect x="178.8" y="387.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="181.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (8,995 samples, 0.50%)</title><rect x="178.8" y="371.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="181.8" y="382.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (3,236 samples, 0.18%)</title><rect x="178.8" y="355.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="181.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (5,759 samples, 0.32%)</title><rect x="180.9" y="355.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="183.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (5,759 samples, 0.32%)</title><rect x="180.9" y="339.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="183.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (5,759 samples, 0.32%)</title><rect x="180.9" y="323.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="183.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5,759 samples, 0.32%)</title><rect x="180.9" y="307.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.9" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,349 samples, 0.19%)</title><rect x="180.9" y="291.0" width="2.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="183.9" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2,410 samples, 0.13%)</title><rect x="183.1" y="291.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="186.1" y="302.0"></text>
</g>
<g>
<title>byte[] (2,410 samples, 0.13%)</title><rect x="183.1" y="275.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="186.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (5,178 samples, 0.29%)</title><rect x="184.7" y="387.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (5,178 samples, 0.29%)</title><rect x="184.7" y="371.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="187.7" y="382.0"></text>
</g>
<g>
<title>byte[] (2,137 samples, 0.12%)</title><rect x="184.7" y="355.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="187.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,041 samples, 0.17%)</title><rect x="186.1" y="355.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="189.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,041 samples, 0.17%)</title><rect x="186.1" y="339.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.1" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,041 samples, 0.17%)</title><rect x="186.1" y="323.0" width="1.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="189.1" y="334.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1,508 samples, 0.08%)</title><rect x="188.0" y="403.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="191.0" y="414.0"></text>
</g>
<g>
<title>java.lang.Long (1,508 samples, 0.08%)</title><rect x="188.0" y="387.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="191.0" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.isEmpty (2,034 samples, 0.11%)</title><rect x="189.0" y="403.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.0" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (2,034 samples, 0.11%)</title><rect x="189.0" y="387.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.0" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (2,034 samples, 0.11%)</title><rect x="189.0" y="371.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="192.0" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3,260 samples, 0.18%)</title><rect x="190.3" y="403.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.3" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3,260 samples, 0.18%)</title><rect x="190.3" y="387.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="193.3" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (3,260 samples, 0.18%)</title><rect x="190.3" y="371.0" width="2.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="193.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (3,111 samples, 0.17%)</title><rect x="192.5" y="435.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="195.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,506 samples, 0.08%)</title><rect x="192.5" y="419.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,506 samples, 0.08%)</title><rect x="192.5" y="403.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="195.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.get$Lambda (1,506 samples, 0.08%)</title><rect x="192.5" y="387.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.5" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$64 (1,506 samples, 0.08%)</title><rect x="192.5" y="371.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="195.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,605 samples, 0.09%)</title><rect x="193.5" y="419.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,605 samples, 0.09%)</title><rect x="193.5" y="403.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="196.5" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,603 samples, 0.09%)</title><rect x="193.5" y="387.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="196.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4,400 samples, 0.24%)</title><rect x="194.5" y="467.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="197.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,400 samples, 0.24%)</title><rect x="194.5" y="451.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="197.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,400 samples, 0.24%)</title><rect x="194.5" y="435.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="197.5" y="446.0"></text>
</g>
<g>
<title>java.lang.String (1,794 samples, 0.10%)</title><rect x="194.5" y="419.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="197.5" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,606 samples, 0.14%)</title><rect x="195.7" y="419.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.7" y="430.0"></text>
</g>
<g>
<title>byte[] (2,606 samples, 0.14%)</title><rect x="195.7" y="403.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="198.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (20,443 samples, 1.13%)</title><rect x="197.4" y="499.0" width="13.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="200.4" y="510.0"></text>
</g>
<g>
<title>one.nio.http.Request (3,286 samples, 0.18%)</title><rect x="197.4" y="483.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="200.4" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5,280 samples, 0.29%)</title><rect x="199.5" y="483.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="202.5" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (5,053 samples, 0.28%)</title><rect x="199.5" y="467.0" width="3.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="202.5" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11,877 samples, 0.66%)</title><rect x="203.0" y="483.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.0" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11,877 samples, 0.66%)</title><rect x="203.0" y="467.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.0" y="478.0"></text>
</g>
<g>
<title>char[] (5,155 samples, 0.28%)</title><rect x="203.0" y="451.0" width="3.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="206.0" y="462.0"></text>
</g>
<g>
<title>char[] (920 samples, 0.05%)</title><rect x="206.3" y="451.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="209.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String (1,445 samples, 0.08%)</title><rect x="206.9" y="451.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="209.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,357 samples, 0.24%)</title><rect x="207.9" y="451.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,357 samples, 0.24%)</title><rect x="207.9" y="435.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4,357 samples, 0.24%)</title><rect x="207.9" y="419.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="210.9" y="430.0"></text>
</g>
<g>
<title>byte[] (4,356 samples, 0.24%)</title><rect x="207.9" y="403.0" width="2.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="210.9" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,494 samples, 0.47%)</title><rect x="210.7" y="499.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="213.7" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,494 samples, 0.47%)</title><rect x="210.7" y="483.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="213.7" y="494.0"></text>
</g>
<g>
<title>char[] (3,825 samples, 0.21%)</title><rect x="210.7" y="467.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="213.7" y="478.0"></text>
</g>
<g>
<title>java.lang.String (1,727 samples, 0.10%)</title><rect x="213.2" y="467.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="216.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,935 samples, 0.16%)</title><rect x="214.3" y="467.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,935 samples, 0.16%)</title><rect x="214.3" y="451.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="217.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,935 samples, 0.16%)</title><rect x="214.3" y="435.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="217.3" y="446.0"></text>
</g>
<g>
<title>byte[] (2,935 samples, 0.16%)</title><rect x="214.3" y="419.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="217.3" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=14172] (69,632 samples, 3.85%)</title><rect x="216.3" y="579.0" width="45.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="219.3" y="590.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (69,632 samples, 3.85%)</title><rect x="216.3" y="563.0" width="45.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.3" y="574.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.process (69,632 samples, 3.85%)</title><rect x="216.3" y="547.0" width="45.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.3" y="558.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (69,632 samples, 3.85%)</title><rect x="216.3" y="531.0" width="45.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="219.3" y="542.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (69,632 samples, 3.85%)</title><rect x="216.3" y="515.0" width="45.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="219.3" y="526.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (39,862 samples, 2.20%)</title><rect x="216.3" y="499.0" width="26.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="219.3" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (39,862 samples, 2.20%)</title><rect x="216.3" y="483.0" width="26.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.3" y="494.0">o..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (35,724 samples, 1.97%)</title><rect x="216.3" y="467.0" width="23.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="219.3" y="478.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4,044 samples, 0.22%)</title><rect x="216.3" y="451.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="219.3" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,044 samples, 0.22%)</title><rect x="216.3" y="435.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="219.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,044 samples, 0.22%)</title><rect x="216.3" y="419.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1,729 samples, 0.10%)</title><rect x="216.3" y="403.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="219.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,315 samples, 0.13%)</title><rect x="217.4" y="403.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="220.4" y="414.0"></text>
</g>
<g>
<title>byte[] (2,315 samples, 0.13%)</title><rect x="217.4" y="387.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="220.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (31,680 samples, 1.75%)</title><rect x="218.9" y="451.0" width="20.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="221.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,364 samples, 0.08%)</title><rect x="218.9" y="435.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="221.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,364 samples, 0.08%)</title><rect x="218.9" y="419.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.9" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,364 samples, 0.08%)</title><rect x="218.9" y="403.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,364 samples, 0.08%)</title><rect x="218.9" y="387.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="221.9" y="398.0"></text>
</g>
<g>
<title>byte[] (1,364 samples, 0.08%)</title><rect x="218.9" y="371.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="221.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,516 samples, 0.08%)</title><rect x="219.8" y="435.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="222.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,516 samples, 0.08%)</title><rect x="219.8" y="419.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="222.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.get$Lambda (777 samples, 0.04%)</title><rect x="219.8" y="403.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.8" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$61 (777 samples, 0.04%)</title><rect x="219.8" y="387.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="222.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.get$Lambda (739 samples, 0.04%)</title><rect x="220.3" y="403.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="223.3" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$73 (739 samples, 0.04%)</title><rect x="220.3" y="387.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="223.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,362 samples, 0.19%)</title><rect x="220.8" y="435.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="223.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,362 samples, 0.19%)</title><rect x="220.8" y="419.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="223.8" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,362 samples, 0.19%)</title><rect x="220.8" y="403.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="223.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (21,753 samples, 1.20%)</title><rect x="223.0" y="435.0" width="14.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="226.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (21,753 samples, 1.20%)</title><rect x="223.0" y="419.0" width="14.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="226.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (14,992 samples, 0.83%)</title><rect x="223.0" y="403.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="226.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (9,583 samples, 0.53%)</title><rect x="223.0" y="387.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="226.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (9,583 samples, 0.53%)</title><rect x="223.0" y="371.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="226.0" y="382.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (3,336 samples, 0.18%)</title><rect x="223.0" y="355.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="226.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (6,247 samples, 0.35%)</title><rect x="225.2" y="355.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="228.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (6,247 samples, 0.35%)</title><rect x="225.2" y="339.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="228.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (6,247 samples, 0.35%)</title><rect x="225.2" y="323.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="228.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6,247 samples, 0.35%)</title><rect x="225.2" y="307.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="228.2" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,116 samples, 0.17%)</title><rect x="225.2" y="291.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="228.2" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3,131 samples, 0.17%)</title><rect x="227.2" y="291.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.2" y="302.0"></text>
</g>
<g>
<title>byte[] (3,131 samples, 0.17%)</title><rect x="227.2" y="275.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="230.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (5,409 samples, 0.30%)</title><rect x="229.2" y="387.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (5,409 samples, 0.30%)</title><rect x="229.2" y="371.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="232.2" y="382.0"></text>
</g>
<g>
<title>byte[] (2,057 samples, 0.11%)</title><rect x="229.2" y="355.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="232.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,352 samples, 0.19%)</title><rect x="230.6" y="355.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="233.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,352 samples, 0.19%)</title><rect x="230.6" y="339.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.6" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,352 samples, 0.19%)</title><rect x="230.6" y="323.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="233.6" y="334.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1,422 samples, 0.08%)</title><rect x="232.8" y="403.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.8" y="414.0"></text>
</g>
<g>
<title>java.lang.Long (1,422 samples, 0.08%)</title><rect x="232.8" y="387.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="235.8" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.isEmpty (1,720 samples, 0.10%)</title><rect x="233.7" y="403.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="236.7" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (1,720 samples, 0.10%)</title><rect x="233.7" y="387.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="236.7" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (1,720 samples, 0.10%)</title><rect x="233.7" y="371.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="236.7" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3,595 samples, 0.20%)</title><rect x="234.8" y="403.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.8" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3,595 samples, 0.20%)</title><rect x="234.8" y="387.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.8" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (3,595 samples, 0.20%)</title><rect x="234.8" y="371.0" width="2.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="237.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (3,653 samples, 0.20%)</title><rect x="237.2" y="435.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,672 samples, 0.09%)</title><rect x="237.2" y="419.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="240.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,672 samples, 0.09%)</title><rect x="237.2" y="403.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="240.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.get$Lambda (1,672 samples, 0.09%)</title><rect x="237.2" y="387.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="240.2" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$64 (1,672 samples, 0.09%)</title><rect x="237.2" y="371.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="240.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,981 samples, 0.11%)</title><rect x="238.3" y="419.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="241.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,981 samples, 0.11%)</title><rect x="238.3" y="403.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,976 samples, 0.11%)</title><rect x="238.3" y="387.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="241.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4,138 samples, 0.23%)</title><rect x="239.6" y="467.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="242.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,138 samples, 0.23%)</title><rect x="239.6" y="451.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,138 samples, 0.23%)</title><rect x="239.6" y="435.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String (1,498 samples, 0.08%)</title><rect x="239.6" y="419.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="242.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,640 samples, 0.15%)</title><rect x="240.5" y="419.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="243.5" y="430.0"></text>
</g>
<g>
<title>byte[] (2,640 samples, 0.15%)</title><rect x="240.5" y="403.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="243.5" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (21,631 samples, 1.20%)</title><rect x="242.3" y="499.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="245.3" y="510.0"></text>
</g>
<g>
<title>one.nio.http.Request (3,249 samples, 0.18%)</title><rect x="242.3" y="483.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="245.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5,315 samples, 0.29%)</title><rect x="244.4" y="483.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="247.4" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (5,134 samples, 0.28%)</title><rect x="244.4" y="467.0" width="3.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="247.4" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13,067 samples, 0.72%)</title><rect x="247.8" y="483.0" width="8.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="250.8" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13,067 samples, 0.72%)</title><rect x="247.8" y="467.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.8" y="478.0"></text>
</g>
<g>
<title>char[] (7,119 samples, 0.39%)</title><rect x="247.8" y="451.0" width="4.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="250.8" y="462.0"></text>
</g>
<g>
<title>char[] (650 samples, 0.04%)</title><rect x="252.5" y="451.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="255.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (1,811 samples, 0.10%)</title><rect x="252.9" y="451.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="255.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,487 samples, 0.19%)</title><rect x="254.1" y="451.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="257.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,487 samples, 0.19%)</title><rect x="254.1" y="435.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="257.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,487 samples, 0.19%)</title><rect x="254.1" y="419.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="257.1" y="430.0"></text>
</g>
<g>
<title>byte[] (3,487 samples, 0.19%)</title><rect x="254.1" y="403.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="257.1" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,139 samples, 0.45%)</title><rect x="256.4" y="499.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="259.4" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,139 samples, 0.45%)</title><rect x="256.4" y="483.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.4" y="494.0"></text>
</g>
<g>
<title>char[] (3,853 samples, 0.21%)</title><rect x="256.4" y="467.0" width="2.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="259.4" y="478.0"></text>
</g>
<g>
<title>java.lang.String (1,681 samples, 0.09%)</title><rect x="258.9" y="467.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="261.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,603 samples, 0.14%)</title><rect x="260.0" y="467.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="263.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,603 samples, 0.14%)</title><rect x="260.0" y="451.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,603 samples, 0.14%)</title><rect x="260.0" y="435.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="263.0" y="446.0"></text>
</g>
<g>
<title>byte[] (2,603 samples, 0.14%)</title><rect x="260.0" y="419.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="263.0" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=14157] (75,524 samples, 4.17%)</title><rect x="261.7" y="579.0" width="49.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="264.7" y="590.0">[NIO ..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (75,524 samples, 4.17%)</title><rect x="261.7" y="563.0" width="49.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="264.7" y="574.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4,049 samples, 0.22%)</title><rect x="261.7" y="547.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="264.7" y="558.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (4,049 samples, 0.22%)</title><rect x="261.7" y="531.0" width="2.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="264.7" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (71,475 samples, 3.95%)</title><rect x="264.3" y="547.0" width="46.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="267.3" y="558.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (71,475 samples, 3.95%)</title><rect x="264.3" y="531.0" width="46.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="267.3" y="542.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (71,475 samples, 3.95%)</title><rect x="264.3" y="515.0" width="46.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="267.3" y="526.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (39,829 samples, 2.20%)</title><rect x="264.3" y="499.0" width="26.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="267.3" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (39,829 samples, 2.20%)</title><rect x="264.3" y="483.0" width="26.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="267.3" y="494.0">o..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (35,054 samples, 1.94%)</title><rect x="264.3" y="467.0" width="22.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="267.3" y="478.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2,861 samples, 0.16%)</title><rect x="264.3" y="451.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="267.3" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,861 samples, 0.16%)</title><rect x="264.3" y="435.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="267.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,861 samples, 0.16%)</title><rect x="264.3" y="419.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="267.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1,371 samples, 0.08%)</title><rect x="264.3" y="403.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="267.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,490 samples, 0.08%)</title><rect x="265.2" y="403.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="268.2" y="414.0"></text>
</g>
<g>
<title>byte[] (1,490 samples, 0.08%)</title><rect x="265.2" y="387.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="268.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (32,193 samples, 1.78%)</title><rect x="266.2" y="451.0" width="21.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="269.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,421 samples, 0.08%)</title><rect x="266.2" y="435.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="269.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,421 samples, 0.08%)</title><rect x="266.2" y="419.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="269.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,421 samples, 0.08%)</title><rect x="266.2" y="403.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="269.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,421 samples, 0.08%)</title><rect x="266.2" y="387.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="269.2" y="398.0"></text>
</g>
<g>
<title>byte[] (1,421 samples, 0.08%)</title><rect x="266.2" y="371.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="269.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,443 samples, 0.08%)</title><rect x="267.1" y="435.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="270.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,443 samples, 0.08%)</title><rect x="267.1" y="419.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.get$Lambda (429 samples, 0.02%)</title><rect x="267.1" y="403.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="270.1" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$61 (429 samples, 0.02%)</title><rect x="267.1" y="387.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="270.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.get$Lambda (1,014 samples, 0.06%)</title><rect x="267.4" y="403.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="270.4" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$73 (1,014 samples, 0.06%)</title><rect x="267.4" y="387.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="270.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,731 samples, 0.21%)</title><rect x="268.0" y="435.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="271.0" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,731 samples, 0.21%)</title><rect x="268.0" y="419.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.0" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,731 samples, 0.21%)</title><rect x="268.0" y="403.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="271.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (22,290 samples, 1.23%)</title><rect x="270.5" y="435.0" width="14.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (22,290 samples, 1.23%)</title><rect x="270.5" y="419.0" width="14.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="273.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (15,016 samples, 0.83%)</title><rect x="270.5" y="403.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (9,545 samples, 0.53%)</title><rect x="270.5" y="387.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (9,545 samples, 0.53%)</title><rect x="270.5" y="371.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.5" y="382.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (3,600 samples, 0.20%)</title><rect x="270.5" y="355.0" width="2.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="273.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (5,945 samples, 0.33%)</title><rect x="272.8" y="355.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="275.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (5,945 samples, 0.33%)</title><rect x="272.8" y="339.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="275.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (5,945 samples, 0.33%)</title><rect x="272.8" y="323.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="275.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5,945 samples, 0.33%)</title><rect x="272.8" y="307.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="275.8" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,546 samples, 0.20%)</title><rect x="272.8" y="291.0" width="2.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="275.8" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2,399 samples, 0.13%)</title><rect x="275.2" y="291.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="278.2" y="302.0"></text>
</g>
<g>
<title>byte[] (2,399 samples, 0.13%)</title><rect x="275.2" y="275.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="278.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (5,471 samples, 0.30%)</title><rect x="276.7" y="387.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="279.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (5,471 samples, 0.30%)</title><rect x="276.7" y="371.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="279.7" y="382.0"></text>
</g>
<g>
<title>byte[] (2,203 samples, 0.12%)</title><rect x="276.7" y="355.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="279.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,268 samples, 0.18%)</title><rect x="278.2" y="355.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="281.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,268 samples, 0.18%)</title><rect x="278.2" y="339.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="281.2" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,268 samples, 0.18%)</title><rect x="278.2" y="323.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="281.2" y="334.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1,640 samples, 0.09%)</title><rect x="280.3" y="403.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.3" y="414.0"></text>
</g>
<g>
<title>java.lang.Long (1,640 samples, 0.09%)</title><rect x="280.3" y="387.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="283.3" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.isEmpty (2,112 samples, 0.12%)</title><rect x="281.4" y="403.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="284.4" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (2,112 samples, 0.12%)</title><rect x="281.4" y="387.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.4" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (2,112 samples, 0.12%)</title><rect x="281.4" y="371.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="284.4" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3,477 samples, 0.19%)</title><rect x="282.7" y="403.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.7" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3,477 samples, 0.19%)</title><rect x="282.7" y="387.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="285.7" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (3,477 samples, 0.19%)</title><rect x="282.7" y="371.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="285.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (3,270 samples, 0.18%)</title><rect x="285.0" y="435.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="288.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,424 samples, 0.08%)</title><rect x="285.0" y="419.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="288.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,424 samples, 0.08%)</title><rect x="285.0" y="403.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="288.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.get$Lambda (1,424 samples, 0.08%)</title><rect x="285.0" y="387.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.0" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$64 (1,424 samples, 0.08%)</title><rect x="285.0" y="371.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="288.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,846 samples, 0.10%)</title><rect x="286.0" y="419.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,846 samples, 0.10%)</title><rect x="286.0" y="403.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="289.0" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,843 samples, 0.10%)</title><rect x="286.0" y="387.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="289.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4,775 samples, 0.26%)</title><rect x="287.2" y="467.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,775 samples, 0.26%)</title><rect x="287.2" y="451.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="290.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,775 samples, 0.26%)</title><rect x="287.2" y="435.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="290.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String (1,944 samples, 0.11%)</title><rect x="287.2" y="419.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="290.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,831 samples, 0.16%)</title><rect x="288.4" y="419.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="291.4" y="430.0"></text>
</g>
<g>
<title>byte[] (2,831 samples, 0.16%)</title><rect x="288.4" y="403.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="291.4" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (21,912 samples, 1.21%)</title><rect x="290.3" y="499.0" width="14.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="293.3" y="510.0"></text>
</g>
<g>
<title>one.nio.http.Request (3,221 samples, 0.18%)</title><rect x="290.3" y="483.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="293.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5,684 samples, 0.31%)</title><rect x="292.4" y="483.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.4" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (4,440 samples, 0.25%)</title><rect x="292.4" y="467.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="295.4" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (1,244 samples, 0.07%)</title><rect x="295.3" y="467.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="298.3" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13,007 samples, 0.72%)</title><rect x="296.1" y="483.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="299.1" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13,007 samples, 0.72%)</title><rect x="296.1" y="467.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="299.1" y="478.0"></text>
</g>
<g>
<title>char[] (4,606 samples, 0.25%)</title><rect x="296.1" y="451.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="299.1" y="462.0"></text>
</g>
<g>
<title>char[] (1,815 samples, 0.10%)</title><rect x="299.1" y="451.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="302.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String (1,361 samples, 0.08%)</title><rect x="300.3" y="451.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="303.3" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5,225 samples, 0.29%)</title><rect x="301.2" y="451.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="304.2" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5,225 samples, 0.29%)</title><rect x="301.2" y="435.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5,225 samples, 0.29%)</title><rect x="301.2" y="419.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.2" y="430.0"></text>
</g>
<g>
<title>byte[] (5,196 samples, 0.29%)</title><rect x="301.2" y="403.0" width="3.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="304.2" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9,734 samples, 0.54%)</title><rect x="304.6" y="499.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.6" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9,734 samples, 0.54%)</title><rect x="304.6" y="483.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="307.6" y="494.0"></text>
</g>
<g>
<title>char[] (3,909 samples, 0.22%)</title><rect x="304.6" y="467.0" width="2.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="307.6" y="478.0"></text>
</g>
<g>
<title>java.lang.String (2,807 samples, 0.16%)</title><rect x="307.1" y="467.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="310.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,984 samples, 0.16%)</title><rect x="309.0" y="467.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="312.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,984 samples, 0.16%)</title><rect x="309.0" y="451.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="312.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,984 samples, 0.16%)</title><rect x="309.0" y="435.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="312.0" y="446.0"></text>
</g>
<g>
<title>byte[] (2,984 samples, 0.16%)</title><rect x="309.0" y="419.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="312.0" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=14167] (56,589 samples, 3.13%)</title><rect x="310.9" y="579.0" width="36.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="313.9" y="590.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (56,589 samples, 3.13%)</title><rect x="310.9" y="563.0" width="36.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.9" y="574.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.process (56,589 samples, 3.13%)</title><rect x="310.9" y="547.0" width="36.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="313.9" y="558.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (56,589 samples, 3.13%)</title><rect x="310.9" y="531.0" width="36.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.9" y="542.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (56,589 samples, 3.13%)</title><rect x="310.9" y="515.0" width="36.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="313.9" y="526.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (32,854 samples, 1.82%)</title><rect x="310.9" y="499.0" width="21.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="313.9" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (32,854 samples, 1.82%)</title><rect x="310.9" y="483.0" width="21.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="313.9" y="494.0">o..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (30,631 samples, 1.69%)</title><rect x="310.9" y="467.0" width="20.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="313.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4,898 samples, 0.27%)</title><rect x="310.9" y="451.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,898 samples, 0.27%)</title><rect x="310.9" y="435.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,898 samples, 0.27%)</title><rect x="310.9" y="419.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (2,179 samples, 0.12%)</title><rect x="310.9" y="403.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="313.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,719 samples, 0.15%)</title><rect x="312.3" y="403.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="315.3" y="414.0"></text>
</g>
<g>
<title>byte[] (2,719 samples, 0.15%)</title><rect x="312.3" y="387.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="315.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (25,733 samples, 1.42%)</title><rect x="314.1" y="451.0" width="16.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="317.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (417 samples, 0.02%)</title><rect x="314.1" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (417 samples, 0.02%)</title><rect x="314.1" y="419.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="317.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (417 samples, 0.02%)</title><rect x="314.1" y="403.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (417 samples, 0.02%)</title><rect x="314.1" y="387.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="317.1" y="398.0"></text>
</g>
<g>
<title>byte[] (417 samples, 0.02%)</title><rect x="314.1" y="371.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="317.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,484 samples, 0.08%)</title><rect x="314.4" y="435.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,484 samples, 0.08%)</title><rect x="314.4" y="419.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="317.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.get$Lambda (1,484 samples, 0.08%)</title><rect x="314.4" y="403.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.4" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$73 (1,484 samples, 0.08%)</title><rect x="314.4" y="387.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="317.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,820 samples, 0.10%)</title><rect x="315.3" y="435.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="318.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,820 samples, 0.10%)</title><rect x="315.3" y="419.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="318.3" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,820 samples, 0.10%)</title><rect x="315.3" y="403.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="318.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (18,392 samples, 1.02%)</title><rect x="316.6" y="435.0" width="11.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="319.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (18,392 samples, 1.02%)</title><rect x="316.6" y="419.0" width="11.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="319.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (12,197 samples, 0.67%)</title><rect x="316.6" y="403.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="319.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (7,212 samples, 0.40%)</title><rect x="316.6" y="387.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="319.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (7,212 samples, 0.40%)</title><rect x="316.6" y="371.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="319.6" y="382.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (4,538 samples, 0.25%)</title><rect x="316.6" y="355.0" width="2.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="319.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (2,674 samples, 0.15%)</title><rect x="319.5" y="355.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="322.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2,674 samples, 0.15%)</title><rect x="319.5" y="339.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="322.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2,674 samples, 0.15%)</title><rect x="319.5" y="323.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="322.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,674 samples, 0.15%)</title><rect x="319.5" y="307.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="322.5" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (831 samples, 0.05%)</title><rect x="319.5" y="291.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="322.5" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,843 samples, 0.10%)</title><rect x="320.1" y="291.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.1" y="302.0"></text>
</g>
<g>
<title>byte[] (1,843 samples, 0.10%)</title><rect x="320.1" y="275.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="323.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (4,985 samples, 0.28%)</title><rect x="321.3" y="387.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="324.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (4,985 samples, 0.28%)</title><rect x="321.3" y="371.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="324.3" y="382.0"></text>
</g>
<g>
<title>byte[] (3,803 samples, 0.21%)</title><rect x="321.3" y="355.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="324.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,182 samples, 0.07%)</title><rect x="323.7" y="355.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="326.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,182 samples, 0.07%)</title><rect x="323.7" y="339.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.7" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,182 samples, 0.07%)</title><rect x="323.7" y="323.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="326.7" y="334.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1,556 samples, 0.09%)</title><rect x="324.5" y="403.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="327.5" y="414.0"></text>
</g>
<g>
<title>java.lang.Long (1,556 samples, 0.09%)</title><rect x="324.5" y="387.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="327.5" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.isEmpty (935 samples, 0.05%)</title><rect x="325.5" y="403.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.5" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (935 samples, 0.05%)</title><rect x="325.5" y="387.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.5" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (935 samples, 0.05%)</title><rect x="325.5" y="371.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="328.5" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3,642 samples, 0.20%)</title><rect x="326.1" y="403.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="329.1" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3,642 samples, 0.20%)</title><rect x="326.1" y="387.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="329.1" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (3,642 samples, 0.20%)</title><rect x="326.1" y="371.0" width="2.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="329.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (3,573 samples, 0.20%)</title><rect x="328.5" y="435.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3,311 samples, 0.18%)</title><rect x="328.7" y="419.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3,311 samples, 0.18%)</title><rect x="328.7" y="403.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="331.7" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (3,310 samples, 0.18%)</title><rect x="328.7" y="387.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="331.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2,223 samples, 0.12%)</title><rect x="330.9" y="467.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="333.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,223 samples, 0.12%)</title><rect x="330.9" y="451.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="333.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,223 samples, 0.12%)</title><rect x="330.9" y="435.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="333.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,933 samples, 0.11%)</title><rect x="331.1" y="419.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="334.1" y="430.0"></text>
</g>
<g>
<title>byte[] (1,933 samples, 0.11%)</title><rect x="331.1" y="403.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="334.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (16,566 samples, 0.92%)</title><rect x="332.3" y="499.0" width="10.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="335.3" y="510.0"></text>
</g>
<g>
<title>one.nio.http.Request (2,236 samples, 0.12%)</title><rect x="332.3" y="483.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="335.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4,978 samples, 0.28%)</title><rect x="333.8" y="483.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.8" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (3,226 samples, 0.18%)</title><rect x="333.8" y="467.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="336.8" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (1,752 samples, 0.10%)</title><rect x="335.9" y="467.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="338.9" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9,352 samples, 0.52%)</title><rect x="337.0" y="483.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="340.0" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9,352 samples, 0.52%)</title><rect x="337.0" y="467.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.0" y="478.0"></text>
</g>
<g>
<title>char[] (2,513 samples, 0.14%)</title><rect x="337.0" y="451.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="340.0" y="462.0"></text>
</g>
<g>
<title>char[] (1,632 samples, 0.09%)</title><rect x="338.7" y="451.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="341.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (3,185 samples, 0.18%)</title><rect x="339.7" y="451.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="342.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,022 samples, 0.11%)</title><rect x="341.8" y="451.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="344.8" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,022 samples, 0.11%)</title><rect x="341.8" y="435.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="344.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,022 samples, 0.11%)</title><rect x="341.8" y="419.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="344.8" y="430.0"></text>
</g>
<g>
<title>byte[] (2,017 samples, 0.11%)</title><rect x="341.8" y="403.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="344.8" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,169 samples, 0.40%)</title><rect x="343.1" y="499.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="346.1" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,169 samples, 0.40%)</title><rect x="343.1" y="483.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="346.1" y="494.0"></text>
</g>
<g>
<title>char[] (2,217 samples, 0.12%)</title><rect x="343.1" y="467.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="346.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String (2,093 samples, 0.12%)</title><rect x="344.6" y="467.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="347.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,851 samples, 0.16%)</title><rect x="345.9" y="467.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="348.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,851 samples, 0.16%)</title><rect x="345.9" y="451.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="348.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,851 samples, 0.16%)</title><rect x="345.9" y="435.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.9" y="446.0"></text>
</g>
<g>
<title>byte[] (2,851 samples, 0.16%)</title><rect x="345.9" y="419.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="348.9" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=14173] (46,139 samples, 2.55%)</title><rect x="347.8" y="579.0" width="30.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="350.8" y="590.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (46,139 samples, 2.55%)</title><rect x="347.8" y="563.0" width="30.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="350.8" y="574.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (46,139 samples, 2.55%)</title><rect x="347.8" y="547.0" width="30.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="350.8" y="558.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (46,139 samples, 2.55%)</title><rect x="347.8" y="531.0" width="30.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="350.8" y="542.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (46,139 samples, 2.55%)</title><rect x="347.8" y="515.0" width="30.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="350.8" y="526.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (26,788 samples, 1.48%)</title><rect x="347.8" y="499.0" width="17.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="350.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (26,788 samples, 1.48%)</title><rect x="347.8" y="483.0" width="17.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="350.8" y="494.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (24,969 samples, 1.38%)</title><rect x="347.8" y="467.0" width="16.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="350.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4,012 samples, 0.22%)</title><rect x="347.8" y="451.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="350.8" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,012 samples, 0.22%)</title><rect x="347.8" y="435.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="350.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,012 samples, 0.22%)</title><rect x="347.8" y="419.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="350.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1,852 samples, 0.10%)</title><rect x="347.8" y="403.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="350.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,160 samples, 0.12%)</title><rect x="349.0" y="403.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="352.0" y="414.0"></text>
</g>
<g>
<title>byte[] (2,160 samples, 0.12%)</title><rect x="349.0" y="387.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="352.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (20,957 samples, 1.16%)</title><rect x="350.4" y="451.0" width="13.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="353.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,303 samples, 0.07%)</title><rect x="350.6" y="435.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="353.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,303 samples, 0.07%)</title><rect x="350.6" y="419.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="353.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.get$Lambda (1,303 samples, 0.07%)</title><rect x="350.6" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.6" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$73 (1,303 samples, 0.07%)</title><rect x="350.6" y="387.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="353.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,583 samples, 0.09%)</title><rect x="351.4" y="435.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="354.4" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,583 samples, 0.09%)</title><rect x="351.4" y="419.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="354.4" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,583 samples, 0.09%)</title><rect x="351.4" y="403.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="354.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (14,955 samples, 0.83%)</title><rect x="352.5" y="435.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="355.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (14,955 samples, 0.83%)</title><rect x="352.5" y="419.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="355.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (9,862 samples, 0.54%)</title><rect x="352.5" y="403.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="355.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (5,913 samples, 0.33%)</title><rect x="352.5" y="387.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="355.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (5,913 samples, 0.33%)</title><rect x="352.5" y="371.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="355.5" y="382.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (3,718 samples, 0.21%)</title><rect x="352.5" y="355.0" width="2.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="355.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (2,195 samples, 0.12%)</title><rect x="354.9" y="355.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="357.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2,195 samples, 0.12%)</title><rect x="354.9" y="339.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="357.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2,195 samples, 0.12%)</title><rect x="354.9" y="323.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="357.9" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,195 samples, 0.12%)</title><rect x="354.9" y="307.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="357.9" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (608 samples, 0.03%)</title><rect x="354.9" y="291.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="357.9" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,587 samples, 0.09%)</title><rect x="355.3" y="291.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="358.3" y="302.0"></text>
</g>
<g>
<title>byte[] (1,587 samples, 0.09%)</title><rect x="355.3" y="275.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="358.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (3,949 samples, 0.22%)</title><rect x="356.3" y="387.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="359.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (3,949 samples, 0.22%)</title><rect x="356.3" y="371.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="359.3" y="382.0"></text>
</g>
<g>
<title>byte[] (3,072 samples, 0.17%)</title><rect x="356.3" y="355.0" width="2.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="359.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (877 samples, 0.05%)</title><rect x="358.3" y="355.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="361.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (877 samples, 0.05%)</title><rect x="358.3" y="339.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="361.3" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (877 samples, 0.05%)</title><rect x="358.3" y="323.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="361.3" y="334.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1,387 samples, 0.08%)</title><rect x="358.9" y="403.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="361.9" y="414.0"></text>
</g>
<g>
<title>java.lang.Long (1,387 samples, 0.08%)</title><rect x="358.9" y="387.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="361.9" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.isEmpty (719 samples, 0.04%)</title><rect x="359.8" y="403.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="362.8" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (719 samples, 0.04%)</title><rect x="359.8" y="387.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="362.8" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (719 samples, 0.04%)</title><rect x="359.8" y="371.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="362.8" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (2,926 samples, 0.16%)</title><rect x="360.3" y="403.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.3" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (2,926 samples, 0.16%)</title><rect x="360.3" y="387.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.3" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (2,926 samples, 0.16%)</title><rect x="360.3" y="371.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="363.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (2,845 samples, 0.16%)</title><rect x="362.2" y="435.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="365.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,670 samples, 0.15%)</title><rect x="362.3" y="419.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="365.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2,670 samples, 0.15%)</title><rect x="362.3" y="403.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="365.3" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (2,669 samples, 0.15%)</title><rect x="362.3" y="387.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="365.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,819 samples, 0.10%)</title><rect x="364.1" y="467.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,819 samples, 0.10%)</title><rect x="364.1" y="451.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="367.1" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,819 samples, 0.10%)</title><rect x="364.1" y="435.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,634 samples, 0.09%)</title><rect x="364.2" y="419.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="367.2" y="430.0"></text>
</g>
<g>
<title>byte[] (1,634 samples, 0.09%)</title><rect x="364.2" y="403.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="367.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13,411 samples, 0.74%)</title><rect x="365.3" y="499.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.3" y="510.0"></text>
</g>
<g>
<title>one.nio.http.Request (1,889 samples, 0.10%)</title><rect x="365.3" y="483.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="368.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4,000 samples, 0.22%)</title><rect x="366.5" y="483.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="369.5" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (2,514 samples, 0.14%)</title><rect x="366.5" y="467.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="369.5" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (1,486 samples, 0.08%)</title><rect x="368.1" y="467.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="371.1" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,522 samples, 0.42%)</title><rect x="369.1" y="483.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="372.1" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,522 samples, 0.42%)</title><rect x="369.1" y="467.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="372.1" y="478.0"></text>
</g>
<g>
<title>char[] (1,993 samples, 0.11%)</title><rect x="369.1" y="451.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="372.1" y="462.0"></text>
</g>
<g>
<title>char[] (1,396 samples, 0.08%)</title><rect x="370.4" y="451.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="373.4" y="462.0"></text>
</g>
<g>
<title>java.lang.String (2,539 samples, 0.14%)</title><rect x="371.3" y="451.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="374.3" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,594 samples, 0.09%)</title><rect x="373.0" y="451.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="376.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,594 samples, 0.09%)</title><rect x="373.0" y="435.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="376.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,594 samples, 0.09%)</title><rect x="373.0" y="419.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.0" y="430.0"></text>
</g>
<g>
<title>byte[] (1,583 samples, 0.09%)</title><rect x="373.0" y="403.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="376.0" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,940 samples, 0.33%)</title><rect x="374.0" y="499.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="377.0" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,940 samples, 0.33%)</title><rect x="374.0" y="483.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="377.0" y="494.0"></text>
</g>
<g>
<title>char[] (1,884 samples, 0.10%)</title><rect x="374.0" y="467.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="377.0" y="478.0"></text>
</g>
<g>
<title>java.lang.String (1,781 samples, 0.10%)</title><rect x="375.2" y="467.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="378.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,270 samples, 0.13%)</title><rect x="376.4" y="467.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="379.4" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,270 samples, 0.13%)</title><rect x="376.4" y="451.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,270 samples, 0.13%)</title><rect x="376.4" y="435.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="379.4" y="446.0"></text>
</g>
<g>
<title>byte[] (2,270 samples, 0.13%)</title><rect x="376.4" y="419.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="379.4" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=14158] (68,842 samples, 3.80%)</title><rect x="377.9" y="579.0" width="44.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="380.9" y="590.0">[NIO..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (68,842 samples, 3.80%)</title><rect x="377.9" y="563.0" width="44.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="380.9" y="574.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.process (68,842 samples, 3.80%)</title><rect x="377.9" y="547.0" width="44.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="380.9" y="558.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (68,842 samples, 3.80%)</title><rect x="377.9" y="531.0" width="44.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="380.9" y="542.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (68,840 samples, 3.80%)</title><rect x="377.9" y="515.0" width="44.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="380.9" y="526.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (37,289 samples, 2.06%)</title><rect x="377.9" y="499.0" width="24.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="380.9" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (37,289 samples, 2.06%)</title><rect x="377.9" y="483.0" width="24.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.9" y="494.0">o..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (33,264 samples, 1.84%)</title><rect x="377.9" y="467.0" width="21.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="380.9" y="478.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3,816 samples, 0.21%)</title><rect x="377.9" y="451.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="380.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,816 samples, 0.21%)</title><rect x="377.9" y="435.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="380.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,816 samples, 0.21%)</title><rect x="377.9" y="419.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="380.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1,426 samples, 0.08%)</title><rect x="377.9" y="403.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="380.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,390 samples, 0.13%)</title><rect x="378.8" y="403.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="381.8" y="414.0"></text>
</g>
<g>
<title>byte[] (2,390 samples, 0.13%)</title><rect x="378.8" y="387.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="381.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (29,448 samples, 1.63%)</title><rect x="380.4" y="451.0" width="19.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,469 samples, 0.08%)</title><rect x="380.4" y="435.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="383.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,469 samples, 0.08%)</title><rect x="380.4" y="419.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="383.4" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,469 samples, 0.08%)</title><rect x="380.4" y="403.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.4" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,469 samples, 0.08%)</title><rect x="380.4" y="387.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="383.4" y="398.0"></text>
</g>
<g>
<title>byte[] (1,469 samples, 0.08%)</title><rect x="380.4" y="371.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="383.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,556 samples, 0.09%)</title><rect x="381.3" y="435.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,556 samples, 0.09%)</title><rect x="381.3" y="419.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="384.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.get$Lambda (743 samples, 0.04%)</title><rect x="381.3" y="403.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.3" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$61 (743 samples, 0.04%)</title><rect x="381.3" y="387.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="384.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.get$Lambda (813 samples, 0.04%)</title><rect x="381.8" y="403.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="384.8" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$73 (813 samples, 0.04%)</title><rect x="381.8" y="387.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="384.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,879 samples, 0.16%)</title><rect x="382.3" y="435.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="385.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,879 samples, 0.16%)</title><rect x="382.3" y="419.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="385.3" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,879 samples, 0.16%)</title><rect x="382.3" y="403.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="385.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (20,334 samples, 1.12%)</title><rect x="384.3" y="435.0" width="13.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="387.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (20,334 samples, 1.12%)</title><rect x="384.3" y="419.0" width="13.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="387.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (14,169 samples, 0.78%)</title><rect x="384.3" y="403.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="387.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (9,141 samples, 0.51%)</title><rect x="384.3" y="387.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="387.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (9,141 samples, 0.51%)</title><rect x="384.3" y="371.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="387.3" y="382.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (3,459 samples, 0.19%)</title><rect x="384.3" y="355.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="387.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (5,682 samples, 0.31%)</title><rect x="386.5" y="355.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="389.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (5,682 samples, 0.31%)</title><rect x="386.5" y="339.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="389.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (5,682 samples, 0.31%)</title><rect x="386.5" y="323.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="389.5" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5,682 samples, 0.31%)</title><rect x="386.5" y="307.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="389.5" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,857 samples, 0.16%)</title><rect x="386.5" y="291.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="389.5" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2,825 samples, 0.16%)</title><rect x="388.4" y="291.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="391.4" y="302.0"></text>
</g>
<g>
<title>byte[] (2,825 samples, 0.16%)</title><rect x="388.4" y="275.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="391.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (5,028 samples, 0.28%)</title><rect x="390.2" y="387.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="393.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (5,028 samples, 0.28%)</title><rect x="390.2" y="371.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="393.2" y="382.0"></text>
</g>
<g>
<title>byte[] (1,780 samples, 0.10%)</title><rect x="390.2" y="355.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="393.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,248 samples, 0.18%)</title><rect x="391.4" y="355.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="394.4" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,248 samples, 0.18%)</title><rect x="391.4" y="339.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.4" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,248 samples, 0.18%)</title><rect x="391.4" y="323.0" width="2.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="394.4" y="334.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1,285 samples, 0.07%)</title><rect x="393.5" y="403.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="396.5" y="414.0"></text>
</g>
<g>
<title>java.lang.Long (1,285 samples, 0.07%)</title><rect x="393.5" y="387.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="396.5" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.isEmpty (1,741 samples, 0.10%)</title><rect x="394.3" y="403.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="397.3" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (1,741 samples, 0.10%)</title><rect x="394.3" y="387.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="397.3" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (1,741 samples, 0.10%)</title><rect x="394.3" y="371.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="397.3" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3,088 samples, 0.17%)</title><rect x="395.5" y="403.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="398.5" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3,088 samples, 0.17%)</title><rect x="395.5" y="387.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="398.5" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (3,088 samples, 0.17%)</title><rect x="395.5" y="371.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="398.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (3,162 samples, 0.17%)</title><rect x="397.5" y="435.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="400.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,501 samples, 0.08%)</title><rect x="397.5" y="419.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="400.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,501 samples, 0.08%)</title><rect x="397.5" y="403.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="400.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.get$Lambda (1,501 samples, 0.08%)</title><rect x="397.5" y="387.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="400.5" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$64 (1,501 samples, 0.08%)</title><rect x="397.5" y="371.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="400.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,661 samples, 0.09%)</title><rect x="398.5" y="419.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="401.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,661 samples, 0.09%)</title><rect x="398.5" y="403.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="401.5" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,654 samples, 0.09%)</title><rect x="398.5" y="387.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="401.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4,025 samples, 0.22%)</title><rect x="399.6" y="467.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="402.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,025 samples, 0.22%)</title><rect x="399.6" y="451.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="402.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,025 samples, 0.22%)</title><rect x="399.6" y="435.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String (1,700 samples, 0.09%)</title><rect x="399.6" y="419.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="402.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,325 samples, 0.13%)</title><rect x="400.7" y="419.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="403.7" y="430.0"></text>
</g>
<g>
<title>byte[] (2,325 samples, 0.13%)</title><rect x="400.7" y="403.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="403.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (23,171 samples, 1.28%)</title><rect x="402.2" y="499.0" width="15.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="405.2" y="510.0"></text>
</g>
<g>
<title>one.nio.http.Request (3,019 samples, 0.17%)</title><rect x="402.2" y="483.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="405.2" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5,858 samples, 0.32%)</title><rect x="404.2" y="483.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="407.2" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (5,213 samples, 0.29%)</title><rect x="404.2" y="467.0" width="3.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="407.2" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (645 samples, 0.04%)</title><rect x="407.6" y="467.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="410.6" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14,294 samples, 0.79%)</title><rect x="408.0" y="483.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.0" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14,294 samples, 0.79%)</title><rect x="408.0" y="467.0" width="9.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="411.0" y="478.0"></text>
</g>
<g>
<title>char[] (7,273 samples, 0.40%)</title><rect x="408.0" y="451.0" width="4.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="411.0" y="462.0"></text>
</g>
<g>
<title>char[] (1,024 samples, 0.06%)</title><rect x="412.7" y="451.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="415.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (1,806 samples, 0.10%)</title><rect x="413.4" y="451.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="416.4" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,191 samples, 0.23%)</title><rect x="414.6" y="451.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="417.6" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,191 samples, 0.23%)</title><rect x="414.6" y="435.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="417.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4,191 samples, 0.23%)</title><rect x="414.6" y="419.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.6" y="430.0"></text>
</g>
<g>
<title>byte[] (4,191 samples, 0.23%)</title><rect x="414.6" y="403.0" width="2.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="417.6" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,380 samples, 0.46%)</title><rect x="417.3" y="499.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="420.3" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,380 samples, 0.46%)</title><rect x="417.3" y="483.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="420.3" y="494.0"></text>
</g>
<g>
<title>char[] (3,730 samples, 0.21%)</title><rect x="417.3" y="467.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="420.3" y="478.0"></text>
</g>
<g>
<title>java.lang.String (2,212 samples, 0.12%)</title><rect x="419.7" y="467.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="422.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,438 samples, 0.13%)</title><rect x="421.2" y="467.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="424.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,438 samples, 0.13%)</title><rect x="421.2" y="451.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,438 samples, 0.13%)</title><rect x="421.2" y="435.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="424.2" y="446.0"></text>
</g>
<g>
<title>byte[] (2,438 samples, 0.13%)</title><rect x="421.2" y="419.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="424.2" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=14168] (38,201 samples, 2.11%)</title><rect x="422.8" y="579.0" width="24.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="425.8" y="590.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (38,201 samples, 2.11%)</title><rect x="422.8" y="563.0" width="24.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.8" y="574.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2,588 samples, 0.14%)</title><rect x="422.8" y="547.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="425.8" y="558.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2,588 samples, 0.14%)</title><rect x="422.8" y="531.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="425.8" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (35,613 samples, 1.97%)</title><rect x="424.5" y="547.0" width="23.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="427.5" y="558.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (35,613 samples, 1.97%)</title><rect x="424.5" y="531.0" width="23.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.5" y="542.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (35,613 samples, 1.97%)</title><rect x="424.5" y="515.0" width="23.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="427.5" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (21,059 samples, 1.16%)</title><rect x="424.5" y="499.0" width="13.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (21,059 samples, 1.16%)</title><rect x="424.5" y="483.0" width="13.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="427.5" y="494.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (17,933 samples, 0.99%)</title><rect x="424.5" y="467.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="427.5" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2,493 samples, 0.14%)</title><rect x="424.5" y="451.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,493 samples, 0.14%)</title><rect x="424.5" y="435.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="427.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,493 samples, 0.14%)</title><rect x="424.5" y="419.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="427.5" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1,327 samples, 0.07%)</title><rect x="424.5" y="403.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="427.5" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,166 samples, 0.06%)</title><rect x="425.3" y="403.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="428.3" y="414.0"></text>
</g>
<g>
<title>byte[] (1,166 samples, 0.06%)</title><rect x="425.3" y="387.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="428.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (15,440 samples, 0.85%)</title><rect x="426.1" y="451.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="429.1" y="462.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,087 samples, 0.06%)</title><rect x="426.1" y="435.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="429.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,087 samples, 0.06%)</title><rect x="426.1" y="419.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="429.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,087 samples, 0.06%)</title><rect x="426.1" y="403.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="429.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,087 samples, 0.06%)</title><rect x="426.1" y="387.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="429.1" y="398.0"></text>
</g>
<g>
<title>byte[] (1,087 samples, 0.06%)</title><rect x="426.1" y="371.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="429.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,101 samples, 0.06%)</title><rect x="426.8" y="435.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,101 samples, 0.06%)</title><rect x="426.8" y="419.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="429.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.get$Lambda (1,101 samples, 0.06%)</title><rect x="426.8" y="403.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="429.8" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$73 (1,101 samples, 0.06%)</title><rect x="426.8" y="387.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="429.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,347 samples, 0.07%)</title><rect x="427.5" y="435.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="430.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,347 samples, 0.07%)</title><rect x="427.5" y="419.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="430.5" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,347 samples, 0.07%)</title><rect x="427.5" y="403.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="430.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (9,710 samples, 0.54%)</title><rect x="428.4" y="435.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="431.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (9,710 samples, 0.54%)</title><rect x="428.4" y="419.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="431.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (6,324 samples, 0.35%)</title><rect x="428.4" y="403.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="431.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (3,866 samples, 0.21%)</title><rect x="428.4" y="387.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="431.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (3,866 samples, 0.21%)</title><rect x="428.4" y="371.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="431.4" y="382.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (1,377 samples, 0.08%)</title><rect x="428.4" y="355.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="431.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (2,489 samples, 0.14%)</title><rect x="429.3" y="355.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="432.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2,489 samples, 0.14%)</title><rect x="429.3" y="339.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="432.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2,489 samples, 0.14%)</title><rect x="429.3" y="323.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="432.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,489 samples, 0.14%)</title><rect x="429.3" y="307.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="432.3" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,212 samples, 0.07%)</title><rect x="429.3" y="291.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="432.3" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,277 samples, 0.07%)</title><rect x="430.1" y="291.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="433.1" y="302.0"></text>
</g>
<g>
<title>byte[] (1,277 samples, 0.07%)</title><rect x="430.1" y="275.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="433.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (2,458 samples, 0.14%)</title><rect x="430.9" y="387.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="433.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (2,458 samples, 0.14%)</title><rect x="430.9" y="371.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="433.9" y="382.0"></text>
</g>
<g>
<title>byte[] (1,131 samples, 0.06%)</title><rect x="430.9" y="355.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="433.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,327 samples, 0.07%)</title><rect x="431.7" y="355.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="434.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,327 samples, 0.07%)</title><rect x="431.7" y="339.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="434.7" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,327 samples, 0.07%)</title><rect x="431.7" y="323.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="434.7" y="334.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (969 samples, 0.05%)</title><rect x="432.5" y="403.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="435.5" y="414.0"></text>
</g>
<g>
<title>java.lang.Long (969 samples, 0.05%)</title><rect x="432.5" y="387.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="435.5" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.isEmpty (1,198 samples, 0.07%)</title><rect x="433.2" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.2" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (1,198 samples, 0.07%)</title><rect x="433.2" y="387.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="436.2" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (1,198 samples, 0.07%)</title><rect x="433.2" y="371.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="436.2" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (1,197 samples, 0.07%)</title><rect x="433.9" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.9" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (1,197 samples, 0.07%)</title><rect x="433.9" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="436.9" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (1,197 samples, 0.07%)</title><rect x="433.9" y="371.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="436.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (2,170 samples, 0.12%)</title><rect x="434.7" y="435.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="437.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,170 samples, 0.06%)</title><rect x="434.7" y="419.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="437.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,170 samples, 0.06%)</title><rect x="434.7" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="437.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.get$Lambda (1,170 samples, 0.06%)</title><rect x="434.7" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="437.7" y="398.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$64 (1,170 samples, 0.06%)</title><rect x="434.7" y="371.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="437.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,000 samples, 0.06%)</title><rect x="435.5" y="419.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="438.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,000 samples, 0.06%)</title><rect x="435.5" y="403.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="438.5" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (993 samples, 0.05%)</title><rect x="435.5" y="387.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="438.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3,126 samples, 0.17%)</title><rect x="436.2" y="467.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,126 samples, 0.17%)</title><rect x="436.2" y="451.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,126 samples, 0.17%)</title><rect x="436.2" y="435.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="439.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String (1,601 samples, 0.09%)</title><rect x="436.2" y="419.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="439.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,525 samples, 0.08%)</title><rect x="437.2" y="419.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.2" y="430.0"></text>
</g>
<g>
<title>byte[] (1,525 samples, 0.08%)</title><rect x="437.2" y="403.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="440.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9,255 samples, 0.51%)</title><rect x="438.2" y="499.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="441.2" y="510.0"></text>
</g>
<g>
<title>one.nio.http.Request (1,823 samples, 0.10%)</title><rect x="438.2" y="483.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="441.2" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,694 samples, 0.09%)</title><rect x="439.4" y="483.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.4" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (1,529 samples, 0.08%)</title><rect x="439.4" y="467.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="442.4" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,738 samples, 0.32%)</title><rect x="440.5" y="483.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="443.5" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,738 samples, 0.32%)</title><rect x="440.5" y="467.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="443.5" y="478.0"></text>
</g>
<g>
<title>char[] (1,885 samples, 0.10%)</title><rect x="440.5" y="451.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="443.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (1,698 samples, 0.09%)</title><rect x="441.8" y="451.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="444.8" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,960 samples, 0.11%)</title><rect x="442.9" y="451.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="445.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,960 samples, 0.11%)</title><rect x="442.9" y="435.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="445.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,960 samples, 0.11%)</title><rect x="442.9" y="419.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="445.9" y="430.0"></text>
</g>
<g>
<title>byte[] (1,876 samples, 0.10%)</title><rect x="442.9" y="403.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="445.9" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,299 samples, 0.29%)</title><rect x="444.2" y="499.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="447.2" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,299 samples, 0.29%)</title><rect x="444.2" y="483.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="447.2" y="494.0"></text>
</g>
<g>
<title>char[] (1,614 samples, 0.09%)</title><rect x="444.2" y="467.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="447.2" y="478.0"></text>
</g>
<g>
<title>java.lang.String (1,642 samples, 0.09%)</title><rect x="445.3" y="467.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="448.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,998 samples, 0.11%)</title><rect x="446.4" y="467.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.4" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,998 samples, 0.11%)</title><rect x="446.4" y="451.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="449.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,998 samples, 0.11%)</title><rect x="446.4" y="435.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="449.4" y="446.0"></text>
</g>
<g>
<title>byte[] (1,998 samples, 0.11%)</title><rect x="446.4" y="419.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="449.4" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=14174] (16,653 samples, 0.92%)</title><rect x="447.7" y="579.0" width="10.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="450.7" y="590.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (16,653 samples, 0.92%)</title><rect x="447.7" y="563.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="450.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (16,653 samples, 0.92%)</title><rect x="447.7" y="547.0" width="10.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="450.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (16,653 samples, 0.92%)</title><rect x="447.7" y="531.0" width="10.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="450.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (16,652 samples, 0.92%)</title><rect x="447.7" y="515.0" width="10.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="450.7" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (9,088 samples, 0.50%)</title><rect x="447.7" y="499.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="450.7" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (9,088 samples, 0.50%)</title><rect x="447.7" y="483.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="450.7" y="494.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (8,128 samples, 0.45%)</title><rect x="447.7" y="467.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="450.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,178 samples, 0.07%)</title><rect x="447.7" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="450.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,178 samples, 0.07%)</title><rect x="447.7" y="435.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="450.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,178 samples, 0.07%)</title><rect x="447.7" y="419.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="450.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (623 samples, 0.03%)</title><rect x="447.7" y="403.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="450.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (555 samples, 0.03%)</title><rect x="448.1" y="403.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="451.1" y="414.0"></text>
</g>
<g>
<title>byte[] (555 samples, 0.03%)</title><rect x="448.1" y="387.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="451.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.entity (6,950 samples, 0.38%)</title><rect x="448.4" y="451.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="451.4" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (485 samples, 0.03%)</title><rect x="448.5" y="435.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="451.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (485 samples, 0.03%)</title><rect x="448.5" y="419.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="451.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.get$Lambda (485 samples, 0.03%)</title><rect x="448.5" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="451.5" y="414.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ShardedHttpServer$$Lambda$73 (485 samples, 0.03%)</title><rect x="448.5" y="387.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="451.5" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (747 samples, 0.04%)</title><rect x="448.8" y="435.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="451.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (747 samples, 0.04%)</title><rect x="448.8" y="419.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="451.8" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (747 samples, 0.04%)</title><rect x="448.8" y="403.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="451.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (4,837 samples, 0.27%)</title><rect x="449.3" y="435.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="452.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ConsistentHashImpl.primaryFor (4,837 samples, 0.27%)</title><rect x="449.3" y="419.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="452.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (3,192 samples, 0.18%)</title><rect x="449.3" y="403.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (1,977 samples, 0.11%)</title><rect x="449.3" y="387.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (1,977 samples, 0.11%)</title><rect x="449.3" y="371.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.3" y="382.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (1,053 samples, 0.06%)</title><rect x="449.3" y="355.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="452.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (924 samples, 0.05%)</title><rect x="450.0" y="355.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (924 samples, 0.05%)</title><rect x="450.0" y="339.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (924 samples, 0.05%)</title><rect x="450.0" y="323.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (924 samples, 0.05%)</title><rect x="450.0" y="307.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.0" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (688 samples, 0.04%)</title><rect x="450.2" y="291.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="453.2" y="302.0"></text>
</g>
<g>
<title>byte[] (688 samples, 0.04%)</title><rect x="450.2" y="275.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="453.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (1,215 samples, 0.07%)</title><rect x="450.6" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="453.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (1,215 samples, 0.07%)</title><rect x="450.6" y="371.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.6" y="382.0"></text>
</g>
<g>
<title>byte[] (857 samples, 0.05%)</title><rect x="450.6" y="355.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="453.6" y="366.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (559 samples, 0.03%)</title><rect x="451.4" y="403.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="454.4" y="414.0"></text>
</g>
<g>
<title>java.lang.Long (559 samples, 0.03%)</title><rect x="451.4" y="387.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="454.4" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (781 samples, 0.04%)</title><rect x="451.9" y="403.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="454.9" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (781 samples, 0.04%)</title><rect x="451.9" y="387.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.9" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (781 samples, 0.04%)</title><rect x="451.9" y="371.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="454.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.executeAsync (785 samples, 0.04%)</title><rect x="452.5" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="455.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (668 samples, 0.04%)</title><rect x="452.5" y="419.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="455.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (668 samples, 0.04%)</title><rect x="452.5" y="403.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="455.5" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (667 samples, 0.04%)</title><rect x="452.5" y="387.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="455.5" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (960 samples, 0.05%)</title><rect x="453.0" y="467.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="456.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (960 samples, 0.05%)</title><rect x="453.0" y="451.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="456.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (960 samples, 0.05%)</title><rect x="453.0" y="435.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="456.0" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (890 samples, 0.05%)</title><rect x="453.0" y="419.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="456.0" y="430.0"></text>
</g>
<g>
<title>byte[] (890 samples, 0.05%)</title><rect x="453.0" y="403.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="456.0" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5,354 samples, 0.30%)</title><rect x="453.6" y="499.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="456.6" y="510.0"></text>
</g>
<g>
<title>one.nio.http.Request (1,190 samples, 0.07%)</title><rect x="453.6" y="483.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="456.6" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,138 samples, 0.06%)</title><rect x="454.4" y="483.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="457.4" y="494.0"></text>
</g>
<g>
<title>java.lang.String[] (579 samples, 0.03%)</title><rect x="454.4" y="467.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="457.4" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (559 samples, 0.03%)</title><rect x="454.8" y="467.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="457.8" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,026 samples, 0.17%)</title><rect x="455.1" y="483.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="458.1" y="494.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,026 samples, 0.17%)</title><rect x="455.1" y="467.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="458.1" y="478.0"></text>
</g>
<g>
<title>char[] (1,311 samples, 0.07%)</title><rect x="455.1" y="451.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="458.1" y="462.0"></text>
</g>
<g>
<title>char[] (528 samples, 0.03%)</title><rect x="456.0" y="451.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="459.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String (580 samples, 0.03%)</title><rect x="456.3" y="451.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="459.3" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (607 samples, 0.03%)</title><rect x="456.7" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="459.7" y="462.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (607 samples, 0.03%)</title><rect x="456.7" y="435.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="459.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (607 samples, 0.03%)</title><rect x="456.7" y="419.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.7" y="430.0"></text>
</g>
<g>
<title>byte[] (607 samples, 0.03%)</title><rect x="456.7" y="403.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="459.7" y="414.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,210 samples, 0.12%)</title><rect x="457.1" y="499.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.1" y="510.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,210 samples, 0.12%)</title><rect x="457.1" y="483.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="460.1" y="494.0"></text>
</g>
<g>
<title>char[] (1,054 samples, 0.06%)</title><rect x="457.1" y="467.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="460.1" y="478.0"></text>
</g>
<g>
<title>java.lang.String (636 samples, 0.04%)</title><rect x="457.8" y="467.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="460.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (520 samples, 0.03%)</title><rect x="458.2" y="467.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (520 samples, 0.03%)</title><rect x="458.2" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="461.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (520 samples, 0.03%)</title><rect x="458.2" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="461.2" y="446.0"></text>
</g>
<g>
<title>byte[] (520 samples, 0.03%)</title><rect x="458.2" y="419.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="461.2" y="430.0"></text>
</g>
<g>
<title>[worker-0 tid=14265] (74,770 samples, 4.13%)</title><rect x="458.5" y="579.0" width="48.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="461.5" y="590.0">[wor..</text>
</g>
<g>
<title>java/lang/Thread.run (74,770 samples, 4.13%)</title><rect x="458.5" y="563.0" width="48.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="461.5" y="574.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (74,770 samples, 4.13%)</title><rect x="458.5" y="547.0" width="48.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.5" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (74,770 samples, 4.13%)</title><rect x="458.5" y="531.0" width="48.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="461.5" y="542.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (74,663 samples, 4.13%)</title><rect x="458.6" y="515.0" width="48.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.6" y="526.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (74,663 samples, 4.13%)</title><rect x="458.6" y="499.0" width="48.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.6" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (3,738 samples, 0.21%)</title><rect x="458.6" y="483.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="461.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (3,738 samples, 0.21%)</title><rect x="458.6" y="467.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (3,738 samples, 0.21%)</title><rect x="458.6" y="451.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="461.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,738 samples, 0.21%)</title><rect x="458.6" y="435.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,738 samples, 0.21%)</title><rect x="458.6" y="419.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="461.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,889 samples, 0.16%)</title><rect x="458.7" y="403.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.7" y="414.0"></text>
</g>
<g>
<title>byte[] (1,008 samples, 0.06%)</title><rect x="458.7" y="387.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="461.7" y="398.0"></text>
</g>
<g>
<title>byte[] (1,881 samples, 0.10%)</title><rect x="459.3" y="387.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="462.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (642 samples, 0.04%)</title><rect x="460.5" y="403.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="463.5" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (588 samples, 0.03%)</title><rect x="460.6" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.6" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (588 samples, 0.03%)</title><rect x="460.6" y="371.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.6" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (588 samples, 0.03%)</title><rect x="460.6" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.6" y="366.0"></text>
</g>
<g>
<title>char[] (541 samples, 0.03%)</title><rect x="460.6" y="339.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="463.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (70,786 samples, 3.91%)</title><rect x="461.0" y="483.0" width="46.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="464.0" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (70,786 samples, 3.91%)</title><rect x="461.0" y="467.0" width="46.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="464.0" y="478.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (70,786 samples, 3.91%)</title><rect x="461.0" y="451.0" width="46.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.0" y="462.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (70,456 samples, 3.89%)</title><rect x="461.3" y="435.0" width="45.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="464.3" y="446.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3,284 samples, 0.18%)</title><rect x="461.3" y="419.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="464.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3,284 samples, 0.18%)</title><rect x="461.3" y="403.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="464.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3,284 samples, 0.18%)</title><rect x="461.3" y="387.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="464.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3,284 samples, 0.18%)</title><rect x="461.3" y="371.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="464.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,284 samples, 0.18%)</title><rect x="461.3" y="355.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="464.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,016 samples, 0.17%)</title><rect x="461.3" y="339.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="464.3" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,646 samples, 0.09%)</title><rect x="461.3" y="323.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="464.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,646 samples, 0.09%)</title><rect x="461.3" y="307.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="464.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,646 samples, 0.09%)</title><rect x="461.3" y="291.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,646 samples, 0.09%)</title><rect x="461.3" y="275.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="464.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,646 samples, 0.09%)</title><rect x="461.3" y="259.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="464.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (1,646 samples, 0.09%)</title><rect x="461.3" y="243.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="464.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,646 samples, 0.09%)</title><rect x="461.3" y="227.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.3" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,646 samples, 0.09%)</title><rect x="461.3" y="211.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="464.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,646 samples, 0.09%)</title><rect x="461.3" y="195.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,646 samples, 0.09%)</title><rect x="461.3" y="179.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,646 samples, 0.09%)</title><rect x="461.3" y="163.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="464.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (1,646 samples, 0.09%)</title><rect x="461.3" y="147.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,646 samples, 0.09%)</title><rect x="461.3" y="131.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="464.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (1,646 samples, 0.09%)</title><rect x="461.3" y="115.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="464.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,646 samples, 0.09%)</title><rect x="461.3" y="99.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="464.3" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,638 samples, 0.09%)</title><rect x="461.3" y="83.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="464.3" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,638 samples, 0.09%)</title><rect x="461.3" y="67.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="464.3" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,638 samples, 0.09%)</title><rect x="461.3" y="51.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="464.3" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,370 samples, 0.08%)</title><rect x="462.3" y="323.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="465.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,370 samples, 0.08%)</title><rect x="462.3" y="307.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,370 samples, 0.08%)</title><rect x="462.3" y="291.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,370 samples, 0.08%)</title><rect x="462.3" y="275.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="465.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,370 samples, 0.08%)</title><rect x="462.3" y="259.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="465.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,370 samples, 0.08%)</title><rect x="462.3" y="243.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="465.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (991 samples, 0.05%)</title><rect x="462.3" y="227.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="465.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (991 samples, 0.05%)</title><rect x="462.3" y="211.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (991 samples, 0.05%)</title><rect x="462.3" y="195.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="465.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (991 samples, 0.05%)</title><rect x="462.3" y="179.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="465.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (67,019 samples, 3.70%)</title><rect x="463.5" y="419.0" width="43.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.5" y="430.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (66,998 samples, 3.70%)</title><rect x="463.5" y="403.0" width="43.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.5" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (57,713 samples, 3.19%)</title><rect x="463.5" y="387.0" width="37.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.5" y="398.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (57,256 samples, 3.16%)</title><rect x="463.8" y="371.0" width="37.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="466.8" y="382.0">ru/..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (393 samples, 0.02%)</title><rect x="463.8" y="355.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="466.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (56,863 samples, 3.14%)</title><rect x="464.1" y="355.0" width="37.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="467.1" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (56,863 samples, 3.14%)</title><rect x="464.1" y="339.0" width="37.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.1" y="350.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (28,130 samples, 1.55%)</title><rect x="464.1" y="323.0" width="18.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14,028 samples, 0.78%)</title><rect x="464.1" y="307.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="467.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14,028 samples, 0.78%)</title><rect x="464.1" y="291.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="467.1" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,028 samples, 0.78%)</title><rect x="464.1" y="275.0" width="9.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="467.1" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,102 samples, 0.78%)</title><rect x="473.2" y="307.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.2" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,102 samples, 0.78%)</title><rect x="473.2" y="291.0" width="9.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="476.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (28,733 samples, 1.59%)</title><rect x="482.4" y="323.0" width="18.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="485.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14,404 samples, 0.80%)</title><rect x="482.4" y="307.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="485.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14,404 samples, 0.80%)</title><rect x="482.4" y="291.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="485.4" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,404 samples, 0.80%)</title><rect x="482.4" y="275.0" width="9.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="485.4" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,329 samples, 0.79%)</title><rect x="491.8" y="307.0" width="9.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.8" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,329 samples, 0.79%)</title><rect x="491.8" y="291.0" width="9.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="494.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (9,285 samples, 0.51%)</title><rect x="501.1" y="387.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="504.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8,438 samples, 0.47%)</title><rect x="501.2" y="371.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="504.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8,429 samples, 0.47%)</title><rect x="501.2" y="355.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="504.2" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8,137 samples, 0.45%)</title><rect x="501.4" y="339.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="504.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8,137 samples, 0.45%)</title><rect x="501.4" y="323.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="504.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8,024 samples, 0.44%)</title><rect x="501.4" y="307.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="504.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8,024 samples, 0.44%)</title><rect x="501.4" y="291.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="504.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,024 samples, 0.44%)</title><rect x="501.4" y="275.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="504.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,024 samples, 0.44%)</title><rect x="501.4" y="259.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="504.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,117 samples, 0.28%)</title><rect x="501.4" y="243.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="504.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,117 samples, 0.28%)</title><rect x="501.4" y="227.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="504.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,117 samples, 0.28%)</title><rect x="501.4" y="211.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="504.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5,117 samples, 0.28%)</title><rect x="501.4" y="195.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="504.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,272 samples, 0.07%)</title><rect x="501.6" y="179.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="504.6" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (645 samples, 0.04%)</title><rect x="501.6" y="163.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="504.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (645 samples, 0.04%)</title><rect x="501.6" y="147.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="504.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (645 samples, 0.04%)</title><rect x="501.6" y="131.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="504.6" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (627 samples, 0.03%)</title><rect x="502.1" y="163.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="505.1" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (627 samples, 0.03%)</title><rect x="502.1" y="147.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="505.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,288 samples, 0.07%)</title><rect x="502.5" y="179.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="505.5" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (681 samples, 0.04%)</title><rect x="502.5" y="163.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="505.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (681 samples, 0.04%)</title><rect x="502.5" y="147.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="505.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (681 samples, 0.04%)</title><rect x="502.5" y="131.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="505.5" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (607 samples, 0.03%)</title><rect x="502.9" y="163.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="505.9" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (607 samples, 0.03%)</title><rect x="502.9" y="147.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="505.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (690 samples, 0.04%)</title><rect x="503.3" y="179.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="506.3" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (690 samples, 0.04%)</title><rect x="503.3" y="163.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="506.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (690 samples, 0.04%)</title><rect x="503.3" y="147.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="506.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (690 samples, 0.04%)</title><rect x="503.3" y="131.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="506.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,318 samples, 0.07%)</title><rect x="503.8" y="179.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (626 samples, 0.03%)</title><rect x="503.8" y="163.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="506.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (626 samples, 0.03%)</title><rect x="503.8" y="147.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="506.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (626 samples, 0.03%)</title><rect x="503.8" y="131.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="506.8" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (692 samples, 0.04%)</title><rect x="504.2" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="507.2" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (692 samples, 0.04%)</title><rect x="504.2" y="147.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="507.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (2,907 samples, 0.16%)</title><rect x="504.8" y="243.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="507.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,907 samples, 0.16%)</title><rect x="504.8" y="227.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="507.8" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,907 samples, 0.16%)</title><rect x="504.8" y="211.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="507.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,907 samples, 0.16%)</title><rect x="504.8" y="195.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="507.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,907 samples, 0.16%)</title><rect x="504.8" y="179.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="507.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,907 samples, 0.16%)</title><rect x="504.8" y="163.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="507.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (2,907 samples, 0.16%)</title><rect x="504.8" y="147.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="507.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,907 samples, 0.16%)</title><rect x="504.8" y="131.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="507.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (2,907 samples, 0.16%)</title><rect x="504.8" y="115.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="507.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,907 samples, 0.16%)</title><rect x="504.8" y="99.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="507.8" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,889 samples, 0.16%)</title><rect x="504.8" y="83.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="507.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,889 samples, 0.16%)</title><rect x="504.8" y="67.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="507.8" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,889 samples, 0.16%)</title><rect x="504.8" y="51.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="507.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (828 samples, 0.05%)</title><rect x="506.7" y="371.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="509.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (819 samples, 0.05%)</title><rect x="506.7" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="509.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (819 samples, 0.05%)</title><rect x="506.7" y="339.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="509.7" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (423 samples, 0.02%)</title><rect x="506.7" y="323.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="509.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (423 samples, 0.02%)</title><rect x="506.7" y="307.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="509.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (423 samples, 0.02%)</title><rect x="506.7" y="291.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="509.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (423 samples, 0.02%)</title><rect x="506.7" y="275.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="509.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (423 samples, 0.02%)</title><rect x="506.7" y="259.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (423 samples, 0.02%)</title><rect x="506.7" y="243.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="509.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (423 samples, 0.02%)</title><rect x="506.7" y="227.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="509.7" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (423 samples, 0.02%)</title><rect x="506.7" y="211.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="509.7" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (423 samples, 0.02%)</title><rect x="506.7" y="195.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="509.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (423 samples, 0.02%)</title><rect x="506.7" y="179.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="509.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (423 samples, 0.02%)</title><rect x="506.7" y="163.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="509.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (423 samples, 0.02%)</title><rect x="506.7" y="147.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="509.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (423 samples, 0.02%)</title><rect x="506.7" y="131.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (423 samples, 0.02%)</title><rect x="506.7" y="115.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (423 samples, 0.02%)</title><rect x="506.7" y="99.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.7" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (423 samples, 0.02%)</title><rect x="506.7" y="83.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="509.7" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (423 samples, 0.02%)</title><rect x="506.7" y="67.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="509.7" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (423 samples, 0.02%)</title><rect x="506.7" y="51.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="509.7" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (396 samples, 0.02%)</title><rect x="506.9" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="509.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (396 samples, 0.02%)</title><rect x="506.9" y="307.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="509.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (396 samples, 0.02%)</title><rect x="506.9" y="291.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.9" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (396 samples, 0.02%)</title><rect x="506.9" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="509.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (396 samples, 0.02%)</title><rect x="506.9" y="259.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="509.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (396 samples, 0.02%)</title><rect x="506.9" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="509.9" y="254.0"></text>
</g>
<g>
<title>[worker-0 tid=14269] (74,455 samples, 4.11%)</title><rect x="507.3" y="579.0" width="48.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="510.3" y="590.0">[wor..</text>
</g>
<g>
<title>java/lang/Thread.run (74,455 samples, 4.11%)</title><rect x="507.3" y="563.0" width="48.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.3" y="574.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (74,455 samples, 4.11%)</title><rect x="507.3" y="547.0" width="48.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="510.3" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (74,455 samples, 4.11%)</title><rect x="507.3" y="531.0" width="48.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.3" y="542.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (74,355 samples, 4.11%)</title><rect x="507.4" y="515.0" width="48.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="510.4" y="526.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (74,355 samples, 4.11%)</title><rect x="507.4" y="499.0" width="48.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="510.4" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (3,741 samples, 0.21%)</title><rect x="507.4" y="483.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="510.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (3,741 samples, 0.21%)</title><rect x="507.4" y="467.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (3,741 samples, 0.21%)</title><rect x="507.4" y="451.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="510.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,741 samples, 0.21%)</title><rect x="507.4" y="435.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="510.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,741 samples, 0.21%)</title><rect x="507.4" y="419.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,888 samples, 0.16%)</title><rect x="507.4" y="403.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="510.4" y="414.0"></text>
</g>
<g>
<title>byte[] (1,029 samples, 0.06%)</title><rect x="507.4" y="387.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="510.4" y="398.0"></text>
</g>
<g>
<title>byte[] (1,859 samples, 0.10%)</title><rect x="508.1" y="387.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="511.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (626 samples, 0.03%)</title><rect x="509.3" y="403.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="512.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (585 samples, 0.03%)</title><rect x="509.3" y="387.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="512.3" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (585 samples, 0.03%)</title><rect x="509.3" y="371.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="512.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (585 samples, 0.03%)</title><rect x="509.3" y="355.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="512.3" y="366.0"></text>
</g>
<g>
<title>char[] (538 samples, 0.03%)</title><rect x="509.3" y="339.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="512.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (70,507 samples, 3.90%)</title><rect x="509.8" y="483.0" width="46.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="512.8" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (70,507 samples, 3.90%)</title><rect x="509.8" y="467.0" width="46.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="512.8" y="478.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (70,507 samples, 3.90%)</title><rect x="509.8" y="451.0" width="46.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.8" y="462.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (70,196 samples, 3.88%)</title><rect x="510.0" y="435.0" width="45.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="513.0" y="446.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3,366 samples, 0.19%)</title><rect x="510.0" y="419.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="513.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3,366 samples, 0.19%)</title><rect x="510.0" y="403.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="513.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3,366 samples, 0.19%)</title><rect x="510.0" y="387.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="513.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3,366 samples, 0.19%)</title><rect x="510.0" y="371.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="513.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,366 samples, 0.19%)</title><rect x="510.0" y="355.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="513.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,100 samples, 0.17%)</title><rect x="510.0" y="339.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="513.0" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,648 samples, 0.09%)</title><rect x="510.0" y="323.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="513.0" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,648 samples, 0.09%)</title><rect x="510.0" y="307.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,648 samples, 0.09%)</title><rect x="510.0" y="291.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="513.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,648 samples, 0.09%)</title><rect x="510.0" y="275.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,648 samples, 0.09%)</title><rect x="510.0" y="259.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="513.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (1,648 samples, 0.09%)</title><rect x="510.0" y="243.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,648 samples, 0.09%)</title><rect x="510.0" y="227.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="513.0" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,648 samples, 0.09%)</title><rect x="510.0" y="211.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="513.0" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,648 samples, 0.09%)</title><rect x="510.0" y="195.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="513.0" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,648 samples, 0.09%)</title><rect x="510.0" y="179.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="513.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,648 samples, 0.09%)</title><rect x="510.0" y="163.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (1,648 samples, 0.09%)</title><rect x="510.0" y="147.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,648 samples, 0.09%)</title><rect x="510.0" y="131.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="513.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (1,648 samples, 0.09%)</title><rect x="510.0" y="115.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="513.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,648 samples, 0.09%)</title><rect x="510.0" y="99.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="513.0" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,645 samples, 0.09%)</title><rect x="510.0" y="83.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="513.0" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,645 samples, 0.09%)</title><rect x="510.0" y="67.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="513.0" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,645 samples, 0.09%)</title><rect x="510.0" y="51.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="513.0" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,452 samples, 0.08%)</title><rect x="511.1" y="323.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,452 samples, 0.08%)</title><rect x="511.1" y="307.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,452 samples, 0.08%)</title><rect x="511.1" y="291.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="514.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,452 samples, 0.08%)</title><rect x="511.1" y="275.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="514.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,452 samples, 0.08%)</title><rect x="511.1" y="259.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="514.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,452 samples, 0.08%)</title><rect x="511.1" y="243.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,037 samples, 0.06%)</title><rect x="511.1" y="227.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="514.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,037 samples, 0.06%)</title><rect x="511.1" y="211.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="514.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,037 samples, 0.06%)</title><rect x="511.1" y="195.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,037 samples, 0.06%)</title><rect x="511.1" y="179.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="514.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (415 samples, 0.02%)</title><rect x="511.7" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="514.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (415 samples, 0.02%)</title><rect x="511.7" y="211.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="514.7" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (415 samples, 0.02%)</title><rect x="511.7" y="195.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="514.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (415 samples, 0.02%)</title><rect x="511.7" y="179.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="514.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (415 samples, 0.02%)</title><rect x="511.7" y="163.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="514.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (415 samples, 0.02%)</title><rect x="511.7" y="147.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (415 samples, 0.02%)</title><rect x="511.7" y="131.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="514.7" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (415 samples, 0.02%)</title><rect x="511.7" y="115.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="514.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (415 samples, 0.02%)</title><rect x="511.7" y="99.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="514.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (415 samples, 0.02%)</title><rect x="511.7" y="83.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.7" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (415 samples, 0.02%)</title><rect x="511.7" y="67.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.7" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (415 samples, 0.02%)</title><rect x="511.7" y="51.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.7" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (415 samples, 0.02%)</title><rect x="511.7" y="35.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="514.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (66,707 samples, 3.69%)</title><rect x="512.3" y="419.0" width="43.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="515.3" y="430.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (66,698 samples, 3.69%)</title><rect x="512.3" y="403.0" width="43.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.3" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (57,477 samples, 3.18%)</title><rect x="512.3" y="387.0" width="37.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.3" y="398.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (57,045 samples, 3.15%)</title><rect x="512.6" y="371.0" width="37.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.6" y="382.0">ru/..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (401 samples, 0.02%)</title><rect x="512.6" y="355.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="515.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (56,644 samples, 3.13%)</title><rect x="512.8" y="355.0" width="37.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="515.8" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (56,644 samples, 3.13%)</title><rect x="512.8" y="339.0" width="37.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.8" y="350.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (28,160 samples, 1.56%)</title><rect x="512.8" y="323.0" width="18.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="515.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13,966 samples, 0.77%)</title><rect x="512.8" y="307.0" width="9.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="515.8" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13,966 samples, 0.77%)</title><rect x="512.8" y="291.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.8" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,966 samples, 0.77%)</title><rect x="512.8" y="275.0" width="9.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="515.8" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,194 samples, 0.78%)</title><rect x="521.9" y="307.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="524.9" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,194 samples, 0.78%)</title><rect x="521.9" y="291.0" width="9.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="524.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (28,484 samples, 1.57%)</title><rect x="531.2" y="323.0" width="18.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="534.2" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14,212 samples, 0.79%)</title><rect x="531.2" y="307.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14,212 samples, 0.79%)</title><rect x="531.2" y="291.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="534.2" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,212 samples, 0.79%)</title><rect x="531.2" y="275.0" width="9.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="534.2" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,272 samples, 0.79%)</title><rect x="540.4" y="307.0" width="9.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.4" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,272 samples, 0.79%)</title><rect x="540.4" y="291.0" width="9.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="543.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (9,221 samples, 0.51%)</title><rect x="549.8" y="387.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8,372 samples, 0.46%)</title><rect x="549.8" y="371.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8,358 samples, 0.46%)</title><rect x="549.8" y="355.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="552.8" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8,084 samples, 0.45%)</title><rect x="549.9" y="339.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.9" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8,084 samples, 0.45%)</title><rect x="549.9" y="323.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="552.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7,972 samples, 0.44%)</title><rect x="550.0" y="307.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="553.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7,972 samples, 0.44%)</title><rect x="550.0" y="291.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="553.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,972 samples, 0.44%)</title><rect x="550.0" y="275.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="553.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,972 samples, 0.44%)</title><rect x="550.0" y="259.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,116 samples, 0.28%)</title><rect x="550.0" y="243.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="553.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,116 samples, 0.28%)</title><rect x="550.0" y="227.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,116 samples, 0.28%)</title><rect x="550.0" y="211.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="553.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5,116 samples, 0.28%)</title><rect x="550.0" y="195.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="553.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,288 samples, 0.07%)</title><rect x="550.2" y="179.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.2" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (639 samples, 0.04%)</title><rect x="550.2" y="163.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (639 samples, 0.04%)</title><rect x="550.2" y="147.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.2" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (639 samples, 0.04%)</title><rect x="550.2" y="131.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="553.2" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (649 samples, 0.04%)</title><rect x="550.7" y="163.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="553.7" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (649 samples, 0.04%)</title><rect x="550.7" y="147.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="553.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,330 samples, 0.07%)</title><rect x="551.1" y="179.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.1" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (683 samples, 0.04%)</title><rect x="551.1" y="163.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (683 samples, 0.04%)</title><rect x="551.1" y="147.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="554.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (683 samples, 0.04%)</title><rect x="551.1" y="131.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="554.1" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (647 samples, 0.04%)</title><rect x="551.5" y="163.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="554.5" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (647 samples, 0.04%)</title><rect x="551.5" y="147.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="554.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (661 samples, 0.04%)</title><rect x="552.0" y="179.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="555.0" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (661 samples, 0.04%)</title><rect x="552.0" y="163.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (661 samples, 0.04%)</title><rect x="552.0" y="147.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (661 samples, 0.04%)</title><rect x="552.0" y="131.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="555.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,270 samples, 0.07%)</title><rect x="552.4" y="179.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="555.4" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (633 samples, 0.03%)</title><rect x="552.4" y="163.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="555.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (633 samples, 0.03%)</title><rect x="552.4" y="147.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (633 samples, 0.03%)</title><rect x="552.4" y="131.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="555.4" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (637 samples, 0.04%)</title><rect x="552.8" y="163.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="555.8" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (637 samples, 0.04%)</title><rect x="552.8" y="147.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="555.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (2,856 samples, 0.16%)</title><rect x="553.4" y="243.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,856 samples, 0.16%)</title><rect x="553.4" y="227.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.4" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,856 samples, 0.16%)</title><rect x="553.4" y="211.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="556.4" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,856 samples, 0.16%)</title><rect x="553.4" y="195.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,856 samples, 0.16%)</title><rect x="553.4" y="179.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="556.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,856 samples, 0.16%)</title><rect x="553.4" y="163.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="556.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (2,856 samples, 0.16%)</title><rect x="553.4" y="147.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,856 samples, 0.16%)</title><rect x="553.4" y="131.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (2,856 samples, 0.16%)</title><rect x="553.4" y="115.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="556.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,856 samples, 0.16%)</title><rect x="553.4" y="99.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="556.4" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,846 samples, 0.16%)</title><rect x="553.4" y="83.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="556.4" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,846 samples, 0.16%)</title><rect x="553.4" y="67.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="556.4" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,846 samples, 0.16%)</title><rect x="553.4" y="51.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="556.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (837 samples, 0.05%)</title><rect x="555.2" y="371.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (825 samples, 0.05%)</title><rect x="555.2" y="355.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (825 samples, 0.05%)</title><rect x="555.2" y="339.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.2" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (457 samples, 0.03%)</title><rect x="555.2" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (457 samples, 0.03%)</title><rect x="555.2" y="307.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (457 samples, 0.03%)</title><rect x="555.2" y="291.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (457 samples, 0.03%)</title><rect x="555.2" y="275.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (457 samples, 0.03%)</title><rect x="555.2" y="259.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (457 samples, 0.03%)</title><rect x="555.2" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (457 samples, 0.03%)</title><rect x="555.2" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="558.2" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (457 samples, 0.03%)</title><rect x="555.2" y="211.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.2" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (457 samples, 0.03%)</title><rect x="555.2" y="195.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (457 samples, 0.03%)</title><rect x="555.2" y="179.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (457 samples, 0.03%)</title><rect x="555.2" y="163.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (457 samples, 0.03%)</title><rect x="555.2" y="147.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (457 samples, 0.03%)</title><rect x="555.2" y="131.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (457 samples, 0.03%)</title><rect x="555.2" y="115.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="558.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (457 samples, 0.03%)</title><rect x="555.2" y="99.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="558.2" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (454 samples, 0.03%)</title><rect x="555.2" y="83.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="558.2" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (454 samples, 0.03%)</title><rect x="555.2" y="67.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.2" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (454 samples, 0.03%)</title><rect x="555.2" y="51.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="558.2" y="62.0"></text>
</g>
<g>
<title>[worker-0 tid=14275] (75,289 samples, 4.16%)</title><rect x="555.8" y="579.0" width="49.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="558.8" y="590.0">[work..</text>
</g>
<g>
<title>java/lang/Thread.run (75,289 samples, 4.16%)</title><rect x="555.8" y="563.0" width="49.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="558.8" y="574.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (75,289 samples, 4.16%)</title><rect x="555.8" y="547.0" width="49.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.8" y="558.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (75,289 samples, 4.16%)</title><rect x="555.8" y="531.0" width="49.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="558.8" y="542.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (75,178 samples, 4.15%)</title><rect x="555.9" y="515.0" width="49.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.9" y="526.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (75,178 samples, 4.15%)</title><rect x="555.9" y="499.0" width="49.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="558.9" y="510.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (5,936 samples, 0.33%)</title><rect x="555.9" y="483.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="558.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (5,936 samples, 0.33%)</title><rect x="555.9" y="467.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="558.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (5,936 samples, 0.33%)</title><rect x="555.9" y="451.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.9" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,936 samples, 0.33%)</title><rect x="555.9" y="435.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,936 samples, 0.33%)</title><rect x="555.9" y="419.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="558.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (4,891 samples, 0.27%)</title><rect x="555.9" y="403.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.9" y="414.0"></text>
</g>
<g>
<title>byte[] (1,363 samples, 0.08%)</title><rect x="555.9" y="387.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="558.9" y="398.0"></text>
</g>
<g>
<title>byte[] (3,528 samples, 0.19%)</title><rect x="556.8" y="387.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="559.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (822 samples, 0.05%)</title><rect x="559.1" y="403.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="562.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (750 samples, 0.04%)</title><rect x="559.2" y="387.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="562.2" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (750 samples, 0.04%)</title><rect x="559.2" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.2" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (750 samples, 0.04%)</title><rect x="559.2" y="355.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.2" y="366.0"></text>
</g>
<g>
<title>char[] (672 samples, 0.04%)</title><rect x="559.2" y="339.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="562.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (69,097 samples, 3.82%)</title><rect x="559.8" y="483.0" width="45.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="562.8" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (69,097 samples, 3.82%)</title><rect x="559.8" y="467.0" width="45.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.8" y="478.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (69,097 samples, 3.82%)</title><rect x="559.8" y="451.0" width="45.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.8" y="462.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (68,754 samples, 3.80%)</title><rect x="560.0" y="435.0" width="44.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="563.0" y="446.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3,630 samples, 0.20%)</title><rect x="560.0" y="419.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="563.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3,630 samples, 0.20%)</title><rect x="560.0" y="403.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3,630 samples, 0.20%)</title><rect x="560.0" y="387.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3,630 samples, 0.20%)</title><rect x="560.0" y="371.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="563.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,630 samples, 0.20%)</title><rect x="560.0" y="355.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="563.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,324 samples, 0.18%)</title><rect x="560.0" y="339.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="563.0" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,700 samples, 0.09%)</title><rect x="560.0" y="323.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.0" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,700 samples, 0.09%)</title><rect x="560.0" y="307.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="563.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,700 samples, 0.09%)</title><rect x="560.0" y="291.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="563.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,700 samples, 0.09%)</title><rect x="560.0" y="275.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="563.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,700 samples, 0.09%)</title><rect x="560.0" y="259.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="563.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (1,700 samples, 0.09%)</title><rect x="560.0" y="243.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,700 samples, 0.09%)</title><rect x="560.0" y="227.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="563.0" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,700 samples, 0.09%)</title><rect x="560.0" y="211.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.0" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,700 samples, 0.09%)</title><rect x="560.0" y="195.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="563.0" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,700 samples, 0.09%)</title><rect x="560.0" y="179.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,700 samples, 0.09%)</title><rect x="560.0" y="163.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (1,700 samples, 0.09%)</title><rect x="560.0" y="147.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="563.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,700 samples, 0.09%)</title><rect x="560.0" y="131.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (1,700 samples, 0.09%)</title><rect x="560.0" y="115.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,700 samples, 0.09%)</title><rect x="560.0" y="99.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="563.0" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,693 samples, 0.09%)</title><rect x="560.0" y="83.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="563.0" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,693 samples, 0.09%)</title><rect x="560.0" y="67.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.0" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,693 samples, 0.09%)</title><rect x="560.0" y="51.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="563.0" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,623 samples, 0.09%)</title><rect x="561.1" y="323.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="564.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,623 samples, 0.09%)</title><rect x="561.1" y="307.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="564.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,623 samples, 0.09%)</title><rect x="561.1" y="291.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="564.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,623 samples, 0.09%)</title><rect x="561.1" y="275.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,623 samples, 0.09%)</title><rect x="561.1" y="259.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="564.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,623 samples, 0.09%)</title><rect x="561.1" y="243.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="564.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,200 samples, 0.07%)</title><rect x="561.1" y="227.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,200 samples, 0.07%)</title><rect x="561.1" y="211.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="564.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,200 samples, 0.07%)</title><rect x="561.1" y="195.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,200 samples, 0.07%)</title><rect x="561.1" y="179.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (423 samples, 0.02%)</title><rect x="561.9" y="227.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (423 samples, 0.02%)</title><rect x="561.9" y="211.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="564.9" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (423 samples, 0.02%)</title><rect x="561.9" y="195.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="564.9" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (423 samples, 0.02%)</title><rect x="561.9" y="179.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="564.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (423 samples, 0.02%)</title><rect x="561.9" y="163.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="564.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (423 samples, 0.02%)</title><rect x="561.9" y="147.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="564.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (423 samples, 0.02%)</title><rect x="561.9" y="131.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="564.9" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (423 samples, 0.02%)</title><rect x="561.9" y="115.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="564.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (423 samples, 0.02%)</title><rect x="561.9" y="99.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (423 samples, 0.02%)</title><rect x="561.9" y="83.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="564.9" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (420 samples, 0.02%)</title><rect x="561.9" y="67.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.9" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (420 samples, 0.02%)</title><rect x="561.9" y="51.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.9" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (420 samples, 0.02%)</title><rect x="561.9" y="35.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="564.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (64,956 samples, 3.59%)</title><rect x="562.5" y="419.0" width="42.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="565.5" y="430.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (64,950 samples, 3.59%)</title><rect x="562.5" y="403.0" width="42.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="565.5" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (56,241 samples, 3.11%)</title><rect x="562.5" y="387.0" width="36.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.5" y="398.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (55,787 samples, 3.08%)</title><rect x="562.8" y="371.0" width="36.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.8" y="382.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (55,412 samples, 3.06%)</title><rect x="563.0" y="355.0" width="36.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="566.0" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (55,412 samples, 3.06%)</title><rect x="563.0" y="339.0" width="36.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="566.0" y="350.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (27,589 samples, 1.52%)</title><rect x="563.0" y="323.0" width="18.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="566.0" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13,750 samples, 0.76%)</title><rect x="563.0" y="307.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="566.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13,750 samples, 0.76%)</title><rect x="563.0" y="291.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="566.0" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,750 samples, 0.76%)</title><rect x="563.0" y="275.0" width="9.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="566.0" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (13,839 samples, 0.76%)</title><rect x="572.0" y="307.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.0" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,839 samples, 0.76%)</title><rect x="572.0" y="291.0" width="9.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="575.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (27,823 samples, 1.54%)</title><rect x="581.0" y="323.0" width="18.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="584.0" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13,887 samples, 0.77%)</title><rect x="581.0" y="307.0" width="9.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="584.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13,887 samples, 0.77%)</title><rect x="581.0" y="291.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="584.0" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,887 samples, 0.77%)</title><rect x="581.0" y="275.0" width="9.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="584.0" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (13,936 samples, 0.77%)</title><rect x="590.1" y="307.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="593.1" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,936 samples, 0.77%)</title><rect x="590.1" y="291.0" width="9.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="593.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (8,709 samples, 0.48%)</title><rect x="599.2" y="387.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (7,886 samples, 0.44%)</title><rect x="599.2" y="371.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (7,880 samples, 0.44%)</title><rect x="599.2" y="355.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="602.2" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7,595 samples, 0.42%)</title><rect x="599.4" y="339.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="602.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7,595 samples, 0.42%)</title><rect x="599.4" y="323.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="602.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7,473 samples, 0.41%)</title><rect x="599.4" y="307.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7,473 samples, 0.41%)</title><rect x="599.4" y="291.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,473 samples, 0.41%)</title><rect x="599.4" y="275.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,473 samples, 0.41%)</title><rect x="599.4" y="259.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="602.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,882 samples, 0.27%)</title><rect x="599.4" y="243.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,882 samples, 0.27%)</title><rect x="599.4" y="227.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="602.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,882 samples, 0.27%)</title><rect x="599.4" y="211.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,882 samples, 0.27%)</title><rect x="599.4" y="195.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="602.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,251 samples, 0.07%)</title><rect x="599.6" y="179.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="602.6" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (628 samples, 0.03%)</title><rect x="599.6" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (628 samples, 0.03%)</title><rect x="599.6" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="602.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (628 samples, 0.03%)</title><rect x="599.6" y="131.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="602.6" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (623 samples, 0.03%)</title><rect x="600.0" y="163.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.0" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (623 samples, 0.03%)</title><rect x="600.0" y="147.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="603.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,187 samples, 0.07%)</title><rect x="600.5" y="179.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.5" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (580 samples, 0.03%)</title><rect x="600.5" y="163.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="603.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (580 samples, 0.03%)</title><rect x="600.5" y="147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="603.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (580 samples, 0.03%)</title><rect x="600.5" y="131.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="603.5" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (607 samples, 0.03%)</title><rect x="600.8" y="163.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.8" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (607 samples, 0.03%)</title><rect x="600.8" y="147.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="603.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (668 samples, 0.04%)</title><rect x="601.2" y="179.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="604.2" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (668 samples, 0.04%)</title><rect x="601.2" y="163.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="604.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (668 samples, 0.04%)</title><rect x="601.2" y="147.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.2" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (668 samples, 0.04%)</title><rect x="601.2" y="131.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="604.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,237 samples, 0.07%)</title><rect x="601.7" y="179.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="604.7" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (604 samples, 0.03%)</title><rect x="601.7" y="163.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="604.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (604 samples, 0.03%)</title><rect x="601.7" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.7" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (604 samples, 0.03%)</title><rect x="601.7" y="131.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="604.7" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (633 samples, 0.03%)</title><rect x="602.1" y="163.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.1" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (633 samples, 0.03%)</title><rect x="602.1" y="147.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="605.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (2,591 samples, 0.14%)</title><rect x="602.6" y="243.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="605.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,591 samples, 0.14%)</title><rect x="602.6" y="227.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.6" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,591 samples, 0.14%)</title><rect x="602.6" y="211.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,591 samples, 0.14%)</title><rect x="602.6" y="195.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="605.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,591 samples, 0.14%)</title><rect x="602.6" y="179.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,591 samples, 0.14%)</title><rect x="602.6" y="163.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (2,591 samples, 0.14%)</title><rect x="602.6" y="147.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="605.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,591 samples, 0.14%)</title><rect x="602.6" y="131.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="605.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (2,591 samples, 0.14%)</title><rect x="602.6" y="115.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="605.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,591 samples, 0.14%)</title><rect x="602.6" y="99.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.6" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,575 samples, 0.14%)</title><rect x="602.6" y="83.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.6" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,575 samples, 0.14%)</title><rect x="602.6" y="67.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.6" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,575 samples, 0.14%)</title><rect x="602.6" y="51.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="605.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (807 samples, 0.04%)</title><rect x="604.3" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (799 samples, 0.04%)</title><rect x="604.3" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="607.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (799 samples, 0.04%)</title><rect x="604.3" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.3" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (424 samples, 0.02%)</title><rect x="604.3" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (424 samples, 0.02%)</title><rect x="604.3" y="307.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (424 samples, 0.02%)</title><rect x="604.3" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (424 samples, 0.02%)</title><rect x="604.3" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (424 samples, 0.02%)</title><rect x="604.3" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="607.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (424 samples, 0.02%)</title><rect x="604.3" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="607.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (424 samples, 0.02%)</title><rect x="604.3" y="227.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.3" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (424 samples, 0.02%)</title><rect x="604.3" y="211.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="607.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (424 samples, 0.02%)</title><rect x="604.3" y="195.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (424 samples, 0.02%)</title><rect x="604.3" y="179.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (424 samples, 0.02%)</title><rect x="604.3" y="163.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (424 samples, 0.02%)</title><rect x="604.3" y="147.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (424 samples, 0.02%)</title><rect x="604.3" y="131.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (424 samples, 0.02%)</title><rect x="604.3" y="115.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (424 samples, 0.02%)</title><rect x="604.3" y="99.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.3" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (424 samples, 0.02%)</title><rect x="604.3" y="83.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.3" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (424 samples, 0.02%)</title><rect x="604.3" y="67.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="607.3" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (424 samples, 0.02%)</title><rect x="604.3" y="51.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="607.3" y="62.0"></text>
</g>
<g>
<title>[worker-1 tid=14268] (74,519 samples, 4.12%)</title><rect x="604.9" y="579.0" width="48.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="607.9" y="590.0">[wor..</text>
</g>
<g>
<title>java/lang/Thread.run (74,519 samples, 4.12%)</title><rect x="604.9" y="563.0" width="48.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="607.9" y="574.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (74,519 samples, 4.12%)</title><rect x="604.9" y="547.0" width="48.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="607.9" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (74,519 samples, 4.12%)</title><rect x="604.9" y="531.0" width="48.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.9" y="542.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (74,429 samples, 4.11%)</title><rect x="605.0" y="515.0" width="48.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.0" y="526.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (74,429 samples, 4.11%)</title><rect x="605.0" y="499.0" width="48.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.0" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (3,589 samples, 0.20%)</title><rect x="605.0" y="483.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="608.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (3,589 samples, 0.20%)</title><rect x="605.0" y="467.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="608.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (3,589 samples, 0.20%)</title><rect x="605.0" y="451.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="608.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,589 samples, 0.20%)</title><rect x="605.0" y="435.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="608.0" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,589 samples, 0.20%)</title><rect x="605.0" y="419.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="608.0" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,773 samples, 0.15%)</title><rect x="605.0" y="403.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="608.0" y="414.0"></text>
</g>
<g>
<title>byte[] (991 samples, 0.05%)</title><rect x="605.0" y="387.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="608.0" y="398.0"></text>
</g>
<g>
<title>byte[] (1,782 samples, 0.10%)</title><rect x="605.7" y="387.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="608.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (620 samples, 0.03%)</title><rect x="606.8" y="403.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="609.8" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (572 samples, 0.03%)</title><rect x="606.9" y="387.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="609.9" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (572 samples, 0.03%)</title><rect x="606.9" y="371.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="609.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (572 samples, 0.03%)</title><rect x="606.9" y="355.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.9" y="366.0"></text>
</g>
<g>
<title>char[] (530 samples, 0.03%)</title><rect x="606.9" y="339.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="609.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (70,730 samples, 3.91%)</title><rect x="607.3" y="483.0" width="46.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.3" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (70,730 samples, 3.91%)</title><rect x="607.3" y="467.0" width="46.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="610.3" y="478.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (70,730 samples, 3.91%)</title><rect x="607.3" y="451.0" width="46.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="610.3" y="462.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (70,424 samples, 3.89%)</title><rect x="607.5" y="435.0" width="45.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="610.5" y="446.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3,461 samples, 0.19%)</title><rect x="607.5" y="419.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3,461 samples, 0.19%)</title><rect x="607.5" y="403.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="610.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3,461 samples, 0.19%)</title><rect x="607.5" y="387.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3,461 samples, 0.19%)</title><rect x="607.5" y="371.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,461 samples, 0.19%)</title><rect x="607.5" y="355.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="610.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,174 samples, 0.18%)</title><rect x="607.5" y="339.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.5" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,753 samples, 0.10%)</title><rect x="607.5" y="323.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="610.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,753 samples, 0.10%)</title><rect x="607.5" y="307.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="610.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,753 samples, 0.10%)</title><rect x="607.5" y="291.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="610.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,753 samples, 0.10%)</title><rect x="607.5" y="275.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,753 samples, 0.10%)</title><rect x="607.5" y="259.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="610.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (1,753 samples, 0.10%)</title><rect x="607.5" y="243.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,753 samples, 0.10%)</title><rect x="607.5" y="227.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.5" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,753 samples, 0.10%)</title><rect x="607.5" y="211.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,753 samples, 0.10%)</title><rect x="607.5" y="195.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,753 samples, 0.10%)</title><rect x="607.5" y="179.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,753 samples, 0.10%)</title><rect x="607.5" y="163.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (1,753 samples, 0.10%)</title><rect x="607.5" y="147.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="610.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,753 samples, 0.10%)</title><rect x="607.5" y="131.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="610.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (1,753 samples, 0.10%)</title><rect x="607.5" y="115.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="610.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,753 samples, 0.10%)</title><rect x="607.5" y="99.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="610.5" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,748 samples, 0.10%)</title><rect x="607.5" y="83.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.5" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,748 samples, 0.10%)</title><rect x="607.5" y="67.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.5" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,748 samples, 0.10%)</title><rect x="607.5" y="51.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="610.5" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,421 samples, 0.08%)</title><rect x="608.7" y="323.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="611.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,421 samples, 0.08%)</title><rect x="608.7" y="307.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="611.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,421 samples, 0.08%)</title><rect x="608.7" y="291.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="611.7" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,421 samples, 0.08%)</title><rect x="608.7" y="275.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="611.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,421 samples, 0.08%)</title><rect x="608.7" y="259.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="611.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,421 samples, 0.08%)</title><rect x="608.7" y="243.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="611.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,019 samples, 0.06%)</title><rect x="608.7" y="227.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,019 samples, 0.06%)</title><rect x="608.7" y="211.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,019 samples, 0.06%)</title><rect x="608.7" y="195.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="611.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,019 samples, 0.06%)</title><rect x="608.7" y="179.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (402 samples, 0.02%)</title><rect x="609.3" y="227.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (402 samples, 0.02%)</title><rect x="609.3" y="211.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (402 samples, 0.02%)</title><rect x="609.3" y="195.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="612.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (402 samples, 0.02%)</title><rect x="609.3" y="179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="612.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (402 samples, 0.02%)</title><rect x="609.3" y="163.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="612.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (402 samples, 0.02%)</title><rect x="609.3" y="147.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (402 samples, 0.02%)</title><rect x="609.3" y="131.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="612.3" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (402 samples, 0.02%)</title><rect x="609.3" y="115.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="612.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (402 samples, 0.02%)</title><rect x="609.3" y="99.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="612.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (402 samples, 0.02%)</title><rect x="609.3" y="83.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.3" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (402 samples, 0.02%)</title><rect x="609.3" y="67.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="612.3" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (402 samples, 0.02%)</title><rect x="609.3" y="51.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.3" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (402 samples, 0.02%)</title><rect x="609.3" y="35.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="612.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (66,807 samples, 3.69%)</title><rect x="609.9" y="419.0" width="43.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.9" y="430.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (66,800 samples, 3.69%)</title><rect x="609.9" y="403.0" width="43.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="612.9" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (57,575 samples, 3.18%)</title><rect x="609.9" y="387.0" width="37.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="612.9" y="398.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (57,145 samples, 3.16%)</title><rect x="610.2" y="371.0" width="37.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="613.2" y="382.0">ru/..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (407 samples, 0.02%)</title><rect x="610.2" y="355.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="613.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (56,738 samples, 3.14%)</title><rect x="610.4" y="355.0" width="37.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="613.4" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (56,738 samples, 3.14%)</title><rect x="610.4" y="339.0" width="37.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="613.4" y="350.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (28,135 samples, 1.55%)</title><rect x="610.4" y="323.0" width="18.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="613.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13,935 samples, 0.77%)</title><rect x="610.4" y="307.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13,935 samples, 0.77%)</title><rect x="610.4" y="291.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.4" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,935 samples, 0.77%)</title><rect x="610.4" y="275.0" width="9.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="613.4" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,200 samples, 0.78%)</title><rect x="619.5" y="307.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.5" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,200 samples, 0.78%)</title><rect x="619.5" y="291.0" width="9.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="622.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (28,603 samples, 1.58%)</title><rect x="628.8" y="323.0" width="18.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="631.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14,360 samples, 0.79%)</title><rect x="628.8" y="307.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.8" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14,360 samples, 0.79%)</title><rect x="628.8" y="291.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="631.8" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,360 samples, 0.79%)</title><rect x="628.8" y="275.0" width="9.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="631.8" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,243 samples, 0.79%)</title><rect x="638.1" y="307.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="641.1" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,243 samples, 0.79%)</title><rect x="638.1" y="291.0" width="9.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="641.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (9,225 samples, 0.51%)</title><rect x="647.4" y="387.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8,423 samples, 0.47%)</title><rect x="647.4" y="371.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8,409 samples, 0.46%)</title><rect x="647.4" y="355.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.4" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8,094 samples, 0.45%)</title><rect x="647.6" y="339.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.6" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8,094 samples, 0.45%)</title><rect x="647.6" y="323.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="650.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8,004 samples, 0.44%)</title><rect x="647.7" y="307.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="650.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8,004 samples, 0.44%)</title><rect x="647.7" y="291.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,004 samples, 0.44%)</title><rect x="647.7" y="275.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="650.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,004 samples, 0.44%)</title><rect x="647.7" y="259.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,138 samples, 0.28%)</title><rect x="647.7" y="243.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="650.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,138 samples, 0.28%)</title><rect x="647.7" y="227.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="650.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,138 samples, 0.28%)</title><rect x="647.7" y="211.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="650.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5,138 samples, 0.28%)</title><rect x="647.7" y="195.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="650.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,242 samples, 0.07%)</title><rect x="647.9" y="179.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="650.9" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (612 samples, 0.03%)</title><rect x="647.9" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (612 samples, 0.03%)</title><rect x="647.9" y="147.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="650.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (612 samples, 0.03%)</title><rect x="647.9" y="131.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="650.9" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (630 samples, 0.03%)</title><rect x="648.3" y="163.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="651.3" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (630 samples, 0.03%)</title><rect x="648.3" y="147.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="651.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,283 samples, 0.07%)</title><rect x="648.7" y="179.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="651.7" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (640 samples, 0.04%)</title><rect x="648.7" y="163.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="651.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (640 samples, 0.04%)</title><rect x="648.7" y="147.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="651.7" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (640 samples, 0.04%)</title><rect x="648.7" y="131.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="651.7" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (643 samples, 0.04%)</title><rect x="649.2" y="163.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.2" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (643 samples, 0.04%)</title><rect x="649.2" y="147.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="652.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (650 samples, 0.04%)</title><rect x="649.6" y="179.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="652.6" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (650 samples, 0.04%)</title><rect x="649.6" y="163.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="652.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (650 samples, 0.04%)</title><rect x="649.6" y="147.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="652.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (650 samples, 0.04%)</title><rect x="649.6" y="131.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="652.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,345 samples, 0.07%)</title><rect x="650.0" y="179.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="653.0" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (672 samples, 0.04%)</title><rect x="650.0" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="653.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (672 samples, 0.04%)</title><rect x="650.0" y="147.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="653.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (672 samples, 0.04%)</title><rect x="650.0" y="131.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="653.0" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (673 samples, 0.04%)</title><rect x="650.4" y="163.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.4" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (673 samples, 0.04%)</title><rect x="650.4" y="147.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="653.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (2,866 samples, 0.16%)</title><rect x="651.1" y="243.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="654.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,866 samples, 0.16%)</title><rect x="651.1" y="227.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,866 samples, 0.16%)</title><rect x="651.1" y="211.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="654.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,866 samples, 0.16%)</title><rect x="651.1" y="195.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,866 samples, 0.16%)</title><rect x="651.1" y="179.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,866 samples, 0.16%)</title><rect x="651.1" y="163.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="654.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (2,866 samples, 0.16%)</title><rect x="651.1" y="147.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,866 samples, 0.16%)</title><rect x="651.1" y="131.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (2,866 samples, 0.16%)</title><rect x="651.1" y="115.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="654.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,866 samples, 0.16%)</title><rect x="651.1" y="99.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,853 samples, 0.16%)</title><rect x="651.1" y="83.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="654.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,853 samples, 0.16%)</title><rect x="651.1" y="67.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.1" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,853 samples, 0.16%)</title><rect x="651.1" y="51.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="654.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (787 samples, 0.04%)</title><rect x="652.9" y="371.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (773 samples, 0.04%)</title><rect x="652.9" y="355.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (773 samples, 0.04%)</title><rect x="652.9" y="339.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="655.9" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (426 samples, 0.02%)</title><rect x="652.9" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="655.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (426 samples, 0.02%)</title><rect x="652.9" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (426 samples, 0.02%)</title><rect x="652.9" y="291.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="655.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (426 samples, 0.02%)</title><rect x="652.9" y="275.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="655.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (426 samples, 0.02%)</title><rect x="652.9" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (426 samples, 0.02%)</title><rect x="652.9" y="243.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (426 samples, 0.02%)</title><rect x="652.9" y="227.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="655.9" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (426 samples, 0.02%)</title><rect x="652.9" y="211.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="655.9" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (426 samples, 0.02%)</title><rect x="652.9" y="195.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.9" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (426 samples, 0.02%)</title><rect x="652.9" y="179.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="655.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (426 samples, 0.02%)</title><rect x="652.9" y="163.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (426 samples, 0.02%)</title><rect x="652.9" y="147.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="655.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (426 samples, 0.02%)</title><rect x="652.9" y="131.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (426 samples, 0.02%)</title><rect x="652.9" y="115.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="655.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (426 samples, 0.02%)</title><rect x="652.9" y="99.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="655.9" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (424 samples, 0.02%)</title><rect x="652.9" y="83.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.9" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (424 samples, 0.02%)</title><rect x="652.9" y="67.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="655.9" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (424 samples, 0.02%)</title><rect x="652.9" y="51.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="655.9" y="62.0"></text>
</g>
<g>
<title>[worker-1 tid=14271] (74,383 samples, 4.11%)</title><rect x="653.5" y="579.0" width="48.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="656.5" y="590.0">[wor..</text>
</g>
<g>
<title>java/lang/Thread.run (74,383 samples, 4.11%)</title><rect x="653.5" y="563.0" width="48.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="656.5" y="574.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (74,383 samples, 4.11%)</title><rect x="653.5" y="547.0" width="48.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="656.5" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (74,383 samples, 4.11%)</title><rect x="653.5" y="531.0" width="48.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="656.5" y="542.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (74,300 samples, 4.11%)</title><rect x="653.6" y="515.0" width="48.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="656.6" y="526.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (74,300 samples, 4.11%)</title><rect x="653.6" y="499.0" width="48.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="656.6" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (3,595 samples, 0.20%)</title><rect x="653.6" y="483.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (3,595 samples, 0.20%)</title><rect x="653.6" y="467.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="656.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (3,595 samples, 0.20%)</title><rect x="653.6" y="451.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,595 samples, 0.20%)</title><rect x="653.6" y="435.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="656.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,595 samples, 0.20%)</title><rect x="653.6" y="419.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="656.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,733 samples, 0.15%)</title><rect x="653.6" y="403.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.6" y="414.0"></text>
</g>
<g>
<title>byte[] (979 samples, 0.05%)</title><rect x="653.6" y="387.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="656.6" y="398.0"></text>
</g>
<g>
<title>byte[] (1,754 samples, 0.10%)</title><rect x="654.3" y="387.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="657.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (648 samples, 0.04%)</title><rect x="655.4" y="403.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="658.4" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (592 samples, 0.03%)</title><rect x="655.4" y="387.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.4" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (592 samples, 0.03%)</title><rect x="655.4" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="658.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (592 samples, 0.03%)</title><rect x="655.4" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="658.4" y="366.0"></text>
</g>
<g>
<title>char[] (529 samples, 0.03%)</title><rect x="655.4" y="339.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="658.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (70,593 samples, 3.90%)</title><rect x="655.9" y="483.0" width="46.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.9" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (70,593 samples, 3.90%)</title><rect x="655.9" y="467.0" width="46.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="658.9" y="478.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (70,593 samples, 3.90%)</title><rect x="655.9" y="451.0" width="46.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="658.9" y="462.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (70,251 samples, 3.88%)</title><rect x="656.1" y="435.0" width="45.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="659.1" y="446.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3,448 samples, 0.19%)</title><rect x="656.1" y="419.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.1" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3,448 samples, 0.19%)</title><rect x="656.1" y="403.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3,448 samples, 0.19%)</title><rect x="656.1" y="387.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3,448 samples, 0.19%)</title><rect x="656.1" y="371.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="659.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,448 samples, 0.19%)</title><rect x="656.1" y="355.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="659.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,201 samples, 0.18%)</title><rect x="656.1" y="339.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="659.1" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,704 samples, 0.09%)</title><rect x="656.1" y="323.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="659.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,704 samples, 0.09%)</title><rect x="656.1" y="307.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="659.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,704 samples, 0.09%)</title><rect x="656.1" y="291.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="659.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,704 samples, 0.09%)</title><rect x="656.1" y="275.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,704 samples, 0.09%)</title><rect x="656.1" y="259.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="659.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (1,704 samples, 0.09%)</title><rect x="656.1" y="243.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="659.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,704 samples, 0.09%)</title><rect x="656.1" y="227.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="659.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,704 samples, 0.09%)</title><rect x="656.1" y="211.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="659.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,704 samples, 0.09%)</title><rect x="656.1" y="195.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="659.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,704 samples, 0.09%)</title><rect x="656.1" y="179.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="659.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,704 samples, 0.09%)</title><rect x="656.1" y="163.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (1,704 samples, 0.09%)</title><rect x="656.1" y="147.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="659.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,704 samples, 0.09%)</title><rect x="656.1" y="131.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="659.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (1,704 samples, 0.09%)</title><rect x="656.1" y="115.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="659.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,704 samples, 0.09%)</title><rect x="656.1" y="99.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="659.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,702 samples, 0.09%)</title><rect x="656.1" y="83.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,702 samples, 0.09%)</title><rect x="656.1" y="67.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.1" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,702 samples, 0.09%)</title><rect x="656.1" y="51.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="659.1" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,497 samples, 0.08%)</title><rect x="657.2" y="323.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,497 samples, 0.08%)</title><rect x="657.2" y="307.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="660.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,497 samples, 0.08%)</title><rect x="657.2" y="291.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="660.2" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,497 samples, 0.08%)</title><rect x="657.2" y="275.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,497 samples, 0.08%)</title><rect x="657.2" y="259.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,497 samples, 0.08%)</title><rect x="657.2" y="243.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,067 samples, 0.06%)</title><rect x="657.2" y="227.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,067 samples, 0.06%)</title><rect x="657.2" y="211.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="660.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,067 samples, 0.06%)</title><rect x="657.2" y="195.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="660.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,067 samples, 0.06%)</title><rect x="657.2" y="179.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (430 samples, 0.02%)</title><rect x="657.9" y="227.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (430 samples, 0.02%)</title><rect x="657.9" y="211.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.9" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (430 samples, 0.02%)</title><rect x="657.9" y="195.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.9" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (430 samples, 0.02%)</title><rect x="657.9" y="179.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="660.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (430 samples, 0.02%)</title><rect x="657.9" y="163.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="660.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (430 samples, 0.02%)</title><rect x="657.9" y="147.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (430 samples, 0.02%)</title><rect x="657.9" y="131.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="660.9" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (430 samples, 0.02%)</title><rect x="657.9" y="115.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="660.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (430 samples, 0.02%)</title><rect x="657.9" y="99.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="660.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (430 samples, 0.02%)</title><rect x="657.9" y="83.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.9" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (430 samples, 0.02%)</title><rect x="657.9" y="67.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.9" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (430 samples, 0.02%)</title><rect x="657.9" y="51.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.9" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (430 samples, 0.02%)</title><rect x="657.9" y="35.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="660.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (66,642 samples, 3.68%)</title><rect x="658.5" y="419.0" width="43.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="661.5" y="430.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (66,628 samples, 3.68%)</title><rect x="658.5" y="403.0" width="43.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.5" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (57,229 samples, 3.16%)</title><rect x="658.5" y="387.0" width="37.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="661.5" y="398.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (56,806 samples, 3.14%)</title><rect x="658.8" y="371.0" width="37.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.8" y="382.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (56,425 samples, 3.12%)</title><rect x="659.0" y="355.0" width="36.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="662.0" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (56,425 samples, 3.12%)</title><rect x="659.0" y="339.0" width="36.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="662.0" y="350.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (28,198 samples, 1.56%)</title><rect x="659.0" y="323.0" width="18.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="662.0" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14,003 samples, 0.77%)</title><rect x="659.0" y="307.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="662.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14,003 samples, 0.77%)</title><rect x="659.0" y="291.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="662.0" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,003 samples, 0.77%)</title><rect x="659.0" y="275.0" width="9.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="662.0" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,195 samples, 0.78%)</title><rect x="668.2" y="307.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.2" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,195 samples, 0.78%)</title><rect x="668.2" y="291.0" width="9.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="671.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (28,227 samples, 1.56%)</title><rect x="677.4" y="323.0" width="18.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14,130 samples, 0.78%)</title><rect x="677.4" y="307.0" width="9.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="680.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14,130 samples, 0.78%)</title><rect x="677.4" y="291.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="680.4" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,130 samples, 0.78%)</title><rect x="677.4" y="275.0" width="9.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="680.4" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,097 samples, 0.78%)</title><rect x="686.6" y="307.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.6" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,097 samples, 0.78%)</title><rect x="686.6" y="291.0" width="9.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="689.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (9,399 samples, 0.52%)</title><rect x="695.8" y="387.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="698.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8,609 samples, 0.48%)</title><rect x="695.8" y="371.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8,598 samples, 0.48%)</title><rect x="695.8" y="355.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="698.8" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8,314 samples, 0.46%)</title><rect x="696.0" y="339.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.0" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8,314 samples, 0.46%)</title><rect x="696.0" y="323.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.0" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8,200 samples, 0.45%)</title><rect x="696.1" y="307.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8,200 samples, 0.45%)</title><rect x="696.1" y="291.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="699.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,200 samples, 0.45%)</title><rect x="696.1" y="275.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,200 samples, 0.45%)</title><rect x="696.1" y="259.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="699.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,303 samples, 0.29%)</title><rect x="696.1" y="243.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,303 samples, 0.29%)</title><rect x="696.1" y="227.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,303 samples, 0.29%)</title><rect x="696.1" y="211.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5,303 samples, 0.29%)</title><rect x="696.1" y="195.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="699.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,402 samples, 0.08%)</title><rect x="696.3" y="179.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.3" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (712 samples, 0.04%)</title><rect x="696.3" y="163.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (712 samples, 0.04%)</title><rect x="696.3" y="147.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (712 samples, 0.04%)</title><rect x="696.3" y="131.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="699.3" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (690 samples, 0.04%)</title><rect x="696.8" y="163.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.8" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (690 samples, 0.04%)</title><rect x="696.8" y="147.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="699.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,343 samples, 0.07%)</title><rect x="697.2" y="179.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="700.2" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (685 samples, 0.04%)</title><rect x="697.2" y="163.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (685 samples, 0.04%)</title><rect x="697.2" y="147.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.2" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (685 samples, 0.04%)</title><rect x="697.2" y="131.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="700.2" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (658 samples, 0.04%)</title><rect x="697.7" y="163.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.7" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (658 samples, 0.04%)</title><rect x="697.7" y="147.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="700.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (687 samples, 0.04%)</title><rect x="698.1" y="179.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.1" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (687 samples, 0.04%)</title><rect x="698.1" y="163.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (687 samples, 0.04%)</title><rect x="698.1" y="147.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="701.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (687 samples, 0.04%)</title><rect x="698.1" y="131.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="701.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,299 samples, 0.07%)</title><rect x="698.6" y="179.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="701.6" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (625 samples, 0.03%)</title><rect x="698.6" y="163.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="701.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (625 samples, 0.03%)</title><rect x="698.6" y="147.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (625 samples, 0.03%)</title><rect x="698.6" y="131.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="701.6" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (674 samples, 0.04%)</title><rect x="699.0" y="163.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="702.0" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (674 samples, 0.04%)</title><rect x="699.0" y="147.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="702.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (2,897 samples, 0.16%)</title><rect x="699.5" y="243.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,897 samples, 0.16%)</title><rect x="699.5" y="227.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.5" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,897 samples, 0.16%)</title><rect x="699.5" y="211.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,897 samples, 0.16%)</title><rect x="699.5" y="195.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="702.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,897 samples, 0.16%)</title><rect x="699.5" y="179.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,897 samples, 0.16%)</title><rect x="699.5" y="163.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="702.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (2,897 samples, 0.16%)</title><rect x="699.5" y="147.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,897 samples, 0.16%)</title><rect x="699.5" y="131.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (2,897 samples, 0.16%)</title><rect x="699.5" y="115.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,897 samples, 0.16%)</title><rect x="699.5" y="99.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="702.5" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,882 samples, 0.16%)</title><rect x="699.5" y="83.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="702.5" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,882 samples, 0.16%)</title><rect x="699.5" y="67.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.5" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,882 samples, 0.16%)</title><rect x="699.5" y="51.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="702.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (770 samples, 0.04%)</title><rect x="701.4" y="371.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="704.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (757 samples, 0.04%)</title><rect x="701.4" y="355.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="704.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (757 samples, 0.04%)</title><rect x="701.4" y="339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="704.4" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (416 samples, 0.02%)</title><rect x="701.4" y="323.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="704.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (416 samples, 0.02%)</title><rect x="701.4" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (416 samples, 0.02%)</title><rect x="701.4" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="704.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (416 samples, 0.02%)</title><rect x="701.4" y="275.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (416 samples, 0.02%)</title><rect x="701.4" y="259.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="704.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (416 samples, 0.02%)</title><rect x="701.4" y="243.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="704.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (416 samples, 0.02%)</title><rect x="701.4" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.4" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (416 samples, 0.02%)</title><rect x="701.4" y="211.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="704.4" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (416 samples, 0.02%)</title><rect x="701.4" y="195.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="704.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (416 samples, 0.02%)</title><rect x="701.4" y="179.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="704.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (416 samples, 0.02%)</title><rect x="701.4" y="163.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="704.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (416 samples, 0.02%)</title><rect x="701.4" y="147.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (416 samples, 0.02%)</title><rect x="701.4" y="131.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="704.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (416 samples, 0.02%)</title><rect x="701.4" y="115.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="704.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (416 samples, 0.02%)</title><rect x="701.4" y="99.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="704.4" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (414 samples, 0.02%)</title><rect x="701.4" y="83.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.4" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (414 samples, 0.02%)</title><rect x="701.4" y="67.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="704.4" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (414 samples, 0.02%)</title><rect x="701.4" y="51.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="704.4" y="62.0"></text>
</g>
<g>
<title>[worker-1 tid=14276] (75,303 samples, 4.16%)</title><rect x="702.0" y="579.0" width="49.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="705.0" y="590.0">[work..</text>
</g>
<g>
<title>java/lang/Thread.run (75,303 samples, 4.16%)</title><rect x="702.0" y="563.0" width="49.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.0" y="574.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (75,303 samples, 4.16%)</title><rect x="702.0" y="547.0" width="49.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.0" y="558.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (75,303 samples, 4.16%)</title><rect x="702.0" y="531.0" width="49.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.0" y="542.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (75,190 samples, 4.15%)</title><rect x="702.1" y="515.0" width="49.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.1" y="526.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (75,190 samples, 4.15%)</title><rect x="702.1" y="499.0" width="49.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.1" y="510.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (6,053 samples, 0.33%)</title><rect x="702.1" y="483.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (6,053 samples, 0.33%)</title><rect x="702.1" y="467.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="705.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (6,053 samples, 0.33%)</title><rect x="702.1" y="451.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="705.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (6,053 samples, 0.33%)</title><rect x="702.1" y="435.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (6,053 samples, 0.33%)</title><rect x="702.1" y="419.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (4,975 samples, 0.27%)</title><rect x="702.1" y="403.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.1" y="414.0"></text>
</g>
<g>
<title>byte[] (1,379 samples, 0.08%)</title><rect x="702.1" y="387.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="705.1" y="398.0"></text>
</g>
<g>
<title>byte[] (3,596 samples, 0.20%)</title><rect x="703.0" y="387.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="706.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (864 samples, 0.05%)</title><rect x="705.4" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="708.4" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (790 samples, 0.04%)</title><rect x="705.4" y="387.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.4" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (790 samples, 0.04%)</title><rect x="705.4" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (790 samples, 0.04%)</title><rect x="705.4" y="355.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.4" y="366.0"></text>
</g>
<g>
<title>char[] (702 samples, 0.04%)</title><rect x="705.4" y="339.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="708.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (68,999 samples, 3.81%)</title><rect x="706.0" y="483.0" width="45.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.0" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (68,999 samples, 3.81%)</title><rect x="706.0" y="467.0" width="45.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="709.0" y="478.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (68,999 samples, 3.81%)</title><rect x="706.0" y="451.0" width="45.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.0" y="462.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (68,628 samples, 3.79%)</title><rect x="706.3" y="435.0" width="44.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.3" y="446.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3,850 samples, 0.21%)</title><rect x="706.3" y="419.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3,850 samples, 0.21%)</title><rect x="706.3" y="403.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3,850 samples, 0.21%)</title><rect x="706.3" y="387.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3,850 samples, 0.21%)</title><rect x="706.3" y="371.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,850 samples, 0.21%)</title><rect x="706.3" y="355.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="709.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,554 samples, 0.20%)</title><rect x="706.3" y="339.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.3" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,818 samples, 0.10%)</title><rect x="706.3" y="323.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="709.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,818 samples, 0.10%)</title><rect x="706.3" y="307.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,818 samples, 0.10%)</title><rect x="706.3" y="291.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,818 samples, 0.10%)</title><rect x="706.3" y="275.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="709.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,818 samples, 0.10%)</title><rect x="706.3" y="259.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (1,818 samples, 0.10%)</title><rect x="706.3" y="243.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,818 samples, 0.10%)</title><rect x="706.3" y="227.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.3" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,818 samples, 0.10%)</title><rect x="706.3" y="211.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="709.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,818 samples, 0.10%)</title><rect x="706.3" y="195.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="709.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,818 samples, 0.10%)</title><rect x="706.3" y="179.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="709.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,818 samples, 0.10%)</title><rect x="706.3" y="163.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (1,818 samples, 0.10%)</title><rect x="706.3" y="147.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="709.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,818 samples, 0.10%)</title><rect x="706.3" y="131.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="709.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (1,818 samples, 0.10%)</title><rect x="706.3" y="115.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="709.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,818 samples, 0.10%)</title><rect x="706.3" y="99.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.3" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,809 samples, 0.10%)</title><rect x="706.3" y="83.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.3" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,809 samples, 0.10%)</title><rect x="706.3" y="67.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="709.3" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,809 samples, 0.10%)</title><rect x="706.3" y="51.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="709.3" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,734 samples, 0.10%)</title><rect x="707.5" y="323.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,734 samples, 0.10%)</title><rect x="707.5" y="307.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,734 samples, 0.10%)</title><rect x="707.5" y="291.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,734 samples, 0.10%)</title><rect x="707.5" y="275.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,734 samples, 0.10%)</title><rect x="707.5" y="259.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="710.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,734 samples, 0.10%)</title><rect x="707.5" y="243.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,255 samples, 0.07%)</title><rect x="707.5" y="227.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="710.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,255 samples, 0.07%)</title><rect x="707.5" y="211.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,255 samples, 0.07%)</title><rect x="707.5" y="195.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="710.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,255 samples, 0.07%)</title><rect x="707.5" y="179.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="710.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (479 samples, 0.03%)</title><rect x="708.3" y="227.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (479 samples, 0.03%)</title><rect x="708.3" y="211.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="711.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (479 samples, 0.03%)</title><rect x="708.3" y="195.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (479 samples, 0.03%)</title><rect x="708.3" y="179.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (479 samples, 0.03%)</title><rect x="708.3" y="163.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="711.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (479 samples, 0.03%)</title><rect x="708.3" y="147.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="711.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (479 samples, 0.03%)</title><rect x="708.3" y="131.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="711.3" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (479 samples, 0.03%)</title><rect x="708.3" y="115.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="711.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (479 samples, 0.03%)</title><rect x="708.3" y="99.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="711.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (479 samples, 0.03%)</title><rect x="708.3" y="83.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.3" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (477 samples, 0.03%)</title><rect x="708.3" y="67.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.3" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (477 samples, 0.03%)</title><rect x="708.3" y="51.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="711.3" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (477 samples, 0.03%)</title><rect x="708.3" y="35.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="711.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (64,610 samples, 3.57%)</title><rect x="708.9" y="419.0" width="42.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="711.9" y="430.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (64,596 samples, 3.57%)</title><rect x="708.9" y="403.0" width="42.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="711.9" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (55,846 samples, 3.09%)</title><rect x="708.9" y="387.0" width="36.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="711.9" y="398.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (55,382 samples, 3.06%)</title><rect x="709.2" y="371.0" width="36.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="712.2" y="382.0">ru/..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (428 samples, 0.02%)</title><rect x="709.2" y="355.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="712.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (54,954 samples, 3.04%)</title><rect x="709.5" y="355.0" width="35.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.5" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (54,954 samples, 3.04%)</title><rect x="709.5" y="339.0" width="35.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.5" y="350.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (27,070 samples, 1.50%)</title><rect x="709.5" y="323.0" width="17.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="712.5" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13,644 samples, 0.75%)</title><rect x="709.5" y="307.0" width="8.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="712.5" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13,644 samples, 0.75%)</title><rect x="709.5" y="291.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="712.5" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,644 samples, 0.75%)</title><rect x="709.5" y="275.0" width="8.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="712.5" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (13,426 samples, 0.74%)</title><rect x="718.4" y="307.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="721.4" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,426 samples, 0.74%)</title><rect x="718.4" y="291.0" width="8.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="721.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (27,884 samples, 1.54%)</title><rect x="727.1" y="323.0" width="18.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13,784 samples, 0.76%)</title><rect x="727.1" y="307.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="730.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13,784 samples, 0.76%)</title><rect x="727.1" y="291.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.1" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,784 samples, 0.76%)</title><rect x="727.1" y="275.0" width="9.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="730.1" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,100 samples, 0.78%)</title><rect x="736.1" y="307.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.1" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,100 samples, 0.78%)</title><rect x="736.1" y="291.0" width="9.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="739.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (8,750 samples, 0.48%)</title><rect x="745.3" y="387.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="748.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (7,884 samples, 0.44%)</title><rect x="745.3" y="371.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (7,871 samples, 0.43%)</title><rect x="745.3" y="355.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="748.3" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7,600 samples, 0.42%)</title><rect x="745.5" y="339.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="748.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7,600 samples, 0.42%)</title><rect x="745.5" y="323.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="748.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7,486 samples, 0.41%)</title><rect x="745.6" y="307.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7,486 samples, 0.41%)</title><rect x="745.6" y="291.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="748.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,486 samples, 0.41%)</title><rect x="745.6" y="275.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="748.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,486 samples, 0.41%)</title><rect x="745.6" y="259.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="748.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,856 samples, 0.27%)</title><rect x="745.6" y="243.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,856 samples, 0.27%)</title><rect x="745.6" y="227.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="748.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,856 samples, 0.27%)</title><rect x="745.6" y="211.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="748.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,856 samples, 0.27%)</title><rect x="745.6" y="195.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="748.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,252 samples, 0.07%)</title><rect x="745.8" y="179.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="748.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (661 samples, 0.04%)</title><rect x="745.8" y="163.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (661 samples, 0.04%)</title><rect x="745.8" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (661 samples, 0.04%)</title><rect x="745.8" y="131.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="748.8" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (591 samples, 0.03%)</title><rect x="746.2" y="163.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.2" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (591 samples, 0.03%)</title><rect x="746.2" y="147.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="749.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,256 samples, 0.07%)</title><rect x="746.6" y="179.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.6" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (605 samples, 0.03%)</title><rect x="746.6" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="749.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (605 samples, 0.03%)</title><rect x="746.6" y="147.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="749.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (605 samples, 0.03%)</title><rect x="746.6" y="131.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="749.6" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (651 samples, 0.04%)</title><rect x="747.0" y="163.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.0" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (651 samples, 0.04%)</title><rect x="747.0" y="147.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="750.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (601 samples, 0.03%)</title><rect x="747.4" y="179.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="750.4" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (601 samples, 0.03%)</title><rect x="747.4" y="163.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (601 samples, 0.03%)</title><rect x="747.4" y="147.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="750.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (601 samples, 0.03%)</title><rect x="747.4" y="131.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="750.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,246 samples, 0.07%)</title><rect x="747.8" y="179.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="750.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (635 samples, 0.04%)</title><rect x="747.8" y="163.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="750.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (635 samples, 0.04%)</title><rect x="747.8" y="147.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="750.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (635 samples, 0.04%)</title><rect x="747.8" y="131.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="750.8" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (611 samples, 0.03%)</title><rect x="748.2" y="163.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.2" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (611 samples, 0.03%)</title><rect x="748.2" y="147.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="751.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (2,630 samples, 0.15%)</title><rect x="748.8" y="243.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="751.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,630 samples, 0.15%)</title><rect x="748.8" y="227.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="751.8" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,630 samples, 0.15%)</title><rect x="748.8" y="211.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="751.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,630 samples, 0.15%)</title><rect x="748.8" y="195.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,630 samples, 0.15%)</title><rect x="748.8" y="179.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="751.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,630 samples, 0.15%)</title><rect x="748.8" y="163.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (2,630 samples, 0.15%)</title><rect x="748.8" y="147.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,630 samples, 0.15%)</title><rect x="748.8" y="131.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="751.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (2,630 samples, 0.15%)</title><rect x="748.8" y="115.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,630 samples, 0.15%)</title><rect x="748.8" y="99.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="751.8" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,613 samples, 0.14%)</title><rect x="748.8" y="83.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,613 samples, 0.14%)</title><rect x="748.8" y="67.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="751.8" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,613 samples, 0.14%)</title><rect x="748.8" y="51.0" width="1.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="751.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (850 samples, 0.05%)</title><rect x="750.5" y="371.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (846 samples, 0.05%)</title><rect x="750.5" y="355.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="753.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (846 samples, 0.05%)</title><rect x="750.5" y="339.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.5" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (463 samples, 0.03%)</title><rect x="750.5" y="323.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="753.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (463 samples, 0.03%)</title><rect x="750.5" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="753.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (463 samples, 0.03%)</title><rect x="750.5" y="291.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="753.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (463 samples, 0.03%)</title><rect x="750.5" y="275.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="753.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (463 samples, 0.03%)</title><rect x="750.5" y="259.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="753.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (463 samples, 0.03%)</title><rect x="750.5" y="243.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (463 samples, 0.03%)</title><rect x="750.5" y="227.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.5" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (463 samples, 0.03%)</title><rect x="750.5" y="211.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="753.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (463 samples, 0.03%)</title><rect x="750.5" y="195.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="753.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (463 samples, 0.03%)</title><rect x="750.5" y="179.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (463 samples, 0.03%)</title><rect x="750.5" y="163.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (463 samples, 0.03%)</title><rect x="750.5" y="147.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (463 samples, 0.03%)</title><rect x="750.5" y="131.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="753.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (463 samples, 0.03%)</title><rect x="750.5" y="115.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="753.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (463 samples, 0.03%)</title><rect x="750.5" y="99.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="753.5" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (463 samples, 0.03%)</title><rect x="750.5" y="83.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.5" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (463 samples, 0.03%)</title><rect x="750.5" y="67.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.5" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (463 samples, 0.03%)</title><rect x="750.5" y="51.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="753.5" y="62.0"></text>
</g>
<g>
<title>[worker-2 tid=14267] (74,509 samples, 4.12%)</title><rect x="751.1" y="579.0" width="48.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="754.1" y="590.0">[wor..</text>
</g>
<g>
<title>java/lang/Thread.run (74,509 samples, 4.12%)</title><rect x="751.1" y="563.0" width="48.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.1" y="574.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (74,509 samples, 4.12%)</title><rect x="751.1" y="547.0" width="48.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.1" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (74,509 samples, 4.12%)</title><rect x="751.1" y="531.0" width="48.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.1" y="542.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (74,429 samples, 4.11%)</title><rect x="751.2" y="515.0" width="48.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.2" y="526.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (74,429 samples, 4.11%)</title><rect x="751.2" y="499.0" width="48.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.2" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (3,674 samples, 0.20%)</title><rect x="751.2" y="483.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (3,674 samples, 0.20%)</title><rect x="751.2" y="467.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="754.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (3,674 samples, 0.20%)</title><rect x="751.2" y="451.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="754.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,674 samples, 0.20%)</title><rect x="751.2" y="435.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="754.2" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,674 samples, 0.20%)</title><rect x="751.2" y="419.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="754.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,790 samples, 0.15%)</title><rect x="751.2" y="403.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.2" y="414.0"></text>
</g>
<g>
<title>byte[] (996 samples, 0.06%)</title><rect x="751.2" y="387.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="754.2" y="398.0"></text>
</g>
<g>
<title>byte[] (1,794 samples, 0.10%)</title><rect x="751.9" y="387.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="754.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (700 samples, 0.04%)</title><rect x="753.0" y="403.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.0" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (643 samples, 0.04%)</title><rect x="753.0" y="387.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="756.0" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (643 samples, 0.04%)</title><rect x="753.0" y="371.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.0" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (643 samples, 0.04%)</title><rect x="753.0" y="355.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.0" y="366.0"></text>
</g>
<g>
<title>char[] (581 samples, 0.03%)</title><rect x="753.0" y="339.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="756.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (70,641 samples, 3.90%)</title><rect x="753.6" y="483.0" width="46.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.6" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (70,641 samples, 3.90%)</title><rect x="753.6" y="467.0" width="46.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="756.6" y="478.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (70,641 samples, 3.90%)</title><rect x="753.6" y="451.0" width="46.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.6" y="462.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (70,278 samples, 3.88%)</title><rect x="753.8" y="435.0" width="45.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="756.8" y="446.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3,396 samples, 0.19%)</title><rect x="753.8" y="419.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3,396 samples, 0.19%)</title><rect x="753.8" y="403.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="756.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3,396 samples, 0.19%)</title><rect x="753.8" y="387.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3,396 samples, 0.19%)</title><rect x="753.8" y="371.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,396 samples, 0.19%)</title><rect x="753.8" y="355.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,125 samples, 0.17%)</title><rect x="753.8" y="339.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.8" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,645 samples, 0.09%)</title><rect x="753.8" y="323.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.8" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,645 samples, 0.09%)</title><rect x="753.8" y="307.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,645 samples, 0.09%)</title><rect x="753.8" y="291.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="756.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,645 samples, 0.09%)</title><rect x="753.8" y="275.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="756.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,645 samples, 0.09%)</title><rect x="753.8" y="259.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="756.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (1,645 samples, 0.09%)</title><rect x="753.8" y="243.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,645 samples, 0.09%)</title><rect x="753.8" y="227.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.8" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,645 samples, 0.09%)</title><rect x="753.8" y="211.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,645 samples, 0.09%)</title><rect x="753.8" y="195.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="756.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,645 samples, 0.09%)</title><rect x="753.8" y="179.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,645 samples, 0.09%)</title><rect x="753.8" y="163.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="756.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (1,645 samples, 0.09%)</title><rect x="753.8" y="147.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="756.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,645 samples, 0.09%)</title><rect x="753.8" y="131.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (1,645 samples, 0.09%)</title><rect x="753.8" y="115.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="756.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,645 samples, 0.09%)</title><rect x="753.8" y="99.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="756.8" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,640 samples, 0.09%)</title><rect x="753.8" y="83.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="756.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,640 samples, 0.09%)</title><rect x="753.8" y="67.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="756.8" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,640 samples, 0.09%)</title><rect x="753.8" y="51.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="756.8" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,480 samples, 0.08%)</title><rect x="754.9" y="323.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="757.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,480 samples, 0.08%)</title><rect x="754.9" y="307.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,480 samples, 0.08%)</title><rect x="754.9" y="291.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="757.9" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,480 samples, 0.08%)</title><rect x="754.9" y="275.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="757.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,480 samples, 0.08%)</title><rect x="754.9" y="259.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="757.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,480 samples, 0.08%)</title><rect x="754.9" y="243.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="757.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,060 samples, 0.06%)</title><rect x="754.9" y="227.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="757.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,060 samples, 0.06%)</title><rect x="754.9" y="211.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="757.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,060 samples, 0.06%)</title><rect x="754.9" y="195.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="757.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,060 samples, 0.06%)</title><rect x="754.9" y="179.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="757.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (420 samples, 0.02%)</title><rect x="755.6" y="227.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="758.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (420 samples, 0.02%)</title><rect x="755.6" y="211.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="758.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (420 samples, 0.02%)</title><rect x="755.6" y="195.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="758.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (420 samples, 0.02%)</title><rect x="755.6" y="179.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="758.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (420 samples, 0.02%)</title><rect x="755.6" y="163.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="758.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (420 samples, 0.02%)</title><rect x="755.6" y="147.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="758.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (420 samples, 0.02%)</title><rect x="755.6" y="131.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="758.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (420 samples, 0.02%)</title><rect x="755.6" y="115.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="758.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (420 samples, 0.02%)</title><rect x="755.6" y="99.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="758.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (420 samples, 0.02%)</title><rect x="755.6" y="83.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="758.6" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (420 samples, 0.02%)</title><rect x="755.6" y="67.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="758.6" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (420 samples, 0.02%)</title><rect x="755.6" y="51.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="758.6" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (420 samples, 0.02%)</title><rect x="755.6" y="35.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="758.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (66,736 samples, 3.69%)</title><rect x="756.1" y="419.0" width="43.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.1" y="430.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (66,724 samples, 3.69%)</title><rect x="756.1" y="403.0" width="43.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.1" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (57,374 samples, 3.17%)</title><rect x="756.1" y="387.0" width="37.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="759.1" y="398.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (56,956 samples, 3.15%)</title><rect x="756.4" y="371.0" width="37.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="759.4" y="382.0">ru/..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (388 samples, 0.02%)</title><rect x="756.4" y="355.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="759.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (56,568 samples, 3.13%)</title><rect x="756.6" y="355.0" width="36.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.6" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (56,568 samples, 3.13%)</title><rect x="756.6" y="339.0" width="36.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="759.6" y="350.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (28,047 samples, 1.55%)</title><rect x="756.6" y="323.0" width="18.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14,082 samples, 0.78%)</title><rect x="756.6" y="307.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.6" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14,082 samples, 0.78%)</title><rect x="756.6" y="291.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="759.6" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,082 samples, 0.78%)</title><rect x="756.6" y="275.0" width="9.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="759.6" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (13,965 samples, 0.77%)</title><rect x="765.8" y="307.0" width="9.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="768.8" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,965 samples, 0.77%)</title><rect x="765.8" y="291.0" width="9.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="768.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (28,521 samples, 1.58%)</title><rect x="774.9" y="323.0" width="18.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="777.9" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14,234 samples, 0.79%)</title><rect x="774.9" y="307.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="777.9" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14,234 samples, 0.79%)</title><rect x="774.9" y="291.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="777.9" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,234 samples, 0.79%)</title><rect x="774.9" y="275.0" width="9.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="777.9" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,287 samples, 0.79%)</title><rect x="784.2" y="307.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="787.2" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,287 samples, 0.79%)</title><rect x="784.2" y="291.0" width="9.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="787.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (9,350 samples, 0.52%)</title><rect x="793.5" y="387.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8,524 samples, 0.47%)</title><rect x="793.5" y="371.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="796.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8,514 samples, 0.47%)</title><rect x="793.5" y="355.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.5" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8,244 samples, 0.46%)</title><rect x="793.7" y="339.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8,244 samples, 0.46%)</title><rect x="793.7" y="323.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="796.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8,135 samples, 0.45%)</title><rect x="793.8" y="307.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="796.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8,135 samples, 0.45%)</title><rect x="793.8" y="291.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="796.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,135 samples, 0.45%)</title><rect x="793.8" y="275.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,135 samples, 0.45%)</title><rect x="793.8" y="259.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="796.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,267 samples, 0.29%)</title><rect x="793.8" y="243.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="796.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,267 samples, 0.29%)</title><rect x="793.8" y="227.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="796.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,267 samples, 0.29%)</title><rect x="793.8" y="211.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="796.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5,267 samples, 0.29%)</title><rect x="793.8" y="195.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="796.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,336 samples, 0.07%)</title><rect x="794.0" y="179.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="797.0" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (693 samples, 0.04%)</title><rect x="794.0" y="163.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="797.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (693 samples, 0.04%)</title><rect x="794.0" y="147.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="797.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (693 samples, 0.04%)</title><rect x="794.0" y="131.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="797.0" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (643 samples, 0.04%)</title><rect x="794.4" y="163.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="797.4" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (643 samples, 0.04%)</title><rect x="794.4" y="147.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="797.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,389 samples, 0.08%)</title><rect x="794.9" y="179.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.9" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (705 samples, 0.04%)</title><rect x="794.9" y="163.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="797.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (705 samples, 0.04%)</title><rect x="794.9" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="797.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (705 samples, 0.04%)</title><rect x="794.9" y="131.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="797.9" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (684 samples, 0.04%)</title><rect x="795.3" y="163.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="798.3" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (684 samples, 0.04%)</title><rect x="795.3" y="147.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="798.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (627 samples, 0.03%)</title><rect x="795.8" y="179.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (627 samples, 0.03%)</title><rect x="795.8" y="163.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (627 samples, 0.03%)</title><rect x="795.8" y="147.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="798.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (627 samples, 0.03%)</title><rect x="795.8" y="131.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="798.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,359 samples, 0.08%)</title><rect x="796.2" y="179.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="799.2" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (660 samples, 0.04%)</title><rect x="796.2" y="163.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (660 samples, 0.04%)</title><rect x="796.2" y="147.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="799.2" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (660 samples, 0.04%)</title><rect x="796.2" y="131.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="799.2" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (699 samples, 0.04%)</title><rect x="796.6" y="163.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="799.6" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (699 samples, 0.04%)</title><rect x="796.6" y="147.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="799.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (2,868 samples, 0.16%)</title><rect x="797.2" y="243.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="800.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,868 samples, 0.16%)</title><rect x="797.2" y="227.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="800.2" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,868 samples, 0.16%)</title><rect x="797.2" y="211.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="800.2" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,868 samples, 0.16%)</title><rect x="797.2" y="195.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="800.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,868 samples, 0.16%)</title><rect x="797.2" y="179.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="800.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,868 samples, 0.16%)</title><rect x="797.2" y="163.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="800.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (2,868 samples, 0.16%)</title><rect x="797.2" y="147.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="800.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,868 samples, 0.16%)</title><rect x="797.2" y="131.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="800.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (2,868 samples, 0.16%)</title><rect x="797.2" y="115.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="800.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,868 samples, 0.16%)</title><rect x="797.2" y="99.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="800.2" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,845 samples, 0.16%)</title><rect x="797.2" y="83.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="800.2" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,845 samples, 0.16%)</title><rect x="797.2" y="67.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.2" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,845 samples, 0.16%)</title><rect x="797.2" y="51.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="800.2" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (813 samples, 0.04%)</title><rect x="799.1" y="371.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="802.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (804 samples, 0.04%)</title><rect x="799.1" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="802.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (804 samples, 0.04%)</title><rect x="799.1" y="339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.1" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (433 samples, 0.02%)</title><rect x="799.1" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="802.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (433 samples, 0.02%)</title><rect x="799.1" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="802.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (433 samples, 0.02%)</title><rect x="799.1" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="802.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (433 samples, 0.02%)</title><rect x="799.1" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="802.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (433 samples, 0.02%)</title><rect x="799.1" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (433 samples, 0.02%)</title><rect x="799.1" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (433 samples, 0.02%)</title><rect x="799.1" y="227.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="802.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (433 samples, 0.02%)</title><rect x="799.1" y="211.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="802.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (433 samples, 0.02%)</title><rect x="799.1" y="195.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (433 samples, 0.02%)</title><rect x="799.1" y="179.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="802.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (433 samples, 0.02%)</title><rect x="799.1" y="163.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="802.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (433 samples, 0.02%)</title><rect x="799.1" y="147.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (433 samples, 0.02%)</title><rect x="799.1" y="131.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (433 samples, 0.02%)</title><rect x="799.1" y="115.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="802.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (433 samples, 0.02%)</title><rect x="799.1" y="99.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="802.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (432 samples, 0.02%)</title><rect x="799.1" y="83.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="802.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (432 samples, 0.02%)</title><rect x="799.1" y="67.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.1" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (432 samples, 0.02%)</title><rect x="799.1" y="51.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="802.1" y="62.0"></text>
</g>
<g>
<title>[worker-2 tid=14272] (74,590 samples, 4.12%)</title><rect x="799.7" y="579.0" width="48.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="802.7" y="590.0">[wor..</text>
</g>
<g>
<title>java/lang/Thread.run (74,590 samples, 4.12%)</title><rect x="799.7" y="563.0" width="48.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="802.7" y="574.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (74,590 samples, 4.12%)</title><rect x="799.7" y="547.0" width="48.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.7" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (74,590 samples, 4.12%)</title><rect x="799.7" y="531.0" width="48.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="802.7" y="542.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (74,513 samples, 4.12%)</title><rect x="799.7" y="515.0" width="48.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="802.7" y="526.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (74,513 samples, 4.12%)</title><rect x="799.7" y="499.0" width="48.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.7" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (3,777 samples, 0.21%)</title><rect x="799.7" y="483.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="802.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (3,777 samples, 0.21%)</title><rect x="799.7" y="467.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="802.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (3,777 samples, 0.21%)</title><rect x="799.7" y="451.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="802.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,777 samples, 0.21%)</title><rect x="799.7" y="435.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="802.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,777 samples, 0.21%)</title><rect x="799.7" y="419.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="802.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,912 samples, 0.16%)</title><rect x="799.8" y="403.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="802.8" y="414.0"></text>
</g>
<g>
<title>byte[] (970 samples, 0.05%)</title><rect x="799.8" y="387.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="802.8" y="398.0"></text>
</g>
<g>
<title>byte[] (1,942 samples, 0.11%)</title><rect x="800.4" y="387.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="803.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (684 samples, 0.04%)</title><rect x="801.7" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="804.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (626 samples, 0.03%)</title><rect x="801.7" y="387.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="804.7" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (626 samples, 0.03%)</title><rect x="801.7" y="371.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="804.7" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (626 samples, 0.03%)</title><rect x="801.7" y="355.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.7" y="366.0"></text>
</g>
<g>
<title>char[] (558 samples, 0.03%)</title><rect x="801.7" y="339.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="804.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (70,616 samples, 3.90%)</title><rect x="802.2" y="483.0" width="46.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.2" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (70,616 samples, 3.90%)</title><rect x="802.2" y="467.0" width="46.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="805.2" y="478.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (70,616 samples, 3.90%)</title><rect x="802.2" y="451.0" width="46.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="805.2" y="462.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (70,307 samples, 3.88%)</title><rect x="802.4" y="435.0" width="45.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="805.4" y="446.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3,441 samples, 0.19%)</title><rect x="802.4" y="419.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3,441 samples, 0.19%)</title><rect x="802.4" y="403.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="805.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3,441 samples, 0.19%)</title><rect x="802.4" y="387.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3,441 samples, 0.19%)</title><rect x="802.4" y="371.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,441 samples, 0.19%)</title><rect x="802.4" y="355.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="805.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,170 samples, 0.18%)</title><rect x="802.4" y="339.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="805.4" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,684 samples, 0.09%)</title><rect x="802.4" y="323.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="805.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,684 samples, 0.09%)</title><rect x="802.4" y="307.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,684 samples, 0.09%)</title><rect x="802.4" y="291.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="805.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,684 samples, 0.09%)</title><rect x="802.4" y="275.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="805.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,684 samples, 0.09%)</title><rect x="802.4" y="259.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="805.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (1,684 samples, 0.09%)</title><rect x="802.4" y="243.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="805.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,684 samples, 0.09%)</title><rect x="802.4" y="227.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="805.4" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,684 samples, 0.09%)</title><rect x="802.4" y="211.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.4" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,684 samples, 0.09%)</title><rect x="802.4" y="195.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="805.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,684 samples, 0.09%)</title><rect x="802.4" y="179.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,684 samples, 0.09%)</title><rect x="802.4" y="163.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="805.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (1,684 samples, 0.09%)</title><rect x="802.4" y="147.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="805.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,684 samples, 0.09%)</title><rect x="802.4" y="131.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="805.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (1,684 samples, 0.09%)</title><rect x="802.4" y="115.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="805.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,684 samples, 0.09%)</title><rect x="802.4" y="99.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="805.4" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,683 samples, 0.09%)</title><rect x="802.4" y="83.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.4" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,683 samples, 0.09%)</title><rect x="802.4" y="67.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.4" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,683 samples, 0.09%)</title><rect x="802.4" y="51.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="805.4" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,486 samples, 0.08%)</title><rect x="803.5" y="323.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="806.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,486 samples, 0.08%)</title><rect x="803.5" y="307.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="806.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,486 samples, 0.08%)</title><rect x="803.5" y="291.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="806.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,486 samples, 0.08%)</title><rect x="803.5" y="275.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="806.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,486 samples, 0.08%)</title><rect x="803.5" y="259.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="806.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,486 samples, 0.08%)</title><rect x="803.5" y="243.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="806.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,043 samples, 0.06%)</title><rect x="803.5" y="227.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="806.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,043 samples, 0.06%)</title><rect x="803.5" y="211.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="806.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,043 samples, 0.06%)</title><rect x="803.5" y="195.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,043 samples, 0.06%)</title><rect x="803.5" y="179.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="806.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (443 samples, 0.02%)</title><rect x="804.2" y="227.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (443 samples, 0.02%)</title><rect x="804.2" y="211.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.2" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (443 samples, 0.02%)</title><rect x="804.2" y="195.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="807.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (443 samples, 0.02%)</title><rect x="804.2" y="179.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (443 samples, 0.02%)</title><rect x="804.2" y="163.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="807.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (443 samples, 0.02%)</title><rect x="804.2" y="147.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="807.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (443 samples, 0.02%)</title><rect x="804.2" y="131.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="807.2" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (443 samples, 0.02%)</title><rect x="804.2" y="115.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="807.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (443 samples, 0.02%)</title><rect x="804.2" y="99.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="807.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (443 samples, 0.02%)</title><rect x="804.2" y="83.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="807.2" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (443 samples, 0.02%)</title><rect x="804.2" y="67.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="807.2" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (443 samples, 0.02%)</title><rect x="804.2" y="51.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="807.2" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (443 samples, 0.02%)</title><rect x="804.2" y="35.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="807.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (66,715 samples, 3.69%)</title><rect x="804.7" y="419.0" width="43.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="807.7" y="430.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (66,699 samples, 3.69%)</title><rect x="804.8" y="403.0" width="43.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="807.8" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (57,348 samples, 3.17%)</title><rect x="804.8" y="387.0" width="37.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="807.8" y="398.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (56,937 samples, 3.15%)</title><rect x="805.0" y="371.0" width="37.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.0" y="382.0">ru/..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (422 samples, 0.02%)</title><rect x="805.0" y="355.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="808.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (56,515 samples, 3.12%)</title><rect x="805.3" y="355.0" width="36.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.3" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (56,515 samples, 3.12%)</title><rect x="805.3" y="339.0" width="36.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="808.3" y="350.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (28,006 samples, 1.55%)</title><rect x="805.3" y="323.0" width="18.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="808.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13,986 samples, 0.77%)</title><rect x="805.3" y="307.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="808.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13,986 samples, 0.77%)</title><rect x="805.3" y="291.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="808.3" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,986 samples, 0.77%)</title><rect x="805.3" y="275.0" width="9.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="808.3" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,020 samples, 0.77%)</title><rect x="814.4" y="307.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="817.4" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,020 samples, 0.77%)</title><rect x="814.4" y="291.0" width="9.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="817.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (28,509 samples, 1.58%)</title><rect x="823.6" y="323.0" width="18.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="826.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14,289 samples, 0.79%)</title><rect x="823.6" y="307.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="826.6" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14,289 samples, 0.79%)</title><rect x="823.6" y="291.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="826.6" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,289 samples, 0.79%)</title><rect x="823.6" y="275.0" width="9.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="826.6" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,220 samples, 0.79%)</title><rect x="832.9" y="307.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="835.9" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,220 samples, 0.79%)</title><rect x="832.9" y="291.0" width="9.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="835.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (9,351 samples, 0.52%)</title><rect x="842.2" y="387.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="845.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8,532 samples, 0.47%)</title><rect x="842.2" y="371.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="845.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8,515 samples, 0.47%)</title><rect x="842.2" y="355.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="845.2" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8,224 samples, 0.45%)</title><rect x="842.4" y="339.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="845.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8,224 samples, 0.45%)</title><rect x="842.4" y="323.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="845.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8,118 samples, 0.45%)</title><rect x="842.4" y="307.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="845.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8,118 samples, 0.45%)</title><rect x="842.4" y="291.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="845.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,118 samples, 0.45%)</title><rect x="842.4" y="275.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="845.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,118 samples, 0.45%)</title><rect x="842.4" y="259.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="845.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,185 samples, 0.29%)</title><rect x="842.4" y="243.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="845.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,185 samples, 0.29%)</title><rect x="842.4" y="227.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="845.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,185 samples, 0.29%)</title><rect x="842.4" y="211.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="845.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5,185 samples, 0.29%)</title><rect x="842.4" y="195.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="845.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,332 samples, 0.07%)</title><rect x="842.6" y="179.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="845.6" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (643 samples, 0.04%)</title><rect x="842.6" y="163.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (643 samples, 0.04%)</title><rect x="842.6" y="147.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="845.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (643 samples, 0.04%)</title><rect x="842.6" y="131.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="845.6" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (689 samples, 0.04%)</title><rect x="843.0" y="163.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.0" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (689 samples, 0.04%)</title><rect x="843.0" y="147.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="846.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,287 samples, 0.07%)</title><rect x="843.5" y="179.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="846.5" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (652 samples, 0.04%)</title><rect x="843.5" y="163.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (652 samples, 0.04%)</title><rect x="843.5" y="147.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="846.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (652 samples, 0.04%)</title><rect x="843.5" y="131.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="846.5" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (635 samples, 0.04%)</title><rect x="843.9" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.9" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (635 samples, 0.04%)</title><rect x="843.9" y="147.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="846.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (668 samples, 0.04%)</title><rect x="844.3" y="179.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="847.3" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (668 samples, 0.04%)</title><rect x="844.3" y="163.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="847.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (668 samples, 0.04%)</title><rect x="844.3" y="147.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="847.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (668 samples, 0.04%)</title><rect x="844.3" y="131.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="847.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,342 samples, 0.07%)</title><rect x="844.8" y="179.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="847.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (691 samples, 0.04%)</title><rect x="844.8" y="163.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="847.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (691 samples, 0.04%)</title><rect x="844.8" y="147.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="847.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (691 samples, 0.04%)</title><rect x="844.8" y="131.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="847.8" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (651 samples, 0.04%)</title><rect x="845.2" y="163.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="848.2" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (651 samples, 0.04%)</title><rect x="845.2" y="147.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="848.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (2,933 samples, 0.16%)</title><rect x="845.8" y="243.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="848.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,933 samples, 0.16%)</title><rect x="845.8" y="227.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="848.8" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,933 samples, 0.16%)</title><rect x="845.8" y="211.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="848.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,933 samples, 0.16%)</title><rect x="845.8" y="195.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,933 samples, 0.16%)</title><rect x="845.8" y="179.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,933 samples, 0.16%)</title><rect x="845.8" y="163.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="848.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (2,933 samples, 0.16%)</title><rect x="845.8" y="147.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="848.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,933 samples, 0.16%)</title><rect x="845.8" y="131.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (2,933 samples, 0.16%)</title><rect x="845.8" y="115.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="848.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,933 samples, 0.16%)</title><rect x="845.8" y="99.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="848.8" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,914 samples, 0.16%)</title><rect x="845.8" y="83.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="848.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,914 samples, 0.16%)</title><rect x="845.8" y="67.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.8" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,914 samples, 0.16%)</title><rect x="845.8" y="51.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="848.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (804 samples, 0.04%)</title><rect x="847.7" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="850.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (788 samples, 0.04%)</title><rect x="847.7" y="355.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (788 samples, 0.04%)</title><rect x="847.7" y="339.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.7" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (452 samples, 0.02%)</title><rect x="847.7" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (452 samples, 0.02%)</title><rect x="847.7" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (452 samples, 0.02%)</title><rect x="847.7" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (452 samples, 0.02%)</title><rect x="847.7" y="275.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (452 samples, 0.02%)</title><rect x="847.7" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (452 samples, 0.02%)</title><rect x="847.7" y="243.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (452 samples, 0.02%)</title><rect x="847.7" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="850.7" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (452 samples, 0.02%)</title><rect x="847.7" y="211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="850.7" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (452 samples, 0.02%)</title><rect x="847.7" y="195.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (452 samples, 0.02%)</title><rect x="847.7" y="179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="850.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (452 samples, 0.02%)</title><rect x="847.7" y="163.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (452 samples, 0.02%)</title><rect x="847.7" y="147.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (452 samples, 0.02%)</title><rect x="847.7" y="131.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="850.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (452 samples, 0.02%)</title><rect x="847.7" y="115.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (452 samples, 0.02%)</title><rect x="847.7" y="99.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="850.7" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (450 samples, 0.02%)</title><rect x="847.7" y="83.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.7" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (450 samples, 0.02%)</title><rect x="847.7" y="67.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.7" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (450 samples, 0.02%)</title><rect x="847.7" y="51.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="850.7" y="62.0"></text>
</g>
<g>
<title>[worker-2 tid=14278] (75,284 samples, 4.16%)</title><rect x="848.3" y="579.0" width="49.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="851.3" y="590.0">[work..</text>
</g>
<g>
<title>java/lang/Thread.run (75,284 samples, 4.16%)</title><rect x="848.3" y="563.0" width="49.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="851.3" y="574.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (75,284 samples, 4.16%)</title><rect x="848.3" y="547.0" width="49.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="851.3" y="558.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (75,284 samples, 4.16%)</title><rect x="848.3" y="531.0" width="49.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.3" y="542.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (75,174 samples, 4.15%)</title><rect x="848.4" y="515.0" width="49.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="851.4" y="526.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (75,174 samples, 4.15%)</title><rect x="848.4" y="499.0" width="49.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="851.4" y="510.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (6,054 samples, 0.33%)</title><rect x="848.4" y="483.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (6,054 samples, 0.33%)</title><rect x="848.4" y="467.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (6,054 samples, 0.33%)</title><rect x="848.4" y="451.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="851.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (6,054 samples, 0.33%)</title><rect x="848.4" y="435.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="851.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (6,054 samples, 0.33%)</title><rect x="848.4" y="419.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="851.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (4,954 samples, 0.27%)</title><rect x="848.4" y="403.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.4" y="414.0"></text>
</g>
<g>
<title>byte[] (1,386 samples, 0.08%)</title><rect x="848.4" y="387.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="851.4" y="398.0"></text>
</g>
<g>
<title>byte[] (3,568 samples, 0.20%)</title><rect x="849.3" y="387.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="852.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (892 samples, 0.05%)</title><rect x="851.7" y="403.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="854.7" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (805 samples, 0.04%)</title><rect x="851.7" y="387.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="854.7" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (805 samples, 0.04%)</title><rect x="851.7" y="371.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="854.7" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (805 samples, 0.04%)</title><rect x="851.7" y="355.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="854.7" y="366.0"></text>
</g>
<g>
<title>char[] (725 samples, 0.04%)</title><rect x="851.7" y="339.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="854.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (68,967 samples, 3.81%)</title><rect x="852.3" y="483.0" width="45.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.3" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (68,967 samples, 3.81%)</title><rect x="852.3" y="467.0" width="45.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="855.3" y="478.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (68,967 samples, 3.81%)</title><rect x="852.3" y="451.0" width="45.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="855.3" y="462.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (68,659 samples, 3.79%)</title><rect x="852.5" y="435.0" width="44.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.5" y="446.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3,684 samples, 0.20%)</title><rect x="852.5" y="419.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3,684 samples, 0.20%)</title><rect x="852.5" y="403.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3,684 samples, 0.20%)</title><rect x="852.5" y="387.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3,684 samples, 0.20%)</title><rect x="852.5" y="371.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,684 samples, 0.20%)</title><rect x="852.5" y="355.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,393 samples, 0.19%)</title><rect x="852.5" y="339.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.5" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,744 samples, 0.10%)</title><rect x="852.5" y="323.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="855.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,744 samples, 0.10%)</title><rect x="852.5" y="307.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="855.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,744 samples, 0.10%)</title><rect x="852.5" y="291.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="855.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,744 samples, 0.10%)</title><rect x="852.5" y="275.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="855.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,744 samples, 0.10%)</title><rect x="852.5" y="259.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (1,744 samples, 0.10%)</title><rect x="852.5" y="243.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,744 samples, 0.10%)</title><rect x="852.5" y="227.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.5" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,744 samples, 0.10%)</title><rect x="852.5" y="211.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,744 samples, 0.10%)</title><rect x="852.5" y="195.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,744 samples, 0.10%)</title><rect x="852.5" y="179.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,744 samples, 0.10%)</title><rect x="852.5" y="163.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="855.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (1,744 samples, 0.10%)</title><rect x="852.5" y="147.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,744 samples, 0.10%)</title><rect x="852.5" y="131.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="855.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (1,744 samples, 0.10%)</title><rect x="852.5" y="115.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,744 samples, 0.10%)</title><rect x="852.5" y="99.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="855.5" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,736 samples, 0.10%)</title><rect x="852.5" y="83.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.5" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,736 samples, 0.10%)</title><rect x="852.5" y="67.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.5" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,736 samples, 0.10%)</title><rect x="852.5" y="51.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="855.5" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,649 samples, 0.09%)</title><rect x="853.7" y="323.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="856.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,649 samples, 0.09%)</title><rect x="853.7" y="307.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="856.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,649 samples, 0.09%)</title><rect x="853.7" y="291.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.7" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,649 samples, 0.09%)</title><rect x="853.7" y="275.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="856.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,649 samples, 0.09%)</title><rect x="853.7" y="259.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="856.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,649 samples, 0.09%)</title><rect x="853.7" y="243.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,174 samples, 0.06%)</title><rect x="853.7" y="227.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,174 samples, 0.06%)</title><rect x="853.7" y="211.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="856.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,174 samples, 0.06%)</title><rect x="853.7" y="195.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,174 samples, 0.06%)</title><rect x="853.7" y="179.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="856.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (475 samples, 0.03%)</title><rect x="854.4" y="227.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="857.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (475 samples, 0.03%)</title><rect x="854.4" y="211.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="857.4" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (475 samples, 0.03%)</title><rect x="854.4" y="195.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="857.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (475 samples, 0.03%)</title><rect x="854.4" y="179.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="857.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (475 samples, 0.03%)</title><rect x="854.4" y="163.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="857.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (475 samples, 0.03%)</title><rect x="854.4" y="147.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="857.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (475 samples, 0.03%)</title><rect x="854.4" y="131.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="857.4" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (475 samples, 0.03%)</title><rect x="854.4" y="115.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="857.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (475 samples, 0.03%)</title><rect x="854.4" y="99.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="857.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (475 samples, 0.03%)</title><rect x="854.4" y="83.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="857.4" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (471 samples, 0.03%)</title><rect x="854.4" y="67.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="857.4" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (471 samples, 0.03%)</title><rect x="854.4" y="51.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="857.4" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (471 samples, 0.03%)</title><rect x="854.4" y="35.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="857.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (64,800 samples, 3.58%)</title><rect x="855.1" y="419.0" width="42.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="858.1" y="430.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (64,786 samples, 3.58%)</title><rect x="855.1" y="403.0" width="42.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="858.1" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (55,932 samples, 3.09%)</title><rect x="855.1" y="387.0" width="36.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="858.1" y="398.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (55,448 samples, 3.06%)</title><rect x="855.4" y="371.0" width="36.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="858.4" y="382.0">ru/..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (395 samples, 0.02%)</title><rect x="855.4" y="355.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="858.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (55,053 samples, 3.04%)</title><rect x="855.6" y="355.0" width="35.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="858.6" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (55,053 samples, 3.04%)</title><rect x="855.6" y="339.0" width="35.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="858.6" y="350.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (27,401 samples, 1.51%)</title><rect x="855.6" y="323.0" width="17.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="858.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13,706 samples, 0.76%)</title><rect x="855.6" y="307.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="858.6" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13,706 samples, 0.76%)</title><rect x="855.6" y="291.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="858.6" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,706 samples, 0.76%)</title><rect x="855.6" y="275.0" width="9.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="858.6" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (13,695 samples, 0.76%)</title><rect x="864.6" y="307.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.6" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,695 samples, 0.76%)</title><rect x="864.6" y="291.0" width="8.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="867.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (27,652 samples, 1.53%)</title><rect x="873.5" y="323.0" width="18.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.5" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13,831 samples, 0.76%)</title><rect x="873.5" y="307.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="876.5" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13,831 samples, 0.76%)</title><rect x="873.5" y="291.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="876.5" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,831 samples, 0.76%)</title><rect x="873.5" y="275.0" width="9.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="876.5" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (13,821 samples, 0.76%)</title><rect x="882.5" y="307.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="885.5" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,821 samples, 0.76%)</title><rect x="882.5" y="291.0" width="9.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="885.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (8,854 samples, 0.49%)</title><rect x="891.5" y="387.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="894.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8,036 samples, 0.44%)</title><rect x="891.6" y="371.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="894.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8,020 samples, 0.44%)</title><rect x="891.6" y="355.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="894.6" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7,739 samples, 0.43%)</title><rect x="891.7" y="339.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="894.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7,739 samples, 0.43%)</title><rect x="891.7" y="323.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="894.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7,629 samples, 0.42%)</title><rect x="891.8" y="307.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7,629 samples, 0.42%)</title><rect x="891.8" y="291.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="894.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,629 samples, 0.42%)</title><rect x="891.8" y="275.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="894.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,629 samples, 0.42%)</title><rect x="891.8" y="259.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="894.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,932 samples, 0.27%)</title><rect x="891.8" y="243.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="894.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,932 samples, 0.27%)</title><rect x="891.8" y="227.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="894.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,932 samples, 0.27%)</title><rect x="891.8" y="211.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="894.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,932 samples, 0.27%)</title><rect x="891.8" y="195.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="894.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,208 samples, 0.07%)</title><rect x="892.0" y="179.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="895.0" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (625 samples, 0.03%)</title><rect x="892.0" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="895.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (625 samples, 0.03%)</title><rect x="892.0" y="147.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="895.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (625 samples, 0.03%)</title><rect x="892.0" y="131.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="895.0" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (583 samples, 0.03%)</title><rect x="892.4" y="163.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="895.4" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (583 samples, 0.03%)</title><rect x="892.4" y="147.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="895.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,330 samples, 0.07%)</title><rect x="892.8" y="179.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="895.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (701 samples, 0.04%)</title><rect x="892.8" y="163.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="895.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (701 samples, 0.04%)</title><rect x="892.8" y="147.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="895.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (701 samples, 0.04%)</title><rect x="892.8" y="131.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="895.8" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (629 samples, 0.03%)</title><rect x="893.3" y="163.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.3" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (629 samples, 0.03%)</title><rect x="893.3" y="147.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="896.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (628 samples, 0.03%)</title><rect x="893.7" y="179.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="896.7" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (628 samples, 0.03%)</title><rect x="893.7" y="163.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="896.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (628 samples, 0.03%)</title><rect x="893.7" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="896.7" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (628 samples, 0.03%)</title><rect x="893.7" y="131.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="896.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,237 samples, 0.07%)</title><rect x="894.1" y="179.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="897.1" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (585 samples, 0.03%)</title><rect x="894.1" y="163.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="897.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (585 samples, 0.03%)</title><rect x="894.1" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="897.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (585 samples, 0.03%)</title><rect x="894.1" y="131.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="897.1" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (652 samples, 0.04%)</title><rect x="894.5" y="163.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="897.5" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (652 samples, 0.04%)</title><rect x="894.5" y="147.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="897.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (2,697 samples, 0.15%)</title><rect x="895.0" y="243.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,697 samples, 0.15%)</title><rect x="895.0" y="227.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.0" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,697 samples, 0.15%)</title><rect x="895.0" y="211.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="898.0" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,697 samples, 0.15%)</title><rect x="895.0" y="195.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="898.0" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,697 samples, 0.15%)</title><rect x="895.0" y="179.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="898.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,697 samples, 0.15%)</title><rect x="895.0" y="163.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="898.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (2,697 samples, 0.15%)</title><rect x="895.0" y="147.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="898.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,697 samples, 0.15%)</title><rect x="895.0" y="131.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (2,697 samples, 0.15%)</title><rect x="895.0" y="115.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,697 samples, 0.15%)</title><rect x="895.0" y="99.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="898.0" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,684 samples, 0.15%)</title><rect x="895.0" y="83.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="898.0" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,684 samples, 0.15%)</title><rect x="895.0" y="67.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="898.0" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,684 samples, 0.15%)</title><rect x="895.0" y="51.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="898.0" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (800 samples, 0.04%)</title><rect x="896.8" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (787 samples, 0.04%)</title><rect x="896.8" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (787 samples, 0.04%)</title><rect x="896.8" y="339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="899.8" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (419 samples, 0.02%)</title><rect x="896.8" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="899.8" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (419 samples, 0.02%)</title><rect x="896.8" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="899.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (419 samples, 0.02%)</title><rect x="896.8" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="899.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (419 samples, 0.02%)</title><rect x="896.8" y="275.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="899.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (419 samples, 0.02%)</title><rect x="896.8" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="899.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (419 samples, 0.02%)</title><rect x="896.8" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="899.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (419 samples, 0.02%)</title><rect x="896.8" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.8" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (419 samples, 0.02%)</title><rect x="896.8" y="211.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (419 samples, 0.02%)</title><rect x="896.8" y="195.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (419 samples, 0.02%)</title><rect x="896.8" y="179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="899.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (419 samples, 0.02%)</title><rect x="896.8" y="163.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="899.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (419 samples, 0.02%)</title><rect x="896.8" y="147.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (419 samples, 0.02%)</title><rect x="896.8" y="131.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="899.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (419 samples, 0.02%)</title><rect x="896.8" y="115.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="899.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (419 samples, 0.02%)</title><rect x="896.8" y="99.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="899.8" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (418 samples, 0.02%)</title><rect x="896.8" y="83.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="899.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (418 samples, 0.02%)</title><rect x="896.8" y="67.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="899.8" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (418 samples, 0.02%)</title><rect x="896.8" y="51.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="899.8" y="62.0"></text>
</g>
<g>
<title>[worker-3 tid=14266] (74,616 samples, 4.12%)</title><rect x="897.4" y="579.0" width="48.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="900.4" y="590.0">[wor..</text>
</g>
<g>
<title>java/lang/Thread.run (74,616 samples, 4.12%)</title><rect x="897.4" y="563.0" width="48.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="900.4" y="574.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (74,616 samples, 4.12%)</title><rect x="897.4" y="547.0" width="48.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.4" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (74,616 samples, 4.12%)</title><rect x="897.4" y="531.0" width="48.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="900.4" y="542.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (74,535 samples, 4.12%)</title><rect x="897.5" y="515.0" width="48.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="900.5" y="526.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (74,535 samples, 4.12%)</title><rect x="897.5" y="499.0" width="48.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="900.5" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (3,577 samples, 0.20%)</title><rect x="897.5" y="483.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="900.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (3,577 samples, 0.20%)</title><rect x="897.5" y="467.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="900.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (3,577 samples, 0.20%)</title><rect x="897.5" y="451.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="900.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,577 samples, 0.20%)</title><rect x="897.5" y="435.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="900.5" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,577 samples, 0.20%)</title><rect x="897.5" y="419.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.5" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,743 samples, 0.15%)</title><rect x="897.5" y="403.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.5" y="414.0"></text>
</g>
<g>
<title>byte[] (973 samples, 0.05%)</title><rect x="897.5" y="387.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="900.5" y="398.0"></text>
</g>
<g>
<title>byte[] (1,770 samples, 0.10%)</title><rect x="898.1" y="387.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="901.1" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (642 samples, 0.04%)</title><rect x="899.3" y="403.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="902.3" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (592 samples, 0.03%)</title><rect x="899.3" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.3" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (592 samples, 0.03%)</title><rect x="899.3" y="371.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="902.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (592 samples, 0.03%)</title><rect x="899.3" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="902.3" y="366.0"></text>
</g>
<g>
<title>char[] (544 samples, 0.03%)</title><rect x="899.3" y="339.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="902.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (70,835 samples, 3.91%)</title><rect x="899.8" y="483.0" width="46.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="902.8" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (70,835 samples, 3.91%)</title><rect x="899.8" y="467.0" width="46.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="902.8" y="478.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (70,835 samples, 3.91%)</title><rect x="899.8" y="451.0" width="46.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="902.8" y="462.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (70,510 samples, 3.90%)</title><rect x="900.0" y="435.0" width="46.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="903.0" y="446.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3,420 samples, 0.19%)</title><rect x="900.0" y="419.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="903.0" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3,420 samples, 0.19%)</title><rect x="900.0" y="403.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3,420 samples, 0.19%)</title><rect x="900.0" y="387.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="903.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3,420 samples, 0.19%)</title><rect x="900.0" y="371.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="903.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,420 samples, 0.19%)</title><rect x="900.0" y="355.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="903.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,151 samples, 0.17%)</title><rect x="900.0" y="339.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="903.0" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,696 samples, 0.09%)</title><rect x="900.0" y="323.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="903.0" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,696 samples, 0.09%)</title><rect x="900.0" y="307.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="903.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,696 samples, 0.09%)</title><rect x="900.0" y="291.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="903.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,696 samples, 0.09%)</title><rect x="900.0" y="275.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="903.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,696 samples, 0.09%)</title><rect x="900.0" y="259.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="903.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (1,696 samples, 0.09%)</title><rect x="900.0" y="243.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,696 samples, 0.09%)</title><rect x="900.0" y="227.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="903.0" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,696 samples, 0.09%)</title><rect x="900.0" y="211.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="903.0" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,696 samples, 0.09%)</title><rect x="900.0" y="195.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.0" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,696 samples, 0.09%)</title><rect x="900.0" y="179.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,696 samples, 0.09%)</title><rect x="900.0" y="163.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="903.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (1,696 samples, 0.09%)</title><rect x="900.0" y="147.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="903.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,696 samples, 0.09%)</title><rect x="900.0" y="131.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="903.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (1,696 samples, 0.09%)</title><rect x="900.0" y="115.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,696 samples, 0.09%)</title><rect x="900.0" y="99.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="903.0" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,694 samples, 0.09%)</title><rect x="900.0" y="83.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="903.0" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,694 samples, 0.09%)</title><rect x="900.0" y="67.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="903.0" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,694 samples, 0.09%)</title><rect x="900.0" y="51.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="903.0" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,455 samples, 0.08%)</title><rect x="901.1" y="323.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="904.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,455 samples, 0.08%)</title><rect x="901.1" y="307.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="904.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,455 samples, 0.08%)</title><rect x="901.1" y="291.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,455 samples, 0.08%)</title><rect x="901.1" y="275.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="904.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,455 samples, 0.08%)</title><rect x="901.1" y="259.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="904.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,455 samples, 0.08%)</title><rect x="901.1" y="243.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="904.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,047 samples, 0.06%)</title><rect x="901.1" y="227.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="904.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,047 samples, 0.06%)</title><rect x="901.1" y="211.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="904.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,047 samples, 0.06%)</title><rect x="901.1" y="195.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="904.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,047 samples, 0.06%)</title><rect x="901.1" y="179.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="904.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (408 samples, 0.02%)</title><rect x="901.8" y="227.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (408 samples, 0.02%)</title><rect x="901.8" y="211.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="904.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (408 samples, 0.02%)</title><rect x="901.8" y="195.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (408 samples, 0.02%)</title><rect x="901.8" y="179.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="904.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (408 samples, 0.02%)</title><rect x="901.8" y="163.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="904.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (408 samples, 0.02%)</title><rect x="901.8" y="147.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (408 samples, 0.02%)</title><rect x="901.8" y="131.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.8" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (408 samples, 0.02%)</title><rect x="901.8" y="115.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="904.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (408 samples, 0.02%)</title><rect x="901.8" y="99.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (408 samples, 0.02%)</title><rect x="901.8" y="83.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="904.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (407 samples, 0.02%)</title><rect x="901.8" y="67.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="904.8" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (407 samples, 0.02%)</title><rect x="901.8" y="51.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="904.8" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (407 samples, 0.02%)</title><rect x="901.8" y="35.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="904.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (66,943 samples, 3.70%)</title><rect x="902.3" y="419.0" width="43.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="905.3" y="430.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (66,932 samples, 3.70%)</title><rect x="902.3" y="403.0" width="43.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.3" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (57,583 samples, 3.18%)</title><rect x="902.3" y="387.0" width="37.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="905.3" y="398.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (57,166 samples, 3.16%)</title><rect x="902.6" y="371.0" width="37.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.6" y="382.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (56,802 samples, 3.14%)</title><rect x="902.9" y="355.0" width="37.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.9" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (56,802 samples, 3.14%)</title><rect x="902.9" y="339.0" width="37.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.9" y="350.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (28,291 samples, 1.56%)</title><rect x="902.9" y="323.0" width="18.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.9" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13,995 samples, 0.77%)</title><rect x="902.9" y="307.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.9" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13,995 samples, 0.77%)</title><rect x="902.9" y="291.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="905.9" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,995 samples, 0.77%)</title><rect x="902.9" y="275.0" width="9.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="905.9" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,296 samples, 0.79%)</title><rect x="912.0" y="307.0" width="9.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="915.0" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,296 samples, 0.79%)</title><rect x="912.0" y="291.0" width="9.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="915.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (28,511 samples, 1.58%)</title><rect x="921.3" y="323.0" width="18.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="924.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14,271 samples, 0.79%)</title><rect x="921.3" y="307.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="924.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14,271 samples, 0.79%)</title><rect x="921.3" y="291.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="924.3" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,271 samples, 0.79%)</title><rect x="921.3" y="275.0" width="9.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="924.3" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,240 samples, 0.79%)</title><rect x="930.6" y="307.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="933.6" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,240 samples, 0.79%)</title><rect x="930.6" y="291.0" width="9.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="933.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (9,349 samples, 0.52%)</title><rect x="939.9" y="387.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="942.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8,505 samples, 0.47%)</title><rect x="939.9" y="371.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="942.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8,498 samples, 0.47%)</title><rect x="939.9" y="355.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="942.9" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8,217 samples, 0.45%)</title><rect x="940.1" y="339.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="943.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8,217 samples, 0.45%)</title><rect x="940.1" y="323.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="943.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8,111 samples, 0.45%)</title><rect x="940.2" y="307.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="943.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8,111 samples, 0.45%)</title><rect x="940.2" y="291.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="943.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,111 samples, 0.45%)</title><rect x="940.2" y="275.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="943.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,111 samples, 0.45%)</title><rect x="940.2" y="259.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="943.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,232 samples, 0.29%)</title><rect x="940.2" y="243.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="943.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,232 samples, 0.29%)</title><rect x="940.2" y="227.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="943.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,232 samples, 0.29%)</title><rect x="940.2" y="211.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="943.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5,232 samples, 0.29%)</title><rect x="940.2" y="195.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="943.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,360 samples, 0.08%)</title><rect x="940.4" y="179.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="943.4" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (672 samples, 0.04%)</title><rect x="940.4" y="163.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="943.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (672 samples, 0.04%)</title><rect x="940.4" y="147.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="943.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (672 samples, 0.04%)</title><rect x="940.4" y="131.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="943.4" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (688 samples, 0.04%)</title><rect x="940.8" y="163.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="943.8" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (688 samples, 0.04%)</title><rect x="940.8" y="147.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="943.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,338 samples, 0.07%)</title><rect x="941.2" y="179.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="944.2" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (674 samples, 0.04%)</title><rect x="941.2" y="163.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="944.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (674 samples, 0.04%)</title><rect x="941.2" y="147.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="944.2" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (674 samples, 0.04%)</title><rect x="941.2" y="131.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="944.2" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (664 samples, 0.04%)</title><rect x="941.7" y="163.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="944.7" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (664 samples, 0.04%)</title><rect x="941.7" y="147.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="944.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (624 samples, 0.03%)</title><rect x="942.1" y="179.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="945.1" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (624 samples, 0.03%)</title><rect x="942.1" y="163.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="945.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (624 samples, 0.03%)</title><rect x="942.1" y="147.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="945.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (624 samples, 0.03%)</title><rect x="942.1" y="131.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="945.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,389 samples, 0.08%)</title><rect x="942.5" y="179.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="945.5" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (664 samples, 0.04%)</title><rect x="942.5" y="163.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="945.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (664 samples, 0.04%)</title><rect x="942.5" y="147.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="945.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (664 samples, 0.04%)</title><rect x="942.5" y="131.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="945.5" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (725 samples, 0.04%)</title><rect x="943.0" y="163.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="946.0" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (725 samples, 0.04%)</title><rect x="943.0" y="147.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="946.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (2,879 samples, 0.16%)</title><rect x="943.6" y="243.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="946.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,879 samples, 0.16%)</title><rect x="943.6" y="227.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="946.6" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,879 samples, 0.16%)</title><rect x="943.6" y="211.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="946.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,879 samples, 0.16%)</title><rect x="943.6" y="195.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="946.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,879 samples, 0.16%)</title><rect x="943.6" y="179.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="946.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,879 samples, 0.16%)</title><rect x="943.6" y="163.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="946.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (2,879 samples, 0.16%)</title><rect x="943.6" y="147.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="946.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,879 samples, 0.16%)</title><rect x="943.6" y="131.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="946.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (2,879 samples, 0.16%)</title><rect x="943.6" y="115.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="946.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,879 samples, 0.16%)</title><rect x="943.6" y="99.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="946.6" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,870 samples, 0.16%)</title><rect x="943.6" y="83.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="946.6" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,870 samples, 0.16%)</title><rect x="943.6" y="67.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="946.6" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,870 samples, 0.16%)</title><rect x="943.6" y="51.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="946.6" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (826 samples, 0.05%)</title><rect x="945.4" y="371.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="948.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (817 samples, 0.05%)</title><rect x="945.5" y="355.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="948.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (817 samples, 0.05%)</title><rect x="945.5" y="339.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="948.5" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (447 samples, 0.02%)</title><rect x="945.5" y="323.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="948.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (447 samples, 0.02%)</title><rect x="945.5" y="307.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="948.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (447 samples, 0.02%)</title><rect x="945.5" y="291.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="948.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (447 samples, 0.02%)</title><rect x="945.5" y="275.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="948.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (447 samples, 0.02%)</title><rect x="945.5" y="259.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="948.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (447 samples, 0.02%)</title><rect x="945.5" y="243.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="948.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (447 samples, 0.02%)</title><rect x="945.5" y="227.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="948.5" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (447 samples, 0.02%)</title><rect x="945.5" y="211.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="948.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (447 samples, 0.02%)</title><rect x="945.5" y="195.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="948.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (447 samples, 0.02%)</title><rect x="945.5" y="179.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="948.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (447 samples, 0.02%)</title><rect x="945.5" y="163.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="948.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (447 samples, 0.02%)</title><rect x="945.5" y="147.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="948.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (447 samples, 0.02%)</title><rect x="945.5" y="131.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="948.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (447 samples, 0.02%)</title><rect x="945.5" y="115.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="948.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (447 samples, 0.02%)</title><rect x="945.5" y="99.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="948.5" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (444 samples, 0.02%)</title><rect x="945.5" y="83.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="948.5" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (444 samples, 0.02%)</title><rect x="945.5" y="67.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="948.5" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (444 samples, 0.02%)</title><rect x="945.5" y="51.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="948.5" y="62.0"></text>
</g>
<g>
<title>[worker-3 tid=14273] (74,458 samples, 4.11%)</title><rect x="946.1" y="579.0" width="48.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="949.1" y="590.0">[wor..</text>
</g>
<g>
<title>java/lang/Thread.run (74,458 samples, 4.11%)</title><rect x="946.1" y="563.0" width="48.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="949.1" y="574.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (74,458 samples, 4.11%)</title><rect x="946.1" y="547.0" width="48.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="949.1" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (74,458 samples, 4.11%)</title><rect x="946.1" y="531.0" width="48.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="949.1" y="542.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (74,384 samples, 4.11%)</title><rect x="946.1" y="515.0" width="48.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="949.1" y="526.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (74,384 samples, 4.11%)</title><rect x="946.1" y="499.0" width="48.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="949.1" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (3,762 samples, 0.21%)</title><rect x="946.1" y="483.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="949.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (3,762 samples, 0.21%)</title><rect x="946.1" y="467.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="949.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (3,762 samples, 0.21%)</title><rect x="946.1" y="451.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="949.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,762 samples, 0.21%)</title><rect x="946.1" y="435.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="949.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,762 samples, 0.21%)</title><rect x="946.1" y="419.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="949.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,866 samples, 0.16%)</title><rect x="946.2" y="403.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="949.2" y="414.0"></text>
</g>
<g>
<title>byte[] (1,025 samples, 0.06%)</title><rect x="946.2" y="387.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="949.2" y="398.0"></text>
</g>
<g>
<title>byte[] (1,841 samples, 0.10%)</title><rect x="946.8" y="387.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="949.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (708 samples, 0.04%)</title><rect x="948.0" y="403.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="951.0" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (657 samples, 0.04%)</title><rect x="948.0" y="387.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="951.0" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (657 samples, 0.04%)</title><rect x="948.0" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="951.0" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (657 samples, 0.04%)</title><rect x="948.0" y="355.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="951.0" y="366.0"></text>
</g>
<g>
<title>char[] (594 samples, 0.03%)</title><rect x="948.0" y="339.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="951.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (70,504 samples, 3.90%)</title><rect x="948.6" y="483.0" width="45.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="951.6" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (70,504 samples, 3.90%)</title><rect x="948.6" y="467.0" width="45.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="951.6" y="478.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (70,504 samples, 3.90%)</title><rect x="948.6" y="451.0" width="45.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="951.6" y="462.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (70,149 samples, 3.88%)</title><rect x="948.8" y="435.0" width="45.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="951.8" y="446.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3,419 samples, 0.19%)</title><rect x="948.8" y="419.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="951.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3,419 samples, 0.19%)</title><rect x="948.8" y="403.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3,419 samples, 0.19%)</title><rect x="948.8" y="387.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="951.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3,419 samples, 0.19%)</title><rect x="948.8" y="371.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="951.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,419 samples, 0.19%)</title><rect x="948.8" y="355.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="951.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,150 samples, 0.17%)</title><rect x="948.8" y="339.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="951.8" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,629 samples, 0.09%)</title><rect x="948.8" y="323.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="951.8" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,629 samples, 0.09%)</title><rect x="948.8" y="307.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="951.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,629 samples, 0.09%)</title><rect x="948.8" y="291.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="951.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,629 samples, 0.09%)</title><rect x="948.8" y="275.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="951.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,629 samples, 0.09%)</title><rect x="948.8" y="259.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="951.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (1,629 samples, 0.09%)</title><rect x="948.8" y="243.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="951.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,629 samples, 0.09%)</title><rect x="948.8" y="227.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="951.8" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,629 samples, 0.09%)</title><rect x="948.8" y="211.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="951.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,629 samples, 0.09%)</title><rect x="948.8" y="195.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="951.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,629 samples, 0.09%)</title><rect x="948.8" y="179.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="951.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,629 samples, 0.09%)</title><rect x="948.8" y="163.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="951.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (1,629 samples, 0.09%)</title><rect x="948.8" y="147.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="951.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,629 samples, 0.09%)</title><rect x="948.8" y="131.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="951.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (1,629 samples, 0.09%)</title><rect x="948.8" y="115.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="951.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,629 samples, 0.09%)</title><rect x="948.8" y="99.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="951.8" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,625 samples, 0.09%)</title><rect x="948.8" y="83.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="951.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,625 samples, 0.09%)</title><rect x="948.8" y="67.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="951.8" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,625 samples, 0.09%)</title><rect x="948.8" y="51.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="951.8" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,521 samples, 0.08%)</title><rect x="949.9" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="952.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,521 samples, 0.08%)</title><rect x="949.9" y="307.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="952.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,521 samples, 0.08%)</title><rect x="949.9" y="291.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="952.9" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,521 samples, 0.08%)</title><rect x="949.9" y="275.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="952.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,521 samples, 0.08%)</title><rect x="949.9" y="259.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="952.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,521 samples, 0.08%)</title><rect x="949.9" y="243.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="952.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,082 samples, 0.06%)</title><rect x="949.9" y="227.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="952.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,082 samples, 0.06%)</title><rect x="949.9" y="211.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="952.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,082 samples, 0.06%)</title><rect x="949.9" y="195.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="952.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,082 samples, 0.06%)</title><rect x="949.9" y="179.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="952.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (439 samples, 0.02%)</title><rect x="950.6" y="227.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="953.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (439 samples, 0.02%)</title><rect x="950.6" y="211.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="953.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (439 samples, 0.02%)</title><rect x="950.6" y="195.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="953.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (439 samples, 0.02%)</title><rect x="950.6" y="179.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="953.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (439 samples, 0.02%)</title><rect x="950.6" y="163.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="953.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (439 samples, 0.02%)</title><rect x="950.6" y="147.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="953.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (439 samples, 0.02%)</title><rect x="950.6" y="131.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="953.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (439 samples, 0.02%)</title><rect x="950.6" y="115.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="953.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (439 samples, 0.02%)</title><rect x="950.6" y="99.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="953.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (439 samples, 0.02%)</title><rect x="950.6" y="83.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="953.6" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (439 samples, 0.02%)</title><rect x="950.6" y="67.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="953.6" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (439 samples, 0.02%)</title><rect x="950.6" y="51.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="953.6" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (439 samples, 0.02%)</title><rect x="950.6" y="35.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="953.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (66,573 samples, 3.68%)</title><rect x="951.1" y="419.0" width="43.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="954.1" y="430.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (66,562 samples, 3.68%)</title><rect x="951.1" y="403.0" width="43.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.1" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (57,259 samples, 3.16%)</title><rect x="951.1" y="387.0" width="37.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.1" y="398.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (56,858 samples, 3.14%)</title><rect x="951.4" y="371.0" width="37.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="954.4" y="382.0">ru/..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (389 samples, 0.02%)</title><rect x="951.4" y="355.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="954.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (56,469 samples, 3.12%)</title><rect x="951.6" y="355.0" width="36.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="954.6" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (56,469 samples, 3.12%)</title><rect x="951.6" y="339.0" width="36.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="954.6" y="350.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (28,239 samples, 1.56%)</title><rect x="951.6" y="323.0" width="18.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="954.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14,082 samples, 0.78%)</title><rect x="951.6" y="307.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="954.6" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14,082 samples, 0.78%)</title><rect x="951.6" y="291.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="954.6" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,082 samples, 0.78%)</title><rect x="951.6" y="275.0" width="9.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="954.6" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,157 samples, 0.78%)</title><rect x="960.8" y="307.0" width="9.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="963.8" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,157 samples, 0.78%)</title><rect x="960.8" y="291.0" width="9.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="963.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (28,230 samples, 1.56%)</title><rect x="970.1" y="323.0" width="18.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14,216 samples, 0.79%)</title><rect x="970.1" y="307.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="973.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14,216 samples, 0.79%)</title><rect x="970.1" y="291.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.1" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,216 samples, 0.79%)</title><rect x="970.1" y="275.0" width="9.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="973.1" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,014 samples, 0.77%)</title><rect x="979.3" y="307.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="982.3" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,014 samples, 0.77%)</title><rect x="979.3" y="291.0" width="9.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="982.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (9,303 samples, 0.51%)</title><rect x="988.5" y="387.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="991.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8,534 samples, 0.47%)</title><rect x="988.5" y="371.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="991.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8,518 samples, 0.47%)</title><rect x="988.5" y="355.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="991.5" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8,254 samples, 0.46%)</title><rect x="988.7" y="339.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="991.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8,254 samples, 0.46%)</title><rect x="988.7" y="323.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="991.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8,157 samples, 0.45%)</title><rect x="988.7" y="307.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="991.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8,157 samples, 0.45%)</title><rect x="988.7" y="291.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="991.7" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,157 samples, 0.45%)</title><rect x="988.7" y="275.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="991.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,157 samples, 0.45%)</title><rect x="988.7" y="259.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="991.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,134 samples, 0.28%)</title><rect x="988.7" y="243.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="991.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,134 samples, 0.28%)</title><rect x="988.7" y="227.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="991.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,134 samples, 0.28%)</title><rect x="988.7" y="211.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="991.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5,134 samples, 0.28%)</title><rect x="988.7" y="195.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="991.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,311 samples, 0.07%)</title><rect x="988.9" y="179.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="991.9" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (639 samples, 0.04%)</title><rect x="988.9" y="163.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="991.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (639 samples, 0.04%)</title><rect x="988.9" y="147.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="991.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (639 samples, 0.04%)</title><rect x="988.9" y="131.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="991.9" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (672 samples, 0.04%)</title><rect x="989.4" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="992.4" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (672 samples, 0.04%)</title><rect x="989.4" y="147.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="992.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,252 samples, 0.07%)</title><rect x="989.8" y="179.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="992.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (644 samples, 0.04%)</title><rect x="989.8" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="992.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (644 samples, 0.04%)</title><rect x="989.8" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="992.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (644 samples, 0.04%)</title><rect x="989.8" y="131.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="992.8" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (608 samples, 0.03%)</title><rect x="990.2" y="163.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="993.2" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (608 samples, 0.03%)</title><rect x="990.2" y="147.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="993.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (711 samples, 0.04%)</title><rect x="990.6" y="179.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="993.6" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (711 samples, 0.04%)</title><rect x="990.6" y="163.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="993.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (711 samples, 0.04%)</title><rect x="990.6" y="147.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="993.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (711 samples, 0.04%)</title><rect x="990.6" y="131.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="993.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,302 samples, 0.07%)</title><rect x="991.1" y="179.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="994.1" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (656 samples, 0.04%)</title><rect x="991.1" y="163.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="994.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (656 samples, 0.04%)</title><rect x="991.1" y="147.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="994.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (656 samples, 0.04%)</title><rect x="991.1" y="131.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="994.1" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (646 samples, 0.04%)</title><rect x="991.5" y="163.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="994.5" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (646 samples, 0.04%)</title><rect x="991.5" y="147.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="994.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (3,023 samples, 0.17%)</title><rect x="992.1" y="243.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="995.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (3,023 samples, 0.17%)</title><rect x="992.1" y="227.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="995.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (3,023 samples, 0.17%)</title><rect x="992.1" y="211.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="995.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3,023 samples, 0.17%)</title><rect x="992.1" y="195.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="995.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (3,023 samples, 0.17%)</title><rect x="992.1" y="179.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="995.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3,023 samples, 0.17%)</title><rect x="992.1" y="163.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="995.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (3,023 samples, 0.17%)</title><rect x="992.1" y="147.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="995.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3,023 samples, 0.17%)</title><rect x="992.1" y="131.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="995.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (3,023 samples, 0.17%)</title><rect x="992.1" y="115.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="995.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (3,023 samples, 0.17%)</title><rect x="992.1" y="99.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="995.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (3,005 samples, 0.17%)</title><rect x="992.1" y="83.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="995.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (3,005 samples, 0.17%)</title><rect x="992.1" y="67.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="995.1" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (3,005 samples, 0.17%)</title><rect x="992.1" y="51.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="995.1" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (751 samples, 0.04%)</title><rect x="994.0" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="997.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (740 samples, 0.04%)</title><rect x="994.1" y="355.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="997.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (740 samples, 0.04%)</title><rect x="994.1" y="339.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="997.1" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (416 samples, 0.02%)</title><rect x="994.1" y="323.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="997.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (416 samples, 0.02%)</title><rect x="994.1" y="307.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="997.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (416 samples, 0.02%)</title><rect x="994.1" y="291.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="997.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (416 samples, 0.02%)</title><rect x="994.1" y="275.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="997.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (416 samples, 0.02%)</title><rect x="994.1" y="259.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="997.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (416 samples, 0.02%)</title><rect x="994.1" y="243.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="997.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (416 samples, 0.02%)</title><rect x="994.1" y="227.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="997.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (416 samples, 0.02%)</title><rect x="994.1" y="211.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="997.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (416 samples, 0.02%)</title><rect x="994.1" y="195.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="997.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (416 samples, 0.02%)</title><rect x="994.1" y="179.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="997.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (416 samples, 0.02%)</title><rect x="994.1" y="163.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="997.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (416 samples, 0.02%)</title><rect x="994.1" y="147.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="997.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (416 samples, 0.02%)</title><rect x="994.1" y="131.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="997.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (416 samples, 0.02%)</title><rect x="994.1" y="115.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="997.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (416 samples, 0.02%)</title><rect x="994.1" y="99.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="997.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (414 samples, 0.02%)</title><rect x="994.1" y="83.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="997.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (414 samples, 0.02%)</title><rect x="994.1" y="67.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="997.1" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (414 samples, 0.02%)</title><rect x="994.1" y="51.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="997.1" y="62.0"></text>
</g>
<g>
<title>[worker-3 tid=14277] (75,161 samples, 4.15%)</title><rect x="994.6" y="579.0" width="49.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="997.6" y="590.0">[work..</text>
</g>
<g>
<title>java/lang/Thread.run (75,161 samples, 4.15%)</title><rect x="994.6" y="563.0" width="49.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="997.6" y="574.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (75,161 samples, 4.15%)</title><rect x="994.6" y="547.0" width="49.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="997.6" y="558.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (75,161 samples, 4.15%)</title><rect x="994.6" y="531.0" width="49.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="997.6" y="542.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (75,058 samples, 4.15%)</title><rect x="994.7" y="515.0" width="48.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="997.7" y="526.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (75,058 samples, 4.15%)</title><rect x="994.7" y="499.0" width="48.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="997.7" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (5,959 samples, 0.33%)</title><rect x="994.7" y="483.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="997.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (5,959 samples, 0.33%)</title><rect x="994.7" y="467.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="997.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (5,959 samples, 0.33%)</title><rect x="994.7" y="451.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="997.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,959 samples, 0.33%)</title><rect x="994.7" y="435.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="997.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (5,959 samples, 0.33%)</title><rect x="994.7" y="419.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="997.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (4,868 samples, 0.27%)</title><rect x="994.7" y="403.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="997.7" y="414.0"></text>
</g>
<g>
<title>byte[] (1,332 samples, 0.07%)</title><rect x="994.7" y="387.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="997.7" y="398.0"></text>
</g>
<g>
<title>byte[] (3,536 samples, 0.20%)</title><rect x="995.6" y="387.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="998.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (848 samples, 0.05%)</title><rect x="997.9" y="403.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1000.9" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (773 samples, 0.04%)</title><rect x="997.9" y="387.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1000.9" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (773 samples, 0.04%)</title><rect x="997.9" y="371.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1000.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (773 samples, 0.04%)</title><rect x="997.9" y="355.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1000.9" y="366.0"></text>
</g>
<g>
<title>char[] (676 samples, 0.04%)</title><rect x="997.9" y="339.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1000.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (68,990 samples, 3.81%)</title><rect x="998.6" y="483.0" width="44.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1001.6" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (68,990 samples, 3.81%)</title><rect x="998.6" y="467.0" width="44.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1001.6" y="478.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (68,990 samples, 3.81%)</title><rect x="998.6" y="451.0" width="44.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1001.6" y="462.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (68,691 samples, 3.80%)</title><rect x="998.8" y="435.0" width="44.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1001.8" y="446.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3,854 samples, 0.21%)</title><rect x="998.8" y="419.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1001.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3,854 samples, 0.21%)</title><rect x="998.8" y="403.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1001.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3,854 samples, 0.21%)</title><rect x="998.8" y="387.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1001.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3,854 samples, 0.21%)</title><rect x="998.8" y="371.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1001.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,854 samples, 0.21%)</title><rect x="998.8" y="355.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1001.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,542 samples, 0.20%)</title><rect x="998.8" y="339.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1001.8" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,862 samples, 0.10%)</title><rect x="998.8" y="323.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1001.8" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,862 samples, 0.10%)</title><rect x="998.8" y="307.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1001.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,862 samples, 0.10%)</title><rect x="998.8" y="291.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1001.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,862 samples, 0.10%)</title><rect x="998.8" y="275.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1001.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,862 samples, 0.10%)</title><rect x="998.8" y="259.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1001.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (1,862 samples, 0.10%)</title><rect x="998.8" y="243.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1001.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,862 samples, 0.10%)</title><rect x="998.8" y="227.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1001.8" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,862 samples, 0.10%)</title><rect x="998.8" y="211.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1001.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,862 samples, 0.10%)</title><rect x="998.8" y="195.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1001.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,862 samples, 0.10%)</title><rect x="998.8" y="179.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1001.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,862 samples, 0.10%)</title><rect x="998.8" y="163.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1001.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (1,862 samples, 0.10%)</title><rect x="998.8" y="147.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1001.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,862 samples, 0.10%)</title><rect x="998.8" y="131.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1001.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (1,862 samples, 0.10%)</title><rect x="998.8" y="115.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1001.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,862 samples, 0.10%)</title><rect x="998.8" y="99.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1001.8" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,857 samples, 0.10%)</title><rect x="998.8" y="83.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1001.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,857 samples, 0.10%)</title><rect x="998.8" y="67.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1001.8" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,857 samples, 0.10%)</title><rect x="998.8" y="51.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1001.8" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,678 samples, 0.09%)</title><rect x="1000.0" y="323.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1003.0" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,678 samples, 0.09%)</title><rect x="1000.0" y="307.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1003.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,678 samples, 0.09%)</title><rect x="1000.0" y="291.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1003.0" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,678 samples, 0.09%)</title><rect x="1000.0" y="275.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1003.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,678 samples, 0.09%)</title><rect x="1000.0" y="259.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1003.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,678 samples, 0.09%)</title><rect x="1000.0" y="243.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1003.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,210 samples, 0.07%)</title><rect x="1000.0" y="227.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1003.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,210 samples, 0.07%)</title><rect x="1000.0" y="211.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1003.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,210 samples, 0.07%)</title><rect x="1000.0" y="195.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1003.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,210 samples, 0.07%)</title><rect x="1000.0" y="179.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1003.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (468 samples, 0.03%)</title><rect x="1000.8" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1003.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (468 samples, 0.03%)</title><rect x="1000.8" y="211.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1003.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (468 samples, 0.03%)</title><rect x="1000.8" y="195.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1003.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (468 samples, 0.03%)</title><rect x="1000.8" y="179.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1003.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (468 samples, 0.03%)</title><rect x="1000.8" y="163.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1003.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (468 samples, 0.03%)</title><rect x="1000.8" y="147.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1003.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (468 samples, 0.03%)</title><rect x="1000.8" y="131.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1003.8" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (468 samples, 0.03%)</title><rect x="1000.8" y="115.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (468 samples, 0.03%)</title><rect x="1000.8" y="99.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1003.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (468 samples, 0.03%)</title><rect x="1000.8" y="83.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1003.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (466 samples, 0.03%)</title><rect x="1000.8" y="67.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1003.8" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (466 samples, 0.03%)</title><rect x="1000.8" y="51.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1003.8" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (466 samples, 0.03%)</title><rect x="1000.8" y="35.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1003.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (64,667 samples, 3.57%)</title><rect x="1001.4" y="419.0" width="42.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1004.4" y="430.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (64,654 samples, 3.57%)</title><rect x="1001.4" y="403.0" width="42.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1004.4" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (55,994 samples, 3.09%)</title><rect x="1001.4" y="387.0" width="36.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1004.4" y="398.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (55,548 samples, 3.07%)</title><rect x="1001.7" y="371.0" width="36.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1004.7" y="382.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (55,183 samples, 3.05%)</title><rect x="1001.9" y="355.0" width="36.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1004.9" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (55,183 samples, 3.05%)</title><rect x="1001.9" y="339.0" width="36.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1004.9" y="350.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (27,561 samples, 1.52%)</title><rect x="1001.9" y="323.0" width="18.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1004.9" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13,675 samples, 0.76%)</title><rect x="1001.9" y="307.0" width="8.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1004.9" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13,675 samples, 0.76%)</title><rect x="1001.9" y="291.0" width="8.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1004.9" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,675 samples, 0.76%)</title><rect x="1001.9" y="275.0" width="8.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1004.9" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (13,886 samples, 0.77%)</title><rect x="1010.8" y="307.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1013.8" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,886 samples, 0.77%)</title><rect x="1010.8" y="291.0" width="9.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1013.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (27,622 samples, 1.53%)</title><rect x="1019.9" y="323.0" width="18.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1022.9" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13,962 samples, 0.77%)</title><rect x="1019.9" y="307.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1022.9" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13,962 samples, 0.77%)</title><rect x="1019.9" y="291.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1022.9" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,962 samples, 0.77%)</title><rect x="1019.9" y="275.0" width="9.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1022.9" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (13,660 samples, 0.75%)</title><rect x="1029.0" y="307.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1032.0" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,660 samples, 0.75%)</title><rect x="1029.0" y="291.0" width="8.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1032.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (8,660 samples, 0.48%)</title><rect x="1037.9" y="387.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1040.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (7,810 samples, 0.43%)</title><rect x="1037.9" y="371.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1040.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (7,801 samples, 0.43%)</title><rect x="1037.9" y="355.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1040.9" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7,509 samples, 0.41%)</title><rect x="1038.1" y="339.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1041.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7,509 samples, 0.41%)</title><rect x="1038.1" y="323.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1041.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7,404 samples, 0.41%)</title><rect x="1038.2" y="307.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1041.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7,404 samples, 0.41%)</title><rect x="1038.2" y="291.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1041.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,404 samples, 0.41%)</title><rect x="1038.2" y="275.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1041.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,404 samples, 0.41%)</title><rect x="1038.2" y="259.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1041.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,791 samples, 0.26%)</title><rect x="1038.2" y="243.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1041.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,791 samples, 0.26%)</title><rect x="1038.2" y="227.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1041.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,791 samples, 0.26%)</title><rect x="1038.2" y="211.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1041.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,791 samples, 0.26%)</title><rect x="1038.2" y="195.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1041.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,227 samples, 0.07%)</title><rect x="1038.4" y="179.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1041.4" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (605 samples, 0.03%)</title><rect x="1038.4" y="163.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1041.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (605 samples, 0.03%)</title><rect x="1038.4" y="147.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1041.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (605 samples, 0.03%)</title><rect x="1038.4" y="131.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1041.4" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (622 samples, 0.03%)</title><rect x="1038.8" y="163.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1041.8" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (622 samples, 0.03%)</title><rect x="1038.8" y="147.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1041.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,168 samples, 0.06%)</title><rect x="1039.2" y="179.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1042.2" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (561 samples, 0.03%)</title><rect x="1039.2" y="163.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1042.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (561 samples, 0.03%)</title><rect x="1039.2" y="147.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1042.2" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (561 samples, 0.03%)</title><rect x="1039.2" y="131.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1042.2" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (607 samples, 0.03%)</title><rect x="1039.5" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1042.5" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (607 samples, 0.03%)</title><rect x="1039.5" y="147.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1042.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (663 samples, 0.04%)</title><rect x="1039.9" y="179.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1042.9" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (663 samples, 0.04%)</title><rect x="1039.9" y="163.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1042.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (663 samples, 0.04%)</title><rect x="1039.9" y="147.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1042.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (663 samples, 0.04%)</title><rect x="1039.9" y="131.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1042.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,207 samples, 0.07%)</title><rect x="1040.4" y="179.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1043.4" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (620 samples, 0.03%)</title><rect x="1040.4" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1043.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (620 samples, 0.03%)</title><rect x="1040.4" y="147.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1043.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (620 samples, 0.03%)</title><rect x="1040.4" y="131.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1043.4" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (587 samples, 0.03%)</title><rect x="1040.8" y="163.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1043.8" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (587 samples, 0.03%)</title><rect x="1040.8" y="147.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1043.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (2,613 samples, 0.14%)</title><rect x="1041.3" y="243.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,613 samples, 0.14%)</title><rect x="1041.3" y="227.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1044.3" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,613 samples, 0.14%)</title><rect x="1041.3" y="211.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1044.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,613 samples, 0.14%)</title><rect x="1041.3" y="195.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1044.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,613 samples, 0.14%)</title><rect x="1041.3" y="179.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1044.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,613 samples, 0.14%)</title><rect x="1041.3" y="163.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1044.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (2,613 samples, 0.14%)</title><rect x="1041.3" y="147.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,613 samples, 0.14%)</title><rect x="1041.3" y="131.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1044.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (2,613 samples, 0.14%)</title><rect x="1041.3" y="115.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1044.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,613 samples, 0.14%)</title><rect x="1041.3" y="99.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1044.3" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,602 samples, 0.14%)</title><rect x="1041.3" y="83.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1044.3" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,602 samples, 0.14%)</title><rect x="1041.3" y="67.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1044.3" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,602 samples, 0.14%)</title><rect x="1041.3" y="51.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1044.3" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (835 samples, 0.05%)</title><rect x="1043.0" y="371.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1046.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (828 samples, 0.05%)</title><rect x="1043.0" y="355.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1046.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (828 samples, 0.05%)</title><rect x="1043.0" y="339.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1046.0" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (474 samples, 0.03%)</title><rect x="1043.0" y="323.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1046.0" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (474 samples, 0.03%)</title><rect x="1043.0" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1046.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (474 samples, 0.03%)</title><rect x="1043.0" y="291.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1046.0" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (474 samples, 0.03%)</title><rect x="1043.0" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1046.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (474 samples, 0.03%)</title><rect x="1043.0" y="259.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1046.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (474 samples, 0.03%)</title><rect x="1043.0" y="243.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1046.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (474 samples, 0.03%)</title><rect x="1043.0" y="227.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.0" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (474 samples, 0.03%)</title><rect x="1043.0" y="211.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1046.0" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (474 samples, 0.03%)</title><rect x="1043.0" y="195.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1046.0" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (474 samples, 0.03%)</title><rect x="1043.0" y="179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1046.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (474 samples, 0.03%)</title><rect x="1043.0" y="163.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1046.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (474 samples, 0.03%)</title><rect x="1043.0" y="147.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1046.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (474 samples, 0.03%)</title><rect x="1043.0" y="131.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1046.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (474 samples, 0.03%)</title><rect x="1043.0" y="115.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1046.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (474 samples, 0.03%)</title><rect x="1043.0" y="99.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.0" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (474 samples, 0.03%)</title><rect x="1043.0" y="83.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1046.0" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (474 samples, 0.03%)</title><rect x="1043.0" y="67.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.0" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (474 samples, 0.03%)</title><rect x="1043.0" y="51.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1046.0" y="62.0"></text>
</g>
<g>
<title>[worker-4 tid=14270] (74,549 samples, 4.12%)</title><rect x="1043.6" y="579.0" width="48.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1046.6" y="590.0">[wor..</text>
</g>
<g>
<title>java/lang/Thread.run (74,549 samples, 4.12%)</title><rect x="1043.6" y="563.0" width="48.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1046.6" y="574.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (74,549 samples, 4.12%)</title><rect x="1043.6" y="547.0" width="48.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1046.6" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (74,549 samples, 4.12%)</title><rect x="1043.6" y="531.0" width="48.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1046.6" y="542.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (74,469 samples, 4.11%)</title><rect x="1043.7" y="515.0" width="48.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1046.7" y="526.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (74,469 samples, 4.11%)</title><rect x="1043.7" y="499.0" width="48.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1046.7" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (3,621 samples, 0.20%)</title><rect x="1043.7" y="483.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1046.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (3,621 samples, 0.20%)</title><rect x="1043.7" y="467.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1046.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (3,621 samples, 0.20%)</title><rect x="1043.7" y="451.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1046.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,621 samples, 0.20%)</title><rect x="1043.7" y="435.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,621 samples, 0.20%)</title><rect x="1043.7" y="419.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,743 samples, 0.15%)</title><rect x="1043.7" y="403.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1046.7" y="414.0"></text>
</g>
<g>
<title>byte[] (972 samples, 0.05%)</title><rect x="1043.7" y="387.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1046.7" y="398.0"></text>
</g>
<g>
<title>byte[] (1,771 samples, 0.10%)</title><rect x="1044.4" y="387.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1047.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (634 samples, 0.04%)</title><rect x="1045.5" y="403.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1048.5" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (580 samples, 0.03%)</title><rect x="1045.5" y="387.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.5" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (580 samples, 0.03%)</title><rect x="1045.5" y="371.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1048.5" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (580 samples, 0.03%)</title><rect x="1045.5" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.5" y="366.0"></text>
</g>
<g>
<title>char[] (516 samples, 0.03%)</title><rect x="1045.5" y="339.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1048.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (70,727 samples, 3.91%)</title><rect x="1046.0" y="483.0" width="46.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1049.0" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (70,727 samples, 3.91%)</title><rect x="1046.0" y="467.0" width="46.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1049.0" y="478.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (70,727 samples, 3.91%)</title><rect x="1046.0" y="451.0" width="46.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1049.0" y="462.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (70,417 samples, 3.89%)</title><rect x="1046.2" y="435.0" width="45.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.2" y="446.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3,392 samples, 0.19%)</title><rect x="1046.2" y="419.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1049.2" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3,392 samples, 0.19%)</title><rect x="1046.2" y="403.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1049.2" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3,392 samples, 0.19%)</title><rect x="1046.2" y="387.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1049.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3,392 samples, 0.19%)</title><rect x="1046.2" y="371.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1049.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,392 samples, 0.19%)</title><rect x="1046.2" y="355.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1049.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,120 samples, 0.17%)</title><rect x="1046.2" y="339.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1049.2" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,641 samples, 0.09%)</title><rect x="1046.2" y="323.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1049.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,641 samples, 0.09%)</title><rect x="1046.2" y="307.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1049.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,641 samples, 0.09%)</title><rect x="1046.2" y="291.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1049.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,641 samples, 0.09%)</title><rect x="1046.2" y="275.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1049.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,641 samples, 0.09%)</title><rect x="1046.2" y="259.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1049.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (1,641 samples, 0.09%)</title><rect x="1046.2" y="243.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1049.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,641 samples, 0.09%)</title><rect x="1046.2" y="227.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1049.2" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,641 samples, 0.09%)</title><rect x="1046.2" y="211.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1049.2" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,641 samples, 0.09%)</title><rect x="1046.2" y="195.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1049.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,641 samples, 0.09%)</title><rect x="1046.2" y="179.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1049.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,641 samples, 0.09%)</title><rect x="1046.2" y="163.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1049.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (1,641 samples, 0.09%)</title><rect x="1046.2" y="147.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1049.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,641 samples, 0.09%)</title><rect x="1046.2" y="131.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1049.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (1,641 samples, 0.09%)</title><rect x="1046.2" y="115.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1049.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,641 samples, 0.09%)</title><rect x="1046.2" y="99.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1049.2" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,640 samples, 0.09%)</title><rect x="1046.2" y="83.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1049.2" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,640 samples, 0.09%)</title><rect x="1046.2" y="67.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1049.2" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,640 samples, 0.09%)</title><rect x="1046.2" y="51.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1049.2" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,479 samples, 0.08%)</title><rect x="1047.3" y="323.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1050.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,479 samples, 0.08%)</title><rect x="1047.3" y="307.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1050.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,479 samples, 0.08%)</title><rect x="1047.3" y="291.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,479 samples, 0.08%)</title><rect x="1047.3" y="275.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1050.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,479 samples, 0.08%)</title><rect x="1047.3" y="259.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1050.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,479 samples, 0.08%)</title><rect x="1047.3" y="243.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1050.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,065 samples, 0.06%)</title><rect x="1047.3" y="227.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1050.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,065 samples, 0.06%)</title><rect x="1047.3" y="211.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,065 samples, 0.06%)</title><rect x="1047.3" y="195.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1050.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,065 samples, 0.06%)</title><rect x="1047.3" y="179.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1050.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (414 samples, 0.02%)</title><rect x="1048.0" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1051.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (414 samples, 0.02%)</title><rect x="1048.0" y="211.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1051.0" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (414 samples, 0.02%)</title><rect x="1048.0" y="195.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1051.0" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (414 samples, 0.02%)</title><rect x="1048.0" y="179.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1051.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (414 samples, 0.02%)</title><rect x="1048.0" y="163.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1051.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (414 samples, 0.02%)</title><rect x="1048.0" y="147.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1051.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (414 samples, 0.02%)</title><rect x="1048.0" y="131.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1051.0" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (414 samples, 0.02%)</title><rect x="1048.0" y="115.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1051.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (414 samples, 0.02%)</title><rect x="1048.0" y="99.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1051.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (414 samples, 0.02%)</title><rect x="1048.0" y="83.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.0" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (414 samples, 0.02%)</title><rect x="1048.0" y="67.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1051.0" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (414 samples, 0.02%)</title><rect x="1048.0" y="51.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1051.0" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (414 samples, 0.02%)</title><rect x="1048.0" y="35.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1051.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (66,888 samples, 3.70%)</title><rect x="1048.5" y="419.0" width="43.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1051.5" y="430.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (66,876 samples, 3.70%)</title><rect x="1048.5" y="403.0" width="43.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1051.5" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (57,723 samples, 3.19%)</title><rect x="1048.5" y="387.0" width="37.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1051.5" y="398.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (57,272 samples, 3.16%)</title><rect x="1048.8" y="371.0" width="37.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1051.8" y="382.0">ru/..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (430 samples, 0.02%)</title><rect x="1048.8" y="355.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1051.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (56,842 samples, 3.14%)</title><rect x="1049.1" y="355.0" width="37.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1052.1" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (56,842 samples, 3.14%)</title><rect x="1049.1" y="339.0" width="37.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1052.1" y="350.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (28,420 samples, 1.57%)</title><rect x="1049.1" y="323.0" width="18.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1052.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14,269 samples, 0.79%)</title><rect x="1049.1" y="307.0" width="9.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1052.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14,269 samples, 0.79%)</title><rect x="1049.1" y="291.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1052.1" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,269 samples, 0.79%)</title><rect x="1049.1" y="275.0" width="9.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1052.1" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,151 samples, 0.78%)</title><rect x="1058.4" y="307.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1061.4" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,151 samples, 0.78%)</title><rect x="1058.4" y="291.0" width="9.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1061.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (28,422 samples, 1.57%)</title><rect x="1067.6" y="323.0" width="18.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1070.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14,293 samples, 0.79%)</title><rect x="1067.6" y="307.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1070.6" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14,293 samples, 0.79%)</title><rect x="1067.6" y="291.0" width="9.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1070.6" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,293 samples, 0.79%)</title><rect x="1067.6" y="275.0" width="9.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1070.6" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,129 samples, 0.78%)</title><rect x="1077.0" y="307.0" width="9.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1080.0" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,129 samples, 0.78%)</title><rect x="1077.0" y="291.0" width="9.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1080.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (9,153 samples, 0.51%)</title><rect x="1086.2" y="387.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1089.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8,349 samples, 0.46%)</title><rect x="1086.2" y="371.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1089.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8,336 samples, 0.46%)</title><rect x="1086.2" y="355.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1089.2" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8,026 samples, 0.44%)</title><rect x="1086.4" y="339.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1089.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8,026 samples, 0.44%)</title><rect x="1086.4" y="323.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1089.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7,925 samples, 0.44%)</title><rect x="1086.5" y="307.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1089.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7,925 samples, 0.44%)</title><rect x="1086.5" y="291.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1089.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,925 samples, 0.44%)</title><rect x="1086.5" y="275.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1089.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,925 samples, 0.44%)</title><rect x="1086.5" y="259.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1089.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,073 samples, 0.28%)</title><rect x="1086.5" y="243.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1089.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,073 samples, 0.28%)</title><rect x="1086.5" y="227.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1089.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,073 samples, 0.28%)</title><rect x="1086.5" y="211.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1089.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5,073 samples, 0.28%)</title><rect x="1086.5" y="195.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,243 samples, 0.07%)</title><rect x="1086.7" y="179.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1089.7" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (631 samples, 0.03%)</title><rect x="1086.7" y="163.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1089.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (631 samples, 0.03%)</title><rect x="1086.7" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1089.7" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (631 samples, 0.03%)</title><rect x="1086.7" y="131.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1089.7" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (612 samples, 0.03%)</title><rect x="1087.1" y="163.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1090.1" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (612 samples, 0.03%)</title><rect x="1087.1" y="147.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1090.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,287 samples, 0.07%)</title><rect x="1087.5" y="179.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1090.5" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (654 samples, 0.04%)</title><rect x="1087.5" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1090.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (654 samples, 0.04%)</title><rect x="1087.5" y="147.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (654 samples, 0.04%)</title><rect x="1087.5" y="131.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1090.5" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (633 samples, 0.03%)</title><rect x="1087.9" y="163.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1090.9" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (633 samples, 0.03%)</title><rect x="1087.9" y="147.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1090.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (654 samples, 0.04%)</title><rect x="1088.3" y="179.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1091.3" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (654 samples, 0.04%)</title><rect x="1088.3" y="163.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1091.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (654 samples, 0.04%)</title><rect x="1088.3" y="147.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1091.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (654 samples, 0.04%)</title><rect x="1088.3" y="131.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1091.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,313 samples, 0.07%)</title><rect x="1088.8" y="179.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1091.8" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (652 samples, 0.04%)</title><rect x="1088.8" y="163.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1091.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (652 samples, 0.04%)</title><rect x="1088.8" y="147.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1091.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (652 samples, 0.04%)</title><rect x="1088.8" y="131.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1091.8" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (661 samples, 0.04%)</title><rect x="1089.2" y="163.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1092.2" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (661 samples, 0.04%)</title><rect x="1089.2" y="147.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1092.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (2,852 samples, 0.16%)</title><rect x="1089.8" y="243.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1092.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,852 samples, 0.16%)</title><rect x="1089.8" y="227.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1092.8" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,852 samples, 0.16%)</title><rect x="1089.8" y="211.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1092.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,852 samples, 0.16%)</title><rect x="1089.8" y="195.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1092.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,852 samples, 0.16%)</title><rect x="1089.8" y="179.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1092.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,852 samples, 0.16%)</title><rect x="1089.8" y="163.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1092.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (2,852 samples, 0.16%)</title><rect x="1089.8" y="147.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1092.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,852 samples, 0.16%)</title><rect x="1089.8" y="131.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1092.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (2,852 samples, 0.16%)</title><rect x="1089.8" y="115.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1092.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,852 samples, 0.16%)</title><rect x="1089.8" y="99.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1092.8" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,836 samples, 0.16%)</title><rect x="1089.8" y="83.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1092.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,836 samples, 0.16%)</title><rect x="1089.8" y="67.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1092.8" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,836 samples, 0.16%)</title><rect x="1089.8" y="51.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1092.8" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (787 samples, 0.04%)</title><rect x="1091.6" y="371.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1094.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (782 samples, 0.04%)</title><rect x="1091.6" y="355.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1094.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (782 samples, 0.04%)</title><rect x="1091.6" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.6" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (441 samples, 0.02%)</title><rect x="1091.6" y="323.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1094.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (441 samples, 0.02%)</title><rect x="1091.6" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1094.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (441 samples, 0.02%)</title><rect x="1091.6" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1094.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (441 samples, 0.02%)</title><rect x="1091.6" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1094.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (441 samples, 0.02%)</title><rect x="1091.6" y="259.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1094.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (441 samples, 0.02%)</title><rect x="1091.6" y="243.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1094.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (441 samples, 0.02%)</title><rect x="1091.6" y="227.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1094.6" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (441 samples, 0.02%)</title><rect x="1091.6" y="211.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1094.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (441 samples, 0.02%)</title><rect x="1091.6" y="195.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1094.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (441 samples, 0.02%)</title><rect x="1091.6" y="179.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1094.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (441 samples, 0.02%)</title><rect x="1091.6" y="163.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1094.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (441 samples, 0.02%)</title><rect x="1091.6" y="147.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1094.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (441 samples, 0.02%)</title><rect x="1091.6" y="131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1094.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (441 samples, 0.02%)</title><rect x="1091.6" y="115.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1094.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (441 samples, 0.02%)</title><rect x="1091.6" y="99.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1094.6" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (440 samples, 0.02%)</title><rect x="1091.6" y="83.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1094.6" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (440 samples, 0.02%)</title><rect x="1091.6" y="67.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1094.6" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (440 samples, 0.02%)</title><rect x="1091.6" y="51.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1094.6" y="62.0"></text>
</g>
<g>
<title>[worker-4 tid=14274] (74,780 samples, 4.13%)</title><rect x="1092.2" y="579.0" width="48.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1095.2" y="590.0">[wor..</text>
</g>
<g>
<title>java/lang/Thread.run (74,780 samples, 4.13%)</title><rect x="1092.2" y="563.0" width="48.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1095.2" y="574.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (74,780 samples, 4.13%)</title><rect x="1092.2" y="547.0" width="48.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1095.2" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (74,780 samples, 4.13%)</title><rect x="1092.2" y="531.0" width="48.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1095.2" y="542.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (74,704 samples, 4.13%)</title><rect x="1092.3" y="515.0" width="48.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1095.3" y="526.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (74,704 samples, 4.13%)</title><rect x="1092.3" y="499.0" width="48.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1095.3" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (3,745 samples, 0.21%)</title><rect x="1092.3" y="483.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1095.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (3,745 samples, 0.21%)</title><rect x="1092.3" y="467.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1095.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (3,745 samples, 0.21%)</title><rect x="1092.3" y="451.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1095.3" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,745 samples, 0.21%)</title><rect x="1092.3" y="435.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1095.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,745 samples, 0.21%)</title><rect x="1092.3" y="419.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.3" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,875 samples, 0.16%)</title><rect x="1092.3" y="403.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1095.3" y="414.0"></text>
</g>
<g>
<title>byte[] (991 samples, 0.05%)</title><rect x="1092.3" y="387.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1095.3" y="398.0"></text>
</g>
<g>
<title>byte[] (1,884 samples, 0.10%)</title><rect x="1093.0" y="387.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1096.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (654 samples, 0.04%)</title><rect x="1094.2" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1097.2" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (595 samples, 0.03%)</title><rect x="1094.2" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.2" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (595 samples, 0.03%)</title><rect x="1094.2" y="371.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1097.2" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (595 samples, 0.03%)</title><rect x="1094.2" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1097.2" y="366.0"></text>
</g>
<g>
<title>char[] (549 samples, 0.03%)</title><rect x="1094.2" y="339.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1097.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (70,847 samples, 3.91%)</title><rect x="1094.7" y="483.0" width="46.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1097.7" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (70,847 samples, 3.91%)</title><rect x="1094.7" y="467.0" width="46.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1097.7" y="478.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (70,847 samples, 3.91%)</title><rect x="1094.7" y="451.0" width="46.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1097.7" y="462.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (70,514 samples, 3.90%)</title><rect x="1094.9" y="435.0" width="46.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1097.9" y="446.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3,499 samples, 0.19%)</title><rect x="1094.9" y="419.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1097.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3,499 samples, 0.19%)</title><rect x="1094.9" y="403.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3,499 samples, 0.19%)</title><rect x="1094.9" y="387.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1097.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3,499 samples, 0.19%)</title><rect x="1094.9" y="371.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1097.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,499 samples, 0.19%)</title><rect x="1094.9" y="355.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1097.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,210 samples, 0.18%)</title><rect x="1094.9" y="339.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1097.9" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,706 samples, 0.09%)</title><rect x="1094.9" y="323.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1097.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,706 samples, 0.09%)</title><rect x="1094.9" y="307.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1097.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,706 samples, 0.09%)</title><rect x="1094.9" y="291.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1097.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,706 samples, 0.09%)</title><rect x="1094.9" y="275.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1097.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,706 samples, 0.09%)</title><rect x="1094.9" y="259.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1097.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (1,706 samples, 0.09%)</title><rect x="1094.9" y="243.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1097.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,706 samples, 0.09%)</title><rect x="1094.9" y="227.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1097.9" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,706 samples, 0.09%)</title><rect x="1094.9" y="211.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1097.9" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,706 samples, 0.09%)</title><rect x="1094.9" y="195.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1097.9" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,706 samples, 0.09%)</title><rect x="1094.9" y="179.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1097.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,706 samples, 0.09%)</title><rect x="1094.9" y="163.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1097.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (1,706 samples, 0.09%)</title><rect x="1094.9" y="147.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1097.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,706 samples, 0.09%)</title><rect x="1094.9" y="131.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1097.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (1,706 samples, 0.09%)</title><rect x="1094.9" y="115.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1097.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,706 samples, 0.09%)</title><rect x="1094.9" y="99.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1097.9" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,700 samples, 0.09%)</title><rect x="1094.9" y="83.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1097.9" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,700 samples, 0.09%)</title><rect x="1094.9" y="67.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1097.9" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,700 samples, 0.09%)</title><rect x="1094.9" y="51.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1097.9" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,504 samples, 0.08%)</title><rect x="1096.0" y="323.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1099.0" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,504 samples, 0.08%)</title><rect x="1096.0" y="307.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1099.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,504 samples, 0.08%)</title><rect x="1096.0" y="291.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1099.0" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,504 samples, 0.08%)</title><rect x="1096.0" y="275.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1099.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,504 samples, 0.08%)</title><rect x="1096.0" y="259.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1099.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,504 samples, 0.08%)</title><rect x="1096.0" y="243.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1099.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,061 samples, 0.06%)</title><rect x="1096.0" y="227.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1099.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,061 samples, 0.06%)</title><rect x="1096.0" y="211.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1099.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,061 samples, 0.06%)</title><rect x="1096.0" y="195.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1099.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,061 samples, 0.06%)</title><rect x="1096.0" y="179.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1099.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (443 samples, 0.02%)</title><rect x="1096.7" y="227.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1099.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (443 samples, 0.02%)</title><rect x="1096.7" y="211.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1099.7" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (443 samples, 0.02%)</title><rect x="1096.7" y="195.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1099.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (443 samples, 0.02%)</title><rect x="1096.7" y="179.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1099.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (443 samples, 0.02%)</title><rect x="1096.7" y="163.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1099.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (443 samples, 0.02%)</title><rect x="1096.7" y="147.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1099.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (443 samples, 0.02%)</title><rect x="1096.7" y="131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1099.7" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (443 samples, 0.02%)</title><rect x="1096.7" y="115.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1099.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (443 samples, 0.02%)</title><rect x="1096.7" y="99.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1099.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (443 samples, 0.02%)</title><rect x="1096.7" y="83.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1099.7" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (443 samples, 0.02%)</title><rect x="1096.7" y="67.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1099.7" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (443 samples, 0.02%)</title><rect x="1096.7" y="51.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1099.7" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (443 samples, 0.02%)</title><rect x="1096.7" y="35.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1099.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (66,866 samples, 3.69%)</title><rect x="1097.3" y="419.0" width="43.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1100.3" y="430.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (66,854 samples, 3.69%)</title><rect x="1097.3" y="403.0" width="43.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1100.3" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (57,606 samples, 3.18%)</title><rect x="1097.3" y="387.0" width="37.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1100.3" y="398.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (57,167 samples, 3.16%)</title><rect x="1097.6" y="371.0" width="37.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1100.6" y="382.0">ru/..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (389 samples, 0.02%)</title><rect x="1097.6" y="355.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1100.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (56,778 samples, 3.14%)</title><rect x="1097.9" y="355.0" width="37.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1100.9" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (56,778 samples, 3.14%)</title><rect x="1097.9" y="339.0" width="37.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1100.9" y="350.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (28,164 samples, 1.56%)</title><rect x="1097.9" y="323.0" width="18.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1100.9" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13,929 samples, 0.77%)</title><rect x="1097.9" y="307.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1100.9" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13,929 samples, 0.77%)</title><rect x="1097.9" y="291.0" width="9.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1100.9" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,929 samples, 0.77%)</title><rect x="1097.9" y="275.0" width="9.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1100.9" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,235 samples, 0.79%)</title><rect x="1106.9" y="307.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1109.9" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,235 samples, 0.79%)</title><rect x="1106.9" y="291.0" width="9.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1109.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (28,614 samples, 1.58%)</title><rect x="1116.2" y="323.0" width="18.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1119.2" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14,428 samples, 0.80%)</title><rect x="1116.2" y="307.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1119.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14,428 samples, 0.80%)</title><rect x="1116.2" y="291.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1119.2" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,428 samples, 0.80%)</title><rect x="1116.2" y="275.0" width="9.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1119.2" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (14,186 samples, 0.78%)</title><rect x="1125.6" y="307.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1128.6" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (14,186 samples, 0.78%)</title><rect x="1125.6" y="291.0" width="9.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1128.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (9,248 samples, 0.51%)</title><rect x="1134.9" y="387.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1137.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (8,472 samples, 0.47%)</title><rect x="1134.9" y="371.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (8,459 samples, 0.47%)</title><rect x="1134.9" y="355.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1137.9" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8,192 samples, 0.45%)</title><rect x="1135.1" y="339.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1138.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8,192 samples, 0.45%)</title><rect x="1135.1" y="323.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1138.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8,090 samples, 0.45%)</title><rect x="1135.1" y="307.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1138.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8,090 samples, 0.45%)</title><rect x="1135.1" y="291.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1138.1" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,090 samples, 0.45%)</title><rect x="1135.1" y="275.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1138.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8,090 samples, 0.45%)</title><rect x="1135.1" y="259.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1138.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5,125 samples, 0.28%)</title><rect x="1135.1" y="243.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1138.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,125 samples, 0.28%)</title><rect x="1135.1" y="227.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1138.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5,125 samples, 0.28%)</title><rect x="1135.1" y="211.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1138.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5,125 samples, 0.28%)</title><rect x="1135.1" y="195.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1138.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,268 samples, 0.07%)</title><rect x="1135.4" y="179.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1138.4" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (626 samples, 0.03%)</title><rect x="1135.4" y="163.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1138.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (626 samples, 0.03%)</title><rect x="1135.4" y="147.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1138.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (626 samples, 0.03%)</title><rect x="1135.4" y="131.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1138.4" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (642 samples, 0.04%)</title><rect x="1135.8" y="163.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1138.8" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (642 samples, 0.04%)</title><rect x="1135.8" y="147.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1138.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,320 samples, 0.07%)</title><rect x="1136.2" y="179.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1139.2" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (710 samples, 0.04%)</title><rect x="1136.2" y="163.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1139.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (710 samples, 0.04%)</title><rect x="1136.2" y="147.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1139.2" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (710 samples, 0.04%)</title><rect x="1136.2" y="131.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1139.2" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (610 samples, 0.03%)</title><rect x="1136.6" y="163.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1139.6" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (610 samples, 0.03%)</title><rect x="1136.6" y="147.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1139.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (656 samples, 0.04%)</title><rect x="1137.0" y="179.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1140.0" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (656 samples, 0.04%)</title><rect x="1137.0" y="163.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1140.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (656 samples, 0.04%)</title><rect x="1137.0" y="147.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1140.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (656 samples, 0.04%)</title><rect x="1137.0" y="131.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1140.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,337 samples, 0.07%)</title><rect x="1137.5" y="179.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.5" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (650 samples, 0.04%)</title><rect x="1137.5" y="163.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1140.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (650 samples, 0.04%)</title><rect x="1137.5" y="147.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1140.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (650 samples, 0.04%)</title><rect x="1137.5" y="131.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1140.5" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (687 samples, 0.04%)</title><rect x="1137.9" y="163.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1140.9" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (687 samples, 0.04%)</title><rect x="1137.9" y="147.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1140.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (2,965 samples, 0.16%)</title><rect x="1138.5" y="243.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1141.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,965 samples, 0.16%)</title><rect x="1138.5" y="227.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1141.5" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,965 samples, 0.16%)</title><rect x="1138.5" y="211.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1141.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,965 samples, 0.16%)</title><rect x="1138.5" y="195.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1141.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,965 samples, 0.16%)</title><rect x="1138.5" y="179.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1141.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,965 samples, 0.16%)</title><rect x="1138.5" y="163.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1141.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (2,965 samples, 0.16%)</title><rect x="1138.5" y="147.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1141.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,965 samples, 0.16%)</title><rect x="1138.5" y="131.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1141.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (2,965 samples, 0.16%)</title><rect x="1138.5" y="115.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1141.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,965 samples, 0.16%)</title><rect x="1138.5" y="99.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1141.5" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,948 samples, 0.16%)</title><rect x="1138.5" y="83.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1141.5" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,948 samples, 0.16%)</title><rect x="1138.5" y="67.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1141.5" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,948 samples, 0.16%)</title><rect x="1138.5" y="51.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1141.5" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (760 samples, 0.04%)</title><rect x="1140.4" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1143.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (748 samples, 0.04%)</title><rect x="1140.4" y="355.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1143.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (748 samples, 0.04%)</title><rect x="1140.4" y="339.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1143.4" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (420 samples, 0.02%)</title><rect x="1140.4" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1143.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (420 samples, 0.02%)</title><rect x="1140.4" y="307.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1143.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (420 samples, 0.02%)</title><rect x="1140.4" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1143.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (420 samples, 0.02%)</title><rect x="1140.4" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (420 samples, 0.02%)</title><rect x="1140.4" y="259.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1143.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (420 samples, 0.02%)</title><rect x="1140.4" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1143.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (420 samples, 0.02%)</title><rect x="1140.4" y="227.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1143.4" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (420 samples, 0.02%)</title><rect x="1140.4" y="211.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1143.4" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (420 samples, 0.02%)</title><rect x="1140.4" y="195.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (420 samples, 0.02%)</title><rect x="1140.4" y="179.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1143.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (420 samples, 0.02%)</title><rect x="1140.4" y="163.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1143.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (420 samples, 0.02%)</title><rect x="1140.4" y="147.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1143.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (420 samples, 0.02%)</title><rect x="1140.4" y="131.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1143.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (420 samples, 0.02%)</title><rect x="1140.4" y="115.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (420 samples, 0.02%)</title><rect x="1140.4" y="99.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1143.4" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (418 samples, 0.02%)</title><rect x="1140.4" y="83.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1143.4" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (418 samples, 0.02%)</title><rect x="1140.4" y="67.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.4" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (418 samples, 0.02%)</title><rect x="1140.4" y="51.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1143.4" y="62.0"></text>
</g>
<g>
<title>[worker-4 tid=14279] (75,177 samples, 4.15%)</title><rect x="1141.0" y="579.0" width="49.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1144.0" y="590.0">[work..</text>
</g>
<g>
<title>java/lang/Thread.run (75,177 samples, 4.15%)</title><rect x="1141.0" y="563.0" width="49.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1144.0" y="574.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (75,177 samples, 4.15%)</title><rect x="1141.0" y="547.0" width="49.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1144.0" y="558.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (75,177 samples, 4.15%)</title><rect x="1141.0" y="531.0" width="49.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1144.0" y="542.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$64/170362268.run (75,044 samples, 4.15%)</title><rect x="1141.1" y="515.0" width="48.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1144.1" y="526.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$executeAsync$4 (75,044 samples, 4.15%)</title><rect x="1141.1" y="499.0" width="48.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.1" y="510.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$61/277044291.act (6,175 samples, 0.34%)</title><rect x="1141.1" y="483.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1144.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$0 (6,175 samples, 0.34%)</title><rect x="1141.1" y="467.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1144.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.proxy (6,175 samples, 0.34%)</title><rect x="1141.1" y="451.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1144.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (6,175 samples, 0.34%)</title><rect x="1141.1" y="435.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1144.1" y="446.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (6,175 samples, 0.34%)</title><rect x="1141.1" y="419.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1144.1" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (5,082 samples, 0.28%)</title><rect x="1141.1" y="403.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1144.1" y="414.0"></text>
</g>
<g>
<title>byte[] (1,444 samples, 0.08%)</title><rect x="1141.1" y="387.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1144.1" y="398.0"></text>
</g>
<g>
<title>byte[] (3,638 samples, 0.20%)</title><rect x="1142.0" y="387.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1145.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (841 samples, 0.05%)</title><rect x="1144.4" y="403.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1147.4" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (760 samples, 0.04%)</title><rect x="1144.4" y="387.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1147.4" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (760 samples, 0.04%)</title><rect x="1144.4" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1147.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (760 samples, 0.04%)</title><rect x="1144.4" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1147.4" y="366.0"></text>
</g>
<g>
<title>char[] (690 samples, 0.04%)</title><rect x="1144.4" y="339.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1147.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer$$Lambda$73/684965399.act (68,721 samples, 3.80%)</title><rect x="1145.1" y="483.0" width="44.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1148.1" y="494.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.lambda$entity$1 (68,721 samples, 3.80%)</title><rect x="1145.1" y="467.0" width="44.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1148.1" y="478.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ShardedHttpServer.get (68,721 samples, 3.80%)</title><rect x="1145.1" y="451.0" width="44.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1148.1" y="462.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (68,376 samples, 3.78%)</title><rect x="1145.3" y="435.0" width="44.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1148.3" y="446.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3,638 samples, 0.20%)</title><rect x="1145.3" y="419.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1148.3" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3,638 samples, 0.20%)</title><rect x="1145.3" y="403.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1148.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3,638 samples, 0.20%)</title><rect x="1145.3" y="387.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1148.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (3,638 samples, 0.20%)</title><rect x="1145.3" y="371.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1148.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3,638 samples, 0.20%)</title><rect x="1145.3" y="355.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1148.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3,294 samples, 0.18%)</title><rect x="1145.3" y="339.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1148.3" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,707 samples, 0.09%)</title><rect x="1145.3" y="323.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1148.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,707 samples, 0.09%)</title><rect x="1145.3" y="307.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1148.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,707 samples, 0.09%)</title><rect x="1145.3" y="291.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1148.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,707 samples, 0.09%)</title><rect x="1145.3" y="275.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1148.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,707 samples, 0.09%)</title><rect x="1145.3" y="259.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1148.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (1,707 samples, 0.09%)</title><rect x="1145.3" y="243.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1148.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,707 samples, 0.09%)</title><rect x="1145.3" y="227.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1148.3" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,707 samples, 0.09%)</title><rect x="1145.3" y="211.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1148.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,707 samples, 0.09%)</title><rect x="1145.3" y="195.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1148.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (1,707 samples, 0.09%)</title><rect x="1145.3" y="179.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1148.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,707 samples, 0.09%)</title><rect x="1145.3" y="163.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1148.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (1,707 samples, 0.09%)</title><rect x="1145.3" y="147.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1148.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,707 samples, 0.09%)</title><rect x="1145.3" y="131.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1148.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (1,707 samples, 0.09%)</title><rect x="1145.3" y="115.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1148.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,707 samples, 0.09%)</title><rect x="1145.3" y="99.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1148.3" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,704 samples, 0.09%)</title><rect x="1145.3" y="83.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1148.3" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,704 samples, 0.09%)</title><rect x="1145.3" y="67.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1148.3" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,704 samples, 0.09%)</title><rect x="1145.3" y="51.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1148.3" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,584 samples, 0.09%)</title><rect x="1146.4" y="323.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1149.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,584 samples, 0.09%)</title><rect x="1146.4" y="307.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1149.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,584 samples, 0.09%)</title><rect x="1146.4" y="291.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1149.4" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,584 samples, 0.09%)</title><rect x="1146.4" y="275.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1149.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,584 samples, 0.09%)</title><rect x="1146.4" y="259.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1149.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,584 samples, 0.09%)</title><rect x="1146.4" y="243.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1149.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,113 samples, 0.06%)</title><rect x="1146.4" y="227.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1149.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,113 samples, 0.06%)</title><rect x="1146.4" y="211.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1149.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,113 samples, 0.06%)</title><rect x="1146.4" y="195.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1149.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,113 samples, 0.06%)</title><rect x="1146.4" y="179.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1149.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (471 samples, 0.03%)</title><rect x="1147.2" y="227.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1150.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (471 samples, 0.03%)</title><rect x="1147.2" y="211.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1150.2" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (471 samples, 0.03%)</title><rect x="1147.2" y="195.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1150.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (471 samples, 0.03%)</title><rect x="1147.2" y="179.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1150.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (471 samples, 0.03%)</title><rect x="1147.2" y="163.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1150.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (471 samples, 0.03%)</title><rect x="1147.2" y="147.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1150.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (471 samples, 0.03%)</title><rect x="1147.2" y="131.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1150.2" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (471 samples, 0.03%)</title><rect x="1147.2" y="115.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1150.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (471 samples, 0.03%)</title><rect x="1147.2" y="99.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1150.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (471 samples, 0.03%)</title><rect x="1147.2" y="83.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1150.2" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (469 samples, 0.03%)</title><rect x="1147.2" y="67.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1150.2" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (469 samples, 0.03%)</title><rect x="1147.2" y="51.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1150.2" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (469 samples, 0.03%)</title><rect x="1147.2" y="35.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1150.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.iterator (64,595 samples, 3.57%)</title><rect x="1147.8" y="419.0" width="42.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1150.8" y="430.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (64,583 samples, 3.57%)</title><rect x="1147.8" y="403.0" width="42.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1150.8" y="414.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (55,929 samples, 3.09%)</title><rect x="1147.8" y="387.0" width="36.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1150.8" y="398.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (55,483 samples, 3.07%)</title><rect x="1148.1" y="371.0" width="36.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1151.1" y="382.0">ru/..</text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.SSTable$SSTableIterator (406 samples, 0.02%)</title><rect x="1148.1" y="355.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1151.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (55,077 samples, 3.04%)</title><rect x="1148.3" y="355.0" width="36.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1151.3" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (55,077 samples, 3.04%)</title><rect x="1148.3" y="339.0" width="36.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1151.3" y="350.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (27,672 samples, 1.53%)</title><rect x="1148.3" y="323.0" width="18.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1151.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13,873 samples, 0.77%)</title><rect x="1148.3" y="307.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1151.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13,873 samples, 0.77%)</title><rect x="1148.3" y="291.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1151.3" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,873 samples, 0.77%)</title><rect x="1148.3" y="275.0" width="9.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1151.3" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (13,799 samples, 0.76%)</title><rect x="1157.4" y="307.0" width="9.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1160.4" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,799 samples, 0.76%)</title><rect x="1157.4" y="291.0" width="9.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1160.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (27,405 samples, 1.51%)</title><rect x="1166.4" y="323.0" width="17.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1169.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13,683 samples, 0.76%)</title><rect x="1166.4" y="307.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1169.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13,683 samples, 0.76%)</title><rect x="1166.4" y="291.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1169.4" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,683 samples, 0.76%)</title><rect x="1166.4" y="275.0" width="8.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1169.4" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (13,722 samples, 0.76%)</title><rect x="1175.3" y="307.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1178.3" y="318.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (13,722 samples, 0.76%)</title><rect x="1175.3" y="291.0" width="9.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1178.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (8,654 samples, 0.48%)</title><rect x="1184.3" y="387.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1187.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (7,846 samples, 0.43%)</title><rect x="1184.3" y="371.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1187.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (7,834 samples, 0.43%)</title><rect x="1184.3" y="355.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1187.3" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7,561 samples, 0.42%)</title><rect x="1184.5" y="339.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1187.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7,561 samples, 0.42%)</title><rect x="1184.5" y="323.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1187.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7,452 samples, 0.41%)</title><rect x="1184.5" y="307.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1187.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7,452 samples, 0.41%)</title><rect x="1184.5" y="291.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1187.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,452 samples, 0.41%)</title><rect x="1184.5" y="275.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1187.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7,452 samples, 0.41%)</title><rect x="1184.5" y="259.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1187.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,798 samples, 0.27%)</title><rect x="1184.5" y="243.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1187.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,798 samples, 0.27%)</title><rect x="1184.5" y="227.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1187.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,798 samples, 0.27%)</title><rect x="1184.5" y="211.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1187.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,798 samples, 0.27%)</title><rect x="1184.5" y="195.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1187.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,242 samples, 0.07%)</title><rect x="1184.7" y="179.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1187.7" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (638 samples, 0.04%)</title><rect x="1184.7" y="163.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1187.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (638 samples, 0.04%)</title><rect x="1184.7" y="147.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1187.7" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (638 samples, 0.04%)</title><rect x="1184.7" y="131.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1187.7" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (604 samples, 0.03%)</title><rect x="1185.1" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.1" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (604 samples, 0.03%)</title><rect x="1185.1" y="147.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1188.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,220 samples, 0.07%)</title><rect x="1185.5" y="179.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1188.5" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (594 samples, 0.03%)</title><rect x="1185.5" y="163.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (594 samples, 0.03%)</title><rect x="1185.5" y="147.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1188.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (594 samples, 0.03%)</title><rect x="1185.5" y="131.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1188.5" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (626 samples, 0.03%)</title><rect x="1185.9" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.9" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (626 samples, 0.03%)</title><rect x="1185.9" y="147.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1188.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (618 samples, 0.03%)</title><rect x="1186.3" y="179.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1189.3" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (618 samples, 0.03%)</title><rect x="1186.3" y="163.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1189.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (618 samples, 0.03%)</title><rect x="1186.3" y="147.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1189.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (618 samples, 0.03%)</title><rect x="1186.3" y="131.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1189.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,201 samples, 0.07%)</title><rect x="1186.7" y="179.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1189.7" y="190.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (605 samples, 0.03%)</title><rect x="1186.7" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1189.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (605 samples, 0.03%)</title><rect x="1186.7" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1189.7" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (605 samples, 0.03%)</title><rect x="1186.7" y="131.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1189.7" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (596 samples, 0.03%)</title><rect x="1187.1" y="163.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1190.1" y="174.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (596 samples, 0.03%)</title><rect x="1187.1" y="147.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1190.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (2,654 samples, 0.15%)</title><rect x="1187.7" y="243.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1190.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,654 samples, 0.15%)</title><rect x="1187.7" y="227.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1190.7" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,654 samples, 0.15%)</title><rect x="1187.7" y="211.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1190.7" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,654 samples, 0.15%)</title><rect x="1187.7" y="195.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1190.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (2,654 samples, 0.15%)</title><rect x="1187.7" y="179.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1190.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,654 samples, 0.15%)</title><rect x="1187.7" y="163.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1190.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (2,654 samples, 0.15%)</title><rect x="1187.7" y="147.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1190.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,654 samples, 0.15%)</title><rect x="1187.7" y="131.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1190.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (2,654 samples, 0.15%)</title><rect x="1187.7" y="115.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1190.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,654 samples, 0.15%)</title><rect x="1187.7" y="99.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1190.7" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,640 samples, 0.15%)</title><rect x="1187.7" y="83.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1190.7" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,640 samples, 0.15%)</title><rect x="1187.7" y="67.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1190.7" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,640 samples, 0.15%)</title><rect x="1187.7" y="51.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1190.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (786 samples, 0.04%)</title><rect x="1189.4" y="371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1192.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (766 samples, 0.04%)</title><rect x="1189.4" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1192.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (766 samples, 0.04%)</title><rect x="1189.4" y="339.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1192.4" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (428 samples, 0.02%)</title><rect x="1189.4" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1192.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (428 samples, 0.02%)</title><rect x="1189.4" y="307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (428 samples, 0.02%)</title><rect x="1189.4" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1192.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (428 samples, 0.02%)</title><rect x="1189.4" y="275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (428 samples, 0.02%)</title><rect x="1189.4" y="259.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$74/1135689667.compare (428 samples, 0.02%)</title><rect x="1189.4" y="243.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (428 samples, 0.02%)</title><rect x="1189.4" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1192.4" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (428 samples, 0.02%)</title><rect x="1189.4" y="211.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1192.4" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (428 samples, 0.02%)</title><rect x="1189.4" y="195.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1192.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$71/873436993.compare (428 samples, 0.02%)</title><rect x="1189.4" y="179.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1192.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (428 samples, 0.02%)</title><rect x="1189.4" y="163.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$69/96515365.compare (428 samples, 0.02%)</title><rect x="1189.4" y="147.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (428 samples, 0.02%)</title><rect x="1189.4" y="131.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$68/1086464857.apply (428 samples, 0.02%)</title><rect x="1189.4" y="115.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (428 samples, 0.02%)</title><rect x="1189.4" y="99.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1192.4" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (428 samples, 0.02%)</title><rect x="1189.4" y="83.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1192.4" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (428 samples, 0.02%)</title><rect x="1189.4" y="67.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.4" y="78.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (428 samples, 0.02%)</title><rect x="1189.4" y="51.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1192.4" y="62.0"></text>
</g>
</g>
</svg>
