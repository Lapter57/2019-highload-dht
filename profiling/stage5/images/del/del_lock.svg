<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="405"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="405"> </text>
<g id="frames">
<g>
<title>all (39,619 samples, 100.00%)</title><rect x="10.0" y="371.0" width="1180.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="13.0" y="382.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=25747] (136 samples, 0.34%)</title><rect x="10.0" y="355.0" width="4.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (136 samples, 0.34%)</title><rect x="10.0" y="339.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (136 samples, 0.34%)</title><rect x="10.0" y="323.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (96 samples, 0.24%)</title><rect x="10.0" y="307.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (96 samples, 0.24%)</title><rect x="10.0" y="291.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (96 samples, 0.24%)</title><rect x="10.0" y="275.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (96 samples, 0.24%)</title><rect x="10.0" y="259.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (96 samples, 0.24%)</title><rect x="10.0" y="243.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (96 samples, 0.24%)</title><rect x="10.0" y="227.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (96 samples, 0.24%)</title><rect x="10.0" y="211.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (96 samples, 0.24%)</title><rect x="10.0" y="195.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (96 samples, 0.24%)</title><rect x="10.0" y="179.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (85 samples, 0.21%)</title><rect x="10.0" y="163.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (85 samples, 0.21%)</title><rect x="10.0" y="147.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (85 samples, 0.21%)</title><rect x="10.0" y="131.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (85 samples, 0.21%)</title><rect x="10.0" y="115.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (85 samples, 0.21%)</title><rect x="10.0" y="99.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (85 samples, 0.21%)</title><rect x="10.0" y="83.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (85 samples, 0.21%)</title><rect x="10.0" y="67.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (85 samples, 0.21%)</title><rect x="10.0" y="51.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.0" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (11 samples, 0.03%)</title><rect x="12.5" y="163.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (11 samples, 0.03%)</title><rect x="12.5" y="147.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="15.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (11 samples, 0.03%)</title><rect x="12.5" y="131.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (11 samples, 0.03%)</title><rect x="12.5" y="115.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11 samples, 0.03%)</title><rect x="12.5" y="99.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 0.03%)</title><rect x="12.5" y="83.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.5" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (11 samples, 0.03%)</title><rect x="12.5" y="67.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="15.5" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (40 samples, 0.10%)</title><rect x="12.9" y="307.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="15.9" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=25757] (119 samples, 0.30%)</title><rect x="14.1" y="355.0" width="3.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="17.1" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (119 samples, 0.30%)</title><rect x="14.1" y="339.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.1" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (119 samples, 0.30%)</title><rect x="14.1" y="323.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (117 samples, 0.30%)</title><rect x="14.1" y="307.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (117 samples, 0.30%)</title><rect x="14.1" y="291.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (117 samples, 0.30%)</title><rect x="14.1" y="275.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (117 samples, 0.30%)</title><rect x="14.1" y="259.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.1" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (117 samples, 0.30%)</title><rect x="14.1" y="243.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (117 samples, 0.30%)</title><rect x="14.1" y="227.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (117 samples, 0.30%)</title><rect x="14.1" y="211.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (117 samples, 0.30%)</title><rect x="14.1" y="195.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (117 samples, 0.30%)</title><rect x="14.1" y="179.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (109 samples, 0.28%)</title><rect x="14.1" y="163.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (109 samples, 0.28%)</title><rect x="14.1" y="147.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (109 samples, 0.28%)</title><rect x="14.1" y="131.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (109 samples, 0.28%)</title><rect x="14.1" y="115.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (109 samples, 0.28%)</title><rect x="14.1" y="99.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (109 samples, 0.28%)</title><rect x="14.1" y="83.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.1" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (109 samples, 0.28%)</title><rect x="14.1" y="67.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.1" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (109 samples, 0.28%)</title><rect x="14.1" y="51.0" width="3.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="17.1" y="62.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=25763] (108 samples, 0.27%)</title><rect x="17.6" y="355.0" width="3.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="20.6" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (108 samples, 0.27%)</title><rect x="17.6" y="339.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="20.6" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (108 samples, 0.27%)</title><rect x="17.6" y="323.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (108 samples, 0.27%)</title><rect x="17.6" y="307.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (108 samples, 0.27%)</title><rect x="17.6" y="291.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (108 samples, 0.27%)</title><rect x="17.6" y="275.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (108 samples, 0.27%)</title><rect x="17.6" y="259.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.6" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (108 samples, 0.27%)</title><rect x="17.6" y="243.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (108 samples, 0.27%)</title><rect x="17.6" y="227.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (108 samples, 0.27%)</title><rect x="17.6" y="211.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (108 samples, 0.27%)</title><rect x="17.6" y="195.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (108 samples, 0.27%)</title><rect x="17.6" y="179.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (92 samples, 0.23%)</title><rect x="17.6" y="163.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="20.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (92 samples, 0.23%)</title><rect x="17.6" y="147.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (92 samples, 0.23%)</title><rect x="17.6" y="131.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (92 samples, 0.23%)</title><rect x="17.6" y="115.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (92 samples, 0.23%)</title><rect x="17.6" y="99.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (92 samples, 0.23%)</title><rect x="17.6" y="83.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="20.6" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (92 samples, 0.23%)</title><rect x="17.6" y="67.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.6" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (92 samples, 0.23%)</title><rect x="17.6" y="51.0" width="2.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="20.6" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (16 samples, 0.04%)</title><rect x="20.3" y="163.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (16 samples, 0.04%)</title><rect x="20.3" y="147.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (16 samples, 0.04%)</title><rect x="20.3" y="131.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (16 samples, 0.04%)</title><rect x="20.3" y="115.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (16 samples, 0.04%)</title><rect x="20.3" y="99.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (16 samples, 0.04%)</title><rect x="20.3" y="83.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.3" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (16 samples, 0.04%)</title><rect x="20.3" y="67.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="23.3" y="78.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25748] (156 samples, 0.39%)</title><rect x="20.8" y="355.0" width="4.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="23.8" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (156 samples, 0.39%)</title><rect x="20.8" y="339.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.8" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (156 samples, 0.39%)</title><rect x="20.8" y="323.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (108 samples, 0.27%)</title><rect x="20.8" y="307.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (108 samples, 0.27%)</title><rect x="20.8" y="291.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (108 samples, 0.27%)</title><rect x="20.8" y="275.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (108 samples, 0.27%)</title><rect x="20.8" y="259.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.8" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (108 samples, 0.27%)</title><rect x="20.8" y="243.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (108 samples, 0.27%)</title><rect x="20.8" y="227.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="23.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (108 samples, 0.27%)</title><rect x="20.8" y="211.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (108 samples, 0.27%)</title><rect x="20.8" y="195.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (108 samples, 0.27%)</title><rect x="20.8" y="179.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (100 samples, 0.25%)</title><rect x="20.8" y="163.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (100 samples, 0.25%)</title><rect x="20.8" y="147.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (100 samples, 0.25%)</title><rect x="20.8" y="131.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (100 samples, 0.25%)</title><rect x="20.8" y="115.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (100 samples, 0.25%)</title><rect x="20.8" y="99.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (100 samples, 0.25%)</title><rect x="20.8" y="83.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.8" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (100 samples, 0.25%)</title><rect x="20.8" y="67.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.8" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (100 samples, 0.25%)</title><rect x="20.8" y="51.0" width="3.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="23.8" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (48 samples, 0.12%)</title><rect x="24.0" y="307.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="27.0" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25758] (205 samples, 0.52%)</title><rect x="25.5" y="355.0" width="6.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="28.5" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (205 samples, 0.52%)</title><rect x="25.5" y="339.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.5" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (205 samples, 0.52%)</title><rect x="25.5" y="323.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (200 samples, 0.50%)</title><rect x="25.5" y="307.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="28.5" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (200 samples, 0.50%)</title><rect x="25.5" y="291.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (200 samples, 0.50%)</title><rect x="25.5" y="275.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="28.5" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (200 samples, 0.50%)</title><rect x="25.5" y="259.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="28.5" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (200 samples, 0.50%)</title><rect x="25.5" y="243.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="28.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (200 samples, 0.50%)</title><rect x="25.5" y="227.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="28.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (200 samples, 0.50%)</title><rect x="25.5" y="211.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="28.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (200 samples, 0.50%)</title><rect x="25.5" y="195.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="28.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (200 samples, 0.50%)</title><rect x="25.5" y="179.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (186 samples, 0.47%)</title><rect x="25.5" y="163.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="28.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (186 samples, 0.47%)</title><rect x="25.5" y="147.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="28.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (186 samples, 0.47%)</title><rect x="25.5" y="131.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="28.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (186 samples, 0.47%)</title><rect x="25.5" y="115.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="28.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (186 samples, 0.47%)</title><rect x="25.5" y="99.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (186 samples, 0.47%)</title><rect x="25.5" y="83.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="28.5" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (186 samples, 0.47%)</title><rect x="25.5" y="67.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="28.5" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (186 samples, 0.47%)</title><rect x="25.5" y="51.0" width="5.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="28.5" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (14 samples, 0.04%)</title><rect x="31.0" y="163.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (14 samples, 0.04%)</title><rect x="31.0" y="147.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (14 samples, 0.04%)</title><rect x="31.0" y="131.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (14 samples, 0.04%)</title><rect x="31.0" y="115.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="34.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (14 samples, 0.04%)</title><rect x="31.0" y="99.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (14 samples, 0.04%)</title><rect x="31.0" y="83.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.0" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (14 samples, 0.04%)</title><rect x="31.0" y="67.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="34.0" y="78.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25764] (96 samples, 0.24%)</title><rect x="31.6" y="355.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="34.6" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (96 samples, 0.24%)</title><rect x="31.6" y="339.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="34.6" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (96 samples, 0.24%)</title><rect x="31.6" y="323.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (94 samples, 0.24%)</title><rect x="31.6" y="307.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (94 samples, 0.24%)</title><rect x="31.6" y="291.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (94 samples, 0.24%)</title><rect x="31.6" y="275.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (94 samples, 0.24%)</title><rect x="31.6" y="259.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="34.6" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (94 samples, 0.24%)</title><rect x="31.6" y="243.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (94 samples, 0.24%)</title><rect x="31.6" y="227.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (94 samples, 0.24%)</title><rect x="31.6" y="211.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (94 samples, 0.24%)</title><rect x="31.6" y="195.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (94 samples, 0.24%)</title><rect x="31.6" y="179.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="34.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (75 samples, 0.19%)</title><rect x="31.6" y="163.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="34.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (75 samples, 0.19%)</title><rect x="31.6" y="147.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="34.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (75 samples, 0.19%)</title><rect x="31.6" y="131.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (75 samples, 0.19%)</title><rect x="31.6" y="115.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (75 samples, 0.19%)</title><rect x="31.6" y="99.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="34.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (75 samples, 0.19%)</title><rect x="31.6" y="83.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.6" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (75 samples, 0.19%)</title><rect x="31.6" y="67.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.6" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (75 samples, 0.19%)</title><rect x="31.6" y="51.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="34.6" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (19 samples, 0.05%)</title><rect x="33.8" y="163.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="36.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (19 samples, 0.05%)</title><rect x="33.8" y="147.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="36.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (19 samples, 0.05%)</title><rect x="33.8" y="131.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (19 samples, 0.05%)</title><rect x="33.8" y="115.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="36.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (19 samples, 0.05%)</title><rect x="33.8" y="99.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="36.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (19 samples, 0.05%)</title><rect x="33.8" y="83.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="36.8" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (19 samples, 0.05%)</title><rect x="33.8" y="67.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="36.8" y="78.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25749] (135 samples, 0.34%)</title><rect x="34.4" y="355.0" width="4.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="37.4" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (135 samples, 0.34%)</title><rect x="34.4" y="339.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="37.4" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (135 samples, 0.34%)</title><rect x="34.4" y="323.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (96 samples, 0.24%)</title><rect x="34.4" y="307.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (96 samples, 0.24%)</title><rect x="34.4" y="291.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="37.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (96 samples, 0.24%)</title><rect x="34.4" y="275.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (96 samples, 0.24%)</title><rect x="34.4" y="259.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.4" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (96 samples, 0.24%)</title><rect x="34.4" y="243.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="37.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (96 samples, 0.24%)</title><rect x="34.4" y="227.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="37.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (96 samples, 0.24%)</title><rect x="34.4" y="211.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="37.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (96 samples, 0.24%)</title><rect x="34.4" y="195.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (96 samples, 0.24%)</title><rect x="34.4" y="179.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (89 samples, 0.22%)</title><rect x="34.4" y="163.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (89 samples, 0.22%)</title><rect x="34.4" y="147.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (89 samples, 0.22%)</title><rect x="34.4" y="131.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="37.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (89 samples, 0.22%)</title><rect x="34.4" y="115.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="37.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (89 samples, 0.22%)</title><rect x="34.4" y="99.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (89 samples, 0.22%)</title><rect x="34.4" y="83.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="37.4" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (89 samples, 0.22%)</title><rect x="34.4" y="67.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.4" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (89 samples, 0.22%)</title><rect x="34.4" y="51.0" width="2.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="37.4" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (39 samples, 0.10%)</title><rect x="37.3" y="307.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="40.3" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25759] (247 samples, 0.62%)</title><rect x="38.4" y="355.0" width="7.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="41.4" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (247 samples, 0.62%)</title><rect x="38.4" y="339.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.4" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (247 samples, 0.62%)</title><rect x="38.4" y="323.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (240 samples, 0.61%)</title><rect x="38.4" y="307.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (240 samples, 0.61%)</title><rect x="38.4" y="291.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="41.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (240 samples, 0.61%)</title><rect x="38.4" y="275.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (240 samples, 0.61%)</title><rect x="38.4" y="259.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.4" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (240 samples, 0.61%)</title><rect x="38.4" y="243.0" width="7.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (240 samples, 0.61%)</title><rect x="38.4" y="227.0" width="7.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="41.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (240 samples, 0.61%)</title><rect x="38.4" y="211.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (240 samples, 0.61%)</title><rect x="38.4" y="195.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (240 samples, 0.61%)</title><rect x="38.4" y="179.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="41.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (217 samples, 0.55%)</title><rect x="38.4" y="163.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="41.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (217 samples, 0.55%)</title><rect x="38.4" y="147.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (217 samples, 0.55%)</title><rect x="38.4" y="131.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (217 samples, 0.55%)</title><rect x="38.4" y="115.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="41.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (217 samples, 0.55%)</title><rect x="38.4" y="99.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (217 samples, 0.55%)</title><rect x="38.4" y="83.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.4" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (217 samples, 0.55%)</title><rect x="38.4" y="67.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="41.4" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (217 samples, 0.55%)</title><rect x="38.4" y="51.0" width="6.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="41.4" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (23 samples, 0.06%)</title><rect x="44.9" y="163.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (23 samples, 0.06%)</title><rect x="44.9" y="147.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (23 samples, 0.06%)</title><rect x="44.9" y="131.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (23 samples, 0.06%)</title><rect x="44.9" y="115.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (23 samples, 0.06%)</title><rect x="44.9" y="99.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (23 samples, 0.06%)</title><rect x="44.9" y="83.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.9" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (23 samples, 0.06%)</title><rect x="44.9" y="67.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="47.9" y="78.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25765] (212 samples, 0.54%)</title><rect x="45.8" y="355.0" width="6.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="48.8" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (212 samples, 0.54%)</title><rect x="45.8" y="339.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="48.8" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (212 samples, 0.54%)</title><rect x="45.8" y="323.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (207 samples, 0.52%)</title><rect x="45.8" y="307.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (207 samples, 0.52%)</title><rect x="45.8" y="291.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (207 samples, 0.52%)</title><rect x="45.8" y="275.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (207 samples, 0.52%)</title><rect x="45.8" y="259.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.8" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (207 samples, 0.52%)</title><rect x="45.8" y="243.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="48.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (207 samples, 0.52%)</title><rect x="45.8" y="227.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (207 samples, 0.52%)</title><rect x="45.8" y="211.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="48.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (207 samples, 0.52%)</title><rect x="45.8" y="195.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (207 samples, 0.52%)</title><rect x="45.8" y="179.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (181 samples, 0.46%)</title><rect x="45.8" y="163.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (181 samples, 0.46%)</title><rect x="45.8" y="147.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (181 samples, 0.46%)</title><rect x="45.8" y="131.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (181 samples, 0.46%)</title><rect x="45.8" y="115.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (181 samples, 0.46%)</title><rect x="45.8" y="99.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (181 samples, 0.46%)</title><rect x="45.8" y="83.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.8" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (181 samples, 0.46%)</title><rect x="45.8" y="67.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.8" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (181 samples, 0.46%)</title><rect x="45.8" y="51.0" width="5.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="48.8" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (26 samples, 0.07%)</title><rect x="51.2" y="163.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (26 samples, 0.07%)</title><rect x="51.2" y="147.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (26 samples, 0.07%)</title><rect x="51.2" y="131.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (26 samples, 0.07%)</title><rect x="51.2" y="115.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (26 samples, 0.07%)</title><rect x="51.2" y="99.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.2" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (26 samples, 0.07%)</title><rect x="51.2" y="83.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.2" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (26 samples, 0.07%)</title><rect x="51.2" y="67.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="54.2" y="78.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25750] (118 samples, 0.30%)</title><rect x="52.1" y="355.0" width="3.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="55.1" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (118 samples, 0.30%)</title><rect x="52.1" y="339.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.1" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (118 samples, 0.30%)</title><rect x="52.1" y="323.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.1" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (74 samples, 0.19%)</title><rect x="52.1" y="307.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.1" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (74 samples, 0.19%)</title><rect x="52.1" y="291.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (74 samples, 0.19%)</title><rect x="52.1" y="275.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="55.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (74 samples, 0.19%)</title><rect x="52.1" y="259.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.1" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (74 samples, 0.19%)</title><rect x="52.1" y="243.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (74 samples, 0.19%)</title><rect x="52.1" y="227.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="55.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (74 samples, 0.19%)</title><rect x="52.1" y="211.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (74 samples, 0.19%)</title><rect x="52.1" y="195.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (74 samples, 0.19%)</title><rect x="52.1" y="179.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (71 samples, 0.18%)</title><rect x="52.1" y="163.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="55.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (71 samples, 0.18%)</title><rect x="52.1" y="147.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (71 samples, 0.18%)</title><rect x="52.1" y="131.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (71 samples, 0.18%)</title><rect x="52.1" y="115.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (71 samples, 0.18%)</title><rect x="52.1" y="99.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="55.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (71 samples, 0.18%)</title><rect x="52.1" y="83.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="55.1" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (71 samples, 0.18%)</title><rect x="52.1" y="67.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="55.1" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (71 samples, 0.18%)</title><rect x="52.1" y="51.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="55.1" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (44 samples, 0.11%)</title><rect x="54.3" y="307.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="57.3" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25766] (92 samples, 0.23%)</title><rect x="55.6" y="355.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="58.6" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (92 samples, 0.23%)</title><rect x="55.6" y="339.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.6" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (92 samples, 0.23%)</title><rect x="55.6" y="323.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (91 samples, 0.23%)</title><rect x="55.6" y="307.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (91 samples, 0.23%)</title><rect x="55.6" y="291.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (91 samples, 0.23%)</title><rect x="55.6" y="275.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="58.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (91 samples, 0.23%)</title><rect x="55.6" y="259.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.6" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (91 samples, 0.23%)</title><rect x="55.6" y="243.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="58.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (91 samples, 0.23%)</title><rect x="55.6" y="227.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (91 samples, 0.23%)</title><rect x="55.6" y="211.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="58.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (91 samples, 0.23%)</title><rect x="55.6" y="195.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (91 samples, 0.23%)</title><rect x="55.6" y="179.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="58.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (79 samples, 0.20%)</title><rect x="55.6" y="163.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="58.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (79 samples, 0.20%)</title><rect x="55.6" y="147.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="58.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (79 samples, 0.20%)</title><rect x="55.6" y="131.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="58.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (79 samples, 0.20%)</title><rect x="55.6" y="115.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (79 samples, 0.20%)</title><rect x="55.6" y="99.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (79 samples, 0.20%)</title><rect x="55.6" y="83.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.6" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (79 samples, 0.20%)</title><rect x="55.6" y="67.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="58.6" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (79 samples, 0.20%)</title><rect x="55.6" y="51.0" width="2.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="58.6" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (12 samples, 0.03%)</title><rect x="58.0" y="163.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="61.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (12 samples, 0.03%)</title><rect x="58.0" y="147.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (12 samples, 0.03%)</title><rect x="58.0" y="131.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (12 samples, 0.03%)</title><rect x="58.0" y="115.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.03%)</title><rect x="58.0" y="99.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.03%)</title><rect x="58.0" y="83.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.0" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (12 samples, 0.03%)</title><rect x="58.0" y="67.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="61.0" y="78.0"></text>
</g>
<g>
<title>[proxy-worker-0 tid=25855] (2,846 samples, 7.18%)</title><rect x="58.4" y="355.0" width="84.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="61.4" y="366.0">[proxy-wor..</text>
</g>
<g>
<title>java/lang/Thread.run (2,846 samples, 7.18%)</title><rect x="58.4" y="339.0" width="84.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.4" y="350.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,846 samples, 7.18%)</title><rect x="58.4" y="323.0" width="84.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.4" y="334.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,846 samples, 7.18%)</title><rect x="58.4" y="307.0" width="84.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.4" y="318.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1,435 samples, 3.62%)</title><rect x="58.4" y="291.0" width="42.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="61.4" y="302.0">java..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (327 samples, 0.83%)</title><rect x="58.4" y="275.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (327 samples, 0.83%)</title><rect x="58.4" y="259.0" width="9.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (327 samples, 0.83%)</title><rect x="58.4" y="243.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (327 samples, 0.83%)</title><rect x="58.4" y="227.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (327 samples, 0.83%)</title><rect x="58.4" y="211.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="61.4" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (327 samples, 0.83%)</title><rect x="58.4" y="195.0" width="9.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.4" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (327 samples, 0.83%)</title><rect x="58.4" y="179.0" width="9.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.4" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (170 samples, 0.43%)</title><rect x="58.4" y="163.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.4" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (170 samples, 0.43%)</title><rect x="58.4" y="147.0" width="5.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="61.4" y="158.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (157 samples, 0.40%)</title><rect x="63.4" y="163.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="66.4" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (157 samples, 0.40%)</title><rect x="63.4" y="147.0" width="4.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="66.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (1,108 samples, 2.80%)</title><rect x="68.1" y="275.0" width="33.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="71.1" y="286.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (1,108 samples, 2.80%)</title><rect x="68.1" y="259.0" width="33.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.1" y="270.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (1,108 samples, 2.80%)</title><rect x="68.1" y="243.0" width="33.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="71.1" y="254.0">ja..</text>
</g>
<g>
<title>java/util/AbstractQueue.add (1,108 samples, 2.80%)</title><rect x="68.1" y="227.0" width="33.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.1" y="238.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,108 samples, 2.80%)</title><rect x="68.1" y="211.0" width="33.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.1" y="222.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (662 samples, 1.67%)</title><rect x="68.1" y="195.0" width="19.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (662 samples, 1.67%)</title><rect x="68.1" y="179.0" width="19.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (662 samples, 1.67%)</title><rect x="68.1" y="163.0" width="19.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (662 samples, 1.67%)</title><rect x="68.1" y="147.0" width="19.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (662 samples, 1.67%)</title><rect x="68.1" y="131.0" width="19.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (662 samples, 1.67%)</title><rect x="68.1" y="115.0" width="19.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (662 samples, 1.67%)</title><rect x="68.1" y="99.0" width="19.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.1" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (662 samples, 1.67%)</title><rect x="68.1" y="83.0" width="19.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="71.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (446 samples, 1.13%)</title><rect x="87.8" y="195.0" width="13.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (446 samples, 1.13%)</title><rect x="87.8" y="179.0" width="13.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (446 samples, 1.13%)</title><rect x="87.8" y="163.0" width="13.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (446 samples, 1.13%)</title><rect x="87.8" y="147.0" width="13.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="90.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (446 samples, 1.13%)</title><rect x="87.8" y="131.0" width="13.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (446 samples, 1.13%)</title><rect x="87.8" y="115.0" width="13.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="90.8" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (446 samples, 1.13%)</title><rect x="87.8" y="99.0" width="13.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="90.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,411 samples, 3.56%)</title><rect x="101.1" y="291.0" width="42.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.1" y="302.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,411 samples, 3.56%)</title><rect x="101.1" y="275.0" width="42.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.1" y="286.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (201 samples, 0.51%)</title><rect x="101.1" y="259.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (201 samples, 0.51%)</title><rect x="101.1" y="243.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (201 samples, 0.51%)</title><rect x="101.1" y="227.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (201 samples, 0.51%)</title><rect x="101.1" y="211.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (201 samples, 0.51%)</title><rect x="101.1" y="195.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (201 samples, 0.51%)</title><rect x="101.1" y="179.0" width="6.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="104.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,210 samples, 3.05%)</title><rect x="107.1" y="259.0" width="36.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.1" y="270.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,210 samples, 3.05%)</title><rect x="107.1" y="243.0" width="36.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="110.1" y="254.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,210 samples, 3.05%)</title><rect x="107.1" y="227.0" width="36.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.1" y="238.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,210 samples, 3.05%)</title><rect x="107.1" y="211.0" width="36.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.1" y="222.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,210 samples, 3.05%)</title><rect x="107.1" y="195.0" width="36.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="110.1" y="206.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,210 samples, 3.05%)</title><rect x="107.1" y="179.0" width="36.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="110.1" y="190.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,210 samples, 3.05%)</title><rect x="107.1" y="163.0" width="36.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="110.1" y="174.0">jav..</text>
</g>
<g>
<title>[proxy-worker-1 tid=25856] (2,918 samples, 7.37%)</title><rect x="143.1" y="355.0" width="86.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="146.1" y="366.0">[proxy-wor..</text>
</g>
<g>
<title>java/lang/Thread.run (2,918 samples, 7.37%)</title><rect x="143.1" y="339.0" width="86.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.1" y="350.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,918 samples, 7.37%)</title><rect x="143.1" y="323.0" width="86.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.1" y="334.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,918 samples, 7.37%)</title><rect x="143.1" y="307.0" width="86.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.1" y="318.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1,496 samples, 3.78%)</title><rect x="143.1" y="291.0" width="44.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.1" y="302.0">java..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (332 samples, 0.84%)</title><rect x="143.1" y="275.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (332 samples, 0.84%)</title><rect x="143.1" y="259.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (332 samples, 0.84%)</title><rect x="143.1" y="243.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="146.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (332 samples, 0.84%)</title><rect x="143.1" y="227.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="146.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (332 samples, 0.84%)</title><rect x="143.1" y="211.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (332 samples, 0.84%)</title><rect x="143.1" y="195.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.1" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (332 samples, 0.84%)</title><rect x="143.1" y="179.0" width="9.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.1" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (169 samples, 0.43%)</title><rect x="143.1" y="163.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.1" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (169 samples, 0.43%)</title><rect x="143.1" y="147.0" width="5.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="146.1" y="158.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (163 samples, 0.41%)</title><rect x="148.2" y="163.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.2" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (163 samples, 0.41%)</title><rect x="148.2" y="147.0" width="4.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="151.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (1,164 samples, 2.94%)</title><rect x="153.0" y="275.0" width="34.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.0" y="286.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (1,164 samples, 2.94%)</title><rect x="153.0" y="259.0" width="34.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="156.0" y="270.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (1,164 samples, 2.94%)</title><rect x="153.0" y="243.0" width="34.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.0" y="254.0">ja..</text>
</g>
<g>
<title>java/util/AbstractQueue.add (1,164 samples, 2.94%)</title><rect x="153.0" y="227.0" width="34.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.0" y="238.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,164 samples, 2.94%)</title><rect x="153.0" y="211.0" width="34.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.0" y="222.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (692 samples, 1.75%)</title><rect x="153.0" y="195.0" width="20.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (692 samples, 1.75%)</title><rect x="153.0" y="179.0" width="20.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (692 samples, 1.75%)</title><rect x="153.0" y="163.0" width="20.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (692 samples, 1.75%)</title><rect x="153.0" y="147.0" width="20.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (692 samples, 1.75%)</title><rect x="153.0" y="131.0" width="20.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="156.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (692 samples, 1.75%)</title><rect x="153.0" y="115.0" width="20.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (692 samples, 1.75%)</title><rect x="153.0" y="99.0" width="20.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="156.0" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (692 samples, 1.75%)</title><rect x="153.0" y="83.0" width="20.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="156.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (472 samples, 1.19%)</title><rect x="173.6" y="195.0" width="14.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (472 samples, 1.19%)</title><rect x="173.6" y="179.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (472 samples, 1.19%)</title><rect x="173.6" y="163.0" width="14.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="176.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (472 samples, 1.19%)</title><rect x="173.6" y="147.0" width="14.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="176.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (472 samples, 1.19%)</title><rect x="173.6" y="131.0" width="14.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="176.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (472 samples, 1.19%)</title><rect x="173.6" y="115.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="176.6" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (472 samples, 1.19%)</title><rect x="173.6" y="99.0" width="14.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="176.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,422 samples, 3.59%)</title><rect x="187.7" y="291.0" width="42.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="190.7" y="302.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,422 samples, 3.59%)</title><rect x="187.7" y="275.0" width="42.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.7" y="286.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (195 samples, 0.49%)</title><rect x="187.7" y="259.0" width="5.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (195 samples, 0.49%)</title><rect x="187.7" y="243.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (195 samples, 0.49%)</title><rect x="187.7" y="227.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="190.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (195 samples, 0.49%)</title><rect x="187.7" y="211.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="190.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (195 samples, 0.49%)</title><rect x="187.7" y="195.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.7" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (195 samples, 0.49%)</title><rect x="187.7" y="179.0" width="5.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="190.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,227 samples, 3.10%)</title><rect x="193.5" y="259.0" width="36.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="196.5" y="270.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,227 samples, 3.10%)</title><rect x="193.5" y="243.0" width="36.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="196.5" y="254.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,227 samples, 3.10%)</title><rect x="193.5" y="227.0" width="36.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.5" y="238.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,227 samples, 3.10%)</title><rect x="193.5" y="211.0" width="36.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="196.5" y="222.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,227 samples, 3.10%)</title><rect x="193.5" y="195.0" width="36.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.5" y="206.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,227 samples, 3.10%)</title><rect x="193.5" y="179.0" width="36.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="196.5" y="190.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,227 samples, 3.10%)</title><rect x="193.5" y="163.0" width="36.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="196.5" y="174.0">jav..</text>
</g>
<g>
<title>[proxy-worker-2 tid=25860] (2,848 samples, 7.19%)</title><rect x="230.0" y="355.0" width="84.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="233.0" y="366.0">[proxy-wor..</text>
</g>
<g>
<title>java/lang/Thread.run (2,848 samples, 7.19%)</title><rect x="230.0" y="339.0" width="84.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="233.0" y="350.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,848 samples, 7.19%)</title><rect x="230.0" y="323.0" width="84.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="233.0" y="334.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,848 samples, 7.19%)</title><rect x="230.0" y="307.0" width="84.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="233.0" y="318.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1,478 samples, 3.73%)</title><rect x="230.0" y="291.0" width="44.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="233.0" y="302.0">java..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (332 samples, 0.84%)</title><rect x="230.0" y="275.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="233.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (332 samples, 0.84%)</title><rect x="230.0" y="259.0" width="9.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="233.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (332 samples, 0.84%)</title><rect x="230.0" y="243.0" width="9.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="233.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (332 samples, 0.84%)</title><rect x="230.0" y="227.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="233.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (332 samples, 0.84%)</title><rect x="230.0" y="211.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="233.0" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (332 samples, 0.84%)</title><rect x="230.0" y="195.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="233.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (332 samples, 0.84%)</title><rect x="230.0" y="179.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="233.0" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (168 samples, 0.42%)</title><rect x="230.0" y="163.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="233.0" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (168 samples, 0.42%)</title><rect x="230.0" y="147.0" width="5.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="233.0" y="158.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (164 samples, 0.41%)</title><rect x="235.0" y="163.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="238.0" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (164 samples, 0.41%)</title><rect x="235.0" y="147.0" width="4.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="238.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (1,146 samples, 2.89%)</title><rect x="239.9" y="275.0" width="34.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="242.9" y="286.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (1,146 samples, 2.89%)</title><rect x="239.9" y="259.0" width="34.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.9" y="270.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (1,146 samples, 2.89%)</title><rect x="239.9" y="243.0" width="34.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="242.9" y="254.0">ja..</text>
</g>
<g>
<title>java/util/AbstractQueue.add (1,146 samples, 2.89%)</title><rect x="239.9" y="227.0" width="34.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="242.9" y="238.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,146 samples, 2.89%)</title><rect x="239.9" y="211.0" width="34.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.9" y="222.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (702 samples, 1.77%)</title><rect x="239.9" y="195.0" width="20.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (702 samples, 1.77%)</title><rect x="239.9" y="179.0" width="20.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="242.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (702 samples, 1.77%)</title><rect x="239.9" y="163.0" width="20.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="242.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (702 samples, 1.77%)</title><rect x="239.9" y="147.0" width="20.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="242.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (702 samples, 1.77%)</title><rect x="239.9" y="131.0" width="20.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="242.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (702 samples, 1.77%)</title><rect x="239.9" y="115.0" width="20.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="242.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (702 samples, 1.77%)</title><rect x="239.9" y="99.0" width="20.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="242.9" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (702 samples, 1.77%)</title><rect x="239.9" y="83.0" width="20.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="242.9" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (444 samples, 1.12%)</title><rect x="260.8" y="195.0" width="13.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="263.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (444 samples, 1.12%)</title><rect x="260.8" y="179.0" width="13.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (444 samples, 1.12%)</title><rect x="260.8" y="163.0" width="13.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="263.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (444 samples, 1.12%)</title><rect x="260.8" y="147.0" width="13.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="263.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (444 samples, 1.12%)</title><rect x="260.8" y="131.0" width="13.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="263.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (444 samples, 1.12%)</title><rect x="260.8" y="115.0" width="13.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="263.8" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (444 samples, 1.12%)</title><rect x="260.8" y="99.0" width="13.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="263.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,370 samples, 3.46%)</title><rect x="274.1" y="291.0" width="40.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="277.1" y="302.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,370 samples, 3.46%)</title><rect x="274.1" y="275.0" width="40.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="277.1" y="286.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (213 samples, 0.54%)</title><rect x="274.1" y="259.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (213 samples, 0.54%)</title><rect x="274.1" y="243.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="277.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (213 samples, 0.54%)</title><rect x="274.1" y="227.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="277.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (213 samples, 0.54%)</title><rect x="274.1" y="211.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (213 samples, 0.54%)</title><rect x="274.1" y="195.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="277.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (213 samples, 0.54%)</title><rect x="274.1" y="179.0" width="6.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="277.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,157 samples, 2.92%)</title><rect x="280.4" y="259.0" width="34.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.4" y="270.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,157 samples, 2.92%)</title><rect x="280.4" y="243.0" width="34.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="283.4" y="254.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,157 samples, 2.92%)</title><rect x="280.4" y="227.0" width="34.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="283.4" y="238.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,157 samples, 2.92%)</title><rect x="280.4" y="211.0" width="34.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="283.4" y="222.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,157 samples, 2.92%)</title><rect x="280.4" y="195.0" width="34.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.4" y="206.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,157 samples, 2.92%)</title><rect x="280.4" y="179.0" width="34.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="283.4" y="190.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,157 samples, 2.92%)</title><rect x="280.4" y="163.0" width="34.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="283.4" y="174.0">ja..</text>
</g>
<g>
<title>[proxy-worker-3 tid=25858] (2,840 samples, 7.17%)</title><rect x="314.9" y="355.0" width="84.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="317.9" y="366.0">[proxy-wor..</text>
</g>
<g>
<title>java/lang/Thread.run (2,840 samples, 7.17%)</title><rect x="314.9" y="339.0" width="84.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.9" y="350.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,840 samples, 7.17%)</title><rect x="314.9" y="323.0" width="84.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="317.9" y="334.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,840 samples, 7.17%)</title><rect x="314.9" y="307.0" width="84.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="317.9" y="318.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1,392 samples, 3.51%)</title><rect x="314.9" y="291.0" width="41.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.9" y="302.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (316 samples, 0.80%)</title><rect x="314.9" y="275.0" width="9.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="317.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (316 samples, 0.80%)</title><rect x="314.9" y="259.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="317.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (316 samples, 0.80%)</title><rect x="314.9" y="243.0" width="9.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="317.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (316 samples, 0.80%)</title><rect x="314.9" y="227.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="317.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (316 samples, 0.80%)</title><rect x="314.9" y="211.0" width="9.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="317.9" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (316 samples, 0.80%)</title><rect x="314.9" y="195.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.9" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (316 samples, 0.80%)</title><rect x="314.9" y="179.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="317.9" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (156 samples, 0.39%)</title><rect x="314.9" y="163.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.9" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (156 samples, 0.39%)</title><rect x="314.9" y="147.0" width="4.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="317.9" y="158.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (160 samples, 0.40%)</title><rect x="319.5" y="163.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="322.5" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (160 samples, 0.40%)</title><rect x="319.5" y="147.0" width="4.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="322.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (1,076 samples, 2.72%)</title><rect x="324.3" y="275.0" width="32.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="327.3" y="286.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (1,076 samples, 2.72%)</title><rect x="324.3" y="259.0" width="32.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="327.3" y="270.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (1,076 samples, 2.72%)</title><rect x="324.3" y="243.0" width="32.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="327.3" y="254.0">ja..</text>
</g>
<g>
<title>java/util/AbstractQueue.add (1,076 samples, 2.72%)</title><rect x="324.3" y="227.0" width="32.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="327.3" y="238.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,076 samples, 2.72%)</title><rect x="324.3" y="211.0" width="32.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="327.3" y="222.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (647 samples, 1.63%)</title><rect x="324.3" y="195.0" width="19.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="327.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (647 samples, 1.63%)</title><rect x="324.3" y="179.0" width="19.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="327.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (647 samples, 1.63%)</title><rect x="324.3" y="163.0" width="19.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="327.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (647 samples, 1.63%)</title><rect x="324.3" y="147.0" width="19.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="327.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (647 samples, 1.63%)</title><rect x="324.3" y="131.0" width="19.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="327.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (647 samples, 1.63%)</title><rect x="324.3" y="115.0" width="19.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="327.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (647 samples, 1.63%)</title><rect x="324.3" y="99.0" width="19.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="327.3" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (647 samples, 1.63%)</title><rect x="324.3" y="83.0" width="19.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="327.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (429 samples, 1.08%)</title><rect x="343.5" y="195.0" width="12.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="346.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (429 samples, 1.08%)</title><rect x="343.5" y="179.0" width="12.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="346.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (429 samples, 1.08%)</title><rect x="343.5" y="163.0" width="12.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (429 samples, 1.08%)</title><rect x="343.5" y="147.0" width="12.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="346.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (429 samples, 1.08%)</title><rect x="343.5" y="131.0" width="12.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="346.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (429 samples, 1.08%)</title><rect x="343.5" y="115.0" width="12.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="346.5" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (429 samples, 1.08%)</title><rect x="343.5" y="99.0" width="12.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="346.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,448 samples, 3.65%)</title><rect x="356.3" y="291.0" width="43.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="359.3" y="302.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,448 samples, 3.65%)</title><rect x="356.3" y="275.0" width="43.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="359.3" y="286.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (210 samples, 0.53%)</title><rect x="356.3" y="259.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (210 samples, 0.53%)</title><rect x="356.3" y="243.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="359.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (210 samples, 0.53%)</title><rect x="356.3" y="227.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="359.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (210 samples, 0.53%)</title><rect x="356.3" y="211.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="359.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (210 samples, 0.53%)</title><rect x="356.3" y="195.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="359.3" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (210 samples, 0.53%)</title><rect x="356.3" y="179.0" width="6.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="359.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,238 samples, 3.12%)</title><rect x="362.6" y="259.0" width="36.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="365.6" y="270.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,238 samples, 3.12%)</title><rect x="362.6" y="243.0" width="36.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="365.6" y="254.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,238 samples, 3.12%)</title><rect x="362.6" y="227.0" width="36.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="365.6" y="238.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,238 samples, 3.12%)</title><rect x="362.6" y="211.0" width="36.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="365.6" y="222.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,238 samples, 3.12%)</title><rect x="362.6" y="195.0" width="36.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="365.6" y="206.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,238 samples, 3.12%)</title><rect x="362.6" y="179.0" width="36.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="365.6" y="190.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,238 samples, 3.12%)</title><rect x="362.6" y="163.0" width="36.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="365.6" y="174.0">jav..</text>
</g>
<g>
<title>[proxy-worker-4 tid=25859] (2,879 samples, 7.27%)</title><rect x="399.5" y="355.0" width="85.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="402.5" y="366.0">[proxy-wor..</text>
</g>
<g>
<title>java/lang/Thread.run (2,879 samples, 7.27%)</title><rect x="399.5" y="339.0" width="85.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="402.5" y="350.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,879 samples, 7.27%)</title><rect x="399.5" y="323.0" width="85.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="402.5" y="334.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,879 samples, 7.27%)</title><rect x="399.5" y="307.0" width="85.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="402.5" y="318.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1,449 samples, 3.66%)</title><rect x="399.5" y="291.0" width="43.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="402.5" y="302.0">java..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (301 samples, 0.76%)</title><rect x="399.5" y="275.0" width="8.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="402.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (301 samples, 0.76%)</title><rect x="399.5" y="259.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (301 samples, 0.76%)</title><rect x="399.5" y="243.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="402.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (301 samples, 0.76%)</title><rect x="399.5" y="227.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (301 samples, 0.76%)</title><rect x="399.5" y="211.0" width="8.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="402.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (301 samples, 0.76%)</title><rect x="399.5" y="195.0" width="8.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="402.5" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (301 samples, 0.76%)</title><rect x="399.5" y="179.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="402.5" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (141 samples, 0.36%)</title><rect x="399.5" y="163.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.5" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (141 samples, 0.36%)</title><rect x="399.5" y="147.0" width="4.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="402.5" y="158.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (160 samples, 0.40%)</title><rect x="403.7" y="163.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="406.7" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (160 samples, 0.40%)</title><rect x="403.7" y="147.0" width="4.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="406.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (1,148 samples, 2.90%)</title><rect x="408.4" y="275.0" width="34.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.4" y="286.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (1,148 samples, 2.90%)</title><rect x="408.4" y="259.0" width="34.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="411.4" y="270.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (1,148 samples, 2.90%)</title><rect x="408.4" y="243.0" width="34.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="411.4" y="254.0">ja..</text>
</g>
<g>
<title>java/util/AbstractQueue.add (1,148 samples, 2.90%)</title><rect x="408.4" y="227.0" width="34.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.4" y="238.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,148 samples, 2.90%)</title><rect x="408.4" y="211.0" width="34.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="411.4" y="222.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (661 samples, 1.67%)</title><rect x="408.4" y="195.0" width="19.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="411.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (661 samples, 1.67%)</title><rect x="408.4" y="179.0" width="19.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (661 samples, 1.67%)</title><rect x="408.4" y="163.0" width="19.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="411.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (661 samples, 1.67%)</title><rect x="408.4" y="147.0" width="19.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (661 samples, 1.67%)</title><rect x="408.4" y="131.0" width="19.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (661 samples, 1.67%)</title><rect x="408.4" y="115.0" width="19.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (661 samples, 1.67%)</title><rect x="408.4" y="99.0" width="19.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.4" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (661 samples, 1.67%)</title><rect x="408.4" y="83.0" width="19.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="411.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (487 samples, 1.23%)</title><rect x="428.1" y="195.0" width="14.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="431.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (487 samples, 1.23%)</title><rect x="428.1" y="179.0" width="14.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="431.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (487 samples, 1.23%)</title><rect x="428.1" y="163.0" width="14.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="431.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (487 samples, 1.23%)</title><rect x="428.1" y="147.0" width="14.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="431.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (487 samples, 1.23%)</title><rect x="428.1" y="131.0" width="14.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="431.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (487 samples, 1.23%)</title><rect x="428.1" y="115.0" width="14.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="431.1" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (487 samples, 1.23%)</title><rect x="428.1" y="99.0" width="14.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="431.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,430 samples, 3.61%)</title><rect x="442.6" y="291.0" width="42.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="445.6" y="302.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,430 samples, 3.61%)</title><rect x="442.6" y="275.0" width="42.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.6" y="286.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (172 samples, 0.43%)</title><rect x="442.6" y="259.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="445.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (172 samples, 0.43%)</title><rect x="442.6" y="243.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="445.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (172 samples, 0.43%)</title><rect x="442.6" y="227.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="445.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (172 samples, 0.43%)</title><rect x="442.6" y="211.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (172 samples, 0.43%)</title><rect x="442.6" y="195.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="445.6" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (172 samples, 0.43%)</title><rect x="442.6" y="179.0" width="5.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="445.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,258 samples, 3.18%)</title><rect x="447.7" y="259.0" width="37.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="450.7" y="270.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,258 samples, 3.18%)</title><rect x="447.7" y="243.0" width="37.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.7" y="254.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,258 samples, 3.18%)</title><rect x="447.7" y="227.0" width="37.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.7" y="238.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,258 samples, 3.18%)</title><rect x="447.7" y="211.0" width="37.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="450.7" y="222.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,258 samples, 3.18%)</title><rect x="447.7" y="195.0" width="37.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="450.7" y="206.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,258 samples, 3.18%)</title><rect x="447.7" y="179.0" width="37.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="450.7" y="190.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,258 samples, 3.18%)</title><rect x="447.7" y="163.0" width="37.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="450.7" y="174.0">jav..</text>
</g>
<g>
<title>[worker-0 tid=25857] (911 samples, 2.30%)</title><rect x="485.2" y="355.0" width="27.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="488.2" y="366.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (911 samples, 2.30%)</title><rect x="485.2" y="339.0" width="27.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="488.2" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (911 samples, 2.30%)</title><rect x="485.2" y="323.0" width="27.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="488.2" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (911 samples, 2.30%)</title><rect x="485.2" y="307.0" width="27.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="488.2" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (224 samples, 0.57%)</title><rect x="485.2" y="291.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="488.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (224 samples, 0.57%)</title><rect x="485.2" y="275.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (59 samples, 0.15%)</title><rect x="485.2" y="259.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="488.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (59 samples, 0.15%)</title><rect x="485.2" y="243.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="488.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (59 samples, 0.15%)</title><rect x="485.2" y="227.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="488.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (59 samples, 0.15%)</title><rect x="485.2" y="211.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="488.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (59 samples, 0.15%)</title><rect x="485.2" y="195.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.2" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (59 samples, 0.15%)</title><rect x="485.2" y="179.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="488.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (165 samples, 0.42%)</title><rect x="487.0" y="259.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="490.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (165 samples, 0.42%)</title><rect x="487.0" y="243.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="490.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (165 samples, 0.42%)</title><rect x="487.0" y="227.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (165 samples, 0.42%)</title><rect x="487.0" y="211.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="490.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (165 samples, 0.42%)</title><rect x="487.0" y="195.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (165 samples, 0.42%)</title><rect x="487.0" y="179.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="490.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (165 samples, 0.42%)</title><rect x="487.0" y="163.0" width="4.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="490.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (687 samples, 1.73%)</title><rect x="491.9" y="291.0" width="20.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (687 samples, 1.73%)</title><rect x="491.9" y="275.0" width="20.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (305 samples, 0.77%)</title><rect x="491.9" y="259.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (305 samples, 0.77%)</title><rect x="491.9" y="243.0" width="9.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="494.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (305 samples, 0.77%)</title><rect x="491.9" y="227.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (305 samples, 0.77%)</title><rect x="491.9" y="211.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="494.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (305 samples, 0.77%)</title><rect x="491.9" y="195.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="494.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (305 samples, 0.77%)</title><rect x="491.9" y="179.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (305 samples, 0.77%)</title><rect x="491.9" y="163.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="494.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (305 samples, 0.77%)</title><rect x="491.9" y="147.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="494.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (305 samples, 0.77%)</title><rect x="491.9" y="131.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="494.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (305 samples, 0.77%)</title><rect x="491.9" y="115.0" width="9.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="494.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (305 samples, 0.77%)</title><rect x="491.9" y="99.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.9" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (305 samples, 0.77%)</title><rect x="491.9" y="83.0" width="9.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="494.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (382 samples, 0.96%)</title><rect x="501.0" y="259.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (382 samples, 0.96%)</title><rect x="501.0" y="243.0" width="11.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.0" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (382 samples, 0.96%)</title><rect x="501.0" y="227.0" width="11.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="504.0" y="238.0"></text>
</g>
<g>
<title>[worker-0 tid=25862] (815 samples, 2.06%)</title><rect x="512.3" y="355.0" width="24.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="515.3" y="366.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (815 samples, 2.06%)</title><rect x="512.3" y="339.0" width="24.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.3" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (815 samples, 2.06%)</title><rect x="512.3" y="323.0" width="24.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.3" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (815 samples, 2.06%)</title><rect x="512.3" y="307.0" width="24.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="515.3" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (288 samples, 0.73%)</title><rect x="512.3" y="291.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="515.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (288 samples, 0.73%)</title><rect x="512.3" y="275.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="515.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (92 samples, 0.23%)</title><rect x="512.3" y="259.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (92 samples, 0.23%)</title><rect x="512.3" y="243.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="515.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (92 samples, 0.23%)</title><rect x="512.3" y="227.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (92 samples, 0.23%)</title><rect x="512.3" y="211.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="515.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (92 samples, 0.23%)</title><rect x="512.3" y="195.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="515.3" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (92 samples, 0.23%)</title><rect x="512.3" y="179.0" width="2.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="515.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (196 samples, 0.49%)</title><rect x="515.1" y="259.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (196 samples, 0.49%)</title><rect x="515.1" y="243.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="518.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (196 samples, 0.49%)</title><rect x="515.1" y="227.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="518.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (196 samples, 0.49%)</title><rect x="515.1" y="211.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="518.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (196 samples, 0.49%)</title><rect x="515.1" y="195.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (196 samples, 0.49%)</title><rect x="515.1" y="179.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (196 samples, 0.49%)</title><rect x="515.1" y="163.0" width="5.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="518.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (527 samples, 1.33%)</title><rect x="520.9" y="291.0" width="15.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="523.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (527 samples, 1.33%)</title><rect x="520.9" y="275.0" width="15.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="523.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (316 samples, 0.80%)</title><rect x="520.9" y="259.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="523.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (316 samples, 0.80%)</title><rect x="520.9" y="243.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="523.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (316 samples, 0.80%)</title><rect x="520.9" y="227.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="523.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (316 samples, 0.80%)</title><rect x="520.9" y="211.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="523.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (316 samples, 0.80%)</title><rect x="520.9" y="195.0" width="9.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="523.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (316 samples, 0.80%)</title><rect x="520.9" y="179.0" width="9.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (316 samples, 0.80%)</title><rect x="520.9" y="163.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="523.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (316 samples, 0.80%)</title><rect x="520.9" y="147.0" width="9.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="523.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (316 samples, 0.80%)</title><rect x="520.9" y="131.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="523.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (316 samples, 0.80%)</title><rect x="520.9" y="115.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="523.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (316 samples, 0.80%)</title><rect x="520.9" y="99.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="523.9" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (316 samples, 0.80%)</title><rect x="520.9" y="83.0" width="9.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="523.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (211 samples, 0.53%)</title><rect x="530.3" y="259.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.3" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (211 samples, 0.53%)</title><rect x="530.3" y="243.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="533.3" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (211 samples, 0.53%)</title><rect x="530.3" y="227.0" width="6.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="533.3" y="238.0"></text>
</g>
<g>
<title>[worker-1 tid=25861] (1,029 samples, 2.60%)</title><rect x="536.6" y="355.0" width="30.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="539.6" y="366.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (1,029 samples, 2.60%)</title><rect x="536.6" y="339.0" width="30.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="539.6" y="350.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,029 samples, 2.60%)</title><rect x="536.6" y="323.0" width="30.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="539.6" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,029 samples, 2.60%)</title><rect x="536.6" y="307.0" width="30.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="539.6" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (238 samples, 0.60%)</title><rect x="536.6" y="291.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="539.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (238 samples, 0.60%)</title><rect x="536.6" y="275.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="539.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (77 samples, 0.19%)</title><rect x="536.6" y="259.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="539.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (77 samples, 0.19%)</title><rect x="536.6" y="243.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="539.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (77 samples, 0.19%)</title><rect x="536.6" y="227.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="539.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (77 samples, 0.19%)</title><rect x="536.6" y="211.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="539.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (77 samples, 0.19%)</title><rect x="536.6" y="195.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="539.6" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (77 samples, 0.19%)</title><rect x="536.6" y="179.0" width="2.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="539.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (161 samples, 0.41%)</title><rect x="538.9" y="259.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="541.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (161 samples, 0.41%)</title><rect x="538.9" y="243.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (161 samples, 0.41%)</title><rect x="538.9" y="227.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (161 samples, 0.41%)</title><rect x="538.9" y="211.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="541.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (161 samples, 0.41%)</title><rect x="538.9" y="195.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="541.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (161 samples, 0.41%)</title><rect x="538.9" y="179.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.9" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (161 samples, 0.41%)</title><rect x="538.9" y="163.0" width="4.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="541.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (791 samples, 2.00%)</title><rect x="543.7" y="291.0" width="23.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="546.7" y="302.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (791 samples, 2.00%)</title><rect x="543.7" y="275.0" width="23.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="546.7" y="286.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (314 samples, 0.79%)</title><rect x="543.7" y="259.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="546.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (314 samples, 0.79%)</title><rect x="543.7" y="243.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (314 samples, 0.79%)</title><rect x="543.7" y="227.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (314 samples, 0.79%)</title><rect x="543.7" y="211.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (314 samples, 0.79%)</title><rect x="543.7" y="195.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (314 samples, 0.79%)</title><rect x="543.7" y="179.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (314 samples, 0.79%)</title><rect x="543.7" y="163.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="546.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (314 samples, 0.79%)</title><rect x="543.7" y="147.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (314 samples, 0.79%)</title><rect x="543.7" y="131.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="546.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (314 samples, 0.79%)</title><rect x="543.7" y="115.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="546.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (314 samples, 0.79%)</title><rect x="543.7" y="99.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="546.7" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (314 samples, 0.79%)</title><rect x="543.7" y="83.0" width="9.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="546.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (477 samples, 1.20%)</title><rect x="553.0" y="259.0" width="14.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="556.0" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (477 samples, 1.20%)</title><rect x="553.0" y="243.0" width="14.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.0" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (477 samples, 1.20%)</title><rect x="553.0" y="227.0" width="14.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="556.0" y="238.0"></text>
</g>
<g>
<title>[worker-1 tid=25864] (706 samples, 1.78%)</title><rect x="567.3" y="355.0" width="21.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="570.3" y="366.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (706 samples, 1.78%)</title><rect x="567.3" y="339.0" width="21.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="570.3" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (706 samples, 1.78%)</title><rect x="567.3" y="323.0" width="21.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.3" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (706 samples, 1.78%)</title><rect x="567.3" y="307.0" width="21.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="570.3" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (280 samples, 0.71%)</title><rect x="567.3" y="291.0" width="8.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (280 samples, 0.71%)</title><rect x="567.3" y="275.0" width="8.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="570.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (70 samples, 0.18%)</title><rect x="567.3" y="259.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (70 samples, 0.18%)</title><rect x="567.3" y="243.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (70 samples, 0.18%)</title><rect x="567.3" y="227.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (70 samples, 0.18%)</title><rect x="567.3" y="211.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="570.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (70 samples, 0.18%)</title><rect x="567.3" y="195.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.3" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (70 samples, 0.18%)</title><rect x="567.3" y="179.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="570.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (210 samples, 0.53%)</title><rect x="569.3" y="259.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="572.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (210 samples, 0.53%)</title><rect x="569.3" y="243.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="572.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (210 samples, 0.53%)</title><rect x="569.3" y="227.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="572.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (210 samples, 0.53%)</title><rect x="569.3" y="211.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (210 samples, 0.53%)</title><rect x="569.3" y="195.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (210 samples, 0.53%)</title><rect x="569.3" y="179.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="572.3" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (210 samples, 0.53%)</title><rect x="569.3" y="163.0" width="6.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="572.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (426 samples, 1.08%)</title><rect x="575.6" y="291.0" width="12.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="578.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (426 samples, 1.08%)</title><rect x="575.6" y="275.0" width="12.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (242 samples, 0.61%)</title><rect x="575.6" y="259.0" width="7.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (242 samples, 0.61%)</title><rect x="575.6" y="243.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="578.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (242 samples, 0.61%)</title><rect x="575.6" y="227.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (242 samples, 0.61%)</title><rect x="575.6" y="211.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="578.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (242 samples, 0.61%)</title><rect x="575.6" y="195.0" width="7.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="578.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (242 samples, 0.61%)</title><rect x="575.6" y="179.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="578.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (242 samples, 0.61%)</title><rect x="575.6" y="163.0" width="7.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (242 samples, 0.61%)</title><rect x="575.6" y="147.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="578.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (242 samples, 0.61%)</title><rect x="575.6" y="131.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (242 samples, 0.61%)</title><rect x="575.6" y="115.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (242 samples, 0.61%)</title><rect x="575.6" y="99.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.6" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (242 samples, 0.61%)</title><rect x="575.6" y="83.0" width="7.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="578.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (184 samples, 0.46%)</title><rect x="582.8" y="259.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (184 samples, 0.46%)</title><rect x="582.8" y="243.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.8" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (184 samples, 0.46%)</title><rect x="582.8" y="227.0" width="5.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="585.8" y="238.0"></text>
</g>
<g>
<title>[worker-2 tid=25863] (901 samples, 2.27%)</title><rect x="588.3" y="355.0" width="26.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="591.3" y="366.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (901 samples, 2.27%)</title><rect x="588.3" y="339.0" width="26.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.3" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (901 samples, 2.27%)</title><rect x="588.3" y="323.0" width="26.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="591.3" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (901 samples, 2.27%)</title><rect x="588.3" y="307.0" width="26.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="591.3" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (221 samples, 0.56%)</title><rect x="588.3" y="291.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="591.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (221 samples, 0.56%)</title><rect x="588.3" y="275.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="591.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (62 samples, 0.16%)</title><rect x="588.3" y="259.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="591.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (62 samples, 0.16%)</title><rect x="588.3" y="243.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (62 samples, 0.16%)</title><rect x="588.3" y="227.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="591.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (62 samples, 0.16%)</title><rect x="588.3" y="211.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="591.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (62 samples, 0.16%)</title><rect x="588.3" y="195.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.3" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (62 samples, 0.16%)</title><rect x="588.3" y="179.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="591.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (159 samples, 0.40%)</title><rect x="590.1" y="259.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="593.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (159 samples, 0.40%)</title><rect x="590.1" y="243.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="593.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (159 samples, 0.40%)</title><rect x="590.1" y="227.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="593.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (159 samples, 0.40%)</title><rect x="590.1" y="211.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="593.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (159 samples, 0.40%)</title><rect x="590.1" y="195.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (159 samples, 0.40%)</title><rect x="590.1" y="179.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="593.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (159 samples, 0.40%)</title><rect x="590.1" y="163.0" width="4.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="593.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (680 samples, 1.72%)</title><rect x="594.9" y="291.0" width="20.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="597.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (680 samples, 1.72%)</title><rect x="594.9" y="275.0" width="20.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="597.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (278 samples, 0.70%)</title><rect x="594.9" y="259.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (278 samples, 0.70%)</title><rect x="594.9" y="243.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="597.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (278 samples, 0.70%)</title><rect x="594.9" y="227.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (278 samples, 0.70%)</title><rect x="594.9" y="211.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (278 samples, 0.70%)</title><rect x="594.9" y="195.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="597.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (278 samples, 0.70%)</title><rect x="594.9" y="179.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="597.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (278 samples, 0.70%)</title><rect x="594.9" y="163.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="597.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (278 samples, 0.70%)</title><rect x="594.9" y="147.0" width="8.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (278 samples, 0.70%)</title><rect x="594.9" y="131.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (278 samples, 0.70%)</title><rect x="594.9" y="115.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="597.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (278 samples, 0.70%)</title><rect x="594.9" y="99.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.9" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (278 samples, 0.70%)</title><rect x="594.9" y="83.0" width="8.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="597.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (402 samples, 1.01%)</title><rect x="603.1" y="259.0" width="12.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (402 samples, 1.01%)</title><rect x="603.1" y="243.0" width="12.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.1" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (402 samples, 1.01%)</title><rect x="603.1" y="227.0" width="12.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="606.1" y="238.0"></text>
</g>
<g>
<title>[worker-2 tid=25868] (777 samples, 1.96%)</title><rect x="615.1" y="355.0" width="23.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="618.1" y="366.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (777 samples, 1.96%)</title><rect x="615.1" y="339.0" width="23.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.1" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (777 samples, 1.96%)</title><rect x="615.1" y="323.0" width="23.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="618.1" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (777 samples, 1.96%)</title><rect x="615.1" y="307.0" width="23.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="618.1" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (267 samples, 0.67%)</title><rect x="615.1" y="291.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="618.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (267 samples, 0.67%)</title><rect x="615.1" y="275.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (94 samples, 0.24%)</title><rect x="615.1" y="259.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="618.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (94 samples, 0.24%)</title><rect x="615.1" y="243.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="618.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (94 samples, 0.24%)</title><rect x="615.1" y="227.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="618.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (94 samples, 0.24%)</title><rect x="615.1" y="211.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="618.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (94 samples, 0.24%)</title><rect x="615.1" y="195.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (94 samples, 0.24%)</title><rect x="615.1" y="179.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="618.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (173 samples, 0.44%)</title><rect x="617.9" y="259.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (173 samples, 0.44%)</title><rect x="617.9" y="243.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (173 samples, 0.44%)</title><rect x="617.9" y="227.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="620.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (173 samples, 0.44%)</title><rect x="617.9" y="211.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="620.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (173 samples, 0.44%)</title><rect x="617.9" y="195.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (173 samples, 0.44%)</title><rect x="617.9" y="179.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="620.9" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (173 samples, 0.44%)</title><rect x="617.9" y="163.0" width="5.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="620.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (510 samples, 1.29%)</title><rect x="623.1" y="291.0" width="15.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="626.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (510 samples, 1.29%)</title><rect x="623.1" y="275.0" width="15.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="626.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (307 samples, 0.77%)</title><rect x="623.1" y="259.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="626.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (307 samples, 0.77%)</title><rect x="623.1" y="243.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="626.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (307 samples, 0.77%)</title><rect x="623.1" y="227.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="626.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (307 samples, 0.77%)</title><rect x="623.1" y="211.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (307 samples, 0.77%)</title><rect x="623.1" y="195.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (307 samples, 0.77%)</title><rect x="623.1" y="179.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (307 samples, 0.77%)</title><rect x="623.1" y="163.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="626.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (307 samples, 0.77%)</title><rect x="623.1" y="147.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="626.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (307 samples, 0.77%)</title><rect x="623.1" y="131.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="626.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (307 samples, 0.77%)</title><rect x="623.1" y="115.0" width="9.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (307 samples, 0.77%)</title><rect x="623.1" y="99.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.1" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (307 samples, 0.77%)</title><rect x="623.1" y="83.0" width="9.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="626.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (203 samples, 0.51%)</title><rect x="632.2" y="259.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (203 samples, 0.51%)</title><rect x="632.2" y="243.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.2" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (203 samples, 0.51%)</title><rect x="632.2" y="227.0" width="6.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="635.2" y="238.0"></text>
</g>
<g>
<title>[worker-24 tid=29156] (2,111 samples, 5.33%)</title><rect x="638.3" y="355.0" width="62.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="641.3" y="366.0">[worke..</text>
</g>
<g>
<title>java/lang/Thread.run (2,111 samples, 5.33%)</title><rect x="638.3" y="339.0" width="62.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="641.3" y="350.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,111 samples, 5.33%)</title><rect x="638.3" y="323.0" width="62.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="641.3" y="334.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,111 samples, 5.33%)</title><rect x="638.3" y="307.0" width="62.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="641.3" y="318.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (145 samples, 0.37%)</title><rect x="638.3" y="291.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="641.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (145 samples, 0.37%)</title><rect x="638.3" y="275.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="641.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (47 samples, 0.12%)</title><rect x="638.3" y="259.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="641.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (47 samples, 0.12%)</title><rect x="638.3" y="243.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="641.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (47 samples, 0.12%)</title><rect x="638.3" y="227.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="641.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (47 samples, 0.12%)</title><rect x="638.3" y="211.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="641.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (47 samples, 0.12%)</title><rect x="638.3" y="195.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="641.3" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (47 samples, 0.12%)</title><rect x="638.3" y="179.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="641.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (98 samples, 0.25%)</title><rect x="639.7" y="259.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="642.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (98 samples, 0.25%)</title><rect x="639.7" y="243.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="642.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (98 samples, 0.25%)</title><rect x="639.7" y="227.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (98 samples, 0.25%)</title><rect x="639.7" y="211.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="642.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (98 samples, 0.25%)</title><rect x="639.7" y="195.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (98 samples, 0.25%)</title><rect x="639.7" y="179.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="642.7" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (98 samples, 0.25%)</title><rect x="639.7" y="163.0" width="2.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="642.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (1,966 samples, 4.96%)</title><rect x="642.6" y="291.0" width="58.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.6" y="302.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (1,966 samples, 4.96%)</title><rect x="642.6" y="275.0" width="58.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="645.6" y="286.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (1,964 samples, 4.96%)</title><rect x="642.6" y="259.0" width="58.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.6" y="270.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (1,964 samples, 4.96%)</title><rect x="642.6" y="243.0" width="58.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.6" y="254.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (1,964 samples, 4.96%)</title><rect x="642.6" y="227.0" width="58.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.6" y="238.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (791 samples, 2.00%)</title><rect x="642.6" y="211.0" width="23.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.6" y="222.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (791 samples, 2.00%)</title><rect x="642.6" y="195.0" width="23.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.6" y="206.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (791 samples, 2.00%)</title><rect x="642.6" y="179.0" width="23.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="645.6" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (791 samples, 2.00%)</title><rect x="642.6" y="163.0" width="23.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="645.6" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (791 samples, 2.00%)</title><rect x="642.6" y="147.0" width="23.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="645.6" y="158.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (791 samples, 2.00%)</title><rect x="642.6" y="131.0" width="23.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.6" y="142.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (791 samples, 2.00%)</title><rect x="642.6" y="115.0" width="23.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.6" y="126.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (791 samples, 2.00%)</title><rect x="642.6" y="99.0" width="23.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.6" y="110.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (791 samples, 2.00%)</title><rect x="642.6" y="83.0" width="23.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="645.6" y="94.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (1,173 samples, 2.96%)</title><rect x="666.1" y="211.0" width="35.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="669.1" y="222.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (104 samples, 0.26%)</title><rect x="666.1" y="195.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (104 samples, 0.26%)</title><rect x="666.1" y="179.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="669.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (104 samples, 0.26%)</title><rect x="666.1" y="163.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="669.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (89 samples, 0.22%)</title><rect x="666.1" y="147.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (89 samples, 0.22%)</title><rect x="666.1" y="131.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (89 samples, 0.22%)</title><rect x="666.1" y="115.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="669.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (89 samples, 0.22%)</title><rect x="666.1" y="99.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="669.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (89 samples, 0.22%)</title><rect x="666.1" y="83.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (89 samples, 0.22%)</title><rect x="666.1" y="67.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="669.1" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (89 samples, 0.22%)</title><rect x="666.1" y="51.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="669.1" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (89 samples, 0.22%)</title><rect x="666.1" y="35.0" width="2.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="669.1" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (15 samples, 0.04%)</title><rect x="668.8" y="147.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="671.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (15 samples, 0.04%)</title><rect x="668.8" y="131.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="671.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (15 samples, 0.04%)</title><rect x="668.8" y="115.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="671.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (15 samples, 0.04%)</title><rect x="668.8" y="99.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (15 samples, 0.04%)</title><rect x="668.8" y="83.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="671.8" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (15 samples, 0.04%)</title><rect x="668.8" y="67.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="671.8" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (15 samples, 0.04%)</title><rect x="668.8" y="51.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="671.8" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (1,069 samples, 2.70%)</title><rect x="669.2" y="195.0" width="31.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="672.2" y="206.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,069 samples, 2.70%)</title><rect x="669.2" y="179.0" width="31.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="672.2" y="190.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (400 samples, 1.01%)</title><rect x="669.2" y="163.0" width="11.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="672.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (400 samples, 1.01%)</title><rect x="669.2" y="147.0" width="11.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="672.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (400 samples, 1.01%)</title><rect x="669.2" y="131.0" width="11.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="672.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (400 samples, 1.01%)</title><rect x="669.2" y="115.0" width="11.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="672.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (400 samples, 1.01%)</title><rect x="669.2" y="99.0" width="11.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="672.2" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (400 samples, 1.01%)</title><rect x="669.2" y="83.0" width="11.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="672.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (669 samples, 1.69%)</title><rect x="681.1" y="163.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (669 samples, 1.69%)</title><rect x="681.1" y="147.0" width="20.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="684.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (669 samples, 1.69%)</title><rect x="681.1" y="131.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (669 samples, 1.69%)</title><rect x="681.1" y="115.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="684.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (669 samples, 1.69%)</title><rect x="681.1" y="99.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="684.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (669 samples, 1.69%)</title><rect x="681.1" y="83.0" width="20.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.1" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (669 samples, 1.69%)</title><rect x="681.1" y="67.0" width="20.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="684.1" y="78.0"></text>
</g>
<g>
<title>[worker-3 tid=25866] (926 samples, 2.34%)</title><rect x="701.1" y="355.0" width="27.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="704.1" y="366.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (926 samples, 2.34%)</title><rect x="701.1" y="339.0" width="27.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="704.1" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (926 samples, 2.34%)</title><rect x="701.1" y="323.0" width="27.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="704.1" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (926 samples, 2.34%)</title><rect x="701.1" y="307.0" width="27.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.1" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (268 samples, 0.68%)</title><rect x="701.1" y="291.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (268 samples, 0.68%)</title><rect x="701.1" y="275.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="704.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (77 samples, 0.19%)</title><rect x="701.1" y="259.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="704.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (77 samples, 0.19%)</title><rect x="701.1" y="243.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (77 samples, 0.19%)</title><rect x="701.1" y="227.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="704.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (77 samples, 0.19%)</title><rect x="701.1" y="211.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="704.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (77 samples, 0.19%)</title><rect x="701.1" y="195.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (77 samples, 0.19%)</title><rect x="701.1" y="179.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="704.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (191 samples, 0.48%)</title><rect x="703.4" y="259.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="706.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (191 samples, 0.48%)</title><rect x="703.4" y="243.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (191 samples, 0.48%)</title><rect x="703.4" y="227.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="706.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (191 samples, 0.48%)</title><rect x="703.4" y="211.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="706.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (191 samples, 0.48%)</title><rect x="703.4" y="195.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="706.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (191 samples, 0.48%)</title><rect x="703.4" y="179.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="706.4" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (191 samples, 0.48%)</title><rect x="703.4" y="163.0" width="5.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="706.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (658 samples, 1.66%)</title><rect x="709.1" y="291.0" width="19.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (658 samples, 1.66%)</title><rect x="709.1" y="275.0" width="19.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="712.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (286 samples, 0.72%)</title><rect x="709.1" y="259.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="712.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (286 samples, 0.72%)</title><rect x="709.1" y="243.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (286 samples, 0.72%)</title><rect x="709.1" y="227.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="712.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (286 samples, 0.72%)</title><rect x="709.1" y="211.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="712.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (286 samples, 0.72%)</title><rect x="709.1" y="195.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="712.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (286 samples, 0.72%)</title><rect x="709.1" y="179.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="712.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (286 samples, 0.72%)</title><rect x="709.1" y="163.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (286 samples, 0.72%)</title><rect x="709.1" y="147.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="712.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (286 samples, 0.72%)</title><rect x="709.1" y="131.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (286 samples, 0.72%)</title><rect x="709.1" y="115.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="712.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (286 samples, 0.72%)</title><rect x="709.1" y="99.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.1" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (286 samples, 0.72%)</title><rect x="709.1" y="83.0" width="8.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="712.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (372 samples, 0.94%)</title><rect x="717.6" y="259.0" width="11.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (372 samples, 0.94%)</title><rect x="717.6" y="243.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.6" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (372 samples, 0.94%)</title><rect x="717.6" y="227.0" width="11.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="720.6" y="238.0"></text>
</g>
<g>
<title>[worker-3 tid=25867] (747 samples, 1.89%)</title><rect x="728.7" y="355.0" width="22.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="731.7" y="366.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (747 samples, 1.89%)</title><rect x="728.7" y="339.0" width="22.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="731.7" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (747 samples, 1.89%)</title><rect x="728.7" y="323.0" width="22.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.7" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (747 samples, 1.89%)</title><rect x="728.7" y="307.0" width="22.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.7" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (279 samples, 0.70%)</title><rect x="728.7" y="291.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="731.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (279 samples, 0.70%)</title><rect x="728.7" y="275.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (86 samples, 0.22%)</title><rect x="728.7" y="259.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="731.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (86 samples, 0.22%)</title><rect x="728.7" y="243.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="731.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (86 samples, 0.22%)</title><rect x="728.7" y="227.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (86 samples, 0.22%)</title><rect x="728.7" y="211.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (86 samples, 0.22%)</title><rect x="728.7" y="195.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.7" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (86 samples, 0.22%)</title><rect x="728.7" y="179.0" width="2.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="731.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (193 samples, 0.49%)</title><rect x="731.3" y="259.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="734.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (193 samples, 0.49%)</title><rect x="731.3" y="243.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="734.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (193 samples, 0.49%)</title><rect x="731.3" y="227.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="734.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (193 samples, 0.49%)</title><rect x="731.3" y="211.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="734.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (193 samples, 0.49%)</title><rect x="731.3" y="195.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="734.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (193 samples, 0.49%)</title><rect x="731.3" y="179.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="734.3" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (193 samples, 0.49%)</title><rect x="731.3" y="163.0" width="5.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="734.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (468 samples, 1.18%)</title><rect x="737.0" y="291.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="740.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (468 samples, 1.18%)</title><rect x="737.0" y="275.0" width="14.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="740.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (274 samples, 0.69%)</title><rect x="737.0" y="259.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (274 samples, 0.69%)</title><rect x="737.0" y="243.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (274 samples, 0.69%)</title><rect x="737.0" y="227.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (274 samples, 0.69%)</title><rect x="737.0" y="211.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (274 samples, 0.69%)</title><rect x="737.0" y="195.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (274 samples, 0.69%)</title><rect x="737.0" y="179.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="740.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (274 samples, 0.69%)</title><rect x="737.0" y="163.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="740.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (274 samples, 0.69%)</title><rect x="737.0" y="147.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="740.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (274 samples, 0.69%)</title><rect x="737.0" y="131.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="740.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (274 samples, 0.69%)</title><rect x="737.0" y="115.0" width="8.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (274 samples, 0.69%)</title><rect x="737.0" y="99.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="740.0" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (274 samples, 0.69%)</title><rect x="737.0" y="83.0" width="8.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="740.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (194 samples, 0.49%)</title><rect x="745.2" y="259.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="748.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (194 samples, 0.49%)</title><rect x="745.2" y="243.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="748.2" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (194 samples, 0.49%)</title><rect x="745.2" y="227.0" width="5.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="748.2" y="238.0"></text>
</g>
<g>
<title>[worker-35 tid=29619] (2,988 samples, 7.54%)</title><rect x="751.0" y="355.0" width="89.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="754.0" y="366.0">[worker-35..</text>
</g>
<g>
<title>java/lang/Thread.run (2,988 samples, 7.54%)</title><rect x="751.0" y="339.0" width="89.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.0" y="350.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,988 samples, 7.54%)</title><rect x="751.0" y="323.0" width="89.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.0" y="334.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,988 samples, 7.54%)</title><rect x="751.0" y="307.0" width="89.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="754.0" y="318.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (198 samples, 0.50%)</title><rect x="751.0" y="291.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (198 samples, 0.50%)</title><rect x="751.0" y="275.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (72 samples, 0.18%)</title><rect x="751.0" y="259.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (72 samples, 0.18%)</title><rect x="751.0" y="243.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="754.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (72 samples, 0.18%)</title><rect x="751.0" y="227.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (72 samples, 0.18%)</title><rect x="751.0" y="211.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (72 samples, 0.18%)</title><rect x="751.0" y="195.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.0" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (72 samples, 0.18%)</title><rect x="751.0" y="179.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="754.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (126 samples, 0.32%)</title><rect x="753.1" y="259.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="756.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (126 samples, 0.32%)</title><rect x="753.1" y="243.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="756.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (126 samples, 0.32%)</title><rect x="753.1" y="227.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (126 samples, 0.32%)</title><rect x="753.1" y="211.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (126 samples, 0.32%)</title><rect x="753.1" y="195.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="756.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (126 samples, 0.32%)</title><rect x="753.1" y="179.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="756.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (126 samples, 0.32%)</title><rect x="753.1" y="163.0" width="3.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="756.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (2,790 samples, 7.04%)</title><rect x="756.9" y="291.0" width="83.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.9" y="302.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (2,790 samples, 7.04%)</title><rect x="756.9" y="275.0" width="83.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="759.9" y="286.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (2,785 samples, 7.03%)</title><rect x="756.9" y="259.0" width="82.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.9" y="270.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (2,785 samples, 7.03%)</title><rect x="756.9" y="243.0" width="82.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="759.9" y="254.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (2,785 samples, 7.03%)</title><rect x="756.9" y="227.0" width="82.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.9" y="238.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (1,088 samples, 2.75%)</title><rect x="756.9" y="211.0" width="32.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.9" y="222.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (1,088 samples, 2.75%)</title><rect x="756.9" y="195.0" width="32.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="759.9" y="206.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (1,087 samples, 2.74%)</title><rect x="756.9" y="179.0" width="32.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="759.9" y="190.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,087 samples, 2.74%)</title><rect x="756.9" y="163.0" width="32.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="759.9" y="174.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,087 samples, 2.74%)</title><rect x="756.9" y="147.0" width="32.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="759.9" y="158.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,087 samples, 2.74%)</title><rect x="756.9" y="131.0" width="32.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="759.9" y="142.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,087 samples, 2.74%)</title><rect x="756.9" y="115.0" width="32.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.9" y="126.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,087 samples, 2.74%)</title><rect x="756.9" y="99.0" width="32.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="759.9" y="110.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (1,087 samples, 2.74%)</title><rect x="756.9" y="83.0" width="32.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="759.9" y="94.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (1,697 samples, 4.28%)</title><rect x="789.3" y="211.0" width="50.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.3" y="222.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (167 samples, 0.42%)</title><rect x="789.3" y="195.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (167 samples, 0.42%)</title><rect x="789.3" y="179.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="792.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (167 samples, 0.42%)</title><rect x="789.3" y="163.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="792.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (140 samples, 0.35%)</title><rect x="789.3" y="147.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="792.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (140 samples, 0.35%)</title><rect x="789.3" y="131.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="792.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (140 samples, 0.35%)</title><rect x="789.3" y="115.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (140 samples, 0.35%)</title><rect x="789.3" y="99.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="792.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (140 samples, 0.35%)</title><rect x="789.3" y="83.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="792.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (140 samples, 0.35%)</title><rect x="789.3" y="67.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="792.3" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (140 samples, 0.35%)</title><rect x="789.3" y="51.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="792.3" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (140 samples, 0.35%)</title><rect x="789.3" y="35.0" width="4.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="792.3" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (27 samples, 0.07%)</title><rect x="793.4" y="147.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="796.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (27 samples, 0.07%)</title><rect x="793.4" y="131.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (27 samples, 0.07%)</title><rect x="793.4" y="115.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="796.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (27 samples, 0.07%)</title><rect x="793.4" y="99.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="796.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (27 samples, 0.07%)</title><rect x="793.4" y="83.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="796.4" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (27 samples, 0.07%)</title><rect x="793.4" y="67.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.4" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (27 samples, 0.07%)</title><rect x="793.4" y="51.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="796.4" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (1,530 samples, 3.86%)</title><rect x="794.2" y="195.0" width="45.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="797.2" y="206.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,530 samples, 3.86%)</title><rect x="794.2" y="179.0" width="45.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="797.2" y="190.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (580 samples, 1.46%)</title><rect x="794.2" y="163.0" width="17.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="797.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (580 samples, 1.46%)</title><rect x="794.2" y="147.0" width="17.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="797.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (580 samples, 1.46%)</title><rect x="794.2" y="131.0" width="17.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="797.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (580 samples, 1.46%)</title><rect x="794.2" y="115.0" width="17.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="797.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (580 samples, 1.46%)</title><rect x="794.2" y="99.0" width="17.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="797.2" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (580 samples, 1.46%)</title><rect x="794.2" y="83.0" width="17.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="797.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (950 samples, 2.40%)</title><rect x="811.5" y="163.0" width="28.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="814.5" y="174.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (950 samples, 2.40%)</title><rect x="811.5" y="147.0" width="28.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="814.5" y="158.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (950 samples, 2.40%)</title><rect x="811.5" y="131.0" width="28.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="814.5" y="142.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (950 samples, 2.40%)</title><rect x="811.5" y="115.0" width="28.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="814.5" y="126.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (950 samples, 2.40%)</title><rect x="811.5" y="99.0" width="28.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="814.5" y="110.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (950 samples, 2.40%)</title><rect x="811.5" y="83.0" width="28.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="814.5" y="94.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (950 samples, 2.40%)</title><rect x="811.5" y="67.0" width="28.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="814.5" y="78.0">ja..</text>
</g>
<g>
<title>[worker-38 tid=29625] (3,095 samples, 7.81%)</title><rect x="840.0" y="355.0" width="92.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="843.0" y="366.0">[worker-38 ..</text>
</g>
<g>
<title>java/lang/Thread.run (3,095 samples, 7.81%)</title><rect x="840.0" y="339.0" width="92.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.0" y="350.0">java/lang/T..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,095 samples, 7.81%)</title><rect x="840.0" y="323.0" width="92.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="843.0" y="334.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,095 samples, 7.81%)</title><rect x="840.0" y="307.0" width="92.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="843.0" y="318.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (224 samples, 0.57%)</title><rect x="840.0" y="291.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="843.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (224 samples, 0.57%)</title><rect x="840.0" y="275.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (86 samples, 0.22%)</title><rect x="840.0" y="259.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (86 samples, 0.22%)</title><rect x="840.0" y="243.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="843.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (86 samples, 0.22%)</title><rect x="840.0" y="227.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="843.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (86 samples, 0.22%)</title><rect x="840.0" y="211.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="843.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (86 samples, 0.22%)</title><rect x="840.0" y="195.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="843.0" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (86 samples, 0.22%)</title><rect x="840.0" y="179.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="843.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (138 samples, 0.35%)</title><rect x="842.5" y="259.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (138 samples, 0.35%)</title><rect x="842.5" y="243.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="845.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (138 samples, 0.35%)</title><rect x="842.5" y="227.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="845.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (138 samples, 0.35%)</title><rect x="842.5" y="211.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="845.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (138 samples, 0.35%)</title><rect x="842.5" y="195.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="845.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (138 samples, 0.35%)</title><rect x="842.5" y="179.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (138 samples, 0.35%)</title><rect x="842.5" y="163.0" width="4.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="845.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (2,871 samples, 7.25%)</title><rect x="846.6" y="291.0" width="85.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="849.6" y="302.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (2,871 samples, 7.25%)</title><rect x="846.6" y="275.0" width="85.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="849.6" y="286.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (2,869 samples, 7.24%)</title><rect x="846.6" y="259.0" width="85.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.6" y="270.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (2,869 samples, 7.24%)</title><rect x="846.6" y="243.0" width="85.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="849.6" y="254.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (2,869 samples, 7.24%)</title><rect x="846.6" y="227.0" width="85.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="849.6" y="238.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (1,106 samples, 2.79%)</title><rect x="846.6" y="211.0" width="33.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="849.6" y="222.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (1,106 samples, 2.79%)</title><rect x="846.6" y="195.0" width="33.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.6" y="206.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (1,106 samples, 2.79%)</title><rect x="846.6" y="179.0" width="33.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="849.6" y="190.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,106 samples, 2.79%)</title><rect x="846.6" y="163.0" width="33.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.6" y="174.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,106 samples, 2.79%)</title><rect x="846.6" y="147.0" width="33.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="849.6" y="158.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,106 samples, 2.79%)</title><rect x="846.6" y="131.0" width="33.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="849.6" y="142.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,106 samples, 2.79%)</title><rect x="846.6" y="115.0" width="33.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="849.6" y="126.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,106 samples, 2.79%)</title><rect x="846.6" y="99.0" width="33.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="849.6" y="110.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (1,106 samples, 2.79%)</title><rect x="846.6" y="83.0" width="33.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="849.6" y="94.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (1,763 samples, 4.45%)</title><rect x="879.6" y="211.0" width="52.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="882.6" y="222.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (201 samples, 0.51%)</title><rect x="879.6" y="195.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="882.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (201 samples, 0.51%)</title><rect x="879.6" y="179.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="882.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (201 samples, 0.51%)</title><rect x="879.6" y="163.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="882.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (162 samples, 0.41%)</title><rect x="879.6" y="147.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="882.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (162 samples, 0.41%)</title><rect x="879.6" y="131.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="882.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (162 samples, 0.41%)</title><rect x="879.6" y="115.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="882.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (162 samples, 0.41%)</title><rect x="879.6" y="99.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="882.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (162 samples, 0.41%)</title><rect x="879.6" y="83.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="882.6" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (162 samples, 0.41%)</title><rect x="879.6" y="67.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="882.6" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (162 samples, 0.41%)</title><rect x="879.6" y="51.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="882.6" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (162 samples, 0.41%)</title><rect x="879.6" y="35.0" width="4.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="882.6" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (39 samples, 0.10%)</title><rect x="884.4" y="147.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="887.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (39 samples, 0.10%)</title><rect x="884.4" y="131.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="887.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (39 samples, 0.10%)</title><rect x="884.4" y="115.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="887.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (39 samples, 0.10%)</title><rect x="884.4" y="99.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="887.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (39 samples, 0.10%)</title><rect x="884.4" y="83.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="887.4" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (39 samples, 0.10%)</title><rect x="884.4" y="67.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="887.4" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (39 samples, 0.10%)</title><rect x="884.4" y="51.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="887.4" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (1,562 samples, 3.94%)</title><rect x="885.6" y="195.0" width="46.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="888.6" y="206.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,562 samples, 3.94%)</title><rect x="885.6" y="179.0" width="46.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="888.6" y="190.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (579 samples, 1.46%)</title><rect x="885.6" y="163.0" width="17.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="888.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (579 samples, 1.46%)</title><rect x="885.6" y="147.0" width="17.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="888.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (579 samples, 1.46%)</title><rect x="885.6" y="131.0" width="17.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="888.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (579 samples, 1.46%)</title><rect x="885.6" y="115.0" width="17.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="888.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (579 samples, 1.46%)</title><rect x="885.6" y="99.0" width="17.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="888.6" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (579 samples, 1.46%)</title><rect x="885.6" y="83.0" width="17.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="888.6" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (983 samples, 2.48%)</title><rect x="902.8" y="163.0" width="29.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.8" y="174.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (983 samples, 2.48%)</title><rect x="902.8" y="147.0" width="29.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="905.8" y="158.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (983 samples, 2.48%)</title><rect x="902.8" y="131.0" width="29.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.8" y="142.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (983 samples, 2.48%)</title><rect x="902.8" y="115.0" width="29.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.8" y="126.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (983 samples, 2.48%)</title><rect x="902.8" y="99.0" width="29.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="905.8" y="110.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (983 samples, 2.48%)</title><rect x="902.8" y="83.0" width="29.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="905.8" y="94.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (983 samples, 2.48%)</title><rect x="902.8" y="67.0" width="29.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="905.8" y="78.0">ja..</text>
</g>
<g>
<title>[worker-39 tid=29626] (2,940 samples, 7.42%)</title><rect x="932.1" y="355.0" width="87.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="935.1" y="366.0">[worker-39..</text>
</g>
<g>
<title>java/lang/Thread.run (2,940 samples, 7.42%)</title><rect x="932.1" y="339.0" width="87.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="935.1" y="350.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,940 samples, 7.42%)</title><rect x="932.1" y="323.0" width="87.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="935.1" y="334.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,940 samples, 7.42%)</title><rect x="932.1" y="307.0" width="87.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="935.1" y="318.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (192 samples, 0.48%)</title><rect x="932.1" y="291.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="935.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (192 samples, 0.48%)</title><rect x="932.1" y="275.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="935.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (65 samples, 0.16%)</title><rect x="932.1" y="259.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="935.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (65 samples, 0.16%)</title><rect x="932.1" y="243.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="935.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (65 samples, 0.16%)</title><rect x="932.1" y="227.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="935.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (65 samples, 0.16%)</title><rect x="932.1" y="211.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="935.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (65 samples, 0.16%)</title><rect x="932.1" y="195.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="935.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (65 samples, 0.16%)</title><rect x="932.1" y="179.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="935.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (127 samples, 0.32%)</title><rect x="934.1" y="259.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="937.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (127 samples, 0.32%)</title><rect x="934.1" y="243.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="937.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (127 samples, 0.32%)</title><rect x="934.1" y="227.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="937.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (127 samples, 0.32%)</title><rect x="934.1" y="211.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="937.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (127 samples, 0.32%)</title><rect x="934.1" y="195.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="937.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (127 samples, 0.32%)</title><rect x="934.1" y="179.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="937.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (127 samples, 0.32%)</title><rect x="934.1" y="163.0" width="3.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="937.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (2,748 samples, 6.94%)</title><rect x="937.9" y="291.0" width="81.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="940.9" y="302.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (2,748 samples, 6.94%)</title><rect x="937.9" y="275.0" width="81.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="940.9" y="286.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (2,746 samples, 6.93%)</title><rect x="937.9" y="259.0" width="81.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="940.9" y="270.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (2,746 samples, 6.93%)</title><rect x="937.9" y="243.0" width="81.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="940.9" y="254.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (2,746 samples, 6.93%)</title><rect x="937.9" y="227.0" width="81.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="940.9" y="238.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (1,037 samples, 2.62%)</title><rect x="937.9" y="211.0" width="30.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="940.9" y="222.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (1,037 samples, 2.62%)</title><rect x="937.9" y="195.0" width="30.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="940.9" y="206.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (1,037 samples, 2.62%)</title><rect x="937.9" y="179.0" width="30.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="940.9" y="190.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,037 samples, 2.62%)</title><rect x="937.9" y="163.0" width="30.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="940.9" y="174.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,037 samples, 2.62%)</title><rect x="937.9" y="147.0" width="30.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="940.9" y="158.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,037 samples, 2.62%)</title><rect x="937.9" y="131.0" width="30.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="940.9" y="142.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,037 samples, 2.62%)</title><rect x="937.9" y="115.0" width="30.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="940.9" y="126.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,037 samples, 2.62%)</title><rect x="937.9" y="99.0" width="30.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="940.9" y="110.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (1,037 samples, 2.62%)</title><rect x="937.9" y="83.0" width="30.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="940.9" y="94.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (1,709 samples, 4.31%)</title><rect x="968.7" y="211.0" width="50.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="971.7" y="222.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (171 samples, 0.43%)</title><rect x="968.7" y="195.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (171 samples, 0.43%)</title><rect x="968.7" y="179.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="971.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (171 samples, 0.43%)</title><rect x="968.7" y="163.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (144 samples, 0.36%)</title><rect x="968.7" y="147.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="971.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (144 samples, 0.36%)</title><rect x="968.7" y="131.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="971.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (144 samples, 0.36%)</title><rect x="968.7" y="115.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="971.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (144 samples, 0.36%)</title><rect x="968.7" y="99.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="971.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (144 samples, 0.36%)</title><rect x="968.7" y="83.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="971.7" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (144 samples, 0.36%)</title><rect x="968.7" y="67.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.7" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (144 samples, 0.36%)</title><rect x="968.7" y="51.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="971.7" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (144 samples, 0.36%)</title><rect x="968.7" y="35.0" width="4.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="971.7" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (27 samples, 0.07%)</title><rect x="973.0" y="147.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="976.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (27 samples, 0.07%)</title><rect x="973.0" y="131.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="976.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (27 samples, 0.07%)</title><rect x="973.0" y="115.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="976.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (27 samples, 0.07%)</title><rect x="973.0" y="99.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="976.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (27 samples, 0.07%)</title><rect x="973.0" y="83.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="976.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (27 samples, 0.07%)</title><rect x="973.0" y="67.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="976.0" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (27 samples, 0.07%)</title><rect x="973.0" y="51.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="976.0" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (1,538 samples, 3.88%)</title><rect x="973.8" y="195.0" width="45.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="976.8" y="206.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,538 samples, 3.88%)</title><rect x="973.8" y="179.0" width="45.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="976.8" y="190.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (571 samples, 1.44%)</title><rect x="973.8" y="163.0" width="17.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="976.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (571 samples, 1.44%)</title><rect x="973.8" y="147.0" width="17.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="976.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (571 samples, 1.44%)</title><rect x="973.8" y="131.0" width="17.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="976.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (571 samples, 1.44%)</title><rect x="973.8" y="115.0" width="17.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="976.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (571 samples, 1.44%)</title><rect x="973.8" y="99.0" width="17.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="976.8" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (571 samples, 1.44%)</title><rect x="973.8" y="83.0" width="17.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="976.8" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (967 samples, 2.44%)</title><rect x="990.8" y="163.0" width="28.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="993.8" y="174.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (967 samples, 2.44%)</title><rect x="990.8" y="147.0" width="28.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="993.8" y="158.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (967 samples, 2.44%)</title><rect x="990.8" y="131.0" width="28.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="993.8" y="142.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (967 samples, 2.44%)</title><rect x="990.8" y="115.0" width="28.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="993.8" y="126.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (967 samples, 2.44%)</title><rect x="990.8" y="99.0" width="28.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="993.8" y="110.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (967 samples, 2.44%)</title><rect x="990.8" y="83.0" width="28.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="993.8" y="94.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (967 samples, 2.44%)</title><rect x="990.8" y="67.0" width="28.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="993.8" y="78.0">ja..</text>
</g>
<g>
<title>[worker-4 tid=25865] (920 samples, 2.32%)</title><rect x="1019.7" y="355.0" width="27.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1022.7" y="366.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (920 samples, 2.32%)</title><rect x="1019.7" y="339.0" width="27.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1022.7" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (920 samples, 2.32%)</title><rect x="1019.7" y="323.0" width="27.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1022.7" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (920 samples, 2.32%)</title><rect x="1019.7" y="307.0" width="27.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1022.7" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (215 samples, 0.54%)</title><rect x="1019.7" y="291.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1022.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (215 samples, 0.54%)</title><rect x="1019.7" y="275.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1022.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (58 samples, 0.15%)</title><rect x="1019.7" y="259.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1022.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (58 samples, 0.15%)</title><rect x="1019.7" y="243.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1022.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (58 samples, 0.15%)</title><rect x="1019.7" y="227.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1022.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (58 samples, 0.15%)</title><rect x="1019.7" y="211.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1022.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (58 samples, 0.15%)</title><rect x="1019.7" y="195.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1022.7" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (58 samples, 0.15%)</title><rect x="1019.7" y="179.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1022.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (157 samples, 0.40%)</title><rect x="1021.4" y="259.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1024.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (157 samples, 0.40%)</title><rect x="1021.4" y="243.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (157 samples, 0.40%)</title><rect x="1021.4" y="227.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1024.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (157 samples, 0.40%)</title><rect x="1021.4" y="211.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (157 samples, 0.40%)</title><rect x="1021.4" y="195.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1024.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (157 samples, 0.40%)</title><rect x="1021.4" y="179.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.4" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (157 samples, 0.40%)</title><rect x="1021.4" y="163.0" width="4.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1024.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (705 samples, 1.78%)</title><rect x="1026.1" y="291.0" width="21.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1029.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (705 samples, 1.78%)</title><rect x="1026.1" y="275.0" width="21.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1029.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (287 samples, 0.72%)</title><rect x="1026.1" y="259.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1029.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (287 samples, 0.72%)</title><rect x="1026.1" y="243.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1029.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (287 samples, 0.72%)</title><rect x="1026.1" y="227.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1029.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (287 samples, 0.72%)</title><rect x="1026.1" y="211.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1029.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (287 samples, 0.72%)</title><rect x="1026.1" y="195.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1029.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (287 samples, 0.72%)</title><rect x="1026.1" y="179.0" width="8.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1029.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (287 samples, 0.72%)</title><rect x="1026.1" y="163.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1029.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (287 samples, 0.72%)</title><rect x="1026.1" y="147.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1029.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (287 samples, 0.72%)</title><rect x="1026.1" y="131.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1029.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (287 samples, 0.72%)</title><rect x="1026.1" y="115.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1029.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (287 samples, 0.72%)</title><rect x="1026.1" y="99.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1029.1" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (287 samples, 0.72%)</title><rect x="1026.1" y="83.0" width="8.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1029.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (418 samples, 1.06%)</title><rect x="1034.6" y="259.0" width="12.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1037.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (418 samples, 1.06%)</title><rect x="1034.6" y="243.0" width="12.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1037.6" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (418 samples, 1.06%)</title><rect x="1034.6" y="227.0" width="12.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1037.6" y="238.0"></text>
</g>
<g>
<title>[worker-4 tid=25869] (814 samples, 2.05%)</title><rect x="1047.1" y="355.0" width="24.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1050.1" y="366.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (814 samples, 2.05%)</title><rect x="1047.1" y="339.0" width="24.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1050.1" y="350.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (814 samples, 2.05%)</title><rect x="1047.1" y="323.0" width="24.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1050.1" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (814 samples, 2.05%)</title><rect x="1047.1" y="307.0" width="24.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1050.1" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (262 samples, 0.66%)</title><rect x="1047.1" y="291.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1050.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (262 samples, 0.66%)</title><rect x="1047.1" y="275.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1050.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (83 samples, 0.21%)</title><rect x="1047.1" y="259.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1050.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (83 samples, 0.21%)</title><rect x="1047.1" y="243.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1050.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (83 samples, 0.21%)</title><rect x="1047.1" y="227.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1050.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (83 samples, 0.21%)</title><rect x="1047.1" y="211.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (83 samples, 0.21%)</title><rect x="1047.1" y="195.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1050.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (83 samples, 0.21%)</title><rect x="1047.1" y="179.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1050.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (179 samples, 0.45%)</title><rect x="1049.6" y="259.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1052.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (179 samples, 0.45%)</title><rect x="1049.6" y="243.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1052.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (179 samples, 0.45%)</title><rect x="1049.6" y="227.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1052.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (179 samples, 0.45%)</title><rect x="1049.6" y="211.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1052.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (179 samples, 0.45%)</title><rect x="1049.6" y="195.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1052.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (179 samples, 0.45%)</title><rect x="1049.6" y="179.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1052.6" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (179 samples, 0.45%)</title><rect x="1049.6" y="163.0" width="5.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1052.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (552 samples, 1.39%)</title><rect x="1054.9" y="291.0" width="16.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1057.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (552 samples, 1.39%)</title><rect x="1054.9" y="275.0" width="16.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1057.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (320 samples, 0.81%)</title><rect x="1054.9" y="259.0" width="9.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1057.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (320 samples, 0.81%)</title><rect x="1054.9" y="243.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1057.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (320 samples, 0.81%)</title><rect x="1054.9" y="227.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1057.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (320 samples, 0.81%)</title><rect x="1054.9" y="211.0" width="9.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1057.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (320 samples, 0.81%)</title><rect x="1054.9" y="195.0" width="9.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1057.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (320 samples, 0.81%)</title><rect x="1054.9" y="179.0" width="9.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1057.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (320 samples, 0.81%)</title><rect x="1054.9" y="163.0" width="9.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1057.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (320 samples, 0.81%)</title><rect x="1054.9" y="147.0" width="9.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1057.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (320 samples, 0.81%)</title><rect x="1054.9" y="131.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1057.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (320 samples, 0.81%)</title><rect x="1054.9" y="115.0" width="9.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1057.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (320 samples, 0.81%)</title><rect x="1054.9" y="99.0" width="9.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1057.9" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (320 samples, 0.81%)</title><rect x="1054.9" y="83.0" width="9.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1057.9" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (232 samples, 0.59%)</title><rect x="1064.4" y="259.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1067.4" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (232 samples, 0.59%)</title><rect x="1064.4" y="243.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1067.4" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (232 samples, 0.59%)</title><rect x="1064.4" y="227.0" width="6.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1067.4" y="238.0"></text>
</g>
<g>
<title>[worker-40 tid=29627] (136 samples, 0.34%)</title><rect x="1071.3" y="355.0" width="4.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1074.3" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (136 samples, 0.34%)</title><rect x="1071.3" y="339.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1074.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (136 samples, 0.34%)</title><rect x="1071.3" y="323.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1074.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (136 samples, 0.34%)</title><rect x="1071.3" y="307.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1074.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (130 samples, 0.33%)</title><rect x="1071.5" y="291.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1074.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (130 samples, 0.33%)</title><rect x="1071.5" y="275.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1074.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (130 samples, 0.33%)</title><rect x="1071.5" y="259.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1074.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (130 samples, 0.33%)</title><rect x="1071.5" y="243.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1074.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (130 samples, 0.33%)</title><rect x="1071.5" y="227.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1074.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (69 samples, 0.17%)</title><rect x="1071.5" y="211.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1074.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (69 samples, 0.17%)</title><rect x="1071.5" y="195.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1074.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (69 samples, 0.17%)</title><rect x="1071.5" y="179.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1074.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (69 samples, 0.17%)</title><rect x="1071.5" y="163.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1074.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (69 samples, 0.17%)</title><rect x="1071.5" y="147.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1074.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (69 samples, 0.17%)</title><rect x="1071.5" y="131.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1074.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (69 samples, 0.17%)</title><rect x="1071.5" y="115.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1074.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (69 samples, 0.17%)</title><rect x="1071.5" y="99.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1074.5" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (69 samples, 0.17%)</title><rect x="1071.5" y="83.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1074.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (61 samples, 0.15%)</title><rect x="1073.6" y="211.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1076.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (59 samples, 0.15%)</title><rect x="1073.6" y="195.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1076.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (59 samples, 0.15%)</title><rect x="1073.6" y="179.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1076.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (30 samples, 0.08%)</title><rect x="1073.6" y="163.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1076.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (30 samples, 0.08%)</title><rect x="1073.6" y="147.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1076.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (30 samples, 0.08%)</title><rect x="1073.6" y="131.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1076.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (30 samples, 0.08%)</title><rect x="1073.6" y="115.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1076.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (30 samples, 0.08%)</title><rect x="1073.6" y="99.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1076.6" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (30 samples, 0.08%)</title><rect x="1073.6" y="83.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1076.6" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (29 samples, 0.07%)</title><rect x="1074.5" y="163.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1077.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (29 samples, 0.07%)</title><rect x="1074.5" y="147.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1077.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (29 samples, 0.07%)</title><rect x="1074.5" y="131.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1077.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (29 samples, 0.07%)</title><rect x="1074.5" y="115.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1077.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (29 samples, 0.07%)</title><rect x="1074.5" y="99.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1077.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (29 samples, 0.07%)</title><rect x="1074.5" y="83.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1077.5" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (29 samples, 0.07%)</title><rect x="1074.5" y="67.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1077.5" y="78.0"></text>
</g>
<g>
<title>[worker-41 tid=29738] (2,882 samples, 7.27%)</title><rect x="1075.4" y="355.0" width="85.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1078.4" y="366.0">[worker-41..</text>
</g>
<g>
<title>java/lang/Thread.run (2,882 samples, 7.27%)</title><rect x="1075.4" y="339.0" width="85.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1078.4" y="350.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,882 samples, 7.27%)</title><rect x="1075.4" y="323.0" width="85.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1078.4" y="334.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,882 samples, 7.27%)</title><rect x="1075.4" y="307.0" width="85.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1078.4" y="318.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (186 samples, 0.47%)</title><rect x="1075.4" y="291.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1078.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (186 samples, 0.47%)</title><rect x="1075.4" y="275.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1078.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (67 samples, 0.17%)</title><rect x="1075.4" y="259.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1078.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (67 samples, 0.17%)</title><rect x="1075.4" y="243.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1078.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (67 samples, 0.17%)</title><rect x="1075.4" y="227.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1078.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (67 samples, 0.17%)</title><rect x="1075.4" y="211.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1078.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (67 samples, 0.17%)</title><rect x="1075.4" y="195.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1078.4" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (67 samples, 0.17%)</title><rect x="1075.4" y="179.0" width="2.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1078.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (119 samples, 0.30%)</title><rect x="1077.4" y="259.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1080.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (119 samples, 0.30%)</title><rect x="1077.4" y="243.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1080.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (119 samples, 0.30%)</title><rect x="1077.4" y="227.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1080.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (119 samples, 0.30%)</title><rect x="1077.4" y="211.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1080.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (119 samples, 0.30%)</title><rect x="1077.4" y="195.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1080.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (119 samples, 0.30%)</title><rect x="1077.4" y="179.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1080.4" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (119 samples, 0.30%)</title><rect x="1077.4" y="163.0" width="3.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1080.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (2,696 samples, 6.80%)</title><rect x="1080.9" y="291.0" width="80.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1083.9" y="302.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (2,696 samples, 6.80%)</title><rect x="1080.9" y="275.0" width="80.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1083.9" y="286.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (2,694 samples, 6.80%)</title><rect x="1080.9" y="259.0" width="80.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1083.9" y="270.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (2,694 samples, 6.80%)</title><rect x="1080.9" y="243.0" width="80.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1083.9" y="254.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (2,694 samples, 6.80%)</title><rect x="1080.9" y="227.0" width="80.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1083.9" y="238.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (1,014 samples, 2.56%)</title><rect x="1080.9" y="211.0" width="30.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1083.9" y="222.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (1,014 samples, 2.56%)</title><rect x="1080.9" y="195.0" width="30.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1083.9" y="206.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (1,014 samples, 2.56%)</title><rect x="1080.9" y="179.0" width="30.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1083.9" y="190.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,014 samples, 2.56%)</title><rect x="1080.9" y="163.0" width="30.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1083.9" y="174.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,014 samples, 2.56%)</title><rect x="1080.9" y="147.0" width="30.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1083.9" y="158.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,014 samples, 2.56%)</title><rect x="1080.9" y="131.0" width="30.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1083.9" y="142.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,014 samples, 2.56%)</title><rect x="1080.9" y="115.0" width="30.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1083.9" y="126.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,014 samples, 2.56%)</title><rect x="1080.9" y="99.0" width="30.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1083.9" y="110.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (1,014 samples, 2.56%)</title><rect x="1080.9" y="83.0" width="30.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1083.9" y="94.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (1,680 samples, 4.24%)</title><rect x="1111.1" y="211.0" width="50.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1114.1" y="222.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (168 samples, 0.42%)</title><rect x="1111.1" y="195.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1114.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (168 samples, 0.42%)</title><rect x="1111.1" y="179.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1114.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (168 samples, 0.42%)</title><rect x="1111.1" y="163.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1114.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (131 samples, 0.33%)</title><rect x="1111.1" y="147.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1114.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (131 samples, 0.33%)</title><rect x="1111.1" y="131.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1114.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (131 samples, 0.33%)</title><rect x="1111.1" y="115.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (131 samples, 0.33%)</title><rect x="1111.1" y="99.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1114.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (131 samples, 0.33%)</title><rect x="1111.1" y="83.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1114.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (131 samples, 0.33%)</title><rect x="1111.1" y="67.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1114.1" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (131 samples, 0.33%)</title><rect x="1111.1" y="51.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1114.1" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (131 samples, 0.33%)</title><rect x="1111.1" y="35.0" width="3.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1114.1" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (37 samples, 0.09%)</title><rect x="1115.0" y="147.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1118.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (37 samples, 0.09%)</title><rect x="1115.0" y="131.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1118.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (37 samples, 0.09%)</title><rect x="1115.0" y="115.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (37 samples, 0.09%)</title><rect x="1115.0" y="99.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1118.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (37 samples, 0.09%)</title><rect x="1115.0" y="83.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1118.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (37 samples, 0.09%)</title><rect x="1115.0" y="67.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1118.0" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (37 samples, 0.09%)</title><rect x="1115.0" y="51.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1118.0" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (1,512 samples, 3.82%)</title><rect x="1116.1" y="195.0" width="45.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1119.1" y="206.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,512 samples, 3.82%)</title><rect x="1116.1" y="179.0" width="45.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1119.1" y="190.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (531 samples, 1.34%)</title><rect x="1116.1" y="163.0" width="15.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1119.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (531 samples, 1.34%)</title><rect x="1116.1" y="147.0" width="15.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1119.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (531 samples, 1.34%)</title><rect x="1116.1" y="131.0" width="15.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1119.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (531 samples, 1.34%)</title><rect x="1116.1" y="115.0" width="15.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1119.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (531 samples, 1.34%)</title><rect x="1116.1" y="99.0" width="15.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1119.1" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (531 samples, 1.34%)</title><rect x="1116.1" y="83.0" width="15.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1119.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (981 samples, 2.48%)</title><rect x="1132.0" y="163.0" width="29.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1135.0" y="174.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (981 samples, 2.48%)</title><rect x="1132.0" y="147.0" width="29.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1135.0" y="158.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (981 samples, 2.48%)</title><rect x="1132.0" y="131.0" width="29.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1135.0" y="142.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (981 samples, 2.48%)</title><rect x="1132.0" y="115.0" width="29.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1135.0" y="126.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (981 samples, 2.48%)</title><rect x="1132.0" y="99.0" width="29.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1135.0" y="110.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (981 samples, 2.48%)</title><rect x="1132.0" y="83.0" width="29.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1135.0" y="94.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (981 samples, 2.48%)</title><rect x="1132.0" y="67.0" width="29.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1135.0" y="78.0">ja..</text>
</g>
<g>
<title>[worker-42 tid=29747] (966 samples, 2.44%)</title><rect x="1161.2" y="355.0" width="28.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1164.2" y="366.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (966 samples, 2.44%)</title><rect x="1161.2" y="339.0" width="28.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1164.2" y="350.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (966 samples, 2.44%)</title><rect x="1161.2" y="323.0" width="28.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1164.2" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (966 samples, 2.44%)</title><rect x="1161.2" y="307.0" width="28.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1164.2" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (79 samples, 0.20%)</title><rect x="1161.2" y="291.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1164.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (79 samples, 0.20%)</title><rect x="1161.2" y="275.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1164.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (26 samples, 0.07%)</title><rect x="1161.2" y="259.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1164.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (26 samples, 0.07%)</title><rect x="1161.2" y="243.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1164.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (26 samples, 0.07%)</title><rect x="1161.2" y="227.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1164.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (26 samples, 0.07%)</title><rect x="1161.2" y="211.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1164.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (26 samples, 0.07%)</title><rect x="1161.2" y="195.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1164.2" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (26 samples, 0.07%)</title><rect x="1161.2" y="179.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1164.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (53 samples, 0.13%)</title><rect x="1162.0" y="259.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1165.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (53 samples, 0.13%)</title><rect x="1162.0" y="243.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1165.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (53 samples, 0.13%)</title><rect x="1162.0" y="227.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1165.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (53 samples, 0.13%)</title><rect x="1162.0" y="211.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1165.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (53 samples, 0.13%)</title><rect x="1162.0" y="195.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1165.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (53 samples, 0.13%)</title><rect x="1162.0" y="179.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1165.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (53 samples, 0.13%)</title><rect x="1162.0" y="163.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1165.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (887 samples, 2.24%)</title><rect x="1163.6" y="291.0" width="26.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1166.6" y="302.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (887 samples, 2.24%)</title><rect x="1163.6" y="275.0" width="26.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1166.6" y="286.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (887 samples, 2.24%)</title><rect x="1163.6" y="259.0" width="26.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1166.6" y="270.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (887 samples, 2.24%)</title><rect x="1163.6" y="243.0" width="26.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1166.6" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (887 samples, 2.24%)</title><rect x="1163.6" y="227.0" width="26.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1166.6" y="238.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (348 samples, 0.88%)</title><rect x="1163.6" y="211.0" width="10.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1166.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (348 samples, 0.88%)</title><rect x="1163.6" y="195.0" width="10.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1166.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (348 samples, 0.88%)</title><rect x="1163.6" y="179.0" width="10.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1166.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (348 samples, 0.88%)</title><rect x="1163.6" y="163.0" width="10.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1166.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (348 samples, 0.88%)</title><rect x="1163.6" y="147.0" width="10.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1166.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (348 samples, 0.88%)</title><rect x="1163.6" y="131.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1166.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (348 samples, 0.88%)</title><rect x="1163.6" y="115.0" width="10.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1166.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (348 samples, 0.88%)</title><rect x="1163.6" y="99.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1166.6" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (348 samples, 0.88%)</title><rect x="1163.6" y="83.0" width="10.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1166.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (539 samples, 1.36%)</title><rect x="1173.9" y="211.0" width="16.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1176.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (68 samples, 0.17%)</title><rect x="1173.9" y="195.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1176.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (68 samples, 0.17%)</title><rect x="1173.9" y="179.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1176.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (68 samples, 0.17%)</title><rect x="1173.9" y="163.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1176.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (60 samples, 0.15%)</title><rect x="1173.9" y="147.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1176.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (60 samples, 0.15%)</title><rect x="1173.9" y="131.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1176.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (60 samples, 0.15%)</title><rect x="1173.9" y="115.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1176.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (60 samples, 0.15%)</title><rect x="1173.9" y="99.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1176.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (60 samples, 0.15%)</title><rect x="1173.9" y="83.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1176.9" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (60 samples, 0.15%)</title><rect x="1173.9" y="67.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1176.9" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (60 samples, 0.15%)</title><rect x="1173.9" y="51.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1176.9" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (60 samples, 0.15%)</title><rect x="1173.9" y="35.0" width="1.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1176.9" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (471 samples, 1.19%)</title><rect x="1176.0" y="195.0" width="14.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1179.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (471 samples, 1.19%)</title><rect x="1176.0" y="179.0" width="14.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1179.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (180 samples, 0.45%)</title><rect x="1176.0" y="163.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1179.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (180 samples, 0.45%)</title><rect x="1176.0" y="147.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1179.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (180 samples, 0.45%)</title><rect x="1176.0" y="131.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1179.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (180 samples, 0.45%)</title><rect x="1176.0" y="115.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1179.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (180 samples, 0.45%)</title><rect x="1176.0" y="99.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1179.0" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (180 samples, 0.45%)</title><rect x="1176.0" y="83.0" width="5.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1179.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (291 samples, 0.73%)</title><rect x="1181.3" y="163.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1184.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (291 samples, 0.73%)</title><rect x="1181.3" y="147.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1184.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (291 samples, 0.73%)</title><rect x="1181.3" y="131.0" width="8.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1184.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (291 samples, 0.73%)</title><rect x="1181.3" y="115.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1184.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (291 samples, 0.73%)</title><rect x="1181.3" y="99.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1184.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (291 samples, 0.73%)</title><rect x="1181.3" y="83.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1184.3" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (291 samples, 0.73%)</title><rect x="1181.3" y="67.0" width="8.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1184.3" y="78.0"></text>
</g>
</g>
</svg>
