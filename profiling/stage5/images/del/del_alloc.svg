<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="389"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="389"> </text>
<g id="frames">
<g>
<title>all (227,118 samples, 100.00%)</title><rect x="10.0" y="355.0" width="1180.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="13.0" y="366.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=25757] (6,468 samples, 2.85%)</title><rect x="10.1" y="339.0" width="33.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="13.1" y="350.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (6,468 samples, 2.85%)</title><rect x="10.1" y="323.0" width="33.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.1" y="334.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (6,468 samples, 2.85%)</title><rect x="10.1" y="307.0" width="33.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.1" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6,468 samples, 2.85%)</title><rect x="10.1" y="291.0" width="33.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.1" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6,468 samples, 2.85%)</title><rect x="10.1" y="275.0" width="33.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.1" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,082 samples, 1.80%)</title><rect x="10.1" y="259.0" width="21.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.1" y="270.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,082 samples, 1.80%)</title><rect x="10.1" y="243.0" width="21.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.1" y="254.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3,848 samples, 1.69%)</title><rect x="10.1" y="227.0" width="20.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (431 samples, 0.19%)</title><rect x="10.1" y="211.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.1" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (431 samples, 0.19%)</title><rect x="10.1" y="195.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (431 samples, 0.19%)</title><rect x="10.1" y="179.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.1" y="190.0"></text>
</g>
<g>
<title>java.lang.String (225 samples, 0.10%)</title><rect x="10.1" y="163.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="13.1" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (206 samples, 0.09%)</title><rect x="11.2" y="163.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.2" y="174.0"></text>
</g>
<g>
<title>byte[] (206 samples, 0.09%)</title><rect x="11.2" y="147.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="14.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (3,417 samples, 1.50%)</title><rect x="12.3" y="211.0" width="17.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (147 samples, 0.06%)</title><rect x="12.3" y="195.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (147 samples, 0.06%)</title><rect x="12.3" y="179.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="15.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.get$Lambda (147 samples, 0.06%)</title><rect x="12.3" y="163.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="15.3" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$82 (147 samples, 0.06%)</title><rect x="12.3" y="147.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="15.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (146 samples, 0.06%)</title><rect x="13.1" y="195.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="16.1" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (146 samples, 0.06%)</title><rect x="13.1" y="179.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="16.1" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (146 samples, 0.06%)</title><rect x="13.1" y="163.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="16.1" y="174.0"></text>
</g>
<g>
<title>java.lang.String (86 samples, 0.04%)</title><rect x="13.1" y="147.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="16.1" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (60 samples, 0.03%)</title><rect x="13.5" y="147.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="16.5" y="158.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.03%)</title><rect x="13.5" y="131.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="16.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (155 samples, 0.07%)</title><rect x="13.8" y="195.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="16.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (68 samples, 0.03%)</title><rect x="13.8" y="179.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (68 samples, 0.03%)</title><rect x="13.8" y="163.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (68 samples, 0.03%)</title><rect x="13.8" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.8" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (68 samples, 0.03%)</title><rect x="13.8" y="131.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="16.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (87 samples, 0.04%)</title><rect x="14.2" y="179.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (87 samples, 0.04%)</title><rect x="14.2" y="163.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.2" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (87 samples, 0.04%)</title><rect x="14.2" y="147.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="17.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (1,644 samples, 0.72%)</title><rect x="14.6" y="195.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.6" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (1,644 samples, 0.72%)</title><rect x="14.6" y="179.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.6" y="190.0"></text>
</g>
<g>
<title>java.util.HashSet (49 samples, 0.02%)</title><rect x="14.6" y="163.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="17.6" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (374 samples, 0.16%)</title><rect x="14.9" y="163.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.9" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (160 samples, 0.07%)</title><rect x="14.9" y="147.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="17.9" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (214 samples, 0.09%)</title><rect x="15.7" y="147.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.7" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (160 samples, 0.07%)</title><rect x="15.7" y="131.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.7" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (160 samples, 0.07%)</title><rect x="15.7" y="115.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="18.7" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (54 samples, 0.02%)</title><rect x="16.6" y="131.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.6" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (54 samples, 0.02%)</title><rect x="16.6" y="115.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="19.6" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (975 samples, 0.43%)</title><rect x="16.8" y="163.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.8" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (197 samples, 0.09%)</title><rect x="16.8" y="147.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="19.8" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (778 samples, 0.34%)</title><rect x="17.9" y="147.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.9" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (637 samples, 0.28%)</title><rect x="17.9" y="131.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.9" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (637 samples, 0.28%)</title><rect x="17.9" y="115.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.9" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (637 samples, 0.28%)</title><rect x="17.9" y="99.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.9" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (367 samples, 0.16%)</title><rect x="17.9" y="83.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="20.9" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (367 samples, 0.16%)</title><rect x="17.9" y="67.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="20.9" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (270 samples, 0.12%)</title><rect x="19.8" y="83.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.8" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (260 samples, 0.11%)</title><rect x="19.8" y="67.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="22.8" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (141 samples, 0.06%)</title><rect x="21.2" y="131.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.2" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (141 samples, 0.06%)</title><rect x="21.2" y="115.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="24.2" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (141 samples, 0.06%)</title><rect x="21.2" y="99.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.2" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (141 samples, 0.06%)</title><rect x="21.2" y="83.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="24.2" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (246 samples, 0.11%)</title><rect x="21.9" y="163.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.9" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (93 samples, 0.04%)</title><rect x="21.9" y="147.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="24.9" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (153 samples, 0.07%)</title><rect x="22.4" y="147.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.4" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (153 samples, 0.07%)</title><rect x="22.4" y="131.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="25.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,325 samples, 0.58%)</title><rect x="23.2" y="195.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (237 samples, 0.10%)</title><rect x="23.2" y="179.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (71 samples, 0.03%)</title><rect x="23.2" y="163.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.2" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (71 samples, 0.03%)</title><rect x="23.2" y="147.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="26.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (166 samples, 0.07%)</title><rect x="23.5" y="163.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.5" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (49 samples, 0.02%)</title><rect x="23.5" y="147.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="26.5" y="158.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (117 samples, 0.05%)</title><rect x="23.8" y="147.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="26.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (990 samples, 0.44%)</title><rect x="24.4" y="179.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="27.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (381 samples, 0.17%)</title><rect x="24.4" y="163.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="27.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (381 samples, 0.17%)</title><rect x="24.4" y="147.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (381 samples, 0.17%)</title><rect x="24.4" y="131.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.4" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (381 samples, 0.17%)</title><rect x="24.4" y="115.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="27.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (381 samples, 0.17%)</title><rect x="24.4" y="99.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.4" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (381 samples, 0.17%)</title><rect x="24.4" y="83.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="27.4" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (381 samples, 0.17%)</title><rect x="24.4" y="67.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.4" y="78.0"></text>
</g>
<g>
<title>java.lang.String (189 samples, 0.08%)</title><rect x="24.4" y="51.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="27.4" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (192 samples, 0.08%)</title><rect x="25.4" y="51.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="28.4" y="62.0"></text>
</g>
<g>
<title>byte[] (192 samples, 0.08%)</title><rect x="25.4" y="35.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="28.4" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (205 samples, 0.09%)</title><rect x="26.4" y="163.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="29.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (205 samples, 0.09%)</title><rect x="26.4" y="147.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (205 samples, 0.09%)</title><rect x="26.4" y="131.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.4" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (205 samples, 0.09%)</title><rect x="26.4" y="115.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="29.4" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (100 samples, 0.04%)</title><rect x="27.5" y="163.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="30.5" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (210 samples, 0.09%)</title><rect x="28.0" y="163.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.0" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (210 samples, 0.09%)</title><rect x="28.0" y="147.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="31.0" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (210 samples, 0.09%)</title><rect x="28.0" y="131.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="31.0" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (210 samples, 0.09%)</title><rect x="28.0" y="115.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="31.0" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (210 samples, 0.09%)</title><rect x="28.0" y="99.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.0" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (204 samples, 0.09%)</title><rect x="28.0" y="83.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="31.0" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (94 samples, 0.04%)</title><rect x="29.1" y="163.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.1" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (94 samples, 0.04%)</title><rect x="29.1" y="147.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="32.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (98 samples, 0.04%)</title><rect x="29.6" y="179.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="32.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (234 samples, 0.10%)</title><rect x="30.1" y="227.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="33.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (234 samples, 0.10%)</title><rect x="30.1" y="211.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="33.1" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (234 samples, 0.10%)</title><rect x="30.1" y="195.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.1" y="206.0"></text>
</g>
<g>
<title>java.lang.String (97 samples, 0.04%)</title><rect x="30.1" y="179.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="33.1" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (137 samples, 0.06%)</title><rect x="30.6" y="179.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="33.6" y="190.0"></text>
</g>
<g>
<title>byte[] (137 samples, 0.06%)</title><rect x="30.6" y="163.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="33.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,334 samples, 0.59%)</title><rect x="31.3" y="259.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.3" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (143 samples, 0.06%)</title><rect x="31.3" y="243.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="34.3" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (351 samples, 0.15%)</title><rect x="32.0" y="243.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="35.0" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (331 samples, 0.15%)</title><rect x="32.0" y="227.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="35.0" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (840 samples, 0.37%)</title><rect x="33.8" y="243.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.8" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (840 samples, 0.37%)</title><rect x="33.8" y="227.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="36.8" y="238.0"></text>
</g>
<g>
<title>char[] (482 samples, 0.21%)</title><rect x="33.8" y="211.0" width="2.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="36.8" y="222.0"></text>
</g>
<g>
<title>java.lang.String (95 samples, 0.04%)</title><rect x="36.4" y="211.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="39.4" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (256 samples, 0.11%)</title><rect x="36.9" y="211.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (256 samples, 0.11%)</title><rect x="36.9" y="195.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (256 samples, 0.11%)</title><rect x="36.9" y="179.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="39.9" y="190.0"></text>
</g>
<g>
<title>byte[] (250 samples, 0.11%)</title><rect x="36.9" y="163.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="39.9" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,052 samples, 0.46%)</title><rect x="38.2" y="259.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.2" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,052 samples, 0.46%)</title><rect x="38.2" y="243.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.2" y="254.0"></text>
</g>
<g>
<title>char[] (499 samples, 0.22%)</title><rect x="38.2" y="227.0" width="2.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="41.2" y="238.0"></text>
</g>
<g>
<title>java.lang.String (233 samples, 0.10%)</title><rect x="40.8" y="227.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="43.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (319 samples, 0.14%)</title><rect x="42.0" y="227.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.0" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (319 samples, 0.14%)</title><rect x="42.0" y="211.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.0" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (319 samples, 0.14%)</title><rect x="42.0" y="195.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.0" y="206.0"></text>
</g>
<g>
<title>byte[] (319 samples, 0.14%)</title><rect x="42.0" y="179.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="45.0" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=25763] (6,011 samples, 2.65%)</title><rect x="43.7" y="339.0" width="31.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="46.7" y="350.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (6,011 samples, 2.65%)</title><rect x="43.7" y="323.0" width="31.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="46.7" y="334.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (6,011 samples, 2.65%)</title><rect x="43.7" y="307.0" width="31.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="46.7" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6,011 samples, 2.65%)</title><rect x="43.7" y="291.0" width="31.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.7" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6,011 samples, 2.65%)</title><rect x="43.7" y="275.0" width="31.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="46.7" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3,806 samples, 1.68%)</title><rect x="43.7" y="259.0" width="19.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3,806 samples, 1.68%)</title><rect x="43.7" y="243.0" width="19.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="46.7" y="254.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3,597 samples, 1.58%)</title><rect x="43.7" y="227.0" width="18.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="46.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (354 samples, 0.16%)</title><rect x="43.7" y="211.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="46.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (354 samples, 0.16%)</title><rect x="43.7" y="195.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (354 samples, 0.16%)</title><rect x="43.7" y="179.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.7" y="190.0"></text>
</g>
<g>
<title>java.lang.String (163 samples, 0.07%)</title><rect x="43.7" y="163.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="46.7" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (191 samples, 0.08%)</title><rect x="44.5" y="163.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.5" y="174.0"></text>
</g>
<g>
<title>byte[] (191 samples, 0.08%)</title><rect x="44.5" y="147.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="47.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (3,243 samples, 1.43%)</title><rect x="45.5" y="211.0" width="16.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (124 samples, 0.05%)</title><rect x="45.5" y="195.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (124 samples, 0.05%)</title><rect x="45.5" y="179.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.get$Lambda (124 samples, 0.05%)</title><rect x="45.5" y="163.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.5" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$82 (124 samples, 0.05%)</title><rect x="45.5" y="147.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="48.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (158 samples, 0.07%)</title><rect x="46.2" y="195.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.2" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (158 samples, 0.07%)</title><rect x="46.2" y="179.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.2" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (158 samples, 0.07%)</title><rect x="46.2" y="163.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String (91 samples, 0.04%)</title><rect x="46.2" y="147.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="49.2" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (67 samples, 0.03%)</title><rect x="46.6" y="147.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.6" y="158.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.03%)</title><rect x="46.6" y="131.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="49.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (164 samples, 0.07%)</title><rect x="47.0" y="195.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="50.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (80 samples, 0.04%)</title><rect x="47.0" y="179.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="50.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (80 samples, 0.04%)</title><rect x="47.0" y="163.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (80 samples, 0.04%)</title><rect x="47.0" y="147.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.0" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (80 samples, 0.04%)</title><rect x="47.0" y="131.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="50.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (84 samples, 0.04%)</title><rect x="47.4" y="179.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="50.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (84 samples, 0.04%)</title><rect x="47.4" y="163.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="50.4" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (84 samples, 0.04%)</title><rect x="47.4" y="147.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="50.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (1,524 samples, 0.67%)</title><rect x="47.8" y="195.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.8" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (1,524 samples, 0.67%)</title><rect x="47.8" y="179.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.8" y="190.0"></text>
</g>
<g>
<title>java.util.HashSet (50 samples, 0.02%)</title><rect x="47.8" y="163.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="50.8" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (297 samples, 0.13%)</title><rect x="48.1" y="163.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="51.1" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (124 samples, 0.05%)</title><rect x="48.1" y="147.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="51.1" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (173 samples, 0.08%)</title><rect x="48.7" y="147.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="51.7" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (133 samples, 0.06%)</title><rect x="48.7" y="131.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.7" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (133 samples, 0.06%)</title><rect x="48.7" y="115.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="51.7" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (953 samples, 0.42%)</title><rect x="49.6" y="163.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.6" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (174 samples, 0.08%)</title><rect x="49.6" y="147.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="52.6" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (779 samples, 0.34%)</title><rect x="50.5" y="147.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.5" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (645 samples, 0.28%)</title><rect x="50.5" y="131.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.5" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (645 samples, 0.28%)</title><rect x="50.5" y="115.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.5" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (645 samples, 0.28%)</title><rect x="50.5" y="99.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.5" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (344 samples, 0.15%)</title><rect x="50.5" y="83.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.5" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (344 samples, 0.15%)</title><rect x="50.5" y="67.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="53.5" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (301 samples, 0.13%)</title><rect x="52.3" y="83.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="55.3" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (290 samples, 0.13%)</title><rect x="52.3" y="67.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="55.3" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (134 samples, 0.06%)</title><rect x="53.9" y="131.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="56.9" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (134 samples, 0.06%)</title><rect x="53.9" y="115.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.9" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (134 samples, 0.06%)</title><rect x="53.9" y="99.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.9" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (134 samples, 0.06%)</title><rect x="53.9" y="83.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="56.9" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (224 samples, 0.10%)</title><rect x="54.6" y="163.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.6" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (103 samples, 0.05%)</title><rect x="54.6" y="147.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="57.6" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (121 samples, 0.05%)</title><rect x="55.1" y="147.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="58.1" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (121 samples, 0.05%)</title><rect x="55.1" y="131.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="58.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,273 samples, 0.56%)</title><rect x="55.7" y="195.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="58.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (253 samples, 0.11%)</title><rect x="55.7" y="179.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (74 samples, 0.03%)</title><rect x="55.7" y="163.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.7" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (74 samples, 0.03%)</title><rect x="55.7" y="147.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="58.7" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (179 samples, 0.08%)</title><rect x="56.1" y="163.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="59.1" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (56 samples, 0.02%)</title><rect x="56.1" y="147.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="59.1" y="158.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (123 samples, 0.05%)</title><rect x="56.4" y="147.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="59.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (938 samples, 0.41%)</title><rect x="57.1" y="179.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="60.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (361 samples, 0.16%)</title><rect x="57.1" y="163.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (361 samples, 0.16%)</title><rect x="57.1" y="147.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.1" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (361 samples, 0.16%)</title><rect x="57.1" y="131.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.1" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (361 samples, 0.16%)</title><rect x="57.1" y="115.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="60.1" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (361 samples, 0.16%)</title><rect x="57.1" y="99.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="60.1" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (361 samples, 0.16%)</title><rect x="57.1" y="83.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.1" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (361 samples, 0.16%)</title><rect x="57.1" y="67.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="60.1" y="78.0"></text>
</g>
<g>
<title>java.lang.String (180 samples, 0.08%)</title><rect x="57.1" y="51.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="60.1" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (181 samples, 0.08%)</title><rect x="58.0" y="51.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.0" y="62.0"></text>
</g>
<g>
<title>byte[] (181 samples, 0.08%)</title><rect x="58.0" y="35.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="61.0" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (179 samples, 0.08%)</title><rect x="58.9" y="163.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (179 samples, 0.08%)</title><rect x="58.9" y="147.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (179 samples, 0.08%)</title><rect x="58.9" y="131.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.9" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (179 samples, 0.08%)</title><rect x="58.9" y="115.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="61.9" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (98 samples, 0.04%)</title><rect x="59.9" y="163.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="62.9" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (208 samples, 0.09%)</title><rect x="60.4" y="163.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.4" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (208 samples, 0.09%)</title><rect x="60.4" y="147.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.4" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (208 samples, 0.09%)</title><rect x="60.4" y="131.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="63.4" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (208 samples, 0.09%)</title><rect x="60.4" y="115.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.4" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (208 samples, 0.09%)</title><rect x="60.4" y="99.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="63.4" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (200 samples, 0.09%)</title><rect x="60.4" y="83.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="63.4" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (92 samples, 0.04%)</title><rect x="61.5" y="163.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.5" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (92 samples, 0.04%)</title><rect x="61.5" y="147.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="64.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (82 samples, 0.04%)</title><rect x="61.9" y="179.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="64.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (209 samples, 0.09%)</title><rect x="62.4" y="227.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.4" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (209 samples, 0.09%)</title><rect x="62.4" y="211.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.4" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (209 samples, 0.09%)</title><rect x="62.4" y="195.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.4" y="206.0"></text>
</g>
<g>
<title>java.lang.String (79 samples, 0.03%)</title><rect x="62.4" y="179.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="65.4" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (130 samples, 0.06%)</title><rect x="62.8" y="179.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.8" y="190.0"></text>
</g>
<g>
<title>byte[] (130 samples, 0.06%)</title><rect x="62.8" y="163.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="65.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,103 samples, 0.49%)</title><rect x="63.4" y="259.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.4" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (115 samples, 0.05%)</title><rect x="63.4" y="243.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="66.4" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (295 samples, 0.13%)</title><rect x="64.0" y="243.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.0" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (289 samples, 0.13%)</title><rect x="64.0" y="227.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="67.0" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (693 samples, 0.31%)</title><rect x="65.6" y="243.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="68.6" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (693 samples, 0.31%)</title><rect x="65.6" y="227.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.6" y="238.0"></text>
</g>
<g>
<title>char[] (369 samples, 0.16%)</title><rect x="65.6" y="211.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="68.6" y="222.0"></text>
</g>
<g>
<title>java.lang.String (87 samples, 0.04%)</title><rect x="67.5" y="211.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="70.5" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (230 samples, 0.10%)</title><rect x="68.0" y="211.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (230 samples, 0.10%)</title><rect x="68.0" y="195.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="71.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (230 samples, 0.10%)</title><rect x="68.0" y="179.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.0" y="190.0"></text>
</g>
<g>
<title>byte[] (228 samples, 0.10%)</title><rect x="68.0" y="163.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="71.0" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,102 samples, 0.49%)</title><rect x="69.2" y="259.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.2" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,102 samples, 0.49%)</title><rect x="69.2" y="243.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.2" y="254.0"></text>
</g>
<g>
<title>char[] (485 samples, 0.21%)</title><rect x="69.2" y="227.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="72.2" y="238.0"></text>
</g>
<g>
<title>java.lang.String (269 samples, 0.12%)</title><rect x="71.7" y="227.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="74.7" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (346 samples, 0.15%)</title><rect x="73.1" y="227.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (346 samples, 0.15%)</title><rect x="73.1" y="211.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.1" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (346 samples, 0.15%)</title><rect x="73.1" y="195.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.1" y="206.0"></text>
</g>
<g>
<title>byte[] (346 samples, 0.15%)</title><rect x="73.1" y="179.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="76.1" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25748] (7,128 samples, 3.14%)</title><rect x="74.9" y="339.0" width="37.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="77.9" y="350.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (7,128 samples, 3.14%)</title><rect x="74.9" y="323.0" width="37.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.9" y="334.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.process (7,128 samples, 3.14%)</title><rect x="74.9" y="307.0" width="37.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.9" y="318.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (7,128 samples, 3.14%)</title><rect x="74.9" y="291.0" width="37.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.9" y="302.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7,128 samples, 3.14%)</title><rect x="74.9" y="275.0" width="37.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.9" y="286.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,966 samples, 2.19%)</title><rect x="74.9" y="259.0" width="25.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.9" y="270.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,966 samples, 2.19%)</title><rect x="74.9" y="243.0" width="25.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.9" y="254.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4,639 samples, 2.04%)</title><rect x="74.9" y="227.0" width="24.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="77.9" y="238.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (450 samples, 0.20%)</title><rect x="74.9" y="211.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (450 samples, 0.20%)</title><rect x="74.9" y="195.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (450 samples, 0.20%)</title><rect x="74.9" y="179.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String (202 samples, 0.09%)</title><rect x="74.9" y="163.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="77.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (248 samples, 0.11%)</title><rect x="76.0" y="163.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.0" y="174.0"></text>
</g>
<g>
<title>byte[] (248 samples, 0.11%)</title><rect x="76.0" y="147.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="79.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (4,189 samples, 1.84%)</title><rect x="77.2" y="211.0" width="21.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.2" y="222.0">r..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (171 samples, 0.08%)</title><rect x="77.2" y="195.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (171 samples, 0.08%)</title><rect x="77.2" y="179.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.get$Lambda (171 samples, 0.08%)</title><rect x="77.2" y="163.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.2" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$82 (171 samples, 0.08%)</title><rect x="77.2" y="147.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="80.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (258 samples, 0.11%)</title><rect x="78.1" y="195.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (108 samples, 0.05%)</title><rect x="78.1" y="179.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="81.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (108 samples, 0.05%)</title><rect x="78.1" y="163.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="81.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (108 samples, 0.05%)</title><rect x="78.1" y="147.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="81.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (108 samples, 0.05%)</title><rect x="78.1" y="131.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="81.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (150 samples, 0.07%)</title><rect x="78.7" y="179.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (150 samples, 0.07%)</title><rect x="78.7" y="163.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.7" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (150 samples, 0.07%)</title><rect x="78.7" y="147.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="81.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (2,103 samples, 0.93%)</title><rect x="79.5" y="195.0" width="10.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.5" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (2,103 samples, 0.93%)</title><rect x="79.5" y="179.0" width="10.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.5" y="190.0"></text>
</g>
<g>
<title>java.util.HashSet (91 samples, 0.04%)</title><rect x="79.5" y="163.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="82.5" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (429 samples, 0.19%)</title><rect x="79.9" y="163.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.9" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (156 samples, 0.07%)</title><rect x="79.9" y="147.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="82.9" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (273 samples, 0.12%)</title><rect x="80.8" y="147.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="83.8" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (191 samples, 0.08%)</title><rect x="80.8" y="131.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.8" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (191 samples, 0.08%)</title><rect x="80.8" y="115.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="83.8" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (82 samples, 0.04%)</title><rect x="81.7" y="131.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.7" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (82 samples, 0.04%)</title><rect x="81.7" y="115.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="84.7" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,281 samples, 0.56%)</title><rect x="82.2" y="163.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.2" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (222 samples, 0.10%)</title><rect x="82.2" y="147.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="85.2" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1,059 samples, 0.47%)</title><rect x="83.3" y="147.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.3" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (911 samples, 0.40%)</title><rect x="83.3" y="131.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.3" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (911 samples, 0.40%)</title><rect x="83.3" y="115.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.3" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (911 samples, 0.40%)</title><rect x="83.3" y="99.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.3" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (463 samples, 0.20%)</title><rect x="83.3" y="83.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.3" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (463 samples, 0.20%)</title><rect x="83.3" y="67.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="86.3" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (448 samples, 0.20%)</title><rect x="85.7" y="83.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.7" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (431 samples, 0.19%)</title><rect x="85.7" y="67.0" width="2.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="88.7" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (148 samples, 0.07%)</title><rect x="88.1" y="131.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="91.1" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (148 samples, 0.07%)</title><rect x="88.1" y="115.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.1" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (148 samples, 0.07%)</title><rect x="88.1" y="99.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="91.1" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (148 samples, 0.07%)</title><rect x="88.1" y="83.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="91.1" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (302 samples, 0.13%)</title><rect x="88.8" y="163.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.8" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (119 samples, 0.05%)</title><rect x="88.8" y="147.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="91.8" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (183 samples, 0.08%)</title><rect x="89.4" y="147.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.4" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (183 samples, 0.08%)</title><rect x="89.4" y="131.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="92.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,657 samples, 0.73%)</title><rect x="90.4" y="195.0" width="8.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (307 samples, 0.14%)</title><rect x="90.4" y="179.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (80 samples, 0.04%)</title><rect x="90.4" y="163.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="93.4" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (80 samples, 0.04%)</title><rect x="90.4" y="147.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="93.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (227 samples, 0.10%)</title><rect x="90.8" y="163.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.8" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (98 samples, 0.04%)</title><rect x="90.8" y="147.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="93.8" y="158.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (129 samples, 0.06%)</title><rect x="91.3" y="147.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="94.3" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1,256 samples, 0.55%)</title><rect x="92.0" y="179.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="95.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (481 samples, 0.21%)</title><rect x="92.0" y="163.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="95.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (481 samples, 0.21%)</title><rect x="92.0" y="147.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (481 samples, 0.21%)</title><rect x="92.0" y="131.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="95.0" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (481 samples, 0.21%)</title><rect x="92.0" y="115.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="95.0" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (481 samples, 0.21%)</title><rect x="92.0" y="99.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.0" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (481 samples, 0.21%)</title><rect x="92.0" y="83.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="95.0" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (481 samples, 0.21%)</title><rect x="92.0" y="67.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="95.0" y="78.0"></text>
</g>
<g>
<title>java.lang.String (231 samples, 0.10%)</title><rect x="92.0" y="51.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="95.0" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (250 samples, 0.11%)</title><rect x="93.2" y="51.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.2" y="62.0"></text>
</g>
<g>
<title>byte[] (250 samples, 0.11%)</title><rect x="93.2" y="35.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="96.2" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (261 samples, 0.11%)</title><rect x="94.5" y="163.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (261 samples, 0.11%)</title><rect x="94.5" y="147.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (261 samples, 0.11%)</title><rect x="94.5" y="131.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="97.5" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (261 samples, 0.11%)</title><rect x="94.5" y="115.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="97.5" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (109 samples, 0.05%)</title><rect x="95.8" y="163.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="98.8" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (285 samples, 0.13%)</title><rect x="96.4" y="163.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="99.4" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (285 samples, 0.13%)</title><rect x="96.4" y="147.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="99.4" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (285 samples, 0.13%)</title><rect x="96.4" y="131.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.4" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (285 samples, 0.13%)</title><rect x="96.4" y="115.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="99.4" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (285 samples, 0.13%)</title><rect x="96.4" y="99.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.4" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (281 samples, 0.12%)</title><rect x="96.4" y="83.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="99.4" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (120 samples, 0.05%)</title><rect x="97.9" y="163.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.9" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (120 samples, 0.05%)</title><rect x="97.9" y="147.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="100.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (94 samples, 0.04%)</title><rect x="98.5" y="179.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="101.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (327 samples, 0.14%)</title><rect x="99.0" y="227.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="102.0" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (327 samples, 0.14%)</title><rect x="99.0" y="211.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.0" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (327 samples, 0.14%)</title><rect x="99.0" y="195.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.0" y="206.0"></text>
</g>
<g>
<title>java.lang.String (130 samples, 0.06%)</title><rect x="99.0" y="179.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="102.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (197 samples, 0.09%)</title><rect x="99.7" y="179.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="102.7" y="190.0"></text>
</g>
<g>
<title>byte[] (197 samples, 0.09%)</title><rect x="99.7" y="163.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="102.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,557 samples, 0.69%)</title><rect x="100.7" y="259.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.7" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (203 samples, 0.09%)</title><rect x="100.7" y="243.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="103.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (367 samples, 0.16%)</title><rect x="101.8" y="243.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.8" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (364 samples, 0.16%)</title><rect x="101.8" y="227.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="104.8" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (987 samples, 0.43%)</title><rect x="103.7" y="243.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.7" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (987 samples, 0.43%)</title><rect x="103.7" y="227.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.7" y="238.0"></text>
</g>
<g>
<title>char[] (611 samples, 0.27%)</title><rect x="103.7" y="211.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="106.7" y="222.0"></text>
</g>
<g>
<title>java.lang.String (99 samples, 0.04%)</title><rect x="106.9" y="211.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="109.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (273 samples, 0.12%)</title><rect x="107.4" y="211.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.4" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (273 samples, 0.12%)</title><rect x="107.4" y="195.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.4" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (273 samples, 0.12%)</title><rect x="107.4" y="179.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.4" y="190.0"></text>
</g>
<g>
<title>byte[] (273 samples, 0.12%)</title><rect x="107.4" y="163.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="110.4" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (605 samples, 0.27%)</title><rect x="108.8" y="259.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.8" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (605 samples, 0.27%)</title><rect x="108.8" y="243.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.8" y="254.0"></text>
</g>
<g>
<title>char[] (326 samples, 0.14%)</title><rect x="108.8" y="227.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="111.8" y="238.0"></text>
</g>
<g>
<title>java.lang.String (115 samples, 0.05%)</title><rect x="110.5" y="227.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="113.5" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (164 samples, 0.07%)</title><rect x="111.1" y="227.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="114.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (164 samples, 0.07%)</title><rect x="111.1" y="211.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.1" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (164 samples, 0.07%)</title><rect x="111.1" y="195.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.1" y="206.0"></text>
</g>
<g>
<title>byte[] (164 samples, 0.07%)</title><rect x="111.1" y="179.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="114.1" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25758] (7,113 samples, 3.13%)</title><rect x="111.9" y="339.0" width="37.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="114.9" y="350.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (7,113 samples, 3.13%)</title><rect x="111.9" y="323.0" width="37.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.9" y="334.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.process (7,113 samples, 3.13%)</title><rect x="111.9" y="307.0" width="37.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.9" y="318.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (7,113 samples, 3.13%)</title><rect x="111.9" y="291.0" width="37.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="114.9" y="302.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7,113 samples, 3.13%)</title><rect x="111.9" y="275.0" width="37.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.9" y="286.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,468 samples, 1.97%)</title><rect x="111.9" y="259.0" width="23.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.9" y="270.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,468 samples, 1.97%)</title><rect x="111.9" y="243.0" width="23.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.9" y="254.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4,253 samples, 1.87%)</title><rect x="111.9" y="227.0" width="22.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.9" y="238.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (414 samples, 0.18%)</title><rect x="111.9" y="211.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="114.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (414 samples, 0.18%)</title><rect x="111.9" y="195.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (414 samples, 0.18%)</title><rect x="111.9" y="179.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String (174 samples, 0.08%)</title><rect x="111.9" y="163.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="114.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (240 samples, 0.11%)</title><rect x="112.8" y="163.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.8" y="174.0"></text>
</g>
<g>
<title>byte[] (240 samples, 0.11%)</title><rect x="112.8" y="147.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="115.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (3,839 samples, 1.69%)</title><rect x="114.1" y="211.0" width="19.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="117.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (164 samples, 0.07%)</title><rect x="114.1" y="195.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (164 samples, 0.07%)</title><rect x="114.1" y="179.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.get$Lambda (164 samples, 0.07%)</title><rect x="114.1" y="163.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.1" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$82 (164 samples, 0.07%)</title><rect x="114.1" y="147.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="117.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (158 samples, 0.07%)</title><rect x="114.9" y="195.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="117.9" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (158 samples, 0.07%)</title><rect x="114.9" y="179.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.9" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (158 samples, 0.07%)</title><rect x="114.9" y="163.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String (93 samples, 0.04%)</title><rect x="114.9" y="147.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="117.9" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (65 samples, 0.03%)</title><rect x="115.4" y="147.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.4" y="158.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.03%)</title><rect x="115.4" y="131.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="118.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (190 samples, 0.08%)</title><rect x="115.8" y="195.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (96 samples, 0.04%)</title><rect x="115.8" y="179.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="118.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (96 samples, 0.04%)</title><rect x="115.8" y="163.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (96 samples, 0.04%)</title><rect x="115.8" y="147.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.8" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (96 samples, 0.04%)</title><rect x="115.8" y="131.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="118.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (94 samples, 0.04%)</title><rect x="116.3" y="179.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (94 samples, 0.04%)</title><rect x="116.3" y="163.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="119.3" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (94 samples, 0.04%)</title><rect x="116.3" y="147.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="119.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (1,871 samples, 0.82%)</title><rect x="116.7" y="195.0" width="9.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.7" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (1,871 samples, 0.82%)</title><rect x="116.7" y="179.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="119.7" y="190.0"></text>
</g>
<g>
<title>java.util.HashSet (62 samples, 0.03%)</title><rect x="116.7" y="163.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="119.7" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (388 samples, 0.17%)</title><rect x="117.1" y="163.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.1" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (141 samples, 0.06%)</title><rect x="117.1" y="147.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="120.1" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (247 samples, 0.11%)</title><rect x="117.8" y="147.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.8" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (176 samples, 0.08%)</title><rect x="117.8" y="131.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.8" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (176 samples, 0.08%)</title><rect x="117.8" y="115.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="120.8" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (71 samples, 0.03%)</title><rect x="118.7" y="131.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="121.7" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (71 samples, 0.03%)</title><rect x="118.7" y="115.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="121.7" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,159 samples, 0.51%)</title><rect x="119.1" y="163.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="122.1" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (240 samples, 0.11%)</title><rect x="119.1" y="147.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="122.1" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (919 samples, 0.40%)</title><rect x="120.3" y="147.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="123.3" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (772 samples, 0.34%)</title><rect x="120.3" y="131.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="123.3" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (772 samples, 0.34%)</title><rect x="120.3" y="115.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="123.3" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (772 samples, 0.34%)</title><rect x="120.3" y="99.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.3" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (409 samples, 0.18%)</title><rect x="120.3" y="83.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="123.3" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (409 samples, 0.18%)</title><rect x="120.3" y="67.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="123.3" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (363 samples, 0.16%)</title><rect x="122.5" y="83.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.5" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (351 samples, 0.15%)</title><rect x="122.5" y="67.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="125.5" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (147 samples, 0.06%)</title><rect x="124.3" y="131.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.3" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (147 samples, 0.06%)</title><rect x="124.3" y="115.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="127.3" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (147 samples, 0.06%)</title><rect x="124.3" y="99.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="127.3" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (147 samples, 0.06%)</title><rect x="124.3" y="83.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="127.3" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (262 samples, 0.12%)</title><rect x="125.1" y="163.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="128.1" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (100 samples, 0.04%)</title><rect x="125.1" y="147.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="128.1" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (162 samples, 0.07%)</title><rect x="125.6" y="147.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="128.6" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (162 samples, 0.07%)</title><rect x="125.6" y="131.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="128.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,456 samples, 0.64%)</title><rect x="126.5" y="195.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="129.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (281 samples, 0.12%)</title><rect x="126.5" y="179.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="129.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (86 samples, 0.04%)</title><rect x="126.5" y="163.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.5" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (86 samples, 0.04%)</title><rect x="126.5" y="147.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="129.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (195 samples, 0.09%)</title><rect x="126.9" y="163.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.9" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (58 samples, 0.03%)</title><rect x="126.9" y="147.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="129.9" y="158.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (137 samples, 0.06%)</title><rect x="127.2" y="147.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="130.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1,087 samples, 0.48%)</title><rect x="127.9" y="179.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="130.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (400 samples, 0.18%)</title><rect x="127.9" y="163.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="130.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (400 samples, 0.18%)</title><rect x="127.9" y="147.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (400 samples, 0.18%)</title><rect x="127.9" y="131.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="130.9" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (400 samples, 0.18%)</title><rect x="127.9" y="115.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.9" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (400 samples, 0.18%)</title><rect x="127.9" y="99.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.9" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (400 samples, 0.18%)</title><rect x="127.9" y="83.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.9" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (400 samples, 0.18%)</title><rect x="127.9" y="67.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.9" y="78.0"></text>
</g>
<g>
<title>java.lang.String (192 samples, 0.08%)</title><rect x="127.9" y="51.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="130.9" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (208 samples, 0.09%)</title><rect x="128.9" y="51.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.9" y="62.0"></text>
</g>
<g>
<title>byte[] (208 samples, 0.09%)</title><rect x="128.9" y="35.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="131.9" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (212 samples, 0.09%)</title><rect x="130.0" y="163.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (212 samples, 0.09%)</title><rect x="130.0" y="147.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (212 samples, 0.09%)</title><rect x="130.0" y="131.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="133.0" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (212 samples, 0.09%)</title><rect x="130.0" y="115.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="133.0" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (119 samples, 0.05%)</title><rect x="131.1" y="163.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="134.1" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (246 samples, 0.11%)</title><rect x="131.7" y="163.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.7" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (246 samples, 0.11%)</title><rect x="131.7" y="147.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="134.7" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (246 samples, 0.11%)</title><rect x="131.7" y="131.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="134.7" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (246 samples, 0.11%)</title><rect x="131.7" y="115.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="134.7" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (246 samples, 0.11%)</title><rect x="131.7" y="99.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.7" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (241 samples, 0.11%)</title><rect x="131.7" y="83.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="134.7" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (110 samples, 0.05%)</title><rect x="133.0" y="163.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.0" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (110 samples, 0.05%)</title><rect x="133.0" y="147.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="136.0" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (88 samples, 0.04%)</title><rect x="133.6" y="179.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="136.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (215 samples, 0.09%)</title><rect x="134.0" y="227.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="137.0" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (215 samples, 0.09%)</title><rect x="134.0" y="211.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="137.0" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (215 samples, 0.09%)</title><rect x="134.0" y="195.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="137.0" y="206.0"></text>
</g>
<g>
<title>java.lang.String (91 samples, 0.04%)</title><rect x="134.0" y="179.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="137.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (124 samples, 0.05%)</title><rect x="134.5" y="179.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="137.5" y="190.0"></text>
</g>
<g>
<title>byte[] (124 samples, 0.05%)</title><rect x="134.5" y="163.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="137.5" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,462 samples, 0.64%)</title><rect x="135.2" y="259.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.2" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (173 samples, 0.08%)</title><rect x="135.2" y="243.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="138.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (355 samples, 0.16%)</title><rect x="136.0" y="243.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="139.0" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (343 samples, 0.15%)</title><rect x="136.0" y="227.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="139.0" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (934 samples, 0.41%)</title><rect x="137.9" y="243.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.9" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (934 samples, 0.41%)</title><rect x="137.9" y="227.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.9" y="238.0"></text>
</g>
<g>
<title>char[] (512 samples, 0.23%)</title><rect x="137.9" y="211.0" width="2.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="140.9" y="222.0"></text>
</g>
<g>
<title>java.lang.String (111 samples, 0.05%)</title><rect x="140.6" y="211.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="143.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (298 samples, 0.13%)</title><rect x="141.2" y="211.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="144.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (298 samples, 0.13%)</title><rect x="141.2" y="195.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="144.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (298 samples, 0.13%)</title><rect x="141.2" y="179.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="144.2" y="190.0"></text>
</g>
<g>
<title>byte[] (290 samples, 0.13%)</title><rect x="141.2" y="163.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="144.2" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,183 samples, 0.52%)</title><rect x="142.7" y="259.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.7" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,183 samples, 0.52%)</title><rect x="142.7" y="243.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="145.7" y="254.0"></text>
</g>
<g>
<title>char[] (565 samples, 0.25%)</title><rect x="142.7" y="227.0" width="3.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="145.7" y="238.0"></text>
</g>
<g>
<title>java.lang.String (234 samples, 0.10%)</title><rect x="145.7" y="227.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="148.7" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (384 samples, 0.17%)</title><rect x="146.9" y="227.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="149.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (384 samples, 0.17%)</title><rect x="146.9" y="211.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.9" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (384 samples, 0.17%)</title><rect x="146.9" y="195.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.9" y="206.0"></text>
</g>
<g>
<title>byte[] (384 samples, 0.17%)</title><rect x="146.9" y="179.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="149.9" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25764] (6,229 samples, 2.74%)</title><rect x="148.9" y="339.0" width="32.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="151.9" y="350.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (6,229 samples, 2.74%)</title><rect x="148.9" y="323.0" width="32.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.9" y="334.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (6,229 samples, 2.74%)</title><rect x="148.9" y="307.0" width="32.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.9" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6,229 samples, 2.74%)</title><rect x="148.9" y="291.0" width="32.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.9" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6,229 samples, 2.74%)</title><rect x="148.9" y="275.0" width="32.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="151.9" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3,905 samples, 1.72%)</title><rect x="148.9" y="259.0" width="20.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3,905 samples, 1.72%)</title><rect x="148.9" y="243.0" width="20.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.9" y="254.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3,716 samples, 1.64%)</title><rect x="148.9" y="227.0" width="19.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (403 samples, 0.18%)</title><rect x="148.9" y="211.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="151.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (403 samples, 0.18%)</title><rect x="148.9" y="195.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="151.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (403 samples, 0.18%)</title><rect x="148.9" y="179.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String (180 samples, 0.08%)</title><rect x="148.9" y="163.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="151.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (223 samples, 0.10%)</title><rect x="149.8" y="163.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.8" y="174.0"></text>
</g>
<g>
<title>byte[] (223 samples, 0.10%)</title><rect x="149.8" y="147.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="152.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (3,313 samples, 1.46%)</title><rect x="151.0" y="211.0" width="17.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (128 samples, 0.06%)</title><rect x="151.0" y="195.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="154.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (128 samples, 0.06%)</title><rect x="151.0" y="179.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="154.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.get$Lambda (128 samples, 0.06%)</title><rect x="151.0" y="163.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.0" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$82 (128 samples, 0.06%)</title><rect x="151.0" y="147.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="154.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (172 samples, 0.08%)</title><rect x="151.7" y="195.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.7" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (172 samples, 0.08%)</title><rect x="151.7" y="179.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="154.7" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (172 samples, 0.08%)</title><rect x="151.7" y="163.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.7" y="174.0"></text>
</g>
<g>
<title>java.lang.String (92 samples, 0.04%)</title><rect x="151.7" y="147.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="154.7" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (80 samples, 0.04%)</title><rect x="152.1" y="147.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.1" y="158.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.04%)</title><rect x="152.1" y="131.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="155.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (163 samples, 0.07%)</title><rect x="152.5" y="195.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="155.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (72 samples, 0.03%)</title><rect x="152.5" y="179.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (72 samples, 0.03%)</title><rect x="152.5" y="163.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (72 samples, 0.03%)</title><rect x="152.5" y="147.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="155.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (72 samples, 0.03%)</title><rect x="152.5" y="131.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="155.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (91 samples, 0.04%)</title><rect x="152.9" y="179.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (91 samples, 0.04%)</title><rect x="152.9" y="163.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.9" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (90 samples, 0.04%)</title><rect x="152.9" y="147.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="155.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (1,621 samples, 0.71%)</title><rect x="153.4" y="195.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.4" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (1,621 samples, 0.71%)</title><rect x="153.4" y="179.0" width="8.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="156.4" y="190.0"></text>
</g>
<g>
<title>java.util.HashSet (56 samples, 0.02%)</title><rect x="153.4" y="163.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="156.4" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (331 samples, 0.15%)</title><rect x="153.7" y="163.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="156.7" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (124 samples, 0.05%)</title><rect x="153.7" y="147.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="156.7" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (207 samples, 0.09%)</title><rect x="154.3" y="147.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="157.3" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (131 samples, 0.06%)</title><rect x="154.3" y="131.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="157.3" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (131 samples, 0.06%)</title><rect x="154.3" y="115.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="157.3" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (76 samples, 0.03%)</title><rect x="155.0" y="131.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.0" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (76 samples, 0.03%)</title><rect x="155.0" y="115.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="158.0" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (953 samples, 0.42%)</title><rect x="155.4" y="163.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="158.4" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (168 samples, 0.07%)</title><rect x="155.4" y="147.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="158.4" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (785 samples, 0.35%)</title><rect x="156.3" y="147.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="159.3" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (660 samples, 0.29%)</title><rect x="156.3" y="131.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="159.3" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (660 samples, 0.29%)</title><rect x="156.3" y="115.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="159.3" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (660 samples, 0.29%)</title><rect x="156.3" y="99.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="159.3" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (357 samples, 0.16%)</title><rect x="156.3" y="83.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.3" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (357 samples, 0.16%)</title><rect x="156.3" y="67.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="159.3" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (303 samples, 0.13%)</title><rect x="158.1" y="83.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="161.1" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (289 samples, 0.13%)</title><rect x="158.1" y="67.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="161.1" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (125 samples, 0.06%)</title><rect x="159.7" y="131.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="162.7" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (125 samples, 0.06%)</title><rect x="159.7" y="115.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.7" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (125 samples, 0.06%)</title><rect x="159.7" y="99.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="162.7" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (125 samples, 0.06%)</title><rect x="159.7" y="83.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="162.7" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (281 samples, 0.12%)</title><rect x="160.4" y="163.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.4" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (126 samples, 0.06%)</title><rect x="160.4" y="147.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="163.4" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (155 samples, 0.07%)</title><rect x="161.0" y="147.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="164.0" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (155 samples, 0.07%)</title><rect x="161.0" y="131.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="164.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,229 samples, 0.54%)</title><rect x="161.8" y="195.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="164.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (228 samples, 0.10%)</title><rect x="161.8" y="179.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="164.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (76 samples, 0.03%)</title><rect x="161.8" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="164.8" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (76 samples, 0.03%)</title><rect x="161.8" y="147.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="164.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (152 samples, 0.07%)</title><rect x="162.2" y="163.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="165.2" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (104 samples, 0.05%)</title><rect x="162.5" y="147.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="165.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (895 samples, 0.39%)</title><rect x="163.0" y="179.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (325 samples, 0.14%)</title><rect x="163.0" y="163.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="166.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (325 samples, 0.14%)</title><rect x="163.0" y="147.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (325 samples, 0.14%)</title><rect x="163.0" y="131.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.0" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (325 samples, 0.14%)</title><rect x="163.0" y="115.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.0" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (325 samples, 0.14%)</title><rect x="163.0" y="99.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="166.0" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (325 samples, 0.14%)</title><rect x="163.0" y="83.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="166.0" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (325 samples, 0.14%)</title><rect x="163.0" y="67.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="166.0" y="78.0"></text>
</g>
<g>
<title>java.lang.String (170 samples, 0.07%)</title><rect x="163.0" y="51.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="166.0" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (155 samples, 0.07%)</title><rect x="163.9" y="51.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.9" y="62.0"></text>
</g>
<g>
<title>byte[] (155 samples, 0.07%)</title><rect x="163.9" y="35.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="166.9" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (169 samples, 0.07%)</title><rect x="164.7" y="163.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="167.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (169 samples, 0.07%)</title><rect x="164.7" y="147.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="167.7" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (169 samples, 0.07%)</title><rect x="164.7" y="131.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="167.7" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (169 samples, 0.07%)</title><rect x="164.7" y="115.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="167.7" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (82 samples, 0.04%)</title><rect x="165.6" y="163.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="168.6" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (228 samples, 0.10%)</title><rect x="166.0" y="163.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.0" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (228 samples, 0.10%)</title><rect x="166.0" y="147.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.0" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (228 samples, 0.10%)</title><rect x="166.0" y="131.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="169.0" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (228 samples, 0.10%)</title><rect x="166.0" y="115.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="169.0" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (228 samples, 0.10%)</title><rect x="166.0" y="99.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="169.0" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (222 samples, 0.10%)</title><rect x="166.0" y="83.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="169.0" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (91 samples, 0.04%)</title><rect x="167.2" y="163.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.2" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (91 samples, 0.04%)</title><rect x="167.2" y="147.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="170.2" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (106 samples, 0.05%)</title><rect x="167.6" y="179.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="170.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (189 samples, 0.08%)</title><rect x="168.2" y="227.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="171.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (189 samples, 0.08%)</title><rect x="168.2" y="211.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.2" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (189 samples, 0.08%)</title><rect x="168.2" y="195.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.2" y="206.0"></text>
</g>
<g>
<title>java.lang.String (82 samples, 0.04%)</title><rect x="168.2" y="179.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="171.2" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (107 samples, 0.05%)</title><rect x="168.6" y="179.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.6" y="190.0"></text>
</g>
<g>
<title>byte[] (107 samples, 0.05%)</title><rect x="168.6" y="163.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="171.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,177 samples, 0.52%)</title><rect x="169.2" y="259.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.2" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (135 samples, 0.06%)</title><rect x="169.2" y="243.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="172.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (287 samples, 0.13%)</title><rect x="169.9" y="243.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.9" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (276 samples, 0.12%)</title><rect x="169.9" y="227.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="172.9" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (755 samples, 0.33%)</title><rect x="171.4" y="243.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.4" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (755 samples, 0.33%)</title><rect x="171.4" y="227.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.4" y="238.0"></text>
</g>
<g>
<title>char[] (431 samples, 0.19%)</title><rect x="171.4" y="211.0" width="2.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="174.4" y="222.0"></text>
</g>
<g>
<title>java.lang.String (91 samples, 0.04%)</title><rect x="173.7" y="211.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="176.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (221 samples, 0.10%)</title><rect x="174.1" y="211.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.1" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (221 samples, 0.10%)</title><rect x="174.1" y="195.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="177.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (221 samples, 0.10%)</title><rect x="174.1" y="179.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="177.1" y="190.0"></text>
</g>
<g>
<title>byte[] (218 samples, 0.10%)</title><rect x="174.1" y="163.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="177.1" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,147 samples, 0.51%)</title><rect x="175.3" y="259.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="178.3" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,147 samples, 0.51%)</title><rect x="175.3" y="243.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.3" y="254.0"></text>
</g>
<g>
<title>char[] (475 samples, 0.21%)</title><rect x="175.3" y="227.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="178.3" y="238.0"></text>
</g>
<g>
<title>java.lang.String (293 samples, 0.13%)</title><rect x="177.8" y="227.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="180.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (376 samples, 0.17%)</title><rect x="179.3" y="227.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="182.3" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (376 samples, 0.17%)</title><rect x="179.3" y="211.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.3" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (376 samples, 0.17%)</title><rect x="179.3" y="195.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="182.3" y="206.0"></text>
</g>
<g>
<title>byte[] (376 samples, 0.17%)</title><rect x="179.3" y="179.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="182.3" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25749] (6,367 samples, 2.80%)</title><rect x="181.3" y="339.0" width="33.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="184.3" y="350.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (6,367 samples, 2.80%)</title><rect x="181.3" y="323.0" width="33.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="184.3" y="334.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (6,367 samples, 2.80%)</title><rect x="181.3" y="307.0" width="33.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="184.3" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6,367 samples, 2.80%)</title><rect x="181.3" y="291.0" width="33.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="184.3" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6,367 samples, 2.80%)</title><rect x="181.3" y="275.0" width="33.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.3" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,214 samples, 1.86%)</title><rect x="181.3" y="259.0" width="21.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="184.3" y="270.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,214 samples, 1.86%)</title><rect x="181.3" y="243.0" width="21.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.3" y="254.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3,972 samples, 1.75%)</title><rect x="181.3" y="227.0" width="20.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.3" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (420 samples, 0.18%)</title><rect x="181.3" y="211.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.3" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (420 samples, 0.18%)</title><rect x="181.3" y="195.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="184.3" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (420 samples, 0.18%)</title><rect x="181.3" y="179.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="184.3" y="190.0"></text>
</g>
<g>
<title>java.lang.String (181 samples, 0.08%)</title><rect x="181.3" y="163.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="184.3" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (239 samples, 0.11%)</title><rect x="182.2" y="163.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.2" y="174.0"></text>
</g>
<g>
<title>byte[] (239 samples, 0.11%)</title><rect x="182.2" y="147.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="185.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (3,552 samples, 1.56%)</title><rect x="183.4" y="211.0" width="18.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (118 samples, 0.05%)</title><rect x="183.4" y="195.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="186.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (118 samples, 0.05%)</title><rect x="183.4" y="179.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.get$Lambda (118 samples, 0.05%)</title><rect x="183.4" y="163.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.4" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$82 (118 samples, 0.05%)</title><rect x="183.4" y="147.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="186.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (210 samples, 0.09%)</title><rect x="184.1" y="195.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (88 samples, 0.04%)</title><rect x="184.1" y="179.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="187.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (88 samples, 0.04%)</title><rect x="184.1" y="163.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="187.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (88 samples, 0.04%)</title><rect x="184.1" y="147.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (88 samples, 0.04%)</title><rect x="184.1" y="131.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="187.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (122 samples, 0.05%)</title><rect x="184.5" y="179.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="187.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (122 samples, 0.05%)</title><rect x="184.5" y="163.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.5" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (122 samples, 0.05%)</title><rect x="184.5" y="147.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="187.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (1,802 samples, 0.79%)</title><rect x="185.1" y="195.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.1" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (1,802 samples, 0.79%)</title><rect x="185.1" y="179.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="188.1" y="190.0"></text>
</g>
<g>
<title>java.util.HashSet (59 samples, 0.03%)</title><rect x="185.1" y="163.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="188.1" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (383 samples, 0.17%)</title><rect x="185.4" y="163.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="188.4" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (126 samples, 0.06%)</title><rect x="185.4" y="147.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="188.4" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (257 samples, 0.11%)</title><rect x="186.1" y="147.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="189.1" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (166 samples, 0.07%)</title><rect x="186.1" y="131.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="189.1" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (166 samples, 0.07%)</title><rect x="186.1" y="115.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="189.1" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (91 samples, 0.04%)</title><rect x="187.0" y="131.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="190.0" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (91 samples, 0.04%)</title><rect x="187.0" y="115.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="190.0" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,105 samples, 0.49%)</title><rect x="187.4" y="163.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="190.4" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (202 samples, 0.09%)</title><rect x="187.4" y="147.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="190.4" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (903 samples, 0.40%)</title><rect x="188.5" y="147.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.5" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (729 samples, 0.32%)</title><rect x="188.5" y="131.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="191.5" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (729 samples, 0.32%)</title><rect x="188.5" y="115.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.5" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (729 samples, 0.32%)</title><rect x="188.5" y="99.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="191.5" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (414 samples, 0.18%)</title><rect x="188.5" y="83.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="191.5" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (414 samples, 0.18%)</title><rect x="188.5" y="67.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="191.5" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (315 samples, 0.14%)</title><rect x="190.6" y="83.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.6" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (311 samples, 0.14%)</title><rect x="190.6" y="67.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="193.6" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (174 samples, 0.08%)</title><rect x="192.3" y="131.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="195.3" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (174 samples, 0.08%)</title><rect x="192.3" y="115.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.3" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (174 samples, 0.08%)</title><rect x="192.3" y="99.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.3" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (174 samples, 0.08%)</title><rect x="192.3" y="83.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="195.3" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (255 samples, 0.11%)</title><rect x="193.2" y="163.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.2" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (90 samples, 0.04%)</title><rect x="193.2" y="147.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="196.2" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (165 samples, 0.07%)</title><rect x="193.6" y="147.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="196.6" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (165 samples, 0.07%)</title><rect x="193.6" y="131.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="196.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,422 samples, 0.63%)</title><rect x="194.5" y="195.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="197.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (285 samples, 0.13%)</title><rect x="194.5" y="179.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="197.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (65 samples, 0.03%)</title><rect x="194.5" y="163.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.5" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (65 samples, 0.03%)</title><rect x="194.5" y="147.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="197.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (220 samples, 0.10%)</title><rect x="194.8" y="163.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.8" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (99 samples, 0.04%)</title><rect x="194.8" y="147.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="197.8" y="158.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (121 samples, 0.05%)</title><rect x="195.4" y="147.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="198.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1,056 samples, 0.46%)</title><rect x="196.0" y="179.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (455 samples, 0.20%)</title><rect x="196.0" y="163.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (455 samples, 0.20%)</title><rect x="196.0" y="147.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (455 samples, 0.20%)</title><rect x="196.0" y="131.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="199.0" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (455 samples, 0.20%)</title><rect x="196.0" y="115.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="199.0" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (455 samples, 0.20%)</title><rect x="196.0" y="99.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.0" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (455 samples, 0.20%)</title><rect x="196.0" y="83.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="199.0" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (455 samples, 0.20%)</title><rect x="196.0" y="67.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.0" y="78.0"></text>
</g>
<g>
<title>java.lang.String (235 samples, 0.10%)</title><rect x="196.0" y="51.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="199.0" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (220 samples, 0.10%)</title><rect x="197.2" y="51.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="200.2" y="62.0"></text>
</g>
<g>
<title>byte[] (220 samples, 0.10%)</title><rect x="197.2" y="35.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="200.2" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (201 samples, 0.09%)</title><rect x="198.3" y="163.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="201.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (201 samples, 0.09%)</title><rect x="198.3" y="147.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="201.3" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (201 samples, 0.09%)</title><rect x="198.3" y="131.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="201.3" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (201 samples, 0.09%)</title><rect x="198.3" y="115.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="201.3" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (107 samples, 0.05%)</title><rect x="199.4" y="163.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="202.4" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (178 samples, 0.08%)</title><rect x="199.9" y="163.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="202.9" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (178 samples, 0.08%)</title><rect x="199.9" y="147.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="202.9" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (178 samples, 0.08%)</title><rect x="199.9" y="131.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="202.9" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (178 samples, 0.08%)</title><rect x="199.9" y="115.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="202.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (178 samples, 0.08%)</title><rect x="199.9" y="99.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="202.9" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (178 samples, 0.08%)</title><rect x="199.9" y="83.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="202.9" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (115 samples, 0.05%)</title><rect x="200.9" y="163.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="203.9" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (115 samples, 0.05%)</title><rect x="200.9" y="147.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="203.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (81 samples, 0.04%)</title><rect x="201.5" y="179.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="204.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (242 samples, 0.11%)</title><rect x="201.9" y="227.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="204.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (242 samples, 0.11%)</title><rect x="201.9" y="211.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="204.9" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (242 samples, 0.11%)</title><rect x="201.9" y="195.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="204.9" y="206.0"></text>
</g>
<g>
<title>java.lang.String (99 samples, 0.04%)</title><rect x="201.9" y="179.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="204.9" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (143 samples, 0.06%)</title><rect x="202.4" y="179.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="205.4" y="190.0"></text>
</g>
<g>
<title>byte[] (143 samples, 0.06%)</title><rect x="202.4" y="163.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="205.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,642 samples, 0.72%)</title><rect x="203.1" y="259.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="206.1" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (170 samples, 0.07%)</title><rect x="203.1" y="243.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="206.1" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (298 samples, 0.13%)</title><rect x="204.0" y="243.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="207.0" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (297 samples, 0.13%)</title><rect x="204.0" y="227.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="207.0" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,174 samples, 0.52%)</title><rect x="205.6" y="243.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="208.6" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,174 samples, 0.52%)</title><rect x="205.6" y="227.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="208.6" y="238.0"></text>
</g>
<g>
<title>char[] (864 samples, 0.38%)</title><rect x="205.6" y="211.0" width="4.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="208.6" y="222.0"></text>
</g>
<g>
<title>java.lang.String (87 samples, 0.04%)</title><rect x="210.1" y="211.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="213.1" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (213 samples, 0.09%)</title><rect x="210.6" y="211.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="213.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (213 samples, 0.09%)</title><rect x="210.6" y="195.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="213.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (213 samples, 0.09%)</title><rect x="210.6" y="179.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="213.6" y="190.0"></text>
</g>
<g>
<title>byte[] (213 samples, 0.09%)</title><rect x="210.6" y="163.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="213.6" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (511 samples, 0.22%)</title><rect x="211.7" y="259.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.7" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (511 samples, 0.22%)</title><rect x="211.7" y="243.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="214.7" y="254.0"></text>
</g>
<g>
<title>char[] (231 samples, 0.10%)</title><rect x="211.7" y="227.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="214.7" y="238.0"></text>
</g>
<g>
<title>java.lang.String (146 samples, 0.06%)</title><rect x="212.9" y="227.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="215.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (134 samples, 0.06%)</title><rect x="213.6" y="227.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (134 samples, 0.06%)</title><rect x="213.6" y="211.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (134 samples, 0.06%)</title><rect x="213.6" y="195.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.6" y="206.0"></text>
</g>
<g>
<title>byte[] (134 samples, 0.06%)</title><rect x="213.6" y="179.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="216.6" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25759] (7,088 samples, 3.12%)</title><rect x="214.3" y="339.0" width="36.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="217.3" y="350.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (7,088 samples, 3.12%)</title><rect x="214.3" y="323.0" width="36.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="217.3" y="334.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (264 samples, 0.12%)</title><rect x="214.3" y="307.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="217.3" y="318.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (264 samples, 0.12%)</title><rect x="214.3" y="291.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="217.3" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (6,824 samples, 3.00%)</title><rect x="215.7" y="307.0" width="35.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="218.7" y="318.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6,824 samples, 3.00%)</title><rect x="215.7" y="291.0" width="35.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="218.7" y="302.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6,824 samples, 3.00%)</title><rect x="215.7" y="275.0" width="35.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="218.7" y="286.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,457 samples, 1.96%)</title><rect x="215.7" y="259.0" width="23.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="218.7" y="270.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,457 samples, 1.96%)</title><rect x="215.7" y="243.0" width="23.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="218.7" y="254.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4,208 samples, 1.85%)</title><rect x="215.7" y="227.0" width="21.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="218.7" y="238.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (436 samples, 0.19%)</title><rect x="215.7" y="211.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="218.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (436 samples, 0.19%)</title><rect x="215.7" y="195.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="218.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (436 samples, 0.19%)</title><rect x="215.7" y="179.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.7" y="190.0"></text>
</g>
<g>
<title>java.lang.String (203 samples, 0.09%)</title><rect x="215.7" y="163.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="218.7" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (233 samples, 0.10%)</title><rect x="216.8" y="163.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="219.8" y="174.0"></text>
</g>
<g>
<title>byte[] (233 samples, 0.10%)</title><rect x="216.8" y="147.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="219.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (3,772 samples, 1.66%)</title><rect x="218.0" y="211.0" width="19.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="221.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (128 samples, 0.06%)</title><rect x="218.0" y="195.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="221.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (128 samples, 0.06%)</title><rect x="218.0" y="179.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="221.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.get$Lambda (128 samples, 0.06%)</title><rect x="218.0" y="163.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="221.0" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$82 (128 samples, 0.06%)</title><rect x="218.0" y="147.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="221.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (164 samples, 0.07%)</title><rect x="218.6" y="195.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="221.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (164 samples, 0.07%)</title><rect x="218.6" y="179.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="221.6" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (164 samples, 0.07%)</title><rect x="218.6" y="163.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="221.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String (103 samples, 0.05%)</title><rect x="218.6" y="147.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="221.6" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (61 samples, 0.03%)</title><rect x="219.2" y="147.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.2" y="158.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.03%)</title><rect x="219.2" y="131.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="222.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (213 samples, 0.09%)</title><rect x="219.5" y="195.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="222.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (108 samples, 0.05%)</title><rect x="219.5" y="179.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="222.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (108 samples, 0.05%)</title><rect x="219.5" y="163.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="222.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (108 samples, 0.05%)</title><rect x="219.5" y="147.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="222.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (108 samples, 0.05%)</title><rect x="219.5" y="131.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="222.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (105 samples, 0.05%)</title><rect x="220.1" y="179.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (105 samples, 0.05%)</title><rect x="220.1" y="163.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="223.1" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (105 samples, 0.05%)</title><rect x="220.1" y="147.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="223.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (1,881 samples, 0.83%)</title><rect x="220.6" y="195.0" width="9.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="223.6" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (1,881 samples, 0.83%)</title><rect x="220.6" y="179.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="223.6" y="190.0"></text>
</g>
<g>
<title>java.util.HashSet (75 samples, 0.03%)</title><rect x="220.6" y="163.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="223.6" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (428 samples, 0.19%)</title><rect x="221.0" y="163.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="224.0" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (160 samples, 0.07%)</title><rect x="221.0" y="147.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="224.0" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (268 samples, 0.12%)</title><rect x="221.8" y="147.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.8" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (192 samples, 0.08%)</title><rect x="221.8" y="131.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="224.8" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (192 samples, 0.08%)</title><rect x="221.8" y="115.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="224.8" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (76 samples, 0.03%)</title><rect x="222.8" y="131.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="225.8" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (76 samples, 0.03%)</title><rect x="222.8" y="115.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="225.8" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,093 samples, 0.48%)</title><rect x="223.2" y="163.0" width="5.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="226.2" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (213 samples, 0.09%)</title><rect x="223.2" y="147.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="226.2" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (880 samples, 0.39%)</title><rect x="224.3" y="147.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="227.3" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (731 samples, 0.32%)</title><rect x="224.3" y="131.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.3" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (731 samples, 0.32%)</title><rect x="224.3" y="115.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.3" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (731 samples, 0.32%)</title><rect x="224.3" y="99.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.3" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (397 samples, 0.17%)</title><rect x="224.3" y="83.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="227.3" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (397 samples, 0.17%)</title><rect x="224.3" y="67.0" width="2.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="227.3" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (334 samples, 0.15%)</title><rect x="226.4" y="83.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="229.4" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (326 samples, 0.14%)</title><rect x="226.4" y="67.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="229.4" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (149 samples, 0.07%)</title><rect x="228.1" y="131.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="231.1" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (149 samples, 0.07%)</title><rect x="228.1" y="115.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="231.1" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (149 samples, 0.07%)</title><rect x="228.1" y="99.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="231.1" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (149 samples, 0.07%)</title><rect x="228.1" y="83.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="231.1" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (285 samples, 0.13%)</title><rect x="228.9" y="163.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="231.9" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (123 samples, 0.05%)</title><rect x="228.9" y="147.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="231.9" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (162 samples, 0.07%)</title><rect x="229.5" y="147.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="232.5" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (162 samples, 0.07%)</title><rect x="229.5" y="131.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="232.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,386 samples, 0.61%)</title><rect x="230.4" y="195.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="233.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (237 samples, 0.10%)</title><rect x="230.4" y="179.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="233.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (53 samples, 0.02%)</title><rect x="230.4" y="163.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="233.4" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (53 samples, 0.02%)</title><rect x="230.4" y="147.0" width="0.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="233.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (184 samples, 0.08%)</title><rect x="230.6" y="163.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="233.6" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (58 samples, 0.03%)</title><rect x="230.6" y="147.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="233.6" y="158.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (126 samples, 0.06%)</title><rect x="230.9" y="147.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="233.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1,041 samples, 0.46%)</title><rect x="231.6" y="179.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="234.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (436 samples, 0.19%)</title><rect x="231.6" y="163.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="234.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (436 samples, 0.19%)</title><rect x="231.6" y="147.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="234.6" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (436 samples, 0.19%)</title><rect x="231.6" y="131.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="234.6" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (436 samples, 0.19%)</title><rect x="231.6" y="115.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="234.6" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (436 samples, 0.19%)</title><rect x="231.6" y="99.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="234.6" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (436 samples, 0.19%)</title><rect x="231.6" y="83.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="234.6" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (436 samples, 0.19%)</title><rect x="231.6" y="67.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="234.6" y="78.0"></text>
</g>
<g>
<title>java.lang.String (210 samples, 0.09%)</title><rect x="231.6" y="51.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="234.6" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (226 samples, 0.10%)</title><rect x="232.7" y="51.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.7" y="62.0"></text>
</g>
<g>
<title>byte[] (226 samples, 0.10%)</title><rect x="232.7" y="35.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="235.7" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (209 samples, 0.09%)</title><rect x="233.9" y="163.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="236.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (209 samples, 0.09%)</title><rect x="233.9" y="147.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="236.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (209 samples, 0.09%)</title><rect x="233.9" y="131.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="236.9" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (209 samples, 0.09%)</title><rect x="233.9" y="115.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="236.9" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (95 samples, 0.04%)</title><rect x="235.0" y="163.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="238.0" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (222 samples, 0.10%)</title><rect x="235.4" y="163.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="238.4" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (222 samples, 0.10%)</title><rect x="235.4" y="147.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.4" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (222 samples, 0.10%)</title><rect x="235.4" y="131.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="238.4" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (222 samples, 0.10%)</title><rect x="235.4" y="115.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="238.4" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (222 samples, 0.10%)</title><rect x="235.4" y="99.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="238.4" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (221 samples, 0.10%)</title><rect x="235.4" y="83.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="238.4" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (79 samples, 0.03%)</title><rect x="236.6" y="163.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="239.6" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (79 samples, 0.03%)</title><rect x="236.6" y="147.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="239.6" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (108 samples, 0.05%)</title><rect x="237.0" y="179.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="240.0" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (249 samples, 0.11%)</title><rect x="237.6" y="227.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="240.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (249 samples, 0.11%)</title><rect x="237.6" y="211.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="240.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (249 samples, 0.11%)</title><rect x="237.6" y="195.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="240.6" y="206.0"></text>
</g>
<g>
<title>java.lang.String (102 samples, 0.04%)</title><rect x="237.6" y="179.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="240.6" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (147 samples, 0.06%)</title><rect x="238.1" y="179.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="241.1" y="190.0"></text>
</g>
<g>
<title>byte[] (147 samples, 0.06%)</title><rect x="238.1" y="163.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="241.1" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,248 samples, 0.55%)</title><rect x="238.9" y="259.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="241.9" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (183 samples, 0.08%)</title><rect x="238.9" y="243.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="241.9" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (336 samples, 0.15%)</title><rect x="239.8" y="243.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="242.8" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (334 samples, 0.15%)</title><rect x="239.8" y="227.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="242.8" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (729 samples, 0.32%)</title><rect x="241.6" y="243.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="244.6" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (729 samples, 0.32%)</title><rect x="241.6" y="227.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="244.6" y="238.0"></text>
</g>
<g>
<title>char[] (341 samples, 0.15%)</title><rect x="241.6" y="211.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="244.6" y="222.0"></text>
</g>
<g>
<title>java.lang.String (115 samples, 0.05%)</title><rect x="243.4" y="211.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="246.4" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (256 samples, 0.11%)</title><rect x="244.0" y="211.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (256 samples, 0.11%)</title><rect x="244.0" y="195.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="247.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (256 samples, 0.11%)</title><rect x="244.0" y="179.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="247.0" y="190.0"></text>
</g>
<g>
<title>byte[] (255 samples, 0.11%)</title><rect x="244.0" y="163.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="247.0" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,119 samples, 0.49%)</title><rect x="245.3" y="259.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="248.3" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,119 samples, 0.49%)</title><rect x="245.3" y="243.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="248.3" y="254.0"></text>
</g>
<g>
<title>char[] (522 samples, 0.23%)</title><rect x="245.3" y="227.0" width="2.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="248.3" y="238.0"></text>
</g>
<g>
<title>java.lang.String (248 samples, 0.11%)</title><rect x="248.1" y="227.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="251.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (344 samples, 0.15%)</title><rect x="249.4" y="227.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="252.4" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (344 samples, 0.15%)</title><rect x="249.4" y="211.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.4" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (344 samples, 0.15%)</title><rect x="249.4" y="195.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="252.4" y="206.0"></text>
</g>
<g>
<title>byte[] (344 samples, 0.15%)</title><rect x="249.4" y="179.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="252.4" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25765] (7,034 samples, 3.10%)</title><rect x="251.2" y="339.0" width="36.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="254.2" y="350.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (7,034 samples, 3.10%)</title><rect x="251.2" y="323.0" width="36.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="254.2" y="334.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (290 samples, 0.13%)</title><rect x="251.2" y="307.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="254.2" y="318.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (290 samples, 0.13%)</title><rect x="251.2" y="291.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="254.2" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (6,744 samples, 2.97%)</title><rect x="252.7" y="307.0" width="35.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.7" y="318.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6,744 samples, 2.97%)</title><rect x="252.7" y="291.0" width="35.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.7" y="302.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6,744 samples, 2.97%)</title><rect x="252.7" y="275.0" width="35.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="255.7" y="286.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,335 samples, 1.91%)</title><rect x="252.7" y="259.0" width="22.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.7" y="270.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,335 samples, 1.91%)</title><rect x="252.7" y="243.0" width="22.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="255.7" y="254.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4,091 samples, 1.80%)</title><rect x="252.7" y="227.0" width="21.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="255.7" y="238.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (451 samples, 0.20%)</title><rect x="252.7" y="211.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="255.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (451 samples, 0.20%)</title><rect x="252.7" y="195.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="255.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (451 samples, 0.20%)</title><rect x="252.7" y="179.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="255.7" y="190.0"></text>
</g>
<g>
<title>java.lang.String (216 samples, 0.10%)</title><rect x="252.7" y="163.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="255.7" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (235 samples, 0.10%)</title><rect x="253.8" y="163.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="256.8" y="174.0"></text>
</g>
<g>
<title>byte[] (235 samples, 0.10%)</title><rect x="253.8" y="147.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="256.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (3,640 samples, 1.60%)</title><rect x="255.0" y="211.0" width="18.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="258.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (132 samples, 0.06%)</title><rect x="255.0" y="195.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="258.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (132 samples, 0.06%)</title><rect x="255.0" y="179.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.get$Lambda (132 samples, 0.06%)</title><rect x="255.0" y="163.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="258.0" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$82 (132 samples, 0.06%)</title><rect x="255.0" y="147.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="258.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (190 samples, 0.08%)</title><rect x="255.7" y="195.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.7" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (190 samples, 0.08%)</title><rect x="255.7" y="179.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="258.7" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (190 samples, 0.08%)</title><rect x="255.7" y="163.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.7" y="174.0"></text>
</g>
<g>
<title>java.lang.String (110 samples, 0.05%)</title><rect x="255.7" y="147.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="258.7" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (80 samples, 0.04%)</title><rect x="256.3" y="147.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="259.3" y="158.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.04%)</title><rect x="256.3" y="131.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="259.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (187 samples, 0.08%)</title><rect x="256.7" y="195.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="259.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (84 samples, 0.04%)</title><rect x="256.7" y="179.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="259.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (84 samples, 0.04%)</title><rect x="256.7" y="163.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (84 samples, 0.04%)</title><rect x="256.7" y="147.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.7" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (84 samples, 0.04%)</title><rect x="256.7" y="131.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="259.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (103 samples, 0.05%)</title><rect x="257.1" y="179.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (103 samples, 0.05%)</title><rect x="257.1" y="163.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="260.1" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (102 samples, 0.04%)</title><rect x="257.1" y="147.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="260.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (1,762 samples, 0.78%)</title><rect x="257.7" y="195.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.7" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (1,762 samples, 0.78%)</title><rect x="257.7" y="179.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.7" y="190.0"></text>
</g>
<g>
<title>java.util.HashSet (58 samples, 0.03%)</title><rect x="257.7" y="163.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="260.7" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (380 samples, 0.17%)</title><rect x="258.0" y="163.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="261.0" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (117 samples, 0.05%)</title><rect x="258.0" y="147.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="261.0" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (263 samples, 0.12%)</title><rect x="258.6" y="147.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="261.6" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (178 samples, 0.08%)</title><rect x="258.6" y="131.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="261.6" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (178 samples, 0.08%)</title><rect x="258.6" y="115.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="261.6" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (85 samples, 0.04%)</title><rect x="259.5" y="131.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="262.5" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (85 samples, 0.04%)</title><rect x="259.5" y="115.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="262.5" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,045 samples, 0.46%)</title><rect x="259.9" y="163.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.9" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (180 samples, 0.08%)</title><rect x="259.9" y="147.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="262.9" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (865 samples, 0.38%)</title><rect x="260.9" y="147.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.9" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (727 samples, 0.32%)</title><rect x="260.9" y="131.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="263.9" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (727 samples, 0.32%)</title><rect x="260.9" y="115.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="263.9" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (727 samples, 0.32%)</title><rect x="260.9" y="99.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="263.9" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (406 samples, 0.18%)</title><rect x="260.9" y="83.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.9" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (406 samples, 0.18%)</title><rect x="260.9" y="67.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="263.9" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (321 samples, 0.14%)</title><rect x="263.0" y="83.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.0" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (318 samples, 0.14%)</title><rect x="263.0" y="67.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="266.0" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (138 samples, 0.06%)</title><rect x="264.6" y="131.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="267.6" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (138 samples, 0.06%)</title><rect x="264.6" y="115.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="267.6" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (138 samples, 0.06%)</title><rect x="264.6" y="99.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="267.6" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (138 samples, 0.06%)</title><rect x="264.6" y="83.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="267.6" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (279 samples, 0.12%)</title><rect x="265.4" y="163.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="268.4" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (115 samples, 0.05%)</title><rect x="265.4" y="147.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="268.4" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (164 samples, 0.07%)</title><rect x="266.0" y="147.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="269.0" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (164 samples, 0.07%)</title><rect x="266.0" y="131.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="269.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,369 samples, 0.60%)</title><rect x="266.8" y="195.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="269.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (272 samples, 0.12%)</title><rect x="266.8" y="179.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="269.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (62 samples, 0.03%)</title><rect x="266.8" y="163.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="269.8" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (62 samples, 0.03%)</title><rect x="266.8" y="147.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="269.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (210 samples, 0.09%)</title><rect x="267.1" y="163.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="270.1" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (70 samples, 0.03%)</title><rect x="267.1" y="147.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="270.1" y="158.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (140 samples, 0.06%)</title><rect x="267.5" y="147.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="270.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1,009 samples, 0.44%)</title><rect x="268.2" y="179.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="271.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (383 samples, 0.17%)</title><rect x="268.2" y="163.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (383 samples, 0.17%)</title><rect x="268.2" y="147.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (383 samples, 0.17%)</title><rect x="268.2" y="131.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.2" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (383 samples, 0.17%)</title><rect x="268.2" y="115.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.2" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (383 samples, 0.17%)</title><rect x="268.2" y="99.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="271.2" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (383 samples, 0.17%)</title><rect x="268.2" y="83.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="271.2" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (383 samples, 0.17%)</title><rect x="268.2" y="67.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="271.2" y="78.0"></text>
</g>
<g>
<title>java.lang.String (184 samples, 0.08%)</title><rect x="268.2" y="51.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="271.2" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (199 samples, 0.09%)</title><rect x="269.2" y="51.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="272.2" y="62.0"></text>
</g>
<g>
<title>byte[] (199 samples, 0.09%)</title><rect x="269.2" y="35.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="272.2" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (171 samples, 0.08%)</title><rect x="270.2" y="163.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="273.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (171 samples, 0.08%)</title><rect x="270.2" y="147.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="273.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (171 samples, 0.08%)</title><rect x="270.2" y="131.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.2" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (171 samples, 0.08%)</title><rect x="270.2" y="115.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="273.2" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (108 samples, 0.05%)</title><rect x="271.1" y="163.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="274.1" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (245 samples, 0.11%)</title><rect x="271.7" y="163.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.7" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (245 samples, 0.11%)</title><rect x="271.7" y="147.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="274.7" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (245 samples, 0.11%)</title><rect x="271.7" y="131.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.7" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (245 samples, 0.11%)</title><rect x="271.7" y="115.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="274.7" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (245 samples, 0.11%)</title><rect x="271.7" y="99.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="274.7" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (245 samples, 0.11%)</title><rect x="271.7" y="83.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="274.7" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (102 samples, 0.04%)</title><rect x="272.9" y="163.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="275.9" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (102 samples, 0.04%)</title><rect x="272.9" y="147.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="275.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (88 samples, 0.04%)</title><rect x="273.5" y="179.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="276.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (244 samples, 0.11%)</title><rect x="273.9" y="227.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="276.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (244 samples, 0.11%)</title><rect x="273.9" y="211.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.9" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (244 samples, 0.11%)</title><rect x="273.9" y="195.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.9" y="206.0"></text>
</g>
<g>
<title>java.lang.String (116 samples, 0.05%)</title><rect x="273.9" y="179.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="276.9" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (128 samples, 0.06%)</title><rect x="274.5" y="179.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="277.5" y="190.0"></text>
</g>
<g>
<title>byte[] (128 samples, 0.06%)</title><rect x="274.5" y="163.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="277.5" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,171 samples, 0.52%)</title><rect x="275.2" y="259.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="278.2" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (162 samples, 0.07%)</title><rect x="275.2" y="243.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="278.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (338 samples, 0.15%)</title><rect x="276.0" y="243.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="279.0" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (333 samples, 0.15%)</title><rect x="276.0" y="227.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="279.0" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (671 samples, 0.30%)</title><rect x="277.8" y="243.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.8" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (671 samples, 0.30%)</title><rect x="277.8" y="227.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="280.8" y="238.0"></text>
</g>
<g>
<title>char[] (355 samples, 0.16%)</title><rect x="277.8" y="211.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="280.8" y="222.0"></text>
</g>
<g>
<title>java.lang.String (80 samples, 0.04%)</title><rect x="279.7" y="211.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="282.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (226 samples, 0.10%)</title><rect x="280.1" y="211.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="283.1" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (226 samples, 0.10%)</title><rect x="280.1" y="195.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (226 samples, 0.10%)</title><rect x="280.1" y="179.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="283.1" y="190.0"></text>
</g>
<g>
<title>byte[] (226 samples, 0.10%)</title><rect x="280.1" y="163.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="283.1" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,238 samples, 0.55%)</title><rect x="281.3" y="259.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="284.3" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,238 samples, 0.55%)</title><rect x="281.3" y="243.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="284.3" y="254.0"></text>
</g>
<g>
<title>char[] (563 samples, 0.25%)</title><rect x="281.3" y="227.0" width="2.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="284.3" y="238.0"></text>
</g>
<g>
<title>java.lang.String (305 samples, 0.13%)</title><rect x="284.2" y="227.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="287.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (363 samples, 0.16%)</title><rect x="285.8" y="227.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="288.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (363 samples, 0.16%)</title><rect x="285.8" y="211.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="288.8" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (363 samples, 0.16%)</title><rect x="285.8" y="195.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.8" y="206.0"></text>
</g>
<g>
<title>byte[] (363 samples, 0.16%)</title><rect x="285.8" y="179.0" width="1.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="288.8" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25750] (6,695 samples, 2.95%)</title><rect x="287.7" y="339.0" width="34.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="290.7" y="350.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (6,695 samples, 2.95%)</title><rect x="287.7" y="323.0" width="34.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.7" y="334.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (6,695 samples, 2.95%)</title><rect x="287.7" y="307.0" width="34.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="290.7" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6,695 samples, 2.95%)</title><rect x="287.7" y="291.0" width="34.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="290.7" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6,695 samples, 2.95%)</title><rect x="287.7" y="275.0" width="34.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="290.7" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,541 samples, 2.00%)</title><rect x="287.7" y="259.0" width="23.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="290.7" y="270.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,541 samples, 2.00%)</title><rect x="287.7" y="243.0" width="23.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.7" y="254.0">o..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4,270 samples, 1.88%)</title><rect x="287.7" y="227.0" width="22.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="290.7" y="238.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (436 samples, 0.19%)</title><rect x="287.7" y="211.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="290.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (436 samples, 0.19%)</title><rect x="287.7" y="195.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (436 samples, 0.19%)</title><rect x="287.7" y="179.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.7" y="190.0"></text>
</g>
<g>
<title>java.lang.String (194 samples, 0.09%)</title><rect x="287.7" y="163.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="290.7" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (242 samples, 0.11%)</title><rect x="288.7" y="163.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="291.7" y="174.0"></text>
</g>
<g>
<title>byte[] (242 samples, 0.11%)</title><rect x="288.7" y="147.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="291.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (3,834 samples, 1.69%)</title><rect x="290.0" y="211.0" width="19.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="293.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (130 samples, 0.06%)</title><rect x="290.0" y="195.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="293.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (130 samples, 0.06%)</title><rect x="290.0" y="179.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="293.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.get$Lambda (130 samples, 0.06%)</title><rect x="290.0" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.0" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$82 (130 samples, 0.06%)</title><rect x="290.0" y="147.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="293.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (216 samples, 0.10%)</title><rect x="290.6" y="195.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="293.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (104 samples, 0.05%)</title><rect x="290.6" y="179.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="293.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (104 samples, 0.05%)</title><rect x="290.6" y="163.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="293.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (104 samples, 0.05%)</title><rect x="290.6" y="147.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="293.6" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (104 samples, 0.05%)</title><rect x="290.6" y="131.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="293.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (112 samples, 0.05%)</title><rect x="291.2" y="179.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (112 samples, 0.05%)</title><rect x="291.2" y="163.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="294.2" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (111 samples, 0.05%)</title><rect x="291.2" y="147.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="294.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (1,966 samples, 0.87%)</title><rect x="291.8" y="195.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.8" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (1,966 samples, 0.87%)</title><rect x="291.8" y="179.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="294.8" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (435 samples, 0.19%)</title><rect x="292.0" y="163.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.0" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (103 samples, 0.05%)</title><rect x="292.0" y="147.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="295.0" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (332 samples, 0.15%)</title><rect x="292.6" y="147.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.6" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (252 samples, 0.11%)</title><rect x="292.6" y="131.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.6" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (252 samples, 0.11%)</title><rect x="292.6" y="115.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="295.6" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (80 samples, 0.04%)</title><rect x="293.9" y="131.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="296.9" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (80 samples, 0.04%)</title><rect x="293.9" y="115.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="296.9" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,213 samples, 0.53%)</title><rect x="294.3" y="163.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.3" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (222 samples, 0.10%)</title><rect x="294.3" y="147.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="297.3" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (991 samples, 0.44%)</title><rect x="295.4" y="147.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.4" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (858 samples, 0.38%)</title><rect x="295.4" y="131.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.4" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (858 samples, 0.38%)</title><rect x="295.4" y="115.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="298.4" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (858 samples, 0.38%)</title><rect x="295.4" y="99.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.4" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (429 samples, 0.19%)</title><rect x="295.4" y="83.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="298.4" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (429 samples, 0.19%)</title><rect x="295.4" y="67.0" width="2.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="298.4" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (429 samples, 0.19%)</title><rect x="297.7" y="83.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="300.7" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (420 samples, 0.18%)</title><rect x="297.7" y="67.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="300.7" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (133 samples, 0.06%)</title><rect x="299.9" y="131.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="302.9" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (133 samples, 0.06%)</title><rect x="299.9" y="115.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="302.9" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (133 samples, 0.06%)</title><rect x="299.9" y="99.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="302.9" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (133 samples, 0.06%)</title><rect x="299.9" y="83.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="302.9" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (270 samples, 0.12%)</title><rect x="300.6" y="163.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="303.6" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (92 samples, 0.04%)</title><rect x="300.6" y="147.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="303.6" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (178 samples, 0.08%)</title><rect x="301.1" y="147.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="304.1" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (178 samples, 0.08%)</title><rect x="301.1" y="131.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="304.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,522 samples, 0.67%)</title><rect x="302.0" y="195.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="305.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (285 samples, 0.13%)</title><rect x="302.0" y="179.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (93 samples, 0.04%)</title><rect x="302.0" y="163.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.0" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (93 samples, 0.04%)</title><rect x="302.0" y="147.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="305.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (192 samples, 0.08%)</title><rect x="302.5" y="163.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="305.5" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (85 samples, 0.04%)</title><rect x="302.5" y="147.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="305.5" y="158.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (107 samples, 0.05%)</title><rect x="302.9" y="147.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="305.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1,124 samples, 0.49%)</title><rect x="303.5" y="179.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="306.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (500 samples, 0.22%)</title><rect x="303.5" y="163.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (500 samples, 0.22%)</title><rect x="303.5" y="147.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="306.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (500 samples, 0.22%)</title><rect x="303.5" y="131.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="306.5" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (500 samples, 0.22%)</title><rect x="303.5" y="115.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="306.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (500 samples, 0.22%)</title><rect x="303.5" y="99.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.5" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (500 samples, 0.22%)</title><rect x="303.5" y="83.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.5" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (500 samples, 0.22%)</title><rect x="303.5" y="67.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.5" y="78.0"></text>
</g>
<g>
<title>java.lang.String (239 samples, 0.11%)</title><rect x="303.5" y="51.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="306.5" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (261 samples, 0.11%)</title><rect x="304.7" y="51.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="307.7" y="62.0"></text>
</g>
<g>
<title>byte[] (261 samples, 0.11%)</title><rect x="304.7" y="35.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="307.7" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (210 samples, 0.09%)</title><rect x="306.1" y="163.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="309.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (210 samples, 0.09%)</title><rect x="306.1" y="147.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="309.1" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (210 samples, 0.09%)</title><rect x="306.1" y="131.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="309.1" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (210 samples, 0.09%)</title><rect x="306.1" y="115.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="309.1" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (93 samples, 0.04%)</title><rect x="307.2" y="163.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="310.2" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (218 samples, 0.10%)</title><rect x="307.6" y="163.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.6" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (218 samples, 0.10%)</title><rect x="307.6" y="147.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="310.6" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (218 samples, 0.10%)</title><rect x="307.6" y="131.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.6" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (218 samples, 0.10%)</title><rect x="307.6" y="115.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.6" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (218 samples, 0.10%)</title><rect x="307.6" y="99.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.6" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (218 samples, 0.10%)</title><rect x="307.6" y="83.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="310.6" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (103 samples, 0.05%)</title><rect x="308.8" y="163.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="311.8" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (103 samples, 0.05%)</title><rect x="308.8" y="147.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="311.8" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (113 samples, 0.05%)</title><rect x="309.3" y="179.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="312.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (271 samples, 0.12%)</title><rect x="309.9" y="227.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="312.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (271 samples, 0.12%)</title><rect x="309.9" y="211.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="312.9" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (271 samples, 0.12%)</title><rect x="309.9" y="195.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="312.9" y="206.0"></text>
</g>
<g>
<title>java.lang.String (105 samples, 0.05%)</title><rect x="309.9" y="179.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="312.9" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (166 samples, 0.07%)</title><rect x="310.4" y="179.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="313.4" y="190.0"></text>
</g>
<g>
<title>byte[] (166 samples, 0.07%)</title><rect x="310.4" y="163.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="313.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,691 samples, 0.74%)</title><rect x="311.3" y="259.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="314.3" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (144 samples, 0.06%)</title><rect x="311.3" y="243.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="314.3" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (399 samples, 0.18%)</title><rect x="312.0" y="243.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="315.0" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (392 samples, 0.17%)</title><rect x="312.0" y="227.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="315.0" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,148 samples, 0.51%)</title><rect x="314.1" y="243.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="317.1" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,148 samples, 0.51%)</title><rect x="314.1" y="227.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.1" y="238.0"></text>
</g>
<g>
<title>char[] (785 samples, 0.35%)</title><rect x="314.1" y="211.0" width="4.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="317.1" y="222.0"></text>
</g>
<g>
<title>java.lang.String (86 samples, 0.04%)</title><rect x="318.3" y="211.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="321.3" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (260 samples, 0.11%)</title><rect x="318.7" y="211.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="321.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (260 samples, 0.11%)</title><rect x="318.7" y="195.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (260 samples, 0.11%)</title><rect x="318.7" y="179.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="321.7" y="190.0"></text>
</g>
<g>
<title>byte[] (260 samples, 0.11%)</title><rect x="318.7" y="163.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="321.7" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (463 samples, 0.20%)</title><rect x="320.1" y="259.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="323.1" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (463 samples, 0.20%)</title><rect x="320.1" y="243.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="323.1" y="254.0"></text>
</g>
<g>
<title>char[] (198 samples, 0.09%)</title><rect x="320.1" y="227.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="323.1" y="238.0"></text>
</g>
<g>
<title>java.lang.String (99 samples, 0.04%)</title><rect x="321.1" y="227.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="324.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (166 samples, 0.07%)</title><rect x="321.6" y="227.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="324.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (166 samples, 0.07%)</title><rect x="321.6" y="211.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (166 samples, 0.07%)</title><rect x="321.6" y="195.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="324.6" y="206.0"></text>
</g>
<g>
<title>byte[] (166 samples, 0.07%)</title><rect x="321.6" y="179.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="324.6" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25766] (6,309 samples, 2.78%)</title><rect x="322.5" y="339.0" width="32.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="325.5" y="350.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (6,309 samples, 2.78%)</title><rect x="322.5" y="323.0" width="32.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="325.5" y="334.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (277 samples, 0.12%)</title><rect x="322.5" y="307.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.5" y="318.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (277 samples, 0.12%)</title><rect x="322.5" y="291.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="325.5" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (6,032 samples, 2.66%)</title><rect x="323.9" y="307.0" width="31.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="326.9" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6,032 samples, 2.66%)</title><rect x="323.9" y="291.0" width="31.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="326.9" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6,032 samples, 2.66%)</title><rect x="323.9" y="275.0" width="31.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="326.9" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3,860 samples, 1.70%)</title><rect x="323.9" y="259.0" width="20.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="326.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3,860 samples, 1.70%)</title><rect x="323.9" y="243.0" width="20.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="326.9" y="254.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3,635 samples, 1.60%)</title><rect x="323.9" y="227.0" width="18.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="326.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (356 samples, 0.16%)</title><rect x="323.9" y="211.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="326.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (356 samples, 0.16%)</title><rect x="323.9" y="195.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="326.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (356 samples, 0.16%)</title><rect x="323.9" y="179.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="326.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String (168 samples, 0.07%)</title><rect x="323.9" y="163.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="326.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (188 samples, 0.08%)</title><rect x="324.8" y="163.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="327.8" y="174.0"></text>
</g>
<g>
<title>byte[] (188 samples, 0.08%)</title><rect x="324.8" y="147.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="327.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (3,279 samples, 1.44%)</title><rect x="325.8" y="211.0" width="17.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="328.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (117 samples, 0.05%)</title><rect x="325.8" y="195.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (117 samples, 0.05%)</title><rect x="325.8" y="179.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="328.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.get$Lambda (117 samples, 0.05%)</title><rect x="325.8" y="163.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.8" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$82 (117 samples, 0.05%)</title><rect x="325.8" y="147.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="328.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (145 samples, 0.06%)</title><rect x="326.4" y="195.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.4" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (145 samples, 0.06%)</title><rect x="326.4" y="179.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.4" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (145 samples, 0.06%)</title><rect x="326.4" y="163.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.4" y="174.0"></text>
</g>
<g>
<title>java.lang.String (80 samples, 0.04%)</title><rect x="326.4" y="147.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="329.4" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (65 samples, 0.03%)</title><rect x="326.8" y="147.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="329.8" y="158.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.03%)</title><rect x="326.8" y="131.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="329.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (174 samples, 0.08%)</title><rect x="327.1" y="195.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (85 samples, 0.04%)</title><rect x="327.1" y="179.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (85 samples, 0.04%)</title><rect x="327.1" y="163.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="330.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (85 samples, 0.04%)</title><rect x="327.1" y="147.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="330.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (85 samples, 0.04%)</title><rect x="327.1" y="131.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="330.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (89 samples, 0.04%)</title><rect x="327.6" y="179.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="330.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (89 samples, 0.04%)</title><rect x="327.6" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="330.6" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (89 samples, 0.04%)</title><rect x="327.6" y="147.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="330.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (1,576 samples, 0.69%)</title><rect x="328.0" y="195.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.0" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (1,576 samples, 0.69%)</title><rect x="328.0" y="179.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="331.0" y="190.0"></text>
</g>
<g>
<title>java.util.HashSet (50 samples, 0.02%)</title><rect x="328.0" y="163.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="331.0" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (338 samples, 0.15%)</title><rect x="328.3" y="163.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="331.3" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (141 samples, 0.06%)</title><rect x="328.3" y="147.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="331.3" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (197 samples, 0.09%)</title><rect x="329.0" y="147.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="332.0" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (149 samples, 0.07%)</title><rect x="329.0" y="131.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.0" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (149 samples, 0.07%)</title><rect x="329.0" y="115.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="332.0" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (954 samples, 0.42%)</title><rect x="330.1" y="163.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.1" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (163 samples, 0.07%)</title><rect x="330.1" y="147.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="333.1" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (791 samples, 0.35%)</title><rect x="330.9" y="147.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="333.9" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (665 samples, 0.29%)</title><rect x="330.9" y="131.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.9" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (665 samples, 0.29%)</title><rect x="330.9" y="115.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="333.9" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (665 samples, 0.29%)</title><rect x="330.9" y="99.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.9" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (358 samples, 0.16%)</title><rect x="330.9" y="83.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="333.9" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (358 samples, 0.16%)</title><rect x="330.9" y="67.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="333.9" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (307 samples, 0.14%)</title><rect x="332.8" y="83.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="335.8" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (300 samples, 0.13%)</title><rect x="332.8" y="67.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="335.8" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (126 samples, 0.06%)</title><rect x="334.4" y="131.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="337.4" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (126 samples, 0.06%)</title><rect x="334.4" y="115.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="337.4" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (126 samples, 0.06%)</title><rect x="334.4" y="99.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="337.4" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (126 samples, 0.06%)</title><rect x="334.4" y="83.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="337.4" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (234 samples, 0.10%)</title><rect x="335.0" y="163.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="338.0" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (95 samples, 0.04%)</title><rect x="335.0" y="147.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="338.0" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (139 samples, 0.06%)</title><rect x="335.5" y="147.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.5" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (139 samples, 0.06%)</title><rect x="335.5" y="131.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="338.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,267 samples, 0.56%)</title><rect x="336.2" y="195.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (236 samples, 0.10%)</title><rect x="336.2" y="179.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="339.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (60 samples, 0.03%)</title><rect x="336.2" y="163.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="339.2" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (60 samples, 0.03%)</title><rect x="336.2" y="147.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="339.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (176 samples, 0.08%)</title><rect x="336.5" y="163.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="339.5" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (69 samples, 0.03%)</title><rect x="336.5" y="147.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="339.5" y="158.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (107 samples, 0.05%)</title><rect x="336.9" y="147.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="339.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (914 samples, 0.40%)</title><rect x="337.5" y="179.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="340.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (349 samples, 0.15%)</title><rect x="337.5" y="163.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (349 samples, 0.15%)</title><rect x="337.5" y="147.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="340.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (349 samples, 0.15%)</title><rect x="337.5" y="131.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="340.5" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (349 samples, 0.15%)</title><rect x="337.5" y="115.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="340.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (349 samples, 0.15%)</title><rect x="337.5" y="99.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="340.5" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (349 samples, 0.15%)</title><rect x="337.5" y="83.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="340.5" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (349 samples, 0.15%)</title><rect x="337.5" y="67.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="340.5" y="78.0"></text>
</g>
<g>
<title>java.lang.String (174 samples, 0.08%)</title><rect x="337.5" y="51.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="340.5" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (175 samples, 0.08%)</title><rect x="338.4" y="51.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="341.4" y="62.0"></text>
</g>
<g>
<title>byte[] (175 samples, 0.08%)</title><rect x="338.4" y="35.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="341.4" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (158 samples, 0.07%)</title><rect x="339.3" y="163.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (158 samples, 0.07%)</title><rect x="339.3" y="147.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="342.3" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (158 samples, 0.07%)</title><rect x="339.3" y="131.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="342.3" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (158 samples, 0.07%)</title><rect x="339.3" y="115.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="342.3" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (101 samples, 0.04%)</title><rect x="340.1" y="163.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="343.1" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (204 samples, 0.09%)</title><rect x="340.6" y="163.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.6" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (204 samples, 0.09%)</title><rect x="340.6" y="147.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.6" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (204 samples, 0.09%)</title><rect x="340.6" y="131.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="343.6" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (204 samples, 0.09%)</title><rect x="340.6" y="115.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="343.6" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (204 samples, 0.09%)</title><rect x="340.6" y="99.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="343.6" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (204 samples, 0.09%)</title><rect x="340.6" y="83.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="343.6" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (102 samples, 0.04%)</title><rect x="341.7" y="163.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="344.7" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (102 samples, 0.04%)</title><rect x="341.7" y="147.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="344.7" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (117 samples, 0.05%)</title><rect x="342.2" y="179.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="345.2" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (225 samples, 0.10%)</title><rect x="342.8" y="227.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="345.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (225 samples, 0.10%)</title><rect x="342.8" y="211.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="345.8" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (225 samples, 0.10%)</title><rect x="342.8" y="195.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="345.8" y="206.0"></text>
</g>
<g>
<title>java.lang.String (99 samples, 0.04%)</title><rect x="342.8" y="179.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="345.8" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (126 samples, 0.06%)</title><rect x="343.3" y="179.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="346.3" y="190.0"></text>
</g>
<g>
<title>byte[] (126 samples, 0.06%)</title><rect x="343.3" y="163.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="346.3" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,099 samples, 0.48%)</title><rect x="344.0" y="259.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="347.0" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (154 samples, 0.07%)</title><rect x="344.0" y="243.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="347.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (291 samples, 0.13%)</title><rect x="344.8" y="243.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="347.8" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (286 samples, 0.13%)</title><rect x="344.8" y="227.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="347.8" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (654 samples, 0.29%)</title><rect x="346.3" y="243.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="349.3" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (654 samples, 0.29%)</title><rect x="346.3" y="227.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="349.3" y="238.0"></text>
</g>
<g>
<title>char[] (336 samples, 0.15%)</title><rect x="346.3" y="211.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="349.3" y="222.0"></text>
</g>
<g>
<title>java.lang.String (85 samples, 0.04%)</title><rect x="348.1" y="211.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="351.1" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (220 samples, 0.10%)</title><rect x="348.6" y="211.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="351.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (220 samples, 0.10%)</title><rect x="348.6" y="195.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="351.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (220 samples, 0.10%)</title><rect x="348.6" y="179.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="351.6" y="190.0"></text>
</g>
<g>
<title>byte[] (219 samples, 0.10%)</title><rect x="348.6" y="163.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="351.6" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,073 samples, 0.47%)</title><rect x="349.7" y="259.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.7" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,073 samples, 0.47%)</title><rect x="349.7" y="243.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="352.7" y="254.0"></text>
</g>
<g>
<title>char[] (473 samples, 0.21%)</title><rect x="349.7" y="227.0" width="2.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="352.7" y="238.0"></text>
</g>
<g>
<title>java.lang.String (253 samples, 0.11%)</title><rect x="352.2" y="227.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="355.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (343 samples, 0.15%)</title><rect x="353.5" y="227.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="356.5" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (343 samples, 0.15%)</title><rect x="353.5" y="211.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="356.5" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (343 samples, 0.15%)</title><rect x="353.5" y="195.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="356.5" y="206.0"></text>
</g>
<g>
<title>byte[] (343 samples, 0.15%)</title><rect x="353.5" y="179.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="356.5" y="190.0"></text>
</g>
<g>
<title>[flusher-3 tid=26139] (348 samples, 0.15%)</title><rect x="355.3" y="339.0" width="1.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="358.3" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (348 samples, 0.15%)</title><rect x="355.3" y="323.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="358.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (348 samples, 0.15%)</title><rect x="355.3" y="307.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (348 samples, 0.15%)</title><rect x="355.3" y="291.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="358.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (348 samples, 0.15%)</title><rect x="355.3" y="275.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="358.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (348 samples, 0.15%)</title><rect x="355.3" y="259.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="358.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (346 samples, 0.15%)</title><rect x="355.3" y="243.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="358.3" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (126 samples, 0.06%)</title><rect x="355.5" y="227.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="358.5" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (99 samples, 0.04%)</title><rect x="355.5" y="211.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="358.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (71 samples, 0.03%)</title><rect x="356.2" y="227.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="359.2" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (71 samples, 0.03%)</title><rect x="356.2" y="211.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="359.2" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (71 samples, 0.03%)</title><rect x="356.2" y="195.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="359.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (106 samples, 0.05%)</title><rect x="356.5" y="227.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="359.5" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (106 samples, 0.05%)</title><rect x="356.5" y="211.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="359.5" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (106 samples, 0.05%)</title><rect x="356.5" y="195.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="359.5" y="206.0"></text>
</g>
<g>
<title>[flusher-3 tid=26140] (325 samples, 0.14%)</title><rect x="357.1" y="339.0" width="1.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="360.1" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (325 samples, 0.14%)</title><rect x="357.1" y="323.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="360.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (325 samples, 0.14%)</title><rect x="357.1" y="307.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="360.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (325 samples, 0.14%)</title><rect x="357.1" y="291.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (325 samples, 0.14%)</title><rect x="357.1" y="275.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="360.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (325 samples, 0.14%)</title><rect x="357.1" y="259.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="360.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (324 samples, 0.14%)</title><rect x="357.1" y="243.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.1" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (109 samples, 0.05%)</title><rect x="357.3" y="227.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="360.3" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (71 samples, 0.03%)</title><rect x="357.3" y="211.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="360.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (85 samples, 0.04%)</title><rect x="357.9" y="227.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="360.9" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (85 samples, 0.04%)</title><rect x="357.9" y="211.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.9" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (85 samples, 0.04%)</title><rect x="357.9" y="195.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="360.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (80 samples, 0.04%)</title><rect x="358.4" y="227.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="361.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (80 samples, 0.04%)</title><rect x="358.4" y="211.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="361.4" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (80 samples, 0.04%)</title><rect x="358.4" y="195.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="361.4" y="206.0"></text>
</g>
<g>
<title>[flusher-3 tid=26141] (250 samples, 0.11%)</title><rect x="358.8" y="339.0" width="1.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="361.8" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (250 samples, 0.11%)</title><rect x="358.8" y="323.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="361.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (250 samples, 0.11%)</title><rect x="358.8" y="307.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="361.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (250 samples, 0.11%)</title><rect x="358.8" y="291.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="361.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (250 samples, 0.11%)</title><rect x="358.8" y="275.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="361.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (250 samples, 0.11%)</title><rect x="358.8" y="259.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="361.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (249 samples, 0.11%)</title><rect x="358.8" y="243.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="361.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (90 samples, 0.04%)</title><rect x="358.9" y="227.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="361.9" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (61 samples, 0.03%)</title><rect x="358.9" y="211.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="361.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (58 samples, 0.03%)</title><rect x="359.4" y="227.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="362.4" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (58 samples, 0.03%)</title><rect x="359.4" y="211.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="362.4" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (58 samples, 0.03%)</title><rect x="359.4" y="195.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="362.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (75 samples, 0.03%)</title><rect x="359.7" y="227.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.7" y="238.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (75 samples, 0.03%)</title><rect x="359.7" y="211.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="362.7" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (75 samples, 0.03%)</title><rect x="359.7" y="195.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="362.7" y="206.0"></text>
</g>
<g>
<title>[proxy-worker-0 tid=25855] (11,629 samples, 5.12%)</title><rect x="360.1" y="339.0" width="60.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="363.1" y="350.0">[proxy..</text>
</g>
<g>
<title>java/lang/Thread.run (11,629 samples, 5.12%)</title><rect x="360.1" y="323.0" width="60.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="363.1" y="334.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (11,629 samples, 5.12%)</title><rect x="360.1" y="307.0" width="60.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.1" y="318.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (11,629 samples, 5.12%)</title><rect x="360.1" y="291.0" width="60.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.1" y="302.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (11,606 samples, 5.11%)</title><rect x="360.1" y="275.0" width="60.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="363.1" y="286.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (11,583 samples, 5.10%)</title><rect x="360.1" y="259.0" width="60.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="363.1" y="270.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (11,583 samples, 5.10%)</title><rect x="360.1" y="243.0" width="60.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="363.1" y="254.0">java/u..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (11,583 samples, 5.10%)</title><rect x="360.1" y="227.0" width="60.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="363.1" y="238.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (11,583 samples, 5.10%)</title><rect x="360.1" y="211.0" width="60.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="363.1" y="222.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (11,583 samples, 5.10%)</title><rect x="360.1" y="195.0" width="60.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="363.1" y="206.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (11,583 samples, 5.10%)</title><rect x="360.1" y="179.0" width="60.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="363.1" y="190.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (11,583 samples, 5.10%)</title><rect x="360.1" y="163.0" width="60.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="363.1" y="174.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (66 samples, 0.03%)</title><rect x="360.1" y="147.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="363.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (10,451 samples, 4.60%)</title><rect x="360.4" y="147.0" width="54.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="363.4" y="158.0">one/n..</text>
</g>
<g>
<title>byte[] (5,396 samples, 2.38%)</title><rect x="360.4" y="131.0" width="28.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="363.4" y="142.0">by..</text>
</g>
<g>
<title>byte[] (5,055 samples, 2.23%)</title><rect x="388.4" y="131.0" width="26.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="391.4" y="142.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (838 samples, 0.37%)</title><rect x="414.7" y="147.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="417.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (690 samples, 0.30%)</title><rect x="415.1" y="131.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="418.1" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (690 samples, 0.30%)</title><rect x="415.1" y="115.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.1" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (690 samples, 0.30%)</title><rect x="415.1" y="99.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="418.1" y="110.0"></text>
</g>
<g>
<title>char[] (531 samples, 0.23%)</title><rect x="415.1" y="83.0" width="2.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="418.1" y="94.0"></text>
</g>
<g>
<title>java.lang.String (80 samples, 0.04%)</title><rect x="417.9" y="83.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="420.9" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (79 samples, 0.03%)</title><rect x="418.3" y="83.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="421.3" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (79 samples, 0.03%)</title><rect x="418.3" y="67.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="421.3" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (79 samples, 0.03%)</title><rect x="418.3" y="51.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="421.3" y="62.0"></text>
</g>
<g>
<title>byte[] (79 samples, 0.03%)</title><rect x="418.3" y="35.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="421.3" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (53 samples, 0.02%)</title><rect x="418.8" y="131.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="421.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (53 samples, 0.02%)</title><rect x="418.8" y="115.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (53 samples, 0.02%)</title><rect x="418.8" y="99.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="421.8" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (151 samples, 0.07%)</title><rect x="419.1" y="147.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="422.1" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (145 samples, 0.06%)</title><rect x="419.1" y="131.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="422.1" y="142.0"></text>
</g>
<g>
<title>byte[] (145 samples, 0.06%)</title><rect x="419.1" y="115.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="422.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (53 samples, 0.02%)</title><rect x="419.8" y="147.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="422.8" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (53 samples, 0.02%)</title><rect x="419.8" y="131.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.8" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (53 samples, 0.02%)</title><rect x="419.8" y="115.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="422.8" y="126.0"></text>
</g>
<g>
<title>[proxy-worker-1 tid=25856] (12,482 samples, 5.50%)</title><rect x="420.5" y="339.0" width="64.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="423.5" y="350.0">[proxy-..</text>
</g>
<g>
<title>java/lang/Thread.run (12,482 samples, 5.50%)</title><rect x="420.5" y="323.0" width="64.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="423.5" y="334.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (12,482 samples, 5.50%)</title><rect x="420.5" y="307.0" width="64.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="423.5" y="318.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (12,482 samples, 5.50%)</title><rect x="420.5" y="291.0" width="64.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="423.5" y="302.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (12,467 samples, 5.49%)</title><rect x="420.5" y="275.0" width="64.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="423.5" y="286.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (12,447 samples, 5.48%)</title><rect x="420.5" y="259.0" width="64.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="423.5" y="270.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (12,447 samples, 5.48%)</title><rect x="420.5" y="243.0" width="64.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="423.5" y="254.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (12,447 samples, 5.48%)</title><rect x="420.5" y="227.0" width="64.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="423.5" y="238.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (12,447 samples, 5.48%)</title><rect x="420.5" y="211.0" width="64.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="423.5" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (12,447 samples, 5.48%)</title><rect x="420.5" y="195.0" width="64.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="423.5" y="206.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (12,447 samples, 5.48%)</title><rect x="420.5" y="179.0" width="64.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="423.5" y="190.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (12,447 samples, 5.48%)</title><rect x="420.5" y="163.0" width="64.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="423.5" y="174.0">one/nio..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (71 samples, 0.03%)</title><rect x="420.5" y="147.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="423.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (11,396 samples, 5.02%)</title><rect x="420.9" y="147.0" width="59.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="423.9" y="158.0">one/ni..</text>
</g>
<g>
<title>byte[] (5,335 samples, 2.35%)</title><rect x="420.9" y="131.0" width="27.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="423.9" y="142.0">b..</text>
</g>
<g>
<title>byte[] (6,061 samples, 2.67%)</title><rect x="448.6" y="131.0" width="31.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="451.6" y="142.0">by..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (793 samples, 0.35%)</title><rect x="480.1" y="147.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="483.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (49 samples, 0.02%)</title><rect x="480.1" y="131.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (49 samples, 0.02%)</title><rect x="480.1" y="115.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="483.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (667 samples, 0.29%)</title><rect x="480.5" y="131.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="483.5" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (667 samples, 0.29%)</title><rect x="480.5" y="115.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="483.5" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (667 samples, 0.29%)</title><rect x="480.5" y="99.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="483.5" y="110.0"></text>
</g>
<g>
<title>char[] (515 samples, 0.23%)</title><rect x="480.5" y="83.0" width="2.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="483.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String (83 samples, 0.04%)</title><rect x="483.1" y="83.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="486.1" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (69 samples, 0.03%)</title><rect x="483.6" y="83.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.6" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (69 samples, 0.03%)</title><rect x="483.6" y="67.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.6" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (69 samples, 0.03%)</title><rect x="483.6" y="51.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.6" y="62.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.03%)</title><rect x="483.6" y="35.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="486.6" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (139 samples, 0.06%)</title><rect x="484.2" y="147.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.2" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (131 samples, 0.06%)</title><rect x="484.2" y="131.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.2" y="142.0"></text>
</g>
<g>
<title>byte[] (131 samples, 0.06%)</title><rect x="484.2" y="115.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="487.2" y="126.0"></text>
</g>
<g>
<title>[proxy-worker-2 tid=25860] (12,609 samples, 5.55%)</title><rect x="485.3" y="339.0" width="65.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="488.3" y="350.0">[proxy-..</text>
</g>
<g>
<title>java/lang/Thread.run (12,609 samples, 5.55%)</title><rect x="485.3" y="323.0" width="65.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.3" y="334.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (12,609 samples, 5.55%)</title><rect x="485.3" y="307.0" width="65.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.3" y="318.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (12,609 samples, 5.55%)</title><rect x="485.3" y="291.0" width="65.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.3" y="302.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (12,592 samples, 5.54%)</title><rect x="485.3" y="275.0" width="65.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.3" y="286.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (12,575 samples, 5.54%)</title><rect x="485.3" y="259.0" width="65.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="488.3" y="270.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (12,575 samples, 5.54%)</title><rect x="485.3" y="243.0" width="65.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="488.3" y="254.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (12,575 samples, 5.54%)</title><rect x="485.3" y="227.0" width="65.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="488.3" y="238.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (12,575 samples, 5.54%)</title><rect x="485.3" y="211.0" width="65.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="488.3" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (12,575 samples, 5.54%)</title><rect x="485.3" y="195.0" width="65.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="488.3" y="206.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (12,575 samples, 5.54%)</title><rect x="485.3" y="179.0" width="65.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.3" y="190.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (12,575 samples, 5.54%)</title><rect x="485.3" y="163.0" width="65.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="488.3" y="174.0">one/nio..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (56 samples, 0.02%)</title><rect x="485.3" y="147.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="488.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (11,484 samples, 5.06%)</title><rect x="485.6" y="147.0" width="59.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="488.6" y="158.0">one/ni..</text>
</g>
<g>
<title>byte[] (5,450 samples, 2.40%)</title><rect x="485.6" y="131.0" width="28.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="488.6" y="142.0">by..</text>
</g>
<g>
<title>byte[] (6,034 samples, 2.66%)</title><rect x="513.9" y="131.0" width="31.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="516.9" y="142.0">by..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (800 samples, 0.35%)</title><rect x="545.3" y="147.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="548.3" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (668 samples, 0.29%)</title><rect x="545.6" y="131.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.6" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (668 samples, 0.29%)</title><rect x="545.6" y="115.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="548.6" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (668 samples, 0.29%)</title><rect x="545.6" y="99.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.6" y="110.0"></text>
</g>
<g>
<title>char[] (492 samples, 0.22%)</title><rect x="545.6" y="83.0" width="2.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="548.6" y="94.0"></text>
</g>
<g>
<title>java.lang.String (78 samples, 0.03%)</title><rect x="548.1" y="83.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="551.1" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (98 samples, 0.04%)</title><rect x="548.5" y="83.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="551.5" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (98 samples, 0.04%)</title><rect x="548.5" y="67.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.5" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (98 samples, 0.04%)</title><rect x="548.5" y="51.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="551.5" y="62.0"></text>
</g>
<g>
<title>byte[] (98 samples, 0.04%)</title><rect x="548.5" y="35.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="551.5" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (49 samples, 0.02%)</title><rect x="549.2" y="131.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="552.2" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (49 samples, 0.02%)</title><rect x="549.2" y="115.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="552.2" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (49 samples, 0.02%)</title><rect x="549.2" y="99.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="552.2" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (168 samples, 0.07%)</title><rect x="549.4" y="147.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="552.4" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (162 samples, 0.07%)</title><rect x="549.4" y="131.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="552.4" y="142.0"></text>
</g>
<g>
<title>byte[] (162 samples, 0.07%)</title><rect x="549.4" y="115.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="552.4" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (56 samples, 0.02%)</title><rect x="550.3" y="147.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="553.3" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (56 samples, 0.02%)</title><rect x="550.3" y="131.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.3" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (56 samples, 0.02%)</title><rect x="550.3" y="115.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="553.3" y="126.0"></text>
</g>
<g>
<title>[proxy-worker-3 tid=25858] (11,692 samples, 5.15%)</title><rect x="550.8" y="339.0" width="60.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="553.8" y="350.0">[proxy..</text>
</g>
<g>
<title>java/lang/Thread.run (11,692 samples, 5.15%)</title><rect x="550.8" y="323.0" width="60.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.8" y="334.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (11,692 samples, 5.15%)</title><rect x="550.8" y="307.0" width="60.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="553.8" y="318.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (11,692 samples, 5.15%)</title><rect x="550.8" y="291.0" width="60.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.8" y="302.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (11,671 samples, 5.14%)</title><rect x="550.8" y="275.0" width="60.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="553.8" y="286.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (11,644 samples, 5.13%)</title><rect x="550.8" y="259.0" width="60.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="553.8" y="270.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (11,644 samples, 5.13%)</title><rect x="550.8" y="243.0" width="60.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="553.8" y="254.0">java/u..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (11,644 samples, 5.13%)</title><rect x="550.8" y="227.0" width="60.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="553.8" y="238.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (11,644 samples, 5.13%)</title><rect x="550.8" y="211.0" width="60.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="553.8" y="222.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (11,644 samples, 5.13%)</title><rect x="550.8" y="195.0" width="60.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="553.8" y="206.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (11,644 samples, 5.13%)</title><rect x="550.8" y="179.0" width="60.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="553.8" y="190.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (11,644 samples, 5.13%)</title><rect x="550.8" y="163.0" width="60.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="553.8" y="174.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (78 samples, 0.03%)</title><rect x="550.8" y="147.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="553.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (10,366 samples, 4.56%)</title><rect x="551.3" y="147.0" width="53.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.3" y="158.0">one/n..</text>
</g>
<g>
<title>byte[] (5,301 samples, 2.33%)</title><rect x="551.3" y="131.0" width="27.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="554.3" y="142.0">b..</text>
</g>
<g>
<title>byte[] (5,065 samples, 2.23%)</title><rect x="578.8" y="131.0" width="26.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="581.8" y="142.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (918 samples, 0.40%)</title><rect x="605.1" y="147.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="608.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (773 samples, 0.34%)</title><rect x="605.5" y="131.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="608.5" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (773 samples, 0.34%)</title><rect x="605.5" y="115.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.5" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (773 samples, 0.34%)</title><rect x="605.5" y="99.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="608.5" y="110.0"></text>
</g>
<g>
<title>char[] (574 samples, 0.25%)</title><rect x="605.5" y="83.0" width="3.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="608.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String (88 samples, 0.04%)</title><rect x="608.5" y="83.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="611.5" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (111 samples, 0.05%)</title><rect x="608.9" y="83.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.9" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (111 samples, 0.05%)</title><rect x="608.9" y="67.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.9" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (111 samples, 0.05%)</title><rect x="608.9" y="51.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.9" y="62.0"></text>
</g>
<g>
<title>byte[] (111 samples, 0.05%)</title><rect x="608.9" y="35.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="611.9" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (50 samples, 0.02%)</title><rect x="609.6" y="131.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (50 samples, 0.02%)</title><rect x="609.6" y="115.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (50 samples, 0.02%)</title><rect x="609.6" y="99.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.6" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (211 samples, 0.09%)</title><rect x="609.9" y="147.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="612.9" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (206 samples, 0.09%)</title><rect x="609.9" y="131.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.9" y="142.0"></text>
</g>
<g>
<title>byte[] (206 samples, 0.09%)</title><rect x="609.9" y="115.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="612.9" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (51 samples, 0.02%)</title><rect x="611.0" y="147.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="614.0" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (51 samples, 0.02%)</title><rect x="611.0" y="131.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.0" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (51 samples, 0.02%)</title><rect x="611.0" y="115.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.0" y="126.0"></text>
</g>
<g>
<title>[proxy-worker-4 tid=25859] (12,099 samples, 5.33%)</title><rect x="611.6" y="339.0" width="62.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="614.6" y="350.0">[proxy..</text>
</g>
<g>
<title>java/lang/Thread.run (12,099 samples, 5.33%)</title><rect x="611.6" y="323.0" width="62.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="614.6" y="334.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (12,099 samples, 5.33%)</title><rect x="611.6" y="307.0" width="62.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.6" y="318.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (12,099 samples, 5.33%)</title><rect x="611.6" y="291.0" width="62.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="614.6" y="302.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (12,084 samples, 5.32%)</title><rect x="611.6" y="275.0" width="62.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="614.6" y="286.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (12,059 samples, 5.31%)</title><rect x="611.6" y="259.0" width="62.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="614.6" y="270.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (12,059 samples, 5.31%)</title><rect x="611.6" y="243.0" width="62.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="614.6" y="254.0">java/u..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (12,059 samples, 5.31%)</title><rect x="611.6" y="227.0" width="62.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.6" y="238.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (12,059 samples, 5.31%)</title><rect x="611.6" y="211.0" width="62.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="614.6" y="222.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (12,059 samples, 5.31%)</title><rect x="611.6" y="195.0" width="62.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="614.6" y="206.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (12,059 samples, 5.31%)</title><rect x="611.6" y="179.0" width="62.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.6" y="190.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (12,059 samples, 5.31%)</title><rect x="611.6" y="163.0" width="62.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="614.6" y="174.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (65 samples, 0.03%)</title><rect x="611.6" y="147.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="614.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (11,102 samples, 4.89%)</title><rect x="611.9" y="147.0" width="57.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.9" y="158.0">one/ni..</text>
</g>
<g>
<title>byte[] (5,666 samples, 2.49%)</title><rect x="611.9" y="131.0" width="29.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="614.9" y="142.0">by..</text>
</g>
<g>
<title>byte[] (5,436 samples, 2.39%)</title><rect x="641.4" y="131.0" width="28.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="644.4" y="142.0">by..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (691 samples, 0.30%)</title><rect x="669.6" y="147.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="672.6" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (608 samples, 0.27%)</title><rect x="669.8" y="131.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.8" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (608 samples, 0.27%)</title><rect x="669.8" y="115.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="672.8" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (608 samples, 0.27%)</title><rect x="669.8" y="99.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.8" y="110.0"></text>
</g>
<g>
<title>char[] (478 samples, 0.21%)</title><rect x="669.8" y="83.0" width="2.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="672.8" y="94.0"></text>
</g>
<g>
<title>java.lang.String (52 samples, 0.02%)</title><rect x="672.3" y="83.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="675.3" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (78 samples, 0.03%)</title><rect x="672.6" y="83.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="675.6" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (78 samples, 0.03%)</title><rect x="672.6" y="67.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.6" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (78 samples, 0.03%)</title><rect x="672.6" y="51.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="675.6" y="62.0"></text>
</g>
<g>
<title>byte[] (78 samples, 0.03%)</title><rect x="672.6" y="35.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="675.6" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (151 samples, 0.07%)</title><rect x="673.2" y="147.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="676.2" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (144 samples, 0.06%)</title><rect x="673.2" y="131.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.2" y="142.0"></text>
</g>
<g>
<title>byte[] (144 samples, 0.06%)</title><rect x="673.2" y="115.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="676.2" y="126.0"></text>
</g>
<g>
<title>[worker-0 tid=25857] (6,701 samples, 2.95%)</title><rect x="674.5" y="339.0" width="34.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="677.5" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (6,701 samples, 2.95%)</title><rect x="674.5" y="323.0" width="34.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="677.5" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,701 samples, 2.95%)</title><rect x="674.5" y="307.0" width="34.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.5" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,701 samples, 2.95%)</title><rect x="674.5" y="291.0" width="34.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="677.5" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (404 samples, 0.18%)</title><rect x="674.5" y="275.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="677.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (404 samples, 0.18%)</title><rect x="674.5" y="259.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="677.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (403 samples, 0.18%)</title><rect x="674.5" y="243.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="677.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (403 samples, 0.18%)</title><rect x="674.5" y="227.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.5" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (403 samples, 0.18%)</title><rect x="674.5" y="211.0" width="2.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="677.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (6,297 samples, 2.77%)</title><rect x="676.6" y="275.0" width="32.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.6" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (6,297 samples, 2.77%)</title><rect x="676.6" y="259.0" width="32.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.6" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (4,781 samples, 2.11%)</title><rect x="676.6" y="243.0" width="24.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.6" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (4,781 samples, 2.11%)</title><rect x="676.6" y="227.0" width="24.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.6" y="238.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (517 samples, 0.23%)</title><rect x="676.6" y="211.0" width="2.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="679.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$MetaRequest.&lt;init&gt; (731 samples, 0.32%)</title><rect x="679.2" y="211.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.2" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (731 samples, 0.32%)</title><rect x="679.2" y="195.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.2" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (553 samples, 0.24%)</title><rect x="679.2" y="179.0" width="2.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="682.2" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (178 samples, 0.08%)</title><rect x="682.1" y="179.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.1" y="190.0"></text>
</g>
<g>
<title>byte[] (178 samples, 0.08%)</title><rect x="682.1" y="163.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="685.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (3,533 samples, 1.56%)</title><rect x="683.0" y="211.0" width="18.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="686.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (339 samples, 0.15%)</title><rect x="683.0" y="195.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="686.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (339 samples, 0.15%)</title><rect x="683.0" y="179.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.0" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (339 samples, 0.15%)</title><rect x="683.0" y="163.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.0" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (339 samples, 0.15%)</title><rect x="683.0" y="147.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.0" y="158.0"></text>
</g>
<g>
<title>byte[] (339 samples, 0.15%)</title><rect x="683.0" y="131.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="686.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (554 samples, 0.24%)</title><rect x="684.8" y="195.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="687.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (554 samples, 0.24%)</title><rect x="684.8" y="179.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="687.8" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (554 samples, 0.24%)</title><rect x="684.8" y="163.0" width="2.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="687.8" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (252 samples, 0.11%)</title><rect x="687.7" y="195.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="690.7" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,107 samples, 0.49%)</title><rect x="689.0" y="195.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="692.0" y="206.0"></text>
</g>
<g>
<title>byte[] (441 samples, 0.19%)</title><rect x="689.0" y="179.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="692.0" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (376 samples, 0.17%)</title><rect x="691.3" y="179.0" width="1.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="694.3" y="190.0"></text>
</g>
<g>
<title>java.lang.String (290 samples, 0.13%)</title><rect x="693.2" y="179.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="696.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (1,281 samples, 0.56%)</title><rect x="694.7" y="195.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="697.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (1,281 samples, 0.56%)</title><rect x="694.7" y="179.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (1,279 samples, 0.56%)</title><rect x="694.8" y="163.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (300 samples, 0.13%)</title><rect x="694.8" y="147.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (300 samples, 0.13%)</title><rect x="694.8" y="131.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.8" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (99 samples, 0.04%)</title><rect x="694.8" y="115.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="697.8" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (201 samples, 0.09%)</title><rect x="695.3" y="115.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="698.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (330 samples, 0.15%)</title><rect x="696.3" y="147.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.3" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (330 samples, 0.15%)</title><rect x="696.3" y="131.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.3" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (330 samples, 0.15%)</title><rect x="696.3" y="115.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="699.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.tombstone (258 samples, 0.11%)</title><rect x="698.0" y="147.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="701.0" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (258 samples, 0.11%)</title><rect x="698.0" y="131.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="701.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (391 samples, 0.17%)</title><rect x="699.4" y="147.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.4" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (391 samples, 0.17%)</title><rect x="699.4" y="131.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="702.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (1,516 samples, 0.67%)</title><rect x="701.4" y="243.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="704.4" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,516 samples, 0.67%)</title><rect x="701.4" y="227.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="704.4" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,516 samples, 0.67%)</title><rect x="701.4" y="211.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="704.4" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,037 samples, 0.46%)</title><rect x="701.4" y="195.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.4" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,037 samples, 0.46%)</title><rect x="701.4" y="179.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="704.4" y="190.0"></text>
</g>
<g>
<title>byte[] (1,005 samples, 0.44%)</title><rect x="701.4" y="163.0" width="5.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="704.4" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (479 samples, 0.21%)</title><rect x="706.8" y="195.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="709.8" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (479 samples, 0.21%)</title><rect x="706.8" y="179.0" width="2.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="709.8" y="190.0"></text>
</g>
<g>
<title>[worker-0 tid=25862] (6,570 samples, 2.89%)</title><rect x="709.3" y="339.0" width="34.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="712.3" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (6,570 samples, 2.89%)</title><rect x="709.3" y="323.0" width="34.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.3" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,570 samples, 2.89%)</title><rect x="709.3" y="307.0" width="34.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="712.3" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,570 samples, 2.89%)</title><rect x="709.3" y="291.0" width="34.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="712.3" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (411 samples, 0.18%)</title><rect x="709.3" y="275.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="712.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (411 samples, 0.18%)</title><rect x="709.3" y="259.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="712.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (410 samples, 0.18%)</title><rect x="709.3" y="243.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (410 samples, 0.18%)</title><rect x="709.3" y="227.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="712.3" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (410 samples, 0.18%)</title><rect x="709.3" y="211.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="712.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (6,159 samples, 2.71%)</title><rect x="711.4" y="275.0" width="32.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="714.4" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (6,159 samples, 2.71%)</title><rect x="711.4" y="259.0" width="32.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="714.4" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (4,713 samples, 2.08%)</title><rect x="711.4" y="243.0" width="24.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.4" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (4,713 samples, 2.08%)</title><rect x="711.4" y="227.0" width="24.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.4" y="238.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (494 samples, 0.22%)</title><rect x="711.4" y="211.0" width="2.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="714.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$MetaRequest.&lt;init&gt; (715 samples, 0.31%)</title><rect x="714.0" y="211.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.0" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (715 samples, 0.31%)</title><rect x="714.0" y="195.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="717.0" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (558 samples, 0.25%)</title><rect x="714.0" y="179.0" width="2.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="717.0" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (157 samples, 0.07%)</title><rect x="716.9" y="179.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.9" y="190.0"></text>
</g>
<g>
<title>byte[] (157 samples, 0.07%)</title><rect x="716.9" y="163.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="719.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (3,504 samples, 1.54%)</title><rect x="717.7" y="211.0" width="18.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="720.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (353 samples, 0.16%)</title><rect x="717.7" y="195.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="720.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (353 samples, 0.16%)</title><rect x="717.7" y="179.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.7" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (353 samples, 0.16%)</title><rect x="717.7" y="163.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="720.7" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (353 samples, 0.16%)</title><rect x="717.7" y="147.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="720.7" y="158.0"></text>
</g>
<g>
<title>byte[] (353 samples, 0.16%)</title><rect x="717.7" y="131.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="720.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (550 samples, 0.24%)</title><rect x="719.5" y="195.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.5" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (550 samples, 0.24%)</title><rect x="719.5" y="179.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="722.5" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (550 samples, 0.24%)</title><rect x="719.5" y="163.0" width="2.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="722.5" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (261 samples, 0.11%)</title><rect x="722.4" y="195.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="725.4" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,047 samples, 0.46%)</title><rect x="723.7" y="195.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="726.7" y="206.0"></text>
</g>
<g>
<title>byte[] (419 samples, 0.18%)</title><rect x="723.7" y="179.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="726.7" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (362 samples, 0.16%)</title><rect x="725.9" y="179.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="728.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String (266 samples, 0.12%)</title><rect x="727.8" y="179.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="730.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (1,293 samples, 0.57%)</title><rect x="729.2" y="195.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="732.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (1,293 samples, 0.57%)</title><rect x="729.2" y="179.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (1,290 samples, 0.57%)</title><rect x="729.2" y="163.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="732.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (294 samples, 0.13%)</title><rect x="729.2" y="147.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (294 samples, 0.13%)</title><rect x="729.2" y="131.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="732.2" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (95 samples, 0.04%)</title><rect x="729.2" y="115.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="732.2" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (199 samples, 0.09%)</title><rect x="729.7" y="115.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="732.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (359 samples, 0.16%)</title><rect x="730.7" y="147.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.7" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (359 samples, 0.16%)</title><rect x="730.7" y="131.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.7" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (359 samples, 0.16%)</title><rect x="730.7" y="115.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="733.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.tombstone (303 samples, 0.13%)</title><rect x="732.6" y="147.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.6" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (303 samples, 0.13%)</title><rect x="732.6" y="131.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="735.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (334 samples, 0.15%)</title><rect x="734.2" y="147.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.2" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (334 samples, 0.15%)</title><rect x="734.2" y="131.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="737.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (1,446 samples, 0.64%)</title><rect x="735.9" y="243.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="738.9" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,446 samples, 0.64%)</title><rect x="735.9" y="227.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="738.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,446 samples, 0.64%)</title><rect x="735.9" y="211.0" width="7.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="738.9" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,005 samples, 0.44%)</title><rect x="735.9" y="195.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="738.9" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,005 samples, 0.44%)</title><rect x="735.9" y="179.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="738.9" y="190.0"></text>
</g>
<g>
<title>byte[] (969 samples, 0.43%)</title><rect x="735.9" y="163.0" width="5.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="738.9" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (441 samples, 0.19%)</title><rect x="741.1" y="195.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="744.1" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (441 samples, 0.19%)</title><rect x="741.1" y="179.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="744.1" y="190.0"></text>
</g>
<g>
<title>[worker-1 tid=25861] (6,570 samples, 2.89%)</title><rect x="743.4" y="339.0" width="34.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="746.4" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (6,570 samples, 2.89%)</title><rect x="743.4" y="323.0" width="34.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="746.4" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,570 samples, 2.89%)</title><rect x="743.4" y="307.0" width="34.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.4" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,570 samples, 2.89%)</title><rect x="743.4" y="291.0" width="34.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="746.4" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (392 samples, 0.17%)</title><rect x="743.4" y="275.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="746.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (392 samples, 0.17%)</title><rect x="743.4" y="259.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="746.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (392 samples, 0.17%)</title><rect x="743.4" y="243.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="746.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (392 samples, 0.17%)</title><rect x="743.4" y="227.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="746.4" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (392 samples, 0.17%)</title><rect x="743.4" y="211.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="746.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (6,178 samples, 2.72%)</title><rect x="745.4" y="275.0" width="32.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="748.4" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (6,178 samples, 2.72%)</title><rect x="745.4" y="259.0" width="32.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="748.4" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (4,712 samples, 2.07%)</title><rect x="745.4" y="243.0" width="24.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="748.4" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (4,712 samples, 2.07%)</title><rect x="745.4" y="227.0" width="24.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.4" y="238.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (493 samples, 0.22%)</title><rect x="745.4" y="211.0" width="2.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="748.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$MetaRequest.&lt;init&gt; (706 samples, 0.31%)</title><rect x="748.0" y="211.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="751.0" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (706 samples, 0.31%)</title><rect x="748.0" y="195.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="751.0" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (535 samples, 0.24%)</title><rect x="748.0" y="179.0" width="2.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="751.0" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (171 samples, 0.08%)</title><rect x="750.8" y="179.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="753.8" y="190.0"></text>
</g>
<g>
<title>byte[] (171 samples, 0.08%)</title><rect x="750.8" y="163.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="753.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (3,513 samples, 1.55%)</title><rect x="751.7" y="211.0" width="18.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (323 samples, 0.14%)</title><rect x="751.7" y="195.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (323 samples, 0.14%)</title><rect x="751.7" y="179.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="754.7" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (323 samples, 0.14%)</title><rect x="751.7" y="163.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="754.7" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (323 samples, 0.14%)</title><rect x="751.7" y="147.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="754.7" y="158.0"></text>
</g>
<g>
<title>byte[] (323 samples, 0.14%)</title><rect x="751.7" y="131.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="754.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (523 samples, 0.23%)</title><rect x="753.4" y="195.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.4" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (523 samples, 0.23%)</title><rect x="753.4" y="179.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="756.4" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (523 samples, 0.23%)</title><rect x="753.4" y="163.0" width="2.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="756.4" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (285 samples, 0.13%)</title><rect x="756.1" y="195.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="759.1" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,112 samples, 0.49%)</title><rect x="757.5" y="195.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.5" y="206.0"></text>
</g>
<g>
<title>byte[] (453 samples, 0.20%)</title><rect x="757.5" y="179.0" width="2.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="760.5" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (357 samples, 0.16%)</title><rect x="759.9" y="179.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="762.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String (302 samples, 0.13%)</title><rect x="761.8" y="179.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="764.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (1,270 samples, 0.56%)</title><rect x="763.3" y="195.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="766.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (1,270 samples, 0.56%)</title><rect x="763.3" y="179.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="766.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (1,270 samples, 0.56%)</title><rect x="763.3" y="163.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="766.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (283 samples, 0.12%)</title><rect x="763.3" y="147.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="766.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (283 samples, 0.12%)</title><rect x="763.3" y="131.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="766.3" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (90 samples, 0.04%)</title><rect x="763.3" y="115.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="766.3" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (193 samples, 0.08%)</title><rect x="763.8" y="115.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="766.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (358 samples, 0.16%)</title><rect x="764.8" y="147.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="767.8" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (358 samples, 0.16%)</title><rect x="764.8" y="131.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="767.8" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (358 samples, 0.16%)</title><rect x="764.8" y="115.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="767.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.tombstone (265 samples, 0.12%)</title><rect x="766.7" y="147.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.7" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (265 samples, 0.12%)</title><rect x="766.7" y="131.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="769.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (364 samples, 0.16%)</title><rect x="768.0" y="147.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.0" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (364 samples, 0.16%)</title><rect x="768.0" y="131.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="771.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (1,466 samples, 0.65%)</title><rect x="769.9" y="243.0" width="7.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="772.9" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,466 samples, 0.65%)</title><rect x="769.9" y="227.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="772.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,466 samples, 0.65%)</title><rect x="769.9" y="211.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="772.9" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,023 samples, 0.45%)</title><rect x="769.9" y="195.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="772.9" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,023 samples, 0.45%)</title><rect x="769.9" y="179.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="772.9" y="190.0"></text>
</g>
<g>
<title>byte[] (992 samples, 0.44%)</title><rect x="769.9" y="163.0" width="5.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="772.9" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (443 samples, 0.20%)</title><rect x="775.2" y="195.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="778.2" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (443 samples, 0.20%)</title><rect x="775.2" y="179.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="778.2" y="190.0"></text>
</g>
<g>
<title>[worker-1 tid=25864] (6,609 samples, 2.91%)</title><rect x="777.5" y="339.0" width="34.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="780.5" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (6,609 samples, 2.91%)</title><rect x="777.5" y="323.0" width="34.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.5" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,609 samples, 2.91%)</title><rect x="777.5" y="307.0" width="34.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.5" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,609 samples, 2.91%)</title><rect x="777.5" y="291.0" width="34.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.5" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (420 samples, 0.18%)</title><rect x="777.5" y="275.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="780.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (420 samples, 0.18%)</title><rect x="777.5" y="259.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="780.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (419 samples, 0.18%)</title><rect x="777.5" y="243.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (419 samples, 0.18%)</title><rect x="777.5" y="227.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.5" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (419 samples, 0.18%)</title><rect x="777.5" y="211.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="780.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (6,189 samples, 2.73%)</title><rect x="779.7" y="275.0" width="32.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="782.7" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (6,189 samples, 2.73%)</title><rect x="779.7" y="259.0" width="32.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="782.7" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (4,706 samples, 2.07%)</title><rect x="779.7" y="243.0" width="24.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.7" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (4,706 samples, 2.07%)</title><rect x="779.7" y="227.0" width="24.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="782.7" y="238.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (479 samples, 0.21%)</title><rect x="779.7" y="211.0" width="2.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="782.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$MetaRequest.&lt;init&gt; (765 samples, 0.34%)</title><rect x="782.2" y="211.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="785.2" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (765 samples, 0.34%)</title><rect x="782.2" y="195.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="785.2" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (559 samples, 0.25%)</title><rect x="782.2" y="179.0" width="2.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="785.2" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (206 samples, 0.09%)</title><rect x="785.1" y="179.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="788.1" y="190.0"></text>
</g>
<g>
<title>byte[] (206 samples, 0.09%)</title><rect x="785.1" y="163.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="788.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (3,462 samples, 1.52%)</title><rect x="786.2" y="211.0" width="18.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="789.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (321 samples, 0.14%)</title><rect x="786.2" y="195.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="789.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (321 samples, 0.14%)</title><rect x="786.2" y="179.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="789.2" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (321 samples, 0.14%)</title><rect x="786.2" y="163.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="789.2" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (321 samples, 0.14%)</title><rect x="786.2" y="147.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="789.2" y="158.0"></text>
</g>
<g>
<title>byte[] (321 samples, 0.14%)</title><rect x="786.2" y="131.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="789.2" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (509 samples, 0.22%)</title><rect x="787.9" y="195.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="790.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (509 samples, 0.22%)</title><rect x="787.9" y="179.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="790.9" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (509 samples, 0.22%)</title><rect x="787.9" y="163.0" width="2.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="790.9" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (280 samples, 0.12%)</title><rect x="790.5" y="195.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="793.5" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,090 samples, 0.48%)</title><rect x="792.0" y="195.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="795.0" y="206.0"></text>
</g>
<g>
<title>byte[] (465 samples, 0.20%)</title><rect x="792.0" y="179.0" width="2.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="795.0" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (347 samples, 0.15%)</title><rect x="794.4" y="179.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="797.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String (278 samples, 0.12%)</title><rect x="796.2" y="179.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="799.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (1,262 samples, 0.56%)</title><rect x="797.6" y="195.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="800.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (1,262 samples, 0.56%)</title><rect x="797.6" y="179.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="800.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (1,262 samples, 0.56%)</title><rect x="797.6" y="163.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="800.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (259 samples, 0.11%)</title><rect x="797.6" y="147.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="800.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (259 samples, 0.11%)</title><rect x="797.6" y="131.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="800.6" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (92 samples, 0.04%)</title><rect x="797.6" y="115.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="800.6" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (167 samples, 0.07%)</title><rect x="798.1" y="115.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="801.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (358 samples, 0.16%)</title><rect x="799.0" y="147.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (358 samples, 0.16%)</title><rect x="799.0" y="131.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="802.0" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (358 samples, 0.16%)</title><rect x="799.0" y="115.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="802.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.tombstone (284 samples, 0.13%)</title><rect x="800.8" y="147.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="803.8" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (284 samples, 0.13%)</title><rect x="800.8" y="131.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="803.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (361 samples, 0.16%)</title><rect x="802.3" y="147.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.3" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (361 samples, 0.16%)</title><rect x="802.3" y="131.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="805.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (1,483 samples, 0.65%)</title><rect x="804.2" y="243.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="807.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,483 samples, 0.65%)</title><rect x="804.2" y="227.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.2" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,483 samples, 0.65%)</title><rect x="804.2" y="211.0" width="7.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="807.2" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,003 samples, 0.44%)</title><rect x="804.2" y="195.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.2" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,003 samples, 0.44%)</title><rect x="804.2" y="179.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="807.2" y="190.0"></text>
</g>
<g>
<title>byte[] (978 samples, 0.43%)</title><rect x="804.2" y="163.0" width="5.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="807.2" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (480 samples, 0.21%)</title><rect x="809.4" y="195.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.4" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (480 samples, 0.21%)</title><rect x="809.4" y="179.0" width="2.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="812.4" y="190.0"></text>
</g>
<g>
<title>[worker-19 tid=28928] (462 samples, 0.20%)</title><rect x="811.9" y="339.0" width="2.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="814.9" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (462 samples, 0.20%)</title><rect x="811.9" y="323.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="814.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (462 samples, 0.20%)</title><rect x="811.9" y="307.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="814.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (462 samples, 0.20%)</title><rect x="811.9" y="291.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="814.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (459 samples, 0.20%)</title><rect x="811.9" y="275.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="814.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (459 samples, 0.20%)</title><rect x="811.9" y="259.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="814.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (424 samples, 0.19%)</title><rect x="811.9" y="243.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="814.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (424 samples, 0.19%)</title><rect x="811.9" y="227.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (384 samples, 0.17%)</title><rect x="812.1" y="211.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="815.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (131 samples, 0.06%)</title><rect x="812.7" y="195.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="815.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (65 samples, 0.03%)</title><rect x="812.9" y="179.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="815.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (135 samples, 0.06%)</title><rect x="813.4" y="195.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="816.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (62 samples, 0.03%)</title><rect x="813.8" y="179.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="816.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (49 samples, 0.02%)</title><rect x="813.8" y="163.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="816.8" y="174.0"></text>
</g>
<g>
<title>[worker-2 tid=25863] (6,561 samples, 2.89%)</title><rect x="814.3" y="339.0" width="34.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="817.3" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (6,561 samples, 2.89%)</title><rect x="814.3" y="323.0" width="34.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="817.3" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,561 samples, 2.89%)</title><rect x="814.3" y="307.0" width="34.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="817.3" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,561 samples, 2.89%)</title><rect x="814.3" y="291.0" width="34.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="817.3" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (422 samples, 0.19%)</title><rect x="814.3" y="275.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="817.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (422 samples, 0.19%)</title><rect x="814.3" y="259.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="817.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (418 samples, 0.18%)</title><rect x="814.3" y="243.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="817.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (418 samples, 0.18%)</title><rect x="814.3" y="227.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="817.3" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (418 samples, 0.18%)</title><rect x="814.3" y="211.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="817.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (6,139 samples, 2.70%)</title><rect x="816.5" y="275.0" width="31.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="819.5" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (6,139 samples, 2.70%)</title><rect x="816.5" y="259.0" width="31.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="819.5" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (4,691 samples, 2.07%)</title><rect x="816.5" y="243.0" width="24.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.5" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (4,691 samples, 2.07%)</title><rect x="816.5" y="227.0" width="24.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.5" y="238.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (448 samples, 0.20%)</title><rect x="816.5" y="211.0" width="2.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="819.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$MetaRequest.&lt;init&gt; (709 samples, 0.31%)</title><rect x="818.8" y="211.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="821.8" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (709 samples, 0.31%)</title><rect x="818.8" y="195.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="821.8" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (550 samples, 0.24%)</title><rect x="818.8" y="179.0" width="2.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="821.8" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (159 samples, 0.07%)</title><rect x="821.7" y="179.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.7" y="190.0"></text>
</g>
<g>
<title>byte[] (159 samples, 0.07%)</title><rect x="821.7" y="163.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="824.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (3,534 samples, 1.56%)</title><rect x="822.5" y="211.0" width="18.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="825.5" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (364 samples, 0.16%)</title><rect x="822.5" y="195.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="825.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (364 samples, 0.16%)</title><rect x="822.5" y="179.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="825.5" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (364 samples, 0.16%)</title><rect x="822.5" y="163.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="825.5" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (364 samples, 0.16%)</title><rect x="822.5" y="147.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="825.5" y="158.0"></text>
</g>
<g>
<title>byte[] (364 samples, 0.16%)</title><rect x="822.5" y="131.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="825.5" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (524 samples, 0.23%)</title><rect x="824.4" y="195.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="827.4" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (524 samples, 0.23%)</title><rect x="824.4" y="179.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="827.4" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (524 samples, 0.23%)</title><rect x="824.4" y="163.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="827.4" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (269 samples, 0.12%)</title><rect x="827.1" y="195.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="830.1" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,114 samples, 0.49%)</title><rect x="828.5" y="195.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.5" y="206.0"></text>
</g>
<g>
<title>byte[] (449 samples, 0.20%)</title><rect x="828.5" y="179.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="831.5" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (365 samples, 0.16%)</title><rect x="830.8" y="179.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="833.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String (300 samples, 0.13%)</title><rect x="832.7" y="179.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="835.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (1,263 samples, 0.56%)</title><rect x="834.3" y="195.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="837.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (1,263 samples, 0.56%)</title><rect x="834.3" y="179.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (1,261 samples, 0.56%)</title><rect x="834.3" y="163.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (260 samples, 0.11%)</title><rect x="834.3" y="147.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="837.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (260 samples, 0.11%)</title><rect x="834.3" y="131.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="837.3" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (90 samples, 0.04%)</title><rect x="834.3" y="115.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="837.3" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (170 samples, 0.07%)</title><rect x="834.8" y="115.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="837.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (355 samples, 0.16%)</title><rect x="835.6" y="147.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="838.6" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (355 samples, 0.16%)</title><rect x="835.6" y="131.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="838.6" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (355 samples, 0.16%)</title><rect x="835.6" y="115.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="838.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.tombstone (276 samples, 0.12%)</title><rect x="837.5" y="147.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="840.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (276 samples, 0.12%)</title><rect x="837.5" y="131.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="840.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (370 samples, 0.16%)</title><rect x="838.9" y="147.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="841.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (370 samples, 0.16%)</title><rect x="838.9" y="131.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="841.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (1,448 samples, 0.64%)</title><rect x="840.8" y="243.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.8" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,448 samples, 0.64%)</title><rect x="840.8" y="227.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="843.8" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,448 samples, 0.64%)</title><rect x="840.8" y="211.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="843.8" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (978 samples, 0.43%)</title><rect x="840.8" y="195.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="843.8" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (978 samples, 0.43%)</title><rect x="840.8" y="179.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="843.8" y="190.0"></text>
</g>
<g>
<title>byte[] (946 samples, 0.42%)</title><rect x="840.8" y="163.0" width="5.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="843.8" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (470 samples, 0.21%)</title><rect x="845.9" y="195.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="848.9" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (470 samples, 0.21%)</title><rect x="845.9" y="179.0" width="2.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="848.9" y="190.0"></text>
</g>
<g>
<title>[worker-2 tid=25868] (6,539 samples, 2.88%)</title><rect x="848.4" y="339.0" width="33.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="851.4" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (6,539 samples, 2.88%)</title><rect x="848.4" y="323.0" width="33.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="851.4" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,539 samples, 2.88%)</title><rect x="848.4" y="307.0" width="33.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="851.4" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,539 samples, 2.88%)</title><rect x="848.4" y="291.0" width="33.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.4" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (414 samples, 0.18%)</title><rect x="848.4" y="275.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="851.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (414 samples, 0.18%)</title><rect x="848.4" y="259.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (414 samples, 0.18%)</title><rect x="848.4" y="243.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="851.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (414 samples, 0.18%)</title><rect x="848.4" y="227.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="851.4" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (414 samples, 0.18%)</title><rect x="848.4" y="211.0" width="2.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="851.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (6,125 samples, 2.70%)</title><rect x="850.5" y="275.0" width="31.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="853.5" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (6,125 samples, 2.70%)</title><rect x="850.5" y="259.0" width="31.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.5" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (4,709 samples, 2.07%)</title><rect x="850.5" y="243.0" width="24.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.5" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (4,709 samples, 2.07%)</title><rect x="850.5" y="227.0" width="24.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.5" y="238.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (508 samples, 0.22%)</title><rect x="850.5" y="211.0" width="2.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="853.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$MetaRequest.&lt;init&gt; (738 samples, 0.32%)</title><rect x="853.2" y="211.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="856.2" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (738 samples, 0.32%)</title><rect x="853.2" y="195.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.2" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (548 samples, 0.24%)</title><rect x="853.2" y="179.0" width="2.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="856.2" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (190 samples, 0.08%)</title><rect x="856.0" y="179.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="859.0" y="190.0"></text>
</g>
<g>
<title>byte[] (190 samples, 0.08%)</title><rect x="856.0" y="163.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="859.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (3,463 samples, 1.52%)</title><rect x="857.0" y="211.0" width="18.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="860.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (322 samples, 0.14%)</title><rect x="857.0" y="195.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="860.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (322 samples, 0.14%)</title><rect x="857.0" y="179.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="860.0" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (322 samples, 0.14%)</title><rect x="857.0" y="163.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="860.0" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (322 samples, 0.14%)</title><rect x="857.0" y="147.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="860.0" y="158.0"></text>
</g>
<g>
<title>byte[] (322 samples, 0.14%)</title><rect x="857.0" y="131.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="860.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (574 samples, 0.25%)</title><rect x="858.7" y="195.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="861.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (574 samples, 0.25%)</title><rect x="858.7" y="179.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="861.7" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (574 samples, 0.25%)</title><rect x="858.7" y="163.0" width="2.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="861.7" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (299 samples, 0.13%)</title><rect x="861.6" y="195.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="864.6" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,009 samples, 0.44%)</title><rect x="863.2" y="195.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="866.2" y="206.0"></text>
</g>
<g>
<title>byte[] (421 samples, 0.19%)</title><rect x="863.2" y="179.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="866.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (345 samples, 0.15%)</title><rect x="865.4" y="179.0" width="1.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="868.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String (243 samples, 0.11%)</title><rect x="867.2" y="179.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="870.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (1,259 samples, 0.55%)</title><rect x="868.4" y="195.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="871.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (1,259 samples, 0.55%)</title><rect x="868.4" y="179.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="871.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (1,258 samples, 0.55%)</title><rect x="868.4" y="163.0" width="6.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="871.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (244 samples, 0.11%)</title><rect x="868.4" y="147.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="871.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (244 samples, 0.11%)</title><rect x="868.4" y="131.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="871.4" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (77 samples, 0.03%)</title><rect x="868.4" y="115.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="871.4" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (167 samples, 0.07%)</title><rect x="868.8" y="115.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="871.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (369 samples, 0.16%)</title><rect x="869.7" y="147.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="872.7" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (369 samples, 0.16%)</title><rect x="869.7" y="131.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="872.7" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (369 samples, 0.16%)</title><rect x="869.7" y="115.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="872.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.tombstone (284 samples, 0.13%)</title><rect x="871.6" y="147.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="874.6" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (284 samples, 0.13%)</title><rect x="871.6" y="131.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="874.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (361 samples, 0.16%)</title><rect x="873.1" y="147.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="876.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (361 samples, 0.16%)</title><rect x="873.1" y="131.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="876.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (1,416 samples, 0.62%)</title><rect x="875.0" y="243.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="878.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,416 samples, 0.62%)</title><rect x="875.0" y="227.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="878.0" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,416 samples, 0.62%)</title><rect x="875.0" y="211.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="878.0" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (984 samples, 0.43%)</title><rect x="875.0" y="195.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="878.0" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (984 samples, 0.43%)</title><rect x="875.0" y="179.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="878.0" y="190.0"></text>
</g>
<g>
<title>byte[] (954 samples, 0.42%)</title><rect x="875.0" y="163.0" width="4.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="878.0" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (432 samples, 0.19%)</title><rect x="880.1" y="195.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="883.1" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (432 samples, 0.19%)</title><rect x="880.1" y="179.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="883.1" y="190.0"></text>
</g>
<g>
<title>[worker-23 tid=29149] (3,244 samples, 1.43%)</title><rect x="882.3" y="339.0" width="16.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="885.3" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,244 samples, 1.43%)</title><rect x="882.3" y="323.0" width="16.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="885.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,244 samples, 1.43%)</title><rect x="882.3" y="307.0" width="16.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="885.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,244 samples, 1.43%)</title><rect x="882.3" y="291.0" width="16.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="885.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (3,217 samples, 1.42%)</title><rect x="882.5" y="275.0" width="16.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="885.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (3,217 samples, 1.42%)</title><rect x="882.5" y="259.0" width="16.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="885.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (2,948 samples, 1.30%)</title><rect x="882.5" y="243.0" width="15.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="885.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (2,948 samples, 1.30%)</title><rect x="882.5" y="227.0" width="15.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="885.5" y="238.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (72 samples, 0.03%)</title><rect x="882.5" y="211.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="885.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$MetaRequest.&lt;init&gt; (131 samples, 0.06%)</title><rect x="882.9" y="211.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="885.9" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (131 samples, 0.06%)</title><rect x="882.9" y="195.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="885.9" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (101 samples, 0.04%)</title><rect x="882.9" y="179.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="885.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (2,745 samples, 1.21%)</title><rect x="883.5" y="211.0" width="14.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="886.5" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (97 samples, 0.04%)</title><rect x="883.5" y="195.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="886.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (97 samples, 0.04%)</title><rect x="883.5" y="179.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="886.5" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (97 samples, 0.04%)</title><rect x="883.5" y="163.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="886.5" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (97 samples, 0.04%)</title><rect x="883.5" y="147.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="886.5" y="158.0"></text>
</g>
<g>
<title>byte[] (97 samples, 0.04%)</title><rect x="883.5" y="131.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="886.5" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (198 samples, 0.09%)</title><rect x="884.0" y="195.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="887.0" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (198 samples, 0.09%)</title><rect x="884.0" y="179.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.0" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (198 samples, 0.09%)</title><rect x="884.0" y="163.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="887.0" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (65 samples, 0.03%)</title><rect x="885.1" y="195.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="888.1" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (210 samples, 0.09%)</title><rect x="885.4" y="195.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="888.4" y="206.0"></text>
</g>
<g>
<title>byte[] (79 samples, 0.03%)</title><rect x="885.4" y="179.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="888.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (74 samples, 0.03%)</title><rect x="885.8" y="179.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="888.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String (57 samples, 0.03%)</title><rect x="886.2" y="179.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="889.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (203 samples, 0.09%)</title><rect x="886.5" y="195.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="889.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (203 samples, 0.09%)</title><rect x="886.5" y="179.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="889.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (202 samples, 0.09%)</title><rect x="886.5" y="163.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="889.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (55 samples, 0.02%)</title><rect x="886.7" y="147.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="889.7" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (55 samples, 0.02%)</title><rect x="886.7" y="131.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="889.7" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (55 samples, 0.02%)</title><rect x="886.7" y="115.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="889.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (77 samples, 0.03%)</title><rect x="887.2" y="147.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.2" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (77 samples, 0.03%)</title><rect x="887.2" y="131.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="890.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (900 samples, 0.40%)</title><rect x="887.6" y="195.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="890.6" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (63 samples, 0.03%)</title><rect x="887.6" y="179.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="890.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (90 samples, 0.04%)</title><rect x="887.9" y="179.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="890.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (90 samples, 0.04%)</title><rect x="887.9" y="163.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="890.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.get$Lambda (90 samples, 0.04%)</title><rect x="887.9" y="147.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="890.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$68 (90 samples, 0.04%)</title><rect x="887.9" y="131.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="890.9" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (129 samples, 0.06%)</title><rect x="888.4" y="179.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="891.4" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (129 samples, 0.06%)</title><rect x="888.4" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="891.4" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (129 samples, 0.06%)</title><rect x="888.4" y="147.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="891.4" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (129 samples, 0.06%)</title><rect x="888.4" y="131.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="891.4" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (129 samples, 0.06%)</title><rect x="888.4" y="115.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="891.4" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (129 samples, 0.06%)</title><rect x="888.4" y="99.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="891.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (470 samples, 0.21%)</title><rect x="889.0" y="179.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="892.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ExecutorCompletionService$QueueingFuture (151 samples, 0.07%)</title><rect x="889.0" y="163.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="892.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.&lt;init&gt; (97 samples, 0.04%)</title><rect x="889.8" y="163.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="892.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (97 samples, 0.04%)</title><rect x="889.8" y="147.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="892.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (97 samples, 0.04%)</title><rect x="889.8" y="131.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="892.8" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (97 samples, 0.04%)</title><rect x="889.8" y="115.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="892.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.newTaskFor (133 samples, 0.06%)</title><rect x="890.3" y="163.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="893.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (133 samples, 0.06%)</title><rect x="890.3" y="147.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="893.3" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (133 samples, 0.06%)</title><rect x="890.3" y="131.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="893.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (89 samples, 0.04%)</title><rect x="891.0" y="163.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (89 samples, 0.04%)</title><rect x="891.0" y="147.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="894.0" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (89 samples, 0.04%)</title><rect x="891.0" y="131.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="894.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (146 samples, 0.06%)</title><rect x="891.5" y="179.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="894.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (146 samples, 0.06%)</title><rect x="891.5" y="163.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="894.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (144 samples, 0.06%)</title><rect x="891.5" y="147.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="894.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (144 samples, 0.06%)</title><rect x="891.5" y="131.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="894.5" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (144 samples, 0.06%)</title><rect x="891.5" y="115.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="894.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (1,072 samples, 0.47%)</title><rect x="892.2" y="195.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="895.2" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (50 samples, 0.02%)</title><rect x="892.2" y="179.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="895.2" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (193 samples, 0.08%)</title><rect x="892.5" y="179.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="895.5" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (54 samples, 0.02%)</title><rect x="892.5" y="163.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="895.5" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (139 samples, 0.06%)</title><rect x="892.8" y="163.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="895.8" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (66 samples, 0.03%)</title><rect x="892.8" y="147.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="895.8" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (66 samples, 0.03%)</title><rect x="892.8" y="131.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="895.8" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (73 samples, 0.03%)</title><rect x="893.1" y="147.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="896.1" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (73 samples, 0.03%)</title><rect x="893.1" y="131.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="896.1" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (122 samples, 0.05%)</title><rect x="893.6" y="179.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="896.6" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (122 samples, 0.05%)</title><rect x="893.6" y="163.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="896.6" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (122 samples, 0.05%)</title><rect x="893.6" y="147.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="896.6" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (122 samples, 0.05%)</title><rect x="893.6" y="131.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="896.6" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (122 samples, 0.05%)</title><rect x="893.6" y="115.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="896.6" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (121 samples, 0.05%)</title><rect x="893.6" y="99.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="896.6" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (108 samples, 0.05%)</title><rect x="894.3" y="179.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="897.3" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (108 samples, 0.05%)</title><rect x="894.3" y="163.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.3" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (108 samples, 0.05%)</title><rect x="894.3" y="147.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="897.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (565 samples, 0.25%)</title><rect x="894.9" y="179.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="897.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (478 samples, 0.21%)</title><rect x="894.9" y="163.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="897.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (294 samples, 0.13%)</title><rect x="894.9" y="147.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (294 samples, 0.13%)</title><rect x="894.9" y="131.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.9" y="142.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (102 samples, 0.04%)</title><rect x="894.9" y="115.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="897.9" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (192 samples, 0.08%)</title><rect x="895.4" y="115.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="898.4" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (192 samples, 0.08%)</title><rect x="895.4" y="99.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="898.4" y="110.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (192 samples, 0.08%)</title><rect x="895.4" y="83.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="898.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (192 samples, 0.08%)</title><rect x="895.4" y="67.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="898.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (105 samples, 0.05%)</title><rect x="895.4" y="51.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="898.4" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (87 samples, 0.04%)</title><rect x="895.9" y="51.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="898.9" y="62.0"></text>
</g>
<g>
<title>byte[] (87 samples, 0.04%)</title><rect x="895.9" y="35.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="898.9" y="46.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (184 samples, 0.08%)</title><rect x="896.4" y="147.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="899.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (184 samples, 0.08%)</title><rect x="896.4" y="131.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.4" y="142.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.03%)</title><rect x="896.4" y="115.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="899.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (109 samples, 0.05%)</title><rect x="896.8" y="115.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="899.8" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (109 samples, 0.05%)</title><rect x="896.8" y="99.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="899.8" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (109 samples, 0.05%)</title><rect x="896.8" y="83.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="899.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (269 samples, 0.12%)</title><rect x="897.8" y="243.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.8" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (269 samples, 0.12%)</title><rect x="897.8" y="227.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="900.8" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (269 samples, 0.12%)</title><rect x="897.8" y="211.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="900.8" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (194 samples, 0.09%)</title><rect x="897.8" y="195.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="900.8" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (194 samples, 0.09%)</title><rect x="897.8" y="179.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="900.8" y="190.0"></text>
</g>
<g>
<title>byte[] (192 samples, 0.08%)</title><rect x="897.8" y="163.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="900.8" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (75 samples, 0.03%)</title><rect x="898.8" y="195.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.8" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (75 samples, 0.03%)</title><rect x="898.8" y="179.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="901.8" y="190.0"></text>
</g>
<g>
<title>[worker-24 tid=29156] (6,621 samples, 2.92%)</title><rect x="899.2" y="339.0" width="34.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="902.2" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (6,621 samples, 2.92%)</title><rect x="899.2" y="323.0" width="34.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="902.2" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,621 samples, 2.92%)</title><rect x="899.2" y="307.0" width="34.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="902.2" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,621 samples, 2.92%)</title><rect x="899.2" y="291.0" width="34.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.2" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (86 samples, 0.04%)</title><rect x="899.2" y="275.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="902.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (86 samples, 0.04%)</title><rect x="899.2" y="259.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="902.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (86 samples, 0.04%)</title><rect x="899.2" y="243.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="902.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (86 samples, 0.04%)</title><rect x="899.2" y="227.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="902.2" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (86 samples, 0.04%)</title><rect x="899.2" y="211.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="902.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (6,535 samples, 2.88%)</title><rect x="899.6" y="275.0" width="34.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="902.6" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (6,535 samples, 2.88%)</title><rect x="899.6" y="259.0" width="34.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="902.6" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (5,990 samples, 2.64%)</title><rect x="899.6" y="243.0" width="31.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="902.6" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (5,990 samples, 2.64%)</title><rect x="899.6" y="227.0" width="31.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="902.6" y="238.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (158 samples, 0.07%)</title><rect x="899.6" y="211.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="902.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$MetaRequest.&lt;init&gt; (263 samples, 0.12%)</title><rect x="900.5" y="211.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="903.5" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (263 samples, 0.12%)</title><rect x="900.5" y="195.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="903.5" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (198 samples, 0.09%)</title><rect x="900.5" y="179.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="903.5" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (65 samples, 0.03%)</title><rect x="901.5" y="179.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.5" y="190.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.03%)</title><rect x="901.5" y="163.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="904.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (5,569 samples, 2.45%)</title><rect x="901.8" y="211.0" width="29.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="904.8" y="222.0">ru..</text>
</g>
<g>
<title>java/lang/String.getBytes (243 samples, 0.11%)</title><rect x="901.8" y="195.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="904.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (243 samples, 0.11%)</title><rect x="901.8" y="179.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="904.8" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (243 samples, 0.11%)</title><rect x="901.8" y="163.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="904.8" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (243 samples, 0.11%)</title><rect x="901.8" y="147.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.8" y="158.0"></text>
</g>
<g>
<title>byte[] (243 samples, 0.11%)</title><rect x="901.8" y="131.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="904.8" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (390 samples, 0.17%)</title><rect x="903.1" y="195.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="906.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (390 samples, 0.17%)</title><rect x="903.1" y="179.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="906.1" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (390 samples, 0.17%)</title><rect x="903.1" y="163.0" width="2.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="906.1" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (132 samples, 0.06%)</title><rect x="905.1" y="195.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="908.1" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (405 samples, 0.18%)</title><rect x="905.8" y="195.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="908.8" y="206.0"></text>
</g>
<g>
<title>byte[] (182 samples, 0.08%)</title><rect x="905.8" y="179.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="908.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (131 samples, 0.06%)</title><rect x="906.7" y="179.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="909.7" y="190.0"></text>
</g>
<g>
<title>java.lang.String (92 samples, 0.04%)</title><rect x="907.4" y="179.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="910.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (426 samples, 0.19%)</title><rect x="907.9" y="195.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="910.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (426 samples, 0.19%)</title><rect x="907.9" y="179.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="910.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (426 samples, 0.19%)</title><rect x="907.9" y="163.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="910.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (100 samples, 0.04%)</title><rect x="907.9" y="147.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="910.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (100 samples, 0.04%)</title><rect x="907.9" y="131.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="910.9" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (70 samples, 0.03%)</title><rect x="908.1" y="115.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="911.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (119 samples, 0.05%)</title><rect x="908.4" y="147.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="911.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (119 samples, 0.05%)</title><rect x="908.4" y="131.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="911.4" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (119 samples, 0.05%)</title><rect x="908.4" y="115.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="911.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.tombstone (90 samples, 0.04%)</title><rect x="909.0" y="147.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="912.0" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (90 samples, 0.04%)</title><rect x="909.0" y="131.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="912.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (117 samples, 0.05%)</title><rect x="909.5" y="147.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="912.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (117 samples, 0.05%)</title><rect x="909.5" y="131.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="912.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (1,839 samples, 0.81%)</title><rect x="910.1" y="195.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="913.1" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (99 samples, 0.04%)</title><rect x="910.1" y="179.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="913.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (179 samples, 0.08%)</title><rect x="910.6" y="179.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="913.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (179 samples, 0.08%)</title><rect x="910.6" y="163.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="913.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.get$Lambda (179 samples, 0.08%)</title><rect x="910.6" y="147.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.6" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$68 (179 samples, 0.08%)</title><rect x="910.6" y="131.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="913.6" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (270 samples, 0.12%)</title><rect x="911.6" y="179.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.6" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (270 samples, 0.12%)</title><rect x="911.6" y="163.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="914.6" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (270 samples, 0.12%)</title><rect x="911.6" y="147.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="914.6" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (270 samples, 0.12%)</title><rect x="911.6" y="131.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="914.6" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (270 samples, 0.12%)</title><rect x="911.6" y="115.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.6" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (270 samples, 0.12%)</title><rect x="911.6" y="99.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="914.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (1,006 samples, 0.44%)</title><rect x="913.0" y="179.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="916.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ExecutorCompletionService$QueueingFuture (348 samples, 0.15%)</title><rect x="913.0" y="163.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="916.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.&lt;init&gt; (196 samples, 0.09%)</title><rect x="914.8" y="163.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="917.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (196 samples, 0.09%)</title><rect x="914.8" y="147.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="917.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (196 samples, 0.09%)</title><rect x="914.8" y="131.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="917.8" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (196 samples, 0.09%)</title><rect x="914.8" y="115.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="917.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.newTaskFor (269 samples, 0.12%)</title><rect x="915.8" y="163.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (269 samples, 0.12%)</title><rect x="915.8" y="147.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="918.8" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (269 samples, 0.12%)</title><rect x="915.8" y="131.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="918.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (193 samples, 0.08%)</title><rect x="917.2" y="163.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="920.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (193 samples, 0.08%)</title><rect x="917.2" y="147.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="920.2" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (193 samples, 0.08%)</title><rect x="917.2" y="131.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="920.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (284 samples, 0.13%)</title><rect x="918.2" y="179.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="921.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (284 samples, 0.13%)</title><rect x="918.2" y="163.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="921.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (282 samples, 0.12%)</title><rect x="918.2" y="147.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="921.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (282 samples, 0.12%)</title><rect x="918.2" y="131.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="921.2" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (282 samples, 0.12%)</title><rect x="918.2" y="115.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="921.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (2,134 samples, 0.94%)</title><rect x="919.7" y="195.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="922.7" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (94 samples, 0.04%)</title><rect x="919.7" y="179.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="922.7" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (432 samples, 0.19%)</title><rect x="920.2" y="179.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="923.2" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (120 samples, 0.05%)</title><rect x="920.2" y="163.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="923.2" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (312 samples, 0.14%)</title><rect x="920.8" y="163.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="923.8" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (184 samples, 0.08%)</title><rect x="920.8" y="147.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="923.8" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (184 samples, 0.08%)</title><rect x="920.8" y="131.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="923.8" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (128 samples, 0.06%)</title><rect x="921.7" y="147.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="924.7" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (128 samples, 0.06%)</title><rect x="921.7" y="131.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="924.7" y="142.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (62 samples, 0.03%)</title><rect x="922.4" y="179.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="925.4" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (62 samples, 0.03%)</title><rect x="922.4" y="163.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="925.4" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (234 samples, 0.10%)</title><rect x="922.7" y="179.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="925.7" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (234 samples, 0.10%)</title><rect x="922.7" y="163.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="925.7" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (234 samples, 0.10%)</title><rect x="922.7" y="147.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="925.7" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (234 samples, 0.10%)</title><rect x="922.7" y="131.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="925.7" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (234 samples, 0.10%)</title><rect x="922.7" y="115.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="925.7" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (230 samples, 0.10%)</title><rect x="922.7" y="99.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="925.7" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (182 samples, 0.08%)</title><rect x="924.0" y="179.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="927.0" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (182 samples, 0.08%)</title><rect x="924.0" y="163.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="927.0" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (182 samples, 0.08%)</title><rect x="924.0" y="147.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="927.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (1,122 samples, 0.49%)</title><rect x="924.9" y="179.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="927.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (933 samples, 0.41%)</title><rect x="924.9" y="163.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="927.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (593 samples, 0.26%)</title><rect x="924.9" y="147.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="927.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (593 samples, 0.26%)</title><rect x="924.9" y="131.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="927.9" y="142.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (198 samples, 0.09%)</title><rect x="924.9" y="115.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="927.9" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (395 samples, 0.17%)</title><rect x="926.0" y="115.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="929.0" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (395 samples, 0.17%)</title><rect x="926.0" y="99.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="929.0" y="110.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (395 samples, 0.17%)</title><rect x="926.0" y="83.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="929.0" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (395 samples, 0.17%)</title><rect x="926.0" y="67.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="929.0" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (207 samples, 0.09%)</title><rect x="926.0" y="51.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="929.0" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (188 samples, 0.08%)</title><rect x="927.0" y="51.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="930.0" y="62.0"></text>
</g>
<g>
<title>byte[] (188 samples, 0.08%)</title><rect x="927.0" y="35.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="930.0" y="46.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (340 samples, 0.15%)</title><rect x="928.0" y="147.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="931.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (340 samples, 0.15%)</title><rect x="928.0" y="131.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="931.0" y="142.0"></text>
</g>
<g>
<title>byte[] (132 samples, 0.06%)</title><rect x="928.0" y="115.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="931.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (208 samples, 0.09%)</title><rect x="928.7" y="115.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="931.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (208 samples, 0.09%)</title><rect x="928.7" y="99.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="931.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (208 samples, 0.09%)</title><rect x="928.7" y="83.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="931.7" y="94.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (90 samples, 0.04%)</title><rect x="929.8" y="163.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="932.8" y="174.0"></text>
</g>
<g>
<title>java.lang.Long (90 samples, 0.04%)</title><rect x="929.8" y="147.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="932.8" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (98 samples, 0.04%)</title><rect x="930.2" y="163.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="933.2" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (98 samples, 0.04%)</title><rect x="930.2" y="147.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="933.2" y="158.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (98 samples, 0.04%)</title><rect x="930.2" y="131.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="933.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (545 samples, 0.24%)</title><rect x="930.8" y="243.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="933.8" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (545 samples, 0.24%)</title><rect x="930.8" y="227.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="933.8" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (545 samples, 0.24%)</title><rect x="930.8" y="211.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="933.8" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (396 samples, 0.17%)</title><rect x="930.8" y="195.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="933.8" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (396 samples, 0.17%)</title><rect x="930.8" y="179.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.8" y="190.0"></text>
</g>
<g>
<title>byte[] (376 samples, 0.17%)</title><rect x="930.8" y="163.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="933.8" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (149 samples, 0.07%)</title><rect x="932.8" y="195.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="935.8" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (149 samples, 0.07%)</title><rect x="932.8" y="179.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="935.8" y="190.0"></text>
</g>
<g>
<title>[worker-25 tid=29159] (6,520 samples, 2.87%)</title><rect x="933.6" y="339.0" width="33.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="936.6" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (6,520 samples, 2.87%)</title><rect x="933.6" y="323.0" width="33.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="936.6" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,520 samples, 2.87%)</title><rect x="933.6" y="307.0" width="33.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="936.6" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,520 samples, 2.87%)</title><rect x="933.6" y="291.0" width="33.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="936.6" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (82 samples, 0.04%)</title><rect x="933.6" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="936.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (82 samples, 0.04%)</title><rect x="933.6" y="259.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="936.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (81 samples, 0.04%)</title><rect x="933.6" y="243.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="936.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (81 samples, 0.04%)</title><rect x="933.6" y="227.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="936.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (81 samples, 0.04%)</title><rect x="933.6" y="211.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="936.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (6,438 samples, 2.83%)</title><rect x="934.0" y="275.0" width="33.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="937.0" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (6,438 samples, 2.83%)</title><rect x="934.0" y="259.0" width="33.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="937.0" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (5,888 samples, 2.59%)</title><rect x="934.0" y="243.0" width="30.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="937.0" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (5,888 samples, 2.59%)</title><rect x="934.0" y="227.0" width="30.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="937.0" y="238.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (172 samples, 0.08%)</title><rect x="934.0" y="211.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="937.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$MetaRequest.&lt;init&gt; (275 samples, 0.12%)</title><rect x="934.9" y="211.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="937.9" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (275 samples, 0.12%)</title><rect x="934.9" y="195.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="937.9" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (206 samples, 0.09%)</title><rect x="934.9" y="179.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="937.9" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (69 samples, 0.03%)</title><rect x="936.0" y="179.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="939.0" y="190.0"></text>
</g>
<g>
<title>byte[] (69 samples, 0.03%)</title><rect x="936.0" y="163.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="939.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (5,441 samples, 2.40%)</title><rect x="936.3" y="211.0" width="28.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="939.3" y="222.0">ru..</text>
</g>
<g>
<title>java/lang/String.getBytes (257 samples, 0.11%)</title><rect x="936.3" y="195.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="939.3" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (257 samples, 0.11%)</title><rect x="936.3" y="179.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="939.3" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (257 samples, 0.11%)</title><rect x="936.3" y="163.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="939.3" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (257 samples, 0.11%)</title><rect x="936.3" y="147.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="939.3" y="158.0"></text>
</g>
<g>
<title>byte[] (257 samples, 0.11%)</title><rect x="936.3" y="131.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="939.3" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (388 samples, 0.17%)</title><rect x="937.7" y="195.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="940.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (388 samples, 0.17%)</title><rect x="937.7" y="179.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="940.7" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (388 samples, 0.17%)</title><rect x="937.7" y="163.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="940.7" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (125 samples, 0.06%)</title><rect x="939.7" y="195.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="942.7" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (397 samples, 0.17%)</title><rect x="940.3" y="195.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="943.3" y="206.0"></text>
</g>
<g>
<title>byte[] (172 samples, 0.08%)</title><rect x="940.3" y="179.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="943.3" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (124 samples, 0.05%)</title><rect x="941.2" y="179.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="944.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String (101 samples, 0.04%)</title><rect x="941.9" y="179.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="944.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (454 samples, 0.20%)</title><rect x="942.4" y="195.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="945.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (454 samples, 0.20%)</title><rect x="942.4" y="179.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="945.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (451 samples, 0.20%)</title><rect x="942.4" y="163.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="945.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (106 samples, 0.05%)</title><rect x="942.4" y="147.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="945.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (106 samples, 0.05%)</title><rect x="942.4" y="131.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="945.4" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (65 samples, 0.03%)</title><rect x="942.6" y="115.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="945.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (110 samples, 0.05%)</title><rect x="943.0" y="147.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="946.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (110 samples, 0.05%)</title><rect x="943.0" y="131.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="946.0" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (110 samples, 0.05%)</title><rect x="943.0" y="115.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="946.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.tombstone (92 samples, 0.04%)</title><rect x="943.5" y="147.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="946.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (92 samples, 0.04%)</title><rect x="943.5" y="131.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="946.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (143 samples, 0.06%)</title><rect x="944.0" y="147.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.0" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (143 samples, 0.06%)</title><rect x="944.0" y="131.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="947.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (1,781 samples, 0.78%)</title><rect x="944.8" y="195.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="947.8" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (98 samples, 0.04%)</title><rect x="944.8" y="179.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="947.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (192 samples, 0.08%)</title><rect x="945.3" y="179.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="948.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (192 samples, 0.08%)</title><rect x="945.3" y="163.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="948.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.get$Lambda (192 samples, 0.08%)</title><rect x="945.3" y="147.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="948.3" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$68 (192 samples, 0.08%)</title><rect x="945.3" y="131.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="948.3" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (261 samples, 0.11%)</title><rect x="946.3" y="179.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="949.3" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (261 samples, 0.11%)</title><rect x="946.3" y="163.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="949.3" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (261 samples, 0.11%)</title><rect x="946.3" y="147.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="949.3" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (261 samples, 0.11%)</title><rect x="946.3" y="131.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="949.3" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (261 samples, 0.11%)</title><rect x="946.3" y="115.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="949.3" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (260 samples, 0.11%)</title><rect x="946.3" y="99.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="949.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (953 samples, 0.42%)</title><rect x="947.6" y="179.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="950.6" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ExecutorCompletionService$QueueingFuture (327 samples, 0.14%)</title><rect x="947.6" y="163.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="950.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.&lt;init&gt; (167 samples, 0.07%)</title><rect x="949.3" y="163.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="952.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (167 samples, 0.07%)</title><rect x="949.3" y="147.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="952.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (167 samples, 0.07%)</title><rect x="949.3" y="131.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="952.3" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (167 samples, 0.07%)</title><rect x="949.3" y="115.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="952.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.newTaskFor (245 samples, 0.11%)</title><rect x="950.2" y="163.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="953.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (245 samples, 0.11%)</title><rect x="950.2" y="147.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="953.2" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (245 samples, 0.11%)</title><rect x="950.2" y="131.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="953.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (214 samples, 0.09%)</title><rect x="951.5" y="163.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="954.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (214 samples, 0.09%)</title><rect x="951.5" y="147.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.5" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (213 samples, 0.09%)</title><rect x="951.5" y="131.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="954.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (277 samples, 0.12%)</title><rect x="952.6" y="179.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="955.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (277 samples, 0.12%)</title><rect x="952.6" y="163.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="955.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (276 samples, 0.12%)</title><rect x="952.6" y="147.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="955.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (276 samples, 0.12%)</title><rect x="952.6" y="131.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="955.6" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (276 samples, 0.12%)</title><rect x="952.6" y="115.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="955.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (2,039 samples, 0.90%)</title><rect x="954.0" y="195.0" width="10.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="957.0" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (99 samples, 0.04%)</title><rect x="954.0" y="179.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="957.0" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (381 samples, 0.17%)</title><rect x="954.5" y="179.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="957.5" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (97 samples, 0.04%)</title><rect x="954.5" y="163.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="957.5" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (284 samples, 0.13%)</title><rect x="955.0" y="163.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="958.0" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (163 samples, 0.07%)</title><rect x="955.0" y="147.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="958.0" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (163 samples, 0.07%)</title><rect x="955.0" y="131.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="958.0" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (121 samples, 0.05%)</title><rect x="955.9" y="147.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="958.9" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (121 samples, 0.05%)</title><rect x="955.9" y="131.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="958.9" y="142.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (63 samples, 0.03%)</title><rect x="956.5" y="179.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="959.5" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (63 samples, 0.03%)</title><rect x="956.5" y="163.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="959.5" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (214 samples, 0.09%)</title><rect x="956.8" y="179.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="959.8" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (214 samples, 0.09%)</title><rect x="956.8" y="163.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="959.8" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (214 samples, 0.09%)</title><rect x="956.8" y="147.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="959.8" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (214 samples, 0.09%)</title><rect x="956.8" y="131.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="959.8" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (214 samples, 0.09%)</title><rect x="956.8" y="115.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="959.8" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (212 samples, 0.09%)</title><rect x="956.8" y="99.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="959.8" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (205 samples, 0.09%)</title><rect x="958.0" y="179.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="961.0" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (205 samples, 0.09%)</title><rect x="958.0" y="163.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="961.0" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (205 samples, 0.09%)</title><rect x="958.0" y="147.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="961.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (1,073 samples, 0.47%)</title><rect x="959.0" y="179.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="962.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (901 samples, 0.40%)</title><rect x="959.0" y="163.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="962.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (568 samples, 0.25%)</title><rect x="959.0" y="147.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="962.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (568 samples, 0.25%)</title><rect x="959.0" y="131.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="962.0" y="142.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (218 samples, 0.10%)</title><rect x="959.0" y="115.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="962.0" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (350 samples, 0.15%)</title><rect x="960.2" y="115.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="963.2" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (350 samples, 0.15%)</title><rect x="960.2" y="99.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="963.2" y="110.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (350 samples, 0.15%)</title><rect x="960.2" y="83.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="963.2" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (350 samples, 0.15%)</title><rect x="960.2" y="67.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="963.2" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (174 samples, 0.08%)</title><rect x="960.2" y="51.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="963.2" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (176 samples, 0.08%)</title><rect x="961.1" y="51.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="964.1" y="62.0"></text>
</g>
<g>
<title>byte[] (176 samples, 0.08%)</title><rect x="961.1" y="35.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="964.1" y="46.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (333 samples, 0.15%)</title><rect x="962.0" y="147.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="965.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (333 samples, 0.15%)</title><rect x="962.0" y="131.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="965.0" y="142.0"></text>
</g>
<g>
<title>byte[] (121 samples, 0.05%)</title><rect x="962.0" y="115.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="965.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (212 samples, 0.09%)</title><rect x="962.6" y="115.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="965.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (212 samples, 0.09%)</title><rect x="962.6" y="99.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="965.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (212 samples, 0.09%)</title><rect x="962.6" y="83.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="965.6" y="94.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (70 samples, 0.03%)</title><rect x="963.7" y="163.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="966.7" y="174.0"></text>
</g>
<g>
<title>java.lang.Long (70 samples, 0.03%)</title><rect x="963.7" y="147.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="966.7" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (101 samples, 0.04%)</title><rect x="964.1" y="163.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="967.1" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (101 samples, 0.04%)</title><rect x="964.1" y="147.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.1" y="158.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (101 samples, 0.04%)</title><rect x="964.1" y="131.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="967.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (550 samples, 0.24%)</title><rect x="964.6" y="243.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="967.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (550 samples, 0.24%)</title><rect x="964.6" y="227.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="967.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (550 samples, 0.24%)</title><rect x="964.6" y="211.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (371 samples, 0.16%)</title><rect x="964.6" y="195.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (371 samples, 0.16%)</title><rect x="964.6" y="179.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="967.6" y="190.0"></text>
</g>
<g>
<title>byte[] (359 samples, 0.16%)</title><rect x="964.6" y="163.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="967.6" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (179 samples, 0.08%)</title><rect x="966.5" y="195.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="969.5" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (179 samples, 0.08%)</title><rect x="966.5" y="179.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="969.5" y="190.0"></text>
</g>
<g>
<title>[worker-26 tid=29166] (6,734 samples, 2.96%)</title><rect x="967.5" y="339.0" width="35.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="970.5" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (6,734 samples, 2.96%)</title><rect x="967.5" y="323.0" width="35.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="970.5" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,734 samples, 2.96%)</title><rect x="967.5" y="307.0" width="35.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="970.5" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,734 samples, 2.96%)</title><rect x="967.5" y="291.0" width="35.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="970.5" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (83 samples, 0.04%)</title><rect x="967.5" y="275.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="970.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (83 samples, 0.04%)</title><rect x="967.5" y="259.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="970.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (83 samples, 0.04%)</title><rect x="967.5" y="243.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="970.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (83 samples, 0.04%)</title><rect x="967.5" y="227.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="970.5" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (83 samples, 0.04%)</title><rect x="967.5" y="211.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="970.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (6,651 samples, 2.93%)</title><rect x="967.9" y="275.0" width="34.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="970.9" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (6,651 samples, 2.93%)</title><rect x="967.9" y="259.0" width="34.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="970.9" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (6,107 samples, 2.69%)</title><rect x="967.9" y="243.0" width="31.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.9" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (6,107 samples, 2.69%)</title><rect x="967.9" y="227.0" width="31.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="970.9" y="238.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (185 samples, 0.08%)</title><rect x="967.9" y="211.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="970.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$MetaRequest.&lt;init&gt; (238 samples, 0.10%)</title><rect x="968.9" y="211.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="971.9" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (238 samples, 0.10%)</title><rect x="968.9" y="195.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="971.9" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (187 samples, 0.08%)</title><rect x="968.9" y="179.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="971.9" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (51 samples, 0.02%)</title><rect x="969.8" y="179.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="972.8" y="190.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.02%)</title><rect x="969.8" y="163.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="972.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (5,684 samples, 2.50%)</title><rect x="970.1" y="211.0" width="29.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="973.1" y="222.0">ru..</text>
</g>
<g>
<title>java/lang/String.getBytes (257 samples, 0.11%)</title><rect x="970.1" y="195.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="973.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (257 samples, 0.11%)</title><rect x="970.1" y="179.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="973.1" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (257 samples, 0.11%)</title><rect x="970.1" y="163.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="973.1" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (257 samples, 0.11%)</title><rect x="970.1" y="147.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="973.1" y="158.0"></text>
</g>
<g>
<title>byte[] (257 samples, 0.11%)</title><rect x="970.1" y="131.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="973.1" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (401 samples, 0.18%)</title><rect x="971.4" y="195.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="974.4" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (401 samples, 0.18%)</title><rect x="971.4" y="179.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="974.4" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (401 samples, 0.18%)</title><rect x="971.4" y="163.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="974.4" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (136 samples, 0.06%)</title><rect x="973.5" y="195.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="976.5" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (380 samples, 0.17%)</title><rect x="974.2" y="195.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="977.2" y="206.0"></text>
</g>
<g>
<title>byte[] (145 samples, 0.06%)</title><rect x="974.2" y="179.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="977.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (130 samples, 0.06%)</title><rect x="975.0" y="179.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="978.0" y="190.0"></text>
</g>
<g>
<title>java.lang.String (105 samples, 0.05%)</title><rect x="975.7" y="179.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="978.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (477 samples, 0.21%)</title><rect x="976.2" y="195.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="979.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (477 samples, 0.21%)</title><rect x="976.2" y="179.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="979.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (477 samples, 0.21%)</title><rect x="976.2" y="163.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="979.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (101 samples, 0.04%)</title><rect x="976.2" y="147.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="979.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (101 samples, 0.04%)</title><rect x="976.2" y="131.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="979.2" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (68 samples, 0.03%)</title><rect x="976.4" y="115.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="979.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (150 samples, 0.07%)</title><rect x="976.7" y="147.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="979.7" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (150 samples, 0.07%)</title><rect x="976.7" y="131.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="979.7" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (150 samples, 0.07%)</title><rect x="976.7" y="115.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="979.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.tombstone (96 samples, 0.04%)</title><rect x="977.5" y="147.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="980.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (96 samples, 0.04%)</title><rect x="977.5" y="131.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="980.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (130 samples, 0.06%)</title><rect x="978.0" y="147.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.0" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (130 samples, 0.06%)</title><rect x="978.0" y="131.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="981.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (1,910 samples, 0.84%)</title><rect x="978.7" y="195.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="981.7" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (111 samples, 0.05%)</title><rect x="978.7" y="179.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="981.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (196 samples, 0.09%)</title><rect x="979.3" y="179.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="982.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (196 samples, 0.09%)</title><rect x="979.3" y="163.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="982.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.get$Lambda (196 samples, 0.09%)</title><rect x="979.3" y="147.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="982.3" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$68 (196 samples, 0.09%)</title><rect x="979.3" y="131.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="982.3" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (287 samples, 0.13%)</title><rect x="980.3" y="179.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="983.3" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (287 samples, 0.13%)</title><rect x="980.3" y="163.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="983.3" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (287 samples, 0.13%)</title><rect x="980.3" y="147.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="983.3" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (287 samples, 0.13%)</title><rect x="980.3" y="131.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="983.3" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (287 samples, 0.13%)</title><rect x="980.3" y="115.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="983.3" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (285 samples, 0.13%)</title><rect x="980.3" y="99.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="983.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (1,004 samples, 0.44%)</title><rect x="981.8" y="179.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="984.8" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ExecutorCompletionService$QueueingFuture (348 samples, 0.15%)</title><rect x="981.8" y="163.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="984.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.&lt;init&gt; (230 samples, 0.10%)</title><rect x="983.6" y="163.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="986.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (230 samples, 0.10%)</title><rect x="983.6" y="147.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="986.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (230 samples, 0.10%)</title><rect x="983.6" y="131.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="986.6" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (230 samples, 0.10%)</title><rect x="983.6" y="115.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="986.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.newTaskFor (259 samples, 0.11%)</title><rect x="984.8" y="163.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="987.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (259 samples, 0.11%)</title><rect x="984.8" y="147.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="987.8" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (259 samples, 0.11%)</title><rect x="984.8" y="131.0" width="1.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="987.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (167 samples, 0.07%)</title><rect x="986.1" y="163.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="989.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (167 samples, 0.07%)</title><rect x="986.1" y="147.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="989.1" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (167 samples, 0.07%)</title><rect x="986.1" y="131.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="989.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (308 samples, 0.14%)</title><rect x="987.0" y="179.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="990.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (308 samples, 0.14%)</title><rect x="987.0" y="163.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="990.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (304 samples, 0.13%)</title><rect x="987.0" y="147.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="990.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (304 samples, 0.13%)</title><rect x="987.0" y="131.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="990.0" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (304 samples, 0.13%)</title><rect x="987.0" y="115.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="990.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (2,123 samples, 0.93%)</title><rect x="988.6" y="195.0" width="11.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="991.6" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (110 samples, 0.05%)</title><rect x="988.6" y="179.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="991.6" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (411 samples, 0.18%)</title><rect x="989.2" y="179.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="992.2" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (102 samples, 0.04%)</title><rect x="989.2" y="163.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="992.2" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (309 samples, 0.14%)</title><rect x="989.7" y="163.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="992.7" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (156 samples, 0.07%)</title><rect x="989.7" y="147.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="992.7" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (156 samples, 0.07%)</title><rect x="989.7" y="131.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="992.7" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (153 samples, 0.07%)</title><rect x="990.5" y="147.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="993.5" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (153 samples, 0.07%)</title><rect x="990.5" y="131.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="993.5" y="142.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (79 samples, 0.03%)</title><rect x="991.3" y="179.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="994.3" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (79 samples, 0.03%)</title><rect x="991.3" y="163.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="994.3" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (242 samples, 0.11%)</title><rect x="991.7" y="179.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="994.7" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (242 samples, 0.11%)</title><rect x="991.7" y="163.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="994.7" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (242 samples, 0.11%)</title><rect x="991.7" y="147.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="994.7" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (242 samples, 0.11%)</title><rect x="991.7" y="131.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="994.7" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (242 samples, 0.11%)</title><rect x="991.7" y="115.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="994.7" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (235 samples, 0.10%)</title><rect x="991.7" y="99.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="994.7" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (205 samples, 0.09%)</title><rect x="993.0" y="179.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="996.0" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (205 samples, 0.09%)</title><rect x="993.0" y="163.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="996.0" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (205 samples, 0.09%)</title><rect x="993.0" y="147.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="996.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (1,066 samples, 0.47%)</title><rect x="994.1" y="179.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="997.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (881 samples, 0.39%)</title><rect x="994.1" y="163.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="997.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (543 samples, 0.24%)</title><rect x="994.1" y="147.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="997.1" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (543 samples, 0.24%)</title><rect x="994.1" y="131.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="997.1" y="142.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (194 samples, 0.09%)</title><rect x="994.1" y="115.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="997.1" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (349 samples, 0.15%)</title><rect x="995.1" y="115.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="998.1" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (349 samples, 0.15%)</title><rect x="995.1" y="99.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="998.1" y="110.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (349 samples, 0.15%)</title><rect x="995.1" y="83.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="998.1" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (349 samples, 0.15%)</title><rect x="995.1" y="67.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="998.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (180 samples, 0.08%)</title><rect x="995.1" y="51.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="998.1" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (169 samples, 0.07%)</title><rect x="996.0" y="51.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="999.0" y="62.0"></text>
</g>
<g>
<title>byte[] (169 samples, 0.07%)</title><rect x="996.0" y="35.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="999.0" y="46.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (338 samples, 0.15%)</title><rect x="996.9" y="147.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="999.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (338 samples, 0.15%)</title><rect x="996.9" y="131.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="999.9" y="142.0"></text>
</g>
<g>
<title>byte[] (138 samples, 0.06%)</title><rect x="996.9" y="115.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="999.9" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (200 samples, 0.09%)</title><rect x="997.6" y="115.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1000.6" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (200 samples, 0.09%)</title><rect x="997.6" y="99.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1000.6" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (200 samples, 0.09%)</title><rect x="997.6" y="83.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1000.6" y="94.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (96 samples, 0.04%)</title><rect x="998.7" y="163.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1001.7" y="174.0"></text>
</g>
<g>
<title>java.lang.Long (96 samples, 0.04%)</title><rect x="998.7" y="147.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1001.7" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (84 samples, 0.04%)</title><rect x="999.2" y="163.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1002.2" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (84 samples, 0.04%)</title><rect x="999.2" y="147.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1002.2" y="158.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (84 samples, 0.04%)</title><rect x="999.2" y="131.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1002.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (544 samples, 0.24%)</title><rect x="999.6" y="243.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1002.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (544 samples, 0.24%)</title><rect x="999.6" y="227.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1002.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (544 samples, 0.24%)</title><rect x="999.6" y="211.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1002.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (371 samples, 0.16%)</title><rect x="999.6" y="195.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1002.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (371 samples, 0.16%)</title><rect x="999.6" y="179.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1002.6" y="190.0"></text>
</g>
<g>
<title>byte[] (359 samples, 0.16%)</title><rect x="999.6" y="163.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1002.6" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (173 samples, 0.08%)</title><rect x="1001.6" y="195.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1004.6" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (173 samples, 0.08%)</title><rect x="1001.6" y="179.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1004.6" y="190.0"></text>
</g>
<g>
<title>[worker-27 tid=29278] (6,176 samples, 2.72%)</title><rect x="1002.5" y="339.0" width="32.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1005.5" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (6,176 samples, 2.72%)</title><rect x="1002.5" y="323.0" width="32.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.5" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,176 samples, 2.72%)</title><rect x="1002.5" y="307.0" width="32.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1005.5" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,176 samples, 2.72%)</title><rect x="1002.5" y="291.0" width="32.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1005.5" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (81 samples, 0.04%)</title><rect x="1002.5" y="275.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1005.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (81 samples, 0.04%)</title><rect x="1002.5" y="259.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1005.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (80 samples, 0.04%)</title><rect x="1002.5" y="243.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1005.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (80 samples, 0.04%)</title><rect x="1002.5" y="227.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1005.5" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (80 samples, 0.04%)</title><rect x="1002.5" y="211.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1005.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (6,095 samples, 2.68%)</title><rect x="1002.9" y="275.0" width="31.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1005.9" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (6,095 samples, 2.68%)</title><rect x="1002.9" y="259.0" width="31.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1005.9" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (5,624 samples, 2.48%)</title><rect x="1002.9" y="243.0" width="29.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.9" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (5,624 samples, 2.48%)</title><rect x="1002.9" y="227.0" width="29.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1005.9" y="238.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (151 samples, 0.07%)</title><rect x="1002.9" y="211.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1005.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$MetaRequest.&lt;init&gt; (237 samples, 0.10%)</title><rect x="1003.7" y="211.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1006.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (237 samples, 0.10%)</title><rect x="1003.7" y="195.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1006.7" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (177 samples, 0.08%)</title><rect x="1003.7" y="179.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1006.7" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (60 samples, 0.03%)</title><rect x="1004.6" y="179.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1007.6" y="190.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.03%)</title><rect x="1004.6" y="163.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1007.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (5,236 samples, 2.31%)</title><rect x="1004.9" y="211.0" width="27.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1007.9" y="222.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (222 samples, 0.10%)</title><rect x="1004.9" y="195.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1007.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (222 samples, 0.10%)</title><rect x="1004.9" y="179.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1007.9" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (222 samples, 0.10%)</title><rect x="1004.9" y="163.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1007.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (222 samples, 0.10%)</title><rect x="1004.9" y="147.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1007.9" y="158.0"></text>
</g>
<g>
<title>byte[] (222 samples, 0.10%)</title><rect x="1004.9" y="131.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1007.9" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (348 samples, 0.15%)</title><rect x="1006.0" y="195.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1009.0" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (348 samples, 0.15%)</title><rect x="1006.0" y="179.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1009.0" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (348 samples, 0.15%)</title><rect x="1006.0" y="163.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1009.0" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (114 samples, 0.05%)</title><rect x="1007.9" y="195.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1010.9" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (366 samples, 0.16%)</title><rect x="1008.4" y="195.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1011.4" y="206.0"></text>
</g>
<g>
<title>byte[] (137 samples, 0.06%)</title><rect x="1008.4" y="179.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1011.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (135 samples, 0.06%)</title><rect x="1009.2" y="179.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1012.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String (94 samples, 0.04%)</title><rect x="1009.9" y="179.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1012.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (462 samples, 0.20%)</title><rect x="1010.3" y="195.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1013.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (462 samples, 0.20%)</title><rect x="1010.3" y="179.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1013.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (461 samples, 0.20%)</title><rect x="1010.4" y="163.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1013.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (103 samples, 0.05%)</title><rect x="1010.4" y="147.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1013.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (103 samples, 0.05%)</title><rect x="1010.4" y="131.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1013.4" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (72 samples, 0.03%)</title><rect x="1010.5" y="115.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1013.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (132 samples, 0.06%)</title><rect x="1010.9" y="147.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1013.9" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (132 samples, 0.06%)</title><rect x="1010.9" y="131.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1013.9" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (132 samples, 0.06%)</title><rect x="1010.9" y="115.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1013.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.tombstone (95 samples, 0.04%)</title><rect x="1011.6" y="147.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1014.6" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (95 samples, 0.04%)</title><rect x="1011.6" y="131.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1014.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (131 samples, 0.06%)</title><rect x="1012.1" y="147.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1015.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (131 samples, 0.06%)</title><rect x="1012.1" y="131.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1015.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (1,761 samples, 0.78%)</title><rect x="1012.7" y="195.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1015.7" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (92 samples, 0.04%)</title><rect x="1012.7" y="179.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1015.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (189 samples, 0.08%)</title><rect x="1013.2" y="179.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1016.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (189 samples, 0.08%)</title><rect x="1013.2" y="163.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1016.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.get$Lambda (189 samples, 0.08%)</title><rect x="1013.2" y="147.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1016.2" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$68 (189 samples, 0.08%)</title><rect x="1013.2" y="131.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1016.2" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (276 samples, 0.12%)</title><rect x="1014.2" y="179.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1017.2" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (276 samples, 0.12%)</title><rect x="1014.2" y="163.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1017.2" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (276 samples, 0.12%)</title><rect x="1014.2" y="147.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1017.2" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (276 samples, 0.12%)</title><rect x="1014.2" y="131.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1017.2" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (276 samples, 0.12%)</title><rect x="1014.2" y="115.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1017.2" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (276 samples, 0.12%)</title><rect x="1014.2" y="99.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1017.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (929 samples, 0.41%)</title><rect x="1015.6" y="179.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1018.6" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ExecutorCompletionService$QueueingFuture (317 samples, 0.14%)</title><rect x="1015.6" y="163.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1018.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.&lt;init&gt; (189 samples, 0.08%)</title><rect x="1017.3" y="163.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1020.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (189 samples, 0.08%)</title><rect x="1017.3" y="147.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1020.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (189 samples, 0.08%)</title><rect x="1017.3" y="131.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1020.3" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (189 samples, 0.08%)</title><rect x="1017.3" y="115.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1020.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.newTaskFor (233 samples, 0.10%)</title><rect x="1018.3" y="163.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1021.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (233 samples, 0.10%)</title><rect x="1018.3" y="147.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1021.3" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (233 samples, 0.10%)</title><rect x="1018.3" y="131.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1021.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (190 samples, 0.08%)</title><rect x="1019.5" y="163.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1022.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (190 samples, 0.08%)</title><rect x="1019.5" y="147.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1022.5" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (187 samples, 0.08%)</title><rect x="1019.5" y="131.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1022.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (275 samples, 0.12%)</title><rect x="1020.5" y="179.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1023.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (275 samples, 0.12%)</title><rect x="1020.5" y="163.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1023.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (271 samples, 0.12%)</title><rect x="1020.5" y="147.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1023.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (271 samples, 0.12%)</title><rect x="1020.5" y="131.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1023.5" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (271 samples, 0.12%)</title><rect x="1020.5" y="115.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1023.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (1,963 samples, 0.86%)</title><rect x="1021.9" y="195.0" width="10.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1024.9" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (86 samples, 0.04%)</title><rect x="1021.9" y="179.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1024.9" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (377 samples, 0.17%)</title><rect x="1022.3" y="179.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1025.3" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (106 samples, 0.05%)</title><rect x="1022.3" y="163.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1025.3" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (271 samples, 0.12%)</title><rect x="1022.9" y="163.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1025.9" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (153 samples, 0.07%)</title><rect x="1022.9" y="147.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1025.9" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (153 samples, 0.07%)</title><rect x="1022.9" y="131.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1025.9" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (118 samples, 0.05%)</title><rect x="1023.7" y="147.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1026.7" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (118 samples, 0.05%)</title><rect x="1023.7" y="131.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1026.7" y="142.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (75 samples, 0.03%)</title><rect x="1024.3" y="179.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1027.3" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (75 samples, 0.03%)</title><rect x="1024.3" y="163.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1027.3" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (208 samples, 0.09%)</title><rect x="1024.7" y="179.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1027.7" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (208 samples, 0.09%)</title><rect x="1024.7" y="163.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1027.7" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (208 samples, 0.09%)</title><rect x="1024.7" y="147.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1027.7" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (208 samples, 0.09%)</title><rect x="1024.7" y="131.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1027.7" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (208 samples, 0.09%)</title><rect x="1024.7" y="115.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1027.7" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (202 samples, 0.09%)</title><rect x="1024.7" y="99.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1027.7" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (186 samples, 0.08%)</title><rect x="1025.8" y="179.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1028.8" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (186 samples, 0.08%)</title><rect x="1025.8" y="163.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1028.8" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (186 samples, 0.08%)</title><rect x="1025.8" y="147.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1028.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (1,022 samples, 0.45%)</title><rect x="1026.8" y="179.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1029.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (858 samples, 0.38%)</title><rect x="1026.8" y="163.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1029.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (557 samples, 0.25%)</title><rect x="1026.8" y="147.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1029.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (557 samples, 0.25%)</title><rect x="1026.8" y="131.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1029.8" y="142.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (193 samples, 0.08%)</title><rect x="1026.8" y="115.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1029.8" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (364 samples, 0.16%)</title><rect x="1027.8" y="115.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1030.8" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (364 samples, 0.16%)</title><rect x="1027.8" y="99.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1030.8" y="110.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (364 samples, 0.16%)</title><rect x="1027.8" y="83.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1030.8" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (364 samples, 0.16%)</title><rect x="1027.8" y="67.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1030.8" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (199 samples, 0.09%)</title><rect x="1027.8" y="51.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1030.8" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (165 samples, 0.07%)</title><rect x="1028.8" y="51.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1031.8" y="62.0"></text>
</g>
<g>
<title>byte[] (165 samples, 0.07%)</title><rect x="1028.8" y="35.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1031.8" y="46.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (301 samples, 0.13%)</title><rect x="1029.7" y="147.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1032.7" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (301 samples, 0.13%)</title><rect x="1029.7" y="131.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1032.7" y="142.0"></text>
</g>
<g>
<title>byte[] (118 samples, 0.05%)</title><rect x="1029.7" y="115.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1032.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (183 samples, 0.08%)</title><rect x="1030.3" y="115.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1033.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (183 samples, 0.08%)</title><rect x="1030.3" y="99.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1033.3" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (183 samples, 0.08%)</title><rect x="1030.3" y="83.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1033.3" y="94.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (73 samples, 0.03%)</title><rect x="1031.2" y="163.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1034.2" y="174.0"></text>
</g>
<g>
<title>java.lang.Long (73 samples, 0.03%)</title><rect x="1031.2" y="147.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1034.2" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (88 samples, 0.04%)</title><rect x="1031.6" y="163.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1034.6" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (88 samples, 0.04%)</title><rect x="1031.6" y="147.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1034.6" y="158.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (88 samples, 0.04%)</title><rect x="1031.6" y="131.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1034.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (471 samples, 0.21%)</title><rect x="1032.1" y="243.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1035.1" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (471 samples, 0.21%)</title><rect x="1032.1" y="227.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1035.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (471 samples, 0.21%)</title><rect x="1032.1" y="211.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1035.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (308 samples, 0.14%)</title><rect x="1032.1" y="195.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1035.1" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (308 samples, 0.14%)</title><rect x="1032.1" y="179.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1035.1" y="190.0"></text>
</g>
<g>
<title>byte[] (301 samples, 0.13%)</title><rect x="1032.1" y="163.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1035.1" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (163 samples, 0.07%)</title><rect x="1033.7" y="195.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1036.7" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (163 samples, 0.07%)</title><rect x="1033.7" y="179.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1036.7" y="190.0"></text>
</g>
<g>
<title>[worker-28 tid=29282] (3,382 samples, 1.49%)</title><rect x="1034.5" y="339.0" width="17.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1037.5" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,382 samples, 1.49%)</title><rect x="1034.5" y="323.0" width="17.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1037.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,382 samples, 1.49%)</title><rect x="1034.5" y="307.0" width="17.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1037.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,382 samples, 1.49%)</title><rect x="1034.5" y="291.0" width="17.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1037.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (3,335 samples, 1.47%)</title><rect x="1034.8" y="275.0" width="17.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1037.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (3,335 samples, 1.47%)</title><rect x="1034.8" y="259.0" width="17.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1037.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (3,040 samples, 1.34%)</title><rect x="1034.8" y="243.0" width="15.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1037.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (3,040 samples, 1.34%)</title><rect x="1034.8" y="227.0" width="15.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1037.8" y="238.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (108 samples, 0.05%)</title><rect x="1034.8" y="211.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1037.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$MetaRequest.&lt;init&gt; (117 samples, 0.05%)</title><rect x="1035.3" y="211.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1038.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (117 samples, 0.05%)</title><rect x="1035.3" y="195.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1038.3" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (83 samples, 0.04%)</title><rect x="1035.3" y="179.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1038.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (2,815 samples, 1.24%)</title><rect x="1036.0" y="211.0" width="14.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1039.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (145 samples, 0.06%)</title><rect x="1036.0" y="195.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1039.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (145 samples, 0.06%)</title><rect x="1036.0" y="179.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1039.0" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (145 samples, 0.06%)</title><rect x="1036.0" y="163.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1039.0" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (145 samples, 0.06%)</title><rect x="1036.0" y="147.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1039.0" y="158.0"></text>
</g>
<g>
<title>byte[] (145 samples, 0.06%)</title><rect x="1036.0" y="131.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1039.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (205 samples, 0.09%)</title><rect x="1036.7" y="195.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1039.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (205 samples, 0.09%)</title><rect x="1036.7" y="179.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1039.7" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (205 samples, 0.09%)</title><rect x="1036.7" y="163.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1039.7" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (78 samples, 0.03%)</title><rect x="1037.8" y="195.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1040.8" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (186 samples, 0.08%)</title><rect x="1038.2" y="195.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1041.2" y="206.0"></text>
</g>
<g>
<title>byte[] (98 samples, 0.04%)</title><rect x="1038.2" y="179.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1041.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (56 samples, 0.02%)</title><rect x="1038.7" y="179.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1041.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (240 samples, 0.11%)</title><rect x="1039.1" y="195.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1042.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (240 samples, 0.11%)</title><rect x="1039.1" y="179.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1042.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (238 samples, 0.10%)</title><rect x="1039.2" y="163.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1042.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (80 samples, 0.04%)</title><rect x="1039.4" y="147.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1042.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (80 samples, 0.04%)</title><rect x="1039.4" y="131.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1042.4" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (80 samples, 0.04%)</title><rect x="1039.4" y="115.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1042.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.tombstone (57 samples, 0.03%)</title><rect x="1039.8" y="147.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1042.8" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (57 samples, 0.03%)</title><rect x="1039.8" y="131.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1042.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (54 samples, 0.02%)</title><rect x="1040.1" y="147.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1043.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (54 samples, 0.02%)</title><rect x="1040.1" y="131.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1043.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (892 samples, 0.39%)</title><rect x="1040.4" y="195.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1043.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (100 samples, 0.04%)</title><rect x="1040.6" y="179.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1043.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (100 samples, 0.04%)</title><rect x="1040.6" y="163.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1043.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.get$Lambda (100 samples, 0.04%)</title><rect x="1040.6" y="147.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1043.6" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$68 (100 samples, 0.04%)</title><rect x="1040.6" y="131.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1043.6" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (122 samples, 0.05%)</title><rect x="1041.2" y="179.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1044.2" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (122 samples, 0.05%)</title><rect x="1041.2" y="163.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1044.2" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (122 samples, 0.05%)</title><rect x="1041.2" y="147.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1044.2" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (122 samples, 0.05%)</title><rect x="1041.2" y="131.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1044.2" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (122 samples, 0.05%)</title><rect x="1041.2" y="115.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1044.2" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (120 samples, 0.05%)</title><rect x="1041.2" y="99.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1044.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (490 samples, 0.22%)</title><rect x="1041.8" y="179.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1044.8" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ExecutorCompletionService$QueueingFuture (139 samples, 0.06%)</title><rect x="1041.8" y="163.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1044.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.&lt;init&gt; (110 samples, 0.05%)</title><rect x="1042.5" y="163.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1045.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (110 samples, 0.05%)</title><rect x="1042.5" y="147.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1045.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (110 samples, 0.05%)</title><rect x="1042.5" y="131.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1045.5" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (110 samples, 0.05%)</title><rect x="1042.5" y="115.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1045.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.newTaskFor (155 samples, 0.07%)</title><rect x="1043.1" y="163.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1046.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (155 samples, 0.07%)</title><rect x="1043.1" y="147.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.1" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (155 samples, 0.07%)</title><rect x="1043.1" y="131.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1046.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (86 samples, 0.04%)</title><rect x="1043.9" y="163.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1046.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (86 samples, 0.04%)</title><rect x="1043.9" y="147.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1046.9" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (86 samples, 0.04%)</title><rect x="1043.9" y="131.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1046.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (133 samples, 0.06%)</title><rect x="1044.3" y="179.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1047.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (133 samples, 0.06%)</title><rect x="1044.3" y="163.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1047.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (133 samples, 0.06%)</title><rect x="1044.3" y="147.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1047.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (133 samples, 0.06%)</title><rect x="1044.3" y="131.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1047.3" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (133 samples, 0.06%)</title><rect x="1044.3" y="115.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1047.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (1,069 samples, 0.47%)</title><rect x="1045.0" y="195.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.0" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (198 samples, 0.09%)</title><rect x="1045.3" y="179.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.3" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (151 samples, 0.07%)</title><rect x="1045.5" y="163.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.5" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (79 samples, 0.03%)</title><rect x="1045.5" y="147.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1048.5" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (79 samples, 0.03%)</title><rect x="1045.5" y="131.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1048.5" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (72 samples, 0.03%)</title><rect x="1045.9" y="147.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1048.9" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (72 samples, 0.03%)</title><rect x="1045.9" y="131.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1048.9" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (129 samples, 0.06%)</title><rect x="1046.5" y="179.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1049.5" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (129 samples, 0.06%)</title><rect x="1046.5" y="163.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1049.5" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (129 samples, 0.06%)</title><rect x="1046.5" y="147.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1049.5" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (129 samples, 0.06%)</title><rect x="1046.5" y="131.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1049.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (129 samples, 0.06%)</title><rect x="1046.5" y="115.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1049.5" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (124 samples, 0.05%)</title><rect x="1046.5" y="99.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1049.5" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (117 samples, 0.05%)</title><rect x="1047.2" y="179.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1050.2" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (117 samples, 0.05%)</title><rect x="1047.2" y="163.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1050.2" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (117 samples, 0.05%)</title><rect x="1047.2" y="147.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1050.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (543 samples, 0.24%)</title><rect x="1047.8" y="179.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (441 samples, 0.19%)</title><rect x="1047.8" y="163.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1050.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (277 samples, 0.12%)</title><rect x="1047.8" y="147.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1050.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (277 samples, 0.12%)</title><rect x="1047.8" y="131.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1050.8" y="142.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (111 samples, 0.05%)</title><rect x="1047.8" y="115.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1050.8" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (166 samples, 0.07%)</title><rect x="1048.3" y="115.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1051.3" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (166 samples, 0.07%)</title><rect x="1048.3" y="99.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1051.3" y="110.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (166 samples, 0.07%)</title><rect x="1048.3" y="83.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1051.3" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (166 samples, 0.07%)</title><rect x="1048.3" y="67.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1051.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (101 samples, 0.04%)</title><rect x="1048.3" y="51.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1051.3" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (65 samples, 0.03%)</title><rect x="1048.9" y="51.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1051.9" y="62.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.03%)</title><rect x="1048.9" y="35.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1051.9" y="46.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (164 samples, 0.07%)</title><rect x="1049.2" y="147.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1052.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (164 samples, 0.07%)</title><rect x="1049.2" y="131.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1052.2" y="142.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.03%)</title><rect x="1049.2" y="115.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1052.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (99 samples, 0.04%)</title><rect x="1049.5" y="115.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1052.5" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (99 samples, 0.04%)</title><rect x="1049.5" y="99.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1052.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (99 samples, 0.04%)</title><rect x="1049.5" y="83.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1052.5" y="94.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (55 samples, 0.02%)</title><rect x="1050.3" y="163.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1053.3" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (55 samples, 0.02%)</title><rect x="1050.3" y="147.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1053.3" y="158.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (55 samples, 0.02%)</title><rect x="1050.3" y="131.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1053.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (295 samples, 0.13%)</title><rect x="1050.6" y="243.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1053.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (295 samples, 0.13%)</title><rect x="1050.6" y="227.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1053.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (295 samples, 0.13%)</title><rect x="1050.6" y="211.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1053.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (198 samples, 0.09%)</title><rect x="1050.6" y="195.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1053.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (198 samples, 0.09%)</title><rect x="1050.6" y="179.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1053.6" y="190.0"></text>
</g>
<g>
<title>byte[] (181 samples, 0.08%)</title><rect x="1050.6" y="163.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1053.6" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (97 samples, 0.04%)</title><rect x="1051.6" y="195.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1054.6" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (97 samples, 0.04%)</title><rect x="1051.6" y="179.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1054.6" y="190.0"></text>
</g>
<g>
<title>[worker-29 tid=29285] (97 samples, 0.04%)</title><rect x="1052.1" y="339.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1055.1" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (97 samples, 0.04%)</title><rect x="1052.1" y="323.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1055.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (97 samples, 0.04%)</title><rect x="1052.1" y="307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1055.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (97 samples, 0.04%)</title><rect x="1052.1" y="291.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1055.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (94 samples, 0.04%)</title><rect x="1052.1" y="275.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1055.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (94 samples, 0.04%)</title><rect x="1052.1" y="259.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1055.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (89 samples, 0.04%)</title><rect x="1052.1" y="243.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1055.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (89 samples, 0.04%)</title><rect x="1052.1" y="227.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1055.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (85 samples, 0.04%)</title><rect x="1052.2" y="211.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1055.2" y="222.0"></text>
</g>
<g>
<title>[worker-3 tid=25866] (6,596 samples, 2.90%)</title><rect x="1052.6" y="339.0" width="34.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1055.6" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (6,596 samples, 2.90%)</title><rect x="1052.6" y="323.0" width="34.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1055.6" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,596 samples, 2.90%)</title><rect x="1052.6" y="307.0" width="34.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1055.6" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,596 samples, 2.90%)</title><rect x="1052.6" y="291.0" width="34.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1055.6" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (440 samples, 0.19%)</title><rect x="1052.6" y="275.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1055.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (440 samples, 0.19%)</title><rect x="1052.6" y="259.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1055.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (439 samples, 0.19%)</title><rect x="1052.6" y="243.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1055.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (439 samples, 0.19%)</title><rect x="1052.6" y="227.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1055.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (439 samples, 0.19%)</title><rect x="1052.6" y="211.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1055.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (6,156 samples, 2.71%)</title><rect x="1054.9" y="275.0" width="32.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1057.9" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (6,156 samples, 2.71%)</title><rect x="1054.9" y="259.0" width="32.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1057.9" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (4,705 samples, 2.07%)</title><rect x="1054.9" y="243.0" width="24.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1057.9" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (4,705 samples, 2.07%)</title><rect x="1054.9" y="227.0" width="24.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1057.9" y="238.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (496 samples, 0.22%)</title><rect x="1054.9" y="211.0" width="2.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1057.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$MetaRequest.&lt;init&gt; (709 samples, 0.31%)</title><rect x="1057.5" y="211.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1060.5" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (709 samples, 0.31%)</title><rect x="1057.5" y="195.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1060.5" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (558 samples, 0.25%)</title><rect x="1057.5" y="179.0" width="2.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1060.5" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (151 samples, 0.07%)</title><rect x="1060.4" y="179.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1063.4" y="190.0"></text>
</g>
<g>
<title>byte[] (151 samples, 0.07%)</title><rect x="1060.4" y="163.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1063.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (3,500 samples, 1.54%)</title><rect x="1061.2" y="211.0" width="18.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (340 samples, 0.15%)</title><rect x="1061.2" y="195.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (340 samples, 0.15%)</title><rect x="1061.2" y="179.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1064.2" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (340 samples, 0.15%)</title><rect x="1061.2" y="163.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.2" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (340 samples, 0.15%)</title><rect x="1061.2" y="147.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1064.2" y="158.0"></text>
</g>
<g>
<title>byte[] (340 samples, 0.15%)</title><rect x="1061.2" y="131.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1064.2" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (545 samples, 0.24%)</title><rect x="1062.9" y="195.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1065.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (545 samples, 0.24%)</title><rect x="1062.9" y="179.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1065.9" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (545 samples, 0.24%)</title><rect x="1062.9" y="163.0" width="2.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1065.9" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (243 samples, 0.11%)</title><rect x="1065.8" y="195.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1068.8" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,083 samples, 0.48%)</title><rect x="1067.0" y="195.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1070.0" y="206.0"></text>
</g>
<g>
<title>byte[] (450 samples, 0.20%)</title><rect x="1067.0" y="179.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1070.0" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (374 samples, 0.16%)</title><rect x="1069.4" y="179.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1072.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String (259 samples, 0.11%)</title><rect x="1071.3" y="179.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1074.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (1,289 samples, 0.57%)</title><rect x="1072.7" y="195.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (1,289 samples, 0.57%)</title><rect x="1072.7" y="179.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1075.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (1,288 samples, 0.57%)</title><rect x="1072.7" y="163.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (261 samples, 0.11%)</title><rect x="1072.7" y="147.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1075.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (261 samples, 0.11%)</title><rect x="1072.7" y="131.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1075.7" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (86 samples, 0.04%)</title><rect x="1072.7" y="115.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1075.7" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (175 samples, 0.08%)</title><rect x="1073.1" y="115.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1076.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (356 samples, 0.16%)</title><rect x="1074.0" y="147.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1077.0" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (356 samples, 0.16%)</title><rect x="1074.0" y="131.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1077.0" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (356 samples, 0.16%)</title><rect x="1074.0" y="115.0" width="1.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1077.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.tombstone (289 samples, 0.13%)</title><rect x="1075.9" y="147.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1078.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (289 samples, 0.13%)</title><rect x="1075.9" y="131.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1078.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (382 samples, 0.17%)</title><rect x="1077.4" y="147.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1080.4" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (382 samples, 0.17%)</title><rect x="1077.4" y="131.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1080.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (1,451 samples, 0.64%)</title><rect x="1079.4" y="243.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1082.4" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,451 samples, 0.64%)</title><rect x="1079.4" y="227.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1082.4" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,451 samples, 0.64%)</title><rect x="1079.4" y="211.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1082.4" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,005 samples, 0.44%)</title><rect x="1079.4" y="195.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1082.4" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,005 samples, 0.44%)</title><rect x="1079.4" y="179.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1082.4" y="190.0"></text>
</g>
<g>
<title>byte[] (975 samples, 0.43%)</title><rect x="1079.4" y="163.0" width="5.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1082.4" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (446 samples, 0.20%)</title><rect x="1084.6" y="195.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1087.6" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (446 samples, 0.20%)</title><rect x="1084.6" y="179.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1087.6" y="190.0"></text>
</g>
<g>
<title>[worker-3 tid=25867] (6,621 samples, 2.92%)</title><rect x="1086.9" y="339.0" width="34.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1089.9" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (6,621 samples, 2.92%)</title><rect x="1086.9" y="323.0" width="34.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1089.9" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,621 samples, 2.92%)</title><rect x="1086.9" y="307.0" width="34.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1089.9" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,621 samples, 2.92%)</title><rect x="1086.9" y="291.0" width="34.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1089.9" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (417 samples, 0.18%)</title><rect x="1086.9" y="275.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1089.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (417 samples, 0.18%)</title><rect x="1086.9" y="259.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1089.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (417 samples, 0.18%)</title><rect x="1086.9" y="243.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1089.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (417 samples, 0.18%)</title><rect x="1086.9" y="227.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1089.9" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (417 samples, 0.18%)</title><rect x="1086.9" y="211.0" width="2.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1089.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (6,204 samples, 2.73%)</title><rect x="1089.1" y="275.0" width="32.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1092.1" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (6,204 samples, 2.73%)</title><rect x="1089.1" y="259.0" width="32.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1092.1" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (4,730 samples, 2.08%)</title><rect x="1089.1" y="243.0" width="24.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1092.1" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (4,730 samples, 2.08%)</title><rect x="1089.1" y="227.0" width="24.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1092.1" y="238.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (505 samples, 0.22%)</title><rect x="1089.1" y="211.0" width="2.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1092.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$MetaRequest.&lt;init&gt; (738 samples, 0.32%)</title><rect x="1091.7" y="211.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1094.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (738 samples, 0.32%)</title><rect x="1091.7" y="195.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1094.7" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (537 samples, 0.24%)</title><rect x="1091.7" y="179.0" width="2.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1094.7" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (201 samples, 0.09%)</title><rect x="1094.5" y="179.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.5" y="190.0"></text>
</g>
<g>
<title>byte[] (201 samples, 0.09%)</title><rect x="1094.5" y="163.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1097.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (3,487 samples, 1.54%)</title><rect x="1095.5" y="211.0" width="18.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1098.5" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (321 samples, 0.14%)</title><rect x="1095.5" y="195.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1098.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (321 samples, 0.14%)</title><rect x="1095.5" y="179.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1098.5" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (321 samples, 0.14%)</title><rect x="1095.5" y="163.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1098.5" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (321 samples, 0.14%)</title><rect x="1095.5" y="147.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1098.5" y="158.0"></text>
</g>
<g>
<title>byte[] (321 samples, 0.14%)</title><rect x="1095.5" y="131.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1098.5" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (552 samples, 0.24%)</title><rect x="1097.2" y="195.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1100.2" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (552 samples, 0.24%)</title><rect x="1097.2" y="179.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1100.2" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (552 samples, 0.24%)</title><rect x="1097.2" y="163.0" width="2.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1100.2" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (266 samples, 0.12%)</title><rect x="1100.0" y="195.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1103.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,133 samples, 0.50%)</title><rect x="1101.4" y="195.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1104.4" y="206.0"></text>
</g>
<g>
<title>byte[] (473 samples, 0.21%)</title><rect x="1101.4" y="179.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1104.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (391 samples, 0.17%)</title><rect x="1103.9" y="179.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1106.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String (269 samples, 0.12%)</title><rect x="1105.9" y="179.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1108.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (1,215 samples, 0.53%)</title><rect x="1107.3" y="195.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1110.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (1,215 samples, 0.53%)</title><rect x="1107.3" y="179.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1110.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (1,214 samples, 0.53%)</title><rect x="1107.3" y="163.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1110.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (253 samples, 0.11%)</title><rect x="1107.3" y="147.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1110.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (253 samples, 0.11%)</title><rect x="1107.3" y="131.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1110.3" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (80 samples, 0.04%)</title><rect x="1107.3" y="115.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1110.3" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (173 samples, 0.08%)</title><rect x="1107.7" y="115.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1110.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (351 samples, 0.15%)</title><rect x="1108.6" y="147.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1111.6" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (351 samples, 0.15%)</title><rect x="1108.6" y="131.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1111.6" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (351 samples, 0.15%)</title><rect x="1108.6" y="115.0" width="1.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1111.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.tombstone (249 samples, 0.11%)</title><rect x="1110.5" y="147.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1113.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (249 samples, 0.11%)</title><rect x="1110.5" y="131.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1113.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (361 samples, 0.16%)</title><rect x="1111.8" y="147.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1114.8" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (361 samples, 0.16%)</title><rect x="1111.8" y="131.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1114.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (1,474 samples, 0.65%)</title><rect x="1113.6" y="243.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1116.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,474 samples, 0.65%)</title><rect x="1113.6" y="227.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1116.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,474 samples, 0.65%)</title><rect x="1113.6" y="211.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1116.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,019 samples, 0.45%)</title><rect x="1113.6" y="195.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1116.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,019 samples, 0.45%)</title><rect x="1113.6" y="179.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1116.6" y="190.0"></text>
</g>
<g>
<title>byte[] (989 samples, 0.44%)</title><rect x="1113.6" y="163.0" width="5.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1116.6" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (455 samples, 0.20%)</title><rect x="1118.9" y="195.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1121.9" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (455 samples, 0.20%)</title><rect x="1118.9" y="179.0" width="2.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1121.9" y="190.0"></text>
</g>
<g>
<title>[worker-4 tid=25865] (6,562 samples, 2.89%)</title><rect x="1121.3" y="339.0" width="34.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1124.3" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (6,562 samples, 2.89%)</title><rect x="1121.3" y="323.0" width="34.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1124.3" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,562 samples, 2.89%)</title><rect x="1121.3" y="307.0" width="34.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1124.3" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,562 samples, 2.89%)</title><rect x="1121.3" y="291.0" width="34.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.3" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (401 samples, 0.18%)</title><rect x="1121.3" y="275.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1124.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (401 samples, 0.18%)</title><rect x="1121.3" y="259.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1124.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (397 samples, 0.17%)</title><rect x="1121.3" y="243.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1124.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (397 samples, 0.17%)</title><rect x="1121.3" y="227.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.3" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (397 samples, 0.17%)</title><rect x="1121.3" y="211.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1124.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (6,161 samples, 2.71%)</title><rect x="1123.4" y="275.0" width="32.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1126.4" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (6,161 samples, 2.71%)</title><rect x="1123.4" y="259.0" width="32.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.4" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (4,638 samples, 2.04%)</title><rect x="1123.4" y="243.0" width="24.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1126.4" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (4,638 samples, 2.04%)</title><rect x="1123.4" y="227.0" width="24.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1126.4" y="238.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (504 samples, 0.22%)</title><rect x="1123.4" y="211.0" width="2.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1126.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$MetaRequest.&lt;init&gt; (715 samples, 0.31%)</title><rect x="1126.0" y="211.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1129.0" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (715 samples, 0.31%)</title><rect x="1126.0" y="195.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1129.0" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (544 samples, 0.24%)</title><rect x="1126.0" y="179.0" width="2.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1129.0" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (171 samples, 0.08%)</title><rect x="1128.8" y="179.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1131.8" y="190.0"></text>
</g>
<g>
<title>byte[] (171 samples, 0.08%)</title><rect x="1128.8" y="163.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1131.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (3,419 samples, 1.51%)</title><rect x="1129.7" y="211.0" width="17.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1132.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (303 samples, 0.13%)</title><rect x="1129.7" y="195.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1132.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (303 samples, 0.13%)</title><rect x="1129.7" y="179.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1132.7" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (303 samples, 0.13%)</title><rect x="1129.7" y="163.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1132.7" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (303 samples, 0.13%)</title><rect x="1129.7" y="147.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1132.7" y="158.0"></text>
</g>
<g>
<title>byte[] (303 samples, 0.13%)</title><rect x="1129.7" y="131.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1132.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (492 samples, 0.22%)</title><rect x="1131.3" y="195.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.3" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (492 samples, 0.22%)</title><rect x="1131.3" y="179.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1134.3" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (492 samples, 0.22%)</title><rect x="1131.3" y="163.0" width="2.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1134.3" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (293 samples, 0.13%)</title><rect x="1133.8" y="195.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1136.8" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,073 samples, 0.47%)</title><rect x="1135.4" y="195.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1138.4" y="206.0"></text>
</g>
<g>
<title>byte[] (434 samples, 0.19%)</title><rect x="1135.4" y="179.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1138.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (381 samples, 0.17%)</title><rect x="1137.6" y="179.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1140.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String (258 samples, 0.11%)</title><rect x="1139.6" y="179.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1142.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (1,258 samples, 0.55%)</title><rect x="1140.9" y="195.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1143.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (1,258 samples, 0.55%)</title><rect x="1140.9" y="179.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1143.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (1,257 samples, 0.55%)</title><rect x="1140.9" y="163.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1143.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (282 samples, 0.12%)</title><rect x="1140.9" y="147.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1143.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (282 samples, 0.12%)</title><rect x="1140.9" y="131.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1143.9" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (91 samples, 0.04%)</title><rect x="1140.9" y="115.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1143.9" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (191 samples, 0.08%)</title><rect x="1141.4" y="115.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1144.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (358 samples, 0.16%)</title><rect x="1142.4" y="147.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1145.4" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (358 samples, 0.16%)</title><rect x="1142.4" y="131.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1145.4" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (358 samples, 0.16%)</title><rect x="1142.4" y="115.0" width="1.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1145.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.tombstone (275 samples, 0.12%)</title><rect x="1144.3" y="147.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1147.3" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (275 samples, 0.12%)</title><rect x="1144.3" y="131.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1147.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (342 samples, 0.15%)</title><rect x="1145.7" y="147.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1148.7" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (342 samples, 0.15%)</title><rect x="1145.7" y="131.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1148.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (1,523 samples, 0.67%)</title><rect x="1147.5" y="243.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1150.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,523 samples, 0.67%)</title><rect x="1147.5" y="227.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1150.5" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,523 samples, 0.67%)</title><rect x="1147.5" y="211.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1150.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,050 samples, 0.46%)</title><rect x="1147.5" y="195.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1150.5" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,050 samples, 0.46%)</title><rect x="1147.5" y="179.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1150.5" y="190.0"></text>
</g>
<g>
<title>byte[] (1,019 samples, 0.45%)</title><rect x="1147.5" y="163.0" width="5.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1150.5" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (473 samples, 0.21%)</title><rect x="1152.9" y="195.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.9" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (473 samples, 0.21%)</title><rect x="1152.9" y="179.0" width="2.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1155.9" y="190.0"></text>
</g>
<g>
<title>[worker-4 tid=25869] (6,663 samples, 2.93%)</title><rect x="1155.4" y="339.0" width="34.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1158.4" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (6,663 samples, 2.93%)</title><rect x="1155.4" y="323.0" width="34.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1158.4" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (6,663 samples, 2.93%)</title><rect x="1155.4" y="307.0" width="34.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1158.4" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (6,663 samples, 2.93%)</title><rect x="1155.4" y="291.0" width="34.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1158.4" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (411 samples, 0.18%)</title><rect x="1155.4" y="275.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1158.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (411 samples, 0.18%)</title><rect x="1155.4" y="259.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1158.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (409 samples, 0.18%)</title><rect x="1155.4" y="243.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1158.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (409 samples, 0.18%)</title><rect x="1155.4" y="227.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1158.4" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (409 samples, 0.18%)</title><rect x="1155.4" y="211.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1158.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (6,252 samples, 2.75%)</title><rect x="1157.5" y="275.0" width="32.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1160.5" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (6,252 samples, 2.75%)</title><rect x="1157.5" y="259.0" width="32.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1160.5" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$82/1922012894.act (4,776 samples, 2.10%)</title><rect x="1157.5" y="243.0" width="24.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1160.5" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (4,776 samples, 2.10%)</title><rect x="1157.5" y="227.0" width="24.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1160.5" y="238.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (488 samples, 0.21%)</title><rect x="1157.5" y="211.0" width="2.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1160.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$MetaRequest.&lt;init&gt; (696 samples, 0.31%)</title><rect x="1160.1" y="211.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1163.1" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (696 samples, 0.31%)</title><rect x="1160.1" y="195.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1163.1" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (517 samples, 0.23%)</title><rect x="1160.1" y="179.0" width="2.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1163.1" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (179 samples, 0.08%)</title><rect x="1162.7" y="179.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1165.7" y="190.0"></text>
</g>
<g>
<title>byte[] (179 samples, 0.08%)</title><rect x="1162.7" y="163.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1165.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.delete (3,592 samples, 1.58%)</title><rect x="1163.7" y="211.0" width="18.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1166.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (309 samples, 0.14%)</title><rect x="1163.7" y="195.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1166.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (309 samples, 0.14%)</title><rect x="1163.7" y="179.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1166.7" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (309 samples, 0.14%)</title><rect x="1163.7" y="163.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1166.7" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (309 samples, 0.14%)</title><rect x="1163.7" y="147.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1166.7" y="158.0"></text>
</g>
<g>
<title>byte[] (309 samples, 0.14%)</title><rect x="1163.7" y="131.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1166.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (532 samples, 0.23%)</title><rect x="1165.3" y="195.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1168.3" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (532 samples, 0.23%)</title><rect x="1165.3" y="179.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1168.3" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (532 samples, 0.23%)</title><rect x="1165.3" y="163.0" width="2.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1168.3" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (282 samples, 0.12%)</title><rect x="1168.0" y="195.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1171.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,160 samples, 0.51%)</title><rect x="1169.5" y="195.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1172.5" y="206.0"></text>
</g>
<g>
<title>byte[] (480 samples, 0.21%)</title><rect x="1169.5" y="179.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1172.5" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (402 samples, 0.18%)</title><rect x="1172.0" y="179.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1175.0" y="190.0"></text>
</g>
<g>
<title>java.lang.String (278 samples, 0.12%)</title><rect x="1174.1" y="179.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1177.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (1,309 samples, 0.58%)</title><rect x="1175.5" y="195.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1178.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (1,309 samples, 0.58%)</title><rect x="1175.5" y="179.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1178.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (1,305 samples, 0.57%)</title><rect x="1175.6" y="163.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1178.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (263 samples, 0.12%)</title><rect x="1175.6" y="147.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1178.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (263 samples, 0.12%)</title><rect x="1175.6" y="131.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1178.6" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (90 samples, 0.04%)</title><rect x="1175.6" y="115.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1178.6" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (173 samples, 0.08%)</title><rect x="1176.0" y="115.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1179.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (382 samples, 0.17%)</title><rect x="1176.9" y="147.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1179.9" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (382 samples, 0.17%)</title><rect x="1176.9" y="131.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1179.9" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (382 samples, 0.17%)</title><rect x="1176.9" y="115.0" width="2.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1179.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.tombstone (301 samples, 0.13%)</title><rect x="1178.9" y="147.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1181.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (301 samples, 0.13%)</title><rect x="1178.9" y="131.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1181.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (359 samples, 0.16%)</title><rect x="1180.5" y="147.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1183.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (359 samples, 0.16%)</title><rect x="1180.5" y="131.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1183.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (1,476 samples, 0.65%)</title><rect x="1182.3" y="243.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1185.3" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,476 samples, 0.65%)</title><rect x="1182.3" y="227.0" width="7.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1185.3" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,476 samples, 0.65%)</title><rect x="1182.3" y="211.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1185.3" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,052 samples, 0.46%)</title><rect x="1182.3" y="195.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1185.3" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,052 samples, 0.46%)</title><rect x="1182.3" y="179.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1185.3" y="190.0"></text>
</g>
<g>
<title>byte[] (1,021 samples, 0.45%)</title><rect x="1182.3" y="163.0" width="5.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1185.3" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (424 samples, 0.19%)</title><rect x="1187.8" y="195.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1190.8" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (424 samples, 0.19%)</title><rect x="1187.8" y="179.0" width="2.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1190.8" y="190.0"></text>
</g>
</g>
</svg>
