<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="405"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="405"> </text>
<g id="frames">
<g>
<title>all (40,671 samples, 100.00%)</title><rect x="10.0" y="371.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="382.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=25747] (100 samples, 0.25%)</title><rect x="10.0" y="355.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (100 samples, 0.25%)</title><rect x="10.0" y="339.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (100 samples, 0.25%)</title><rect x="10.0" y="323.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (84 samples, 0.21%)</title><rect x="10.0" y="307.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (84 samples, 0.21%)</title><rect x="10.0" y="291.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (84 samples, 0.21%)</title><rect x="10.0" y="275.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (84 samples, 0.21%)</title><rect x="10.0" y="259.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (84 samples, 0.21%)</title><rect x="10.0" y="243.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (84 samples, 0.21%)</title><rect x="10.0" y="227.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (84 samples, 0.21%)</title><rect x="10.0" y="211.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (84 samples, 0.21%)</title><rect x="10.0" y="195.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (84 samples, 0.21%)</title><rect x="10.0" y="179.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (79 samples, 0.19%)</title><rect x="10.0" y="163.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (79 samples, 0.19%)</title><rect x="10.0" y="147.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (79 samples, 0.19%)</title><rect x="10.0" y="131.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (79 samples, 0.19%)</title><rect x="10.0" y="115.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (79 samples, 0.19%)</title><rect x="10.0" y="99.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (79 samples, 0.19%)</title><rect x="10.0" y="83.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (79 samples, 0.19%)</title><rect x="10.0" y="67.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (79 samples, 0.19%)</title><rect x="10.0" y="51.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="13.0" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (16 samples, 0.04%)</title><rect x="12.4" y="307.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="15.4" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=25757] (166 samples, 0.41%)</title><rect x="12.9" y="355.0" width="4.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="15.9" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (166 samples, 0.41%)</title><rect x="12.9" y="339.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="15.9" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (166 samples, 0.41%)</title><rect x="12.9" y="323.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="15.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (164 samples, 0.40%)</title><rect x="12.9" y="307.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (164 samples, 0.40%)</title><rect x="12.9" y="291.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (164 samples, 0.40%)</title><rect x="12.9" y="275.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.9" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (164 samples, 0.40%)</title><rect x="12.9" y="259.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="15.9" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (164 samples, 0.40%)</title><rect x="12.9" y="243.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (164 samples, 0.40%)</title><rect x="12.9" y="227.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (164 samples, 0.40%)</title><rect x="12.9" y="211.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (164 samples, 0.40%)</title><rect x="12.9" y="195.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (164 samples, 0.40%)</title><rect x="12.9" y="179.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (158 samples, 0.39%)</title><rect x="12.9" y="163.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="15.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (158 samples, 0.39%)</title><rect x="12.9" y="147.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (158 samples, 0.39%)</title><rect x="12.9" y="131.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (158 samples, 0.39%)</title><rect x="12.9" y="115.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="15.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (158 samples, 0.39%)</title><rect x="12.9" y="99.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (158 samples, 0.39%)</title><rect x="12.9" y="83.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="15.9" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (158 samples, 0.39%)</title><rect x="12.9" y="67.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="15.9" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (158 samples, 0.39%)</title><rect x="12.9" y="51.0" width="4.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="15.9" y="62.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=25763] (121 samples, 0.30%)</title><rect x="17.7" y="355.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="20.7" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (121 samples, 0.30%)</title><rect x="17.7" y="339.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.7" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (121 samples, 0.30%)</title><rect x="17.7" y="323.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (121 samples, 0.30%)</title><rect x="17.7" y="307.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="20.7" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (121 samples, 0.30%)</title><rect x="17.7" y="291.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (121 samples, 0.30%)</title><rect x="17.7" y="275.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.7" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (121 samples, 0.30%)</title><rect x="17.7" y="259.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.7" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (121 samples, 0.30%)</title><rect x="17.7" y="243.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (121 samples, 0.30%)</title><rect x="17.7" y="227.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="20.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (121 samples, 0.30%)</title><rect x="17.7" y="211.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (121 samples, 0.30%)</title><rect x="17.7" y="195.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (121 samples, 0.30%)</title><rect x="17.7" y="179.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (101 samples, 0.25%)</title><rect x="17.7" y="163.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (101 samples, 0.25%)</title><rect x="17.7" y="147.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (101 samples, 0.25%)</title><rect x="17.7" y="131.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (101 samples, 0.25%)</title><rect x="17.7" y="115.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (101 samples, 0.25%)</title><rect x="17.7" y="99.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (101 samples, 0.25%)</title><rect x="17.7" y="83.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.7" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (101 samples, 0.25%)</title><rect x="17.7" y="67.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.7" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (101 samples, 0.25%)</title><rect x="17.7" y="51.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="20.7" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (20 samples, 0.05%)</title><rect x="20.6" y="163.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (20 samples, 0.05%)</title><rect x="20.6" y="147.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (20 samples, 0.05%)</title><rect x="20.6" y="131.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="23.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (20 samples, 0.05%)</title><rect x="20.6" y="115.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (20 samples, 0.05%)</title><rect x="20.6" y="99.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (20 samples, 0.05%)</title><rect x="20.6" y="83.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.6" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (20 samples, 0.05%)</title><rect x="20.6" y="67.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="23.6" y="78.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25748] (96 samples, 0.24%)</title><rect x="21.2" y="355.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="24.2" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (96 samples, 0.24%)</title><rect x="21.2" y="339.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.2" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (96 samples, 0.24%)</title><rect x="21.2" y="323.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="24.2" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (75 samples, 0.18%)</title><rect x="21.2" y="307.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.2" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (75 samples, 0.18%)</title><rect x="21.2" y="291.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.2" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (75 samples, 0.18%)</title><rect x="21.2" y="275.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (75 samples, 0.18%)</title><rect x="21.2" y="259.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.2" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (75 samples, 0.18%)</title><rect x="21.2" y="243.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (75 samples, 0.18%)</title><rect x="21.2" y="227.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (75 samples, 0.18%)</title><rect x="21.2" y="211.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="24.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (75 samples, 0.18%)</title><rect x="21.2" y="195.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (75 samples, 0.18%)</title><rect x="21.2" y="179.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (63 samples, 0.15%)</title><rect x="21.2" y="163.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (63 samples, 0.15%)</title><rect x="21.2" y="147.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (63 samples, 0.15%)</title><rect x="21.2" y="131.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (63 samples, 0.15%)</title><rect x="21.2" y="115.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (63 samples, 0.15%)</title><rect x="21.2" y="99.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (63 samples, 0.15%)</title><rect x="21.2" y="83.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.2" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (63 samples, 0.15%)</title><rect x="21.2" y="67.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.2" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (63 samples, 0.15%)</title><rect x="21.2" y="51.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="24.2" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (12 samples, 0.03%)</title><rect x="23.1" y="163.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="26.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (12 samples, 0.03%)</title><rect x="23.1" y="147.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (12 samples, 0.03%)</title><rect x="23.1" y="131.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="26.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (12 samples, 0.03%)</title><rect x="23.1" y="115.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.03%)</title><rect x="23.1" y="99.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="26.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.03%)</title><rect x="23.1" y="83.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.1" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (12 samples, 0.03%)</title><rect x="23.1" y="67.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="26.1" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (21 samples, 0.05%)</title><rect x="23.4" y="307.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="26.4" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25758] (267 samples, 0.66%)</title><rect x="24.0" y="355.0" width="7.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="27.0" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (267 samples, 0.66%)</title><rect x="24.0" y="339.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.0" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (267 samples, 0.66%)</title><rect x="24.0" y="323.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="27.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (262 samples, 0.64%)</title><rect x="24.0" y="307.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="27.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (262 samples, 0.64%)</title><rect x="24.0" y="291.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="27.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (262 samples, 0.64%)</title><rect x="24.0" y="275.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (262 samples, 0.64%)</title><rect x="24.0" y="259.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.0" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (262 samples, 0.64%)</title><rect x="24.0" y="243.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (262 samples, 0.64%)</title><rect x="24.0" y="227.0" width="7.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (262 samples, 0.64%)</title><rect x="24.0" y="211.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (262 samples, 0.64%)</title><rect x="24.0" y="195.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="27.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (262 samples, 0.64%)</title><rect x="24.0" y="179.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="27.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (252 samples, 0.62%)</title><rect x="24.0" y="163.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (252 samples, 0.62%)</title><rect x="24.0" y="147.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (252 samples, 0.62%)</title><rect x="24.0" y="131.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (252 samples, 0.62%)</title><rect x="24.0" y="115.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (252 samples, 0.62%)</title><rect x="24.0" y="99.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="27.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (252 samples, 0.62%)</title><rect x="24.0" y="83.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (252 samples, 0.62%)</title><rect x="24.0" y="67.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.0" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (252 samples, 0.62%)</title><rect x="24.0" y="51.0" width="7.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="27.0" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (10 samples, 0.02%)</title><rect x="31.3" y="163.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (10 samples, 0.02%)</title><rect x="31.3" y="147.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (10 samples, 0.02%)</title><rect x="31.3" y="131.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (10 samples, 0.02%)</title><rect x="31.3" y="115.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="34.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.02%)</title><rect x="31.3" y="99.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="34.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.02%)</title><rect x="31.3" y="83.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="34.3" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (10 samples, 0.02%)</title><rect x="31.3" y="67.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="34.3" y="78.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25764] (124 samples, 0.30%)</title><rect x="31.8" y="355.0" width="3.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="34.8" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (124 samples, 0.30%)</title><rect x="31.8" y="339.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.8" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (124 samples, 0.30%)</title><rect x="31.8" y="323.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (121 samples, 0.30%)</title><rect x="31.8" y="307.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.8" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (121 samples, 0.30%)</title><rect x="31.8" y="291.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.8" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (121 samples, 0.30%)</title><rect x="31.8" y="275.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (121 samples, 0.30%)</title><rect x="31.8" y="259.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="34.8" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (121 samples, 0.30%)</title><rect x="31.8" y="243.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (121 samples, 0.30%)</title><rect x="31.8" y="227.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (121 samples, 0.30%)</title><rect x="31.8" y="211.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (121 samples, 0.30%)</title><rect x="31.8" y="195.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (121 samples, 0.30%)</title><rect x="31.8" y="179.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (95 samples, 0.23%)</title><rect x="31.8" y="163.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (95 samples, 0.23%)</title><rect x="31.8" y="147.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (95 samples, 0.23%)</title><rect x="31.8" y="131.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (95 samples, 0.23%)</title><rect x="31.8" y="115.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="34.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (95 samples, 0.23%)</title><rect x="31.8" y="99.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (95 samples, 0.23%)</title><rect x="31.8" y="83.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="34.8" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (95 samples, 0.23%)</title><rect x="31.8" y="67.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.8" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (95 samples, 0.23%)</title><rect x="31.8" y="51.0" width="2.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="34.8" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (26 samples, 0.06%)</title><rect x="34.5" y="163.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (26 samples, 0.06%)</title><rect x="34.5" y="147.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="37.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (26 samples, 0.06%)</title><rect x="34.5" y="131.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="37.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (26 samples, 0.06%)</title><rect x="34.5" y="115.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="37.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (26 samples, 0.06%)</title><rect x="34.5" y="99.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="37.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (26 samples, 0.06%)</title><rect x="34.5" y="83.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.5" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (26 samples, 0.06%)</title><rect x="34.5" y="67.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="37.5" y="78.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25749] (172 samples, 0.42%)</title><rect x="35.4" y="355.0" width="4.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="38.4" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (172 samples, 0.42%)</title><rect x="35.4" y="339.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="38.4" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (172 samples, 0.42%)</title><rect x="35.4" y="323.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="38.4" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (146 samples, 0.36%)</title><rect x="35.4" y="307.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="38.4" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (146 samples, 0.36%)</title><rect x="35.4" y="291.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="38.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (146 samples, 0.36%)</title><rect x="35.4" y="275.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="38.4" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (146 samples, 0.36%)</title><rect x="35.4" y="259.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="38.4" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (146 samples, 0.36%)</title><rect x="35.4" y="243.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (146 samples, 0.36%)</title><rect x="35.4" y="227.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="38.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (146 samples, 0.36%)</title><rect x="35.4" y="211.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="38.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (146 samples, 0.36%)</title><rect x="35.4" y="195.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="38.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (146 samples, 0.36%)</title><rect x="35.4" y="179.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (137 samples, 0.34%)</title><rect x="35.4" y="163.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="38.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (137 samples, 0.34%)</title><rect x="35.4" y="147.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="38.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (137 samples, 0.34%)</title><rect x="35.4" y="131.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="38.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (137 samples, 0.34%)</title><rect x="35.4" y="115.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="38.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (137 samples, 0.34%)</title><rect x="35.4" y="99.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="38.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (137 samples, 0.34%)</title><rect x="35.4" y="83.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="38.4" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (137 samples, 0.34%)</title><rect x="35.4" y="67.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.4" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (137 samples, 0.34%)</title><rect x="35.4" y="51.0" width="3.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="38.4" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (9 samples, 0.02%)</title><rect x="39.3" y="163.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.02%)</title><rect x="39.3" y="147.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (9 samples, 0.02%)</title><rect x="39.3" y="131.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (9 samples, 0.02%)</title><rect x="39.3" y="115.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.02%)</title><rect x="39.3" y="99.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.02%)</title><rect x="39.3" y="83.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="42.3" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (9 samples, 0.02%)</title><rect x="39.3" y="67.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="42.3" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (26 samples, 0.06%)</title><rect x="39.6" y="307.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="42.6" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25759] (286 samples, 0.70%)</title><rect x="40.3" y="355.0" width="8.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="43.3" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (286 samples, 0.70%)</title><rect x="40.3" y="339.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="43.3" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (286 samples, 0.70%)</title><rect x="40.3" y="323.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.3" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (277 samples, 0.68%)</title><rect x="40.3" y="307.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="43.3" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (277 samples, 0.68%)</title><rect x="40.3" y="291.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="43.3" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (277 samples, 0.68%)</title><rect x="40.3" y="275.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.3" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (277 samples, 0.68%)</title><rect x="40.3" y="259.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="43.3" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (277 samples, 0.68%)</title><rect x="40.3" y="243.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="43.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (277 samples, 0.68%)</title><rect x="40.3" y="227.0" width="8.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (277 samples, 0.68%)</title><rect x="40.3" y="211.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (277 samples, 0.68%)</title><rect x="40.3" y="195.0" width="8.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (277 samples, 0.68%)</title><rect x="40.3" y="179.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="43.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (273 samples, 0.67%)</title><rect x="40.3" y="163.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="43.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (273 samples, 0.67%)</title><rect x="40.3" y="147.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="43.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (273 samples, 0.67%)</title><rect x="40.3" y="131.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="43.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (273 samples, 0.67%)</title><rect x="40.3" y="115.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="43.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (273 samples, 0.67%)</title><rect x="40.3" y="99.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="43.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (273 samples, 0.67%)</title><rect x="40.3" y="83.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="43.3" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (273 samples, 0.67%)</title><rect x="40.3" y="67.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.3" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (273 samples, 0.67%)</title><rect x="40.3" y="51.0" width="8.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="43.3" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (9 samples, 0.02%)</title><rect x="48.4" y="307.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="51.4" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25765] (249 samples, 0.61%)</title><rect x="48.6" y="355.0" width="7.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="51.6" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (249 samples, 0.61%)</title><rect x="48.6" y="339.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="51.6" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (249 samples, 0.61%)</title><rect x="48.6" y="323.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (244 samples, 0.60%)</title><rect x="48.6" y="307.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.6" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (244 samples, 0.60%)</title><rect x="48.6" y="291.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="51.6" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (244 samples, 0.60%)</title><rect x="48.6" y="275.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.6" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (244 samples, 0.60%)</title><rect x="48.6" y="259.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="51.6" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (244 samples, 0.60%)</title><rect x="48.6" y="243.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (244 samples, 0.60%)</title><rect x="48.6" y="227.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (244 samples, 0.60%)</title><rect x="48.6" y="211.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (244 samples, 0.60%)</title><rect x="48.6" y="195.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (244 samples, 0.60%)</title><rect x="48.6" y="179.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (217 samples, 0.53%)</title><rect x="48.6" y="163.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (217 samples, 0.53%)</title><rect x="48.6" y="147.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="51.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (217 samples, 0.53%)</title><rect x="48.6" y="131.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (217 samples, 0.53%)</title><rect x="48.6" y="115.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="51.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (217 samples, 0.53%)</title><rect x="48.6" y="99.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (217 samples, 0.53%)</title><rect x="48.6" y="83.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="51.6" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (217 samples, 0.53%)</title><rect x="48.6" y="67.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="51.6" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (217 samples, 0.53%)</title><rect x="48.6" y="51.0" width="6.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="51.6" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (27 samples, 0.07%)</title><rect x="54.9" y="163.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (27 samples, 0.07%)</title><rect x="54.9" y="147.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (27 samples, 0.07%)</title><rect x="54.9" y="131.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (27 samples, 0.07%)</title><rect x="54.9" y="115.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (27 samples, 0.07%)</title><rect x="54.9" y="99.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (27 samples, 0.07%)</title><rect x="54.9" y="83.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.9" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (27 samples, 0.07%)</title><rect x="54.9" y="67.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="57.9" y="78.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25750] (74 samples, 0.18%)</title><rect x="55.9" y="355.0" width="2.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="58.9" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (74 samples, 0.18%)</title><rect x="55.9" y="339.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="58.9" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (74 samples, 0.18%)</title><rect x="55.9" y="323.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="58.9" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (61 samples, 0.15%)</title><rect x="55.9" y="307.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (61 samples, 0.15%)</title><rect x="55.9" y="291.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="58.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (61 samples, 0.15%)</title><rect x="55.9" y="275.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="58.9" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (61 samples, 0.15%)</title><rect x="55.9" y="259.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="58.9" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (61 samples, 0.15%)</title><rect x="55.9" y="243.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (61 samples, 0.15%)</title><rect x="55.9" y="227.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (61 samples, 0.15%)</title><rect x="55.9" y="211.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (61 samples, 0.15%)</title><rect x="55.9" y="195.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (61 samples, 0.15%)</title><rect x="55.9" y="179.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (57 samples, 0.14%)</title><rect x="55.9" y="163.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="58.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (57 samples, 0.14%)</title><rect x="55.9" y="147.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (57 samples, 0.14%)</title><rect x="55.9" y="131.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (57 samples, 0.14%)</title><rect x="55.9" y="115.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="58.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (57 samples, 0.14%)</title><rect x="55.9" y="99.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="58.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (57 samples, 0.14%)</title><rect x="55.9" y="83.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.9" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (57 samples, 0.14%)</title><rect x="55.9" y="67.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="58.9" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (57 samples, 0.14%)</title><rect x="55.9" y="51.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="58.9" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (13 samples, 0.03%)</title><rect x="57.6" y="307.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="60.6" y="318.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25766] (136 samples, 0.33%)</title><rect x="58.0" y="355.0" width="4.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="61.0" y="366.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (136 samples, 0.33%)</title><rect x="58.0" y="339.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.0" y="350.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (136 samples, 0.33%)</title><rect x="58.0" y="323.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.0" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (131 samples, 0.32%)</title><rect x="58.0" y="307.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.0" y="318.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (131 samples, 0.32%)</title><rect x="58.0" y="291.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.0" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (131 samples, 0.32%)</title><rect x="58.0" y="275.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="61.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (131 samples, 0.32%)</title><rect x="58.0" y="259.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.0" y="270.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (131 samples, 0.32%)</title><rect x="58.0" y="243.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="61.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (131 samples, 0.32%)</title><rect x="58.0" y="227.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (131 samples, 0.32%)</title><rect x="58.0" y="211.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (131 samples, 0.32%)</title><rect x="58.0" y="195.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (131 samples, 0.32%)</title><rect x="58.0" y="179.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (109 samples, 0.27%)</title><rect x="58.0" y="163.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (109 samples, 0.27%)</title><rect x="58.0" y="147.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="61.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (109 samples, 0.27%)</title><rect x="58.0" y="131.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="61.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (109 samples, 0.27%)</title><rect x="58.0" y="115.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (109 samples, 0.27%)</title><rect x="58.0" y="99.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (109 samples, 0.27%)</title><rect x="58.0" y="83.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="61.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (109 samples, 0.27%)</title><rect x="58.0" y="67.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="61.0" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (109 samples, 0.27%)</title><rect x="58.0" y="51.0" width="3.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="61.0" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (22 samples, 0.05%)</title><rect x="61.2" y="163.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="64.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (22 samples, 0.05%)</title><rect x="61.2" y="147.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="64.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (22 samples, 0.05%)</title><rect x="61.2" y="131.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (22 samples, 0.05%)</title><rect x="61.2" y="115.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="64.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (22 samples, 0.05%)</title><rect x="61.2" y="99.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.2" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (22 samples, 0.05%)</title><rect x="61.2" y="83.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.2" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (22 samples, 0.05%)</title><rect x="61.2" y="67.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="64.2" y="78.0"></text>
</g>
<g>
<title>[proxy-worker-0 tid=25855] (3,352 samples, 8.24%)</title><rect x="62.0" y="355.0" width="97.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="65.0" y="366.0">[proxy-work..</text>
</g>
<g>
<title>java/lang/Thread.run (3,352 samples, 8.24%)</title><rect x="62.0" y="339.0" width="97.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="65.0" y="350.0">java/lang/T..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,352 samples, 8.24%)</title><rect x="62.0" y="323.0" width="97.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.0" y="334.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,352 samples, 8.24%)</title><rect x="62.0" y="307.0" width="97.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.0" y="318.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1,792 samples, 4.41%)</title><rect x="62.0" y="291.0" width="52.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.0" y="302.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (431 samples, 1.06%)</title><rect x="62.0" y="275.0" width="12.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="65.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (431 samples, 1.06%)</title><rect x="62.0" y="259.0" width="12.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (431 samples, 1.06%)</title><rect x="62.0" y="243.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (431 samples, 1.06%)</title><rect x="62.0" y="227.0" width="12.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="65.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (431 samples, 1.06%)</title><rect x="62.0" y="211.0" width="12.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.0" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (431 samples, 1.06%)</title><rect x="62.0" y="195.0" width="12.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (431 samples, 1.06%)</title><rect x="62.0" y="179.0" width="12.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.0" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (221 samples, 0.54%)</title><rect x="62.0" y="163.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="65.0" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (221 samples, 0.54%)</title><rect x="62.0" y="147.0" width="6.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="65.0" y="158.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (210 samples, 0.52%)</title><rect x="68.4" y="163.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.4" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (210 samples, 0.52%)</title><rect x="68.4" y="147.0" width="6.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="71.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (1,361 samples, 3.35%)</title><rect x="74.5" y="275.0" width="39.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.5" y="286.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (1,361 samples, 3.35%)</title><rect x="74.5" y="259.0" width="39.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.5" y="270.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (1,361 samples, 3.35%)</title><rect x="74.5" y="243.0" width="39.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="77.5" y="254.0">jav..</text>
</g>
<g>
<title>java/util/AbstractQueue.add (1,361 samples, 3.35%)</title><rect x="74.5" y="227.0" width="39.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.5" y="238.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,361 samples, 3.35%)</title><rect x="74.5" y="211.0" width="39.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.5" y="222.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (800 samples, 1.97%)</title><rect x="74.5" y="195.0" width="23.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="77.5" y="206.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (800 samples, 1.97%)</title><rect x="74.5" y="179.0" width="23.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.5" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (800 samples, 1.97%)</title><rect x="74.5" y="163.0" width="23.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.5" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (800 samples, 1.97%)</title><rect x="74.5" y="147.0" width="23.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.5" y="158.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (800 samples, 1.97%)</title><rect x="74.5" y="131.0" width="23.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="77.5" y="142.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (800 samples, 1.97%)</title><rect x="74.5" y="115.0" width="23.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.5" y="126.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (800 samples, 1.97%)</title><rect x="74.5" y="99.0" width="23.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.5" y="110.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (800 samples, 1.97%)</title><rect x="74.5" y="83.0" width="23.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="77.5" y="94.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (561 samples, 1.38%)</title><rect x="97.7" y="195.0" width="16.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="100.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (561 samples, 1.38%)</title><rect x="97.7" y="179.0" width="16.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (561 samples, 1.38%)</title><rect x="97.7" y="163.0" width="16.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="100.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (561 samples, 1.38%)</title><rect x="97.7" y="147.0" width="16.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="100.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (561 samples, 1.38%)</title><rect x="97.7" y="131.0" width="16.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (561 samples, 1.38%)</title><rect x="97.7" y="115.0" width="16.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="100.7" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (561 samples, 1.38%)</title><rect x="97.7" y="99.0" width="16.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="100.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,560 samples, 3.84%)</title><rect x="114.0" y="291.0" width="45.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="117.0" y="302.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,560 samples, 3.84%)</title><rect x="114.0" y="275.0" width="45.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.0" y="286.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (223 samples, 0.55%)</title><rect x="114.0" y="259.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (223 samples, 0.55%)</title><rect x="114.0" y="243.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (223 samples, 0.55%)</title><rect x="114.0" y="227.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="117.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (223 samples, 0.55%)</title><rect x="114.0" y="211.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (223 samples, 0.55%)</title><rect x="114.0" y="195.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.0" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (223 samples, 0.55%)</title><rect x="114.0" y="179.0" width="6.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="117.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,337 samples, 3.29%)</title><rect x="120.4" y="259.0" width="38.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.4" y="270.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,337 samples, 3.29%)</title><rect x="120.4" y="243.0" width="38.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.4" y="254.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,337 samples, 3.29%)</title><rect x="120.4" y="227.0" width="38.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.4" y="238.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,337 samples, 3.29%)</title><rect x="120.4" y="211.0" width="38.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="123.4" y="222.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,337 samples, 3.29%)</title><rect x="120.4" y="195.0" width="38.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.4" y="206.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,337 samples, 3.29%)</title><rect x="120.4" y="179.0" width="38.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="123.4" y="190.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,337 samples, 3.29%)</title><rect x="120.4" y="163.0" width="38.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="123.4" y="174.0">jav..</text>
</g>
<g>
<title>[proxy-worker-1 tid=25856] (3,441 samples, 8.46%)</title><rect x="159.2" y="355.0" width="99.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="162.2" y="366.0">[proxy-worke..</text>
</g>
<g>
<title>java/lang/Thread.run (3,441 samples, 8.46%)</title><rect x="159.2" y="339.0" width="99.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.2" y="350.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,441 samples, 8.46%)</title><rect x="159.2" y="323.0" width="99.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="162.2" y="334.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,441 samples, 8.46%)</title><rect x="159.2" y="307.0" width="99.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="162.2" y="318.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1,822 samples, 4.48%)</title><rect x="159.2" y="291.0" width="52.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="162.2" y="302.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (458 samples, 1.13%)</title><rect x="159.2" y="275.0" width="13.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="162.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (458 samples, 1.13%)</title><rect x="159.2" y="259.0" width="13.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (458 samples, 1.13%)</title><rect x="159.2" y="243.0" width="13.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="162.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (458 samples, 1.13%)</title><rect x="159.2" y="227.0" width="13.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (458 samples, 1.13%)</title><rect x="159.2" y="211.0" width="13.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="162.2" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (458 samples, 1.13%)</title><rect x="159.2" y="195.0" width="13.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="162.2" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (458 samples, 1.13%)</title><rect x="159.2" y="179.0" width="13.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="162.2" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (240 samples, 0.59%)</title><rect x="159.2" y="163.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.2" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (240 samples, 0.59%)</title><rect x="159.2" y="147.0" width="7.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="162.2" y="158.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (218 samples, 0.54%)</title><rect x="166.2" y="163.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="169.2" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (218 samples, 0.54%)</title><rect x="166.2" y="147.0" width="6.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="169.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (1,364 samples, 3.35%)</title><rect x="172.5" y="275.0" width="39.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="175.5" y="286.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (1,364 samples, 3.35%)</title><rect x="172.5" y="259.0" width="39.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.5" y="270.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (1,364 samples, 3.35%)</title><rect x="172.5" y="243.0" width="39.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="175.5" y="254.0">jav..</text>
</g>
<g>
<title>java/util/AbstractQueue.add (1,364 samples, 3.35%)</title><rect x="172.5" y="227.0" width="39.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.5" y="238.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,364 samples, 3.35%)</title><rect x="172.5" y="211.0" width="39.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="175.5" y="222.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (824 samples, 2.03%)</title><rect x="172.5" y="195.0" width="23.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="175.5" y="206.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (824 samples, 2.03%)</title><rect x="172.5" y="179.0" width="23.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="175.5" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (824 samples, 2.03%)</title><rect x="172.5" y="163.0" width="23.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.5" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (824 samples, 2.03%)</title><rect x="172.5" y="147.0" width="23.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.5" y="158.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (824 samples, 2.03%)</title><rect x="172.5" y="131.0" width="23.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="175.5" y="142.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (824 samples, 2.03%)</title><rect x="172.5" y="115.0" width="23.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="175.5" y="126.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (824 samples, 2.03%)</title><rect x="172.5" y="99.0" width="23.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="175.5" y="110.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (824 samples, 2.03%)</title><rect x="172.5" y="83.0" width="23.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="175.5" y="94.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (540 samples, 1.33%)</title><rect x="196.4" y="195.0" width="15.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="199.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (540 samples, 1.33%)</title><rect x="196.4" y="179.0" width="15.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="199.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (540 samples, 1.33%)</title><rect x="196.4" y="163.0" width="15.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="199.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (540 samples, 1.33%)</title><rect x="196.4" y="147.0" width="15.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="199.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (540 samples, 1.33%)</title><rect x="196.4" y="131.0" width="15.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (540 samples, 1.33%)</title><rect x="196.4" y="115.0" width="15.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="199.4" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (540 samples, 1.33%)</title><rect x="196.4" y="99.0" width="15.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="199.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,619 samples, 3.98%)</title><rect x="212.1" y="291.0" width="47.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="215.1" y="302.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,619 samples, 3.98%)</title><rect x="212.1" y="275.0" width="47.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="215.1" y="286.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (260 samples, 0.64%)</title><rect x="212.1" y="259.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="215.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (260 samples, 0.64%)</title><rect x="212.1" y="243.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="215.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (260 samples, 0.64%)</title><rect x="212.1" y="227.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="215.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (260 samples, 0.64%)</title><rect x="212.1" y="211.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="215.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (260 samples, 0.64%)</title><rect x="212.1" y="195.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="215.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (260 samples, 0.64%)</title><rect x="212.1" y="179.0" width="7.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="215.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,359 samples, 3.34%)</title><rect x="219.6" y="259.0" width="39.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="222.6" y="270.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,359 samples, 3.34%)</title><rect x="219.6" y="243.0" width="39.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="222.6" y="254.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,359 samples, 3.34%)</title><rect x="219.6" y="227.0" width="39.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="222.6" y="238.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,359 samples, 3.34%)</title><rect x="219.6" y="211.0" width="39.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="222.6" y="222.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,359 samples, 3.34%)</title><rect x="219.6" y="195.0" width="39.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="222.6" y="206.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,359 samples, 3.34%)</title><rect x="219.6" y="179.0" width="39.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.6" y="190.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,359 samples, 3.34%)</title><rect x="219.6" y="163.0" width="39.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="222.6" y="174.0">jav..</text>
</g>
<g>
<title>[proxy-worker-2 tid=25860] (3,458 samples, 8.50%)</title><rect x="259.1" y="355.0" width="100.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="262.1" y="366.0">[proxy-worke..</text>
</g>
<g>
<title>java/lang/Thread.run (3,458 samples, 8.50%)</title><rect x="259.1" y="339.0" width="100.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="262.1" y="350.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,458 samples, 8.50%)</title><rect x="259.1" y="323.0" width="100.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.1" y="334.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,458 samples, 8.50%)</title><rect x="259.1" y="307.0" width="100.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="262.1" y="318.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1,911 samples, 4.70%)</title><rect x="259.1" y="291.0" width="55.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.1" y="302.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (467 samples, 1.15%)</title><rect x="259.1" y="275.0" width="13.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="262.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (467 samples, 1.15%)</title><rect x="259.1" y="259.0" width="13.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="262.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (467 samples, 1.15%)</title><rect x="259.1" y="243.0" width="13.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (467 samples, 1.15%)</title><rect x="259.1" y="227.0" width="13.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="262.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (467 samples, 1.15%)</title><rect x="259.1" y="211.0" width="13.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="262.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (467 samples, 1.15%)</title><rect x="259.1" y="195.0" width="13.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="262.1" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (467 samples, 1.15%)</title><rect x="259.1" y="179.0" width="13.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.1" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (218 samples, 0.54%)</title><rect x="259.1" y="163.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="262.1" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (218 samples, 0.54%)</title><rect x="259.1" y="147.0" width="6.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="262.1" y="158.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (249 samples, 0.61%)</title><rect x="265.4" y="163.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="268.4" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (249 samples, 0.61%)</title><rect x="265.4" y="147.0" width="7.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="268.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (1,444 samples, 3.55%)</title><rect x="272.6" y="275.0" width="41.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="275.6" y="286.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (1,444 samples, 3.55%)</title><rect x="272.6" y="259.0" width="41.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="275.6" y="270.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (1,444 samples, 3.55%)</title><rect x="272.6" y="243.0" width="41.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.6" y="254.0">jav..</text>
</g>
<g>
<title>java/util/AbstractQueue.add (1,444 samples, 3.55%)</title><rect x="272.6" y="227.0" width="41.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="275.6" y="238.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,444 samples, 3.55%)</title><rect x="272.6" y="211.0" width="41.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.6" y="222.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (898 samples, 2.21%)</title><rect x="272.6" y="195.0" width="26.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="275.6" y="206.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (898 samples, 2.21%)</title><rect x="272.6" y="179.0" width="26.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="275.6" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (898 samples, 2.21%)</title><rect x="272.6" y="163.0" width="26.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.6" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (898 samples, 2.21%)</title><rect x="272.6" y="147.0" width="26.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="275.6" y="158.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (898 samples, 2.21%)</title><rect x="272.6" y="131.0" width="26.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="275.6" y="142.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (898 samples, 2.21%)</title><rect x="272.6" y="115.0" width="26.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="275.6" y="126.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (898 samples, 2.21%)</title><rect x="272.6" y="99.0" width="26.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="275.6" y="110.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (898 samples, 2.21%)</title><rect x="272.6" y="83.0" width="26.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="275.6" y="94.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (546 samples, 1.34%)</title><rect x="298.7" y="195.0" width="15.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="301.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (546 samples, 1.34%)</title><rect x="298.7" y="179.0" width="15.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="301.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (546 samples, 1.34%)</title><rect x="298.7" y="163.0" width="15.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="301.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (546 samples, 1.34%)</title><rect x="298.7" y="147.0" width="15.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="301.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (546 samples, 1.34%)</title><rect x="298.7" y="131.0" width="15.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="301.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (546 samples, 1.34%)</title><rect x="298.7" y="115.0" width="15.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="301.7" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (546 samples, 1.34%)</title><rect x="298.7" y="99.0" width="15.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="301.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,547 samples, 3.80%)</title><rect x="314.5" y="291.0" width="44.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="317.5" y="302.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,547 samples, 3.80%)</title><rect x="314.5" y="275.0" width="44.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="317.5" y="286.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (221 samples, 0.54%)</title><rect x="314.5" y="259.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="317.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (221 samples, 0.54%)</title><rect x="314.5" y="243.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="317.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (221 samples, 0.54%)</title><rect x="314.5" y="227.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="317.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (221 samples, 0.54%)</title><rect x="314.5" y="211.0" width="6.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="317.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (221 samples, 0.54%)</title><rect x="314.5" y="195.0" width="6.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.5" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (221 samples, 0.54%)</title><rect x="314.5" y="179.0" width="6.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="317.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,326 samples, 3.26%)</title><rect x="320.9" y="259.0" width="38.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="323.9" y="270.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,326 samples, 3.26%)</title><rect x="320.9" y="243.0" width="38.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="323.9" y="254.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,326 samples, 3.26%)</title><rect x="320.9" y="227.0" width="38.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="323.9" y="238.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,326 samples, 3.26%)</title><rect x="320.9" y="211.0" width="38.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="323.9" y="222.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,326 samples, 3.26%)</title><rect x="320.9" y="195.0" width="38.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="323.9" y="206.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,326 samples, 3.26%)</title><rect x="320.9" y="179.0" width="38.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="323.9" y="190.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,326 samples, 3.26%)</title><rect x="320.9" y="163.0" width="38.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="323.9" y="174.0">jav..</text>
</g>
<g>
<title>[proxy-worker-3 tid=25858] (3,475 samples, 8.54%)</title><rect x="359.4" y="355.0" width="100.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="362.4" y="366.0">[proxy-worke..</text>
</g>
<g>
<title>java/lang/Thread.run (3,475 samples, 8.54%)</title><rect x="359.4" y="339.0" width="100.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="362.4" y="350.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,475 samples, 8.54%)</title><rect x="359.4" y="323.0" width="100.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="362.4" y="334.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,475 samples, 8.54%)</title><rect x="359.4" y="307.0" width="100.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="362.4" y="318.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1,897 samples, 4.66%)</title><rect x="359.4" y="291.0" width="55.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="362.4" y="302.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (456 samples, 1.12%)</title><rect x="359.4" y="275.0" width="13.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="362.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (456 samples, 1.12%)</title><rect x="359.4" y="259.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="362.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (456 samples, 1.12%)</title><rect x="359.4" y="243.0" width="13.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="362.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (456 samples, 1.12%)</title><rect x="359.4" y="227.0" width="13.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="362.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (456 samples, 1.12%)</title><rect x="359.4" y="211.0" width="13.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="362.4" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (456 samples, 1.12%)</title><rect x="359.4" y="195.0" width="13.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="362.4" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (456 samples, 1.12%)</title><rect x="359.4" y="179.0" width="13.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="362.4" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (196 samples, 0.48%)</title><rect x="359.4" y="163.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="362.4" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (196 samples, 0.48%)</title><rect x="359.4" y="147.0" width="5.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="362.4" y="158.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (260 samples, 0.64%)</title><rect x="365.1" y="163.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.1" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (260 samples, 0.64%)</title><rect x="365.1" y="147.0" width="7.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="368.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (1,441 samples, 3.54%)</title><rect x="372.6" y="275.0" width="41.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="375.6" y="286.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (1,441 samples, 3.54%)</title><rect x="372.6" y="259.0" width="41.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="375.6" y="270.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (1,441 samples, 3.54%)</title><rect x="372.6" y="243.0" width="41.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="375.6" y="254.0">jav..</text>
</g>
<g>
<title>java/util/AbstractQueue.add (1,441 samples, 3.54%)</title><rect x="372.6" y="227.0" width="41.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="375.6" y="238.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,441 samples, 3.54%)</title><rect x="372.6" y="211.0" width="41.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="375.6" y="222.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (877 samples, 2.16%)</title><rect x="372.6" y="195.0" width="25.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.6" y="206.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (877 samples, 2.16%)</title><rect x="372.6" y="179.0" width="25.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.6" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (877 samples, 2.16%)</title><rect x="372.6" y="163.0" width="25.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.6" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (877 samples, 2.16%)</title><rect x="372.6" y="147.0" width="25.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="375.6" y="158.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (877 samples, 2.16%)</title><rect x="372.6" y="131.0" width="25.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="375.6" y="142.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (877 samples, 2.16%)</title><rect x="372.6" y="115.0" width="25.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.6" y="126.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (877 samples, 2.16%)</title><rect x="372.6" y="99.0" width="25.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="375.6" y="110.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (877 samples, 2.16%)</title><rect x="372.6" y="83.0" width="25.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="375.6" y="94.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (564 samples, 1.39%)</title><rect x="398.1" y="195.0" width="16.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="401.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (564 samples, 1.39%)</title><rect x="398.1" y="179.0" width="16.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="401.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (564 samples, 1.39%)</title><rect x="398.1" y="163.0" width="16.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="401.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (564 samples, 1.39%)</title><rect x="398.1" y="147.0" width="16.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="401.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (564 samples, 1.39%)</title><rect x="398.1" y="131.0" width="16.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="401.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (564 samples, 1.39%)</title><rect x="398.1" y="115.0" width="16.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.1" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (564 samples, 1.39%)</title><rect x="398.1" y="99.0" width="16.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="401.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,578 samples, 3.88%)</title><rect x="414.4" y="291.0" width="45.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.4" y="302.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,578 samples, 3.88%)</title><rect x="414.4" y="275.0" width="45.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.4" y="286.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (245 samples, 0.60%)</title><rect x="414.4" y="259.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="417.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (245 samples, 0.60%)</title><rect x="414.4" y="243.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (245 samples, 0.60%)</title><rect x="414.4" y="227.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="417.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (245 samples, 0.60%)</title><rect x="414.4" y="211.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="417.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (245 samples, 0.60%)</title><rect x="414.4" y="195.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.4" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (245 samples, 0.60%)</title><rect x="414.4" y="179.0" width="7.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="417.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,333 samples, 3.28%)</title><rect x="421.5" y="259.0" width="38.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.5" y="270.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,333 samples, 3.28%)</title><rect x="421.5" y="243.0" width="38.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.5" y="254.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,333 samples, 3.28%)</title><rect x="421.5" y="227.0" width="38.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.5" y="238.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,333 samples, 3.28%)</title><rect x="421.5" y="211.0" width="38.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.5" y="222.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,333 samples, 3.28%)</title><rect x="421.5" y="195.0" width="38.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="424.5" y="206.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,333 samples, 3.28%)</title><rect x="421.5" y="179.0" width="38.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.5" y="190.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,333 samples, 3.28%)</title><rect x="421.5" y="163.0" width="38.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="424.5" y="174.0">jav..</text>
</g>
<g>
<title>[proxy-worker-4 tid=25859] (3,426 samples, 8.42%)</title><rect x="460.2" y="355.0" width="99.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="463.2" y="366.0">[proxy-worke..</text>
</g>
<g>
<title>java/lang/Thread.run (3,426 samples, 8.42%)</title><rect x="460.2" y="339.0" width="99.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="463.2" y="350.0">java/lang/Th..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,426 samples, 8.42%)</title><rect x="460.2" y="323.0" width="99.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="463.2" y="334.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,426 samples, 8.42%)</title><rect x="460.2" y="307.0" width="99.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.2" y="318.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1,865 samples, 4.59%)</title><rect x="460.2" y="291.0" width="54.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="463.2" y="302.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (480 samples, 1.18%)</title><rect x="460.2" y="275.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="463.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (480 samples, 1.18%)</title><rect x="460.2" y="259.0" width="13.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (480 samples, 1.18%)</title><rect x="460.2" y="243.0" width="13.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="463.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (480 samples, 1.18%)</title><rect x="460.2" y="227.0" width="13.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="463.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (480 samples, 1.18%)</title><rect x="460.2" y="211.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="463.2" y="222.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (480 samples, 1.18%)</title><rect x="460.2" y="195.0" width="13.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.2" y="206.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (480 samples, 1.18%)</title><rect x="460.2" y="179.0" width="13.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="463.2" y="190.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (239 samples, 0.59%)</title><rect x="460.2" y="163.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.2" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (239 samples, 0.59%)</title><rect x="460.2" y="147.0" width="6.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="463.2" y="158.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (241 samples, 0.59%)</title><rect x="467.1" y="163.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="470.1" y="174.0"></text>
</g>
<g>
<title>one.nio.http.HttpClient (241 samples, 0.59%)</title><rect x="467.1" y="147.0" width="7.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="470.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (1,385 samples, 3.41%)</title><rect x="474.1" y="275.0" width="40.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.1" y="286.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (1,385 samples, 3.41%)</title><rect x="474.1" y="259.0" width="40.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.1" y="270.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (1,385 samples, 3.41%)</title><rect x="474.1" y="243.0" width="40.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="477.1" y="254.0">jav..</text>
</g>
<g>
<title>java/util/AbstractQueue.add (1,385 samples, 3.41%)</title><rect x="474.1" y="227.0" width="40.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="477.1" y="238.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,385 samples, 3.41%)</title><rect x="474.1" y="211.0" width="40.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="477.1" y="222.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (831 samples, 2.04%)</title><rect x="474.1" y="195.0" width="24.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.1" y="206.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (831 samples, 2.04%)</title><rect x="474.1" y="179.0" width="24.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.1" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (831 samples, 2.04%)</title><rect x="474.1" y="163.0" width="24.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="477.1" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (831 samples, 2.04%)</title><rect x="474.1" y="147.0" width="24.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="477.1" y="158.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (831 samples, 2.04%)</title><rect x="474.1" y="131.0" width="24.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="477.1" y="142.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (831 samples, 2.04%)</title><rect x="474.1" y="115.0" width="24.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="477.1" y="126.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (831 samples, 2.04%)</title><rect x="474.1" y="99.0" width="24.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="477.1" y="110.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (831 samples, 2.04%)</title><rect x="474.1" y="83.0" width="24.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="477.1" y="94.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (554 samples, 1.36%)</title><rect x="498.2" y="195.0" width="16.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (554 samples, 1.36%)</title><rect x="498.2" y="179.0" width="16.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (554 samples, 1.36%)</title><rect x="498.2" y="163.0" width="16.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (554 samples, 1.36%)</title><rect x="498.2" y="147.0" width="16.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="501.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (554 samples, 1.36%)</title><rect x="498.2" y="131.0" width="16.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (554 samples, 1.36%)</title><rect x="498.2" y="115.0" width="16.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="501.2" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (554 samples, 1.36%)</title><rect x="498.2" y="99.0" width="16.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="501.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,561 samples, 3.84%)</title><rect x="514.3" y="291.0" width="45.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="517.3" y="302.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,561 samples, 3.84%)</title><rect x="514.3" y="275.0" width="45.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.3" y="286.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (244 samples, 0.60%)</title><rect x="514.3" y="259.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (244 samples, 0.60%)</title><rect x="514.3" y="243.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (244 samples, 0.60%)</title><rect x="514.3" y="227.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="517.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (244 samples, 0.60%)</title><rect x="514.3" y="211.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="517.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (244 samples, 0.60%)</title><rect x="514.3" y="195.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="517.3" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (244 samples, 0.60%)</title><rect x="514.3" y="179.0" width="7.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="517.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,317 samples, 3.24%)</title><rect x="521.4" y="259.0" width="38.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="524.4" y="270.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,317 samples, 3.24%)</title><rect x="521.4" y="243.0" width="38.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="524.4" y="254.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,317 samples, 3.24%)</title><rect x="521.4" y="227.0" width="38.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="524.4" y="238.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,317 samples, 3.24%)</title><rect x="521.4" y="211.0" width="38.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="524.4" y="222.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,317 samples, 3.24%)</title><rect x="521.4" y="195.0" width="38.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="524.4" y="206.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,317 samples, 3.24%)</title><rect x="521.4" y="179.0" width="38.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="524.4" y="190.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,317 samples, 3.24%)</title><rect x="521.4" y="163.0" width="38.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="524.4" y="174.0">jav..</text>
</g>
<g>
<title>[worker-0 tid=25850] (3,118 samples, 7.67%)</title><rect x="559.6" y="355.0" width="90.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="562.6" y="366.0">[worker-0 ..</text>
</g>
<g>
<title>java/lang/Thread.run (3,118 samples, 7.67%)</title><rect x="559.6" y="339.0" width="90.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.6" y="350.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,118 samples, 7.67%)</title><rect x="559.6" y="323.0" width="90.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="562.6" y="334.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,118 samples, 7.67%)</title><rect x="559.6" y="307.0" width="90.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="562.6" y="318.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (199 samples, 0.49%)</title><rect x="559.6" y="291.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (199 samples, 0.49%)</title><rect x="559.6" y="275.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="562.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (59 samples, 0.15%)</title><rect x="559.6" y="259.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="562.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (59 samples, 0.15%)</title><rect x="559.6" y="243.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="562.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (59 samples, 0.15%)</title><rect x="559.6" y="227.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (59 samples, 0.15%)</title><rect x="559.6" y="211.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="562.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (59 samples, 0.15%)</title><rect x="559.6" y="195.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.6" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (59 samples, 0.15%)</title><rect x="559.6" y="179.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="562.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (140 samples, 0.34%)</title><rect x="561.3" y="259.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="564.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (140 samples, 0.34%)</title><rect x="561.3" y="243.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (140 samples, 0.34%)</title><rect x="561.3" y="227.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (140 samples, 0.34%)</title><rect x="561.3" y="211.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="564.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (140 samples, 0.34%)</title><rect x="561.3" y="195.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (140 samples, 0.34%)</title><rect x="561.3" y="179.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.3" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (140 samples, 0.34%)</title><rect x="561.3" y="163.0" width="4.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="564.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (2,919 samples, 7.18%)</title><rect x="565.4" y="291.0" width="84.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.4" y="302.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (2,919 samples, 7.18%)</title><rect x="565.4" y="275.0" width="84.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="568.4" y="286.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (2,915 samples, 7.17%)</title><rect x="565.4" y="259.0" width="84.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.4" y="270.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (2,915 samples, 7.17%)</title><rect x="565.4" y="243.0" width="84.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.4" y="254.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (2,915 samples, 7.17%)</title><rect x="565.4" y="227.0" width="84.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="568.4" y="238.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (794 samples, 1.95%)</title><rect x="565.4" y="211.0" width="23.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="568.4" y="222.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (794 samples, 1.95%)</title><rect x="565.4" y="195.0" width="23.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.4" y="206.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (793 samples, 1.95%)</title><rect x="565.4" y="179.0" width="23.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.4" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (793 samples, 1.95%)</title><rect x="565.4" y="163.0" width="23.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.4" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (793 samples, 1.95%)</title><rect x="565.4" y="147.0" width="23.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="568.4" y="158.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (793 samples, 1.95%)</title><rect x="565.4" y="131.0" width="23.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="568.4" y="142.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (793 samples, 1.95%)</title><rect x="565.4" y="115.0" width="23.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="568.4" y="126.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (793 samples, 1.95%)</title><rect x="565.4" y="99.0" width="23.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="568.4" y="110.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (793 samples, 1.95%)</title><rect x="565.4" y="83.0" width="23.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="568.4" y="94.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (2,121 samples, 5.22%)</title><rect x="588.4" y="211.0" width="61.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="591.4" y="222.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (216 samples, 0.53%)</title><rect x="588.4" y="195.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (216 samples, 0.53%)</title><rect x="588.4" y="179.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="591.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (216 samples, 0.53%)</title><rect x="588.4" y="163.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (176 samples, 0.43%)</title><rect x="588.4" y="147.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="591.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (176 samples, 0.43%)</title><rect x="588.4" y="131.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (176 samples, 0.43%)</title><rect x="588.4" y="115.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="591.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (176 samples, 0.43%)</title><rect x="588.4" y="99.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (176 samples, 0.43%)</title><rect x="588.4" y="83.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="591.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (176 samples, 0.43%)</title><rect x="588.4" y="67.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="591.4" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (176 samples, 0.43%)</title><rect x="588.4" y="51.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="591.4" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (176 samples, 0.43%)</title><rect x="588.4" y="35.0" width="5.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="591.4" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (40 samples, 0.10%)</title><rect x="593.5" y="147.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="596.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (40 samples, 0.10%)</title><rect x="593.5" y="131.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="596.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (40 samples, 0.10%)</title><rect x="593.5" y="115.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="596.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (40 samples, 0.10%)</title><rect x="593.5" y="99.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="596.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (40 samples, 0.10%)</title><rect x="593.5" y="83.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="596.5" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (40 samples, 0.10%)</title><rect x="593.5" y="67.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="596.5" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (40 samples, 0.10%)</title><rect x="593.5" y="51.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="596.5" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (1,905 samples, 4.68%)</title><rect x="594.7" y="195.0" width="55.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.7" y="206.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,905 samples, 4.68%)</title><rect x="594.7" y="179.0" width="55.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.7" y="190.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (689 samples, 1.69%)</title><rect x="594.7" y="163.0" width="20.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="597.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (689 samples, 1.69%)</title><rect x="594.7" y="147.0" width="20.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="597.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (689 samples, 1.69%)</title><rect x="594.7" y="131.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (689 samples, 1.69%)</title><rect x="594.7" y="115.0" width="20.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="597.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (689 samples, 1.69%)</title><rect x="594.7" y="99.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.7" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (689 samples, 1.69%)</title><rect x="594.7" y="83.0" width="20.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="597.7" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,216 samples, 2.99%)</title><rect x="614.7" y="163.0" width="35.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="617.7" y="174.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,216 samples, 2.99%)</title><rect x="614.7" y="147.0" width="35.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="617.7" y="158.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,216 samples, 2.99%)</title><rect x="614.7" y="131.0" width="35.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.7" y="142.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,216 samples, 2.99%)</title><rect x="614.7" y="115.0" width="35.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="617.7" y="126.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,216 samples, 2.99%)</title><rect x="614.7" y="99.0" width="35.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="617.7" y="110.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,216 samples, 2.99%)</title><rect x="614.7" y="83.0" width="35.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="617.7" y="94.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,216 samples, 2.99%)</title><rect x="614.7" y="67.0" width="35.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="617.7" y="78.0">jav..</text>
</g>
<g>
<title>[worker-0 tid=25857] (641 samples, 1.58%)</title><rect x="650.1" y="355.0" width="18.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="653.1" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (641 samples, 1.58%)</title><rect x="650.1" y="339.0" width="18.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="653.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (641 samples, 1.58%)</title><rect x="650.1" y="323.0" width="18.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="653.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (641 samples, 1.58%)</title><rect x="650.1" y="307.0" width="18.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="653.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (254 samples, 0.62%)</title><rect x="650.1" y="291.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="653.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (254 samples, 0.62%)</title><rect x="650.1" y="275.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (74 samples, 0.18%)</title><rect x="650.1" y="259.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="653.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (74 samples, 0.18%)</title><rect x="650.1" y="243.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="653.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (74 samples, 0.18%)</title><rect x="650.1" y="227.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (74 samples, 0.18%)</title><rect x="650.1" y="211.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="653.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (74 samples, 0.18%)</title><rect x="650.1" y="195.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="653.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (74 samples, 0.18%)</title><rect x="650.1" y="179.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="653.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (180 samples, 0.44%)</title><rect x="652.2" y="259.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="655.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (180 samples, 0.44%)</title><rect x="652.2" y="243.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="655.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (180 samples, 0.44%)</title><rect x="652.2" y="227.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="655.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (180 samples, 0.44%)</title><rect x="652.2" y="211.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="655.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (180 samples, 0.44%)</title><rect x="652.2" y="195.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="655.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (180 samples, 0.44%)</title><rect x="652.2" y="179.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="655.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (180 samples, 0.44%)</title><rect x="652.2" y="163.0" width="5.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="655.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (387 samples, 0.95%)</title><rect x="657.4" y="291.0" width="11.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (387 samples, 0.95%)</title><rect x="657.4" y="275.0" width="11.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="660.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (163 samples, 0.40%)</title><rect x="657.4" y="259.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (163 samples, 0.40%)</title><rect x="657.4" y="243.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="660.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (163 samples, 0.40%)</title><rect x="657.4" y="227.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (163 samples, 0.40%)</title><rect x="657.4" y="211.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (163 samples, 0.40%)</title><rect x="657.4" y="195.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (163 samples, 0.40%)</title><rect x="657.4" y="179.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="660.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (163 samples, 0.40%)</title><rect x="657.4" y="163.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="660.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (163 samples, 0.40%)</title><rect x="657.4" y="147.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (163 samples, 0.40%)</title><rect x="657.4" y="131.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="660.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (163 samples, 0.40%)</title><rect x="657.4" y="115.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="660.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (163 samples, 0.40%)</title><rect x="657.4" y="99.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="660.4" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (163 samples, 0.40%)</title><rect x="657.4" y="83.0" width="4.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="660.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (224 samples, 0.55%)</title><rect x="662.2" y="259.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="665.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (224 samples, 0.55%)</title><rect x="662.2" y="243.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.2" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (224 samples, 0.55%)</title><rect x="662.2" y="227.0" width="6.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="665.2" y="238.0"></text>
</g>
<g>
<title>[worker-0 tid=25862] (642 samples, 1.58%)</title><rect x="668.7" y="355.0" width="18.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="671.7" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (642 samples, 1.58%)</title><rect x="668.7" y="339.0" width="18.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="671.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (642 samples, 1.58%)</title><rect x="668.7" y="323.0" width="18.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="671.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (642 samples, 1.58%)</title><rect x="668.7" y="307.0" width="18.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="671.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (322 samples, 0.79%)</title><rect x="668.7" y="291.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="671.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (322 samples, 0.79%)</title><rect x="668.7" y="275.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="671.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (97 samples, 0.24%)</title><rect x="668.7" y="259.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="671.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (97 samples, 0.24%)</title><rect x="668.7" y="243.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (97 samples, 0.24%)</title><rect x="668.7" y="227.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (97 samples, 0.24%)</title><rect x="668.7" y="211.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="671.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (97 samples, 0.24%)</title><rect x="668.7" y="195.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.7" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (97 samples, 0.24%)</title><rect x="668.7" y="179.0" width="2.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="671.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (225 samples, 0.55%)</title><rect x="671.5" y="259.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="674.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (225 samples, 0.55%)</title><rect x="671.5" y="243.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (225 samples, 0.55%)</title><rect x="671.5" y="227.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="674.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (225 samples, 0.55%)</title><rect x="671.5" y="211.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="674.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (225 samples, 0.55%)</title><rect x="671.5" y="195.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="674.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (225 samples, 0.55%)</title><rect x="671.5" y="179.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="674.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (225 samples, 0.55%)</title><rect x="671.5" y="163.0" width="6.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="674.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (320 samples, 0.79%)</title><rect x="678.0" y="291.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="681.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (320 samples, 0.79%)</title><rect x="678.0" y="275.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="681.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (178 samples, 0.44%)</title><rect x="678.0" y="259.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="681.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (178 samples, 0.44%)</title><rect x="678.0" y="243.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="681.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (178 samples, 0.44%)</title><rect x="678.0" y="227.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (178 samples, 0.44%)</title><rect x="678.0" y="211.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="681.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (178 samples, 0.44%)</title><rect x="678.0" y="195.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (178 samples, 0.44%)</title><rect x="678.0" y="179.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="681.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (178 samples, 0.44%)</title><rect x="678.0" y="163.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (178 samples, 0.44%)</title><rect x="678.0" y="147.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="681.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (178 samples, 0.44%)</title><rect x="678.0" y="131.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="681.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (178 samples, 0.44%)</title><rect x="678.0" y="115.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="681.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (178 samples, 0.44%)</title><rect x="678.0" y="99.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.0" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (178 samples, 0.44%)</title><rect x="678.0" y="83.0" width="5.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="681.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (142 samples, 0.35%)</title><rect x="683.2" y="259.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="686.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (142 samples, 0.35%)</title><rect x="683.2" y="243.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="686.2" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (142 samples, 0.35%)</title><rect x="683.2" y="227.0" width="4.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="686.2" y="238.0"></text>
</g>
<g>
<title>[worker-1 tid=25852] (3,075 samples, 7.56%)</title><rect x="687.3" y="355.0" width="89.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="690.3" y="366.0">[worker-1 ..</text>
</g>
<g>
<title>java/lang/Thread.run (3,075 samples, 7.56%)</title><rect x="687.3" y="339.0" width="89.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.3" y="350.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,075 samples, 7.56%)</title><rect x="687.3" y="323.0" width="89.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.3" y="334.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,075 samples, 7.56%)</title><rect x="687.3" y="307.0" width="89.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="690.3" y="318.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (234 samples, 0.58%)</title><rect x="687.3" y="291.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (234 samples, 0.58%)</title><rect x="687.3" y="275.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (72 samples, 0.18%)</title><rect x="687.3" y="259.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="690.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (72 samples, 0.18%)</title><rect x="687.3" y="243.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (72 samples, 0.18%)</title><rect x="687.3" y="227.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (72 samples, 0.18%)</title><rect x="687.3" y="211.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="690.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (72 samples, 0.18%)</title><rect x="687.3" y="195.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="690.3" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (72 samples, 0.18%)</title><rect x="687.3" y="179.0" width="2.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="690.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (162 samples, 0.40%)</title><rect x="689.4" y="259.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="692.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (162 samples, 0.40%)</title><rect x="689.4" y="243.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="692.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (162 samples, 0.40%)</title><rect x="689.4" y="227.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (162 samples, 0.40%)</title><rect x="689.4" y="211.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="692.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (162 samples, 0.40%)</title><rect x="689.4" y="195.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (162 samples, 0.40%)</title><rect x="689.4" y="179.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.4" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (162 samples, 0.40%)</title><rect x="689.4" y="163.0" width="4.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="692.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (2,841 samples, 6.99%)</title><rect x="694.1" y="291.0" width="82.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="697.1" y="302.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (2,841 samples, 6.99%)</title><rect x="694.1" y="275.0" width="82.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.1" y="286.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (2,839 samples, 6.98%)</title><rect x="694.1" y="259.0" width="82.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="697.1" y="270.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (2,839 samples, 6.98%)</title><rect x="694.1" y="243.0" width="82.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.1" y="254.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (2,839 samples, 6.98%)</title><rect x="694.1" y="227.0" width="82.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="697.1" y="238.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (812 samples, 2.00%)</title><rect x="694.1" y="211.0" width="23.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.1" y="222.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (812 samples, 2.00%)</title><rect x="694.1" y="195.0" width="23.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.1" y="206.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (812 samples, 2.00%)</title><rect x="694.1" y="179.0" width="23.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="697.1" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (812 samples, 2.00%)</title><rect x="694.1" y="163.0" width="23.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="697.1" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (812 samples, 2.00%)</title><rect x="694.1" y="147.0" width="23.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="697.1" y="158.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (812 samples, 2.00%)</title><rect x="694.1" y="131.0" width="23.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="697.1" y="142.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (812 samples, 2.00%)</title><rect x="694.1" y="115.0" width="23.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.1" y="126.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (812 samples, 2.00%)</title><rect x="694.1" y="99.0" width="23.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.1" y="110.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (812 samples, 2.00%)</title><rect x="694.1" y="83.0" width="23.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="697.1" y="94.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (2,027 samples, 4.98%)</title><rect x="717.6" y="211.0" width="58.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="720.6" y="222.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (229 samples, 0.56%)</title><rect x="717.6" y="195.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (229 samples, 0.56%)</title><rect x="717.6" y="179.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (229 samples, 0.56%)</title><rect x="717.6" y="163.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="720.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (185 samples, 0.45%)</title><rect x="717.6" y="147.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (185 samples, 0.45%)</title><rect x="717.6" y="131.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="720.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (185 samples, 0.45%)</title><rect x="717.6" y="115.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (185 samples, 0.45%)</title><rect x="717.6" y="99.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="720.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (185 samples, 0.45%)</title><rect x="717.6" y="83.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="720.6" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (185 samples, 0.45%)</title><rect x="717.6" y="67.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.6" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (185 samples, 0.45%)</title><rect x="717.6" y="51.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="720.6" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (185 samples, 0.45%)</title><rect x="717.6" y="35.0" width="5.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="720.6" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (44 samples, 0.11%)</title><rect x="723.0" y="147.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="726.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (44 samples, 0.11%)</title><rect x="723.0" y="131.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="726.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (44 samples, 0.11%)</title><rect x="723.0" y="115.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="726.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (44 samples, 0.11%)</title><rect x="723.0" y="99.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="726.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (44 samples, 0.11%)</title><rect x="723.0" y="83.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="726.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (44 samples, 0.11%)</title><rect x="723.0" y="67.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="726.0" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (44 samples, 0.11%)</title><rect x="723.0" y="51.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="726.0" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (1,798 samples, 4.42%)</title><rect x="724.3" y="195.0" width="52.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="727.3" y="206.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,798 samples, 4.42%)</title><rect x="724.3" y="179.0" width="52.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="727.3" y="190.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (664 samples, 1.63%)</title><rect x="724.3" y="163.0" width="19.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="727.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (664 samples, 1.63%)</title><rect x="724.3" y="147.0" width="19.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (664 samples, 1.63%)</title><rect x="724.3" y="131.0" width="19.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="727.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (664 samples, 1.63%)</title><rect x="724.3" y="115.0" width="19.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (664 samples, 1.63%)</title><rect x="724.3" y="99.0" width="19.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="727.3" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (664 samples, 1.63%)</title><rect x="724.3" y="83.0" width="19.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="727.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,134 samples, 2.79%)</title><rect x="743.5" y="163.0" width="32.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="746.5" y="174.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,134 samples, 2.79%)</title><rect x="743.5" y="147.0" width="32.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.5" y="158.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,134 samples, 2.79%)</title><rect x="743.5" y="131.0" width="32.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="746.5" y="142.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,134 samples, 2.79%)</title><rect x="743.5" y="115.0" width="32.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.5" y="126.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,134 samples, 2.79%)</title><rect x="743.5" y="99.0" width="32.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.5" y="110.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,134 samples, 2.79%)</title><rect x="743.5" y="83.0" width="32.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="746.5" y="94.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,134 samples, 2.79%)</title><rect x="743.5" y="67.0" width="32.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="746.5" y="78.0">ja..</text>
</g>
<g>
<title>[worker-1 tid=25861] (610 samples, 1.50%)</title><rect x="776.5" y="355.0" width="17.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="779.5" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (610 samples, 1.50%)</title><rect x="776.5" y="339.0" width="17.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (610 samples, 1.50%)</title><rect x="776.5" y="323.0" width="17.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="779.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (610 samples, 1.50%)</title><rect x="776.5" y="307.0" width="17.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="779.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (246 samples, 0.60%)</title><rect x="776.5" y="291.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="779.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (246 samples, 0.60%)</title><rect x="776.5" y="275.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="779.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (64 samples, 0.16%)</title><rect x="776.5" y="259.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (64 samples, 0.16%)</title><rect x="776.5" y="243.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="779.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (64 samples, 0.16%)</title><rect x="776.5" y="227.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (64 samples, 0.16%)</title><rect x="776.5" y="211.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="779.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (64 samples, 0.16%)</title><rect x="776.5" y="195.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="779.5" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (64 samples, 0.16%)</title><rect x="776.5" y="179.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="779.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (182 samples, 0.45%)</title><rect x="778.4" y="259.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="781.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (182 samples, 0.45%)</title><rect x="778.4" y="243.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="781.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (182 samples, 0.45%)</title><rect x="778.4" y="227.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="781.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (182 samples, 0.45%)</title><rect x="778.4" y="211.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="781.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (182 samples, 0.45%)</title><rect x="778.4" y="195.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="781.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (182 samples, 0.45%)</title><rect x="778.4" y="179.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="781.4" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (182 samples, 0.45%)</title><rect x="778.4" y="163.0" width="5.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="781.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (364 samples, 0.89%)</title><rect x="783.6" y="291.0" width="10.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (364 samples, 0.89%)</title><rect x="783.6" y="275.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="786.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (154 samples, 0.38%)</title><rect x="783.6" y="259.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="786.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (154 samples, 0.38%)</title><rect x="783.6" y="243.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="786.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (154 samples, 0.38%)</title><rect x="783.6" y="227.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="786.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (154 samples, 0.38%)</title><rect x="783.6" y="211.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="786.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (154 samples, 0.38%)</title><rect x="783.6" y="195.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="786.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (154 samples, 0.38%)</title><rect x="783.6" y="179.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="786.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (154 samples, 0.38%)</title><rect x="783.6" y="163.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="786.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (154 samples, 0.38%)</title><rect x="783.6" y="147.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="786.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (154 samples, 0.38%)</title><rect x="783.6" y="131.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="786.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (154 samples, 0.38%)</title><rect x="783.6" y="115.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="786.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (154 samples, 0.38%)</title><rect x="783.6" y="99.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.6" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (154 samples, 0.38%)</title><rect x="783.6" y="83.0" width="4.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="786.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (210 samples, 0.52%)</title><rect x="788.1" y="259.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (210 samples, 0.52%)</title><rect x="788.1" y="243.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="791.1" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (210 samples, 0.52%)</title><rect x="788.1" y="227.0" width="6.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="791.1" y="238.0"></text>
</g>
<g>
<title>[worker-1 tid=25864] (678 samples, 1.67%)</title><rect x="794.2" y="355.0" width="19.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="797.2" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (678 samples, 1.67%)</title><rect x="794.2" y="339.0" width="19.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="797.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (678 samples, 1.67%)</title><rect x="794.2" y="323.0" width="19.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="797.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (678 samples, 1.67%)</title><rect x="794.2" y="307.0" width="19.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (353 samples, 0.87%)</title><rect x="794.2" y="291.0" width="10.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="797.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (353 samples, 0.87%)</title><rect x="794.2" y="275.0" width="10.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="797.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (94 samples, 0.23%)</title><rect x="794.2" y="259.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="797.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (94 samples, 0.23%)</title><rect x="794.2" y="243.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="797.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (94 samples, 0.23%)</title><rect x="794.2" y="227.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="797.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (94 samples, 0.23%)</title><rect x="794.2" y="211.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="797.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (94 samples, 0.23%)</title><rect x="794.2" y="195.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="797.2" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (94 samples, 0.23%)</title><rect x="794.2" y="179.0" width="2.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="797.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (259 samples, 0.64%)</title><rect x="796.9" y="259.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (259 samples, 0.64%)</title><rect x="796.9" y="243.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (259 samples, 0.64%)</title><rect x="796.9" y="227.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="799.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (259 samples, 0.64%)</title><rect x="796.9" y="211.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="799.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (259 samples, 0.64%)</title><rect x="796.9" y="195.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="799.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (259 samples, 0.64%)</title><rect x="796.9" y="179.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="799.9" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (259 samples, 0.64%)</title><rect x="796.9" y="163.0" width="7.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="799.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (325 samples, 0.80%)</title><rect x="804.4" y="291.0" width="9.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="807.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (325 samples, 0.80%)</title><rect x="804.4" y="275.0" width="9.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (154 samples, 0.38%)</title><rect x="804.4" y="259.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (154 samples, 0.38%)</title><rect x="804.4" y="243.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (154 samples, 0.38%)</title><rect x="804.4" y="227.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="807.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (154 samples, 0.38%)</title><rect x="804.4" y="211.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="807.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (154 samples, 0.38%)</title><rect x="804.4" y="195.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="807.4" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (154 samples, 0.38%)</title><rect x="804.4" y="179.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (154 samples, 0.38%)</title><rect x="804.4" y="163.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="807.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (154 samples, 0.38%)</title><rect x="804.4" y="147.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="807.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (154 samples, 0.38%)</title><rect x="804.4" y="131.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (154 samples, 0.38%)</title><rect x="804.4" y="115.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="807.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (154 samples, 0.38%)</title><rect x="804.4" y="99.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="807.4" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (154 samples, 0.38%)</title><rect x="804.4" y="83.0" width="4.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="807.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (171 samples, 0.42%)</title><rect x="808.9" y="259.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (171 samples, 0.42%)</title><rect x="808.9" y="243.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="811.9" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (171 samples, 0.42%)</title><rect x="808.9" y="227.0" width="5.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="811.9" y="238.0"></text>
</g>
<g>
<title>[worker-2 tid=25851] (2,874 samples, 7.07%)</title><rect x="813.9" y="355.0" width="83.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="816.9" y="366.0">[worker-2..</text>
</g>
<g>
<title>java/lang/Thread.run (2,874 samples, 7.07%)</title><rect x="813.9" y="339.0" width="83.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="816.9" y="350.0">java/lang..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,874 samples, 7.07%)</title><rect x="813.9" y="323.0" width="83.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.9" y="334.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,874 samples, 7.07%)</title><rect x="813.9" y="307.0" width="83.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.9" y="318.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (221 samples, 0.54%)</title><rect x="813.9" y="291.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (221 samples, 0.54%)</title><rect x="813.9" y="275.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (70 samples, 0.17%)</title><rect x="813.9" y="259.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="816.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (70 samples, 0.17%)</title><rect x="813.9" y="243.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="816.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (70 samples, 0.17%)</title><rect x="813.9" y="227.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="816.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (70 samples, 0.17%)</title><rect x="813.9" y="211.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="816.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (70 samples, 0.17%)</title><rect x="813.9" y="195.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.9" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (70 samples, 0.17%)</title><rect x="813.9" y="179.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="816.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (151 samples, 0.37%)</title><rect x="815.9" y="259.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="818.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (151 samples, 0.37%)</title><rect x="815.9" y="243.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="818.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (151 samples, 0.37%)</title><rect x="815.9" y="227.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="818.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (151 samples, 0.37%)</title><rect x="815.9" y="211.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="818.9" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (151 samples, 0.37%)</title><rect x="815.9" y="195.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="818.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (151 samples, 0.37%)</title><rect x="815.9" y="179.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="818.9" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (151 samples, 0.37%)</title><rect x="815.9" y="163.0" width="4.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="818.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (2,653 samples, 6.52%)</title><rect x="820.3" y="291.0" width="77.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.3" y="302.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (2,653 samples, 6.52%)</title><rect x="820.3" y="275.0" width="77.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="823.3" y="286.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (2,651 samples, 6.52%)</title><rect x="820.3" y="259.0" width="76.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="823.3" y="270.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (2,651 samples, 6.52%)</title><rect x="820.3" y="243.0" width="76.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.3" y="254.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (2,651 samples, 6.52%)</title><rect x="820.3" y="227.0" width="76.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.3" y="238.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (707 samples, 1.74%)</title><rect x="820.3" y="211.0" width="20.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="823.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (707 samples, 1.74%)</title><rect x="820.3" y="195.0" width="20.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="823.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (706 samples, 1.74%)</title><rect x="820.3" y="179.0" width="20.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (706 samples, 1.74%)</title><rect x="820.3" y="163.0" width="20.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="823.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (706 samples, 1.74%)</title><rect x="820.3" y="147.0" width="20.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="823.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (706 samples, 1.74%)</title><rect x="820.3" y="131.0" width="20.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="823.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (706 samples, 1.74%)</title><rect x="820.3" y="115.0" width="20.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (706 samples, 1.74%)</title><rect x="820.3" y="99.0" width="20.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.3" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (706 samples, 1.74%)</title><rect x="820.3" y="83.0" width="20.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="823.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (1,944 samples, 4.78%)</title><rect x="840.8" y="211.0" width="56.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="843.8" y="222.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (196 samples, 0.48%)</title><rect x="840.8" y="195.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="843.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (196 samples, 0.48%)</title><rect x="840.8" y="179.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="843.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (196 samples, 0.48%)</title><rect x="840.8" y="163.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="843.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (168 samples, 0.41%)</title><rect x="840.8" y="147.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="843.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (168 samples, 0.41%)</title><rect x="840.8" y="131.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (168 samples, 0.41%)</title><rect x="840.8" y="115.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (168 samples, 0.41%)</title><rect x="840.8" y="99.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (168 samples, 0.41%)</title><rect x="840.8" y="83.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="843.8" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (168 samples, 0.41%)</title><rect x="840.8" y="67.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="843.8" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (168 samples, 0.41%)</title><rect x="840.8" y="51.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.8" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (168 samples, 0.41%)</title><rect x="840.8" y="35.0" width="4.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="843.8" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (28 samples, 0.07%)</title><rect x="845.7" y="147.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (28 samples, 0.07%)</title><rect x="845.7" y="131.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="848.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (28 samples, 0.07%)</title><rect x="845.7" y="115.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="848.7" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (28 samples, 0.07%)</title><rect x="845.7" y="99.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="848.7" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (28 samples, 0.07%)</title><rect x="845.7" y="83.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="848.7" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (28 samples, 0.07%)</title><rect x="845.7" y="67.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="848.7" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (28 samples, 0.07%)</title><rect x="845.7" y="51.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="848.7" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (1,748 samples, 4.30%)</title><rect x="846.5" y="195.0" width="50.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.5" y="206.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,748 samples, 4.30%)</title><rect x="846.5" y="179.0" width="50.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="849.5" y="190.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (617 samples, 1.52%)</title><rect x="846.5" y="163.0" width="17.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="849.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (617 samples, 1.52%)</title><rect x="846.5" y="147.0" width="17.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="849.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (617 samples, 1.52%)</title><rect x="846.5" y="131.0" width="17.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (617 samples, 1.52%)</title><rect x="846.5" y="115.0" width="17.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="849.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (617 samples, 1.52%)</title><rect x="846.5" y="99.0" width="17.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="849.5" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (617 samples, 1.52%)</title><rect x="846.5" y="83.0" width="17.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="849.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,131 samples, 2.78%)</title><rect x="864.4" y="163.0" width="32.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="867.4" y="174.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,131 samples, 2.78%)</title><rect x="864.4" y="147.0" width="32.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="867.4" y="158.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,131 samples, 2.78%)</title><rect x="864.4" y="131.0" width="32.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="867.4" y="142.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,131 samples, 2.78%)</title><rect x="864.4" y="115.0" width="32.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="867.4" y="126.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,131 samples, 2.78%)</title><rect x="864.4" y="99.0" width="32.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="867.4" y="110.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,131 samples, 2.78%)</title><rect x="864.4" y="83.0" width="32.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.4" y="94.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,131 samples, 2.78%)</title><rect x="864.4" y="67.0" width="32.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="867.4" y="78.0">ja..</text>
</g>
<g>
<title>[worker-2 tid=25863] (617 samples, 1.52%)</title><rect x="897.3" y="355.0" width="17.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="900.3" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (617 samples, 1.52%)</title><rect x="897.3" y="339.0" width="17.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="900.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (617 samples, 1.52%)</title><rect x="897.3" y="323.0" width="17.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="900.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (617 samples, 1.52%)</title><rect x="897.3" y="307.0" width="17.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="900.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (242 samples, 0.60%)</title><rect x="897.3" y="291.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="900.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (242 samples, 0.60%)</title><rect x="897.3" y="275.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="900.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (66 samples, 0.16%)</title><rect x="897.3" y="259.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (66 samples, 0.16%)</title><rect x="897.3" y="243.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="900.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (66 samples, 0.16%)</title><rect x="897.3" y="227.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="900.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (66 samples, 0.16%)</title><rect x="897.3" y="211.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="900.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (66 samples, 0.16%)</title><rect x="897.3" y="195.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="900.3" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (66 samples, 0.16%)</title><rect x="897.3" y="179.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="900.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (176 samples, 0.43%)</title><rect x="899.2" y="259.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="902.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (176 samples, 0.43%)</title><rect x="899.2" y="243.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="902.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (176 samples, 0.43%)</title><rect x="899.2" y="227.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="902.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (176 samples, 0.43%)</title><rect x="899.2" y="211.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (176 samples, 0.43%)</title><rect x="899.2" y="195.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="902.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (176 samples, 0.43%)</title><rect x="899.2" y="179.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="902.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (176 samples, 0.43%)</title><rect x="899.2" y="163.0" width="5.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="902.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (375 samples, 0.92%)</title><rect x="904.3" y="291.0" width="10.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="907.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (375 samples, 0.92%)</title><rect x="904.3" y="275.0" width="10.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (161 samples, 0.40%)</title><rect x="904.3" y="259.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="907.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (161 samples, 0.40%)</title><rect x="904.3" y="243.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="907.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (161 samples, 0.40%)</title><rect x="904.3" y="227.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="907.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (161 samples, 0.40%)</title><rect x="904.3" y="211.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="907.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (161 samples, 0.40%)</title><rect x="904.3" y="195.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (161 samples, 0.40%)</title><rect x="904.3" y="179.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="907.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (161 samples, 0.40%)</title><rect x="904.3" y="163.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="907.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (161 samples, 0.40%)</title><rect x="904.3" y="147.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="907.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (161 samples, 0.40%)</title><rect x="904.3" y="131.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (161 samples, 0.40%)</title><rect x="904.3" y="115.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="907.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (161 samples, 0.40%)</title><rect x="904.3" y="99.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="907.3" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (161 samples, 0.40%)</title><rect x="904.3" y="83.0" width="4.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="907.3" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (214 samples, 0.53%)</title><rect x="908.9" y="259.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="911.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (214 samples, 0.53%)</title><rect x="908.9" y="243.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="911.9" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (214 samples, 0.53%)</title><rect x="908.9" y="227.0" width="6.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="911.9" y="238.0"></text>
</g>
<g>
<title>[worker-2 tid=25868] (632 samples, 1.55%)</title><rect x="915.2" y="355.0" width="18.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="918.2" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (632 samples, 1.55%)</title><rect x="915.2" y="339.0" width="18.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="918.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (632 samples, 1.55%)</title><rect x="915.2" y="323.0" width="18.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="918.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (632 samples, 1.55%)</title><rect x="915.2" y="307.0" width="18.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="918.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (360 samples, 0.89%)</title><rect x="915.2" y="291.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="918.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (360 samples, 0.89%)</title><rect x="915.2" y="275.0" width="10.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="918.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (103 samples, 0.25%)</title><rect x="915.2" y="259.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (103 samples, 0.25%)</title><rect x="915.2" y="243.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="918.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (103 samples, 0.25%)</title><rect x="915.2" y="227.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (103 samples, 0.25%)</title><rect x="915.2" y="211.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="918.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (103 samples, 0.25%)</title><rect x="915.2" y="195.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.2" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (103 samples, 0.25%)</title><rect x="915.2" y="179.0" width="2.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="918.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (257 samples, 0.63%)</title><rect x="918.1" y="259.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="921.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (257 samples, 0.63%)</title><rect x="918.1" y="243.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="921.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (257 samples, 0.63%)</title><rect x="918.1" y="227.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="921.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (257 samples, 0.63%)</title><rect x="918.1" y="211.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="921.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (257 samples, 0.63%)</title><rect x="918.1" y="195.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="921.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (257 samples, 0.63%)</title><rect x="918.1" y="179.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="921.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (257 samples, 0.63%)</title><rect x="918.1" y="163.0" width="7.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="921.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (272 samples, 0.67%)</title><rect x="925.6" y="291.0" width="7.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="928.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (272 samples, 0.67%)</title><rect x="925.6" y="275.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="928.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (136 samples, 0.33%)</title><rect x="925.6" y="259.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="928.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (136 samples, 0.33%)</title><rect x="925.6" y="243.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="928.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (136 samples, 0.33%)</title><rect x="925.6" y="227.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="928.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (136 samples, 0.33%)</title><rect x="925.6" y="211.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="928.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (136 samples, 0.33%)</title><rect x="925.6" y="195.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="928.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (136 samples, 0.33%)</title><rect x="925.6" y="179.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="928.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (136 samples, 0.33%)</title><rect x="925.6" y="163.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="928.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (136 samples, 0.33%)</title><rect x="925.6" y="147.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="928.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (136 samples, 0.33%)</title><rect x="925.6" y="131.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="928.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (136 samples, 0.33%)</title><rect x="925.6" y="115.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="928.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (136 samples, 0.33%)</title><rect x="925.6" y="99.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="928.6" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (136 samples, 0.33%)</title><rect x="925.6" y="83.0" width="3.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="928.6" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (136 samples, 0.33%)</title><rect x="929.5" y="259.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="932.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (136 samples, 0.33%)</title><rect x="929.5" y="243.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="932.5" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (136 samples, 0.33%)</title><rect x="929.5" y="227.0" width="4.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="932.5" y="238.0"></text>
</g>
<g>
<title>[worker-3 tid=25866] (593 samples, 1.46%)</title><rect x="933.5" y="355.0" width="17.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="936.5" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (593 samples, 1.46%)</title><rect x="933.5" y="339.0" width="17.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="936.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (593 samples, 1.46%)</title><rect x="933.5" y="323.0" width="17.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="936.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (593 samples, 1.46%)</title><rect x="933.5" y="307.0" width="17.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="936.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (253 samples, 0.62%)</title><rect x="933.5" y="291.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="936.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (253 samples, 0.62%)</title><rect x="933.5" y="275.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="936.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (81 samples, 0.20%)</title><rect x="933.5" y="259.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="936.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (81 samples, 0.20%)</title><rect x="933.5" y="243.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="936.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (81 samples, 0.20%)</title><rect x="933.5" y="227.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="936.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (81 samples, 0.20%)</title><rect x="933.5" y="211.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="936.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (81 samples, 0.20%)</title><rect x="933.5" y="195.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="936.5" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (81 samples, 0.20%)</title><rect x="933.5" y="179.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="936.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (172 samples, 0.42%)</title><rect x="935.8" y="259.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="938.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (172 samples, 0.42%)</title><rect x="935.8" y="243.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="938.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (172 samples, 0.42%)</title><rect x="935.8" y="227.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="938.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (172 samples, 0.42%)</title><rect x="935.8" y="211.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="938.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (172 samples, 0.42%)</title><rect x="935.8" y="195.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="938.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (172 samples, 0.42%)</title><rect x="935.8" y="179.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="938.8" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (172 samples, 0.42%)</title><rect x="935.8" y="163.0" width="5.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="938.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (340 samples, 0.84%)</title><rect x="940.8" y="291.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="943.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (340 samples, 0.84%)</title><rect x="940.8" y="275.0" width="9.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="943.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (160 samples, 0.39%)</title><rect x="940.8" y="259.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="943.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (160 samples, 0.39%)</title><rect x="940.8" y="243.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="943.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (160 samples, 0.39%)</title><rect x="940.8" y="227.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="943.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (160 samples, 0.39%)</title><rect x="940.8" y="211.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="943.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (160 samples, 0.39%)</title><rect x="940.8" y="195.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="943.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (159 samples, 0.39%)</title><rect x="940.8" y="179.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="943.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (159 samples, 0.39%)</title><rect x="940.8" y="163.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="943.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (159 samples, 0.39%)</title><rect x="940.8" y="147.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="943.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (159 samples, 0.39%)</title><rect x="940.8" y="131.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="943.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (159 samples, 0.39%)</title><rect x="940.8" y="115.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="943.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (159 samples, 0.39%)</title><rect x="940.8" y="99.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="943.8" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (159 samples, 0.39%)</title><rect x="940.8" y="83.0" width="4.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="943.8" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (180 samples, 0.44%)</title><rect x="945.5" y="259.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="948.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (180 samples, 0.44%)</title><rect x="945.5" y="243.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="948.5" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (180 samples, 0.44%)</title><rect x="945.5" y="227.0" width="5.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="948.5" y="238.0"></text>
</g>
<g>
<title>[worker-3 tid=25867] (620 samples, 1.52%)</title><rect x="950.7" y="355.0" width="18.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="953.7" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (620 samples, 1.52%)</title><rect x="950.7" y="339.0" width="18.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="953.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (620 samples, 1.52%)</title><rect x="950.7" y="323.0" width="18.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="953.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (620 samples, 1.52%)</title><rect x="950.7" y="307.0" width="18.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="953.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (328 samples, 0.81%)</title><rect x="950.7" y="291.0" width="9.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (328 samples, 0.81%)</title><rect x="950.7" y="275.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="953.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (81 samples, 0.20%)</title><rect x="950.7" y="259.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="953.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (81 samples, 0.20%)</title><rect x="950.7" y="243.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="953.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (81 samples, 0.20%)</title><rect x="950.7" y="227.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="953.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (81 samples, 0.20%)</title><rect x="950.7" y="211.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="953.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (81 samples, 0.20%)</title><rect x="950.7" y="195.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="953.7" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (81 samples, 0.20%)</title><rect x="950.7" y="179.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="953.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (247 samples, 0.61%)</title><rect x="953.0" y="259.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="956.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (247 samples, 0.61%)</title><rect x="953.0" y="243.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="956.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (247 samples, 0.61%)</title><rect x="953.0" y="227.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="956.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (247 samples, 0.61%)</title><rect x="953.0" y="211.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="956.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (247 samples, 0.61%)</title><rect x="953.0" y="195.0" width="7.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="956.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (247 samples, 0.61%)</title><rect x="953.0" y="179.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="956.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (247 samples, 0.61%)</title><rect x="953.0" y="163.0" width="7.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="956.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (292 samples, 0.72%)</title><rect x="960.2" y="291.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="963.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (292 samples, 0.72%)</title><rect x="960.2" y="275.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="963.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (159 samples, 0.39%)</title><rect x="960.2" y="259.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="963.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (159 samples, 0.39%)</title><rect x="960.2" y="243.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="963.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (159 samples, 0.39%)</title><rect x="960.2" y="227.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="963.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (159 samples, 0.39%)</title><rect x="960.2" y="211.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="963.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (159 samples, 0.39%)</title><rect x="960.2" y="195.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="963.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (159 samples, 0.39%)</title><rect x="960.2" y="179.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="963.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (159 samples, 0.39%)</title><rect x="960.2" y="163.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="963.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (159 samples, 0.39%)</title><rect x="960.2" y="147.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="963.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (159 samples, 0.39%)</title><rect x="960.2" y="131.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="963.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (159 samples, 0.39%)</title><rect x="960.2" y="115.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="963.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (159 samples, 0.39%)</title><rect x="960.2" y="99.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="963.2" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (159 samples, 0.39%)</title><rect x="960.2" y="83.0" width="4.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="963.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (133 samples, 0.33%)</title><rect x="964.8" y="259.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (133 samples, 0.33%)</title><rect x="964.8" y="243.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.8" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (133 samples, 0.33%)</title><rect x="964.8" y="227.0" width="3.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="967.8" y="238.0"></text>
</g>
<g>
<title>[worker-4 tid=25865] (638 samples, 1.57%)</title><rect x="968.7" y="355.0" width="18.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="971.7" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (638 samples, 1.57%)</title><rect x="968.7" y="339.0" width="18.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="971.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (638 samples, 1.57%)</title><rect x="968.7" y="323.0" width="18.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="971.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (638 samples, 1.57%)</title><rect x="968.7" y="307.0" width="18.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="971.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (257 samples, 0.63%)</title><rect x="968.7" y="291.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="971.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (257 samples, 0.63%)</title><rect x="968.7" y="275.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="971.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (66 samples, 0.16%)</title><rect x="968.7" y="259.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="971.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (66 samples, 0.16%)</title><rect x="968.7" y="243.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="971.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (66 samples, 0.16%)</title><rect x="968.7" y="227.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="971.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (66 samples, 0.16%)</title><rect x="968.7" y="211.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="971.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (66 samples, 0.16%)</title><rect x="968.7" y="195.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="971.7" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (66 samples, 0.16%)</title><rect x="968.7" y="179.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="971.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (191 samples, 0.47%)</title><rect x="970.6" y="259.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="973.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (191 samples, 0.47%)</title><rect x="970.6" y="243.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (191 samples, 0.47%)</title><rect x="970.6" y="227.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="973.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (191 samples, 0.47%)</title><rect x="970.6" y="211.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (191 samples, 0.47%)</title><rect x="970.6" y="195.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (191 samples, 0.47%)</title><rect x="970.6" y="179.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="973.6" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (191 samples, 0.47%)</title><rect x="970.6" y="163.0" width="5.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="973.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (381 samples, 0.94%)</title><rect x="976.1" y="291.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="979.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (381 samples, 0.94%)</title><rect x="976.1" y="275.0" width="11.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="979.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (171 samples, 0.42%)</title><rect x="976.1" y="259.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="979.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (171 samples, 0.42%)</title><rect x="976.1" y="243.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="979.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (171 samples, 0.42%)</title><rect x="976.1" y="227.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="979.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (171 samples, 0.42%)</title><rect x="976.1" y="211.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="979.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (171 samples, 0.42%)</title><rect x="976.1" y="195.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="979.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (171 samples, 0.42%)</title><rect x="976.1" y="179.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="979.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (171 samples, 0.42%)</title><rect x="976.1" y="163.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="979.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (171 samples, 0.42%)</title><rect x="976.1" y="147.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="979.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (171 samples, 0.42%)</title><rect x="976.1" y="131.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="979.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (171 samples, 0.42%)</title><rect x="976.1" y="115.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="979.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (171 samples, 0.42%)</title><rect x="976.1" y="99.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="979.1" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (171 samples, 0.42%)</title><rect x="976.1" y="83.0" width="5.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="979.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (210 samples, 0.52%)</title><rect x="981.1" y="259.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (210 samples, 0.52%)</title><rect x="981.1" y="243.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="984.1" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (210 samples, 0.52%)</title><rect x="981.1" y="227.0" width="6.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="984.1" y="238.0"></text>
</g>
<g>
<title>[worker-4 tid=25869] (648 samples, 1.59%)</title><rect x="987.2" y="355.0" width="18.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="990.2" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (648 samples, 1.59%)</title><rect x="987.2" y="339.0" width="18.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="990.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (648 samples, 1.59%)</title><rect x="987.2" y="323.0" width="18.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="990.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (648 samples, 1.59%)</title><rect x="987.2" y="307.0" width="18.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="990.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (319 samples, 0.78%)</title><rect x="987.2" y="291.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="990.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (319 samples, 0.78%)</title><rect x="987.2" y="275.0" width="9.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="990.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (84 samples, 0.21%)</title><rect x="987.2" y="259.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="990.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (84 samples, 0.21%)</title><rect x="987.2" y="243.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="990.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (84 samples, 0.21%)</title><rect x="987.2" y="227.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="990.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (84 samples, 0.21%)</title><rect x="987.2" y="211.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="990.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (84 samples, 0.21%)</title><rect x="987.2" y="195.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="990.2" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (84 samples, 0.21%)</title><rect x="987.2" y="179.0" width="2.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="990.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (235 samples, 0.58%)</title><rect x="989.6" y="259.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="992.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (235 samples, 0.58%)</title><rect x="989.6" y="243.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="992.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (235 samples, 0.58%)</title><rect x="989.6" y="227.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="992.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (235 samples, 0.58%)</title><rect x="989.6" y="211.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="992.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (235 samples, 0.58%)</title><rect x="989.6" y="195.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="992.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (235 samples, 0.58%)</title><rect x="989.6" y="179.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="992.6" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (235 samples, 0.58%)</title><rect x="989.6" y="163.0" width="6.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="992.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (329 samples, 0.81%)</title><rect x="996.5" y="291.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="999.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (329 samples, 0.81%)</title><rect x="996.5" y="275.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="999.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (162 samples, 0.40%)</title><rect x="996.5" y="259.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="999.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (162 samples, 0.40%)</title><rect x="996.5" y="243.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="999.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (162 samples, 0.40%)</title><rect x="996.5" y="227.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="999.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (162 samples, 0.40%)</title><rect x="996.5" y="211.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="999.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (162 samples, 0.40%)</title><rect x="996.5" y="195.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="999.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (162 samples, 0.40%)</title><rect x="996.5" y="179.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="999.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (162 samples, 0.40%)</title><rect x="996.5" y="163.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="999.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (162 samples, 0.40%)</title><rect x="996.5" y="147.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="999.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (162 samples, 0.40%)</title><rect x="996.5" y="131.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (162 samples, 0.40%)</title><rect x="996.5" y="115.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="999.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (162 samples, 0.40%)</title><rect x="996.5" y="99.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="999.5" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (162 samples, 0.40%)</title><rect x="996.5" y="83.0" width="4.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="999.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (167 samples, 0.41%)</title><rect x="1001.2" y="259.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1004.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (167 samples, 0.41%)</title><rect x="1001.2" y="243.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1004.2" y="254.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (167 samples, 0.41%)</title><rect x="1001.2" y="227.0" width="4.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1004.2" y="238.0"></text>
</g>
<g>
<title>[worker-6 tid=25879] (3,029 samples, 7.45%)</title><rect x="1006.0" y="355.0" width="87.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1009.0" y="366.0">[worker-6 ..</text>
</g>
<g>
<title>java/lang/Thread.run (3,029 samples, 7.45%)</title><rect x="1006.0" y="339.0" width="87.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1009.0" y="350.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,029 samples, 7.45%)</title><rect x="1006.0" y="323.0" width="87.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1009.0" y="334.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,029 samples, 7.45%)</title><rect x="1006.0" y="307.0" width="87.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1009.0" y="318.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (209 samples, 0.51%)</title><rect x="1006.0" y="291.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1009.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (209 samples, 0.51%)</title><rect x="1006.0" y="275.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1009.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (62 samples, 0.15%)</title><rect x="1006.0" y="259.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1009.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (62 samples, 0.15%)</title><rect x="1006.0" y="243.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1009.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (62 samples, 0.15%)</title><rect x="1006.0" y="227.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1009.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (62 samples, 0.15%)</title><rect x="1006.0" y="211.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1009.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (62 samples, 0.15%)</title><rect x="1006.0" y="195.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1009.0" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (62 samples, 0.15%)</title><rect x="1006.0" y="179.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1009.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (147 samples, 0.36%)</title><rect x="1007.8" y="259.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1010.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (147 samples, 0.36%)</title><rect x="1007.8" y="243.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1010.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (147 samples, 0.36%)</title><rect x="1007.8" y="227.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1010.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (147 samples, 0.36%)</title><rect x="1007.8" y="211.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1010.8" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (147 samples, 0.36%)</title><rect x="1007.8" y="195.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1010.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (147 samples, 0.36%)</title><rect x="1007.8" y="179.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1010.8" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (147 samples, 0.36%)</title><rect x="1007.8" y="163.0" width="4.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1010.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (2,820 samples, 6.93%)</title><rect x="1012.1" y="291.0" width="81.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1015.1" y="302.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (2,820 samples, 6.93%)</title><rect x="1012.1" y="275.0" width="81.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1015.1" y="286.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (2,817 samples, 6.93%)</title><rect x="1012.1" y="259.0" width="81.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1015.1" y="270.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (2,817 samples, 6.93%)</title><rect x="1012.1" y="243.0" width="81.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1015.1" y="254.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (2,817 samples, 6.93%)</title><rect x="1012.1" y="227.0" width="81.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1015.1" y="238.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (808 samples, 1.99%)</title><rect x="1012.1" y="211.0" width="23.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1015.1" y="222.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (808 samples, 1.99%)</title><rect x="1012.1" y="195.0" width="23.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1015.1" y="206.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (807 samples, 1.98%)</title><rect x="1012.1" y="179.0" width="23.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1015.1" y="190.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (807 samples, 1.98%)</title><rect x="1012.1" y="163.0" width="23.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1015.1" y="174.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (807 samples, 1.98%)</title><rect x="1012.1" y="147.0" width="23.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1015.1" y="158.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (807 samples, 1.98%)</title><rect x="1012.1" y="131.0" width="23.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1015.1" y="142.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (807 samples, 1.98%)</title><rect x="1012.1" y="115.0" width="23.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1015.1" y="126.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (807 samples, 1.98%)</title><rect x="1012.1" y="99.0" width="23.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1015.1" y="110.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (807 samples, 1.98%)</title><rect x="1012.1" y="83.0" width="23.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1015.1" y="94.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (2,009 samples, 4.94%)</title><rect x="1035.5" y="211.0" width="58.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1038.5" y="222.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (202 samples, 0.50%)</title><rect x="1035.5" y="195.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1038.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (202 samples, 0.50%)</title><rect x="1035.5" y="179.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1038.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (202 samples, 0.50%)</title><rect x="1035.5" y="163.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1038.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (162 samples, 0.40%)</title><rect x="1035.5" y="147.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1038.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (162 samples, 0.40%)</title><rect x="1035.5" y="131.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1038.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (162 samples, 0.40%)</title><rect x="1035.5" y="115.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1038.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (162 samples, 0.40%)</title><rect x="1035.5" y="99.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1038.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (162 samples, 0.40%)</title><rect x="1035.5" y="83.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1038.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (162 samples, 0.40%)</title><rect x="1035.5" y="67.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1038.5" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (162 samples, 0.40%)</title><rect x="1035.5" y="51.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1038.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (162 samples, 0.40%)</title><rect x="1035.5" y="35.0" width="4.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1038.5" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (40 samples, 0.10%)</title><rect x="1040.2" y="147.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1043.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (40 samples, 0.10%)</title><rect x="1040.2" y="131.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1043.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (40 samples, 0.10%)</title><rect x="1040.2" y="115.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1043.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (40 samples, 0.10%)</title><rect x="1040.2" y="99.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1043.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (40 samples, 0.10%)</title><rect x="1040.2" y="83.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1043.2" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (40 samples, 0.10%)</title><rect x="1040.2" y="67.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1043.2" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (40 samples, 0.10%)</title><rect x="1040.2" y="51.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1043.2" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (1,807 samples, 4.44%)</title><rect x="1041.4" y="195.0" width="52.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1044.4" y="206.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,807 samples, 4.44%)</title><rect x="1041.4" y="179.0" width="52.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1044.4" y="190.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (669 samples, 1.64%)</title><rect x="1041.4" y="163.0" width="19.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1044.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (669 samples, 1.64%)</title><rect x="1041.4" y="147.0" width="19.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1044.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (669 samples, 1.64%)</title><rect x="1041.4" y="131.0" width="19.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1044.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (669 samples, 1.64%)</title><rect x="1041.4" y="115.0" width="19.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1044.4" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (669 samples, 1.64%)</title><rect x="1041.4" y="99.0" width="19.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1044.4" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (669 samples, 1.64%)</title><rect x="1041.4" y="83.0" width="19.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1044.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,138 samples, 2.80%)</title><rect x="1060.8" y="163.0" width="33.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1063.8" y="174.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,138 samples, 2.80%)</title><rect x="1060.8" y="147.0" width="33.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1063.8" y="158.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,138 samples, 2.80%)</title><rect x="1060.8" y="131.0" width="33.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1063.8" y="142.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,138 samples, 2.80%)</title><rect x="1060.8" y="115.0" width="33.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1063.8" y="126.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,138 samples, 2.80%)</title><rect x="1060.8" y="99.0" width="33.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1063.8" y="110.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,138 samples, 2.80%)</title><rect x="1060.8" y="83.0" width="33.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1063.8" y="94.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,138 samples, 2.80%)</title><rect x="1060.8" y="67.0" width="33.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1063.8" y="78.0">ja..</text>
</g>
<g>
<title>[worker-7 tid=25885] (2,988 samples, 7.35%)</title><rect x="1093.9" y="355.0" width="86.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1096.9" y="366.0">[worker-7 ..</text>
</g>
<g>
<title>java/lang/Thread.run (2,988 samples, 7.35%)</title><rect x="1093.9" y="339.0" width="86.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1096.9" y="350.0">java/lang/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,988 samples, 7.35%)</title><rect x="1093.9" y="323.0" width="86.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1096.9" y="334.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,988 samples, 7.35%)</title><rect x="1093.9" y="307.0" width="86.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1096.9" y="318.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (199 samples, 0.49%)</title><rect x="1093.9" y="291.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1096.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (199 samples, 0.49%)</title><rect x="1093.9" y="275.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1096.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (59 samples, 0.15%)</title><rect x="1093.9" y="259.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1096.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (59 samples, 0.15%)</title><rect x="1093.9" y="243.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (59 samples, 0.15%)</title><rect x="1093.9" y="227.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1096.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (59 samples, 0.15%)</title><rect x="1093.9" y="211.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1096.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (59 samples, 0.15%)</title><rect x="1093.9" y="195.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1096.9" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (59 samples, 0.15%)</title><rect x="1093.9" y="179.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1096.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (140 samples, 0.34%)</title><rect x="1095.6" y="259.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (140 samples, 0.34%)</title><rect x="1095.6" y="243.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (140 samples, 0.34%)</title><rect x="1095.6" y="227.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1098.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (140 samples, 0.34%)</title><rect x="1095.6" y="211.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1098.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (140 samples, 0.34%)</title><rect x="1095.6" y="195.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1098.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (140 samples, 0.34%)</title><rect x="1095.6" y="179.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1098.6" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (140 samples, 0.34%)</title><rect x="1095.6" y="163.0" width="4.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1098.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (2,789 samples, 6.86%)</title><rect x="1099.7" y="291.0" width="80.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1102.7" y="302.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (2,789 samples, 6.86%)</title><rect x="1099.7" y="275.0" width="80.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1102.7" y="286.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (2,787 samples, 6.85%)</title><rect x="1099.7" y="259.0" width="80.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1102.7" y="270.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (2,787 samples, 6.85%)</title><rect x="1099.7" y="243.0" width="80.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1102.7" y="254.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (2,787 samples, 6.85%)</title><rect x="1099.7" y="227.0" width="80.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1102.7" y="238.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (699 samples, 1.72%)</title><rect x="1099.7" y="211.0" width="20.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1102.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (699 samples, 1.72%)</title><rect x="1099.7" y="195.0" width="20.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1102.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (699 samples, 1.72%)</title><rect x="1099.7" y="179.0" width="20.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1102.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (699 samples, 1.72%)</title><rect x="1099.7" y="163.0" width="20.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1102.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (699 samples, 1.72%)</title><rect x="1099.7" y="147.0" width="20.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1102.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (699 samples, 1.72%)</title><rect x="1099.7" y="131.0" width="20.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1102.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (699 samples, 1.72%)</title><rect x="1099.7" y="115.0" width="20.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1102.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (699 samples, 1.72%)</title><rect x="1099.7" y="99.0" width="20.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1102.7" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (699 samples, 1.72%)</title><rect x="1099.7" y="83.0" width="20.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1102.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (2,088 samples, 5.13%)</title><rect x="1119.9" y="211.0" width="60.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1122.9" y="222.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (208 samples, 0.51%)</title><rect x="1119.9" y="195.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1122.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (208 samples, 0.51%)</title><rect x="1119.9" y="179.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1122.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (208 samples, 0.51%)</title><rect x="1119.9" y="163.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1122.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (174 samples, 0.43%)</title><rect x="1119.9" y="147.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1122.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (174 samples, 0.43%)</title><rect x="1119.9" y="131.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1122.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (174 samples, 0.43%)</title><rect x="1119.9" y="115.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1122.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (174 samples, 0.43%)</title><rect x="1119.9" y="99.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1122.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (174 samples, 0.43%)</title><rect x="1119.9" y="83.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1122.9" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (174 samples, 0.43%)</title><rect x="1119.9" y="67.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1122.9" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (174 samples, 0.43%)</title><rect x="1119.9" y="51.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1122.9" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (174 samples, 0.43%)</title><rect x="1119.9" y="35.0" width="5.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1122.9" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (34 samples, 0.08%)</title><rect x="1125.0" y="147.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1128.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (34 samples, 0.08%)</title><rect x="1125.0" y="131.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1128.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (34 samples, 0.08%)</title><rect x="1125.0" y="115.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1128.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (34 samples, 0.08%)</title><rect x="1125.0" y="99.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1128.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (34 samples, 0.08%)</title><rect x="1125.0" y="83.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1128.0" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (34 samples, 0.08%)</title><rect x="1125.0" y="67.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1128.0" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (34 samples, 0.08%)</title><rect x="1125.0" y="51.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1128.0" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (1,880 samples, 4.62%)</title><rect x="1126.0" y="195.0" width="54.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1129.0" y="206.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,880 samples, 4.62%)</title><rect x="1126.0" y="179.0" width="54.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1129.0" y="190.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (690 samples, 1.70%)</title><rect x="1126.0" y="163.0" width="20.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (690 samples, 1.70%)</title><rect x="1126.0" y="147.0" width="20.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1129.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (690 samples, 1.70%)</title><rect x="1126.0" y="131.0" width="20.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (690 samples, 1.70%)</title><rect x="1126.0" y="115.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1129.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (690 samples, 1.70%)</title><rect x="1126.0" y="99.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1129.0" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (690 samples, 1.70%)</title><rect x="1126.0" y="83.0" width="20.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1129.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,190 samples, 2.93%)</title><rect x="1146.0" y="163.0" width="34.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1149.0" y="174.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,190 samples, 2.93%)</title><rect x="1146.0" y="147.0" width="34.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.0" y="158.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,190 samples, 2.93%)</title><rect x="1146.0" y="131.0" width="34.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1149.0" y="142.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,190 samples, 2.93%)</title><rect x="1146.0" y="115.0" width="34.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1149.0" y="126.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,190 samples, 2.93%)</title><rect x="1146.0" y="99.0" width="34.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1149.0" y="110.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,190 samples, 2.93%)</title><rect x="1146.0" y="83.0" width="34.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.0" y="94.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,190 samples, 2.93%)</title><rect x="1146.0" y="67.0" width="34.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1149.0" y="78.0">ja..</text>
</g>
<g>
<title>[worker-8 tid=26331] (236 samples, 0.58%)</title><rect x="1180.6" y="355.0" width="6.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1183.6" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (236 samples, 0.58%)</title><rect x="1180.6" y="339.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1183.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (236 samples, 0.58%)</title><rect x="1180.6" y="323.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1183.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (236 samples, 0.58%)</title><rect x="1180.6" y="307.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1183.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (22 samples, 0.05%)</title><rect x="1180.6" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1183.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (22 samples, 0.05%)</title><rect x="1180.6" y="275.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1183.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (18 samples, 0.04%)</title><rect x="1180.7" y="259.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1183.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (18 samples, 0.04%)</title><rect x="1180.7" y="243.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1183.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (18 samples, 0.04%)</title><rect x="1180.7" y="227.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1183.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (18 samples, 0.04%)</title><rect x="1180.7" y="211.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1183.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (18 samples, 0.04%)</title><rect x="1180.7" y="195.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1183.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (18 samples, 0.04%)</title><rect x="1180.7" y="179.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.7" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (18 samples, 0.04%)</title><rect x="1180.7" y="163.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1183.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (214 samples, 0.53%)</title><rect x="1181.2" y="291.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1184.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (214 samples, 0.53%)</title><rect x="1181.2" y="275.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1184.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (214 samples, 0.53%)</title><rect x="1181.2" y="259.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1184.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (214 samples, 0.53%)</title><rect x="1181.2" y="243.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1184.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (214 samples, 0.53%)</title><rect x="1181.2" y="227.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1184.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (61 samples, 0.15%)</title><rect x="1181.2" y="211.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1184.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (61 samples, 0.15%)</title><rect x="1181.2" y="195.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1184.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (61 samples, 0.15%)</title><rect x="1181.2" y="179.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1184.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (61 samples, 0.15%)</title><rect x="1181.2" y="163.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1184.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (61 samples, 0.15%)</title><rect x="1181.2" y="147.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1184.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (61 samples, 0.15%)</title><rect x="1181.2" y="131.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1184.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (61 samples, 0.15%)</title><rect x="1181.2" y="115.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1184.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (61 samples, 0.15%)</title><rect x="1181.2" y="99.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1184.2" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (61 samples, 0.15%)</title><rect x="1181.2" y="83.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1184.2" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (153 samples, 0.38%)</title><rect x="1183.0" y="211.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1186.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (23 samples, 0.06%)</title><rect x="1183.0" y="195.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1186.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (23 samples, 0.06%)</title><rect x="1183.0" y="179.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1186.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (23 samples, 0.06%)</title><rect x="1183.0" y="163.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1186.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (14 samples, 0.03%)</title><rect x="1183.0" y="147.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1186.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (14 samples, 0.03%)</title><rect x="1183.0" y="131.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1186.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (14 samples, 0.03%)</title><rect x="1183.0" y="115.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1186.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (14 samples, 0.03%)</title><rect x="1183.0" y="99.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1186.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (14 samples, 0.03%)</title><rect x="1183.0" y="83.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1186.0" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (14 samples, 0.03%)</title><rect x="1183.0" y="67.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1186.0" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (14 samples, 0.03%)</title><rect x="1183.0" y="51.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1186.0" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (14 samples, 0.03%)</title><rect x="1183.0" y="35.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1186.0" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (9 samples, 0.02%)</title><rect x="1183.4" y="147.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1186.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.02%)</title><rect x="1183.4" y="131.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1186.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (9 samples, 0.02%)</title><rect x="1183.4" y="115.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1186.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (9 samples, 0.02%)</title><rect x="1183.4" y="99.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1186.4" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.02%)</title><rect x="1183.4" y="83.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1186.4" y="94.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.02%)</title><rect x="1183.4" y="67.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1186.4" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (9 samples, 0.02%)</title><rect x="1183.4" y="51.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1186.4" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (130 samples, 0.32%)</title><rect x="1183.6" y="195.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1186.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (130 samples, 0.32%)</title><rect x="1183.6" y="179.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1186.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (46 samples, 0.11%)</title><rect x="1183.6" y="163.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1186.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (46 samples, 0.11%)</title><rect x="1183.6" y="147.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1186.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (46 samples, 0.11%)</title><rect x="1183.6" y="131.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1186.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (46 samples, 0.11%)</title><rect x="1183.6" y="115.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1186.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (46 samples, 0.11%)</title><rect x="1183.6" y="99.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1186.6" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (46 samples, 0.11%)</title><rect x="1183.6" y="83.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1186.6" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (84 samples, 0.21%)</title><rect x="1185.0" y="163.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1188.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (84 samples, 0.21%)</title><rect x="1185.0" y="147.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1188.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (84 samples, 0.21%)</title><rect x="1185.0" y="131.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1188.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (84 samples, 0.21%)</title><rect x="1185.0" y="115.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1188.0" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (84 samples, 0.21%)</title><rect x="1185.0" y="99.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1188.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (84 samples, 0.21%)</title><rect x="1185.0" y="83.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1188.0" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (84 samples, 0.21%)</title><rect x="1185.0" y="67.0" width="2.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1188.0" y="78.0"></text>
</g>
<g>
<title>[worker-9 tid=26333] (89 samples, 0.22%)</title><rect x="1187.4" y="355.0" width="2.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1190.4" y="366.0"></text>
</g>
<g>
<title>java/lang/Thread.run (89 samples, 0.22%)</title><rect x="1187.4" y="339.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1190.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (89 samples, 0.22%)</title><rect x="1187.4" y="323.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1190.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (89 samples, 0.22%)</title><rect x="1187.4" y="307.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1190.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (10 samples, 0.02%)</title><rect x="1187.4" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1190.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (10 samples, 0.02%)</title><rect x="1187.4" y="275.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1190.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (79 samples, 0.19%)</title><rect x="1187.7" y="291.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1190.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (79 samples, 0.19%)</title><rect x="1187.7" y="275.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1190.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (79 samples, 0.19%)</title><rect x="1187.7" y="259.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1190.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (79 samples, 0.19%)</title><rect x="1187.7" y="243.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1190.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (79 samples, 0.19%)</title><rect x="1187.7" y="227.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1190.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (28 samples, 0.07%)</title><rect x="1187.7" y="211.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1190.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (28 samples, 0.07%)</title><rect x="1187.7" y="195.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1190.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (28 samples, 0.07%)</title><rect x="1187.7" y="179.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1190.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (28 samples, 0.07%)</title><rect x="1187.7" y="163.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1190.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (28 samples, 0.07%)</title><rect x="1187.7" y="147.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1190.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (28 samples, 0.07%)</title><rect x="1187.7" y="131.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1190.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (28 samples, 0.07%)</title><rect x="1187.7" y="115.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1190.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (28 samples, 0.07%)</title><rect x="1187.7" y="99.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1190.7" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (28 samples, 0.07%)</title><rect x="1187.7" y="83.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1190.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (51 samples, 0.13%)</title><rect x="1188.5" y="211.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1191.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (11 samples, 0.03%)</title><rect x="1188.5" y="195.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1191.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.03%)</title><rect x="1188.5" y="179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.03%)</title><rect x="1188.5" y="163.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (9 samples, 0.02%)</title><rect x="1188.5" y="147.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1191.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (9 samples, 0.02%)</title><rect x="1188.5" y="131.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (9 samples, 0.02%)</title><rect x="1188.5" y="115.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (9 samples, 0.02%)</title><rect x="1188.5" y="99.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (9 samples, 0.02%)</title><rect x="1188.5" y="83.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1191.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.02%)</title><rect x="1188.5" y="67.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1191.5" y="78.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.02%)</title><rect x="1188.5" y="51.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1191.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (9 samples, 0.02%)</title><rect x="1188.5" y="35.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1191.5" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (40 samples, 0.10%)</title><rect x="1188.8" y="195.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (40 samples, 0.10%)</title><rect x="1188.8" y="179.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1191.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (21 samples, 0.05%)</title><rect x="1188.8" y="163.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1191.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (21 samples, 0.05%)</title><rect x="1188.8" y="147.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1191.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (21 samples, 0.05%)</title><rect x="1188.8" y="131.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1191.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (21 samples, 0.05%)</title><rect x="1188.8" y="115.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (21 samples, 0.05%)</title><rect x="1188.8" y="99.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1191.8" y="110.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (21 samples, 0.05%)</title><rect x="1188.8" y="83.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1191.8" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (19 samples, 0.05%)</title><rect x="1189.4" y="163.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1192.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (19 samples, 0.05%)</title><rect x="1189.4" y="147.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (19 samples, 0.05%)</title><rect x="1189.4" y="131.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (19 samples, 0.05%)</title><rect x="1189.4" y="115.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1192.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (19 samples, 0.05%)</title><rect x="1189.4" y="99.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1192.4" y="110.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (19 samples, 0.05%)</title><rect x="1189.4" y="83.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1192.4" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (19 samples, 0.05%)</title><rect x="1189.4" y="67.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1192.4" y="78.0"></text>
</g>
</g>
</svg>
