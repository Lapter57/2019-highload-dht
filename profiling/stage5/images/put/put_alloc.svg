<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="389"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="389"> </text>
<g id="frames">
<g>
<title>all (326,002 samples, 100.00%)</title><rect x="10.0" y="355.0" width="1180.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="366.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=25747] (8,874 samples, 2.72%)</title><rect x="10.0" y="339.0" width="32.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="350.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8,874 samples, 2.72%)</title><rect x="10.0" y="323.0" width="32.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="334.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (409 samples, 0.13%)</title><rect x="10.0" y="307.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (409 samples, 0.13%)</title><rect x="10.0" y="291.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (8,465 samples, 2.60%)</title><rect x="11.5" y="307.0" width="30.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.5" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8,465 samples, 2.60%)</title><rect x="11.5" y="291.0" width="30.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.5" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8,465 samples, 2.60%)</title><rect x="11.5" y="275.0" width="30.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.5" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,259 samples, 1.61%)</title><rect x="11.5" y="259.0" width="19.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,259 samples, 1.61%)</title><rect x="11.5" y="243.0" width="19.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.5" y="254.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4,981 samples, 1.53%)</title><rect x="11.5" y="227.0" width="18.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.5" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (535 samples, 0.16%)</title><rect x="11.5" y="211.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.5" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (535 samples, 0.16%)</title><rect x="11.5" y="195.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (535 samples, 0.16%)</title><rect x="11.5" y="179.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.5" y="190.0"></text>
</g>
<g>
<title>java.lang.String (245 samples, 0.08%)</title><rect x="11.5" y="163.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="14.5" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (290 samples, 0.09%)</title><rect x="12.4" y="163.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.4" y="174.0"></text>
</g>
<g>
<title>byte[] (290 samples, 0.09%)</title><rect x="12.4" y="147.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="15.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (4,446 samples, 1.36%)</title><rect x="13.4" y="211.0" width="16.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (209 samples, 0.06%)</title><rect x="13.4" y="195.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="16.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (209 samples, 0.06%)</title><rect x="13.4" y="179.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.get$Lambda (209 samples, 0.06%)</title><rect x="13.4" y="163.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="16.4" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$60 (209 samples, 0.06%)</title><rect x="13.4" y="147.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="16.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (228 samples, 0.07%)</title><rect x="14.2" y="195.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (110 samples, 0.03%)</title><rect x="14.2" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (110 samples, 0.03%)</title><rect x="14.2" y="163.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (110 samples, 0.03%)</title><rect x="14.2" y="147.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.2" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (110 samples, 0.03%)</title><rect x="14.2" y="131.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="17.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (118 samples, 0.04%)</title><rect x="14.6" y="179.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (118 samples, 0.04%)</title><rect x="14.6" y="163.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.6" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (118 samples, 0.04%)</title><rect x="14.6" y="147.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="17.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (2,166 samples, 0.66%)</title><rect x="15.0" y="195.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.0" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (2,166 samples, 0.66%)</title><rect x="15.0" y="179.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.0" y="190.0"></text>
</g>
<g>
<title>java.util.HashSet (73 samples, 0.02%)</title><rect x="15.0" y="163.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="18.0" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (441 samples, 0.14%)</title><rect x="15.3" y="163.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.3" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (146 samples, 0.04%)</title><rect x="15.3" y="147.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="18.3" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (295 samples, 0.09%)</title><rect x="15.8" y="147.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.8" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (236 samples, 0.07%)</title><rect x="15.8" y="131.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.8" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (236 samples, 0.07%)</title><rect x="15.8" y="115.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="18.8" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,341 samples, 0.41%)</title><rect x="16.9" y="163.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.9" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (268 samples, 0.08%)</title><rect x="16.9" y="147.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="19.9" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1,073 samples, 0.33%)</title><rect x="17.8" y="147.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="20.8" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (931 samples, 0.29%)</title><rect x="17.8" y="131.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.8" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (931 samples, 0.29%)</title><rect x="17.8" y="115.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.8" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (931 samples, 0.29%)</title><rect x="17.8" y="99.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.8" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (501 samples, 0.15%)</title><rect x="17.8" y="83.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.8" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (501 samples, 0.15%)</title><rect x="17.8" y="67.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="20.8" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (430 samples, 0.13%)</title><rect x="19.6" y="83.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.6" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (424 samples, 0.13%)</title><rect x="19.6" y="67.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="22.6" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (142 samples, 0.04%)</title><rect x="21.2" y="131.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="24.2" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (142 samples, 0.04%)</title><rect x="21.2" y="115.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.2" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (142 samples, 0.04%)</title><rect x="21.2" y="99.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.2" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (142 samples, 0.04%)</title><rect x="21.2" y="83.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="24.2" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (311 samples, 0.10%)</title><rect x="21.7" y="163.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.7" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (131 samples, 0.04%)</title><rect x="21.7" y="147.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="24.7" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (180 samples, 0.06%)</title><rect x="22.2" y="147.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.2" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (180 samples, 0.06%)</title><rect x="22.2" y="131.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="25.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,843 samples, 0.57%)</title><rect x="22.8" y="195.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (391 samples, 0.12%)</title><rect x="22.8" y="179.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (77 samples, 0.02%)</title><rect x="22.8" y="163.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.8" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (77 samples, 0.02%)</title><rect x="22.8" y="147.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="25.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (314 samples, 0.10%)</title><rect x="23.1" y="163.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="26.1" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (98 samples, 0.03%)</title><rect x="23.1" y="147.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="26.1" y="158.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (216 samples, 0.07%)</title><rect x="23.5" y="147.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="26.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1,318 samples, 0.40%)</title><rect x="24.3" y="179.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (543 samples, 0.17%)</title><rect x="24.3" y="163.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (543 samples, 0.17%)</title><rect x="24.3" y="147.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.3" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (543 samples, 0.17%)</title><rect x="24.3" y="131.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.3" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (543 samples, 0.17%)</title><rect x="24.3" y="115.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (543 samples, 0.17%)</title><rect x="24.3" y="99.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.3" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (543 samples, 0.17%)</title><rect x="24.3" y="83.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="27.3" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (543 samples, 0.17%)</title><rect x="24.3" y="67.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.3" y="78.0"></text>
</g>
<g>
<title>java.lang.String (303 samples, 0.09%)</title><rect x="24.3" y="51.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="27.3" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (240 samples, 0.07%)</title><rect x="25.4" y="51.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="28.4" y="62.0"></text>
</g>
<g>
<title>byte[] (240 samples, 0.07%)</title><rect x="25.4" y="35.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="28.4" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (249 samples, 0.08%)</title><rect x="26.2" y="163.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (249 samples, 0.08%)</title><rect x="26.2" y="147.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (249 samples, 0.08%)</title><rect x="26.2" y="131.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="29.2" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (249 samples, 0.08%)</title><rect x="26.2" y="115.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="29.2" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (70 samples, 0.02%)</title><rect x="27.1" y="163.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="30.1" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (371 samples, 0.11%)</title><rect x="27.4" y="163.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.4" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (371 samples, 0.11%)</title><rect x="27.4" y="147.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.4" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (371 samples, 0.11%)</title><rect x="27.4" y="131.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="30.4" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (371 samples, 0.11%)</title><rect x="27.4" y="115.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.4" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (371 samples, 0.11%)</title><rect x="27.4" y="99.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.4" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (371 samples, 0.11%)</title><rect x="27.4" y="83.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="30.4" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (85 samples, 0.03%)</title><rect x="28.7" y="163.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="31.7" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (85 samples, 0.03%)</title><rect x="28.7" y="147.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="31.7" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (134 samples, 0.04%)</title><rect x="29.0" y="179.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="32.0" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (278 samples, 0.09%)</title><rect x="29.5" y="227.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.5" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (278 samples, 0.09%)</title><rect x="29.5" y="211.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.5" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (278 samples, 0.09%)</title><rect x="29.5" y="195.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.5" y="206.0"></text>
</g>
<g>
<title>java.lang.String (134 samples, 0.04%)</title><rect x="29.5" y="179.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="32.5" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (144 samples, 0.04%)</title><rect x="30.0" y="179.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="33.0" y="190.0"></text>
</g>
<g>
<title>byte[] (144 samples, 0.04%)</title><rect x="30.0" y="163.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="33.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,526 samples, 0.47%)</title><rect x="30.5" y="259.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="33.5" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (214 samples, 0.07%)</title><rect x="30.5" y="243.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="33.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (400 samples, 0.12%)</title><rect x="31.3" y="243.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.3" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (398 samples, 0.12%)</title><rect x="31.3" y="227.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="34.3" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (912 samples, 0.28%)</title><rect x="32.7" y="243.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.7" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (912 samples, 0.28%)</title><rect x="32.7" y="227.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.7" y="238.0"></text>
</g>
<g>
<title>char[] (496 samples, 0.15%)</title><rect x="32.7" y="211.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="35.7" y="222.0"></text>
</g>
<g>
<title>java.lang.String (134 samples, 0.04%)</title><rect x="34.6" y="211.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="37.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (265 samples, 0.08%)</title><rect x="35.1" y="211.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="38.1" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (265 samples, 0.08%)</title><rect x="35.1" y="195.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="38.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (265 samples, 0.08%)</title><rect x="35.1" y="179.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="38.1" y="190.0"></text>
</g>
<g>
<title>byte[] (265 samples, 0.08%)</title><rect x="35.1" y="163.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="38.1" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (172 samples, 0.05%)</title><rect x="36.0" y="259.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="39.0" y="270.0"></text>
</g>
<g>
<title>byte[] (172 samples, 0.05%)</title><rect x="36.0" y="243.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="39.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (281 samples, 0.09%)</title><rect x="36.7" y="259.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.7" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (281 samples, 0.09%)</title><rect x="36.7" y="243.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (281 samples, 0.09%)</title><rect x="36.7" y="227.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="39.7" y="238.0"></text>
</g>
<g>
<title>java.lang.String (131 samples, 0.04%)</title><rect x="36.7" y="211.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="39.7" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (150 samples, 0.05%)</title><rect x="37.1" y="211.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.1" y="222.0"></text>
</g>
<g>
<title>byte[] (150 samples, 0.05%)</title><rect x="37.1" y="195.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="40.1" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,227 samples, 0.38%)</title><rect x="37.7" y="259.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.7" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,227 samples, 0.38%)</title><rect x="37.7" y="243.0" width="4.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="40.7" y="254.0"></text>
</g>
<g>
<title>char[] (576 samples, 0.18%)</title><rect x="37.7" y="227.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="40.7" y="238.0"></text>
</g>
<g>
<title>java.lang.String (281 samples, 0.09%)</title><rect x="39.8" y="227.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="42.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (369 samples, 0.11%)</title><rect x="40.8" y="227.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (369 samples, 0.11%)</title><rect x="40.8" y="211.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.8" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (369 samples, 0.11%)</title><rect x="40.8" y="195.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.8" y="206.0"></text>
</g>
<g>
<title>byte[] (369 samples, 0.11%)</title><rect x="40.8" y="179.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="43.8" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=25757] (8,781 samples, 2.69%)</title><rect x="42.1" y="339.0" width="31.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="45.1" y="350.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8,781 samples, 2.69%)</title><rect x="42.1" y="323.0" width="31.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.1" y="334.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (8,781 samples, 2.69%)</title><rect x="42.1" y="307.0" width="31.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.1" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8,781 samples, 2.69%)</title><rect x="42.1" y="291.0" width="31.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.1" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8,781 samples, 2.69%)</title><rect x="42.1" y="275.0" width="31.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.1" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,974 samples, 1.53%)</title><rect x="42.1" y="259.0" width="18.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,974 samples, 1.53%)</title><rect x="42.1" y="243.0" width="18.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.1" y="254.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4,706 samples, 1.44%)</title><rect x="42.1" y="227.0" width="17.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (492 samples, 0.15%)</title><rect x="42.1" y="211.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.1" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (492 samples, 0.15%)</title><rect x="42.1" y="195.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (492 samples, 0.15%)</title><rect x="42.1" y="179.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.1" y="190.0"></text>
</g>
<g>
<title>java.lang.String (242 samples, 0.07%)</title><rect x="42.1" y="163.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="45.1" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (250 samples, 0.08%)</title><rect x="43.0" y="163.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="46.0" y="174.0"></text>
</g>
<g>
<title>byte[] (250 samples, 0.08%)</title><rect x="43.0" y="147.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="46.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (4,214 samples, 1.29%)</title><rect x="43.9" y="211.0" width="15.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="46.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (168 samples, 0.05%)</title><rect x="43.9" y="195.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (168 samples, 0.05%)</title><rect x="43.9" y="179.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="46.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.get$Lambda (168 samples, 0.05%)</title><rect x="43.9" y="163.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.9" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$60 (168 samples, 0.05%)</title><rect x="43.9" y="147.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="46.9" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (192 samples, 0.06%)</title><rect x="44.5" y="195.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.5" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (192 samples, 0.06%)</title><rect x="44.5" y="179.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.5" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (192 samples, 0.06%)</title><rect x="44.5" y="163.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.5" y="174.0"></text>
</g>
<g>
<title>java.lang.String (118 samples, 0.04%)</title><rect x="44.5" y="147.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="47.5" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (74 samples, 0.02%)</title><rect x="44.9" y="147.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.9" y="158.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.02%)</title><rect x="44.9" y="131.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="47.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (200 samples, 0.06%)</title><rect x="45.2" y="195.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (98 samples, 0.03%)</title><rect x="45.2" y="179.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (98 samples, 0.03%)</title><rect x="45.2" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (98 samples, 0.03%)</title><rect x="45.2" y="147.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.2" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (98 samples, 0.03%)</title><rect x="45.2" y="131.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="48.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (102 samples, 0.03%)</title><rect x="45.6" y="179.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (102 samples, 0.03%)</title><rect x="45.6" y="163.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.6" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (101 samples, 0.03%)</title><rect x="45.6" y="147.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="48.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (2,002 samples, 0.61%)</title><rect x="45.9" y="195.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.9" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (2,002 samples, 0.61%)</title><rect x="45.9" y="179.0" width="7.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.9" y="190.0"></text>
</g>
<g>
<title>java.util.HashSet (84 samples, 0.03%)</title><rect x="45.9" y="163.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="48.9" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (396 samples, 0.12%)</title><rect x="46.2" y="163.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="49.2" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (153 samples, 0.05%)</title><rect x="46.2" y="147.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="49.2" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (243 samples, 0.07%)</title><rect x="46.8" y="147.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.8" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (170 samples, 0.05%)</title><rect x="46.8" y="131.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.8" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (170 samples, 0.05%)</title><rect x="46.8" y="115.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="49.8" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (73 samples, 0.02%)</title><rect x="47.4" y="131.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="50.4" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (73 samples, 0.02%)</title><rect x="47.4" y="115.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="50.4" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,207 samples, 0.37%)</title><rect x="47.7" y="163.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="50.7" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (206 samples, 0.06%)</title><rect x="47.7" y="147.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="50.7" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1,001 samples, 0.31%)</title><rect x="48.4" y="147.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="51.4" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (857 samples, 0.26%)</title><rect x="48.4" y="131.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.4" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (857 samples, 0.26%)</title><rect x="48.4" y="115.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="51.4" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (857 samples, 0.26%)</title><rect x="48.4" y="99.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.4" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (456 samples, 0.14%)</title><rect x="48.4" y="83.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="51.4" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (456 samples, 0.14%)</title><rect x="48.4" y="67.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="51.4" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (401 samples, 0.12%)</title><rect x="50.1" y="83.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.1" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (397 samples, 0.12%)</title><rect x="50.1" y="67.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="53.1" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (144 samples, 0.04%)</title><rect x="51.5" y="131.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.5" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (144 samples, 0.04%)</title><rect x="51.5" y="115.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.5" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (144 samples, 0.04%)</title><rect x="51.5" y="99.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="54.5" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (144 samples, 0.04%)</title><rect x="51.5" y="83.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="54.5" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (315 samples, 0.10%)</title><rect x="52.0" y="163.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="55.0" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (137 samples, 0.04%)</title><rect x="52.0" y="147.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="55.0" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (178 samples, 0.05%)</title><rect x="52.5" y="147.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="55.5" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (178 samples, 0.05%)</title><rect x="52.5" y="131.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="55.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,652 samples, 0.51%)</title><rect x="53.2" y="195.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.2" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (304 samples, 0.09%)</title><rect x="53.2" y="179.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (235 samples, 0.07%)</title><rect x="53.4" y="163.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.4" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (73 samples, 0.02%)</title><rect x="53.4" y="147.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="56.4" y="158.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (162 samples, 0.05%)</title><rect x="53.7" y="147.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="56.7" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1,231 samples, 0.38%)</title><rect x="54.3" y="179.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (460 samples, 0.14%)</title><rect x="54.3" y="163.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (460 samples, 0.14%)</title><rect x="54.3" y="147.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.3" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (460 samples, 0.14%)</title><rect x="54.3" y="131.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="57.3" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (460 samples, 0.14%)</title><rect x="54.3" y="115.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (460 samples, 0.14%)</title><rect x="54.3" y="99.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.3" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (460 samples, 0.14%)</title><rect x="54.3" y="83.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.3" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (460 samples, 0.14%)</title><rect x="54.3" y="67.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.3" y="78.0"></text>
</g>
<g>
<title>java.lang.String (240 samples, 0.07%)</title><rect x="54.3" y="51.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="57.3" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (220 samples, 0.07%)</title><rect x="55.1" y="51.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="58.1" y="62.0"></text>
</g>
<g>
<title>byte[] (220 samples, 0.07%)</title><rect x="55.1" y="35.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="58.1" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (229 samples, 0.07%)</title><rect x="55.9" y="163.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="58.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (229 samples, 0.07%)</title><rect x="55.9" y="147.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="58.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (229 samples, 0.07%)</title><rect x="55.9" y="131.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="58.9" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (229 samples, 0.07%)</title><rect x="55.9" y="115.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="58.9" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (133 samples, 0.04%)</title><rect x="56.8" y="163.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="59.8" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (284 samples, 0.09%)</title><rect x="57.3" y="163.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="60.3" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (284 samples, 0.09%)</title><rect x="57.3" y="147.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="60.3" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (284 samples, 0.09%)</title><rect x="57.3" y="131.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.3" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (284 samples, 0.09%)</title><rect x="57.3" y="115.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.3" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (284 samples, 0.09%)</title><rect x="57.3" y="99.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="60.3" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (284 samples, 0.09%)</title><rect x="57.3" y="83.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="60.3" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (125 samples, 0.04%)</title><rect x="58.3" y="163.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.3" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (125 samples, 0.04%)</title><rect x="58.3" y="147.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="61.3" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (117 samples, 0.04%)</title><rect x="58.7" y="179.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="61.7" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (268 samples, 0.08%)</title><rect x="59.2" y="227.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (268 samples, 0.08%)</title><rect x="59.2" y="211.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.2" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (268 samples, 0.08%)</title><rect x="59.2" y="195.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.2" y="206.0"></text>
</g>
<g>
<title>java.lang.String (119 samples, 0.04%)</title><rect x="59.2" y="179.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="62.2" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (149 samples, 0.05%)</title><rect x="59.6" y="179.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.6" y="190.0"></text>
</g>
<g>
<title>byte[] (149 samples, 0.05%)</title><rect x="59.6" y="163.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="62.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,547 samples, 0.47%)</title><rect x="60.1" y="259.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.1" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (179 samples, 0.05%)</title><rect x="60.1" y="243.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="63.1" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (361 samples, 0.11%)</title><rect x="60.8" y="243.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="63.8" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (356 samples, 0.11%)</title><rect x="60.8" y="227.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="63.8" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,007 samples, 0.31%)</title><rect x="62.1" y="243.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.1" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,007 samples, 0.31%)</title><rect x="62.1" y="227.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.1" y="238.0"></text>
</g>
<g>
<title>char[] (581 samples, 0.18%)</title><rect x="62.1" y="211.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="65.1" y="222.0"></text>
</g>
<g>
<title>java.lang.String (123 samples, 0.04%)</title><rect x="64.2" y="211.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="67.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (289 samples, 0.09%)</title><rect x="64.7" y="211.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (289 samples, 0.09%)</title><rect x="64.7" y="195.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (289 samples, 0.09%)</title><rect x="64.7" y="179.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.7" y="190.0"></text>
</g>
<g>
<title>byte[] (289 samples, 0.09%)</title><rect x="64.7" y="163.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="67.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (143 samples, 0.04%)</title><rect x="65.7" y="259.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.7" y="270.0"></text>
</g>
<g>
<title>byte[] (143 samples, 0.04%)</title><rect x="65.7" y="243.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="68.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (256 samples, 0.08%)</title><rect x="66.2" y="259.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.2" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (256 samples, 0.08%)</title><rect x="66.2" y="243.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="69.2" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (256 samples, 0.08%)</title><rect x="66.2" y="227.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.2" y="238.0"></text>
</g>
<g>
<title>java.lang.String (119 samples, 0.04%)</title><rect x="66.2" y="211.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="69.2" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (137 samples, 0.04%)</title><rect x="66.7" y="211.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.7" y="222.0"></text>
</g>
<g>
<title>byte[] (137 samples, 0.04%)</title><rect x="66.7" y="195.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="69.7" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,861 samples, 0.57%)</title><rect x="67.2" y="259.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="70.2" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,861 samples, 0.57%)</title><rect x="67.2" y="243.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.2" y="254.0"></text>
</g>
<g>
<title>char[] (835 samples, 0.26%)</title><rect x="67.2" y="227.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="70.2" y="238.0"></text>
</g>
<g>
<title>java.lang.String (421 samples, 0.13%)</title><rect x="70.2" y="227.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="73.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (605 samples, 0.19%)</title><rect x="71.7" y="227.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.7" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (605 samples, 0.19%)</title><rect x="71.7" y="211.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.7" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (605 samples, 0.19%)</title><rect x="71.7" y="195.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="74.7" y="206.0"></text>
</g>
<g>
<title>byte[] (605 samples, 0.19%)</title><rect x="71.7" y="179.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="74.7" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=25763] (8,204 samples, 2.52%)</title><rect x="73.9" y="339.0" width="29.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="76.9" y="350.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8,204 samples, 2.52%)</title><rect x="73.9" y="323.0" width="29.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.9" y="334.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (8,204 samples, 2.52%)</title><rect x="73.9" y="307.0" width="29.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.9" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8,204 samples, 2.52%)</title><rect x="73.9" y="291.0" width="29.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.9" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8,204 samples, 2.52%)</title><rect x="73.9" y="275.0" width="29.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.9" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,544 samples, 1.39%)</title><rect x="73.9" y="259.0" width="16.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,544 samples, 1.39%)</title><rect x="73.9" y="243.0" width="16.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="76.9" y="254.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4,303 samples, 1.32%)</title><rect x="73.9" y="227.0" width="15.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (432 samples, 0.13%)</title><rect x="73.9" y="211.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (432 samples, 0.13%)</title><rect x="73.9" y="195.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (432 samples, 0.13%)</title><rect x="73.9" y="179.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String (225 samples, 0.07%)</title><rect x="73.9" y="163.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="76.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (207 samples, 0.06%)</title><rect x="74.7" y="163.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.7" y="174.0"></text>
</g>
<g>
<title>byte[] (207 samples, 0.06%)</title><rect x="74.7" y="147.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="77.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (3,871 samples, 1.19%)</title><rect x="75.5" y="211.0" width="14.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (123 samples, 0.04%)</title><rect x="75.5" y="195.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (123 samples, 0.04%)</title><rect x="75.5" y="179.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.get$Lambda (123 samples, 0.04%)</title><rect x="75.5" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="78.5" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$60 (123 samples, 0.04%)</title><rect x="75.5" y="147.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="78.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (196 samples, 0.06%)</title><rect x="75.9" y="195.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.9" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (196 samples, 0.06%)</title><rect x="75.9" y="179.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.9" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (196 samples, 0.06%)</title><rect x="75.9" y="163.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.9" y="174.0"></text>
</g>
<g>
<title>java.lang.String (122 samples, 0.04%)</title><rect x="75.9" y="147.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="78.9" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (74 samples, 0.02%)</title><rect x="76.4" y="147.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.4" y="158.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.02%)</title><rect x="76.4" y="131.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="79.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (195 samples, 0.06%)</title><rect x="76.6" y="195.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (96 samples, 0.03%)</title><rect x="76.6" y="179.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (96 samples, 0.03%)</title><rect x="76.6" y="163.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="79.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (96 samples, 0.03%)</title><rect x="76.6" y="147.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.6" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (96 samples, 0.03%)</title><rect x="76.6" y="131.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="79.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (99 samples, 0.03%)</title><rect x="77.0" y="179.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (99 samples, 0.03%)</title><rect x="77.0" y="163.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="80.0" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (99 samples, 0.03%)</title><rect x="77.0" y="147.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="80.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (1,858 samples, 0.57%)</title><rect x="77.3" y="195.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.3" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (1,858 samples, 0.57%)</title><rect x="77.3" y="179.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.3" y="190.0"></text>
</g>
<g>
<title>java.util.HashSet (72 samples, 0.02%)</title><rect x="77.3" y="163.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="80.3" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (398 samples, 0.12%)</title><rect x="77.6" y="163.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.6" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (136 samples, 0.04%)</title><rect x="77.6" y="147.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="80.6" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (262 samples, 0.08%)</title><rect x="78.1" y="147.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.1" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (204 samples, 0.06%)</title><rect x="78.1" y="131.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.1" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (204 samples, 0.06%)</title><rect x="78.1" y="115.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="81.1" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,130 samples, 0.35%)</title><rect x="79.0" y="163.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="82.0" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (219 samples, 0.07%)</title><rect x="79.0" y="147.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="82.0" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (911 samples, 0.28%)</title><rect x="79.8" y="147.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.8" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (783 samples, 0.24%)</title><rect x="79.8" y="131.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.8" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (783 samples, 0.24%)</title><rect x="79.8" y="115.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.8" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (783 samples, 0.24%)</title><rect x="79.8" y="99.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.8" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (456 samples, 0.14%)</title><rect x="79.8" y="83.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.8" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (456 samples, 0.14%)</title><rect x="79.8" y="67.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="82.8" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (327 samples, 0.10%)</title><rect x="81.5" y="83.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.5" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (323 samples, 0.10%)</title><rect x="81.5" y="67.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="84.5" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (128 samples, 0.04%)</title><rect x="82.7" y="131.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="85.7" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (128 samples, 0.04%)</title><rect x="82.7" y="115.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="85.7" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (128 samples, 0.04%)</title><rect x="82.7" y="99.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.7" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (128 samples, 0.04%)</title><rect x="82.7" y="83.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="85.7" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (258 samples, 0.08%)</title><rect x="83.1" y="163.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="86.1" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (113 samples, 0.03%)</title><rect x="83.1" y="147.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="86.1" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (145 samples, 0.04%)</title><rect x="83.5" y="147.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.5" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (145 samples, 0.04%)</title><rect x="83.5" y="131.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="86.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,499 samples, 0.46%)</title><rect x="84.1" y="195.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.1" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (301 samples, 0.09%)</title><rect x="84.1" y="179.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (72 samples, 0.02%)</title><rect x="84.1" y="163.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.1" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (72 samples, 0.02%)</title><rect x="84.1" y="147.0" width="0.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="87.1" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (229 samples, 0.07%)</title><rect x="84.3" y="163.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.3" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (81 samples, 0.02%)</title><rect x="84.3" y="147.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="87.3" y="158.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (148 samples, 0.05%)</title><rect x="84.6" y="147.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="87.6" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1,086 samples, 0.33%)</title><rect x="85.1" y="179.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="88.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (424 samples, 0.13%)</title><rect x="85.1" y="163.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="88.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (424 samples, 0.13%)</title><rect x="85.1" y="147.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="88.1" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (424 samples, 0.13%)</title><rect x="85.1" y="131.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.1" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (424 samples, 0.13%)</title><rect x="85.1" y="115.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="88.1" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (424 samples, 0.13%)</title><rect x="85.1" y="99.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="88.1" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (424 samples, 0.13%)</title><rect x="85.1" y="83.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="88.1" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (424 samples, 0.13%)</title><rect x="85.1" y="67.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.1" y="78.0"></text>
</g>
<g>
<title>java.lang.String (214 samples, 0.07%)</title><rect x="85.1" y="51.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="88.1" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (210 samples, 0.06%)</title><rect x="85.9" y="51.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.9" y="62.0"></text>
</g>
<g>
<title>byte[] (210 samples, 0.06%)</title><rect x="85.9" y="35.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="88.9" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (194 samples, 0.06%)</title><rect x="86.7" y="163.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (194 samples, 0.06%)</title><rect x="86.7" y="147.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.7" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (194 samples, 0.06%)</title><rect x="86.7" y="131.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="89.7" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (194 samples, 0.06%)</title><rect x="86.7" y="115.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="89.7" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (120 samples, 0.04%)</title><rect x="87.4" y="163.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="90.4" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (229 samples, 0.07%)</title><rect x="87.8" y="163.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="90.8" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (229 samples, 0.07%)</title><rect x="87.8" y="147.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.8" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (229 samples, 0.07%)</title><rect x="87.8" y="131.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.8" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (229 samples, 0.07%)</title><rect x="87.8" y="115.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.8" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (229 samples, 0.07%)</title><rect x="87.8" y="99.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.8" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (225 samples, 0.07%)</title><rect x="87.8" y="83.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="90.8" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (119 samples, 0.04%)</title><rect x="88.6" y="163.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="91.6" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (119 samples, 0.04%)</title><rect x="88.6" y="147.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="91.6" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (112 samples, 0.03%)</title><rect x="89.1" y="179.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="92.1" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (241 samples, 0.07%)</title><rect x="89.5" y="227.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.5" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (241 samples, 0.07%)</title><rect x="89.5" y="211.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.5" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (241 samples, 0.07%)</title><rect x="89.5" y="195.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.5" y="206.0"></text>
</g>
<g>
<title>java.lang.String (102 samples, 0.03%)</title><rect x="89.5" y="179.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="92.5" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (139 samples, 0.04%)</title><rect x="89.9" y="179.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="92.9" y="190.0"></text>
</g>
<g>
<title>byte[] (139 samples, 0.04%)</title><rect x="89.9" y="163.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="92.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,434 samples, 0.44%)</title><rect x="90.4" y="259.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.4" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (186 samples, 0.06%)</title><rect x="90.4" y="243.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="93.4" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (366 samples, 0.11%)</title><rect x="91.0" y="243.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.0" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (357 samples, 0.11%)</title><rect x="91.0" y="227.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="94.0" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (882 samples, 0.27%)</title><rect x="92.4" y="243.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="95.4" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (882 samples, 0.27%)</title><rect x="92.4" y="227.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.4" y="238.0"></text>
</g>
<g>
<title>char[] (511 samples, 0.16%)</title><rect x="92.4" y="211.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="95.4" y="222.0"></text>
</g>
<g>
<title>java.lang.String (98 samples, 0.03%)</title><rect x="94.2" y="211.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="97.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (262 samples, 0.08%)</title><rect x="94.6" y="211.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="97.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (262 samples, 0.08%)</title><rect x="94.6" y="195.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (262 samples, 0.08%)</title><rect x="94.6" y="179.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="97.6" y="190.0"></text>
</g>
<g>
<title>byte[] (261 samples, 0.08%)</title><rect x="94.6" y="163.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="97.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (123 samples, 0.04%)</title><rect x="95.5" y="259.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="98.5" y="270.0"></text>
</g>
<g>
<title>byte[] (123 samples, 0.04%)</title><rect x="95.5" y="243.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="98.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (232 samples, 0.07%)</title><rect x="96.0" y="259.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.0" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (232 samples, 0.07%)</title><rect x="96.0" y="243.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="99.0" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (232 samples, 0.07%)</title><rect x="96.0" y="227.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.0" y="238.0"></text>
</g>
<g>
<title>java.lang.String (109 samples, 0.03%)</title><rect x="96.0" y="211.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="99.0" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (123 samples, 0.04%)</title><rect x="96.4" y="211.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.4" y="222.0"></text>
</g>
<g>
<title>byte[] (123 samples, 0.04%)</title><rect x="96.4" y="195.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="99.4" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,871 samples, 0.57%)</title><rect x="96.8" y="259.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="99.8" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,871 samples, 0.57%)</title><rect x="96.8" y="243.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.8" y="254.0"></text>
</g>
<g>
<title>char[] (893 samples, 0.27%)</title><rect x="96.8" y="227.0" width="3.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="99.8" y="238.0"></text>
</g>
<g>
<title>java.lang.String (392 samples, 0.12%)</title><rect x="100.1" y="227.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="103.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (582 samples, 0.18%)</title><rect x="101.5" y="227.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.5" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (582 samples, 0.18%)</title><rect x="101.5" y="211.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.5" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (582 samples, 0.18%)</title><rect x="101.5" y="195.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.5" y="206.0"></text>
</g>
<g>
<title>byte[] (582 samples, 0.18%)</title><rect x="101.5" y="179.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="104.5" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25748] (9,295 samples, 2.85%)</title><rect x="103.6" y="339.0" width="33.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="106.6" y="350.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9,295 samples, 2.85%)</title><rect x="103.6" y="323.0" width="33.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.6" y="334.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (9,295 samples, 2.85%)</title><rect x="103.6" y="307.0" width="33.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.6" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9,295 samples, 2.85%)</title><rect x="103.6" y="291.0" width="33.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.6" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9,295 samples, 2.85%)</title><rect x="103.6" y="275.0" width="33.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="106.6" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,678 samples, 1.74%)</title><rect x="103.6" y="259.0" width="20.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.6" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,678 samples, 1.74%)</title><rect x="103.6" y="243.0" width="20.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.6" y="254.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (5,351 samples, 1.64%)</title><rect x="103.6" y="227.0" width="19.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="106.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (596 samples, 0.18%)</title><rect x="103.6" y="211.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="106.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (596 samples, 0.18%)</title><rect x="103.6" y="195.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (596 samples, 0.18%)</title><rect x="103.6" y="179.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="106.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String (263 samples, 0.08%)</title><rect x="103.6" y="163.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="106.6" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (333 samples, 0.10%)</title><rect x="104.6" y="163.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="107.6" y="174.0"></text>
</g>
<g>
<title>byte[] (333 samples, 0.10%)</title><rect x="104.6" y="147.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="107.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (4,755 samples, 1.46%)</title><rect x="105.8" y="211.0" width="17.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="108.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (169 samples, 0.05%)</title><rect x="105.8" y="195.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (169 samples, 0.05%)</title><rect x="105.8" y="179.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="108.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.get$Lambda (169 samples, 0.05%)</title><rect x="105.8" y="163.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="108.8" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$60 (169 samples, 0.05%)</title><rect x="105.8" y="147.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="108.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (218 samples, 0.07%)</title><rect x="106.4" y="195.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="109.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (86 samples, 0.03%)</title><rect x="106.4" y="179.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (86 samples, 0.03%)</title><rect x="106.4" y="163.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="109.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (86 samples, 0.03%)</title><rect x="106.4" y="147.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="109.4" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (86 samples, 0.03%)</title><rect x="106.4" y="131.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="109.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (132 samples, 0.04%)</title><rect x="106.7" y="179.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="109.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (132 samples, 0.04%)</title><rect x="106.7" y="163.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.7" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (132 samples, 0.04%)</title><rect x="106.7" y="147.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="109.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (2,442 samples, 0.75%)</title><rect x="107.2" y="195.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="110.2" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (2,442 samples, 0.75%)</title><rect x="107.2" y="179.0" width="8.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="110.2" y="190.0"></text>
</g>
<g>
<title>java.util.HashSet (84 samples, 0.03%)</title><rect x="107.2" y="163.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="110.2" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (470 samples, 0.14%)</title><rect x="107.5" y="163.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.5" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (151 samples, 0.05%)</title><rect x="107.5" y="147.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="110.5" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (319 samples, 0.10%)</title><rect x="108.0" y="147.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.0" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (232 samples, 0.07%)</title><rect x="108.0" y="131.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.0" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (232 samples, 0.07%)</title><rect x="108.0" y="115.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="111.0" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (87 samples, 0.03%)</title><rect x="108.9" y="131.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="111.9" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (87 samples, 0.03%)</title><rect x="108.9" y="115.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="111.9" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,543 samples, 0.47%)</title><rect x="109.2" y="163.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.2" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (247 samples, 0.08%)</title><rect x="109.2" y="147.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="112.2" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1,296 samples, 0.40%)</title><rect x="110.1" y="147.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="113.1" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1,117 samples, 0.34%)</title><rect x="110.1" y="131.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.1" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1,117 samples, 0.34%)</title><rect x="110.1" y="115.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.1" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1,117 samples, 0.34%)</title><rect x="110.1" y="99.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="113.1" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (594 samples, 0.18%)</title><rect x="110.1" y="83.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.1" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (594 samples, 0.18%)</title><rect x="110.1" y="67.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="113.1" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (523 samples, 0.16%)</title><rect x="112.2" y="83.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.2" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (494 samples, 0.15%)</title><rect x="112.2" y="67.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="115.2" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (179 samples, 0.05%)</title><rect x="114.1" y="131.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.1" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (179 samples, 0.05%)</title><rect x="114.1" y="115.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="117.1" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (179 samples, 0.05%)</title><rect x="114.1" y="99.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.1" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (179 samples, 0.05%)</title><rect x="114.1" y="83.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="117.1" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (345 samples, 0.11%)</title><rect x="114.8" y="163.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.8" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (135 samples, 0.04%)</title><rect x="114.8" y="147.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="117.8" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (210 samples, 0.06%)</title><rect x="115.2" y="147.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.2" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (210 samples, 0.06%)</title><rect x="115.2" y="131.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="118.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,926 samples, 0.59%)</title><rect x="116.0" y="195.0" width="7.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (407 samples, 0.12%)</title><rect x="116.0" y="179.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="119.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (100 samples, 0.03%)</title><rect x="116.0" y="163.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="119.0" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (100 samples, 0.03%)</title><rect x="116.0" y="147.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="119.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (307 samples, 0.09%)</title><rect x="116.4" y="163.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="119.4" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (102 samples, 0.03%)</title><rect x="116.4" y="147.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="119.4" y="158.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (205 samples, 0.06%)</title><rect x="116.7" y="147.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="119.7" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1,434 samples, 0.44%)</title><rect x="117.5" y="179.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="120.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (518 samples, 0.16%)</title><rect x="117.5" y="163.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="120.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (518 samples, 0.16%)</title><rect x="117.5" y="147.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="120.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (518 samples, 0.16%)</title><rect x="117.5" y="131.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="120.5" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (518 samples, 0.16%)</title><rect x="117.5" y="115.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.5" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (518 samples, 0.16%)</title><rect x="117.5" y="99.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.5" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (518 samples, 0.16%)</title><rect x="117.5" y="83.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.5" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (518 samples, 0.16%)</title><rect x="117.5" y="67.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="120.5" y="78.0"></text>
</g>
<g>
<title>java.lang.String (240 samples, 0.07%)</title><rect x="117.5" y="51.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="120.5" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (278 samples, 0.09%)</title><rect x="118.3" y="51.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.3" y="62.0"></text>
</g>
<g>
<title>byte[] (278 samples, 0.09%)</title><rect x="118.3" y="35.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="121.3" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (309 samples, 0.09%)</title><rect x="119.3" y="163.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="122.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (309 samples, 0.09%)</title><rect x="119.3" y="147.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="122.3" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (309 samples, 0.09%)</title><rect x="119.3" y="131.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.3" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (309 samples, 0.09%)</title><rect x="119.3" y="115.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="122.3" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (130 samples, 0.04%)</title><rect x="120.5" y="163.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="123.5" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (324 samples, 0.10%)</title><rect x="120.9" y="163.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="123.9" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (324 samples, 0.10%)</title><rect x="120.9" y="147.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="123.9" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (324 samples, 0.10%)</title><rect x="120.9" y="131.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.9" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (324 samples, 0.10%)</title><rect x="120.9" y="115.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (324 samples, 0.10%)</title><rect x="120.9" y="99.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.9" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (324 samples, 0.10%)</title><rect x="120.9" y="83.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="123.9" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (153 samples, 0.05%)</title><rect x="122.1" y="163.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.1" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (153 samples, 0.05%)</title><rect x="122.1" y="147.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="125.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (85 samples, 0.03%)</title><rect x="122.7" y="179.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="125.7" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (327 samples, 0.10%)</title><rect x="123.0" y="227.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="126.0" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (327 samples, 0.10%)</title><rect x="123.0" y="211.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="126.0" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (327 samples, 0.10%)</title><rect x="123.0" y="195.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="126.0" y="206.0"></text>
</g>
<g>
<title>java.lang.String (163 samples, 0.05%)</title><rect x="123.0" y="179.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="126.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (164 samples, 0.05%)</title><rect x="123.6" y="179.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.6" y="190.0"></text>
</g>
<g>
<title>byte[] (164 samples, 0.05%)</title><rect x="123.6" y="163.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="126.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,946 samples, 0.60%)</title><rect x="124.2" y="259.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="127.2" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (206 samples, 0.06%)</title><rect x="124.2" y="243.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="127.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (450 samples, 0.14%)</title><rect x="124.9" y="243.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.9" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (443 samples, 0.14%)</title><rect x="124.9" y="227.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="127.9" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,290 samples, 0.40%)</title><rect x="126.5" y="243.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="129.5" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,290 samples, 0.40%)</title><rect x="126.5" y="227.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.5" y="238.0"></text>
</g>
<g>
<title>char[] (867 samples, 0.27%)</title><rect x="126.5" y="211.0" width="3.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="129.5" y="222.0"></text>
</g>
<g>
<title>java.lang.String (87 samples, 0.03%)</title><rect x="129.7" y="211.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="132.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (324 samples, 0.10%)</title><rect x="130.0" y="211.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (324 samples, 0.10%)</title><rect x="130.0" y="195.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (324 samples, 0.10%)</title><rect x="130.0" y="179.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="133.0" y="190.0"></text>
</g>
<g>
<title>byte[] (317 samples, 0.10%)</title><rect x="130.0" y="163.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="133.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (173 samples, 0.05%)</title><rect x="131.2" y="259.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.2" y="270.0"></text>
</g>
<g>
<title>byte[] (173 samples, 0.05%)</title><rect x="131.2" y="243.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="134.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (249 samples, 0.08%)</title><rect x="131.8" y="259.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.8" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (249 samples, 0.08%)</title><rect x="131.8" y="243.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="134.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (249 samples, 0.08%)</title><rect x="131.8" y="227.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.8" y="238.0"></text>
</g>
<g>
<title>java.lang.String (128 samples, 0.04%)</title><rect x="131.8" y="211.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="134.8" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (121 samples, 0.04%)</title><rect x="132.3" y="211.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="135.3" y="222.0"></text>
</g>
<g>
<title>byte[] (121 samples, 0.04%)</title><rect x="132.3" y="195.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="135.3" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,249 samples, 0.38%)</title><rect x="132.7" y="259.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="135.7" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,249 samples, 0.38%)</title><rect x="132.7" y="243.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="135.7" y="254.0"></text>
</g>
<g>
<title>char[] (584 samples, 0.18%)</title><rect x="132.7" y="227.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="135.7" y="238.0"></text>
</g>
<g>
<title>java.lang.String (252 samples, 0.08%)</title><rect x="134.9" y="227.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="137.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (406 samples, 0.12%)</title><rect x="135.8" y="227.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="138.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (406 samples, 0.12%)</title><rect x="135.8" y="211.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.8" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (406 samples, 0.12%)</title><rect x="135.8" y="195.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.8" y="206.0"></text>
</g>
<g>
<title>byte[] (406 samples, 0.12%)</title><rect x="135.8" y="179.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="138.8" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25758] (9,093 samples, 2.79%)</title><rect x="137.2" y="339.0" width="33.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="140.2" y="350.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9,093 samples, 2.79%)</title><rect x="137.2" y="323.0" width="33.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.2" y="334.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (9,093 samples, 2.79%)</title><rect x="137.2" y="307.0" width="33.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.2" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9,093 samples, 2.79%)</title><rect x="137.2" y="291.0" width="33.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.2" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (9,093 samples, 2.79%)</title><rect x="137.2" y="275.0" width="33.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="140.2" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,227 samples, 1.60%)</title><rect x="137.2" y="259.0" width="19.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,227 samples, 1.60%)</title><rect x="137.2" y="243.0" width="19.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="140.2" y="254.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4,953 samples, 1.52%)</title><rect x="137.2" y="227.0" width="18.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.2" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (484 samples, 0.15%)</title><rect x="137.2" y="211.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (484 samples, 0.15%)</title><rect x="137.2" y="195.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="140.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (484 samples, 0.15%)</title><rect x="137.2" y="179.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="140.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String (224 samples, 0.07%)</title><rect x="137.2" y="163.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="140.2" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (260 samples, 0.08%)</title><rect x="138.1" y="163.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="141.1" y="174.0"></text>
</g>
<g>
<title>byte[] (260 samples, 0.08%)</title><rect x="138.1" y="147.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="141.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (4,469 samples, 1.37%)</title><rect x="139.0" y="211.0" width="16.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (155 samples, 0.05%)</title><rect x="139.0" y="195.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (155 samples, 0.05%)</title><rect x="139.0" y="179.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.get$Lambda (155 samples, 0.05%)</title><rect x="139.0" y="163.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.0" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$60 (155 samples, 0.05%)</title><rect x="139.0" y="147.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="142.0" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (213 samples, 0.07%)</title><rect x="139.6" y="195.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.6" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (213 samples, 0.07%)</title><rect x="139.6" y="179.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.6" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (213 samples, 0.07%)</title><rect x="139.6" y="163.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="142.6" y="174.0"></text>
</g>
<g>
<title>java.lang.String (134 samples, 0.04%)</title><rect x="139.6" y="147.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="142.6" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (79 samples, 0.02%)</title><rect x="140.0" y="147.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="143.0" y="158.0"></text>
</g>
<g>
<title>byte[] (79 samples, 0.02%)</title><rect x="140.0" y="131.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="143.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (231 samples, 0.07%)</title><rect x="140.3" y="195.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="143.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (87 samples, 0.03%)</title><rect x="140.3" y="179.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (87 samples, 0.03%)</title><rect x="140.3" y="163.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="143.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (87 samples, 0.03%)</title><rect x="140.3" y="147.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="143.3" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (87 samples, 0.03%)</title><rect x="140.3" y="131.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="143.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (144 samples, 0.04%)</title><rect x="140.6" y="179.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (144 samples, 0.04%)</title><rect x="140.6" y="163.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.6" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (142 samples, 0.04%)</title><rect x="140.6" y="147.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="143.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (2,152 samples, 0.66%)</title><rect x="141.2" y="195.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="144.2" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (2,152 samples, 0.66%)</title><rect x="141.2" y="179.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="144.2" y="190.0"></text>
</g>
<g>
<title>java.util.HashSet (88 samples, 0.03%)</title><rect x="141.2" y="163.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="144.2" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (433 samples, 0.13%)</title><rect x="141.5" y="163.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.5" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (168 samples, 0.05%)</title><rect x="141.5" y="147.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="144.5" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (265 samples, 0.08%)</title><rect x="142.1" y="147.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="145.1" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (194 samples, 0.06%)</title><rect x="142.1" y="131.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.1" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (194 samples, 0.06%)</title><rect x="142.1" y="115.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="145.1" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (71 samples, 0.02%)</title><rect x="142.8" y="131.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.8" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (71 samples, 0.02%)</title><rect x="142.8" y="115.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="145.8" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,332 samples, 0.41%)</title><rect x="143.1" y="163.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="146.1" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (238 samples, 0.07%)</title><rect x="143.1" y="147.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="146.1" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1,094 samples, 0.34%)</title><rect x="143.9" y="147.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.9" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (943 samples, 0.29%)</title><rect x="143.9" y="131.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="146.9" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (943 samples, 0.29%)</title><rect x="143.9" y="115.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.9" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (943 samples, 0.29%)</title><rect x="143.9" y="99.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.9" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (515 samples, 0.16%)</title><rect x="143.9" y="83.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="146.9" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (515 samples, 0.16%)</title><rect x="143.9" y="67.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="146.9" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (428 samples, 0.13%)</title><rect x="145.8" y="83.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.8" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (420 samples, 0.13%)</title><rect x="145.8" y="67.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="148.8" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (151 samples, 0.05%)</title><rect x="147.3" y="131.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="150.3" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (151 samples, 0.05%)</title><rect x="147.3" y="115.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.3" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (151 samples, 0.05%)</title><rect x="147.3" y="99.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.3" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (151 samples, 0.05%)</title><rect x="147.3" y="83.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="150.3" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (299 samples, 0.09%)</title><rect x="147.9" y="163.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="150.9" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (130 samples, 0.04%)</title><rect x="147.9" y="147.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="150.9" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (169 samples, 0.05%)</title><rect x="148.3" y="147.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.3" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (169 samples, 0.05%)</title><rect x="148.3" y="131.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="151.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,718 samples, 0.53%)</title><rect x="149.0" y="195.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="152.0" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (319 samples, 0.10%)</title><rect x="149.0" y="179.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="152.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (78 samples, 0.02%)</title><rect x="149.0" y="163.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.0" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (78 samples, 0.02%)</title><rect x="149.0" y="147.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="152.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (241 samples, 0.07%)</title><rect x="149.2" y="163.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="152.2" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (83 samples, 0.03%)</title><rect x="149.2" y="147.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="152.2" y="158.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (158 samples, 0.05%)</title><rect x="149.5" y="147.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="152.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1,296 samples, 0.40%)</title><rect x="150.1" y="179.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (539 samples, 0.17%)</title><rect x="150.1" y="163.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (539 samples, 0.17%)</title><rect x="150.1" y="147.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.1" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (539 samples, 0.17%)</title><rect x="150.1" y="131.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.1" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (539 samples, 0.17%)</title><rect x="150.1" y="115.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.1" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (539 samples, 0.17%)</title><rect x="150.1" y="99.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="153.1" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (539 samples, 0.17%)</title><rect x="150.1" y="83.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.1" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (539 samples, 0.17%)</title><rect x="150.1" y="67.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="153.1" y="78.0"></text>
</g>
<g>
<title>java.lang.String (266 samples, 0.08%)</title><rect x="150.1" y="51.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="153.1" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (273 samples, 0.08%)</title><rect x="151.1" y="51.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.1" y="62.0"></text>
</g>
<g>
<title>byte[] (273 samples, 0.08%)</title><rect x="151.1" y="35.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="154.1" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (232 samples, 0.07%)</title><rect x="152.1" y="163.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="155.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (232 samples, 0.07%)</title><rect x="152.1" y="147.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="155.1" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (232 samples, 0.07%)</title><rect x="152.1" y="131.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.1" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (232 samples, 0.07%)</title><rect x="152.1" y="115.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="155.1" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (120 samples, 0.04%)</title><rect x="152.9" y="163.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="155.9" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (278 samples, 0.09%)</title><rect x="153.3" y="163.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.3" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (278 samples, 0.09%)</title><rect x="153.3" y="147.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.3" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (278 samples, 0.09%)</title><rect x="153.3" y="131.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="156.3" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (278 samples, 0.09%)</title><rect x="153.3" y="115.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.3" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (278 samples, 0.09%)</title><rect x="153.3" y="99.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.3" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (278 samples, 0.09%)</title><rect x="153.3" y="83.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="156.3" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (127 samples, 0.04%)</title><rect x="154.3" y="163.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.3" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (127 samples, 0.04%)</title><rect x="154.3" y="147.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="157.3" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (103 samples, 0.03%)</title><rect x="154.8" y="179.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="157.8" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (274 samples, 0.08%)</title><rect x="155.2" y="227.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (274 samples, 0.08%)</title><rect x="155.2" y="211.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.2" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (274 samples, 0.08%)</title><rect x="155.2" y="195.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="158.2" y="206.0"></text>
</g>
<g>
<title>java.lang.String (117 samples, 0.04%)</title><rect x="155.2" y="179.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="158.2" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (157 samples, 0.05%)</title><rect x="155.6" y="179.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.6" y="190.0"></text>
</g>
<g>
<title>byte[] (157 samples, 0.05%)</title><rect x="155.6" y="163.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="158.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,563 samples, 0.48%)</title><rect x="156.2" y="259.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="159.2" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (196 samples, 0.06%)</title><rect x="156.2" y="243.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="159.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (386 samples, 0.12%)</title><rect x="156.9" y="243.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="159.9" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (384 samples, 0.12%)</title><rect x="156.9" y="227.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="159.9" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (981 samples, 0.30%)</title><rect x="158.3" y="243.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="161.3" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (981 samples, 0.30%)</title><rect x="158.3" y="227.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="161.3" y="238.0"></text>
</g>
<g>
<title>char[] (569 samples, 0.17%)</title><rect x="158.3" y="211.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="161.3" y="222.0"></text>
</g>
<g>
<title>java.lang.String (132 samples, 0.04%)</title><rect x="160.4" y="211.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="163.4" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (273 samples, 0.08%)</title><rect x="160.8" y="211.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="163.8" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (273 samples, 0.08%)</title><rect x="160.8" y="195.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (273 samples, 0.08%)</title><rect x="160.8" y="179.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="163.8" y="190.0"></text>
</g>
<g>
<title>byte[] (273 samples, 0.08%)</title><rect x="160.8" y="163.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="163.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (152 samples, 0.05%)</title><rect x="161.8" y="259.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="164.8" y="270.0"></text>
</g>
<g>
<title>byte[] (152 samples, 0.05%)</title><rect x="161.8" y="243.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="164.8" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (242 samples, 0.07%)</title><rect x="162.4" y="259.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="165.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (242 samples, 0.07%)</title><rect x="162.4" y="243.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="165.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (242 samples, 0.07%)</title><rect x="162.4" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.4" y="238.0"></text>
</g>
<g>
<title>java.lang.String (116 samples, 0.04%)</title><rect x="162.4" y="211.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="165.4" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (126 samples, 0.04%)</title><rect x="162.8" y="211.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.8" y="222.0"></text>
</g>
<g>
<title>byte[] (126 samples, 0.04%)</title><rect x="162.8" y="195.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="165.8" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,909 samples, 0.59%)</title><rect x="163.3" y="259.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="166.3" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,909 samples, 0.59%)</title><rect x="163.3" y="243.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.3" y="254.0"></text>
</g>
<g>
<title>char[] (868 samples, 0.27%)</title><rect x="163.3" y="227.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="166.3" y="238.0"></text>
</g>
<g>
<title>java.lang.String (421 samples, 0.13%)</title><rect x="166.4" y="227.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="169.4" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (620 samples, 0.19%)</title><rect x="167.9" y="227.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (620 samples, 0.19%)</title><rect x="167.9" y="211.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.9" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (620 samples, 0.19%)</title><rect x="167.9" y="195.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="170.9" y="206.0"></text>
</g>
<g>
<title>byte[] (620 samples, 0.19%)</title><rect x="167.9" y="179.0" width="2.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="170.9" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25764] (8,119 samples, 2.49%)</title><rect x="170.2" y="339.0" width="29.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="173.2" y="350.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8,119 samples, 2.49%)</title><rect x="170.2" y="323.0" width="29.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="173.2" y="334.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (8,119 samples, 2.49%)</title><rect x="170.2" y="307.0" width="29.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="173.2" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8,119 samples, 2.49%)</title><rect x="170.2" y="291.0" width="29.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="173.2" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8,119 samples, 2.49%)</title><rect x="170.2" y="275.0" width="29.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="173.2" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,607 samples, 1.41%)</title><rect x="170.2" y="259.0" width="16.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="173.2" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,607 samples, 1.41%)</title><rect x="170.2" y="243.0" width="16.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.2" y="254.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4,365 samples, 1.34%)</title><rect x="170.2" y="227.0" width="15.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="173.2" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (425 samples, 0.13%)</title><rect x="170.2" y="211.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="173.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (425 samples, 0.13%)</title><rect x="170.2" y="195.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="173.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (425 samples, 0.13%)</title><rect x="170.2" y="179.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String (216 samples, 0.07%)</title><rect x="170.2" y="163.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="173.2" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (209 samples, 0.06%)</title><rect x="170.9" y="163.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.9" y="174.0"></text>
</g>
<g>
<title>byte[] (209 samples, 0.06%)</title><rect x="170.9" y="147.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="173.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (3,940 samples, 1.21%)</title><rect x="171.7" y="211.0" width="14.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="174.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (141 samples, 0.04%)</title><rect x="171.7" y="195.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (141 samples, 0.04%)</title><rect x="171.7" y="179.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="174.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.get$Lambda (141 samples, 0.04%)</title><rect x="171.7" y="163.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="174.7" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$60 (141 samples, 0.04%)</title><rect x="171.7" y="147.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="174.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (184 samples, 0.06%)</title><rect x="172.2" y="195.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="175.2" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (184 samples, 0.06%)</title><rect x="172.2" y="179.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="175.2" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (184 samples, 0.06%)</title><rect x="172.2" y="163.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="175.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String (101 samples, 0.03%)</title><rect x="172.2" y="147.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="175.2" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (83 samples, 0.03%)</title><rect x="172.6" y="147.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="175.6" y="158.0"></text>
</g>
<g>
<title>byte[] (83 samples, 0.03%)</title><rect x="172.6" y="131.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="175.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (231 samples, 0.07%)</title><rect x="172.9" y="195.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="175.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (103 samples, 0.03%)</title><rect x="172.9" y="179.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (103 samples, 0.03%)</title><rect x="172.9" y="163.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="175.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (103 samples, 0.03%)</title><rect x="172.9" y="147.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="175.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (103 samples, 0.03%)</title><rect x="172.9" y="131.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="175.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (128 samples, 0.04%)</title><rect x="173.2" y="179.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="176.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (128 samples, 0.04%)</title><rect x="173.2" y="163.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.2" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (128 samples, 0.04%)</title><rect x="173.2" y="147.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="176.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (1,891 samples, 0.58%)</title><rect x="173.7" y="195.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.7" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (1,891 samples, 0.58%)</title><rect x="173.7" y="179.0" width="6.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.7" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (379 samples, 0.12%)</title><rect x="173.9" y="163.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.9" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (142 samples, 0.04%)</title><rect x="173.9" y="147.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="176.9" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (237 samples, 0.07%)</title><rect x="174.4" y="147.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.4" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (171 samples, 0.05%)</title><rect x="174.4" y="131.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="177.4" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (171 samples, 0.05%)</title><rect x="174.4" y="115.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="177.4" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,155 samples, 0.35%)</title><rect x="175.3" y="163.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="178.3" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (232 samples, 0.07%)</title><rect x="175.3" y="147.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="178.3" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (923 samples, 0.28%)</title><rect x="176.1" y="147.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="179.1" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (792 samples, 0.24%)</title><rect x="176.1" y="131.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="179.1" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (792 samples, 0.24%)</title><rect x="176.1" y="115.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="179.1" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (792 samples, 0.24%)</title><rect x="176.1" y="99.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="179.1" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (423 samples, 0.13%)</title><rect x="176.1" y="83.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.1" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (423 samples, 0.13%)</title><rect x="176.1" y="67.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="179.1" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (369 samples, 0.11%)</title><rect x="177.7" y="83.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="180.7" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (366 samples, 0.11%)</title><rect x="177.7" y="67.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="180.7" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (131 samples, 0.04%)</title><rect x="179.0" y="131.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="182.0" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (131 samples, 0.04%)</title><rect x="179.0" y="115.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="182.0" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (131 samples, 0.04%)</title><rect x="179.0" y="99.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="182.0" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (131 samples, 0.04%)</title><rect x="179.0" y="83.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="182.0" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (295 samples, 0.09%)</title><rect x="179.5" y="163.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.5" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (131 samples, 0.04%)</title><rect x="179.5" y="147.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="182.5" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (164 samples, 0.05%)</title><rect x="180.0" y="147.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="183.0" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (164 samples, 0.05%)</title><rect x="180.0" y="131.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="183.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,493 samples, 0.46%)</title><rect x="180.6" y="195.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.6" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (304 samples, 0.09%)</title><rect x="180.6" y="179.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.6" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (76 samples, 0.02%)</title><rect x="180.6" y="163.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="183.6" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (76 samples, 0.02%)</title><rect x="180.6" y="147.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="183.6" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (228 samples, 0.07%)</title><rect x="180.8" y="163.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.8" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (90 samples, 0.03%)</title><rect x="180.8" y="147.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="183.8" y="158.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (138 samples, 0.04%)</title><rect x="181.2" y="147.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="184.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1,094 samples, 0.34%)</title><rect x="181.7" y="179.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="184.7" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (422 samples, 0.13%)</title><rect x="181.7" y="163.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="184.7" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (422 samples, 0.13%)</title><rect x="181.7" y="147.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="184.7" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (422 samples, 0.13%)</title><rect x="181.7" y="131.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="184.7" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (422 samples, 0.13%)</title><rect x="181.7" y="115.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="184.7" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (422 samples, 0.13%)</title><rect x="181.7" y="99.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="184.7" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (422 samples, 0.13%)</title><rect x="181.7" y="83.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="184.7" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (422 samples, 0.13%)</title><rect x="181.7" y="67.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.7" y="78.0"></text>
</g>
<g>
<title>java.lang.String (220 samples, 0.07%)</title><rect x="181.7" y="51.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="184.7" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (202 samples, 0.06%)</title><rect x="182.5" y="51.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.5" y="62.0"></text>
</g>
<g>
<title>byte[] (202 samples, 0.06%)</title><rect x="182.5" y="35.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="185.5" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (205 samples, 0.06%)</title><rect x="183.2" y="163.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="186.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (205 samples, 0.06%)</title><rect x="183.2" y="147.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="186.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (205 samples, 0.06%)</title><rect x="183.2" y="131.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.2" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (205 samples, 0.06%)</title><rect x="183.2" y="115.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="186.2" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (90 samples, 0.03%)</title><rect x="183.9" y="163.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="186.9" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (268 samples, 0.08%)</title><rect x="184.3" y="163.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="187.3" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (268 samples, 0.08%)</title><rect x="184.3" y="147.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.3" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (268 samples, 0.08%)</title><rect x="184.3" y="131.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="187.3" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (268 samples, 0.08%)</title><rect x="184.3" y="115.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.3" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (268 samples, 0.08%)</title><rect x="184.3" y="99.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="187.3" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (267 samples, 0.08%)</title><rect x="184.3" y="83.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="187.3" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (109 samples, 0.03%)</title><rect x="185.2" y="163.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="188.2" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (109 samples, 0.03%)</title><rect x="185.2" y="147.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="188.2" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (95 samples, 0.03%)</title><rect x="185.6" y="179.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="188.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (242 samples, 0.07%)</title><rect x="186.0" y="227.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="189.0" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (242 samples, 0.07%)</title><rect x="186.0" y="211.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.0" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (242 samples, 0.07%)</title><rect x="186.0" y="195.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.0" y="206.0"></text>
</g>
<g>
<title>java.lang.String (107 samples, 0.03%)</title><rect x="186.0" y="179.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="189.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (135 samples, 0.04%)</title><rect x="186.3" y="179.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="189.3" y="190.0"></text>
</g>
<g>
<title>byte[] (135 samples, 0.04%)</title><rect x="186.3" y="163.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="189.3" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,381 samples, 0.42%)</title><rect x="186.8" y="259.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.8" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (174 samples, 0.05%)</title><rect x="186.8" y="243.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="189.8" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (329 samples, 0.10%)</title><rect x="187.5" y="243.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="190.5" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (322 samples, 0.10%)</title><rect x="187.5" y="227.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="190.5" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (878 samples, 0.27%)</title><rect x="188.7" y="243.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.7" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (878 samples, 0.27%)</title><rect x="188.7" y="227.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.7" y="238.0"></text>
</g>
<g>
<title>char[] (484 samples, 0.15%)</title><rect x="188.7" y="211.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="191.7" y="222.0"></text>
</g>
<g>
<title>java.lang.String (121 samples, 0.04%)</title><rect x="190.4" y="211.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="193.4" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (268 samples, 0.08%)</title><rect x="190.9" y="211.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (268 samples, 0.08%)</title><rect x="190.9" y="195.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (268 samples, 0.08%)</title><rect x="190.9" y="179.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="193.9" y="190.0"></text>
</g>
<g>
<title>byte[] (268 samples, 0.08%)</title><rect x="190.9" y="163.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="193.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (138 samples, 0.04%)</title><rect x="191.8" y="259.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="194.8" y="270.0"></text>
</g>
<g>
<title>byte[] (138 samples, 0.04%)</title><rect x="191.8" y="243.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="194.8" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (215 samples, 0.07%)</title><rect x="192.3" y="259.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="195.3" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (215 samples, 0.07%)</title><rect x="192.3" y="243.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="195.3" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (215 samples, 0.07%)</title><rect x="192.3" y="227.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="195.3" y="238.0"></text>
</g>
<g>
<title>java.lang.String (99 samples, 0.03%)</title><rect x="192.3" y="211.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="195.3" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (116 samples, 0.04%)</title><rect x="192.7" y="211.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.7" y="222.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.04%)</title><rect x="192.7" y="195.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="195.7" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,778 samples, 0.55%)</title><rect x="193.1" y="259.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="196.1" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,778 samples, 0.55%)</title><rect x="193.1" y="243.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="196.1" y="254.0"></text>
</g>
<g>
<title>char[] (858 samples, 0.26%)</title><rect x="193.1" y="227.0" width="3.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="196.1" y="238.0"></text>
</g>
<g>
<title>java.lang.String (393 samples, 0.12%)</title><rect x="196.2" y="227.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="199.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (527 samples, 0.16%)</title><rect x="197.6" y="227.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="200.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (527 samples, 0.16%)</title><rect x="197.6" y="211.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="200.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (527 samples, 0.16%)</title><rect x="197.6" y="195.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="200.6" y="206.0"></text>
</g>
<g>
<title>byte[] (527 samples, 0.16%)</title><rect x="197.6" y="179.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="200.6" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25749] (8,857 samples, 2.72%)</title><rect x="199.5" y="339.0" width="32.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="202.5" y="350.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8,857 samples, 2.72%)</title><rect x="199.5" y="323.0" width="32.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="202.5" y="334.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (8,857 samples, 2.72%)</title><rect x="199.5" y="307.0" width="32.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="202.5" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8,857 samples, 2.72%)</title><rect x="199.5" y="291.0" width="32.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="202.5" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8,857 samples, 2.72%)</title><rect x="199.5" y="275.0" width="32.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="202.5" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,431 samples, 1.67%)</title><rect x="199.5" y="259.0" width="19.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="202.5" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,431 samples, 1.67%)</title><rect x="199.5" y="243.0" width="19.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.5" y="254.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (5,097 samples, 1.56%)</title><rect x="199.5" y="227.0" width="18.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.5" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (548 samples, 0.17%)</title><rect x="199.5" y="211.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="202.5" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (548 samples, 0.17%)</title><rect x="199.5" y="195.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="202.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (548 samples, 0.17%)</title><rect x="199.5" y="179.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="202.5" y="190.0"></text>
</g>
<g>
<title>java.lang.String (275 samples, 0.08%)</title><rect x="199.5" y="163.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="202.5" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (273 samples, 0.08%)</title><rect x="200.5" y="163.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.5" y="174.0"></text>
</g>
<g>
<title>byte[] (273 samples, 0.08%)</title><rect x="200.5" y="147.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="203.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (4,549 samples, 1.40%)</title><rect x="201.5" y="211.0" width="16.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="204.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (166 samples, 0.05%)</title><rect x="201.5" y="195.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="204.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (166 samples, 0.05%)</title><rect x="201.5" y="179.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.get$Lambda (166 samples, 0.05%)</title><rect x="201.5" y="163.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.5" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$60 (166 samples, 0.05%)</title><rect x="201.5" y="147.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="204.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (214 samples, 0.07%)</title><rect x="202.1" y="195.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="205.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (103 samples, 0.03%)</title><rect x="202.1" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="205.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (103 samples, 0.03%)</title><rect x="202.1" y="163.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="205.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (103 samples, 0.03%)</title><rect x="202.1" y="147.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="205.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (103 samples, 0.03%)</title><rect x="202.1" y="131.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="205.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (111 samples, 0.03%)</title><rect x="202.5" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="205.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (111 samples, 0.03%)</title><rect x="202.5" y="163.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="205.5" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (111 samples, 0.03%)</title><rect x="202.5" y="147.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="205.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (2,387 samples, 0.73%)</title><rect x="202.9" y="195.0" width="8.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="205.9" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (2,387 samples, 0.73%)</title><rect x="202.9" y="179.0" width="8.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="205.9" y="190.0"></text>
</g>
<g>
<title>java.util.HashSet (101 samples, 0.03%)</title><rect x="202.9" y="163.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="205.9" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (497 samples, 0.15%)</title><rect x="203.3" y="163.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.3" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (179 samples, 0.05%)</title><rect x="203.3" y="147.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="206.3" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (318 samples, 0.10%)</title><rect x="203.9" y="147.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.9" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (249 samples, 0.08%)</title><rect x="203.9" y="131.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="206.9" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (249 samples, 0.08%)</title><rect x="203.9" y="115.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="206.9" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,473 samples, 0.45%)</title><rect x="205.1" y="163.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.1" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (293 samples, 0.09%)</title><rect x="205.1" y="147.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="208.1" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1,180 samples, 0.36%)</title><rect x="206.1" y="147.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.1" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1,034 samples, 0.32%)</title><rect x="206.1" y="131.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.1" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1,034 samples, 0.32%)</title><rect x="206.1" y="115.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="209.1" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1,034 samples, 0.32%)</title><rect x="206.1" y="99.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="209.1" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (504 samples, 0.15%)</title><rect x="206.1" y="83.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="209.1" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (504 samples, 0.15%)</title><rect x="206.1" y="67.0" width="1.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="209.1" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (530 samples, 0.16%)</title><rect x="208.0" y="83.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="211.0" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (522 samples, 0.16%)</title><rect x="208.0" y="67.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="211.0" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (146 samples, 0.04%)</title><rect x="209.9" y="131.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="212.9" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (146 samples, 0.04%)</title><rect x="209.9" y="115.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="212.9" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (146 samples, 0.04%)</title><rect x="209.9" y="99.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="212.9" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (146 samples, 0.04%)</title><rect x="209.9" y="83.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="212.9" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (316 samples, 0.10%)</title><rect x="210.4" y="163.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="213.4" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (152 samples, 0.05%)</title><rect x="210.4" y="147.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="213.4" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (164 samples, 0.05%)</title><rect x="211.0" y="147.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="214.0" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (164 samples, 0.05%)</title><rect x="211.0" y="131.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="214.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,782 samples, 0.55%)</title><rect x="211.5" y="195.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="214.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (380 samples, 0.12%)</title><rect x="211.5" y="179.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (71 samples, 0.02%)</title><rect x="211.5" y="163.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="214.5" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (71 samples, 0.02%)</title><rect x="211.5" y="147.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="214.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (309 samples, 0.09%)</title><rect x="211.8" y="163.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="214.8" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (113 samples, 0.03%)</title><rect x="211.8" y="147.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="214.8" y="158.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (196 samples, 0.06%)</title><rect x="212.2" y="147.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="215.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1,303 samples, 0.40%)</title><rect x="212.9" y="179.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="215.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (470 samples, 0.14%)</title><rect x="212.9" y="163.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="215.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (470 samples, 0.14%)</title><rect x="212.9" y="147.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="215.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (470 samples, 0.14%)</title><rect x="212.9" y="131.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="215.9" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (470 samples, 0.14%)</title><rect x="212.9" y="115.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.9" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (470 samples, 0.14%)</title><rect x="212.9" y="99.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="215.9" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (470 samples, 0.14%)</title><rect x="212.9" y="83.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="215.9" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (470 samples, 0.14%)</title><rect x="212.9" y="67.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="215.9" y="78.0"></text>
</g>
<g>
<title>java.lang.String (233 samples, 0.07%)</title><rect x="212.9" y="51.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="215.9" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (237 samples, 0.07%)</title><rect x="213.8" y="51.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="216.8" y="62.0"></text>
</g>
<g>
<title>byte[] (237 samples, 0.07%)</title><rect x="213.8" y="35.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="216.8" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (267 samples, 0.08%)</title><rect x="214.6" y="163.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="217.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (267 samples, 0.08%)</title><rect x="214.6" y="147.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="217.6" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (267 samples, 0.08%)</title><rect x="214.6" y="131.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="217.6" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (267 samples, 0.08%)</title><rect x="214.6" y="115.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="217.6" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (135 samples, 0.04%)</title><rect x="215.6" y="163.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="218.6" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (299 samples, 0.09%)</title><rect x="216.1" y="163.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="219.1" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (299 samples, 0.09%)</title><rect x="216.1" y="147.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="219.1" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (299 samples, 0.09%)</title><rect x="216.1" y="131.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="219.1" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (299 samples, 0.09%)</title><rect x="216.1" y="115.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="219.1" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (299 samples, 0.09%)</title><rect x="216.1" y="99.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="219.1" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (299 samples, 0.09%)</title><rect x="216.1" y="83.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="219.1" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (132 samples, 0.04%)</title><rect x="217.2" y="163.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="220.2" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (132 samples, 0.04%)</title><rect x="217.2" y="147.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="220.2" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (99 samples, 0.03%)</title><rect x="217.6" y="179.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="220.6" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (334 samples, 0.10%)</title><rect x="218.0" y="227.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="221.0" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (334 samples, 0.10%)</title><rect x="218.0" y="211.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="221.0" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (334 samples, 0.10%)</title><rect x="218.0" y="195.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="221.0" y="206.0"></text>
</g>
<g>
<title>java.lang.String (180 samples, 0.06%)</title><rect x="218.0" y="179.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="221.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (154 samples, 0.05%)</title><rect x="218.6" y="179.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="221.6" y="190.0"></text>
</g>
<g>
<title>byte[] (154 samples, 0.05%)</title><rect x="218.6" y="163.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="221.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,800 samples, 0.55%)</title><rect x="219.2" y="259.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="222.2" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (231 samples, 0.07%)</title><rect x="219.2" y="243.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="222.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (453 samples, 0.14%)</title><rect x="220.0" y="243.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.0" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (453 samples, 0.14%)</title><rect x="220.0" y="227.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="223.0" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,116 samples, 0.34%)</title><rect x="221.7" y="243.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.7" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,116 samples, 0.34%)</title><rect x="221.7" y="227.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.7" y="238.0"></text>
</g>
<g>
<title>char[] (775 samples, 0.24%)</title><rect x="221.7" y="211.0" width="2.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="224.7" y="222.0"></text>
</g>
<g>
<title>java.lang.String (78 samples, 0.02%)</title><rect x="224.5" y="211.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="227.5" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (262 samples, 0.08%)</title><rect x="224.8" y="211.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.8" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (262 samples, 0.08%)</title><rect x="224.8" y="195.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (262 samples, 0.08%)</title><rect x="224.8" y="179.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="227.8" y="190.0"></text>
</g>
<g>
<title>byte[] (262 samples, 0.08%)</title><rect x="224.8" y="163.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="227.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (199 samples, 0.06%)</title><rect x="225.7" y="259.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="228.7" y="270.0"></text>
</g>
<g>
<title>byte[] (199 samples, 0.06%)</title><rect x="225.7" y="243.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="228.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (214 samples, 0.07%)</title><rect x="226.4" y="259.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="229.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (214 samples, 0.07%)</title><rect x="226.4" y="243.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="229.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (214 samples, 0.07%)</title><rect x="226.4" y="227.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.4" y="238.0"></text>
</g>
<g>
<title>java.lang.String (119 samples, 0.04%)</title><rect x="226.4" y="211.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="229.4" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (95 samples, 0.03%)</title><rect x="226.9" y="211.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="229.9" y="222.0"></text>
</g>
<g>
<title>byte[] (95 samples, 0.03%)</title><rect x="226.9" y="195.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="229.9" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,213 samples, 0.37%)</title><rect x="227.2" y="259.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="230.2" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,213 samples, 0.37%)</title><rect x="227.2" y="243.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.2" y="254.0"></text>
</g>
<g>
<title>char[] (586 samples, 0.18%)</title><rect x="227.2" y="227.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="230.2" y="238.0"></text>
</g>
<g>
<title>java.lang.String (278 samples, 0.09%)</title><rect x="229.3" y="227.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="232.3" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (349 samples, 0.11%)</title><rect x="230.3" y="227.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="233.3" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (349 samples, 0.11%)</title><rect x="230.3" y="211.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="233.3" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (349 samples, 0.11%)</title><rect x="230.3" y="195.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="233.3" y="206.0"></text>
</g>
<g>
<title>byte[] (349 samples, 0.11%)</title><rect x="230.3" y="179.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="233.3" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25759] (9,094 samples, 2.79%)</title><rect x="231.6" y="339.0" width="32.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="234.6" y="350.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9,094 samples, 2.79%)</title><rect x="231.6" y="323.0" width="32.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="234.6" y="334.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (351 samples, 0.11%)</title><rect x="231.6" y="307.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="234.6" y="318.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (351 samples, 0.11%)</title><rect x="231.6" y="291.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="234.6" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (8,743 samples, 2.68%)</title><rect x="232.9" y="307.0" width="31.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.9" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8,743 samples, 2.68%)</title><rect x="232.9" y="291.0" width="31.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="235.9" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8,743 samples, 2.68%)</title><rect x="232.9" y="275.0" width="31.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="235.9" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,071 samples, 1.56%)</title><rect x="232.9" y="259.0" width="18.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.9" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,071 samples, 1.56%)</title><rect x="232.9" y="243.0" width="18.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="235.9" y="254.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4,804 samples, 1.47%)</title><rect x="232.9" y="227.0" width="17.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="235.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (515 samples, 0.16%)</title><rect x="232.9" y="211.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="235.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (515 samples, 0.16%)</title><rect x="232.9" y="195.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="235.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (515 samples, 0.16%)</title><rect x="232.9" y="179.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String (240 samples, 0.07%)</title><rect x="232.9" y="163.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="235.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (275 samples, 0.08%)</title><rect x="233.7" y="163.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.7" y="174.0"></text>
</g>
<g>
<title>byte[] (275 samples, 0.08%)</title><rect x="233.7" y="147.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="236.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (4,289 samples, 1.32%)</title><rect x="234.7" y="211.0" width="15.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="237.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (165 samples, 0.05%)</title><rect x="234.7" y="195.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="237.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (165 samples, 0.05%)</title><rect x="234.7" y="179.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.get$Lambda (165 samples, 0.05%)</title><rect x="234.7" y="163.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.7" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$60 (165 samples, 0.05%)</title><rect x="234.7" y="147.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="237.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (193 samples, 0.06%)</title><rect x="235.3" y="195.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.3" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (193 samples, 0.06%)</title><rect x="235.3" y="179.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="238.3" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (193 samples, 0.06%)</title><rect x="235.3" y="163.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="238.3" y="174.0"></text>
</g>
<g>
<title>java.lang.String (115 samples, 0.04%)</title><rect x="235.3" y="147.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="238.3" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (78 samples, 0.02%)</title><rect x="235.8" y="147.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="238.8" y="158.0"></text>
</g>
<g>
<title>byte[] (78 samples, 0.02%)</title><rect x="235.8" y="131.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="238.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (240 samples, 0.07%)</title><rect x="236.0" y="195.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="239.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (119 samples, 0.04%)</title><rect x="236.0" y="179.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (119 samples, 0.04%)</title><rect x="236.0" y="163.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (119 samples, 0.04%)</title><rect x="236.0" y="147.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="239.0" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (119 samples, 0.04%)</title><rect x="236.0" y="131.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="239.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (121 samples, 0.04%)</title><rect x="236.5" y="179.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="239.5" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (121 samples, 0.04%)</title><rect x="236.5" y="163.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="239.5" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (121 samples, 0.04%)</title><rect x="236.5" y="147.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="239.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (2,044 samples, 0.63%)</title><rect x="236.9" y="195.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="239.9" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (2,044 samples, 0.63%)</title><rect x="236.9" y="179.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="239.9" y="190.0"></text>
</g>
<g>
<title>java.util.HashSet (82 samples, 0.03%)</title><rect x="236.9" y="163.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="239.9" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (404 samples, 0.12%)</title><rect x="237.2" y="163.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.2" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (155 samples, 0.05%)</title><rect x="237.2" y="147.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="240.2" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (249 samples, 0.08%)</title><rect x="237.8" y="147.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.8" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (181 samples, 0.06%)</title><rect x="237.8" y="131.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="240.8" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (181 samples, 0.06%)</title><rect x="237.8" y="115.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="240.8" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,238 samples, 0.38%)</title><rect x="238.7" y="163.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="241.7" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (237 samples, 0.07%)</title><rect x="238.7" y="147.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="241.7" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1,001 samples, 0.31%)</title><rect x="239.5" y="147.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="242.5" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (842 samples, 0.26%)</title><rect x="239.5" y="131.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="242.5" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (842 samples, 0.26%)</title><rect x="239.5" y="115.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="242.5" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (842 samples, 0.26%)</title><rect x="239.5" y="99.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="242.5" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (448 samples, 0.14%)</title><rect x="239.5" y="83.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="242.5" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (448 samples, 0.14%)</title><rect x="239.5" y="67.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="242.5" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (394 samples, 0.12%)</title><rect x="241.1" y="83.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="244.1" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (392 samples, 0.12%)</title><rect x="241.1" y="67.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="244.1" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (159 samples, 0.05%)</title><rect x="242.6" y="131.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.6" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (159 samples, 0.05%)</title><rect x="242.6" y="115.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="245.6" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (159 samples, 0.05%)</title><rect x="242.6" y="99.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="245.6" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (159 samples, 0.05%)</title><rect x="242.6" y="83.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="245.6" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (320 samples, 0.10%)</title><rect x="243.1" y="163.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="246.1" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (100 samples, 0.03%)</title><rect x="243.1" y="147.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="246.1" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (220 samples, 0.07%)</title><rect x="243.5" y="147.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="246.5" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (220 samples, 0.07%)</title><rect x="243.5" y="131.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="246.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,647 samples, 0.51%)</title><rect x="244.3" y="195.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="247.3" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (308 samples, 0.09%)</title><rect x="244.3" y="179.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="247.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (251 samples, 0.08%)</title><rect x="244.5" y="163.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="247.5" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (183 samples, 0.06%)</title><rect x="244.8" y="147.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="247.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1,228 samples, 0.38%)</title><rect x="245.4" y="179.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="248.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (485 samples, 0.15%)</title><rect x="245.4" y="163.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="248.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (485 samples, 0.15%)</title><rect x="245.4" y="147.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="248.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (485 samples, 0.15%)</title><rect x="245.4" y="131.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="248.4" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (485 samples, 0.15%)</title><rect x="245.4" y="115.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="248.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (485 samples, 0.15%)</title><rect x="245.4" y="99.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="248.4" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (485 samples, 0.15%)</title><rect x="245.4" y="83.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="248.4" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (485 samples, 0.15%)</title><rect x="245.4" y="67.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.4" y="78.0"></text>
</g>
<g>
<title>java.lang.String (222 samples, 0.07%)</title><rect x="245.4" y="51.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="248.4" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (263 samples, 0.08%)</title><rect x="246.2" y="51.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="249.2" y="62.0"></text>
</g>
<g>
<title>byte[] (263 samples, 0.08%)</title><rect x="246.2" y="35.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="249.2" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (213 samples, 0.07%)</title><rect x="247.2" y="163.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="250.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (213 samples, 0.07%)</title><rect x="247.2" y="147.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="250.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (213 samples, 0.07%)</title><rect x="247.2" y="131.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.2" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (213 samples, 0.07%)</title><rect x="247.2" y="115.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="250.2" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (128 samples, 0.04%)</title><rect x="247.9" y="163.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="250.9" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (277 samples, 0.08%)</title><rect x="248.4" y="163.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="251.4" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (277 samples, 0.08%)</title><rect x="248.4" y="147.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.4" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (277 samples, 0.08%)</title><rect x="248.4" y="131.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="251.4" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (277 samples, 0.08%)</title><rect x="248.4" y="115.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="251.4" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (277 samples, 0.08%)</title><rect x="248.4" y="99.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="251.4" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (277 samples, 0.08%)</title><rect x="248.4" y="83.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="251.4" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (125 samples, 0.04%)</title><rect x="249.4" y="163.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="252.4" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (125 samples, 0.04%)</title><rect x="249.4" y="147.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="252.4" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (111 samples, 0.03%)</title><rect x="249.9" y="179.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="252.9" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (267 samples, 0.08%)</title><rect x="250.3" y="227.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.3" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (267 samples, 0.08%)</title><rect x="250.3" y="211.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="253.3" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (267 samples, 0.08%)</title><rect x="250.3" y="195.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="253.3" y="206.0"></text>
</g>
<g>
<title>java.lang.String (97 samples, 0.03%)</title><rect x="250.3" y="179.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="253.3" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (170 samples, 0.05%)</title><rect x="250.6" y="179.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="253.6" y="190.0"></text>
</g>
<g>
<title>byte[] (170 samples, 0.05%)</title><rect x="250.6" y="163.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="253.6" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,386 samples, 0.43%)</title><rect x="251.2" y="259.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="254.2" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (207 samples, 0.06%)</title><rect x="251.2" y="243.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="254.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (384 samples, 0.12%)</title><rect x="252.0" y="243.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="255.0" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (379 samples, 0.12%)</title><rect x="252.0" y="227.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="255.0" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (795 samples, 0.24%)</title><rect x="253.4" y="243.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="256.4" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (795 samples, 0.24%)</title><rect x="253.4" y="227.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="256.4" y="238.0"></text>
</g>
<g>
<title>char[] (428 samples, 0.13%)</title><rect x="253.4" y="211.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="256.4" y="222.0"></text>
</g>
<g>
<title>java.lang.String (119 samples, 0.04%)</title><rect x="254.9" y="211.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="257.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (244 samples, 0.07%)</title><rect x="255.4" y="211.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="258.4" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (244 samples, 0.07%)</title><rect x="255.4" y="195.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.4" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (244 samples, 0.07%)</title><rect x="255.4" y="179.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.4" y="190.0"></text>
</g>
<g>
<title>byte[] (241 samples, 0.07%)</title><rect x="255.4" y="163.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="258.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (161 samples, 0.05%)</title><rect x="256.2" y="259.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="259.2" y="270.0"></text>
</g>
<g>
<title>byte[] (161 samples, 0.05%)</title><rect x="256.2" y="243.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="259.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (227 samples, 0.07%)</title><rect x="256.8" y="259.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="259.8" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (227 samples, 0.07%)</title><rect x="256.8" y="243.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (227 samples, 0.07%)</title><rect x="256.8" y="227.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="259.8" y="238.0"></text>
</g>
<g>
<title>java.lang.String (110 samples, 0.03%)</title><rect x="256.8" y="211.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="259.8" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (117 samples, 0.04%)</title><rect x="257.2" y="211.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="260.2" y="222.0"></text>
</g>
<g>
<title>byte[] (117 samples, 0.04%)</title><rect x="257.2" y="195.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="260.2" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,898 samples, 0.58%)</title><rect x="257.7" y="259.0" width="6.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="260.7" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,898 samples, 0.58%)</title><rect x="257.7" y="243.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="260.7" y="254.0"></text>
</g>
<g>
<title>char[] (940 samples, 0.29%)</title><rect x="257.7" y="227.0" width="3.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="260.7" y="238.0"></text>
</g>
<g>
<title>java.lang.String (374 samples, 0.11%)</title><rect x="261.1" y="227.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="264.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (584 samples, 0.18%)</title><rect x="262.4" y="227.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.4" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (584 samples, 0.18%)</title><rect x="262.4" y="211.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="265.4" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (584 samples, 0.18%)</title><rect x="262.4" y="195.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="265.4" y="206.0"></text>
</g>
<g>
<title>byte[] (584 samples, 0.18%)</title><rect x="262.4" y="179.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="265.4" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25765] (9,092 samples, 2.79%)</title><rect x="264.5" y="339.0" width="32.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="267.5" y="350.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9,092 samples, 2.79%)</title><rect x="264.5" y="323.0" width="32.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="267.5" y="334.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (328 samples, 0.10%)</title><rect x="264.5" y="307.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.5" y="318.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (328 samples, 0.10%)</title><rect x="264.5" y="291.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="267.5" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (8,764 samples, 2.69%)</title><rect x="265.7" y="307.0" width="31.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.7" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8,764 samples, 2.69%)</title><rect x="265.7" y="291.0" width="31.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="268.7" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8,764 samples, 2.69%)</title><rect x="265.7" y="275.0" width="31.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="268.7" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,973 samples, 1.53%)</title><rect x="265.7" y="259.0" width="18.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="268.7" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,973 samples, 1.53%)</title><rect x="265.7" y="243.0" width="18.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="268.7" y="254.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4,712 samples, 1.45%)</title><rect x="265.7" y="227.0" width="17.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="268.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (493 samples, 0.15%)</title><rect x="265.7" y="211.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="268.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (493 samples, 0.15%)</title><rect x="265.7" y="195.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (493 samples, 0.15%)</title><rect x="265.7" y="179.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="268.7" y="190.0"></text>
</g>
<g>
<title>java.lang.String (226 samples, 0.07%)</title><rect x="265.7" y="163.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="268.7" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (267 samples, 0.08%)</title><rect x="266.5" y="163.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="269.5" y="174.0"></text>
</g>
<g>
<title>byte[] (267 samples, 0.08%)</title><rect x="266.5" y="147.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="269.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (4,219 samples, 1.29%)</title><rect x="267.5" y="211.0" width="15.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="270.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (139 samples, 0.04%)</title><rect x="267.5" y="195.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="270.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (139 samples, 0.04%)</title><rect x="267.5" y="179.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="270.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.get$Lambda (139 samples, 0.04%)</title><rect x="267.5" y="163.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="270.5" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$60 (139 samples, 0.04%)</title><rect x="267.5" y="147.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="270.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (205 samples, 0.06%)</title><rect x="268.0" y="195.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="271.0" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (205 samples, 0.06%)</title><rect x="268.0" y="179.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="271.0" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (205 samples, 0.06%)</title><rect x="268.0" y="163.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String (118 samples, 0.04%)</title><rect x="268.0" y="147.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="271.0" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (87 samples, 0.03%)</title><rect x="268.4" y="147.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="271.4" y="158.0"></text>
</g>
<g>
<title>byte[] (87 samples, 0.03%)</title><rect x="268.4" y="131.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="271.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (196 samples, 0.06%)</title><rect x="268.7" y="195.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="271.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (90 samples, 0.03%)</title><rect x="268.7" y="179.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="271.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (90 samples, 0.03%)</title><rect x="268.7" y="163.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="271.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (90 samples, 0.03%)</title><rect x="268.7" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="271.7" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (90 samples, 0.03%)</title><rect x="268.7" y="131.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="271.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (106 samples, 0.03%)</title><rect x="269.1" y="179.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (106 samples, 0.03%)</title><rect x="269.1" y="163.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="272.1" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (105 samples, 0.03%)</title><rect x="269.1" y="147.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="272.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (2,032 samples, 0.62%)</title><rect x="269.5" y="195.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="272.5" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (2,032 samples, 0.62%)</title><rect x="269.5" y="179.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="272.5" y="190.0"></text>
</g>
<g>
<title>java.util.HashSet (76 samples, 0.02%)</title><rect x="269.5" y="163.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="272.5" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (414 samples, 0.13%)</title><rect x="269.7" y="163.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.7" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (176 samples, 0.05%)</title><rect x="269.7" y="147.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="272.7" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (238 samples, 0.07%)</title><rect x="270.4" y="147.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.4" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (163 samples, 0.05%)</title><rect x="270.4" y="131.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="273.4" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (163 samples, 0.05%)</title><rect x="270.4" y="115.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="273.4" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (75 samples, 0.02%)</title><rect x="271.0" y="131.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="274.0" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (75 samples, 0.02%)</title><rect x="271.0" y="115.0" width="0.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="274.0" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,248 samples, 0.38%)</title><rect x="271.2" y="163.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="274.2" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (221 samples, 0.07%)</title><rect x="271.2" y="147.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="274.2" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1,027 samples, 0.32%)</title><rect x="272.0" y="147.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="275.0" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (847 samples, 0.26%)</title><rect x="272.0" y="131.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="275.0" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (847 samples, 0.26%)</title><rect x="272.0" y="115.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="275.0" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (847 samples, 0.26%)</title><rect x="272.0" y="99.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="275.0" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (462 samples, 0.14%)</title><rect x="272.0" y="83.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="275.0" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (462 samples, 0.14%)</title><rect x="272.0" y="67.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="275.0" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (385 samples, 0.12%)</title><rect x="273.7" y="83.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="276.7" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (378 samples, 0.12%)</title><rect x="273.7" y="67.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="276.7" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (180 samples, 0.06%)</title><rect x="275.1" y="131.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="278.1" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (180 samples, 0.06%)</title><rect x="275.1" y="115.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.1" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (180 samples, 0.06%)</title><rect x="275.1" y="99.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="278.1" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (180 samples, 0.06%)</title><rect x="275.1" y="83.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="278.1" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (294 samples, 0.09%)</title><rect x="275.7" y="163.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.7" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (112 samples, 0.03%)</title><rect x="275.7" y="147.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="278.7" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (182 samples, 0.06%)</title><rect x="276.1" y="147.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="279.1" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (182 samples, 0.06%)</title><rect x="276.1" y="131.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="279.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,647 samples, 0.51%)</title><rect x="276.8" y="195.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="279.8" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (339 samples, 0.10%)</title><rect x="276.8" y="179.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="279.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (78 samples, 0.02%)</title><rect x="276.8" y="163.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="279.8" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (78 samples, 0.02%)</title><rect x="276.8" y="147.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="279.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (261 samples, 0.08%)</title><rect x="277.1" y="163.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.1" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (89 samples, 0.03%)</title><rect x="277.1" y="147.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="280.1" y="158.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (172 samples, 0.05%)</title><rect x="277.4" y="147.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="280.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1,186 samples, 0.36%)</title><rect x="278.0" y="179.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (486 samples, 0.15%)</title><rect x="278.0" y="163.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="281.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (486 samples, 0.15%)</title><rect x="278.0" y="147.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="281.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (486 samples, 0.15%)</title><rect x="278.0" y="131.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="281.0" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (486 samples, 0.15%)</title><rect x="278.0" y="115.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.0" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (486 samples, 0.15%)</title><rect x="278.0" y="99.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.0" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (486 samples, 0.15%)</title><rect x="278.0" y="83.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="281.0" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (486 samples, 0.15%)</title><rect x="278.0" y="67.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.0" y="78.0"></text>
</g>
<g>
<title>java.lang.String (244 samples, 0.07%)</title><rect x="278.0" y="51.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="281.0" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (242 samples, 0.07%)</title><rect x="278.9" y="51.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.9" y="62.0"></text>
</g>
<g>
<title>byte[] (242 samples, 0.07%)</title><rect x="278.9" y="35.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="281.9" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (201 samples, 0.06%)</title><rect x="279.8" y="163.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="282.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (201 samples, 0.06%)</title><rect x="279.8" y="147.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (201 samples, 0.06%)</title><rect x="279.8" y="131.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="282.8" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (201 samples, 0.06%)</title><rect x="279.8" y="115.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="282.8" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (124 samples, 0.04%)</title><rect x="280.5" y="163.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="283.5" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (272 samples, 0.08%)</title><rect x="281.0" y="163.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="284.0" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (272 samples, 0.08%)</title><rect x="281.0" y="147.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="284.0" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (272 samples, 0.08%)</title><rect x="281.0" y="131.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.0" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (272 samples, 0.08%)</title><rect x="281.0" y="115.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.0" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (272 samples, 0.08%)</title><rect x="281.0" y="99.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="284.0" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (272 samples, 0.08%)</title><rect x="281.0" y="83.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="284.0" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (103 samples, 0.03%)</title><rect x="282.0" y="163.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="285.0" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (103 samples, 0.03%)</title><rect x="282.0" y="147.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="285.0" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (122 samples, 0.04%)</title><rect x="282.3" y="179.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="285.3" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (261 samples, 0.08%)</title><rect x="282.8" y="227.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.8" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (261 samples, 0.08%)</title><rect x="282.8" y="211.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="285.8" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (261 samples, 0.08%)</title><rect x="282.8" y="195.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="285.8" y="206.0"></text>
</g>
<g>
<title>java.lang.String (114 samples, 0.03%)</title><rect x="282.8" y="179.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="285.8" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (147 samples, 0.05%)</title><rect x="283.2" y="179.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.2" y="190.0"></text>
</g>
<g>
<title>byte[] (147 samples, 0.05%)</title><rect x="283.2" y="163.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="286.2" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,411 samples, 0.43%)</title><rect x="283.7" y="259.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="286.7" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (193 samples, 0.06%)</title><rect x="283.7" y="243.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="286.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (392 samples, 0.12%)</title><rect x="284.4" y="243.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="287.4" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (388 samples, 0.12%)</title><rect x="284.4" y="227.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="287.4" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (826 samples, 0.25%)</title><rect x="285.8" y="243.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="288.8" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (826 samples, 0.25%)</title><rect x="285.8" y="227.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="288.8" y="238.0"></text>
</g>
<g>
<title>char[] (436 samples, 0.13%)</title><rect x="285.8" y="211.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="288.8" y="222.0"></text>
</g>
<g>
<title>java.lang.String (124 samples, 0.04%)</title><rect x="287.4" y="211.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="290.4" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (259 samples, 0.08%)</title><rect x="287.9" y="211.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (259 samples, 0.08%)</title><rect x="287.9" y="195.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (259 samples, 0.08%)</title><rect x="287.9" y="179.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="290.9" y="190.0"></text>
</g>
<g>
<title>byte[] (258 samples, 0.08%)</title><rect x="287.9" y="163.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="290.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (173 samples, 0.05%)</title><rect x="288.8" y="259.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="291.8" y="270.0"></text>
</g>
<g>
<title>byte[] (173 samples, 0.05%)</title><rect x="288.8" y="243.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="291.8" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (230 samples, 0.07%)</title><rect x="289.4" y="259.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="292.4" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (230 samples, 0.07%)</title><rect x="289.4" y="243.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.4" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (230 samples, 0.07%)</title><rect x="289.4" y="227.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="292.4" y="238.0"></text>
</g>
<g>
<title>java.lang.String (135 samples, 0.04%)</title><rect x="289.4" y="211.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="292.4" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (95 samples, 0.03%)</title><rect x="289.9" y="211.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.9" y="222.0"></text>
</g>
<g>
<title>byte[] (95 samples, 0.03%)</title><rect x="289.9" y="195.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="292.9" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,977 samples, 0.61%)</title><rect x="290.3" y="259.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="293.3" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,977 samples, 0.61%)</title><rect x="290.3" y="243.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.3" y="254.0"></text>
</g>
<g>
<title>char[] (909 samples, 0.28%)</title><rect x="290.3" y="227.0" width="3.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="293.3" y="238.0"></text>
</g>
<g>
<title>java.lang.String (445 samples, 0.14%)</title><rect x="293.6" y="227.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="296.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (623 samples, 0.19%)</title><rect x="295.2" y="227.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="298.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (623 samples, 0.19%)</title><rect x="295.2" y="211.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.2" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (623 samples, 0.19%)</title><rect x="295.2" y="195.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="298.2" y="206.0"></text>
</g>
<g>
<title>byte[] (623 samples, 0.19%)</title><rect x="295.2" y="179.0" width="2.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="298.2" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25750] (9,030 samples, 2.77%)</title><rect x="297.4" y="339.0" width="32.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="300.4" y="350.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9,030 samples, 2.77%)</title><rect x="297.4" y="323.0" width="32.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.4" y="334.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (385 samples, 0.12%)</title><rect x="297.4" y="307.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="300.4" y="318.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (385 samples, 0.12%)</title><rect x="297.4" y="291.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="300.4" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (8,645 samples, 2.65%)</title><rect x="298.8" y="307.0" width="31.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="301.8" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8,645 samples, 2.65%)</title><rect x="298.8" y="291.0" width="31.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="301.8" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8,645 samples, 2.65%)</title><rect x="298.8" y="275.0" width="31.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="301.8" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,336 samples, 1.64%)</title><rect x="298.8" y="259.0" width="19.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="301.8" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,336 samples, 1.64%)</title><rect x="298.8" y="243.0" width="19.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="301.8" y="254.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (5,012 samples, 1.54%)</title><rect x="298.8" y="227.0" width="18.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="301.8" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (548 samples, 0.17%)</title><rect x="298.8" y="211.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="301.8" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (548 samples, 0.17%)</title><rect x="298.8" y="195.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="301.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (548 samples, 0.17%)</title><rect x="298.8" y="179.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="301.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String (259 samples, 0.08%)</title><rect x="298.8" y="163.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="301.8" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (289 samples, 0.09%)</title><rect x="299.8" y="163.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="302.8" y="174.0"></text>
</g>
<g>
<title>byte[] (289 samples, 0.09%)</title><rect x="299.8" y="147.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="302.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (4,464 samples, 1.37%)</title><rect x="300.8" y="211.0" width="16.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="303.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (143 samples, 0.04%)</title><rect x="300.8" y="195.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (143 samples, 0.04%)</title><rect x="300.8" y="179.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.get$Lambda (143 samples, 0.04%)</title><rect x="300.8" y="163.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="303.8" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$60 (143 samples, 0.04%)</title><rect x="300.8" y="147.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="303.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (291 samples, 0.09%)</title><rect x="301.3" y="195.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="304.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (131 samples, 0.04%)</title><rect x="301.3" y="179.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (131 samples, 0.04%)</title><rect x="301.3" y="163.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="304.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (131 samples, 0.04%)</title><rect x="301.3" y="147.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="304.3" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (131 samples, 0.04%)</title><rect x="301.3" y="131.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="304.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (160 samples, 0.05%)</title><rect x="301.8" y="179.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (160 samples, 0.05%)</title><rect x="301.8" y="163.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="304.8" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (160 samples, 0.05%)</title><rect x="301.8" y="147.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="304.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (2,244 samples, 0.69%)</title><rect x="302.4" y="195.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="305.4" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (2,244 samples, 0.69%)</title><rect x="302.4" y="179.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="305.4" y="190.0"></text>
</g>
<g>
<title>java.util.HashSet (70 samples, 0.02%)</title><rect x="302.4" y="163.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="305.4" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (448 samples, 0.14%)</title><rect x="302.6" y="163.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.6" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (159 samples, 0.05%)</title><rect x="302.6" y="147.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="305.6" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (289 samples, 0.09%)</title><rect x="303.2" y="147.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="306.2" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (216 samples, 0.07%)</title><rect x="303.2" y="131.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="306.2" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (216 samples, 0.07%)</title><rect x="303.2" y="115.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="306.2" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (73 samples, 0.02%)</title><rect x="304.0" y="131.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="307.0" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (73 samples, 0.02%)</title><rect x="304.0" y="115.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="307.0" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,356 samples, 0.42%)</title><rect x="304.3" y="163.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="307.3" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (254 samples, 0.08%)</title><rect x="304.3" y="147.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="307.3" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1,102 samples, 0.34%)</title><rect x="305.2" y="147.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.2" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (906 samples, 0.28%)</title><rect x="305.2" y="131.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.2" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (906 samples, 0.28%)</title><rect x="305.2" y="115.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="308.2" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (906 samples, 0.28%)</title><rect x="305.2" y="99.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="308.2" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (496 samples, 0.15%)</title><rect x="305.2" y="83.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.2" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (496 samples, 0.15%)</title><rect x="305.2" y="67.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="308.2" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (410 samples, 0.13%)</title><rect x="307.0" y="83.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="310.0" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (408 samples, 0.13%)</title><rect x="307.0" y="67.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="310.0" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (196 samples, 0.06%)</title><rect x="308.5" y="131.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.5" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (196 samples, 0.06%)</title><rect x="308.5" y="115.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="311.5" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (196 samples, 0.06%)</title><rect x="308.5" y="99.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="311.5" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (196 samples, 0.06%)</title><rect x="308.5" y="83.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="311.5" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (370 samples, 0.11%)</title><rect x="309.2" y="163.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="312.2" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (166 samples, 0.05%)</title><rect x="309.2" y="147.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="312.2" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (204 samples, 0.06%)</title><rect x="309.8" y="147.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="312.8" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (204 samples, 0.06%)</title><rect x="309.8" y="131.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="312.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,786 samples, 0.55%)</title><rect x="310.5" y="195.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="313.5" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (345 samples, 0.11%)</title><rect x="310.5" y="179.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (109 samples, 0.03%)</title><rect x="310.5" y="163.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.5" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (109 samples, 0.03%)</title><rect x="310.5" y="147.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="313.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (236 samples, 0.07%)</title><rect x="310.9" y="163.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="313.9" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (171 samples, 0.05%)</title><rect x="311.1" y="147.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="314.1" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1,312 samples, 0.40%)</title><rect x="311.8" y="179.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="314.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (523 samples, 0.16%)</title><rect x="311.8" y="163.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (523 samples, 0.16%)</title><rect x="311.8" y="147.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="314.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (523 samples, 0.16%)</title><rect x="311.8" y="131.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="314.8" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (523 samples, 0.16%)</title><rect x="311.8" y="115.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="314.8" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (523 samples, 0.16%)</title><rect x="311.8" y="99.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="314.8" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (523 samples, 0.16%)</title><rect x="311.8" y="83.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="314.8" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (523 samples, 0.16%)</title><rect x="311.8" y="67.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.8" y="78.0"></text>
</g>
<g>
<title>java.lang.String (262 samples, 0.08%)</title><rect x="311.8" y="51.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="314.8" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (261 samples, 0.08%)</title><rect x="312.7" y="51.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="315.7" y="62.0"></text>
</g>
<g>
<title>byte[] (261 samples, 0.08%)</title><rect x="312.7" y="35.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="315.7" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (264 samples, 0.08%)</title><rect x="313.6" y="163.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.6" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (264 samples, 0.08%)</title><rect x="313.6" y="147.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.6" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (264 samples, 0.08%)</title><rect x="313.6" y="131.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.6" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (264 samples, 0.08%)</title><rect x="313.6" y="115.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="316.6" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (125 samples, 0.04%)</title><rect x="314.6" y="163.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="317.6" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (291 samples, 0.09%)</title><rect x="315.1" y="163.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="318.1" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (291 samples, 0.09%)</title><rect x="315.1" y="147.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.1" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (291 samples, 0.09%)</title><rect x="315.1" y="131.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="318.1" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (291 samples, 0.09%)</title><rect x="315.1" y="115.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="318.1" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (291 samples, 0.09%)</title><rect x="315.1" y="99.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="318.1" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (291 samples, 0.09%)</title><rect x="315.1" y="83.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="318.1" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (109 samples, 0.03%)</title><rect x="316.1" y="163.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="319.1" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (109 samples, 0.03%)</title><rect x="316.1" y="147.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="319.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (129 samples, 0.04%)</title><rect x="316.5" y="179.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="319.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (324 samples, 0.10%)</title><rect x="317.0" y="227.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="320.0" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (324 samples, 0.10%)</title><rect x="317.0" y="211.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="320.0" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (324 samples, 0.10%)</title><rect x="317.0" y="195.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="320.0" y="206.0"></text>
</g>
<g>
<title>java.lang.String (131 samples, 0.04%)</title><rect x="317.0" y="179.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="320.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (193 samples, 0.06%)</title><rect x="317.4" y="179.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.4" y="190.0"></text>
</g>
<g>
<title>byte[] (193 samples, 0.06%)</title><rect x="317.4" y="163.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="320.4" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,619 samples, 0.50%)</title><rect x="318.1" y="259.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="321.1" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (231 samples, 0.07%)</title><rect x="318.1" y="243.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="321.1" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (410 samples, 0.13%)</title><rect x="319.0" y="243.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="322.0" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (409 samples, 0.13%)</title><rect x="319.0" y="227.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="322.0" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (978 samples, 0.30%)</title><rect x="320.5" y="243.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="323.5" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (978 samples, 0.30%)</title><rect x="320.5" y="227.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="323.5" y="238.0"></text>
</g>
<g>
<title>char[] (480 samples, 0.15%)</title><rect x="320.5" y="211.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="323.5" y="222.0"></text>
</g>
<g>
<title>java.lang.String (117 samples, 0.04%)</title><rect x="322.3" y="211.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="325.3" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (353 samples, 0.11%)</title><rect x="322.7" y="211.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="325.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (353 samples, 0.11%)</title><rect x="322.7" y="195.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="325.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (353 samples, 0.11%)</title><rect x="322.7" y="179.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="325.7" y="190.0"></text>
</g>
<g>
<title>byte[] (353 samples, 0.11%)</title><rect x="322.7" y="163.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="325.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (141 samples, 0.04%)</title><rect x="324.0" y="259.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="327.0" y="270.0"></text>
</g>
<g>
<title>byte[] (141 samples, 0.04%)</title><rect x="324.0" y="243.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="327.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (263 samples, 0.08%)</title><rect x="324.5" y="259.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="327.5" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (263 samples, 0.08%)</title><rect x="324.5" y="243.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="327.5" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (263 samples, 0.08%)</title><rect x="324.5" y="227.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="327.5" y="238.0"></text>
</g>
<g>
<title>java.lang.String (123 samples, 0.04%)</title><rect x="324.5" y="211.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="327.5" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (140 samples, 0.04%)</title><rect x="325.0" y="211.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="328.0" y="222.0"></text>
</g>
<g>
<title>byte[] (140 samples, 0.04%)</title><rect x="325.0" y="195.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="328.0" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,286 samples, 0.39%)</title><rect x="325.5" y="259.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="328.5" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,286 samples, 0.39%)</title><rect x="325.5" y="243.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="328.5" y="254.0"></text>
</g>
<g>
<title>char[] (587 samples, 0.18%)</title><rect x="325.5" y="227.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="328.5" y="238.0"></text>
</g>
<g>
<title>java.lang.String (289 samples, 0.09%)</title><rect x="327.6" y="227.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="330.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (408 samples, 0.13%)</title><rect x="328.6" y="227.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="331.6" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (408 samples, 0.13%)</title><rect x="328.6" y="211.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="331.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (408 samples, 0.13%)</title><rect x="328.6" y="195.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.6" y="206.0"></text>
</g>
<g>
<title>byte[] (408 samples, 0.13%)</title><rect x="328.6" y="179.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="331.6" y="190.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25766] (8,087 samples, 2.48%)</title><rect x="330.1" y="339.0" width="29.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="333.1" y="350.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8,087 samples, 2.48%)</title><rect x="330.1" y="323.0" width="29.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="333.1" y="334.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (277 samples, 0.08%)</title><rect x="330.1" y="307.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="333.1" y="318.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (277 samples, 0.08%)</title><rect x="330.1" y="291.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="333.1" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (7,810 samples, 2.40%)</title><rect x="331.1" y="307.0" width="28.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="334.1" y="318.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (7,810 samples, 2.40%)</title><rect x="331.1" y="291.0" width="28.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="334.1" y="302.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7,810 samples, 2.40%)</title><rect x="331.1" y="275.0" width="28.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="334.1" y="286.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,495 samples, 1.38%)</title><rect x="331.1" y="259.0" width="16.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.1" y="270.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,495 samples, 1.38%)</title><rect x="331.1" y="243.0" width="16.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="334.1" y="254.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4,248 samples, 1.30%)</title><rect x="331.1" y="227.0" width="15.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="334.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (443 samples, 0.14%)</title><rect x="331.1" y="211.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.1" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (443 samples, 0.14%)</title><rect x="331.1" y="195.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="334.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (443 samples, 0.14%)</title><rect x="331.1" y="179.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="334.1" y="190.0"></text>
</g>
<g>
<title>java.lang.String (206 samples, 0.06%)</title><rect x="331.1" y="163.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="334.1" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (237 samples, 0.07%)</title><rect x="331.9" y="163.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="334.9" y="174.0"></text>
</g>
<g>
<title>byte[] (237 samples, 0.07%)</title><rect x="331.9" y="147.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="334.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (3,805 samples, 1.17%)</title><rect x="332.7" y="211.0" width="13.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="335.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (160 samples, 0.05%)</title><rect x="332.7" y="195.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="335.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (160 samples, 0.05%)</title><rect x="332.7" y="179.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="335.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.get$Lambda (160 samples, 0.05%)</title><rect x="332.7" y="163.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="335.7" y="174.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$60 (160 samples, 0.05%)</title><rect x="332.7" y="147.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="335.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (176 samples, 0.05%)</title><rect x="333.3" y="195.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="336.3" y="206.0"></text>
</g>
<g>
<title>java/lang/String.substring (176 samples, 0.05%)</title><rect x="333.3" y="179.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.3" y="190.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (176 samples, 0.05%)</title><rect x="333.3" y="163.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="336.3" y="174.0"></text>
</g>
<g>
<title>java.lang.String (109 samples, 0.03%)</title><rect x="333.3" y="147.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="336.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (221 samples, 0.07%)</title><rect x="333.9" y="195.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="336.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (113 samples, 0.03%)</title><rect x="333.9" y="179.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="336.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (113 samples, 0.03%)</title><rect x="333.9" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="336.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (113 samples, 0.03%)</title><rect x="333.9" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="336.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (113 samples, 0.03%)</title><rect x="333.9" y="131.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="336.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (108 samples, 0.03%)</title><rect x="334.3" y="179.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="337.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (108 samples, 0.03%)</title><rect x="334.3" y="163.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="337.3" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (107 samples, 0.03%)</title><rect x="334.3" y="147.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="337.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (1,838 samples, 0.56%)</title><rect x="334.7" y="195.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="337.7" y="206.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (1,838 samples, 0.56%)</title><rect x="334.7" y="179.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="337.7" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (343 samples, 0.11%)</title><rect x="335.0" y="163.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="338.0" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (141 samples, 0.04%)</title><rect x="335.0" y="147.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="338.0" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (202 samples, 0.06%)</title><rect x="335.5" y="147.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="338.5" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (147 samples, 0.05%)</title><rect x="335.5" y="131.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="338.5" y="142.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (147 samples, 0.05%)</title><rect x="335.5" y="115.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="338.5" y="126.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,152 samples, 0.35%)</title><rect x="336.2" y="163.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="339.2" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap (194 samples, 0.06%)</title><rect x="336.2" y="147.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="339.2" y="158.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (958 samples, 0.29%)</title><rect x="336.9" y="147.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="339.9" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.add (809 samples, 0.25%)</title><rect x="336.9" y="131.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="339.9" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.put (809 samples, 0.25%)</title><rect x="336.9" y="115.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="339.9" y="126.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (809 samples, 0.25%)</title><rect x="336.9" y="99.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="339.9" y="110.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (416 samples, 0.13%)</title><rect x="336.9" y="83.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="339.9" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (416 samples, 0.13%)</title><rect x="336.9" y="67.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="339.9" y="78.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (393 samples, 0.12%)</title><rect x="338.4" y="83.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="341.4" y="94.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (386 samples, 0.12%)</title><rect x="338.4" y="67.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="341.4" y="78.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (149 samples, 0.05%)</title><rect x="339.8" y="131.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="342.8" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (149 samples, 0.05%)</title><rect x="339.8" y="115.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="342.8" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (149 samples, 0.05%)</title><rect x="339.8" y="99.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="342.8" y="110.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (149 samples, 0.05%)</title><rect x="339.8" y="83.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="342.8" y="94.0"></text>
</g>
<g>
<title>java/util/Set.of (278 samples, 0.09%)</title><rect x="340.4" y="163.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="343.4" y="174.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (99 samples, 0.03%)</title><rect x="340.4" y="147.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="343.4" y="158.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (179 samples, 0.05%)</title><rect x="340.7" y="147.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="343.7" y="158.0"></text>
</g>
<g>
<title>java.lang.Object[] (179 samples, 0.05%)</title><rect x="340.7" y="131.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="343.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,410 samples, 0.43%)</title><rect x="341.4" y="195.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="344.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (273 samples, 0.08%)</title><rect x="341.4" y="179.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="344.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (211 samples, 0.06%)</title><rect x="341.6" y="163.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="344.6" y="174.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (73 samples, 0.02%)</title><rect x="341.6" y="147.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="344.6" y="158.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (138 samples, 0.04%)</title><rect x="341.9" y="147.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="344.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1,048 samples, 0.32%)</title><rect x="342.4" y="179.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="345.4" y="190.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (389 samples, 0.12%)</title><rect x="342.4" y="163.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="345.4" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (389 samples, 0.12%)</title><rect x="342.4" y="147.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="345.4" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (389 samples, 0.12%)</title><rect x="342.4" y="131.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="345.4" y="142.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (389 samples, 0.12%)</title><rect x="342.4" y="115.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="345.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (389 samples, 0.12%)</title><rect x="342.4" y="99.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="345.4" y="110.0"></text>
</g>
<g>
<title>java/lang/String.substring (389 samples, 0.12%)</title><rect x="342.4" y="83.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="345.4" y="94.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (389 samples, 0.12%)</title><rect x="342.4" y="67.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="345.4" y="78.0"></text>
</g>
<g>
<title>java.lang.String (192 samples, 0.06%)</title><rect x="342.4" y="51.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="345.4" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (197 samples, 0.06%)</title><rect x="343.1" y="51.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="346.1" y="62.0"></text>
</g>
<g>
<title>byte[] (197 samples, 0.06%)</title><rect x="343.1" y="35.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="346.1" y="46.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (202 samples, 0.06%)</title><rect x="343.8" y="163.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="346.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (202 samples, 0.06%)</title><rect x="343.8" y="147.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="346.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (202 samples, 0.06%)</title><rect x="343.8" y="131.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="346.8" y="142.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (202 samples, 0.06%)</title><rect x="343.8" y="115.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="346.8" y="126.0"></text>
</g>
<g>
<title>java.util.ArrayList (112 samples, 0.03%)</title><rect x="344.5" y="163.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="347.5" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (236 samples, 0.07%)</title><rect x="344.9" y="163.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="347.9" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (236 samples, 0.07%)</title><rect x="344.9" y="147.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="347.9" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (236 samples, 0.07%)</title><rect x="344.9" y="131.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="347.9" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (236 samples, 0.07%)</title><rect x="344.9" y="115.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="347.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (236 samples, 0.07%)</title><rect x="344.9" y="99.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="347.9" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (235 samples, 0.07%)</title><rect x="344.9" y="83.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="347.9" y="94.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (109 samples, 0.03%)</title><rect x="345.8" y="163.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="348.8" y="174.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (109 samples, 0.03%)</title><rect x="345.8" y="147.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="348.8" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (89 samples, 0.03%)</title><rect x="346.2" y="179.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="349.2" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (247 samples, 0.08%)</title><rect x="346.5" y="227.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="349.5" y="238.0"></text>
</g>
<g>
<title>java/lang/String.substring (247 samples, 0.08%)</title><rect x="346.5" y="211.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="349.5" y="222.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (247 samples, 0.08%)</title><rect x="346.5" y="195.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="349.5" y="206.0"></text>
</g>
<g>
<title>java.lang.String (99 samples, 0.03%)</title><rect x="346.5" y="179.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="349.5" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (148 samples, 0.05%)</title><rect x="346.9" y="179.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="349.9" y="190.0"></text>
</g>
<g>
<title>byte[] (148 samples, 0.05%)</title><rect x="346.9" y="163.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="349.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,211 samples, 0.37%)</title><rect x="347.4" y="259.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="350.4" y="270.0"></text>
</g>
<g>
<title>one.nio.http.Request (162 samples, 0.05%)</title><rect x="347.4" y="243.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="350.4" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (323 samples, 0.10%)</title><rect x="348.0" y="243.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="351.0" y="254.0"></text>
</g>
<g>
<title>java.lang.String[] (317 samples, 0.10%)</title><rect x="348.0" y="227.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="351.0" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (726 samples, 0.22%)</title><rect x="349.1" y="243.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="352.1" y="254.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (726 samples, 0.22%)</title><rect x="349.1" y="227.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="352.1" y="238.0"></text>
</g>
<g>
<title>char[] (367 samples, 0.11%)</title><rect x="349.1" y="211.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="352.1" y="222.0"></text>
</g>
<g>
<title>java.lang.String (96 samples, 0.03%)</title><rect x="350.5" y="211.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="353.5" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (252 samples, 0.08%)</title><rect x="350.9" y="211.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="353.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (252 samples, 0.08%)</title><rect x="350.9" y="195.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (252 samples, 0.08%)</title><rect x="350.9" y="179.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="353.9" y="190.0"></text>
</g>
<g>
<title>byte[] (249 samples, 0.08%)</title><rect x="350.9" y="163.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="353.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (141 samples, 0.04%)</title><rect x="351.8" y="259.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="354.8" y="270.0"></text>
</g>
<g>
<title>byte[] (141 samples, 0.04%)</title><rect x="351.8" y="243.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="354.8" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (172 samples, 0.05%)</title><rect x="352.3" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="355.3" y="270.0"></text>
</g>
<g>
<title>java/lang/String.substring (172 samples, 0.05%)</title><rect x="352.3" y="243.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="355.3" y="254.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (172 samples, 0.05%)</title><rect x="352.3" y="227.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="355.3" y="238.0"></text>
</g>
<g>
<title>java.lang.String (93 samples, 0.03%)</title><rect x="352.3" y="211.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="355.3" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (79 samples, 0.02%)</title><rect x="352.6" y="211.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="355.6" y="222.0"></text>
</g>
<g>
<title>byte[] (79 samples, 0.02%)</title><rect x="352.6" y="195.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="355.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,791 samples, 0.55%)</title><rect x="352.9" y="259.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="355.9" y="270.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,791 samples, 0.55%)</title><rect x="352.9" y="243.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="355.9" y="254.0"></text>
</g>
<g>
<title>char[] (822 samples, 0.25%)</title><rect x="352.9" y="227.0" width="3.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="355.9" y="238.0"></text>
</g>
<g>
<title>java.lang.String (368 samples, 0.11%)</title><rect x="355.9" y="227.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="358.9" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (601 samples, 0.18%)</title><rect x="357.2" y="227.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (601 samples, 0.18%)</title><rect x="357.2" y="211.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="360.2" y="222.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (601 samples, 0.18%)</title><rect x="357.2" y="195.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="360.2" y="206.0"></text>
</g>
<g>
<title>byte[] (601 samples, 0.18%)</title><rect x="357.2" y="179.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="360.2" y="190.0"></text>
</g>
<g>
<title>[flusher-0 tid=25874] (362 samples, 0.11%)</title><rect x="359.4" y="339.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="362.4" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (362 samples, 0.11%)</title><rect x="359.4" y="323.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="362.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (362 samples, 0.11%)</title><rect x="359.4" y="307.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="362.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (362 samples, 0.11%)</title><rect x="359.4" y="291.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="362.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (362 samples, 0.11%)</title><rect x="359.4" y="275.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="362.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (362 samples, 0.11%)</title><rect x="359.4" y="259.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="362.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (361 samples, 0.11%)</title><rect x="359.4" y="243.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="362.4" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (310 samples, 0.10%)</title><rect x="359.5" y="227.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="362.5" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (180 samples, 0.06%)</title><rect x="359.5" y="211.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="362.5" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (130 samples, 0.04%)</title><rect x="360.2" y="211.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="363.2" y="222.0"></text>
</g>
<g>
<title>byte[] (129 samples, 0.04%)</title><rect x="360.2" y="195.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="363.2" y="206.0"></text>
</g>
<g>
<title>[flusher-0 tid=25875] (314 samples, 0.10%)</title><rect x="360.7" y="339.0" width="1.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="363.7" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (314 samples, 0.10%)</title><rect x="360.7" y="323.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="363.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (314 samples, 0.10%)</title><rect x="360.7" y="307.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="363.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (314 samples, 0.10%)</title><rect x="360.7" y="291.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="363.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (314 samples, 0.10%)</title><rect x="360.7" y="275.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="363.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (314 samples, 0.10%)</title><rect x="360.7" y="259.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="363.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (313 samples, 0.10%)</title><rect x="360.7" y="243.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="363.7" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (291 samples, 0.09%)</title><rect x="360.8" y="227.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="363.8" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (103 samples, 0.03%)</title><rect x="360.8" y="211.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="363.8" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (188 samples, 0.06%)</title><rect x="361.1" y="211.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="364.1" y="222.0"></text>
</g>
<g>
<title>byte[] (187 samples, 0.06%)</title><rect x="361.1" y="195.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="364.1" y="206.0"></text>
</g>
<g>
<title>[flusher-0 tid=25876] (262 samples, 0.08%)</title><rect x="361.8" y="339.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="364.8" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (262 samples, 0.08%)</title><rect x="361.8" y="323.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="364.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (262 samples, 0.08%)</title><rect x="361.8" y="307.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="364.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (262 samples, 0.08%)</title><rect x="361.8" y="291.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="364.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (262 samples, 0.08%)</title><rect x="361.8" y="275.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="364.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (262 samples, 0.08%)</title><rect x="361.8" y="259.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="364.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (261 samples, 0.08%)</title><rect x="361.8" y="243.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="364.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (225 samples, 0.07%)</title><rect x="361.9" y="227.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="364.9" y="238.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (144 samples, 0.04%)</title><rect x="361.9" y="211.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="364.9" y="222.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (81 samples, 0.02%)</title><rect x="362.5" y="211.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="365.5" y="222.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.02%)</title><rect x="362.5" y="195.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="365.5" y="206.0"></text>
</g>
<g>
<title>[flusher-1 tid=25881] (124 samples, 0.04%)</title><rect x="362.8" y="339.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="365.8" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (124 samples, 0.04%)</title><rect x="362.8" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="365.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (124 samples, 0.04%)</title><rect x="362.8" y="307.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="365.8" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (124 samples, 0.04%)</title><rect x="362.8" y="291.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="365.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (124 samples, 0.04%)</title><rect x="362.8" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="365.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (124 samples, 0.04%)</title><rect x="362.8" y="259.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="365.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (123 samples, 0.04%)</title><rect x="362.8" y="243.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="365.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (78 samples, 0.02%)</title><rect x="362.9" y="227.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="365.9" y="238.0"></text>
</g>
<g>
<title>[flusher-1 tid=25882] (83 samples, 0.03%)</title><rect x="363.2" y="339.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="366.2" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (83 samples, 0.03%)</title><rect x="363.2" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="366.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (83 samples, 0.03%)</title><rect x="363.2" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (83 samples, 0.03%)</title><rect x="363.2" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="366.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (83 samples, 0.03%)</title><rect x="363.2" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="366.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (83 samples, 0.03%)</title><rect x="363.2" y="259.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="366.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (82 samples, 0.03%)</title><rect x="363.2" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="366.2" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (75 samples, 0.02%)</title><rect x="363.2" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.2" y="238.0"></text>
</g>
<g>
<title>[flusher-1 tid=25883] (132 samples, 0.04%)</title><rect x="363.5" y="339.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="366.5" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (132 samples, 0.04%)</title><rect x="363.5" y="323.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (132 samples, 0.04%)</title><rect x="363.5" y="307.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="366.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (132 samples, 0.04%)</title><rect x="363.5" y="291.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="366.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (132 samples, 0.04%)</title><rect x="363.5" y="275.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="366.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (132 samples, 0.04%)</title><rect x="363.5" y="259.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="366.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (131 samples, 0.04%)</title><rect x="363.5" y="243.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (117 samples, 0.04%)</title><rect x="363.6" y="227.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="366.6" y="238.0"></text>
</g>
<g>
<title>[flusher-2 tid=25889] (76 samples, 0.02%)</title><rect x="364.2" y="339.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="367.2" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (76 samples, 0.02%)</title><rect x="364.2" y="323.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="367.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (76 samples, 0.02%)</title><rect x="364.2" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (76 samples, 0.02%)</title><rect x="364.2" y="291.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (76 samples, 0.02%)</title><rect x="364.2" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="367.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (76 samples, 0.02%)</title><rect x="364.2" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="367.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (75 samples, 0.02%)</title><rect x="364.2" y="243.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.2" y="254.0"></text>
</g>
<g>
<title>[flusher-3 tid=26139] (104 samples, 0.03%)</title><rect x="364.7" y="339.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="367.7" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (104 samples, 0.03%)</title><rect x="364.7" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="367.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (104 samples, 0.03%)</title><rect x="364.7" y="307.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (104 samples, 0.03%)</title><rect x="364.7" y="291.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="367.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (104 samples, 0.03%)</title><rect x="364.7" y="275.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="367.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (104 samples, 0.03%)</title><rect x="364.7" y="259.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="367.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (103 samples, 0.03%)</title><rect x="364.7" y="243.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="367.7" y="254.0"></text>
</g>
<g>
<title>[flusher-3 tid=26140] (106 samples, 0.03%)</title><rect x="365.1" y="339.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="368.1" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (106 samples, 0.03%)</title><rect x="365.1" y="323.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (106 samples, 0.03%)</title><rect x="365.1" y="307.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="368.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (106 samples, 0.03%)</title><rect x="365.1" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="368.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (106 samples, 0.03%)</title><rect x="365.1" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (106 samples, 0.03%)</title><rect x="365.1" y="259.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="368.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (103 samples, 0.03%)</title><rect x="365.1" y="243.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="368.1" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (91 samples, 0.03%)</title><rect x="365.1" y="227.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="368.1" y="238.0"></text>
</g>
<g>
<title>[flusher-3 tid=26141] (109 samples, 0.03%)</title><rect x="365.5" y="339.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="368.5" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (109 samples, 0.03%)</title><rect x="365.5" y="323.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="368.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (109 samples, 0.03%)</title><rect x="365.5" y="307.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (109 samples, 0.03%)</title><rect x="365.5" y="291.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao$FlushingTask.run (109 samples, 0.03%)</title><rect x="365.5" y="275.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.flushAndLoad (109 samples, 0.03%)</title><rect x="365.5" y="259.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="368.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.flush (108 samples, 0.03%)</title><rect x="365.5" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (96 samples, 0.03%)</title><rect x="365.5" y="227.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="368.5" y="238.0"></text>
</g>
<g>
<title>[proxy-worker-0 tid=25855] (17,896 samples, 5.49%)</title><rect x="365.9" y="339.0" width="64.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="368.9" y="350.0">[proxy-..</text>
</g>
<g>
<title>java/lang/Thread.run (17,896 samples, 5.49%)</title><rect x="365.9" y="323.0" width="64.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="368.9" y="334.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17,896 samples, 5.49%)</title><rect x="365.9" y="307.0" width="64.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="368.9" y="318.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17,896 samples, 5.49%)</title><rect x="365.9" y="291.0" width="64.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="368.9" y="302.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (17,868 samples, 5.48%)</title><rect x="365.9" y="275.0" width="64.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="368.9" y="286.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (17,835 samples, 5.47%)</title><rect x="365.9" y="259.0" width="64.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.9" y="270.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (17,835 samples, 5.47%)</title><rect x="365.9" y="243.0" width="64.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="368.9" y="254.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (17,835 samples, 5.47%)</title><rect x="365.9" y="227.0" width="64.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.9" y="238.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (17,835 samples, 5.47%)</title><rect x="365.9" y="211.0" width="64.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="368.9" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (17,835 samples, 5.47%)</title><rect x="365.9" y="195.0" width="64.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="368.9" y="206.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (17,835 samples, 5.47%)</title><rect x="365.9" y="179.0" width="64.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="368.9" y="190.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (17,835 samples, 5.47%)</title><rect x="365.9" y="163.0" width="64.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.9" y="174.0">one/nio..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (85 samples, 0.03%)</title><rect x="365.9" y="147.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="368.9" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (16,462 samples, 5.05%)</title><rect x="366.2" y="147.0" width="59.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="369.2" y="158.0">one/ni..</text>
</g>
<g>
<title>byte[] (6,942 samples, 2.13%)</title><rect x="366.2" y="131.0" width="25.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="369.2" y="142.0">b..</text>
</g>
<g>
<title>byte[] (9,520 samples, 2.92%)</title><rect x="391.3" y="131.0" width="34.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="394.3" y="142.0">by..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (921 samples, 0.28%)</title><rect x="425.8" y="147.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="428.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (766 samples, 0.23%)</title><rect x="426.0" y="131.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="429.0" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (766 samples, 0.23%)</title><rect x="426.0" y="115.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="429.0" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (766 samples, 0.23%)</title><rect x="426.0" y="99.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="429.0" y="110.0"></text>
</g>
<g>
<title>char[] (560 samples, 0.17%)</title><rect x="426.0" y="83.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="429.0" y="94.0"></text>
</g>
<g>
<title>java.lang.String (80 samples, 0.02%)</title><rect x="428.0" y="83.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="431.0" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (126 samples, 0.04%)</title><rect x="428.3" y="83.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="431.3" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (126 samples, 0.04%)</title><rect x="428.3" y="67.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="431.3" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (126 samples, 0.04%)</title><rect x="428.3" y="51.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="431.3" y="62.0"></text>
</g>
<g>
<title>byte[] (126 samples, 0.04%)</title><rect x="428.3" y="35.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="431.3" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (266 samples, 0.08%)</title><rect x="429.1" y="147.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.1" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (259 samples, 0.08%)</title><rect x="429.1" y="131.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="432.1" y="142.0"></text>
</g>
<g>
<title>byte[] (259 samples, 0.08%)</title><rect x="429.1" y="115.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="432.1" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (70 samples, 0.02%)</title><rect x="430.1" y="147.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="433.1" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (70 samples, 0.02%)</title><rect x="430.1" y="131.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="433.1" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (70 samples, 0.02%)</title><rect x="430.1" y="115.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.1" y="126.0"></text>
</g>
<g>
<title>[proxy-worker-1 tid=25856] (18,709 samples, 5.74%)</title><rect x="430.7" y="339.0" width="67.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="433.7" y="350.0">[proxy-..</text>
</g>
<g>
<title>java/lang/Thread.run (18,709 samples, 5.74%)</title><rect x="430.7" y="323.0" width="67.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="433.7" y="334.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (18,709 samples, 5.74%)</title><rect x="430.7" y="307.0" width="67.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="433.7" y="318.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (18,709 samples, 5.74%)</title><rect x="430.7" y="291.0" width="67.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.7" y="302.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (18,691 samples, 5.73%)</title><rect x="430.7" y="275.0" width="67.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="433.7" y="286.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (18,672 samples, 5.73%)</title><rect x="430.7" y="259.0" width="67.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="433.7" y="270.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (18,672 samples, 5.73%)</title><rect x="430.7" y="243.0" width="67.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="433.7" y="254.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (18,672 samples, 5.73%)</title><rect x="430.7" y="227.0" width="67.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="433.7" y="238.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (18,672 samples, 5.73%)</title><rect x="430.7" y="211.0" width="67.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.7" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (18,672 samples, 5.73%)</title><rect x="430.7" y="195.0" width="67.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="433.7" y="206.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (18,672 samples, 5.73%)</title><rect x="430.7" y="179.0" width="67.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.7" y="190.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (18,672 samples, 5.73%)</title><rect x="430.7" y="163.0" width="67.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="433.7" y="174.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (17,484 samples, 5.36%)</title><rect x="430.9" y="147.0" width="63.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.9" y="158.0">one/nio..</text>
</g>
<g>
<title>byte[] (6,996 samples, 2.15%)</title><rect x="430.9" y="131.0" width="25.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="433.9" y="142.0">b..</text>
</g>
<g>
<title>byte[] (10,488 samples, 3.22%)</title><rect x="456.2" y="131.0" width="37.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="459.2" y="142.0">byt..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (836 samples, 0.26%)</title><rect x="494.1" y="147.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="497.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (692 samples, 0.21%)</title><rect x="494.4" y="131.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="497.4" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (692 samples, 0.21%)</title><rect x="494.4" y="115.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="497.4" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (692 samples, 0.21%)</title><rect x="494.4" y="99.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.4" y="110.0"></text>
</g>
<g>
<title>char[] (521 samples, 0.16%)</title><rect x="494.4" y="83.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="497.4" y="94.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.02%)</title><rect x="496.2" y="83.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="499.2" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (100 samples, 0.03%)</title><rect x="496.5" y="83.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="499.5" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (100 samples, 0.03%)</title><rect x="496.5" y="67.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="499.5" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (100 samples, 0.03%)</title><rect x="496.5" y="51.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="499.5" y="62.0"></text>
</g>
<g>
<title>byte[] (100 samples, 0.03%)</title><rect x="496.5" y="35.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="499.5" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (212 samples, 0.07%)</title><rect x="497.2" y="147.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="500.2" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (208 samples, 0.06%)</title><rect x="497.2" y="131.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.2" y="142.0"></text>
</g>
<g>
<title>byte[] (208 samples, 0.06%)</title><rect x="497.2" y="115.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="500.2" y="126.0"></text>
</g>
<g>
<title>[proxy-worker-2 tid=25860] (17,887 samples, 5.49%)</title><rect x="498.4" y="339.0" width="64.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="501.4" y="350.0">[proxy-..</text>
</g>
<g>
<title>java/lang/Thread.run (17,887 samples, 5.49%)</title><rect x="498.4" y="323.0" width="64.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.4" y="334.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17,887 samples, 5.49%)</title><rect x="498.4" y="307.0" width="64.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.4" y="318.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17,887 samples, 5.49%)</title><rect x="498.4" y="291.0" width="64.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.4" y="302.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (17,866 samples, 5.48%)</title><rect x="498.4" y="275.0" width="64.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="501.4" y="286.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (17,843 samples, 5.47%)</title><rect x="498.4" y="259.0" width="64.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="501.4" y="270.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (17,843 samples, 5.47%)</title><rect x="498.4" y="243.0" width="64.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="501.4" y="254.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (17,843 samples, 5.47%)</title><rect x="498.4" y="227.0" width="64.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="501.4" y="238.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (17,843 samples, 5.47%)</title><rect x="498.4" y="211.0" width="64.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.4" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (17,843 samples, 5.47%)</title><rect x="498.4" y="195.0" width="64.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="501.4" y="206.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (17,843 samples, 5.47%)</title><rect x="498.4" y="179.0" width="64.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.4" y="190.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (17,843 samples, 5.47%)</title><rect x="498.4" y="163.0" width="64.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="501.4" y="174.0">one/nio..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (79 samples, 0.02%)</title><rect x="498.4" y="147.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="501.4" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (16,452 samples, 5.05%)</title><rect x="498.7" y="147.0" width="59.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.7" y="158.0">one/ni..</text>
</g>
<g>
<title>byte[] (6,847 samples, 2.10%)</title><rect x="498.7" y="131.0" width="24.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="501.7" y="142.0">b..</text>
</g>
<g>
<title>byte[] (9,605 samples, 2.95%)</title><rect x="523.4" y="131.0" width="34.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="526.4" y="142.0">by..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (951 samples, 0.29%)</title><rect x="558.2" y="147.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (772 samples, 0.24%)</title><rect x="558.5" y="131.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="561.5" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (772 samples, 0.24%)</title><rect x="558.5" y="115.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="561.5" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (772 samples, 0.24%)</title><rect x="558.5" y="99.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="561.5" y="110.0"></text>
</g>
<g>
<title>char[] (553 samples, 0.17%)</title><rect x="558.5" y="83.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="561.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String (97 samples, 0.03%)</title><rect x="560.5" y="83.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="563.5" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (122 samples, 0.04%)</title><rect x="560.9" y="83.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="563.9" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (122 samples, 0.04%)</title><rect x="560.9" y="67.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.9" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (122 samples, 0.04%)</title><rect x="560.9" y="51.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="563.9" y="62.0"></text>
</g>
<g>
<title>byte[] (122 samples, 0.04%)</title><rect x="560.9" y="35.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="563.9" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (258 samples, 0.08%)</title><rect x="561.7" y="147.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="564.7" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (252 samples, 0.08%)</title><rect x="561.7" y="131.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="564.7" y="142.0"></text>
</g>
<g>
<title>byte[] (252 samples, 0.08%)</title><rect x="561.7" y="115.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="564.7" y="126.0"></text>
</g>
<g>
<title>[proxy-worker-3 tid=25858] (19,496 samples, 5.98%)</title><rect x="563.1" y="339.0" width="70.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="566.1" y="350.0">[proxy-w..</text>
</g>
<g>
<title>java/lang/Thread.run (19,496 samples, 5.98%)</title><rect x="563.1" y="323.0" width="70.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="566.1" y="334.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (19,496 samples, 5.98%)</title><rect x="563.1" y="307.0" width="70.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="566.1" y="318.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (19,496 samples, 5.98%)</title><rect x="563.1" y="291.0" width="70.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="566.1" y="302.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (19,474 samples, 5.97%)</title><rect x="563.1" y="275.0" width="70.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="566.1" y="286.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (19,440 samples, 5.96%)</title><rect x="563.1" y="259.0" width="70.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="566.1" y="270.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (19,440 samples, 5.96%)</title><rect x="563.1" y="243.0" width="70.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.1" y="254.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (19,440 samples, 5.96%)</title><rect x="563.1" y="227.0" width="70.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="566.1" y="238.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (19,440 samples, 5.96%)</title><rect x="563.1" y="211.0" width="70.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="566.1" y="222.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (19,440 samples, 5.96%)</title><rect x="563.1" y="195.0" width="70.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="566.1" y="206.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (19,440 samples, 5.96%)</title><rect x="563.1" y="179.0" width="70.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="566.1" y="190.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (19,440 samples, 5.96%)</title><rect x="563.1" y="163.0" width="70.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="566.1" y="174.0">one/nio/..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (84 samples, 0.03%)</title><rect x="563.1" y="147.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="566.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (18,070 samples, 5.54%)</title><rect x="563.4" y="147.0" width="65.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="566.4" y="158.0">one/nio..</text>
</g>
<g>
<title>byte[] (6,843 samples, 2.10%)</title><rect x="563.4" y="131.0" width="24.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="566.4" y="142.0">b..</text>
</g>
<g>
<title>byte[] (11,227 samples, 3.44%)</title><rect x="588.2" y="131.0" width="40.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="591.2" y="142.0">byt..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (926 samples, 0.28%)</title><rect x="628.8" y="147.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="631.8" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (766 samples, 0.23%)</title><rect x="629.1" y="131.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.1" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (766 samples, 0.23%)</title><rect x="629.1" y="115.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="632.1" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (766 samples, 0.23%)</title><rect x="629.1" y="99.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.1" y="110.0"></text>
</g>
<g>
<title>char[] (575 samples, 0.18%)</title><rect x="629.1" y="83.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="632.1" y="94.0"></text>
</g>
<g>
<title>java.lang.String (83 samples, 0.03%)</title><rect x="631.2" y="83.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="634.2" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (108 samples, 0.03%)</title><rect x="631.5" y="83.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="634.5" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (108 samples, 0.03%)</title><rect x="631.5" y="67.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="634.5" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (108 samples, 0.03%)</title><rect x="631.5" y="51.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="634.5" y="62.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.03%)</title><rect x="631.5" y="35.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="634.5" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (285 samples, 0.09%)</title><rect x="632.2" y="147.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.2" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (279 samples, 0.09%)</title><rect x="632.2" y="131.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="635.2" y="142.0"></text>
</g>
<g>
<title>byte[] (279 samples, 0.09%)</title><rect x="632.2" y="115.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="635.2" y="126.0"></text>
</g>
<g>
<title>[proxy-worker-4 tid=25859] (18,671 samples, 5.73%)</title><rect x="633.7" y="339.0" width="67.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="636.7" y="350.0">[proxy-..</text>
</g>
<g>
<title>java/lang/Thread.run (18,671 samples, 5.73%)</title><rect x="633.7" y="323.0" width="67.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.7" y="334.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (18,671 samples, 5.73%)</title><rect x="633.7" y="307.0" width="67.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="636.7" y="318.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (18,671 samples, 5.73%)</title><rect x="633.7" y="291.0" width="67.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="636.7" y="302.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (18,646 samples, 5.72%)</title><rect x="633.7" y="275.0" width="67.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="636.7" y="286.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (18,604 samples, 5.71%)</title><rect x="633.7" y="259.0" width="67.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="636.7" y="270.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (18,604 samples, 5.71%)</title><rect x="633.7" y="243.0" width="67.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.7" y="254.0">java/ut..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (18,604 samples, 5.71%)</title><rect x="633.7" y="227.0" width="67.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="636.7" y="238.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (18,604 samples, 5.71%)</title><rect x="633.7" y="211.0" width="67.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="636.7" y="222.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (18,604 samples, 5.71%)</title><rect x="633.7" y="195.0" width="67.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="636.7" y="206.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (18,604 samples, 5.71%)</title><rect x="633.7" y="179.0" width="67.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="636.7" y="190.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (18,604 samples, 5.71%)</title><rect x="633.7" y="163.0" width="67.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="636.7" y="174.0">one/nio..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (85 samples, 0.03%)</title><rect x="633.7" y="147.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="636.7" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (17,169 samples, 5.27%)</title><rect x="634.0" y="147.0" width="62.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.0" y="158.0">one/ni..</text>
</g>
<g>
<title>byte[] (6,832 samples, 2.10%)</title><rect x="634.0" y="131.0" width="24.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="637.0" y="142.0">b..</text>
</g>
<g>
<title>byte[] (10,337 samples, 3.17%)</title><rect x="658.7" y="131.0" width="37.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="661.7" y="142.0">byt..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (956 samples, 0.29%)</title><rect x="696.1" y="147.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.1" y="158.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (782 samples, 0.24%)</title><rect x="696.4" y="131.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.4" y="142.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (782 samples, 0.24%)</title><rect x="696.4" y="115.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.4" y="126.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (782 samples, 0.24%)</title><rect x="696.4" y="99.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.4" y="110.0"></text>
</g>
<g>
<title>char[] (577 samples, 0.18%)</title><rect x="696.4" y="83.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="699.4" y="94.0"></text>
</g>
<g>
<title>java.lang.String (97 samples, 0.03%)</title><rect x="698.5" y="83.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="701.5" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (108 samples, 0.03%)</title><rect x="698.9" y="83.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.9" y="94.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (108 samples, 0.03%)</title><rect x="698.9" y="67.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.9" y="78.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (108 samples, 0.03%)</title><rect x="698.9" y="51.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="701.9" y="62.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.03%)</title><rect x="698.9" y="35.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="701.9" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (285 samples, 0.09%)</title><rect x="699.6" y="147.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.6" y="158.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (277 samples, 0.08%)</title><rect x="699.6" y="131.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.6" y="142.0"></text>
</g>
<g>
<title>byte[] (277 samples, 0.08%)</title><rect x="699.6" y="115.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="702.6" y="126.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (77 samples, 0.02%)</title><rect x="700.6" y="147.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="703.6" y="158.0"></text>
</g>
<g>
<title>java/lang/String.substring (77 samples, 0.02%)</title><rect x="700.6" y="131.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.6" y="142.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (77 samples, 0.02%)</title><rect x="700.6" y="115.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="703.6" y="126.0"></text>
</g>
<g>
<title>[worker-0 tid=25850] (8,931 samples, 2.74%)</title><rect x="701.3" y="339.0" width="32.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="704.3" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (8,931 samples, 2.74%)</title><rect x="701.3" y="323.0" width="32.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="704.3" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8,931 samples, 2.74%)</title><rect x="701.3" y="307.0" width="32.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="704.3" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8,931 samples, 2.74%)</title><rect x="701.3" y="291.0" width="32.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="704.3" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (121 samples, 0.04%)</title><rect x="701.3" y="275.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="704.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (121 samples, 0.04%)</title><rect x="701.3" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="704.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (120 samples, 0.04%)</title><rect x="701.3" y="243.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (120 samples, 0.04%)</title><rect x="701.3" y="227.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.3" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (120 samples, 0.04%)</title><rect x="701.3" y="211.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="704.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (8,810 samples, 2.70%)</title><rect x="701.7" y="275.0" width="31.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.7" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (8,810 samples, 2.70%)</title><rect x="701.7" y="259.0" width="31.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="704.7" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (8,087 samples, 2.48%)</title><rect x="701.7" y="243.0" width="29.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="704.7" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (8,087 samples, 2.48%)</title><rect x="701.7" y="227.0" width="29.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.7" y="238.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (260 samples, 0.08%)</title><rect x="701.7" y="211.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="704.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (260 samples, 0.08%)</title><rect x="701.7" y="195.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.7" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (260 samples, 0.08%)</title><rect x="701.7" y="179.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="704.7" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (225 samples, 0.07%)</title><rect x="702.6" y="211.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="705.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (7,602 samples, 2.33%)</title><rect x="703.5" y="211.0" width="27.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="706.5" y="222.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (295 samples, 0.09%)</title><rect x="703.5" y="195.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="706.5" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (295 samples, 0.09%)</title><rect x="703.5" y="179.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="706.5" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (295 samples, 0.09%)</title><rect x="703.5" y="163.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="706.5" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (295 samples, 0.09%)</title><rect x="703.5" y="147.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.5" y="158.0"></text>
</g>
<g>
<title>byte[] (295 samples, 0.09%)</title><rect x="703.5" y="131.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="706.5" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (530 samples, 0.16%)</title><rect x="704.5" y="195.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="707.5" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (530 samples, 0.16%)</title><rect x="704.5" y="179.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="707.5" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (530 samples, 0.16%)</title><rect x="704.5" y="163.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="707.5" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (238 samples, 0.07%)</title><rect x="706.4" y="195.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="709.4" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (238 samples, 0.07%)</title><rect x="706.4" y="179.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="709.4" y="190.0"></text>
</g>
<g>
<title>one.nio.http.Response (124 samples, 0.04%)</title><rect x="707.3" y="195.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="710.3" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (552 samples, 0.17%)</title><rect x="707.8" y="195.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.8" y="206.0"></text>
</g>
<g>
<title>byte[] (226 samples, 0.07%)</title><rect x="707.8" y="179.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="710.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (191 samples, 0.06%)</title><rect x="708.6" y="179.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="711.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String (135 samples, 0.04%)</title><rect x="709.3" y="179.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="712.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (416 samples, 0.13%)</title><rect x="709.8" y="195.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (416 samples, 0.13%)</title><rect x="709.8" y="179.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="712.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (414 samples, 0.13%)</title><rect x="709.8" y="163.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="712.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (118 samples, 0.04%)</title><rect x="709.8" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="712.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (118 samples, 0.04%)</title><rect x="709.8" y="131.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="712.8" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (83 samples, 0.03%)</title><rect x="709.9" y="115.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="712.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (126 samples, 0.04%)</title><rect x="710.2" y="147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="713.2" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (126 samples, 0.04%)</title><rect x="710.2" y="131.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="713.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (170 samples, 0.05%)</title><rect x="710.6" y="147.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.6" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (170 samples, 0.05%)</title><rect x="710.6" y="131.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="713.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (2,534 samples, 0.78%)</title><rect x="711.3" y="195.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="714.3" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (141 samples, 0.04%)</title><rect x="711.3" y="179.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="714.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (275 samples, 0.08%)</title><rect x="711.8" y="179.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="714.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (275 samples, 0.08%)</title><rect x="711.8" y="163.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="714.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.get$Lambda (275 samples, 0.08%)</title><rect x="711.8" y="147.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.8" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$68 (275 samples, 0.08%)</title><rect x="711.8" y="131.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="714.8" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (351 samples, 0.11%)</title><rect x="712.8" y="179.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="715.8" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (351 samples, 0.11%)</title><rect x="712.8" y="163.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="715.8" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (351 samples, 0.11%)</title><rect x="712.8" y="147.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="715.8" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (351 samples, 0.11%)</title><rect x="712.8" y="131.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="715.8" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (351 samples, 0.11%)</title><rect x="712.8" y="115.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="715.8" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (347 samples, 0.11%)</title><rect x="712.8" y="99.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="715.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (1,370 samples, 0.42%)</title><rect x="714.0" y="179.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.0" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ExecutorCompletionService$QueueingFuture (477 samples, 0.15%)</title><rect x="714.0" y="163.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="717.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.&lt;init&gt; (285 samples, 0.09%)</title><rect x="715.8" y="163.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (285 samples, 0.09%)</title><rect x="715.8" y="147.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (285 samples, 0.09%)</title><rect x="715.8" y="131.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="718.8" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (285 samples, 0.09%)</title><rect x="715.8" y="115.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="718.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.newTaskFor (344 samples, 0.11%)</title><rect x="716.8" y="163.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (344 samples, 0.11%)</title><rect x="716.8" y="147.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.8" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (344 samples, 0.11%)</title><rect x="716.8" y="131.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="719.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (264 samples, 0.08%)</title><rect x="718.0" y="163.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="721.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (264 samples, 0.08%)</title><rect x="718.0" y="147.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="721.0" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (264 samples, 0.08%)</title><rect x="718.0" y="131.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="721.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (396 samples, 0.12%)</title><rect x="719.0" y="179.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.0" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (396 samples, 0.12%)</title><rect x="719.0" y="163.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="722.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (394 samples, 0.12%)</title><rect x="719.0" y="147.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.0" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (394 samples, 0.12%)</title><rect x="719.0" y="131.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="722.0" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (394 samples, 0.12%)</title><rect x="719.0" y="115.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="722.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (2,913 samples, 0.89%)</title><rect x="720.4" y="195.0" width="10.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="723.4" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (140 samples, 0.04%)</title><rect x="720.4" y="179.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="723.4" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (537 samples, 0.16%)</title><rect x="720.9" y="179.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="723.9" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (138 samples, 0.04%)</title><rect x="720.9" y="163.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="723.9" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (399 samples, 0.12%)</title><rect x="721.4" y="163.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.4" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (211 samples, 0.06%)</title><rect x="721.4" y="147.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="724.4" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (211 samples, 0.06%)</title><rect x="721.4" y="131.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="724.4" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (188 samples, 0.06%)</title><rect x="722.2" y="147.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="725.2" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (188 samples, 0.06%)</title><rect x="722.2" y="131.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="725.2" y="142.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (83 samples, 0.03%)</title><rect x="722.9" y="179.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.9" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (83 samples, 0.03%)</title><rect x="722.9" y="163.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="725.9" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (307 samples, 0.09%)</title><rect x="723.2" y="179.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="726.2" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (307 samples, 0.09%)</title><rect x="723.2" y="163.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="726.2" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (307 samples, 0.09%)</title><rect x="723.2" y="147.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="726.2" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (307 samples, 0.09%)</title><rect x="723.2" y="131.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="726.2" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (307 samples, 0.09%)</title><rect x="723.2" y="115.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="726.2" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (305 samples, 0.09%)</title><rect x="723.2" y="99.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="726.2" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (267 samples, 0.08%)</title><rect x="724.3" y="179.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="727.3" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (267 samples, 0.08%)</title><rect x="724.3" y="163.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="727.3" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (267 samples, 0.08%)</title><rect x="724.3" y="147.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="727.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (1,569 samples, 0.48%)</title><rect x="725.3" y="179.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.3" y="190.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (1,285 samples, 0.39%)</title><rect x="725.3" y="163.0" width="4.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="728.3" y="174.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (793 samples, 0.24%)</title><rect x="725.3" y="147.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="728.3" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (793 samples, 0.24%)</title><rect x="725.3" y="131.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.3" y="142.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (291 samples, 0.09%)</title><rect x="725.3" y="115.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="728.3" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (502 samples, 0.15%)</title><rect x="726.4" y="115.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.4" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (502 samples, 0.15%)</title><rect x="726.4" y="99.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="729.4" y="110.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (502 samples, 0.15%)</title><rect x="726.4" y="83.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="729.4" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (502 samples, 0.15%)</title><rect x="726.4" y="67.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="729.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (270 samples, 0.08%)</title><rect x="726.4" y="51.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="729.4" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (232 samples, 0.07%)</title><rect x="727.3" y="51.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="730.3" y="62.0"></text>
</g>
<g>
<title>byte[] (232 samples, 0.07%)</title><rect x="727.3" y="35.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="730.3" y="46.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (492 samples, 0.15%)</title><rect x="728.2" y="147.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="731.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (492 samples, 0.15%)</title><rect x="728.2" y="131.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="731.2" y="142.0"></text>
</g>
<g>
<title>byte[] (190 samples, 0.06%)</title><rect x="728.2" y="115.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="731.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (302 samples, 0.09%)</title><rect x="728.9" y="115.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="731.9" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (302 samples, 0.09%)</title><rect x="728.9" y="99.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.9" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (302 samples, 0.09%)</title><rect x="728.9" y="83.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="731.9" y="94.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (134 samples, 0.04%)</title><rect x="730.0" y="163.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.0" y="174.0"></text>
</g>
<g>
<title>java.lang.Long (134 samples, 0.04%)</title><rect x="730.0" y="147.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="733.0" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (148 samples, 0.05%)</title><rect x="730.4" y="163.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.4" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (148 samples, 0.05%)</title><rect x="730.4" y="147.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.4" y="158.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (148 samples, 0.05%)</title><rect x="730.4" y="131.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="733.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (723 samples, 0.22%)</title><rect x="731.0" y="243.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="734.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (723 samples, 0.22%)</title><rect x="731.0" y="227.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="734.0" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (723 samples, 0.22%)</title><rect x="731.0" y="211.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="734.0" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (493 samples, 0.15%)</title><rect x="731.0" y="195.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="734.0" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (493 samples, 0.15%)</title><rect x="731.0" y="179.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="734.0" y="190.0"></text>
</g>
<g>
<title>byte[] (481 samples, 0.15%)</title><rect x="731.0" y="163.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="734.0" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (230 samples, 0.07%)</title><rect x="732.8" y="195.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.8" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (230 samples, 0.07%)</title><rect x="732.8" y="179.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="735.8" y="190.0"></text>
</g>
<g>
<title>[worker-0 tid=25857] (9,059 samples, 2.78%)</title><rect x="733.6" y="339.0" width="32.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="736.6" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (9,059 samples, 2.78%)</title><rect x="733.6" y="323.0" width="32.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.6" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9,059 samples, 2.78%)</title><rect x="733.6" y="307.0" width="32.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="736.6" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9,059 samples, 2.78%)</title><rect x="733.6" y="291.0" width="32.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="736.6" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (649 samples, 0.20%)</title><rect x="733.6" y="275.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (649 samples, 0.20%)</title><rect x="733.6" y="259.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="736.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (646 samples, 0.20%)</title><rect x="733.6" y="243.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="736.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (646 samples, 0.20%)</title><rect x="733.6" y="227.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="736.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (646 samples, 0.20%)</title><rect x="733.6" y="211.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="736.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (8,410 samples, 2.58%)</title><rect x="735.9" y="275.0" width="30.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="738.9" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (8,410 samples, 2.58%)</title><rect x="735.9" y="259.0" width="30.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="738.9" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (6,214 samples, 1.91%)</title><rect x="735.9" y="243.0" width="22.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="738.9" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (6,214 samples, 1.91%)</title><rect x="735.9" y="227.0" width="22.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="738.9" y="238.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (801 samples, 0.25%)</title><rect x="735.9" y="211.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="738.9" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (801 samples, 0.25%)</title><rect x="735.9" y="195.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="738.9" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (801 samples, 0.25%)</title><rect x="735.9" y="179.0" width="2.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="738.9" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (762 samples, 0.23%)</title><rect x="738.8" y="211.0" width="2.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="741.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (4,651 samples, 1.43%)</title><rect x="741.6" y="211.0" width="16.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="744.6" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (508 samples, 0.16%)</title><rect x="741.6" y="195.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="744.6" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (508 samples, 0.16%)</title><rect x="741.6" y="179.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="744.6" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (508 samples, 0.16%)</title><rect x="741.6" y="163.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="744.6" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (508 samples, 0.16%)</title><rect x="741.6" y="147.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="744.6" y="158.0"></text>
</g>
<g>
<title>byte[] (508 samples, 0.16%)</title><rect x="741.6" y="131.0" width="1.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="744.6" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (814 samples, 0.25%)</title><rect x="743.4" y="195.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.4" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (814 samples, 0.25%)</title><rect x="743.4" y="179.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="746.4" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (814 samples, 0.25%)</title><rect x="743.4" y="163.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="746.4" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (379 samples, 0.12%)</title><rect x="746.4" y="195.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="749.4" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,615 samples, 0.50%)</title><rect x="747.8" y="195.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.8" y="206.0"></text>
</g>
<g>
<title>byte[] (675 samples, 0.21%)</title><rect x="747.8" y="179.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="750.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (551 samples, 0.17%)</title><rect x="750.2" y="179.0" width="2.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="753.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String (389 samples, 0.12%)</title><rect x="752.2" y="179.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="755.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (1,335 samples, 0.41%)</title><rect x="753.6" y="195.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="756.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (1,335 samples, 0.41%)</title><rect x="753.6" y="179.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="756.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (1,334 samples, 0.41%)</title><rect x="753.6" y="163.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (356 samples, 0.11%)</title><rect x="753.6" y="147.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="756.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (356 samples, 0.11%)</title><rect x="753.6" y="131.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="756.6" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (115 samples, 0.04%)</title><rect x="753.6" y="115.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="756.6" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (241 samples, 0.07%)</title><rect x="754.0" y="115.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="757.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (446 samples, 0.14%)</title><rect x="754.9" y="147.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="757.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (446 samples, 0.14%)</title><rect x="754.9" y="131.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="757.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (532 samples, 0.16%)</title><rect x="756.5" y="147.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="759.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (532 samples, 0.16%)</title><rect x="756.5" y="131.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="759.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (2,196 samples, 0.67%)</title><rect x="758.4" y="243.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="761.4" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,196 samples, 0.67%)</title><rect x="758.4" y="227.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="761.4" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,196 samples, 0.67%)</title><rect x="758.4" y="211.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="761.4" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,510 samples, 0.46%)</title><rect x="758.4" y="195.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="761.4" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,510 samples, 0.46%)</title><rect x="758.4" y="179.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="761.4" y="190.0"></text>
</g>
<g>
<title>byte[] (1,385 samples, 0.42%)</title><rect x="758.4" y="163.0" width="5.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="761.4" y="174.0"></text>
</g>
<g>
<title>byte[] (125 samples, 0.04%)</title><rect x="763.5" y="163.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="766.5" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (686 samples, 0.21%)</title><rect x="763.9" y="195.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.9" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (686 samples, 0.21%)</title><rect x="763.9" y="179.0" width="2.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="766.9" y="190.0"></text>
</g>
<g>
<title>[worker-0 tid=25862] (9,057 samples, 2.78%)</title><rect x="766.4" y="339.0" width="32.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="769.4" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (9,057 samples, 2.78%)</title><rect x="766.4" y="323.0" width="32.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.4" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9,057 samples, 2.78%)</title><rect x="766.4" y="307.0" width="32.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="769.4" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9,057 samples, 2.78%)</title><rect x="766.4" y="291.0" width="32.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="769.4" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (635 samples, 0.19%)</title><rect x="766.4" y="275.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="769.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (635 samples, 0.19%)</title><rect x="766.4" y="259.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="769.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (632 samples, 0.19%)</title><rect x="766.4" y="243.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (632 samples, 0.19%)</title><rect x="766.4" y="227.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="769.4" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (632 samples, 0.19%)</title><rect x="766.4" y="211.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="769.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (8,422 samples, 2.58%)</title><rect x="768.7" y="275.0" width="30.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="771.7" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (8,422 samples, 2.58%)</title><rect x="768.7" y="259.0" width="30.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.7" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (6,285 samples, 1.93%)</title><rect x="768.7" y="243.0" width="22.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.7" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (6,285 samples, 1.93%)</title><rect x="768.7" y="227.0" width="22.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="771.7" y="238.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (806 samples, 0.25%)</title><rect x="768.7" y="211.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="771.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (806 samples, 0.25%)</title><rect x="768.7" y="195.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="771.7" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (806 samples, 0.25%)</title><rect x="768.7" y="179.0" width="2.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="771.7" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (673 samples, 0.21%)</title><rect x="771.6" y="211.0" width="2.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="774.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (4,806 samples, 1.47%)</title><rect x="774.0" y="211.0" width="17.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="777.0" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (493 samples, 0.15%)</title><rect x="774.0" y="195.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="777.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (493 samples, 0.15%)</title><rect x="774.0" y="179.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.0" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (493 samples, 0.15%)</title><rect x="774.0" y="163.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="777.0" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (493 samples, 0.15%)</title><rect x="774.0" y="147.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.0" y="158.0"></text>
</g>
<g>
<title>byte[] (493 samples, 0.15%)</title><rect x="774.0" y="131.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="777.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (840 samples, 0.26%)</title><rect x="775.8" y="195.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="778.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (840 samples, 0.26%)</title><rect x="775.8" y="179.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="778.8" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (840 samples, 0.26%)</title><rect x="775.8" y="163.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="778.8" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (441 samples, 0.14%)</title><rect x="778.9" y="195.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="781.9" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,674 samples, 0.51%)</title><rect x="780.5" y="195.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.5" y="206.0"></text>
</g>
<g>
<title>byte[] (670 samples, 0.21%)</title><rect x="780.5" y="179.0" width="2.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="783.5" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (564 samples, 0.17%)</title><rect x="782.9" y="179.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="785.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String (440 samples, 0.13%)</title><rect x="784.9" y="179.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="787.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (1,358 samples, 0.42%)</title><rect x="786.5" y="195.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (1,358 samples, 0.42%)</title><rect x="786.5" y="179.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (1,356 samples, 0.42%)</title><rect x="786.5" y="163.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (353 samples, 0.11%)</title><rect x="786.5" y="147.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="789.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (353 samples, 0.11%)</title><rect x="786.5" y="131.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="789.5" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (111 samples, 0.03%)</title><rect x="786.5" y="115.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="789.5" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (242 samples, 0.07%)</title><rect x="786.9" y="115.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="789.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (423 samples, 0.13%)</title><rect x="787.8" y="147.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="790.8" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (423 samples, 0.13%)</title><rect x="787.8" y="131.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="790.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (580 samples, 0.18%)</title><rect x="789.3" y="147.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="792.3" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (580 samples, 0.18%)</title><rect x="789.3" y="131.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="792.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (2,137 samples, 0.66%)</title><rect x="791.4" y="243.0" width="7.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="794.4" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,137 samples, 0.66%)</title><rect x="791.4" y="227.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.4" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,137 samples, 0.66%)</title><rect x="791.4" y="211.0" width="7.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="794.4" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,442 samples, 0.44%)</title><rect x="791.4" y="195.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="794.4" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,442 samples, 0.44%)</title><rect x="791.4" y="179.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.4" y="190.0"></text>
</g>
<g>
<title>byte[] (1,330 samples, 0.41%)</title><rect x="791.4" y="163.0" width="4.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="794.4" y="174.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.03%)</title><rect x="796.2" y="163.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="799.2" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (695 samples, 0.21%)</title><rect x="796.7" y="195.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.7" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (695 samples, 0.21%)</title><rect x="796.7" y="179.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="799.7" y="190.0"></text>
</g>
<g>
<title>[worker-1 tid=25861] (9,048 samples, 2.78%)</title><rect x="799.2" y="339.0" width="32.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="802.2" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (9,048 samples, 2.78%)</title><rect x="799.2" y="323.0" width="32.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="802.2" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9,048 samples, 2.78%)</title><rect x="799.2" y="307.0" width="32.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="802.2" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9,048 samples, 2.78%)</title><rect x="799.2" y="291.0" width="32.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.2" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (653 samples, 0.20%)</title><rect x="799.2" y="275.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="802.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (653 samples, 0.20%)</title><rect x="799.2" y="259.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="802.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (651 samples, 0.20%)</title><rect x="799.2" y="243.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="802.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (651 samples, 0.20%)</title><rect x="799.2" y="227.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="802.2" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (651 samples, 0.20%)</title><rect x="799.2" y="211.0" width="2.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="802.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (8,395 samples, 2.58%)</title><rect x="801.5" y="275.0" width="30.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="804.5" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (8,395 samples, 2.58%)</title><rect x="801.5" y="259.0" width="30.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="804.5" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (6,346 samples, 1.95%)</title><rect x="801.5" y="243.0" width="23.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="804.5" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (6,346 samples, 1.95%)</title><rect x="801.5" y="227.0" width="23.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.5" y="238.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (834 samples, 0.26%)</title><rect x="801.5" y="211.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.5" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (834 samples, 0.26%)</title><rect x="801.5" y="195.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.5" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (834 samples, 0.26%)</title><rect x="801.5" y="179.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="804.5" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (722 samples, 0.22%)</title><rect x="804.6" y="211.0" width="2.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="807.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (4,790 samples, 1.47%)</title><rect x="807.2" y="211.0" width="17.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="810.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (491 samples, 0.15%)</title><rect x="807.2" y="195.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="810.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (491 samples, 0.15%)</title><rect x="807.2" y="179.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.2" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (491 samples, 0.15%)</title><rect x="807.2" y="163.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="810.2" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (491 samples, 0.15%)</title><rect x="807.2" y="147.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="810.2" y="158.0"></text>
</g>
<g>
<title>byte[] (491 samples, 0.15%)</title><rect x="807.2" y="131.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="810.2" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (848 samples, 0.26%)</title><rect x="808.9" y="195.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="811.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (848 samples, 0.26%)</title><rect x="808.9" y="179.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="811.9" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (848 samples, 0.26%)</title><rect x="808.9" y="163.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="811.9" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (381 samples, 0.12%)</title><rect x="812.0" y="195.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="815.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,750 samples, 0.54%)</title><rect x="813.4" y="195.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="816.4" y="206.0"></text>
</g>
<g>
<title>byte[] (715 samples, 0.22%)</title><rect x="813.4" y="179.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="816.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (595 samples, 0.18%)</title><rect x="816.0" y="179.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="819.0" y="190.0"></text>
</g>
<g>
<title>java.lang.String (440 samples, 0.13%)</title><rect x="818.1" y="179.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="821.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (1,320 samples, 0.40%)</title><rect x="819.7" y="195.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (1,320 samples, 0.40%)</title><rect x="819.7" y="179.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="822.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (1,319 samples, 0.40%)</title><rect x="819.7" y="163.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (349 samples, 0.11%)</title><rect x="819.7" y="147.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="822.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (349 samples, 0.11%)</title><rect x="819.7" y="131.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="822.7" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (126 samples, 0.04%)</title><rect x="819.7" y="115.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="822.7" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (223 samples, 0.07%)</title><rect x="820.2" y="115.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="823.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (413 samples, 0.13%)</title><rect x="821.0" y="147.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="824.0" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (413 samples, 0.13%)</title><rect x="821.0" y="131.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="824.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (557 samples, 0.17%)</title><rect x="822.5" y="147.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="825.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (557 samples, 0.17%)</title><rect x="822.5" y="131.0" width="2.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="825.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (2,049 samples, 0.63%)</title><rect x="824.5" y="243.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="827.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,049 samples, 0.63%)</title><rect x="824.5" y="227.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="827.5" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,049 samples, 0.63%)</title><rect x="824.5" y="211.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="827.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,404 samples, 0.43%)</title><rect x="824.5" y="195.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="827.5" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,404 samples, 0.43%)</title><rect x="824.5" y="179.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="827.5" y="190.0"></text>
</g>
<g>
<title>byte[] (1,294 samples, 0.40%)</title><rect x="824.5" y="163.0" width="4.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="827.5" y="174.0"></text>
</g>
<g>
<title>byte[] (110 samples, 0.03%)</title><rect x="829.2" y="163.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="832.2" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (645 samples, 0.20%)</title><rect x="829.6" y="195.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="832.6" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (645 samples, 0.20%)</title><rect x="829.6" y="179.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="832.6" y="190.0"></text>
</g>
<g>
<title>[worker-1 tid=25864] (9,045 samples, 2.77%)</title><rect x="831.9" y="339.0" width="32.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="834.9" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (9,045 samples, 2.77%)</title><rect x="831.9" y="323.0" width="32.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="834.9" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9,045 samples, 2.77%)</title><rect x="831.9" y="307.0" width="32.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="834.9" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9,045 samples, 2.77%)</title><rect x="831.9" y="291.0" width="32.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="834.9" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (613 samples, 0.19%)</title><rect x="831.9" y="275.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="834.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (613 samples, 0.19%)</title><rect x="831.9" y="259.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="834.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (610 samples, 0.19%)</title><rect x="831.9" y="243.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="834.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (610 samples, 0.19%)</title><rect x="831.9" y="227.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="834.9" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (610 samples, 0.19%)</title><rect x="831.9" y="211.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="834.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (8,432 samples, 2.59%)</title><rect x="834.1" y="275.0" width="30.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="837.1" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (8,432 samples, 2.59%)</title><rect x="834.1" y="259.0" width="30.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.1" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (6,320 samples, 1.94%)</title><rect x="834.1" y="243.0" width="22.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.1" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (6,320 samples, 1.94%)</title><rect x="834.1" y="227.0" width="22.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="837.1" y="238.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (816 samples, 0.25%)</title><rect x="834.1" y="211.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="837.1" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (816 samples, 0.25%)</title><rect x="834.1" y="195.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="837.1" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (816 samples, 0.25%)</title><rect x="834.1" y="179.0" width="3.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="837.1" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (715 samples, 0.22%)</title><rect x="837.1" y="211.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="840.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (4,789 samples, 1.47%)</title><rect x="839.7" y="211.0" width="17.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="842.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (498 samples, 0.15%)</title><rect x="839.7" y="195.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="842.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (498 samples, 0.15%)</title><rect x="839.7" y="179.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="842.7" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (498 samples, 0.15%)</title><rect x="839.7" y="163.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.7" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (498 samples, 0.15%)</title><rect x="839.7" y="147.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="842.7" y="158.0"></text>
</g>
<g>
<title>byte[] (498 samples, 0.15%)</title><rect x="839.7" y="131.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="842.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (852 samples, 0.26%)</title><rect x="841.5" y="195.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="844.5" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (852 samples, 0.26%)</title><rect x="841.5" y="179.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="844.5" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (852 samples, 0.26%)</title><rect x="841.5" y="163.0" width="3.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="844.5" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (417 samples, 0.13%)</title><rect x="844.6" y="195.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="847.6" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,697 samples, 0.52%)</title><rect x="846.1" y="195.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="849.1" y="206.0"></text>
</g>
<g>
<title>byte[] (692 samples, 0.21%)</title><rect x="846.1" y="179.0" width="2.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="849.1" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (581 samples, 0.18%)</title><rect x="848.6" y="179.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="851.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String (424 samples, 0.13%)</title><rect x="850.7" y="179.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="853.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (1,325 samples, 0.41%)</title><rect x="852.2" y="195.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="855.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (1,325 samples, 0.41%)</title><rect x="852.2" y="179.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (1,321 samples, 0.41%)</title><rect x="852.2" y="163.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (363 samples, 0.11%)</title><rect x="852.2" y="147.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="855.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (363 samples, 0.11%)</title><rect x="852.2" y="131.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="855.2" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (131 samples, 0.04%)</title><rect x="852.2" y="115.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="855.2" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (232 samples, 0.07%)</title><rect x="852.7" y="115.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="855.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (405 samples, 0.12%)</title><rect x="853.5" y="147.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="856.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (405 samples, 0.12%)</title><rect x="853.5" y="131.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="856.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (553 samples, 0.17%)</title><rect x="855.0" y="147.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="858.0" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (553 samples, 0.17%)</title><rect x="855.0" y="131.0" width="2.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="858.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (2,112 samples, 0.65%)</title><rect x="857.0" y="243.0" width="7.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="860.0" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,112 samples, 0.65%)</title><rect x="857.0" y="227.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="860.0" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,112 samples, 0.65%)</title><rect x="857.0" y="211.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="860.0" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,453 samples, 0.45%)</title><rect x="857.0" y="195.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="860.0" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,453 samples, 0.45%)</title><rect x="857.0" y="179.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="860.0" y="190.0"></text>
</g>
<g>
<title>byte[] (1,341 samples, 0.41%)</title><rect x="857.0" y="163.0" width="4.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="860.0" y="174.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.03%)</title><rect x="861.9" y="163.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="864.9" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (659 samples, 0.20%)</title><rect x="862.3" y="195.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="865.3" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (659 samples, 0.20%)</title><rect x="862.3" y="179.0" width="2.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="865.3" y="190.0"></text>
</g>
<g>
<title>[worker-10 tid=26520] (3,775 samples, 1.16%)</title><rect x="864.7" y="339.0" width="13.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="867.7" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,775 samples, 1.16%)</title><rect x="864.7" y="323.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="867.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,775 samples, 1.16%)</title><rect x="864.7" y="307.0" width="13.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,775 samples, 1.16%)</title><rect x="864.7" y="291.0" width="13.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="867.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (3,717 samples, 1.14%)</title><rect x="864.9" y="275.0" width="13.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="867.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (3,717 samples, 1.14%)</title><rect x="864.9" y="259.0" width="13.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="867.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (3,428 samples, 1.05%)</title><rect x="864.9" y="243.0" width="12.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="867.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (3,428 samples, 1.05%)</title><rect x="864.9" y="227.0" width="12.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="867.9" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (121 samples, 0.04%)</title><rect x="864.9" y="211.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="867.9" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (121 samples, 0.04%)</title><rect x="864.9" y="195.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="867.9" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (121 samples, 0.04%)</title><rect x="864.9" y="179.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="867.9" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (102 samples, 0.03%)</title><rect x="865.3" y="211.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="868.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (3,205 samples, 0.98%)</title><rect x="865.7" y="211.0" width="11.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="868.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (154 samples, 0.05%)</title><rect x="865.7" y="195.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="868.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (154 samples, 0.05%)</title><rect x="865.7" y="179.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="868.7" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (154 samples, 0.05%)</title><rect x="865.7" y="163.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="868.7" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (154 samples, 0.05%)</title><rect x="865.7" y="147.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="868.7" y="158.0"></text>
</g>
<g>
<title>byte[] (154 samples, 0.05%)</title><rect x="865.7" y="131.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="868.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (205 samples, 0.06%)</title><rect x="866.2" y="195.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="869.2" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (205 samples, 0.06%)</title><rect x="866.2" y="179.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="869.2" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (205 samples, 0.06%)</title><rect x="866.2" y="163.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="869.2" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (100 samples, 0.03%)</title><rect x="867.0" y="195.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="870.0" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (100 samples, 0.03%)</title><rect x="867.0" y="179.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="870.0" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (223 samples, 0.07%)</title><rect x="867.5" y="195.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="870.5" y="206.0"></text>
</g>
<g>
<title>byte[] (84 samples, 0.03%)</title><rect x="867.5" y="179.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="870.5" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (75 samples, 0.02%)</title><rect x="867.9" y="179.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="870.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (189 samples, 0.06%)</title><rect x="868.4" y="195.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="871.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (189 samples, 0.06%)</title><rect x="868.4" y="179.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="871.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (187 samples, 0.06%)</title><rect x="868.4" y="163.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="871.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (1,075 samples, 0.33%)</title><rect x="869.0" y="195.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="872.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (114 samples, 0.03%)</title><rect x="869.2" y="179.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="872.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (114 samples, 0.03%)</title><rect x="869.2" y="163.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="872.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.get$Lambda (114 samples, 0.03%)</title><rect x="869.2" y="147.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="872.2" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$68 (114 samples, 0.03%)</title><rect x="869.2" y="131.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="872.2" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (134 samples, 0.04%)</title><rect x="869.6" y="179.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="872.6" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (134 samples, 0.04%)</title><rect x="869.6" y="163.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="872.6" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (134 samples, 0.04%)</title><rect x="869.6" y="147.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="872.6" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (134 samples, 0.04%)</title><rect x="869.6" y="131.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="872.6" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (134 samples, 0.04%)</title><rect x="869.6" y="115.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="872.6" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (134 samples, 0.04%)</title><rect x="869.6" y="99.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="872.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (589 samples, 0.18%)</title><rect x="870.1" y="179.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="873.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ExecutorCompletionService$QueueingFuture (194 samples, 0.06%)</title><rect x="870.1" y="163.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="873.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.&lt;init&gt; (113 samples, 0.03%)</title><rect x="870.8" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="873.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (113 samples, 0.03%)</title><rect x="870.8" y="147.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="873.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (113 samples, 0.03%)</title><rect x="870.8" y="131.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="873.8" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (113 samples, 0.03%)</title><rect x="870.8" y="115.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="873.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.newTaskFor (152 samples, 0.05%)</title><rect x="871.2" y="163.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="874.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (152 samples, 0.05%)</title><rect x="871.2" y="147.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="874.2" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (152 samples, 0.05%)</title><rect x="871.2" y="131.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="874.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (130 samples, 0.04%)</title><rect x="871.8" y="163.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="874.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (130 samples, 0.04%)</title><rect x="871.8" y="147.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="874.8" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (130 samples, 0.04%)</title><rect x="871.8" y="131.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="874.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (192 samples, 0.06%)</title><rect x="872.2" y="179.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (192 samples, 0.06%)</title><rect x="872.2" y="163.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="875.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (190 samples, 0.06%)</title><rect x="872.2" y="147.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (190 samples, 0.06%)</title><rect x="872.2" y="131.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="875.2" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (190 samples, 0.06%)</title><rect x="872.2" y="115.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="875.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (1,201 samples, 0.37%)</title><rect x="872.9" y="195.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="875.9" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (241 samples, 0.07%)</title><rect x="873.1" y="179.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.1" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (187 samples, 0.06%)</title><rect x="873.3" y="163.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="876.3" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (102 samples, 0.03%)</title><rect x="873.3" y="147.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="876.3" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (102 samples, 0.03%)</title><rect x="873.3" y="131.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="876.3" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (85 samples, 0.03%)</title><rect x="873.7" y="147.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.7" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (85 samples, 0.03%)</title><rect x="873.7" y="131.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="876.7" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (118 samples, 0.04%)</title><rect x="874.2" y="179.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="877.2" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (118 samples, 0.04%)</title><rect x="874.2" y="163.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="877.2" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (118 samples, 0.04%)</title><rect x="874.2" y="147.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="877.2" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (118 samples, 0.04%)</title><rect x="874.2" y="131.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="877.2" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (118 samples, 0.04%)</title><rect x="874.2" y="115.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="877.2" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (118 samples, 0.04%)</title><rect x="874.2" y="99.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="877.2" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (117 samples, 0.04%)</title><rect x="874.6" y="179.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="877.6" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (117 samples, 0.04%)</title><rect x="874.6" y="163.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="877.6" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (117 samples, 0.04%)</title><rect x="874.6" y="147.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="877.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (620 samples, 0.19%)</title><rect x="875.0" y="179.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="878.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (502 samples, 0.15%)</title><rect x="875.0" y="163.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="878.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (308 samples, 0.09%)</title><rect x="875.0" y="147.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (308 samples, 0.09%)</title><rect x="875.0" y="131.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="878.0" y="142.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (120 samples, 0.04%)</title><rect x="875.0" y="115.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="878.0" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (188 samples, 0.06%)</title><rect x="875.5" y="115.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="878.5" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (188 samples, 0.06%)</title><rect x="875.5" y="99.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="878.5" y="110.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (188 samples, 0.06%)</title><rect x="875.5" y="83.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="878.5" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (188 samples, 0.06%)</title><rect x="875.5" y="67.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="878.5" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (97 samples, 0.03%)</title><rect x="875.5" y="51.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="878.5" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (91 samples, 0.03%)</title><rect x="875.8" y="51.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="878.8" y="62.0"></text>
</g>
<g>
<title>byte[] (91 samples, 0.03%)</title><rect x="875.8" y="35.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="878.8" y="46.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (194 samples, 0.06%)</title><rect x="876.1" y="147.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="879.1" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (194 samples, 0.06%)</title><rect x="876.1" y="131.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="879.1" y="142.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.02%)</title><rect x="876.1" y="115.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="879.1" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (120 samples, 0.04%)</title><rect x="876.4" y="115.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="879.4" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (120 samples, 0.04%)</title><rect x="876.4" y="99.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="879.4" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (120 samples, 0.04%)</title><rect x="876.4" y="83.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="879.4" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (289 samples, 0.09%)</title><rect x="877.3" y="243.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="880.3" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (289 samples, 0.09%)</title><rect x="877.3" y="227.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="880.3" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (289 samples, 0.09%)</title><rect x="877.3" y="211.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="880.3" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (183 samples, 0.06%)</title><rect x="877.3" y="195.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="880.3" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (183 samples, 0.06%)</title><rect x="877.3" y="179.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="880.3" y="190.0"></text>
</g>
<g>
<title>byte[] (182 samples, 0.06%)</title><rect x="877.3" y="163.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="880.3" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (106 samples, 0.03%)</title><rect x="877.9" y="195.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="880.9" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (106 samples, 0.03%)</title><rect x="877.9" y="179.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="880.9" y="190.0"></text>
</g>
<g>
<title>[worker-11 tid=26525] (1,286 samples, 0.39%)</title><rect x="878.3" y="339.0" width="4.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="881.3" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,286 samples, 0.39%)</title><rect x="878.3" y="323.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="881.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,286 samples, 0.39%)</title><rect x="878.3" y="307.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="881.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,286 samples, 0.39%)</title><rect x="878.3" y="291.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="881.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (1,264 samples, 0.39%)</title><rect x="878.4" y="275.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="881.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (1,264 samples, 0.39%)</title><rect x="878.4" y="259.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="881.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (1,159 samples, 0.36%)</title><rect x="878.4" y="243.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="881.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (1,159 samples, 0.36%)</title><rect x="878.4" y="227.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="881.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (1,094 samples, 0.34%)</title><rect x="878.6" y="211.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="881.6" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (77 samples, 0.02%)</title><rect x="878.8" y="195.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="881.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (77 samples, 0.02%)</title><rect x="878.8" y="179.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="881.8" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (77 samples, 0.02%)</title><rect x="878.8" y="163.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="881.8" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (93 samples, 0.03%)</title><rect x="879.2" y="195.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="882.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (75 samples, 0.02%)</title><rect x="879.6" y="195.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="882.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (75 samples, 0.02%)</title><rect x="879.6" y="179.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (75 samples, 0.02%)</title><rect x="879.6" y="163.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="882.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (349 samples, 0.11%)</title><rect x="879.9" y="195.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="882.9" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (194 samples, 0.06%)</title><rect x="880.2" y="179.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="883.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ExecutorCompletionService$QueueingFuture (74 samples, 0.02%)</title><rect x="880.2" y="163.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="883.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (409 samples, 0.13%)</title><rect x="881.1" y="195.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="884.1" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (73 samples, 0.02%)</title><rect x="881.2" y="179.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="884.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (217 samples, 0.07%)</title><rect x="881.8" y="179.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="884.8" y="190.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (164 samples, 0.05%)</title><rect x="881.8" y="163.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="884.8" y="174.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (90 samples, 0.03%)</title><rect x="881.8" y="147.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="884.8" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (90 samples, 0.03%)</title><rect x="881.8" y="131.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="884.8" y="142.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (74 samples, 0.02%)</title><rect x="882.1" y="147.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="885.1" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (74 samples, 0.02%)</title><rect x="882.1" y="131.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="885.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (105 samples, 0.03%)</title><rect x="882.6" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="885.6" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (105 samples, 0.03%)</title><rect x="882.6" y="227.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="885.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (105 samples, 0.03%)</title><rect x="882.6" y="211.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="885.6" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (73 samples, 0.02%)</title><rect x="882.6" y="195.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="885.6" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (73 samples, 0.02%)</title><rect x="882.6" y="179.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="885.6" y="190.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.02%)</title><rect x="882.6" y="163.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="885.6" y="174.0"></text>
</g>
<g>
<title>[worker-12 tid=26526] (1,176 samples, 0.36%)</title><rect x="883.0" y="339.0" width="4.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="886.0" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,176 samples, 0.36%)</title><rect x="883.0" y="323.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="886.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,176 samples, 0.36%)</title><rect x="883.0" y="307.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="886.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,176 samples, 0.36%)</title><rect x="883.0" y="291.0" width="4.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="886.0" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (1,154 samples, 0.35%)</title><rect x="883.1" y="275.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="886.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (1,154 samples, 0.35%)</title><rect x="883.1" y="259.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="886.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (1,064 samples, 0.33%)</title><rect x="883.1" y="243.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="886.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (1,064 samples, 0.33%)</title><rect x="883.1" y="227.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="886.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (989 samples, 0.30%)</title><rect x="883.3" y="211.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="886.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (331 samples, 0.10%)</title><rect x="884.3" y="195.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="887.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (175 samples, 0.05%)</title><rect x="884.7" y="179.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="887.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (386 samples, 0.12%)</title><rect x="885.5" y="195.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="888.5" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (82 samples, 0.03%)</title><rect x="885.6" y="179.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="888.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (201 samples, 0.06%)</title><rect x="886.2" y="179.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="889.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (176 samples, 0.05%)</title><rect x="886.2" y="163.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (119 samples, 0.04%)</title><rect x="886.2" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (119 samples, 0.04%)</title><rect x="886.2" y="131.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="889.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (90 samples, 0.03%)</title><rect x="886.9" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="889.9" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (90 samples, 0.03%)</title><rect x="886.9" y="227.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (90 samples, 0.03%)</title><rect x="886.9" y="211.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.9" y="222.0"></text>
</g>
<g>
<title>[worker-2 tid=25863] (9,072 samples, 2.78%)</title><rect x="887.2" y="339.0" width="32.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="890.2" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (9,072 samples, 2.78%)</title><rect x="887.2" y="323.0" width="32.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.2" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9,072 samples, 2.78%)</title><rect x="887.2" y="307.0" width="32.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="890.2" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9,072 samples, 2.78%)</title><rect x="887.2" y="291.0" width="32.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="890.2" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (634 samples, 0.19%)</title><rect x="887.2" y="275.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="890.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (634 samples, 0.19%)</title><rect x="887.2" y="259.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="890.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (634 samples, 0.19%)</title><rect x="887.2" y="243.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (634 samples, 0.19%)</title><rect x="887.2" y="227.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="890.2" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (634 samples, 0.19%)</title><rect x="887.2" y="211.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="890.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (8,438 samples, 2.59%)</title><rect x="889.5" y="275.0" width="30.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="892.5" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (8,438 samples, 2.59%)</title><rect x="889.5" y="259.0" width="30.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="892.5" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (6,317 samples, 1.94%)</title><rect x="889.5" y="243.0" width="22.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="892.5" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (6,317 samples, 1.94%)</title><rect x="889.5" y="227.0" width="22.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="892.5" y="238.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (827 samples, 0.25%)</title><rect x="889.5" y="211.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="892.5" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (827 samples, 0.25%)</title><rect x="889.5" y="195.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="892.5" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (827 samples, 0.25%)</title><rect x="889.5" y="179.0" width="3.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="892.5" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (705 samples, 0.22%)</title><rect x="892.5" y="211.0" width="2.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="895.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (4,785 samples, 1.47%)</title><rect x="895.1" y="211.0" width="17.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.1" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (515 samples, 0.16%)</title><rect x="895.1" y="195.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="898.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (515 samples, 0.16%)</title><rect x="895.1" y="179.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="898.1" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (515 samples, 0.16%)</title><rect x="895.1" y="163.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="898.1" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (515 samples, 0.16%)</title><rect x="895.1" y="147.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="898.1" y="158.0"></text>
</g>
<g>
<title>byte[] (515 samples, 0.16%)</title><rect x="895.1" y="131.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="898.1" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (814 samples, 0.25%)</title><rect x="896.9" y="195.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (814 samples, 0.25%)</title><rect x="896.9" y="179.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="899.9" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (814 samples, 0.25%)</title><rect x="896.9" y="163.0" width="3.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="899.9" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (414 samples, 0.13%)</title><rect x="899.9" y="195.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="902.9" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,673 samples, 0.51%)</title><rect x="901.4" y="195.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="904.4" y="206.0"></text>
</g>
<g>
<title>byte[] (699 samples, 0.21%)</title><rect x="901.4" y="179.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="904.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (554 samples, 0.17%)</title><rect x="903.9" y="179.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="906.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String (420 samples, 0.13%)</title><rect x="905.9" y="179.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="908.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (1,369 samples, 0.42%)</title><rect x="907.4" y="195.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="910.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (1,369 samples, 0.42%)</title><rect x="907.4" y="179.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="910.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (1,366 samples, 0.42%)</title><rect x="907.4" y="163.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="910.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (397 samples, 0.12%)</title><rect x="907.4" y="147.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="910.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (397 samples, 0.12%)</title><rect x="907.4" y="131.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="910.4" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (146 samples, 0.04%)</title><rect x="907.4" y="115.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="910.4" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (251 samples, 0.08%)</title><rect x="908.0" y="115.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="911.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (443 samples, 0.14%)</title><rect x="908.9" y="147.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="911.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (443 samples, 0.14%)</title><rect x="908.9" y="131.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="911.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (526 samples, 0.16%)</title><rect x="910.5" y="147.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (526 samples, 0.16%)</title><rect x="910.5" y="131.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="913.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (2,121 samples, 0.65%)</title><rect x="912.4" y="243.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="915.4" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,121 samples, 0.65%)</title><rect x="912.4" y="227.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.4" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,121 samples, 0.65%)</title><rect x="912.4" y="211.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="915.4" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,443 samples, 0.44%)</title><rect x="912.4" y="195.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="915.4" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,443 samples, 0.44%)</title><rect x="912.4" y="179.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="915.4" y="190.0"></text>
</g>
<g>
<title>byte[] (1,314 samples, 0.40%)</title><rect x="912.4" y="163.0" width="4.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="915.4" y="174.0"></text>
</g>
<g>
<title>byte[] (129 samples, 0.04%)</title><rect x="917.2" y="163.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="920.2" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (678 samples, 0.21%)</title><rect x="917.6" y="195.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="920.6" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (678 samples, 0.21%)</title><rect x="917.6" y="179.0" width="2.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="920.6" y="190.0"></text>
</g>
<g>
<title>[worker-2 tid=25868] (9,000 samples, 2.76%)</title><rect x="920.1" y="339.0" width="32.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="923.1" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (9,000 samples, 2.76%)</title><rect x="920.1" y="323.0" width="32.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.1" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9,000 samples, 2.76%)</title><rect x="920.1" y="307.0" width="32.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="923.1" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9,000 samples, 2.76%)</title><rect x="920.1" y="291.0" width="32.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="923.1" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (599 samples, 0.18%)</title><rect x="920.1" y="275.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="923.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (599 samples, 0.18%)</title><rect x="920.1" y="259.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="923.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (597 samples, 0.18%)</title><rect x="920.1" y="243.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="923.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (597 samples, 0.18%)</title><rect x="920.1" y="227.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="923.1" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (597 samples, 0.18%)</title><rect x="920.1" y="211.0" width="2.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="923.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (8,401 samples, 2.58%)</title><rect x="922.2" y="275.0" width="30.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="925.2" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (8,401 samples, 2.58%)</title><rect x="922.2" y="259.0" width="30.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="925.2" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (6,307 samples, 1.93%)</title><rect x="922.2" y="243.0" width="22.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="925.2" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (6,307 samples, 1.93%)</title><rect x="922.2" y="227.0" width="22.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="925.2" y="238.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (827 samples, 0.25%)</title><rect x="922.2" y="211.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="925.2" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (827 samples, 0.25%)</title><rect x="922.2" y="195.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="925.2" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (827 samples, 0.25%)</title><rect x="922.2" y="179.0" width="3.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="925.2" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (738 samples, 0.23%)</title><rect x="925.2" y="211.0" width="2.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="928.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (4,742 samples, 1.45%)</title><rect x="927.9" y="211.0" width="17.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="930.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (529 samples, 0.16%)</title><rect x="927.9" y="195.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="930.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (529 samples, 0.16%)</title><rect x="927.9" y="179.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="930.9" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (529 samples, 0.16%)</title><rect x="927.9" y="163.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="930.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (529 samples, 0.16%)</title><rect x="927.9" y="147.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="930.9" y="158.0"></text>
</g>
<g>
<title>byte[] (529 samples, 0.16%)</title><rect x="927.9" y="131.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="930.9" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (807 samples, 0.25%)</title><rect x="929.8" y="195.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="932.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (807 samples, 0.25%)</title><rect x="929.8" y="179.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="932.8" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (807 samples, 0.25%)</title><rect x="929.8" y="163.0" width="2.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="932.8" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (403 samples, 0.12%)</title><rect x="932.7" y="195.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="935.7" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,637 samples, 0.50%)</title><rect x="934.2" y="195.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="937.2" y="206.0"></text>
</g>
<g>
<title>byte[] (676 samples, 0.21%)</title><rect x="934.2" y="179.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="937.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (547 samples, 0.17%)</title><rect x="936.6" y="179.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="939.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String (414 samples, 0.13%)</title><rect x="938.6" y="179.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="941.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (1,366 samples, 0.42%)</title><rect x="940.1" y="195.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="943.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (1,366 samples, 0.42%)</title><rect x="940.1" y="179.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="943.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (1,364 samples, 0.42%)</title><rect x="940.1" y="163.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="943.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (380 samples, 0.12%)</title><rect x="940.1" y="147.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="943.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (380 samples, 0.12%)</title><rect x="940.1" y="131.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="943.1" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (146 samples, 0.04%)</title><rect x="940.1" y="115.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="943.1" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (234 samples, 0.07%)</title><rect x="940.7" y="115.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="943.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (406 samples, 0.12%)</title><rect x="941.5" y="147.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="944.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (406 samples, 0.12%)</title><rect x="941.5" y="131.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="944.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (578 samples, 0.18%)</title><rect x="943.0" y="147.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="946.0" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (578 samples, 0.18%)</title><rect x="943.0" y="131.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="946.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (2,094 samples, 0.64%)</title><rect x="945.1" y="243.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="948.1" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,094 samples, 0.64%)</title><rect x="945.1" y="227.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="948.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,094 samples, 0.64%)</title><rect x="945.1" y="211.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="948.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,410 samples, 0.43%)</title><rect x="945.1" y="195.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="948.1" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,410 samples, 0.43%)</title><rect x="945.1" y="179.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="948.1" y="190.0"></text>
</g>
<g>
<title>byte[] (1,298 samples, 0.40%)</title><rect x="945.1" y="163.0" width="4.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="948.1" y="174.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.03%)</title><rect x="949.8" y="163.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="952.8" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (684 samples, 0.21%)</title><rect x="950.2" y="195.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="953.2" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (684 samples, 0.21%)</title><rect x="950.2" y="179.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="953.2" y="190.0"></text>
</g>
<g>
<title>[worker-3 tid=25866] (9,058 samples, 2.78%)</title><rect x="952.6" y="339.0" width="32.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="955.6" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (9,058 samples, 2.78%)</title><rect x="952.6" y="323.0" width="32.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="955.6" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9,058 samples, 2.78%)</title><rect x="952.6" y="307.0" width="32.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="955.6" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9,058 samples, 2.78%)</title><rect x="952.6" y="291.0" width="32.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="955.6" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (622 samples, 0.19%)</title><rect x="952.6" y="275.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="955.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (622 samples, 0.19%)</title><rect x="952.6" y="259.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="955.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (620 samples, 0.19%)</title><rect x="952.6" y="243.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="955.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (620 samples, 0.19%)</title><rect x="952.6" y="227.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="955.6" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (620 samples, 0.19%)</title><rect x="952.6" y="211.0" width="2.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="955.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (8,436 samples, 2.59%)</title><rect x="954.9" y="275.0" width="30.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="957.9" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (8,436 samples, 2.59%)</title><rect x="954.9" y="259.0" width="30.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="957.9" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (6,310 samples, 1.94%)</title><rect x="954.9" y="243.0" width="22.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="957.9" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (6,310 samples, 1.94%)</title><rect x="954.9" y="227.0" width="22.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="957.9" y="238.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (834 samples, 0.26%)</title><rect x="954.9" y="211.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.9" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (834 samples, 0.26%)</title><rect x="954.9" y="195.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="957.9" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (834 samples, 0.26%)</title><rect x="954.9" y="179.0" width="3.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="957.9" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (760 samples, 0.23%)</title><rect x="957.9" y="211.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="960.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (4,716 samples, 1.45%)</title><rect x="960.7" y="211.0" width="17.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="963.7" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (461 samples, 0.14%)</title><rect x="960.7" y="195.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="963.7" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (461 samples, 0.14%)</title><rect x="960.7" y="179.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="963.7" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (461 samples, 0.14%)</title><rect x="960.7" y="163.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="963.7" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (461 samples, 0.14%)</title><rect x="960.7" y="147.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="963.7" y="158.0"></text>
</g>
<g>
<title>byte[] (461 samples, 0.14%)</title><rect x="960.7" y="131.0" width="1.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="963.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (834 samples, 0.26%)</title><rect x="962.3" y="195.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="965.3" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (834 samples, 0.26%)</title><rect x="962.3" y="179.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="965.3" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (834 samples, 0.26%)</title><rect x="962.3" y="163.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="965.3" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (389 samples, 0.12%)</title><rect x="965.4" y="195.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="968.4" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,684 samples, 0.52%)</title><rect x="966.8" y="195.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="969.8" y="206.0"></text>
</g>
<g>
<title>byte[] (673 samples, 0.21%)</title><rect x="966.8" y="179.0" width="2.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="969.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (583 samples, 0.18%)</title><rect x="969.2" y="179.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="972.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String (428 samples, 0.13%)</title><rect x="971.3" y="179.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="974.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (1,348 samples, 0.41%)</title><rect x="972.9" y="195.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="975.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (1,348 samples, 0.41%)</title><rect x="972.9" y="179.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="975.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (1,348 samples, 0.41%)</title><rect x="972.9" y="163.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="975.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (401 samples, 0.12%)</title><rect x="972.9" y="147.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="975.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (401 samples, 0.12%)</title><rect x="972.9" y="131.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="975.9" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (131 samples, 0.04%)</title><rect x="972.9" y="115.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="975.9" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (270 samples, 0.08%)</title><rect x="973.3" y="115.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="976.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (385 samples, 0.12%)</title><rect x="974.3" y="147.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="977.3" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (385 samples, 0.12%)</title><rect x="974.3" y="131.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="977.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (562 samples, 0.17%)</title><rect x="975.7" y="147.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="978.7" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (562 samples, 0.17%)</title><rect x="975.7" y="131.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="978.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (2,126 samples, 0.65%)</title><rect x="977.7" y="243.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="980.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,126 samples, 0.65%)</title><rect x="977.7" y="227.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="980.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,126 samples, 0.65%)</title><rect x="977.7" y="211.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="980.7" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,459 samples, 0.45%)</title><rect x="977.7" y="195.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="980.7" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,459 samples, 0.45%)</title><rect x="977.7" y="179.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="980.7" y="190.0"></text>
</g>
<g>
<title>byte[] (1,362 samples, 0.42%)</title><rect x="977.7" y="163.0" width="5.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="980.7" y="174.0"></text>
</g>
<g>
<title>byte[] (97 samples, 0.03%)</title><rect x="982.7" y="163.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="985.7" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (667 samples, 0.20%)</title><rect x="983.0" y="195.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="986.0" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (667 samples, 0.20%)</title><rect x="983.0" y="179.0" width="2.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="986.0" y="190.0"></text>
</g>
<g>
<title>[worker-3 tid=25867] (9,069 samples, 2.78%)</title><rect x="985.4" y="339.0" width="32.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="988.4" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (9,069 samples, 2.78%)</title><rect x="985.4" y="323.0" width="32.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.4" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9,069 samples, 2.78%)</title><rect x="985.4" y="307.0" width="32.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="988.4" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9,069 samples, 2.78%)</title><rect x="985.4" y="291.0" width="32.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="988.4" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (616 samples, 0.19%)</title><rect x="985.4" y="275.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="988.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (616 samples, 0.19%)</title><rect x="985.4" y="259.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="988.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (616 samples, 0.19%)</title><rect x="985.4" y="243.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="988.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (616 samples, 0.19%)</title><rect x="985.4" y="227.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="988.4" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (616 samples, 0.19%)</title><rect x="985.4" y="211.0" width="2.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="988.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (8,453 samples, 2.59%)</title><rect x="987.7" y="275.0" width="30.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="990.7" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (8,453 samples, 2.59%)</title><rect x="987.7" y="259.0" width="30.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="990.7" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (6,309 samples, 1.94%)</title><rect x="987.7" y="243.0" width="22.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="990.7" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (6,309 samples, 1.94%)</title><rect x="987.7" y="227.0" width="22.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="990.7" y="238.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (832 samples, 0.26%)</title><rect x="987.7" y="211.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="990.7" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (832 samples, 0.26%)</title><rect x="987.7" y="195.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="990.7" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (832 samples, 0.26%)</title><rect x="987.7" y="179.0" width="3.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="990.7" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (751 samples, 0.23%)</title><rect x="990.7" y="211.0" width="2.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="993.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (4,726 samples, 1.45%)</title><rect x="993.4" y="211.0" width="17.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="996.4" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (487 samples, 0.15%)</title><rect x="993.4" y="195.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="996.4" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (487 samples, 0.15%)</title><rect x="993.4" y="179.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="996.4" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (487 samples, 0.15%)</title><rect x="993.4" y="163.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="996.4" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (487 samples, 0.15%)</title><rect x="993.4" y="147.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="996.4" y="158.0"></text>
</g>
<g>
<title>byte[] (487 samples, 0.15%)</title><rect x="993.4" y="131.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="996.4" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (840 samples, 0.26%)</title><rect x="995.2" y="195.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="998.2" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (840 samples, 0.26%)</title><rect x="995.2" y="179.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="998.2" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (840 samples, 0.26%)</title><rect x="995.2" y="163.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="998.2" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (410 samples, 0.13%)</title><rect x="998.2" y="195.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1001.2" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,651 samples, 0.51%)</title><rect x="999.7" y="195.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1002.7" y="206.0"></text>
</g>
<g>
<title>byte[] (689 samples, 0.21%)</title><rect x="999.7" y="179.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1002.7" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (590 samples, 0.18%)</title><rect x="1002.2" y="179.0" width="2.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1005.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String (372 samples, 0.11%)</title><rect x="1004.3" y="179.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1007.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (1,338 samples, 0.41%)</title><rect x="1005.7" y="195.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1008.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (1,338 samples, 0.41%)</title><rect x="1005.7" y="179.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1008.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (1,337 samples, 0.41%)</title><rect x="1005.7" y="163.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1008.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (353 samples, 0.11%)</title><rect x="1005.7" y="147.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1008.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (353 samples, 0.11%)</title><rect x="1005.7" y="131.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1008.7" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (115 samples, 0.04%)</title><rect x="1005.7" y="115.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1008.7" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (238 samples, 0.07%)</title><rect x="1006.1" y="115.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1009.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (436 samples, 0.13%)</title><rect x="1006.9" y="147.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1009.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (436 samples, 0.13%)</title><rect x="1006.9" y="131.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1009.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (548 samples, 0.17%)</title><rect x="1008.5" y="147.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1011.5" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (548 samples, 0.17%)</title><rect x="1008.5" y="131.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1011.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (2,144 samples, 0.66%)</title><rect x="1010.5" y="243.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1013.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,144 samples, 0.66%)</title><rect x="1010.5" y="227.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1013.5" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,144 samples, 0.66%)</title><rect x="1010.5" y="211.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1013.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,517 samples, 0.47%)</title><rect x="1010.5" y="195.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1013.5" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,517 samples, 0.47%)</title><rect x="1010.5" y="179.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1013.5" y="190.0"></text>
</g>
<g>
<title>byte[] (1,405 samples, 0.43%)</title><rect x="1010.5" y="163.0" width="5.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1013.5" y="174.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.03%)</title><rect x="1015.6" y="163.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1018.6" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (627 samples, 0.19%)</title><rect x="1016.0" y="195.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1019.0" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (627 samples, 0.19%)</title><rect x="1016.0" y="179.0" width="2.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1019.0" y="190.0"></text>
</g>
<g>
<title>[worker-4 tid=25865] (9,027 samples, 2.77%)</title><rect x="1018.3" y="339.0" width="32.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1021.3" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (9,027 samples, 2.77%)</title><rect x="1018.3" y="323.0" width="32.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1021.3" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9,027 samples, 2.77%)</title><rect x="1018.3" y="307.0" width="32.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1021.3" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9,027 samples, 2.77%)</title><rect x="1018.3" y="291.0" width="32.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1021.3" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (627 samples, 0.19%)</title><rect x="1018.3" y="275.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1021.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (627 samples, 0.19%)</title><rect x="1018.3" y="259.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1021.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (626 samples, 0.19%)</title><rect x="1018.3" y="243.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1021.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (626 samples, 0.19%)</title><rect x="1018.3" y="227.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1021.3" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (626 samples, 0.19%)</title><rect x="1018.3" y="211.0" width="2.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1021.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (8,400 samples, 2.58%)</title><rect x="1020.5" y="275.0" width="30.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1023.5" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (8,400 samples, 2.58%)</title><rect x="1020.5" y="259.0" width="30.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1023.5" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (6,225 samples, 1.91%)</title><rect x="1020.5" y="243.0" width="22.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1023.5" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (6,225 samples, 1.91%)</title><rect x="1020.5" y="227.0" width="22.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1023.5" y="238.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (820 samples, 0.25%)</title><rect x="1020.5" y="211.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1023.5" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (820 samples, 0.25%)</title><rect x="1020.5" y="195.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1023.5" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (820 samples, 0.25%)</title><rect x="1020.5" y="179.0" width="3.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1023.5" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (736 samples, 0.23%)</title><rect x="1023.5" y="211.0" width="2.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1026.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (4,669 samples, 1.43%)</title><rect x="1026.2" y="211.0" width="16.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1029.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (487 samples, 0.15%)</title><rect x="1026.2" y="195.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1029.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (487 samples, 0.15%)</title><rect x="1026.2" y="179.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1029.2" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (487 samples, 0.15%)</title><rect x="1026.2" y="163.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1029.2" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (487 samples, 0.15%)</title><rect x="1026.2" y="147.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1029.2" y="158.0"></text>
</g>
<g>
<title>byte[] (487 samples, 0.15%)</title><rect x="1026.2" y="131.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1029.2" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (846 samples, 0.26%)</title><rect x="1027.9" y="195.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1030.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (846 samples, 0.26%)</title><rect x="1027.9" y="179.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1030.9" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (846 samples, 0.26%)</title><rect x="1027.9" y="163.0" width="3.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1030.9" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (380 samples, 0.12%)</title><rect x="1031.0" y="195.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1034.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,606 samples, 0.49%)</title><rect x="1032.4" y="195.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1035.4" y="206.0"></text>
</g>
<g>
<title>byte[] (664 samples, 0.20%)</title><rect x="1032.4" y="179.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1035.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (566 samples, 0.17%)</title><rect x="1034.8" y="179.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1037.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String (376 samples, 0.12%)</title><rect x="1036.8" y="179.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1039.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (1,350 samples, 0.41%)</title><rect x="1038.2" y="195.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1041.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (1,350 samples, 0.41%)</title><rect x="1038.2" y="179.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1041.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (1,349 samples, 0.41%)</title><rect x="1038.2" y="163.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1041.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (351 samples, 0.11%)</title><rect x="1038.2" y="147.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1041.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (351 samples, 0.11%)</title><rect x="1038.2" y="131.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1041.2" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (121 samples, 0.04%)</title><rect x="1038.2" y="115.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1041.2" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (230 samples, 0.07%)</title><rect x="1038.6" y="115.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1041.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (424 samples, 0.13%)</title><rect x="1039.4" y="147.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1042.4" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (424 samples, 0.13%)</title><rect x="1039.4" y="131.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1042.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (574 samples, 0.18%)</title><rect x="1041.0" y="147.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1044.0" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (574 samples, 0.18%)</title><rect x="1041.0" y="131.0" width="2.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1044.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (2,175 samples, 0.67%)</title><rect x="1043.1" y="243.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1046.1" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,175 samples, 0.67%)</title><rect x="1043.1" y="227.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1046.1" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,175 samples, 0.67%)</title><rect x="1043.1" y="211.0" width="7.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1046.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,500 samples, 0.46%)</title><rect x="1043.1" y="195.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1046.1" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,500 samples, 0.46%)</title><rect x="1043.1" y="179.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1046.1" y="190.0"></text>
</g>
<g>
<title>byte[] (1,394 samples, 0.43%)</title><rect x="1043.1" y="163.0" width="5.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1046.1" y="174.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.03%)</title><rect x="1048.1" y="163.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1051.1" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (675 samples, 0.21%)</title><rect x="1048.5" y="195.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1051.5" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (675 samples, 0.21%)</title><rect x="1048.5" y="179.0" width="2.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1051.5" y="190.0"></text>
</g>
<g>
<title>[worker-4 tid=25869] (9,068 samples, 2.78%)</title><rect x="1050.9" y="339.0" width="32.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1053.9" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (9,068 samples, 2.78%)</title><rect x="1050.9" y="323.0" width="32.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1053.9" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9,068 samples, 2.78%)</title><rect x="1050.9" y="307.0" width="32.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1053.9" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9,068 samples, 2.78%)</title><rect x="1050.9" y="291.0" width="32.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1053.9" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (647 samples, 0.20%)</title><rect x="1050.9" y="275.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1053.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (647 samples, 0.20%)</title><rect x="1050.9" y="259.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1053.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (646 samples, 0.20%)</title><rect x="1050.9" y="243.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1053.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (646 samples, 0.20%)</title><rect x="1050.9" y="227.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1053.9" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (646 samples, 0.20%)</title><rect x="1050.9" y="211.0" width="2.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1053.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (8,421 samples, 2.58%)</title><rect x="1053.3" y="275.0" width="30.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1056.3" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (8,421 samples, 2.58%)</title><rect x="1053.3" y="259.0" width="30.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1056.3" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (6,329 samples, 1.94%)</title><rect x="1053.3" y="243.0" width="22.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1056.3" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (6,329 samples, 1.94%)</title><rect x="1053.3" y="227.0" width="22.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1056.3" y="238.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (873 samples, 0.27%)</title><rect x="1053.3" y="211.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1056.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (873 samples, 0.27%)</title><rect x="1053.3" y="195.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1056.3" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (873 samples, 0.27%)</title><rect x="1053.3" y="179.0" width="3.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1056.3" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (689 samples, 0.21%)</title><rect x="1056.4" y="211.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1059.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (4,767 samples, 1.46%)</title><rect x="1058.9" y="211.0" width="17.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1061.9" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (487 samples, 0.15%)</title><rect x="1058.9" y="195.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1061.9" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (487 samples, 0.15%)</title><rect x="1058.9" y="179.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1061.9" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (487 samples, 0.15%)</title><rect x="1058.9" y="163.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1061.9" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (487 samples, 0.15%)</title><rect x="1058.9" y="147.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1061.9" y="158.0"></text>
</g>
<g>
<title>byte[] (487 samples, 0.15%)</title><rect x="1058.9" y="131.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1061.9" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (883 samples, 0.27%)</title><rect x="1060.7" y="195.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1063.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (883 samples, 0.27%)</title><rect x="1060.7" y="179.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1063.7" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (883 samples, 0.27%)</title><rect x="1060.7" y="163.0" width="3.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1063.7" y="174.0"></text>
</g>
<g>
<title>one.nio.http.Response (403 samples, 0.12%)</title><rect x="1063.9" y="195.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1066.9" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,661 samples, 0.51%)</title><rect x="1065.3" y="195.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1068.3" y="206.0"></text>
</g>
<g>
<title>byte[] (666 samples, 0.20%)</title><rect x="1065.3" y="179.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1068.3" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (591 samples, 0.18%)</title><rect x="1067.8" y="179.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1070.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String (404 samples, 0.12%)</title><rect x="1069.9" y="179.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1072.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (1,333 samples, 0.41%)</title><rect x="1071.4" y="195.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1074.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (1,333 samples, 0.41%)</title><rect x="1071.4" y="179.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1074.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (1,332 samples, 0.41%)</title><rect x="1071.4" y="163.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1074.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (380 samples, 0.12%)</title><rect x="1071.4" y="147.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1074.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (380 samples, 0.12%)</title><rect x="1071.4" y="131.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1074.4" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Index (106 samples, 0.03%)</title><rect x="1071.4" y="115.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1074.4" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (274 samples, 0.08%)</title><rect x="1071.7" y="115.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1074.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (412 samples, 0.13%)</title><rect x="1072.7" y="147.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1075.7" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (412 samples, 0.13%)</title><rect x="1072.7" y="131.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1075.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (540 samples, 0.17%)</title><rect x="1074.2" y="147.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1077.2" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (540 samples, 0.17%)</title><rect x="1074.2" y="131.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1077.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (2,092 samples, 0.64%)</title><rect x="1076.2" y="243.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1079.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,092 samples, 0.64%)</title><rect x="1076.2" y="227.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1079.2" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,092 samples, 0.64%)</title><rect x="1076.2" y="211.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1079.2" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,444 samples, 0.44%)</title><rect x="1076.2" y="195.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1079.2" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,444 samples, 0.44%)</title><rect x="1076.2" y="179.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1079.2" y="190.0"></text>
</g>
<g>
<title>byte[] (1,338 samples, 0.41%)</title><rect x="1076.2" y="163.0" width="4.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1079.2" y="174.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.03%)</title><rect x="1081.0" y="163.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1084.0" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (648 samples, 0.20%)</title><rect x="1081.4" y="195.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1084.4" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (648 samples, 0.20%)</title><rect x="1081.4" y="179.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1084.4" y="190.0"></text>
</g>
<g>
<title>[worker-6 tid=25879] (8,955 samples, 2.75%)</title><rect x="1083.8" y="339.0" width="32.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1086.8" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (8,955 samples, 2.75%)</title><rect x="1083.8" y="323.0" width="32.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1086.8" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8,955 samples, 2.75%)</title><rect x="1083.8" y="307.0" width="32.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1086.8" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8,955 samples, 2.75%)</title><rect x="1083.8" y="291.0" width="32.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1086.8" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (108 samples, 0.03%)</title><rect x="1083.8" y="275.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1086.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (108 samples, 0.03%)</title><rect x="1083.8" y="259.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1086.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (108 samples, 0.03%)</title><rect x="1083.8" y="243.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1086.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (108 samples, 0.03%)</title><rect x="1083.8" y="227.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1086.8" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (108 samples, 0.03%)</title><rect x="1083.8" y="211.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1086.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (8,847 samples, 2.71%)</title><rect x="1084.1" y="275.0" width="32.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1087.1" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (8,847 samples, 2.71%)</title><rect x="1084.1" y="259.0" width="32.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.1" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (8,154 samples, 2.50%)</title><rect x="1084.1" y="243.0" width="29.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1087.1" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (8,154 samples, 2.50%)</title><rect x="1084.1" y="227.0" width="29.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.1" y="238.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (290 samples, 0.09%)</title><rect x="1084.1" y="211.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1087.1" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (290 samples, 0.09%)</title><rect x="1084.1" y="195.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1087.1" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (290 samples, 0.09%)</title><rect x="1084.1" y="179.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1087.1" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (245 samples, 0.08%)</title><rect x="1085.2" y="211.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1088.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (7,619 samples, 2.34%)</title><rect x="1086.1" y="211.0" width="27.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1089.1" y="222.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (343 samples, 0.11%)</title><rect x="1086.1" y="195.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1089.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (343 samples, 0.11%)</title><rect x="1086.1" y="179.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1089.1" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (343 samples, 0.11%)</title><rect x="1086.1" y="163.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1089.1" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (343 samples, 0.11%)</title><rect x="1086.1" y="147.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1089.1" y="158.0"></text>
</g>
<g>
<title>byte[] (343 samples, 0.11%)</title><rect x="1086.1" y="131.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1089.1" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (553 samples, 0.17%)</title><rect x="1087.3" y="195.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1090.3" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (553 samples, 0.17%)</title><rect x="1087.3" y="179.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1090.3" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (553 samples, 0.17%)</title><rect x="1087.3" y="163.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1090.3" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (208 samples, 0.06%)</title><rect x="1089.3" y="195.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1092.3" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (208 samples, 0.06%)</title><rect x="1089.3" y="179.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1092.3" y="190.0"></text>
</g>
<g>
<title>one.nio.http.Response (145 samples, 0.04%)</title><rect x="1090.1" y="195.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1093.1" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (536 samples, 0.16%)</title><rect x="1090.6" y="195.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1093.6" y="206.0"></text>
</g>
<g>
<title>byte[] (229 samples, 0.07%)</title><rect x="1090.6" y="179.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1093.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (174 samples, 0.05%)</title><rect x="1091.4" y="179.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1094.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String (133 samples, 0.04%)</title><rect x="1092.1" y="179.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1095.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (414 samples, 0.13%)</title><rect x="1092.5" y="195.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1095.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (414 samples, 0.13%)</title><rect x="1092.5" y="179.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1095.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (411 samples, 0.13%)</title><rect x="1092.6" y="163.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1095.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (111 samples, 0.03%)</title><rect x="1092.6" y="147.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1095.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (111 samples, 0.03%)</title><rect x="1092.6" y="131.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1095.6" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (81 samples, 0.02%)</title><rect x="1092.7" y="115.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1095.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (116 samples, 0.04%)</title><rect x="1093.0" y="147.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1096.0" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (116 samples, 0.04%)</title><rect x="1093.0" y="131.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1096.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (184 samples, 0.06%)</title><rect x="1093.4" y="147.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1096.4" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (184 samples, 0.06%)</title><rect x="1093.4" y="131.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1096.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (2,554 samples, 0.78%)</title><rect x="1094.0" y="195.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1097.0" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (152 samples, 0.05%)</title><rect x="1094.0" y="179.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1097.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (262 samples, 0.08%)</title><rect x="1094.6" y="179.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1097.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (262 samples, 0.08%)</title><rect x="1094.6" y="163.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1097.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.get$Lambda (262 samples, 0.08%)</title><rect x="1094.6" y="147.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1097.6" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$68 (262 samples, 0.08%)</title><rect x="1094.6" y="131.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1097.6" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (342 samples, 0.10%)</title><rect x="1095.5" y="179.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1098.5" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (342 samples, 0.10%)</title><rect x="1095.5" y="163.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1098.5" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (342 samples, 0.10%)</title><rect x="1095.5" y="147.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.5" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (342 samples, 0.10%)</title><rect x="1095.5" y="131.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1098.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (342 samples, 0.10%)</title><rect x="1095.5" y="115.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1098.5" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (338 samples, 0.10%)</title><rect x="1095.5" y="99.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1098.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (1,405 samples, 0.43%)</title><rect x="1096.8" y="179.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1099.8" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ExecutorCompletionService$QueueingFuture (438 samples, 0.13%)</title><rect x="1096.8" y="163.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1099.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.&lt;init&gt; (306 samples, 0.09%)</title><rect x="1098.4" y="163.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1101.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (306 samples, 0.09%)</title><rect x="1098.4" y="147.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1101.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (306 samples, 0.09%)</title><rect x="1098.4" y="131.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1101.4" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (306 samples, 0.09%)</title><rect x="1098.4" y="115.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1101.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.newTaskFor (377 samples, 0.12%)</title><rect x="1099.5" y="163.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1102.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (377 samples, 0.12%)</title><rect x="1099.5" y="147.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1102.5" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (377 samples, 0.12%)</title><rect x="1099.5" y="131.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1102.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (284 samples, 0.09%)</title><rect x="1100.8" y="163.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1103.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (284 samples, 0.09%)</title><rect x="1100.8" y="147.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1103.8" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (284 samples, 0.09%)</title><rect x="1100.8" y="131.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1103.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (392 samples, 0.12%)</title><rect x="1101.9" y="179.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1104.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (392 samples, 0.12%)</title><rect x="1101.9" y="163.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1104.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (389 samples, 0.12%)</title><rect x="1101.9" y="147.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1104.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (389 samples, 0.12%)</title><rect x="1101.9" y="131.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1104.9" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (389 samples, 0.12%)</title><rect x="1101.9" y="115.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1104.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (2,866 samples, 0.88%)</title><rect x="1103.3" y="195.0" width="10.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1106.3" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (139 samples, 0.04%)</title><rect x="1103.3" y="179.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1106.3" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (508 samples, 0.16%)</title><rect x="1103.8" y="179.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1106.8" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (115 samples, 0.04%)</title><rect x="1103.8" y="163.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1106.8" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (393 samples, 0.12%)</title><rect x="1104.2" y="163.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1107.2" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (225 samples, 0.07%)</title><rect x="1104.2" y="147.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1107.2" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (225 samples, 0.07%)</title><rect x="1104.2" y="131.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1107.2" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (168 samples, 0.05%)</title><rect x="1105.0" y="147.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1108.0" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (168 samples, 0.05%)</title><rect x="1105.0" y="131.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1108.0" y="142.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (78 samples, 0.02%)</title><rect x="1105.6" y="179.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1108.6" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (78 samples, 0.02%)</title><rect x="1105.6" y="163.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1108.6" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (338 samples, 0.10%)</title><rect x="1105.9" y="179.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1108.9" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (338 samples, 0.10%)</title><rect x="1105.9" y="163.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1108.9" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (338 samples, 0.10%)</title><rect x="1105.9" y="147.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1108.9" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (338 samples, 0.10%)</title><rect x="1105.9" y="131.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1108.9" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (338 samples, 0.10%)</title><rect x="1105.9" y="115.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1108.9" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (332 samples, 0.10%)</title><rect x="1105.9" y="99.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1108.9" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (254 samples, 0.08%)</title><rect x="1107.2" y="179.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1110.2" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (254 samples, 0.08%)</title><rect x="1107.2" y="163.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1110.2" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (254 samples, 0.08%)</title><rect x="1107.2" y="147.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1110.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (1,538 samples, 0.47%)</title><rect x="1108.1" y="179.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1111.1" y="190.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (1,277 samples, 0.39%)</title><rect x="1108.1" y="163.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1111.1" y="174.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (804 samples, 0.25%)</title><rect x="1108.1" y="147.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.1" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (804 samples, 0.25%)</title><rect x="1108.1" y="131.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1111.1" y="142.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (286 samples, 0.09%)</title><rect x="1108.1" y="115.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1111.1" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (518 samples, 0.16%)</title><rect x="1109.1" y="115.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1112.1" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (518 samples, 0.16%)</title><rect x="1109.1" y="99.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1112.1" y="110.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (518 samples, 0.16%)</title><rect x="1109.1" y="83.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1112.1" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (518 samples, 0.16%)</title><rect x="1109.1" y="67.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1112.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (283 samples, 0.09%)</title><rect x="1109.1" y="51.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1112.1" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (235 samples, 0.07%)</title><rect x="1110.2" y="51.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1113.2" y="62.0"></text>
</g>
<g>
<title>byte[] (235 samples, 0.07%)</title><rect x="1110.2" y="35.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1113.2" y="46.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (473 samples, 0.15%)</title><rect x="1111.0" y="147.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1114.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (473 samples, 0.15%)</title><rect x="1111.0" y="131.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1114.0" y="142.0"></text>
</g>
<g>
<title>byte[] (189 samples, 0.06%)</title><rect x="1111.0" y="115.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1114.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (284 samples, 0.09%)</title><rect x="1111.7" y="115.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1114.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (284 samples, 0.09%)</title><rect x="1111.7" y="99.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1114.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (284 samples, 0.09%)</title><rect x="1111.7" y="83.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1114.7" y="94.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (118 samples, 0.04%)</title><rect x="1112.7" y="163.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1115.7" y="174.0"></text>
</g>
<g>
<title>java.lang.Long (118 samples, 0.04%)</title><rect x="1112.7" y="147.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1115.7" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (142 samples, 0.04%)</title><rect x="1113.1" y="163.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1116.1" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (142 samples, 0.04%)</title><rect x="1113.1" y="147.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1116.1" y="158.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (142 samples, 0.04%)</title><rect x="1113.1" y="131.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1116.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (693 samples, 0.21%)</title><rect x="1113.7" y="243.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1116.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (693 samples, 0.21%)</title><rect x="1113.7" y="227.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1116.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (693 samples, 0.21%)</title><rect x="1113.7" y="211.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1116.7" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (482 samples, 0.15%)</title><rect x="1113.7" y="195.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1116.7" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (482 samples, 0.15%)</title><rect x="1113.7" y="179.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1116.7" y="190.0"></text>
</g>
<g>
<title>byte[] (470 samples, 0.14%)</title><rect x="1113.7" y="163.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1116.7" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (211 samples, 0.06%)</title><rect x="1115.4" y="195.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1118.4" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (211 samples, 0.06%)</title><rect x="1115.4" y="179.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1118.4" y="190.0"></text>
</g>
<g>
<title>[worker-7 tid=25885] (7,718 samples, 2.37%)</title><rect x="1116.2" y="339.0" width="27.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1119.2" y="350.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (7,718 samples, 2.37%)</title><rect x="1116.2" y="323.0" width="27.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1119.2" y="334.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7,718 samples, 2.37%)</title><rect x="1116.2" y="307.0" width="27.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1119.2" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7,718 samples, 2.37%)</title><rect x="1116.2" y="291.0" width="27.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1119.2" y="302.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (99 samples, 0.03%)</title><rect x="1116.2" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (99 samples, 0.03%)</title><rect x="1116.2" y="259.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1119.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (97 samples, 0.03%)</title><rect x="1116.2" y="243.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1119.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (97 samples, 0.03%)</title><rect x="1116.2" y="227.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1119.2" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (97 samples, 0.03%)</title><rect x="1116.2" y="211.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1119.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (7,619 samples, 2.34%)</title><rect x="1116.5" y="275.0" width="27.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1119.5" y="286.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (7,619 samples, 2.34%)</title><rect x="1116.5" y="259.0" width="27.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.5" y="270.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (6,976 samples, 2.14%)</title><rect x="1116.5" y="243.0" width="25.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1119.5" y="254.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (6,976 samples, 2.14%)</title><rect x="1116.5" y="227.0" width="25.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1119.5" y="238.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (245 samples, 0.08%)</title><rect x="1116.5" y="211.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.5" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (245 samples, 0.08%)</title><rect x="1116.5" y="195.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1119.5" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (245 samples, 0.08%)</title><rect x="1116.5" y="179.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1119.5" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (201 samples, 0.06%)</title><rect x="1117.4" y="211.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1120.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (6,530 samples, 2.00%)</title><rect x="1118.1" y="211.0" width="23.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1121.1" y="222.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (275 samples, 0.08%)</title><rect x="1118.1" y="195.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1121.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (275 samples, 0.08%)</title><rect x="1118.1" y="179.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1121.1" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (275 samples, 0.08%)</title><rect x="1118.1" y="163.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1121.1" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (275 samples, 0.08%)</title><rect x="1118.1" y="147.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1121.1" y="158.0"></text>
</g>
<g>
<title>byte[] (275 samples, 0.08%)</title><rect x="1118.1" y="131.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1121.1" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (434 samples, 0.13%)</title><rect x="1119.1" y="195.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1122.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (434 samples, 0.13%)</title><rect x="1119.1" y="179.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1122.1" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (434 samples, 0.13%)</title><rect x="1119.1" y="163.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1122.1" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (154 samples, 0.05%)</title><rect x="1120.7" y="195.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1123.7" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (154 samples, 0.05%)</title><rect x="1120.7" y="179.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1123.7" y="190.0"></text>
</g>
<g>
<title>one.nio.http.Response (113 samples, 0.03%)</title><rect x="1121.3" y="195.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1124.3" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (490 samples, 0.15%)</title><rect x="1121.7" y="195.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1124.7" y="206.0"></text>
</g>
<g>
<title>byte[] (213 samples, 0.07%)</title><rect x="1121.7" y="179.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1124.7" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (148 samples, 0.05%)</title><rect x="1122.4" y="179.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1125.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String (129 samples, 0.04%)</title><rect x="1123.0" y="179.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1126.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (392 samples, 0.12%)</title><rect x="1123.4" y="195.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1126.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (392 samples, 0.12%)</title><rect x="1123.4" y="179.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1126.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (390 samples, 0.12%)</title><rect x="1123.5" y="163.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1126.5" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (113 samples, 0.03%)</title><rect x="1123.5" y="147.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1126.5" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (113 samples, 0.03%)</title><rect x="1123.5" y="131.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1126.5" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (73 samples, 0.02%)</title><rect x="1123.6" y="115.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1126.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (111 samples, 0.03%)</title><rect x="1123.9" y="147.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1126.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (111 samples, 0.03%)</title><rect x="1123.9" y="131.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1126.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (166 samples, 0.05%)</title><rect x="1124.3" y="147.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1127.3" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (166 samples, 0.05%)</title><rect x="1124.3" y="131.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1127.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (2,213 samples, 0.68%)</title><rect x="1124.9" y="195.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1127.9" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (120 samples, 0.04%)</title><rect x="1124.9" y="179.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1127.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (238 samples, 0.07%)</title><rect x="1125.3" y="179.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1128.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (238 samples, 0.07%)</title><rect x="1125.3" y="163.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1128.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.get$Lambda (238 samples, 0.07%)</title><rect x="1125.3" y="147.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1128.3" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$68 (238 samples, 0.07%)</title><rect x="1125.3" y="131.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1128.3" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (316 samples, 0.10%)</title><rect x="1126.2" y="179.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1129.2" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (316 samples, 0.10%)</title><rect x="1126.2" y="163.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.2" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (316 samples, 0.10%)</title><rect x="1126.2" y="147.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.2" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (316 samples, 0.10%)</title><rect x="1126.2" y="131.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1129.2" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (316 samples, 0.10%)</title><rect x="1126.2" y="115.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1129.2" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (314 samples, 0.10%)</title><rect x="1126.2" y="99.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1129.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (1,223 samples, 0.38%)</title><rect x="1127.3" y="179.0" width="4.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1130.3" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ExecutorCompletionService$QueueingFuture (410 samples, 0.13%)</title><rect x="1127.3" y="163.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1130.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.&lt;init&gt; (252 samples, 0.08%)</title><rect x="1128.8" y="163.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1131.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (252 samples, 0.08%)</title><rect x="1128.8" y="147.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1131.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (252 samples, 0.08%)</title><rect x="1128.8" y="131.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1131.8" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (252 samples, 0.08%)</title><rect x="1128.8" y="115.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1131.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.newTaskFor (316 samples, 0.10%)</title><rect x="1129.7" y="163.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1132.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (316 samples, 0.10%)</title><rect x="1129.7" y="147.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1132.7" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (316 samples, 0.10%)</title><rect x="1129.7" y="131.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1132.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (245 samples, 0.08%)</title><rect x="1130.9" y="163.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1133.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (245 samples, 0.08%)</title><rect x="1130.9" y="147.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1133.9" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (245 samples, 0.08%)</title><rect x="1130.9" y="131.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1133.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (315 samples, 0.10%)</title><rect x="1131.7" y="179.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1134.7" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (315 samples, 0.10%)</title><rect x="1131.7" y="163.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1134.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (311 samples, 0.10%)</title><rect x="1131.7" y="147.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1134.7" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (311 samples, 0.10%)</title><rect x="1131.7" y="131.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1134.7" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (311 samples, 0.10%)</title><rect x="1131.7" y="115.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1134.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (2,459 samples, 0.75%)</title><rect x="1132.9" y="195.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1135.9" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (104 samples, 0.03%)</title><rect x="1132.9" y="179.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1135.9" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (467 samples, 0.14%)</title><rect x="1133.3" y="179.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1136.3" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (120 samples, 0.04%)</title><rect x="1133.3" y="163.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1136.3" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (347 samples, 0.11%)</title><rect x="1133.7" y="163.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1136.7" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (182 samples, 0.06%)</title><rect x="1133.7" y="147.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.7" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (182 samples, 0.06%)</title><rect x="1133.7" y="131.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1136.7" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (165 samples, 0.05%)</title><rect x="1134.3" y="147.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1137.3" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (165 samples, 0.05%)</title><rect x="1134.3" y="131.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1137.3" y="142.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (86 samples, 0.03%)</title><rect x="1134.9" y="179.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1137.9" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (86 samples, 0.03%)</title><rect x="1134.9" y="163.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1137.9" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (273 samples, 0.08%)</title><rect x="1135.3" y="179.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1138.3" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (273 samples, 0.08%)</title><rect x="1135.3" y="163.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1138.3" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (273 samples, 0.08%)</title><rect x="1135.3" y="147.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1138.3" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (273 samples, 0.08%)</title><rect x="1135.3" y="131.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1138.3" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (273 samples, 0.08%)</title><rect x="1135.3" y="115.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1138.3" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (270 samples, 0.08%)</title><rect x="1135.3" y="99.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1138.3" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (208 samples, 0.06%)</title><rect x="1136.3" y="179.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1139.3" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (208 samples, 0.06%)</title><rect x="1136.3" y="163.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1139.3" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (208 samples, 0.06%)</title><rect x="1136.3" y="147.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1139.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (1,311 samples, 0.40%)</title><rect x="1137.0" y="179.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1140.0" y="190.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (1,030 samples, 0.32%)</title><rect x="1137.0" y="163.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1140.0" y="174.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (637 samples, 0.20%)</title><rect x="1137.0" y="147.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1140.0" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (637 samples, 0.20%)</title><rect x="1137.0" y="131.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1140.0" y="142.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (239 samples, 0.07%)</title><rect x="1137.0" y="115.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1140.0" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (398 samples, 0.12%)</title><rect x="1137.9" y="115.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1140.9" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (398 samples, 0.12%)</title><rect x="1137.9" y="99.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1140.9" y="110.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (398 samples, 0.12%)</title><rect x="1137.9" y="83.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1140.9" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (398 samples, 0.12%)</title><rect x="1137.9" y="67.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1140.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (243 samples, 0.07%)</title><rect x="1137.9" y="51.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1140.9" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (155 samples, 0.05%)</title><rect x="1138.8" y="51.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.8" y="62.0"></text>
</g>
<g>
<title>byte[] (155 samples, 0.05%)</title><rect x="1138.8" y="35.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1141.8" y="46.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (393 samples, 0.12%)</title><rect x="1139.3" y="147.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1142.3" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (393 samples, 0.12%)</title><rect x="1139.3" y="131.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1142.3" y="142.0"></text>
</g>
<g>
<title>byte[] (164 samples, 0.05%)</title><rect x="1139.3" y="115.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1142.3" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (229 samples, 0.07%)</title><rect x="1139.9" y="115.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.9" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (229 samples, 0.07%)</title><rect x="1139.9" y="99.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1142.9" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (229 samples, 0.07%)</title><rect x="1139.9" y="83.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1142.9" y="94.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (129 samples, 0.04%)</title><rect x="1140.8" y="163.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1143.8" y="174.0"></text>
</g>
<g>
<title>java.lang.Long (129 samples, 0.04%)</title><rect x="1140.8" y="147.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1143.8" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (143 samples, 0.04%)</title><rect x="1141.2" y="163.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1144.2" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (143 samples, 0.04%)</title><rect x="1141.2" y="147.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1144.2" y="158.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (143 samples, 0.04%)</title><rect x="1141.2" y="131.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1144.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (643 samples, 0.20%)</title><rect x="1141.8" y="243.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1144.8" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (643 samples, 0.20%)</title><rect x="1141.8" y="227.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1144.8" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (643 samples, 0.20%)</title><rect x="1141.8" y="211.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1144.8" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (456 samples, 0.14%)</title><rect x="1141.8" y="195.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1144.8" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (456 samples, 0.14%)</title><rect x="1141.8" y="179.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1144.8" y="190.0"></text>
</g>
<g>
<title>byte[] (438 samples, 0.13%)</title><rect x="1141.8" y="163.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1144.8" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (187 samples, 0.06%)</title><rect x="1143.4" y="195.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1146.4" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (187 samples, 0.06%)</title><rect x="1143.4" y="179.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1146.4" y="190.0"></text>
</g>
<g>
<title>[worker-8 tid=26331] (3,762 samples, 1.15%)</title><rect x="1144.1" y="339.0" width="13.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1147.1" y="350.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,762 samples, 1.15%)</title><rect x="1144.1" y="323.0" width="13.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1147.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,762 samples, 1.15%)</title><rect x="1144.1" y="307.0" width="13.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1147.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,762 samples, 1.15%)</title><rect x="1144.1" y="291.0" width="13.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1147.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (3,718 samples, 1.14%)</title><rect x="1144.3" y="275.0" width="13.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1147.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (3,718 samples, 1.14%)</title><rect x="1144.3" y="259.0" width="13.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1147.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (3,445 samples, 1.06%)</title><rect x="1144.3" y="243.0" width="12.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1147.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (3,445 samples, 1.06%)</title><rect x="1144.3" y="227.0" width="12.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1147.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (123 samples, 0.04%)</title><rect x="1144.3" y="211.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1147.3" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (123 samples, 0.04%)</title><rect x="1144.3" y="195.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1147.3" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (123 samples, 0.04%)</title><rect x="1144.3" y="179.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1147.3" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (111 samples, 0.03%)</title><rect x="1144.7" y="211.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1147.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (3,211 samples, 0.98%)</title><rect x="1145.1" y="211.0" width="11.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1148.1" y="222.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (101 samples, 0.03%)</title><rect x="1145.1" y="195.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1148.1" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (101 samples, 0.03%)</title><rect x="1145.1" y="179.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1148.1" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (101 samples, 0.03%)</title><rect x="1145.1" y="163.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1148.1" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (101 samples, 0.03%)</title><rect x="1145.1" y="147.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1148.1" y="158.0"></text>
</g>
<g>
<title>byte[] (101 samples, 0.03%)</title><rect x="1145.1" y="131.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1148.1" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (244 samples, 0.07%)</title><rect x="1145.5" y="195.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1148.5" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (244 samples, 0.07%)</title><rect x="1145.5" y="179.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1148.5" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (244 samples, 0.07%)</title><rect x="1145.5" y="163.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1148.5" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (99 samples, 0.03%)</title><rect x="1146.4" y="195.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1149.4" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (99 samples, 0.03%)</title><rect x="1146.4" y="179.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1149.4" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (262 samples, 0.08%)</title><rect x="1146.9" y="195.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1149.9" y="206.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.04%)</title><rect x="1146.9" y="179.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1149.9" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (73 samples, 0.02%)</title><rect x="1147.4" y="179.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1150.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (161 samples, 0.05%)</title><rect x="1147.9" y="195.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1150.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (161 samples, 0.05%)</title><rect x="1147.9" y="179.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1150.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (160 samples, 0.05%)</title><rect x="1147.9" y="163.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1150.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (80 samples, 0.02%)</title><rect x="1148.2" y="147.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1151.2" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (80 samples, 0.02%)</title><rect x="1148.2" y="131.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1151.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (1,089 samples, 0.33%)</title><rect x="1148.4" y="195.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1151.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (119 samples, 0.04%)</title><rect x="1148.7" y="179.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1151.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (119 samples, 0.04%)</title><rect x="1148.7" y="163.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1151.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.get$Lambda (119 samples, 0.04%)</title><rect x="1148.7" y="147.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1151.7" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$68 (119 samples, 0.04%)</title><rect x="1148.7" y="131.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1151.7" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (158 samples, 0.05%)</title><rect x="1149.1" y="179.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1152.1" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (158 samples, 0.05%)</title><rect x="1149.1" y="163.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1152.1" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (158 samples, 0.05%)</title><rect x="1149.1" y="147.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1152.1" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (158 samples, 0.05%)</title><rect x="1149.1" y="131.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1152.1" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (158 samples, 0.05%)</title><rect x="1149.1" y="115.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1152.1" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (155 samples, 0.05%)</title><rect x="1149.1" y="99.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1152.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (587 samples, 0.18%)</title><rect x="1149.7" y="179.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1152.7" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ExecutorCompletionService$QueueingFuture (206 samples, 0.06%)</title><rect x="1149.7" y="163.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1152.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.&lt;init&gt; (117 samples, 0.04%)</title><rect x="1150.4" y="163.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1153.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (117 samples, 0.04%)</title><rect x="1150.4" y="147.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1153.4" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (117 samples, 0.04%)</title><rect x="1150.4" y="131.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1153.4" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (117 samples, 0.04%)</title><rect x="1150.4" y="115.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1153.4" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.newTaskFor (134 samples, 0.04%)</title><rect x="1150.8" y="163.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1153.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (134 samples, 0.04%)</title><rect x="1150.8" y="147.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1153.8" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (134 samples, 0.04%)</title><rect x="1150.8" y="131.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1153.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (130 samples, 0.04%)</title><rect x="1151.3" y="163.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1154.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (130 samples, 0.04%)</title><rect x="1151.3" y="147.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1154.3" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (129 samples, 0.04%)</title><rect x="1151.3" y="131.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1154.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (165 samples, 0.05%)</title><rect x="1151.8" y="179.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1154.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (165 samples, 0.05%)</title><rect x="1151.8" y="163.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1154.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (164 samples, 0.05%)</title><rect x="1151.8" y="147.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1154.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (164 samples, 0.05%)</title><rect x="1151.8" y="131.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1154.8" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (164 samples, 0.05%)</title><rect x="1151.8" y="115.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1154.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (1,202 samples, 0.37%)</title><rect x="1152.4" y="195.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1155.4" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (258 samples, 0.08%)</title><rect x="1152.6" y="179.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1155.6" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (205 samples, 0.06%)</title><rect x="1152.8" y="163.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1155.8" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (104 samples, 0.03%)</title><rect x="1152.8" y="147.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.8" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (104 samples, 0.03%)</title><rect x="1152.8" y="131.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1155.8" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (101 samples, 0.03%)</title><rect x="1153.2" y="147.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1156.2" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (101 samples, 0.03%)</title><rect x="1153.2" y="131.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1156.2" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (115 samples, 0.04%)</title><rect x="1153.6" y="179.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1156.6" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (115 samples, 0.04%)</title><rect x="1153.6" y="163.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1156.6" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (115 samples, 0.04%)</title><rect x="1153.6" y="147.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1156.6" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (115 samples, 0.04%)</title><rect x="1153.6" y="131.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1156.6" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (115 samples, 0.04%)</title><rect x="1153.6" y="115.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1156.6" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (114 samples, 0.03%)</title><rect x="1153.6" y="99.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1156.6" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (116 samples, 0.04%)</title><rect x="1154.1" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1157.1" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (116 samples, 0.04%)</title><rect x="1154.1" y="163.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1157.1" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (116 samples, 0.04%)</title><rect x="1154.1" y="147.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1157.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (622 samples, 0.19%)</title><rect x="1154.5" y="179.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1157.5" y="190.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (524 samples, 0.16%)</title><rect x="1154.5" y="163.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.5" y="174.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (331 samples, 0.10%)</title><rect x="1154.5" y="147.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1157.5" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (331 samples, 0.10%)</title><rect x="1154.5" y="131.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1157.5" y="142.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (128 samples, 0.04%)</title><rect x="1154.5" y="115.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1157.5" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (203 samples, 0.06%)</title><rect x="1154.9" y="115.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1157.9" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (203 samples, 0.06%)</title><rect x="1154.9" y="99.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1157.9" y="110.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (203 samples, 0.06%)</title><rect x="1154.9" y="83.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1157.9" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (203 samples, 0.06%)</title><rect x="1154.9" y="67.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1157.9" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (108 samples, 0.03%)</title><rect x="1154.9" y="51.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1157.9" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (95 samples, 0.03%)</title><rect x="1155.3" y="51.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1158.3" y="62.0"></text>
</g>
<g>
<title>byte[] (95 samples, 0.03%)</title><rect x="1155.3" y="35.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1158.3" y="46.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (193 samples, 0.06%)</title><rect x="1155.7" y="147.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1158.7" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (193 samples, 0.06%)</title><rect x="1155.7" y="131.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1158.7" y="142.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.02%)</title><rect x="1155.7" y="115.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1158.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (113 samples, 0.03%)</title><rect x="1156.0" y="115.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1159.0" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (113 samples, 0.03%)</title><rect x="1156.0" y="99.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1159.0" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (113 samples, 0.03%)</title><rect x="1156.0" y="83.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1159.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (273 samples, 0.08%)</title><rect x="1156.7" y="243.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1159.7" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (273 samples, 0.08%)</title><rect x="1156.7" y="227.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1159.7" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (273 samples, 0.08%)</title><rect x="1156.7" y="211.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1159.7" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (194 samples, 0.06%)</title><rect x="1156.7" y="195.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1159.7" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (194 samples, 0.06%)</title><rect x="1156.7" y="179.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1159.7" y="190.0"></text>
</g>
<g>
<title>byte[] (181 samples, 0.06%)</title><rect x="1156.7" y="163.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1159.7" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (79 samples, 0.02%)</title><rect x="1157.4" y="195.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1160.4" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (79 samples, 0.02%)</title><rect x="1157.4" y="179.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1160.4" y="190.0"></text>
</g>
<g>
<title>[worker-9 tid=26333] (8,917 samples, 2.74%)</title><rect x="1157.7" y="339.0" width="32.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1160.7" y="350.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (8,917 samples, 2.74%)</title><rect x="1157.7" y="323.0" width="32.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1160.7" y="334.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (8,917 samples, 2.74%)</title><rect x="1157.7" y="307.0" width="32.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1160.7" y="318.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (8,917 samples, 2.74%)</title><rect x="1157.7" y="291.0" width="32.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1160.7" y="302.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (122 samples, 0.04%)</title><rect x="1157.7" y="275.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1160.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (122 samples, 0.04%)</title><rect x="1157.7" y="259.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1160.7" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (119 samples, 0.04%)</title><rect x="1157.7" y="243.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1160.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (119 samples, 0.04%)</title><rect x="1157.7" y="227.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1160.7" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (119 samples, 0.04%)</title><rect x="1157.7" y="211.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1160.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (8,795 samples, 2.70%)</title><rect x="1158.2" y="275.0" width="31.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1161.2" y="286.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (8,795 samples, 2.70%)</title><rect x="1158.2" y="259.0" width="31.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1161.2" y="270.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$60/1515438449.act (8,098 samples, 2.48%)</title><rect x="1158.2" y="243.0" width="29.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1161.2" y="254.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$1 (8,098 samples, 2.48%)</title><rect x="1158.2" y="227.0" width="29.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1161.2" y="238.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (259 samples, 0.08%)</title><rect x="1158.2" y="211.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1161.2" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (259 samples, 0.08%)</title><rect x="1158.2" y="195.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1161.2" y="206.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (259 samples, 0.08%)</title><rect x="1158.2" y="179.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1161.2" y="190.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (234 samples, 0.07%)</title><rect x="1159.1" y="211.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1162.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.upsert (7,605 samples, 2.33%)</title><rect x="1160.0" y="211.0" width="27.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1163.0" y="222.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (324 samples, 0.10%)</title><rect x="1160.0" y="195.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1163.0" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (324 samples, 0.10%)</title><rect x="1160.0" y="179.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1163.0" y="190.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (324 samples, 0.10%)</title><rect x="1160.0" y="163.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1163.0" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (324 samples, 0.10%)</title><rect x="1160.0" y="147.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1163.0" y="158.0"></text>
</g>
<g>
<title>byte[] (324 samples, 0.10%)</title><rect x="1160.0" y="131.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1163.0" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (567 samples, 0.17%)</title><rect x="1161.1" y="195.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1164.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (567 samples, 0.17%)</title><rect x="1161.1" y="179.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1164.1" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (567 samples, 0.17%)</title><rect x="1161.1" y="163.0" width="2.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1164.1" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (233 samples, 0.07%)</title><rect x="1163.2" y="195.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1166.2" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (233 samples, 0.07%)</title><rect x="1163.2" y="179.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1166.2" y="190.0"></text>
</g>
<g>
<title>one.nio.http.Response (155 samples, 0.05%)</title><rect x="1164.0" y="195.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1167.0" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (572 samples, 0.18%)</title><rect x="1164.6" y="195.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1167.6" y="206.0"></text>
</g>
<g>
<title>byte[] (238 samples, 0.07%)</title><rect x="1164.6" y="179.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1167.6" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (199 samples, 0.06%)</title><rect x="1165.4" y="179.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1168.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String (135 samples, 0.04%)</title><rect x="1166.2" y="179.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1169.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.upsert (449 samples, 0.14%)</title><rect x="1166.6" y="195.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1169.6" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.upsert (449 samples, 0.14%)</title><rect x="1166.6" y="179.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1169.6" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.upsert (449 samples, 0.14%)</title><rect x="1166.6" y="163.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1169.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (132 samples, 0.04%)</title><rect x="1166.6" y="147.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1169.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (132 samples, 0.04%)</title><rect x="1166.6" y="131.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1169.6" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$Node (97 samples, 0.03%)</title><rect x="1166.8" y="115.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1169.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.of (137 samples, 0.04%)</title><rect x="1167.1" y="147.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1170.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (137 samples, 0.04%)</title><rect x="1167.1" y="131.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1170.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (180 samples, 0.06%)</title><rect x="1167.6" y="147.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1170.6" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (180 samples, 0.06%)</title><rect x="1167.6" y="131.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1170.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (2,443 samples, 0.75%)</title><rect x="1168.3" y="195.0" width="8.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1171.3" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (162 samples, 0.05%)</title><rect x="1168.3" y="179.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1171.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (282 samples, 0.09%)</title><rect x="1168.9" y="179.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1171.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (282 samples, 0.09%)</title><rect x="1168.9" y="163.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1171.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.get$Lambda (282 samples, 0.09%)</title><rect x="1168.9" y="147.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1171.9" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$68 (282 samples, 0.09%)</title><rect x="1168.9" y="131.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1171.9" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (332 samples, 0.10%)</title><rect x="1170.0" y="179.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1173.0" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (332 samples, 0.10%)</title><rect x="1170.0" y="163.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1173.0" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (332 samples, 0.10%)</title><rect x="1170.0" y="147.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1173.0" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (332 samples, 0.10%)</title><rect x="1170.0" y="131.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1173.0" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (332 samples, 0.10%)</title><rect x="1170.0" y="115.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1173.0" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (329 samples, 0.10%)</title><rect x="1170.0" y="99.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1173.0" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (1,298 samples, 0.40%)</title><rect x="1171.2" y="179.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1174.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ExecutorCompletionService$QueueingFuture (442 samples, 0.14%)</title><rect x="1171.2" y="163.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1174.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.&lt;init&gt; (260 samples, 0.08%)</title><rect x="1172.8" y="163.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1175.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (260 samples, 0.08%)</title><rect x="1172.8" y="147.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1175.8" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (260 samples, 0.08%)</title><rect x="1172.8" y="131.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1175.8" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (260 samples, 0.08%)</title><rect x="1172.8" y="115.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1175.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.newTaskFor (351 samples, 0.11%)</title><rect x="1173.7" y="163.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1176.7" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (351 samples, 0.11%)</title><rect x="1173.7" y="147.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1176.7" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.FutureTask (351 samples, 0.11%)</title><rect x="1173.7" y="131.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1176.7" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (245 samples, 0.08%)</title><rect x="1175.0" y="163.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1178.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (245 samples, 0.08%)</title><rect x="1175.0" y="147.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1178.0" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (244 samples, 0.07%)</title><rect x="1175.0" y="131.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1178.0" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (350 samples, 0.11%)</title><rect x="1175.9" y="179.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1178.9" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (350 samples, 0.11%)</title><rect x="1175.9" y="163.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1178.9" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (346 samples, 0.11%)</title><rect x="1175.9" y="147.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1178.9" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (346 samples, 0.11%)</title><rect x="1175.9" y="131.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1178.9" y="142.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (346 samples, 0.11%)</title><rect x="1175.9" y="115.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1178.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (2,862 samples, 0.88%)</title><rect x="1177.1" y="195.0" width="10.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1180.1" y="206.0"></text>
</g>
<g>
<title>java.util.ArrayList (156 samples, 0.05%)</title><rect x="1177.1" y="179.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1180.1" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (537 samples, 0.16%)</title><rect x="1177.7" y="179.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1180.7" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (138 samples, 0.04%)</title><rect x="1177.7" y="163.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1180.7" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (399 samples, 0.12%)</title><rect x="1178.2" y="163.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1181.2" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (214 samples, 0.07%)</title><rect x="1178.2" y="147.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1181.2" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (214 samples, 0.07%)</title><rect x="1178.2" y="131.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1181.2" y="142.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (185 samples, 0.06%)</title><rect x="1179.0" y="147.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1182.0" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (185 samples, 0.06%)</title><rect x="1179.0" y="131.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1182.0" y="142.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (116 samples, 0.04%)</title><rect x="1179.6" y="179.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1182.6" y="190.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (116 samples, 0.04%)</title><rect x="1179.6" y="163.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1182.6" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (313 samples, 0.10%)</title><rect x="1180.0" y="179.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1183.0" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (313 samples, 0.10%)</title><rect x="1180.0" y="163.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1183.0" y="174.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (313 samples, 0.10%)</title><rect x="1180.0" y="147.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1183.0" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (313 samples, 0.10%)</title><rect x="1180.0" y="131.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1183.0" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (313 samples, 0.10%)</title><rect x="1180.0" y="115.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1183.0" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (307 samples, 0.09%)</title><rect x="1180.0" y="99.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1183.0" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (258 samples, 0.08%)</title><rect x="1181.2" y="179.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1184.2" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (258 samples, 0.08%)</title><rect x="1181.2" y="163.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1184.2" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (258 samples, 0.08%)</title><rect x="1181.2" y="147.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1184.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (1,468 samples, 0.45%)</title><rect x="1182.2" y="179.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1185.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (1,209 samples, 0.37%)</title><rect x="1182.2" y="163.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1185.2" y="174.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (766 samples, 0.23%)</title><rect x="1182.2" y="147.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1185.2" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (766 samples, 0.23%)</title><rect x="1182.2" y="131.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1185.2" y="142.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (271 samples, 0.08%)</title><rect x="1182.2" y="115.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1185.2" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (495 samples, 0.15%)</title><rect x="1183.1" y="115.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1186.1" y="126.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (495 samples, 0.15%)</title><rect x="1183.1" y="99.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1186.1" y="110.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (495 samples, 0.15%)</title><rect x="1183.1" y="83.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1186.1" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (495 samples, 0.15%)</title><rect x="1183.1" y="67.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1186.1" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (261 samples, 0.08%)</title><rect x="1183.1" y="51.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1186.1" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (234 samples, 0.07%)</title><rect x="1184.1" y="51.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1187.1" y="62.0"></text>
</g>
<g>
<title>byte[] (234 samples, 0.07%)</title><rect x="1184.1" y="35.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1187.1" y="46.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (443 samples, 0.14%)</title><rect x="1184.9" y="147.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1187.9" y="158.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (443 samples, 0.14%)</title><rect x="1184.9" y="131.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1187.9" y="142.0"></text>
</g>
<g>
<title>byte[] (198 samples, 0.06%)</title><rect x="1184.9" y="115.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1187.9" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (245 samples, 0.08%)</title><rect x="1185.7" y="115.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.7" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (245 samples, 0.08%)</title><rect x="1185.7" y="99.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1188.7" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (245 samples, 0.08%)</title><rect x="1185.7" y="83.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1188.7" y="94.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (143 samples, 0.04%)</title><rect x="1186.5" y="163.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1189.5" y="174.0"></text>
</g>
<g>
<title>java.lang.Long (143 samples, 0.04%)</title><rect x="1186.5" y="147.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1189.5" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (113 samples, 0.03%)</title><rect x="1187.1" y="163.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1190.1" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (113 samples, 0.03%)</title><rect x="1187.1" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1190.1" y="158.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (113 samples, 0.03%)</title><rect x="1187.1" y="131.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1190.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (697 samples, 0.21%)</title><rect x="1187.5" y="243.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1190.5" y="254.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (697 samples, 0.21%)</title><rect x="1187.5" y="227.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1190.5" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (697 samples, 0.21%)</title><rect x="1187.5" y="211.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1190.5" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (472 samples, 0.14%)</title><rect x="1187.5" y="195.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1190.5" y="206.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (472 samples, 0.14%)</title><rect x="1187.5" y="179.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1190.5" y="190.0"></text>
</g>
<g>
<title>byte[] (466 samples, 0.14%)</title><rect x="1187.5" y="163.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1190.5" y="174.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (225 samples, 0.07%)</title><rect x="1189.2" y="195.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1192.2" y="206.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (225 samples, 0.07%)</title><rect x="1189.2" y="179.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1192.2" y="190.0"></text>
</g>
</g>
</svg>
