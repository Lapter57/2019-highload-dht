<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="789"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="789"> </text>
<g id="frames">
<g>
<title>all (18,269 samples, 100.00%)</title><rect x="10.0" y="755.0" width="1180.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.0" y="766.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=25747] (109 samples, 0.60%)</title><rect x="10.0" y="739.0" width="7.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.02%)</title><rect x="10.1" y="723.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.1" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (9 samples, 0.05%)</title><rect x="10.4" y="723.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.4" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.03%)</title><rect x="10.6" y="707.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.6" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.03%)</title><rect x="10.6" y="691.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.6" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="10.6" y="675.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.6" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.02%)</title><rect x="10.7" y="659.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.7" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.07%)</title><rect x="11.0" y="723.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="14.0" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (11 samples, 0.06%)</title><rect x="11.0" y="707.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.0" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (9 samples, 0.05%)</title><rect x="11.2" y="691.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="14.2" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (9 samples, 0.05%)</title><rect x="11.2" y="675.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.2" y="686.0"></text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.03%)</title><rect x="11.7" y="723.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="14.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="12.1" y="723.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="15.1" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (4 samples, 0.02%)</title><rect x="12.1" y="707.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="15.1" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (71 samples, 0.39%)</title><rect x="12.5" y="723.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="15.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (31 samples, 0.17%)</title><rect x="12.5" y="707.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="15.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (31 samples, 0.17%)</title><rect x="12.5" y="691.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.5" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (30 samples, 0.16%)</title><rect x="12.5" y="675.0" width="2.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="15.5" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.11%)</title><rect x="13.1" y="659.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="16.1" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.11%)</title><rect x="13.1" y="643.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="16.1" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (20 samples, 0.11%)</title><rect x="13.2" y="627.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="16.2" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (20 samples, 0.11%)</title><rect x="13.2" y="611.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="16.2" y="622.0"></text>
</g>
<g>
<title>ep_poll (16 samples, 0.09%)</title><rect x="13.3" y="595.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="16.3" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (12 samples, 0.07%)</title><rect x="13.4" y="579.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="16.4" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.04%)</title><rect x="13.7" y="563.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="16.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (40 samples, 0.22%)</title><rect x="14.5" y="707.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (36 samples, 0.20%)</title><rect x="14.6" y="691.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="17.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (18 samples, 0.10%)</title><rect x="14.7" y="675.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (12 samples, 0.07%)</title><rect x="14.8" y="659.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (12 samples, 0.07%)</title><rect x="14.8" y="643.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.8" y="654.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (11 samples, 0.06%)</title><rect x="14.8" y="627.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (11 samples, 0.06%)</title><rect x="14.8" y="611.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (8 samples, 0.04%)</title><rect x="15.0" y="595.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.0" y="606.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (8 samples, 0.04%)</title><rect x="15.0" y="579.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.0" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (17 samples, 0.09%)</title><rect x="15.8" y="675.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.8" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (17 samples, 0.09%)</title><rect x="15.8" y="659.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="18.8" y="670.0"></text>
</g>
<g>
<title>__libc_recv (14 samples, 0.08%)</title><rect x="16.0" y="643.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="19.0" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="16.2" y="627.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="19.2" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="16.2" y="611.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="19.2" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (7 samples, 0.04%)</title><rect x="16.5" y="595.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="19.5" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (7 samples, 0.04%)</title><rect x="16.5" y="579.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="19.5" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (5 samples, 0.03%)</title><rect x="16.5" y="563.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="19.5" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.03%)</title><rect x="16.5" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="19.5" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=25757] (110 samples, 0.60%)</title><rect x="17.0" y="739.0" width="7.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="20.0" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.03%)</title><rect x="17.2" y="723.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="20.2" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.02%)</title><rect x="17.2" y="707.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="20.2" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.02%)</title><rect x="17.2" y="691.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="20.2" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.04%)</title><rect x="17.5" y="723.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="20.5" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (7 samples, 0.04%)</title><rect x="17.5" y="707.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="20.5" y="718.0"></text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.03%)</title><rect x="17.9" y="723.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="20.9" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.02%)</title><rect x="17.9" y="707.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="20.9" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (87 samples, 0.48%)</title><rect x="18.5" y="723.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (27 samples, 0.15%)</title><rect x="18.5" y="707.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (26 samples, 0.14%)</title><rect x="18.5" y="691.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.5" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (25 samples, 0.14%)</title><rect x="18.5" y="675.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="21.5" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.09%)</title><rect x="19.0" y="659.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="22.0" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.09%)</title><rect x="19.0" y="643.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="22.0" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (14 samples, 0.08%)</title><rect x="19.2" y="627.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="22.2" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (14 samples, 0.08%)</title><rect x="19.2" y="611.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="22.2" y="622.0"></text>
</g>
<g>
<title>ep_poll (12 samples, 0.07%)</title><rect x="19.3" y="595.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="22.3" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (5 samples, 0.03%)</title><rect x="19.6" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="22.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (60 samples, 0.33%)</title><rect x="20.2" y="707.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (56 samples, 0.31%)</title><rect x="20.3" y="691.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (42 samples, 0.23%)</title><rect x="20.3" y="675.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (35 samples, 0.19%)</title><rect x="20.5" y="659.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.5" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (35 samples, 0.19%)</title><rect x="20.5" y="643.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.5" y="654.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (33 samples, 0.18%)</title><rect x="20.5" y="627.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (33 samples, 0.18%)</title><rect x="20.5" y="611.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (20 samples, 0.11%)</title><rect x="20.5" y="595.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 0.11%)</title><rect x="20.5" y="579.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (20 samples, 0.11%)</title><rect x="20.5" y="563.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (19 samples, 0.10%)</title><rect x="20.5" y="547.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (19 samples, 0.10%)</title><rect x="20.5" y="531.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 0.10%)</title><rect x="20.5" y="515.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 0.10%)</title><rect x="20.5" y="499.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.10%)</title><rect x="20.5" y="483.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.10%)</title><rect x="20.5" y="467.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.5" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (17 samples, 0.09%)</title><rect x="20.6" y="451.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="23.6" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.08%)</title><rect x="20.8" y="435.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="23.8" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.08%)</title><rect x="20.8" y="419.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="23.8" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.06%)</title><rect x="21.0" y="403.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="24.0" y="414.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.06%)</title><rect x="21.0" y="387.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="24.0" y="398.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.06%)</title><rect x="21.0" y="371.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="24.0" y="382.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.05%)</title><rect x="21.0" y="355.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="24.0" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.05%)</title><rect x="21.1" y="339.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="24.1" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.05%)</title><rect x="21.1" y="323.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="24.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (6 samples, 0.03%)</title><rect x="21.8" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="24.8" y="606.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (6 samples, 0.03%)</title><rect x="21.8" y="579.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (7 samples, 0.04%)</title><rect x="22.1" y="595.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (7 samples, 0.04%)</title><rect x="22.1" y="579.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (4 samples, 0.02%)</title><rect x="22.1" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (14 samples, 0.08%)</title><rect x="23.0" y="675.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.0" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (14 samples, 0.08%)</title><rect x="23.0" y="659.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.0" y="670.0"></text>
</g>
<g>
<title>__libc_recv (12 samples, 0.07%)</title><rect x="23.1" y="643.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="26.1" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="23.4" y="627.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="26.4" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="23.4" y="611.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="26.4" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (7 samples, 0.04%)</title><rect x="23.4" y="595.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="26.4" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (7 samples, 0.04%)</title><rect x="23.4" y="579.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="26.4" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (5 samples, 0.03%)</title><rect x="23.4" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="26.4" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.03%)</title><rect x="23.4" y="547.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="26.4" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=25763] (107 samples, 0.59%)</title><rect x="24.1" y="739.0" width="7.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="27.1" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.04%)</title><rect x="24.5" y="723.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="27.5" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (8 samples, 0.04%)</title><rect x="24.5" y="707.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="27.5" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (6 samples, 0.03%)</title><rect x="24.6" y="691.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="27.6" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (5 samples, 0.03%)</title><rect x="24.7" y="675.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="27.7" y="686.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (89 samples, 0.49%)</title><rect x="25.3" y="723.0" width="5.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (27 samples, 0.15%)</title><rect x="25.3" y="707.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="28.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (25 samples, 0.14%)</title><rect x="25.4" y="691.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="28.4" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (20 samples, 0.11%)</title><rect x="25.5" y="675.0" width="1.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="28.5" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="26.1" y="659.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="29.1" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="26.1" y="643.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="29.1" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (10 samples, 0.05%)</title><rect x="26.1" y="627.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="29.1" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (10 samples, 0.05%)</title><rect x="26.1" y="611.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="29.1" y="622.0"></text>
</g>
<g>
<title>ep_poll (9 samples, 0.05%)</title><rect x="26.1" y="595.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="29.1" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (8 samples, 0.04%)</title><rect x="26.2" y="579.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="29.2" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.02%)</title><rect x="26.4" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="29.4" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (62 samples, 0.34%)</title><rect x="27.1" y="707.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (61 samples, 0.33%)</title><rect x="27.1" y="691.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (44 samples, 0.24%)</title><rect x="27.2" y="675.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (43 samples, 0.24%)</title><rect x="27.2" y="659.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (43 samples, 0.24%)</title><rect x="27.2" y="643.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.2" y="654.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (41 samples, 0.22%)</title><rect x="27.2" y="627.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (38 samples, 0.21%)</title><rect x="27.4" y="611.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="30.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (21 samples, 0.11%)</title><rect x="27.8" y="595.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 0.11%)</title><rect x="27.8" y="579.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (21 samples, 0.11%)</title><rect x="27.8" y="563.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (20 samples, 0.11%)</title><rect x="27.8" y="547.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (20 samples, 0.11%)</title><rect x="27.8" y="531.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="30.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (20 samples, 0.11%)</title><rect x="27.8" y="515.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (20 samples, 0.11%)</title><rect x="27.8" y="499.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="30.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.11%)</title><rect x="27.8" y="483.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.11%)</title><rect x="27.8" y="467.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.8" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (19 samples, 0.10%)</title><rect x="27.8" y="451.0" width="1.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="30.8" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.07%)</title><rect x="28.2" y="435.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="31.2" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.07%)</title><rect x="28.2" y="419.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="31.2" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.07%)</title><rect x="28.2" y="403.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="31.2" y="414.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.07%)</title><rect x="28.2" y="387.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="31.2" y="398.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.07%)</title><rect x="28.2" y="371.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="31.2" y="382.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.05%)</title><rect x="28.4" y="355.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="31.4" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.05%)</title><rect x="28.5" y="339.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="31.5" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.05%)</title><rect x="28.5" y="323.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="31.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (6 samples, 0.03%)</title><rect x="29.1" y="595.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.1" y="606.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (6 samples, 0.03%)</title><rect x="29.1" y="579.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (6 samples, 0.03%)</title><rect x="29.5" y="595.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (5 samples, 0.03%)</title><rect x="29.6" y="579.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (15 samples, 0.08%)</title><rect x="30.1" y="675.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="33.1" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (15 samples, 0.08%)</title><rect x="30.1" y="659.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="33.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="30.1" y="643.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="33.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="30.1" y="627.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="33.1" y="638.0"></text>
</g>
<g>
<title>__libc_recv (11 samples, 0.06%)</title><rect x="30.3" y="643.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="33.3" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="30.5" y="627.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="33.5" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="30.5" y="611.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="33.5" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (6 samples, 0.03%)</title><rect x="30.7" y="595.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="33.7" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (6 samples, 0.03%)</title><rect x="30.7" y="579.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="33.7" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (5 samples, 0.03%)</title><rect x="30.7" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="33.7" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.03%)</title><rect x="30.7" y="547.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="33.7" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25748] (57 samples, 0.31%)</title><rect x="31.1" y="739.0" width="3.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="34.1" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.03%)</title><rect x="31.2" y="723.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="34.2" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.02%)</title><rect x="31.3" y="707.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="34.3" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (49 samples, 0.27%)</title><rect x="31.6" y="723.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (23 samples, 0.13%)</title><rect x="31.6" y="707.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.6" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (23 samples, 0.13%)</title><rect x="31.6" y="691.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="34.6" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (20 samples, 0.11%)</title><rect x="31.6" y="675.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="34.6" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.10%)</title><rect x="31.6" y="659.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="34.6" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.10%)</title><rect x="31.6" y="643.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="34.6" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (17 samples, 0.09%)</title><rect x="31.8" y="627.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="34.8" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (17 samples, 0.09%)</title><rect x="31.8" y="611.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="34.8" y="622.0"></text>
</g>
<g>
<title>ep_poll (14 samples, 0.08%)</title><rect x="31.9" y="595.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="34.9" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (9 samples, 0.05%)</title><rect x="32.1" y="579.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="35.1" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.03%)</title><rect x="32.3" y="563.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="35.3" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (26 samples, 0.14%)</title><rect x="33.1" y="707.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (25 samples, 0.14%)</title><rect x="33.1" y="691.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (16 samples, 0.09%)</title><rect x="33.1" y="675.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="36.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (13 samples, 0.07%)</title><rect x="33.2" y="659.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="36.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (13 samples, 0.07%)</title><rect x="33.2" y="643.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="36.2" y="654.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (13 samples, 0.07%)</title><rect x="33.2" y="627.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="36.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (12 samples, 0.07%)</title><rect x="33.3" y="611.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (7 samples, 0.04%)</title><rect x="33.6" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="36.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (6 samples, 0.03%)</title><rect x="33.6" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (5 samples, 0.03%)</title><rect x="33.6" y="563.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="36.6" y="574.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (5 samples, 0.03%)</title><rect x="33.6" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="36.6" y="558.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (4 samples, 0.02%)</title><rect x="33.6" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="36.6" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (4 samples, 0.02%)</title><rect x="33.6" y="515.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.6" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (9 samples, 0.05%)</title><rect x="34.2" y="675.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.2" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 0.05%)</title><rect x="34.2" y="659.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="37.2" y="670.0"></text>
</g>
<g>
<title>__libc_recv (7 samples, 0.04%)</title><rect x="34.3" y="643.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="37.3" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="34.4" y="627.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="37.4" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="34.4" y="611.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="37.4" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (5 samples, 0.03%)</title><rect x="34.4" y="595.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="37.4" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (5 samples, 0.03%)</title><rect x="34.4" y="579.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="37.4" y="590.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25758] (205 samples, 1.12%)</title><rect x="34.7" y="739.0" width="13.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="37.7" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.02%)</title><rect x="34.9" y="723.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="37.9" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.06%)</title><rect x="35.4" y="723.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="38.4" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (11 samples, 0.06%)</title><rect x="35.4" y="707.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="38.4" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.03%)</title><rect x="35.6" y="691.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="38.6" y="702.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.03%)</title><rect x="35.6" y="675.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="38.6" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (4 samples, 0.02%)</title><rect x="35.9" y="691.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="38.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.04%)</title><rect x="36.2" y="723.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="39.2" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (172 samples, 0.94%)</title><rect x="36.9" y="723.0" width="11.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (48 samples, 0.26%)</title><rect x="36.9" y="707.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (45 samples, 0.25%)</title><rect x="37.1" y="691.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.1" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (39 samples, 0.21%)</title><rect x="37.2" y="675.0" width="2.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="40.2" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.13%)</title><rect x="38.2" y="659.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="41.2" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.13%)</title><rect x="38.2" y="643.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="41.2" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (19 samples, 0.10%)</title><rect x="38.5" y="627.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="41.5" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (19 samples, 0.10%)</title><rect x="38.5" y="611.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="41.5" y="622.0"></text>
</g>
<g>
<title>ep_poll (15 samples, 0.08%)</title><rect x="38.7" y="595.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="41.7" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (14 samples, 0.08%)</title><rect x="38.8" y="579.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="41.8" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.03%)</title><rect x="39.3" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="42.3" y="574.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (5 samples, 0.03%)</title><rect x="39.3" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="42.3" y="558.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.02%)</title><rect x="39.4" y="531.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="42.4" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (123 samples, 0.67%)</title><rect x="40.0" y="707.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="43.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (122 samples, 0.67%)</title><rect x="40.0" y="691.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="43.0" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (85 samples, 0.47%)</title><rect x="40.1" y="675.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="43.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (73 samples, 0.40%)</title><rect x="40.2" y="659.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="43.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (72 samples, 0.39%)</title><rect x="40.2" y="643.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="43.2" y="654.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (67 samples, 0.37%)</title><rect x="40.2" y="627.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.03%)</title><rect x="40.2" y="611.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (62 samples, 0.34%)</title><rect x="40.6" y="611.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (41 samples, 0.22%)</title><rect x="40.6" y="595.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (39 samples, 0.21%)</title><rect x="40.7" y="579.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="43.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (39 samples, 0.21%)</title><rect x="40.7" y="563.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="43.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (31 samples, 0.17%)</title><rect x="40.8" y="547.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="43.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (31 samples, 0.17%)</title><rect x="40.8" y="531.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="43.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (31 samples, 0.17%)</title><rect x="40.8" y="515.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="43.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (31 samples, 0.17%)</title><rect x="40.8" y="499.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (31 samples, 0.17%)</title><rect x="40.8" y="483.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="43.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (31 samples, 0.17%)</title><rect x="40.8" y="467.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="43.8" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (28 samples, 0.15%)</title><rect x="41.0" y="451.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="44.0" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.10%)</title><rect x="41.6" y="435.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="44.6" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.10%)</title><rect x="41.6" y="419.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="44.6" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.10%)</title><rect x="41.6" y="403.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="44.6" y="414.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.09%)</title><rect x="41.7" y="387.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="44.7" y="398.0"></text>
</g>
<g>
<title>futex_wake (17 samples, 0.09%)</title><rect x="41.7" y="371.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="44.7" y="382.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.07%)</title><rect x="42.0" y="355.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="45.0" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.07%)</title><rect x="42.0" y="339.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="45.0" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.07%)</title><rect x="42.0" y="323.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="45.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.02%)</title><rect x="43.0" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (9 samples, 0.05%)</title><rect x="43.3" y="595.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.3" y="606.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (9 samples, 0.05%)</title><rect x="43.3" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="46.3" y="590.0"></text>
</g>
<g>
<title>java/util/Set.of (4 samples, 0.02%)</title><rect x="43.6" y="563.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (11 samples, 0.06%)</title><rect x="43.8" y="595.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.8" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (10 samples, 0.05%)</title><rect x="43.9" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="46.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.04%)</title><rect x="44.9" y="659.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="47.9" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.02%)</title><rect x="45.1" y="643.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.1" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (36 samples, 0.20%)</title><rect x="45.6" y="675.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.6" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (35 samples, 0.19%)</title><rect x="45.7" y="659.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.7" y="670.0"></text>
</g>
<g>
<title>__libc_recv (30 samples, 0.16%)</title><rect x="45.9" y="643.0" width="1.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="48.9" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.12%)</title><rect x="46.4" y="627.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="49.4" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.12%)</title><rect x="46.4" y="611.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="49.4" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (14 samples, 0.08%)</title><rect x="46.9" y="595.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="49.9" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (14 samples, 0.08%)</title><rect x="46.9" y="579.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="49.9" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (11 samples, 0.06%)</title><rect x="46.9" y="563.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="49.9" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 0.06%)</title><rect x="46.9" y="547.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="49.9" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.02%)</title><rect x="47.2" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="50.2" y="542.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25764] (115 samples, 0.63%)</title><rect x="48.0" y="739.0" width="7.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="51.0" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.04%)</title><rect x="48.4" y="723.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="51.4" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.03%)</title><rect x="48.4" y="707.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="51.4" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (6 samples, 0.03%)</title><rect x="48.4" y="691.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="51.4" y="702.0"></text>
</g>
<g>
<title>[not_walkable_Java] (4 samples, 0.02%)</title><rect x="48.8" y="723.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="51.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.03%)</title><rect x="49.1" y="723.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="52.1" y="734.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.02%)</title><rect x="49.5" y="723.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="52.5" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (88 samples, 0.48%)</title><rect x="49.7" y="723.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="52.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (23 samples, 0.13%)</title><rect x="49.7" y="707.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (22 samples, 0.12%)</title><rect x="49.8" y="691.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.8" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (22 samples, 0.12%)</title><rect x="49.8" y="675.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="52.8" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.07%)</title><rect x="50.4" y="659.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="53.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.07%)</title><rect x="50.4" y="643.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="53.4" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (11 samples, 0.06%)</title><rect x="50.5" y="627.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="53.5" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (11 samples, 0.06%)</title><rect x="50.5" y="611.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="53.5" y="622.0"></text>
</g>
<g>
<title>ep_poll (9 samples, 0.05%)</title><rect x="50.5" y="595.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="53.5" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (8 samples, 0.04%)</title><rect x="50.6" y="579.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="53.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (65 samples, 0.36%)</title><rect x="51.2" y="707.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (65 samples, 0.36%)</title><rect x="51.2" y="691.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (44 samples, 0.24%)</title><rect x="51.2" y="675.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (39 samples, 0.21%)</title><rect x="51.2" y="659.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (39 samples, 0.21%)</title><rect x="51.2" y="643.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="54.2" y="654.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (39 samples, 0.21%)</title><rect x="51.2" y="627.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.03%)</title><rect x="51.2" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (33 samples, 0.18%)</title><rect x="51.6" y="611.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (19 samples, 0.10%)</title><rect x="51.7" y="595.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (19 samples, 0.10%)</title><rect x="51.7" y="579.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (19 samples, 0.10%)</title><rect x="51.7" y="563.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (17 samples, 0.09%)</title><rect x="51.7" y="547.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (17 samples, 0.09%)</title><rect x="51.7" y="531.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.09%)</title><rect x="51.7" y="515.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (17 samples, 0.09%)</title><rect x="51.7" y="499.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.09%)</title><rect x="51.7" y="483.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="54.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.09%)</title><rect x="51.7" y="467.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.7" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (17 samples, 0.09%)</title><rect x="51.7" y="451.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="54.7" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.07%)</title><rect x="52.0" y="435.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="55.0" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.07%)</title><rect x="52.0" y="419.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="55.0" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.06%)</title><rect x="52.1" y="403.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="55.1" y="414.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.06%)</title><rect x="52.1" y="387.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="55.1" y="398.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.06%)</title><rect x="52.1" y="371.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="55.1" y="382.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.06%)</title><rect x="52.1" y="355.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="55.1" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.05%)</title><rect x="52.2" y="339.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="55.2" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.05%)</title><rect x="52.2" y="323.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="55.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (8 samples, 0.04%)</title><rect x="52.9" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="55.9" y="606.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (8 samples, 0.04%)</title><rect x="52.9" y="579.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.9" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (5 samples, 0.03%)</title><rect x="53.0" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.0" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (4 samples, 0.02%)</title><rect x="53.0" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.0" y="558.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.02%)</title><rect x="53.0" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.0" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.02%)</title><rect x="53.0" y="515.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (5 samples, 0.03%)</title><rect x="53.4" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.4" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (4 samples, 0.02%)</title><rect x="53.5" y="579.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.5" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (21 samples, 0.11%)</title><rect x="54.1" y="675.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="57.1" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (21 samples, 0.11%)</title><rect x="54.1" y="659.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.1" y="670.0"></text>
</g>
<g>
<title>__libc_recv (18 samples, 0.10%)</title><rect x="54.2" y="643.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="57.2" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.08%)</title><rect x="54.4" y="627.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="57.4" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.08%)</title><rect x="54.4" y="611.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="57.4" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (13 samples, 0.07%)</title><rect x="54.6" y="595.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="57.6" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (13 samples, 0.07%)</title><rect x="54.6" y="579.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="57.6" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (12 samples, 0.07%)</title><rect x="54.6" y="563.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="57.6" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.07%)</title><rect x="54.6" y="547.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="57.6" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.02%)</title><rect x="55.0" y="531.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="58.0" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.02%)</title><rect x="55.0" y="515.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="58.0" y="526.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.02%)</title><rect x="55.0" y="499.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="58.0" y="510.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25749] (191 samples, 1.05%)</title><rect x="55.4" y="739.0" width="12.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="58.4" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (30 samples, 0.16%)</title><rect x="55.8" y="723.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="58.8" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (29 samples, 0.16%)</title><rect x="55.9" y="707.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="58.9" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (12 samples, 0.07%)</title><rect x="55.9" y="691.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="58.9" y="702.0"></text>
</g>
<g>
<title>SpinPause (9 samples, 0.05%)</title><rect x="56.1" y="675.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="59.1" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (17 samples, 0.09%)</title><rect x="56.6" y="691.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="59.6" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (13 samples, 0.07%)</title><rect x="56.9" y="675.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="59.9" y="686.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.03%)</title><rect x="56.9" y="659.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="59.9" y="670.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.04%)</title><rect x="57.2" y="659.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="60.2" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="57.4" y="643.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="60.4" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="57.4" y="627.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="60.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.07%)</title><rect x="57.9" y="723.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="60.9" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (6 samples, 0.03%)</title><rect x="58.1" y="707.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="61.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="58.1" y="691.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="61.1" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="58.1" y="675.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="61.1" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="58.1" y="659.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="61.1" y="670.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="58.1" y="643.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="61.1" y="654.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.03%)</title><rect x="58.1" y="627.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="61.1" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (138 samples, 0.76%)</title><rect x="58.8" y="723.0" width="8.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (54 samples, 0.30%)</title><rect x="59.0" y="707.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (50 samples, 0.27%)</title><rect x="59.2" y="691.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.2" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (48 samples, 0.26%)</title><rect x="59.2" y="675.0" width="3.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="62.2" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.15%)</title><rect x="60.6" y="659.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="63.6" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.15%)</title><rect x="60.6" y="643.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="63.6" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (23 samples, 0.13%)</title><rect x="60.8" y="627.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="63.8" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (22 samples, 0.12%)</title><rect x="60.9" y="611.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="63.9" y="622.0"></text>
</g>
<g>
<title>ep_poll (18 samples, 0.10%)</title><rect x="61.1" y="595.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="64.1" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (14 samples, 0.08%)</title><rect x="61.2" y="579.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="64.2" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.04%)</title><rect x="61.7" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="64.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (82 samples, 0.45%)</title><rect x="62.4" y="707.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="65.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (80 samples, 0.44%)</title><rect x="62.6" y="691.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="65.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (46 samples, 0.25%)</title><rect x="62.6" y="675.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (33 samples, 0.18%)</title><rect x="62.8" y="659.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="65.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (32 samples, 0.18%)</title><rect x="62.8" y="643.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="65.8" y="654.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (25 samples, 0.14%)</title><rect x="62.8" y="627.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="65.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.02%)</title><rect x="62.8" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (21 samples, 0.11%)</title><rect x="63.1" y="611.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (11 samples, 0.06%)</title><rect x="63.4" y="595.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="66.4" y="606.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (11 samples, 0.06%)</title><rect x="63.4" y="579.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.4" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (6 samples, 0.03%)</title><rect x="63.5" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="66.5" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (4 samples, 0.02%)</title><rect x="63.5" y="547.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="66.5" y="558.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.02%)</title><rect x="63.5" y="531.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (6 samples, 0.03%)</title><rect x="64.1" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (5 samples, 0.03%)</title><rect x="64.1" y="579.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.03%)</title><rect x="64.6" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.03%)</title><rect x="64.6" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.03%)</title><rect x="64.6" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.03%)</title><rect x="64.6" y="579.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.03%)</title><rect x="64.9" y="659.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.9" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (34 samples, 0.19%)</title><rect x="65.5" y="675.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.5" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (34 samples, 0.19%)</title><rect x="65.5" y="659.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="65.6" y="643.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="68.6" y="654.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="65.6" y="627.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="68.6" y="638.0"></text>
</g>
<g>
<title>__libc_recv (28 samples, 0.15%)</title><rect x="65.9" y="643.0" width="1.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="68.9" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.12%)</title><rect x="66.3" y="627.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="69.3" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.12%)</title><rect x="66.3" y="611.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="69.3" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (19 samples, 0.10%)</title><rect x="66.5" y="595.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="69.5" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (18 samples, 0.10%)</title><rect x="66.6" y="579.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="69.6" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (13 samples, 0.07%)</title><rect x="66.6" y="563.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="69.6" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (13 samples, 0.07%)</title><rect x="66.6" y="547.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="69.6" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.03%)</title><rect x="67.0" y="531.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="70.0" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.03%)</title><rect x="67.0" y="515.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="70.0" y="526.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.02%)</title><rect x="67.1" y="499.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="70.1" y="510.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 0.02%)</title><rect x="67.4" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="70.4" y="574.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.02%)</title><rect x="67.4" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="70.4" y="558.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.02%)</title><rect x="67.4" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="70.4" y="542.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25759] (202 samples, 1.11%)</title><rect x="67.7" y="739.0" width="13.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="70.7" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.02%)</title><rect x="67.8" y="723.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="70.8" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.07%)</title><rect x="68.3" y="723.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="71.3" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (11 samples, 0.06%)</title><rect x="68.4" y="707.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="71.4" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (8 samples, 0.04%)</title><rect x="68.6" y="691.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="71.6" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (7 samples, 0.04%)</title><rect x="68.6" y="675.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="71.6" y="686.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.03%)</title><rect x="68.6" y="659.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="71.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.04%)</title><rect x="69.2" y="723.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="72.2" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (5 samples, 0.03%)</title><rect x="69.2" y="707.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="72.2" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (170 samples, 0.93%)</title><rect x="69.8" y="723.0" width="11.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (50 samples, 0.27%)</title><rect x="69.9" y="707.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.9" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (49 samples, 0.27%)</title><rect x="70.0" y="691.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="73.0" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (46 samples, 0.25%)</title><rect x="70.1" y="675.0" width="3.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="73.1" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.14%)</title><rect x="71.4" y="659.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="74.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.14%)</title><rect x="71.4" y="643.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="74.4" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (25 samples, 0.14%)</title><rect x="71.5" y="627.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="74.5" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (25 samples, 0.14%)</title><rect x="71.5" y="611.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="74.5" y="622.0"></text>
</g>
<g>
<title>ep_poll (22 samples, 0.12%)</title><rect x="71.6" y="595.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="74.6" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (19 samples, 0.10%)</title><rect x="71.7" y="579.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="74.7" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.04%)</title><rect x="72.4" y="563.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="75.4" y="574.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (4 samples, 0.02%)</title><rect x="72.6" y="547.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="75.6" y="558.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.02%)</title><rect x="72.6" y="531.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="75.6" y="542.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.02%)</title><rect x="72.6" y="515.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="75.6" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (118 samples, 0.65%)</title><rect x="73.2" y="707.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (113 samples, 0.62%)</title><rect x="73.4" y="691.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (66 samples, 0.36%)</title><rect x="73.5" y="675.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (57 samples, 0.31%)</title><rect x="73.6" y="659.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.6" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (57 samples, 0.31%)</title><rect x="73.6" y="643.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.6" y="654.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (56 samples, 0.31%)</title><rect x="73.6" y="627.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="76.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (54 samples, 0.30%)</title><rect x="73.8" y="611.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (39 samples, 0.21%)</title><rect x="73.8" y="595.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (37 samples, 0.20%)</title><rect x="73.9" y="579.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="76.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (37 samples, 0.20%)</title><rect x="73.9" y="563.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (34 samples, 0.19%)</title><rect x="73.9" y="547.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (34 samples, 0.19%)</title><rect x="73.9" y="531.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (34 samples, 0.19%)</title><rect x="73.9" y="515.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (34 samples, 0.19%)</title><rect x="73.9" y="499.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (34 samples, 0.19%)</title><rect x="73.9" y="483.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (34 samples, 0.19%)</title><rect x="73.9" y="467.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="76.9" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (30 samples, 0.16%)</title><rect x="74.2" y="451.0" width="1.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="77.2" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.12%)</title><rect x="74.7" y="435.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="77.7" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.12%)</title><rect x="74.7" y="419.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="77.7" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 0.11%)</title><rect x="74.8" y="403.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="77.8" y="414.0"></text>
</g>
<g>
<title>do_futex (20 samples, 0.11%)</title><rect x="74.8" y="387.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="77.8" y="398.0"></text>
</g>
<g>
<title>futex_wake (20 samples, 0.11%)</title><rect x="74.8" y="371.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="77.8" y="382.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.07%)</title><rect x="75.3" y="355.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="78.3" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.07%)</title><rect x="75.3" y="339.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="78.3" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.07%)</title><rect x="75.3" y="323.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="78.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (9 samples, 0.05%)</title><rect x="76.3" y="595.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.3" y="606.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (9 samples, 0.05%)</title><rect x="76.3" y="579.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (7 samples, 0.04%)</title><rect x="76.4" y="563.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.4" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (6 samples, 0.03%)</title><rect x="76.4" y="547.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.4" y="558.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.02%)</title><rect x="76.4" y="531.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="79.4" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.02%)</title><rect x="76.4" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (5 samples, 0.03%)</title><rect x="76.9" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.02%)</title><rect x="77.3" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.3" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (46 samples, 0.25%)</title><rect x="77.8" y="675.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="80.8" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (46 samples, 0.25%)</title><rect x="77.8" y="659.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="77.8" y="643.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="80.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="77.8" y="627.0" width="0.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="80.8" y="638.0"></text>
</g>
<g>
<title>__libc_recv (41 samples, 0.22%)</title><rect x="78.0" y="643.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="81.0" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.16%)</title><rect x="78.8" y="627.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="81.8" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.16%)</title><rect x="78.8" y="611.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="81.8" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (23 samples, 0.13%)</title><rect x="79.1" y="595.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="82.1" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (23 samples, 0.13%)</title><rect x="79.1" y="579.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="82.1" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (16 samples, 0.09%)</title><rect x="79.2" y="563.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="82.2" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (16 samples, 0.09%)</title><rect x="79.2" y="547.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="82.2" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.03%)</title><rect x="79.4" y="531.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="82.4" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.03%)</title><rect x="79.5" y="515.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="82.5" y="526.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 0.02%)</title><rect x="80.2" y="563.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="83.2" y="574.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.02%)</title><rect x="80.2" y="547.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="83.2" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25765] (206 samples, 1.13%)</title><rect x="80.8" y="739.0" width="13.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="83.8" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.02%)</title><rect x="81.2" y="723.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="84.2" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.02%)</title><rect x="81.2" y="707.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="84.2" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.02%)</title><rect x="81.2" y="691.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="84.2" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.02%)</title><rect x="81.2" y="675.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="84.2" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.05%)</title><rect x="81.5" y="723.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="84.5" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (10 samples, 0.05%)</title><rect x="81.5" y="707.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="84.5" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (8 samples, 0.04%)</title><rect x="81.6" y="691.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="84.6" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (8 samples, 0.04%)</title><rect x="81.6" y="675.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="84.6" y="686.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.02%)</title><rect x="81.6" y="659.0" width="0.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="84.6" y="670.0"></text>
</g>
<g>
<title>[not_walkable_Java] (6 samples, 0.03%)</title><rect x="82.1" y="723.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="85.1" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (6 samples, 0.03%)</title><rect x="82.1" y="707.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="85.1" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (6 samples, 0.03%)</title><rect x="82.1" y="691.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="85.1" y="702.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.02%)</title><rect x="82.3" y="675.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="85.3" y="686.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.02%)</title><rect x="82.7" y="723.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="85.7" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (173 samples, 0.95%)</title><rect x="82.9" y="723.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (52 samples, 0.28%)</title><rect x="83.1" y="707.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="86.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (52 samples, 0.28%)</title><rect x="83.1" y="691.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.1" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (44 samples, 0.24%)</title><rect x="83.2" y="675.0" width="2.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="86.2" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.16%)</title><rect x="84.1" y="659.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="87.1" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.16%)</title><rect x="84.1" y="643.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="87.1" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (28 samples, 0.15%)</title><rect x="84.3" y="627.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="87.3" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (28 samples, 0.15%)</title><rect x="84.3" y="611.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="87.3" y="622.0"></text>
</g>
<g>
<title>ep_poll (20 samples, 0.11%)</title><rect x="84.3" y="595.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="87.3" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (19 samples, 0.10%)</title><rect x="84.4" y="579.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="87.4" y="590.0"></text>
</g>
<g>
<title>fput_many (6 samples, 0.03%)</title><rect x="85.7" y="595.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="88.7" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (119 samples, 0.65%)</title><rect x="86.4" y="707.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="89.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (116 samples, 0.63%)</title><rect x="86.5" y="691.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="89.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (84 samples, 0.46%)</title><rect x="86.6" y="675.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="89.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (67 samples, 0.37%)</title><rect x="86.8" y="659.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (66 samples, 0.36%)</title><rect x="86.9" y="643.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="89.9" y="654.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (61 samples, 0.33%)</title><rect x="86.9" y="627.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="89.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.03%)</title><rect x="86.9" y="611.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="89.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (55 samples, 0.30%)</title><rect x="87.2" y="611.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (32 samples, 0.18%)</title><rect x="87.3" y="595.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (32 samples, 0.18%)</title><rect x="87.3" y="579.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="90.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (32 samples, 0.18%)</title><rect x="87.3" y="563.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (29 samples, 0.16%)</title><rect x="87.4" y="547.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (29 samples, 0.16%)</title><rect x="87.4" y="531.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="90.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (29 samples, 0.16%)</title><rect x="87.4" y="515.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (29 samples, 0.16%)</title><rect x="87.4" y="499.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (29 samples, 0.16%)</title><rect x="87.4" y="483.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (29 samples, 0.16%)</title><rect x="87.4" y="467.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.4" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (25 samples, 0.14%)</title><rect x="87.6" y="451.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="90.6" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.11%)</title><rect x="87.8" y="435.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="90.8" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.11%)</title><rect x="87.8" y="419.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="90.8" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.10%)</title><rect x="88.0" y="403.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="91.0" y="414.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.09%)</title><rect x="88.1" y="387.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="91.1" y="398.0"></text>
</g>
<g>
<title>futex_wake (17 samples, 0.09%)</title><rect x="88.1" y="371.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="91.1" y="382.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.07%)</title><rect x="88.4" y="355.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="91.4" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.07%)</title><rect x="88.4" y="339.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="91.4" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.07%)</title><rect x="88.4" y="323.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="91.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (12 samples, 0.07%)</title><rect x="89.4" y="595.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.4" y="606.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (12 samples, 0.07%)</title><rect x="89.4" y="579.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="92.4" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (6 samples, 0.03%)</title><rect x="89.4" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="92.4" y="574.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (4 samples, 0.02%)</title><rect x="89.8" y="563.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="92.8" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (4 samples, 0.02%)</title><rect x="89.8" y="547.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (10 samples, 0.05%)</title><rect x="90.2" y="595.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.2" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (7 samples, 0.04%)</title><rect x="90.3" y="579.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="93.3" y="590.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (5 samples, 0.03%)</title><rect x="90.3" y="563.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="93.3" y="574.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (4 samples, 0.02%)</title><rect x="90.4" y="547.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.02%)</title><rect x="90.9" y="627.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.02%)</title><rect x="90.9" y="611.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.02%)</title><rect x="90.9" y="595.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.05%)</title><rect x="91.1" y="659.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.1" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.03%)</title><rect x="91.4" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.4" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (30 samples, 0.16%)</title><rect x="92.0" y="675.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="95.0" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (30 samples, 0.16%)</title><rect x="92.0" y="659.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.0" y="670.0"></text>
</g>
<g>
<title>__libc_recv (28 samples, 0.15%)</title><rect x="92.2" y="643.0" width="1.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="95.2" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.12%)</title><rect x="92.5" y="627.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="95.5" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.12%)</title><rect x="92.5" y="611.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="95.5" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (20 samples, 0.11%)</title><rect x="92.7" y="595.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="95.7" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (20 samples, 0.11%)</title><rect x="92.7" y="579.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="95.7" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (14 samples, 0.08%)</title><rect x="92.8" y="563.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="95.8" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (14 samples, 0.08%)</title><rect x="92.8" y="547.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="95.8" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (9 samples, 0.05%)</title><rect x="93.1" y="531.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="96.1" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.04%)</title><rect x="93.1" y="515.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="96.1" y="526.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.02%)</title><rect x="93.1" y="499.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="96.1" y="510.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.02%)</title><rect x="93.4" y="499.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="96.4" y="510.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.02%)</title><rect x="93.4" y="483.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="96.4" y="494.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25750] (155 samples, 0.85%)</title><rect x="94.1" y="739.0" width="10.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="97.1" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (9 samples, 0.05%)</title><rect x="94.1" y="723.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="97.1" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.03%)</title><rect x="94.3" y="707.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="97.3" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.03%)</title><rect x="94.3" y="691.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="97.3" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.03%)</title><rect x="94.3" y="675.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="97.3" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (4 samples, 0.02%)</title><rect x="94.3" y="659.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="97.3" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.04%)</title><rect x="94.7" y="723.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="97.7" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.04%)</title><rect x="94.7" y="707.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="97.7" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (7 samples, 0.04%)</title><rect x="94.7" y="691.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="97.7" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.04%)</title><rect x="94.7" y="675.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="97.7" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.02%)</title><rect x="94.9" y="659.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="97.9" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (18 samples, 0.10%)</title><rect x="95.2" y="723.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="98.2" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (17 samples, 0.09%)</title><rect x="95.3" y="707.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="98.3" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.02%)</title><rect x="95.3" y="691.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="98.3" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (13 samples, 0.07%)</title><rect x="95.5" y="691.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="98.5" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (12 samples, 0.07%)</title><rect x="95.5" y="675.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="98.5" y="686.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.02%)</title><rect x="95.6" y="659.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="98.6" y="670.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.02%)</title><rect x="95.9" y="659.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="98.9" y="670.0"></text>
</g>
<g>
<title>[not_walkable_Java] (6 samples, 0.03%)</title><rect x="96.4" y="723.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="99.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.06%)</title><rect x="96.7" y="723.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="99.7" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (8 samples, 0.04%)</title><rect x="96.8" y="707.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="99.8" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="96.9" y="691.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="99.9" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="96.9" y="675.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="99.9" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="96.9" y="659.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="99.9" y="670.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="97.0" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="100.0" y="654.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.02%)</title><rect x="97.0" y="627.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="100.0" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (100 samples, 0.55%)</title><rect x="97.6" y="723.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="100.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (44 samples, 0.24%)</title><rect x="97.6" y="707.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.6" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (42 samples, 0.23%)</title><rect x="97.8" y="691.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.8" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (37 samples, 0.20%)</title><rect x="97.8" y="675.0" width="2.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="100.8" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.14%)</title><rect x="98.6" y="659.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="101.6" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.14%)</title><rect x="98.6" y="643.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="101.6" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (22 samples, 0.12%)</title><rect x="98.8" y="627.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="101.8" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (22 samples, 0.12%)</title><rect x="98.8" y="611.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="101.8" y="622.0"></text>
</g>
<g>
<title>ep_poll (19 samples, 0.10%)</title><rect x="98.9" y="595.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="101.9" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (13 samples, 0.07%)</title><rect x="99.1" y="579.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="102.1" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.02%)</title><rect x="99.7" y="563.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="102.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (56 samples, 0.31%)</title><rect x="100.5" y="707.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="103.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (54 samples, 0.30%)</title><rect x="100.6" y="691.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (29 samples, 0.16%)</title><rect x="100.6" y="675.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="103.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (19 samples, 0.10%)</title><rect x="100.7" y="659.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.7" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (18 samples, 0.10%)</title><rect x="100.8" y="643.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.8" y="654.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (17 samples, 0.09%)</title><rect x="100.8" y="627.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="103.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (15 samples, 0.08%)</title><rect x="100.9" y="611.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="103.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (8 samples, 0.04%)</title><rect x="101.0" y="595.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.0" y="606.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (8 samples, 0.04%)</title><rect x="101.0" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (6 samples, 0.03%)</title><rect x="101.1" y="563.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="104.1" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (4 samples, 0.02%)</title><rect x="101.1" y="547.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (6 samples, 0.03%)</title><rect x="101.5" y="595.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (6 samples, 0.03%)</title><rect x="101.5" y="579.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.03%)</title><rect x="102.0" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.0" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (25 samples, 0.14%)</title><rect x="102.4" y="675.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.4" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (25 samples, 0.14%)</title><rect x="102.4" y="659.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.4" y="670.0"></text>
</g>
<g>
<title>__libc_recv (22 samples, 0.12%)</title><rect x="102.6" y="643.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="105.6" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.08%)</title><rect x="103.1" y="627.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="106.1" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.08%)</title><rect x="103.1" y="611.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="106.1" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (12 samples, 0.07%)</title><rect x="103.3" y="595.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="106.3" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (12 samples, 0.07%)</title><rect x="103.3" y="579.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="106.3" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (6 samples, 0.03%)</title><rect x="103.3" y="563.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="106.3" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (6 samples, 0.03%)</title><rect x="103.3" y="547.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="106.3" y="558.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25766] (115 samples, 0.63%)</title><rect x="104.1" y="739.0" width="7.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="107.1" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.02%)</title><rect x="104.6" y="723.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="107.6" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.02%)</title><rect x="104.6" y="707.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="107.6" y="718.0"></text>
</g>
<g>
<title>[not_walkable_Java] (4 samples, 0.02%)</title><rect x="104.8" y="723.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="107.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.04%)</title><rect x="105.1" y="723.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="108.1" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (5 samples, 0.03%)</title><rect x="105.1" y="707.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="108.1" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="105.1" y="691.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="108.1" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="105.1" y="675.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="108.1" y="686.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (92 samples, 0.50%)</title><rect x="105.5" y="723.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (25 samples, 0.14%)</title><rect x="105.6" y="707.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="108.6" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (25 samples, 0.14%)</title><rect x="105.6" y="691.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.6" y="702.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (24 samples, 0.13%)</title><rect x="105.7" y="675.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="108.7" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.09%)</title><rect x="106.1" y="659.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="109.1" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.09%)</title><rect x="106.1" y="643.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="109.1" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (16 samples, 0.09%)</title><rect x="106.2" y="627.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="109.2" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (16 samples, 0.09%)</title><rect x="106.2" y="611.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="109.2" y="622.0"></text>
</g>
<g>
<title>ep_poll (14 samples, 0.08%)</title><rect x="106.2" y="595.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="109.2" y="606.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (10 samples, 0.05%)</title><rect x="106.4" y="579.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="109.4" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.03%)</title><rect x="106.6" y="563.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="109.6" y="574.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (4 samples, 0.02%)</title><rect x="106.8" y="547.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="109.8" y="558.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.02%)</title><rect x="106.8" y="531.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="109.8" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (66 samples, 0.36%)</title><rect x="107.2" y="707.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="110.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (66 samples, 0.36%)</title><rect x="107.2" y="691.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="110.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (51 samples, 0.28%)</title><rect x="107.2" y="675.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="110.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (44 samples, 0.24%)</title><rect x="107.3" y="659.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="110.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (44 samples, 0.24%)</title><rect x="107.3" y="643.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="110.3" y="654.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (43 samples, 0.24%)</title><rect x="107.3" y="627.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (41 samples, 0.22%)</title><rect x="107.5" y="611.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="110.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (25 samples, 0.14%)</title><rect x="107.5" y="595.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (25 samples, 0.14%)</title><rect x="107.5" y="579.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (25 samples, 0.14%)</title><rect x="107.5" y="563.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (20 samples, 0.11%)</title><rect x="107.6" y="547.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (19 samples, 0.10%)</title><rect x="107.7" y="531.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 0.10%)</title><rect x="107.7" y="515.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="110.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 0.10%)</title><rect x="107.7" y="499.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.10%)</title><rect x="107.7" y="483.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.10%)</title><rect x="107.7" y="467.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.7" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 0.09%)</title><rect x="107.9" y="451.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="110.9" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.08%)</title><rect x="108.0" y="435.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="111.0" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.08%)</title><rect x="108.0" y="419.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="111.0" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.08%)</title><rect x="108.0" y="403.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="111.0" y="414.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.08%)</title><rect x="108.0" y="387.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="111.0" y="398.0"></text>
</g>
<g>
<title>futex_wake (14 samples, 0.08%)</title><rect x="108.0" y="371.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="111.0" y="382.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.07%)</title><rect x="108.0" y="355.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="111.0" y="366.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.07%)</title><rect x="108.0" y="339.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="111.0" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.07%)</title><rect x="108.0" y="323.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="111.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (6 samples, 0.03%)</title><rect x="109.1" y="595.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.1" y="606.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (6 samples, 0.03%)</title><rect x="109.1" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="112.1" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (4 samples, 0.02%)</title><rect x="109.1" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.1" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (4 samples, 0.02%)</title><rect x="109.1" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (9 samples, 0.05%)</title><rect x="109.5" y="595.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (9 samples, 0.05%)</title><rect x="109.5" y="579.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.5" y="590.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (6 samples, 0.03%)</title><rect x="109.6" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.6" y="574.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (4 samples, 0.02%)</title><rect x="109.7" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.7" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (15 samples, 0.08%)</title><rect x="110.5" y="675.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.5" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (15 samples, 0.08%)</title><rect x="110.5" y="659.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.5" y="670.0"></text>
</g>
<g>
<title>__libc_recv (13 samples, 0.07%)</title><rect x="110.6" y="643.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="113.6" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="111.0" y="627.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="114.0" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="111.0" y="611.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="114.0" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (7 samples, 0.04%)</title><rect x="111.0" y="595.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="114.0" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (7 samples, 0.04%)</title><rect x="111.0" y="579.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="114.0" y="590.0"></text>
</g>
<g>
<title>inet_recvmsg (5 samples, 0.03%)</title><rect x="111.1" y="563.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="114.1" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.03%)</title><rect x="111.1" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="114.1" y="558.0"></text>
</g>
<g>
<title>[proxy-worker-0 tid=25855] (438 samples, 2.40%)</title><rect x="111.5" y="739.0" width="28.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="114.5" y="750.0">[p..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (17 samples, 0.09%)</title><rect x="111.5" y="723.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="114.5" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (12 samples, 0.07%)</title><rect x="111.9" y="707.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="114.9" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (12 samples, 0.07%)</title><rect x="111.9" y="691.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="114.9" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (11 samples, 0.06%)</title><rect x="111.9" y="675.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="114.9" y="686.0"></text>
</g>
<g>
<title>__memset_avx2_erms (6 samples, 0.03%)</title><rect x="112.2" y="659.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="115.2" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.run (416 samples, 2.28%)</title><rect x="112.9" y="723.0" width="26.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="115.9" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (416 samples, 2.28%)</title><rect x="112.9" y="707.0" width="26.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.9" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (416 samples, 2.28%)</title><rect x="112.9" y="691.0" width="26.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="115.9" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (354 samples, 1.94%)</title><rect x="112.9" y="675.0" width="22.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.9" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (343 samples, 1.88%)</title><rect x="112.9" y="659.0" width="22.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.9" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (343 samples, 1.88%)</title><rect x="112.9" y="643.0" width="22.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="115.9" y="654.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (342 samples, 1.87%)</title><rect x="113.0" y="627.0" width="22.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.0" y="638.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (342 samples, 1.87%)</title><rect x="113.0" y="611.0" width="22.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.0" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (342 samples, 1.87%)</title><rect x="113.0" y="595.0" width="22.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.0" y="606.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (339 samples, 1.86%)</title><rect x="113.0" y="579.0" width="21.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.0" y="590.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (338 samples, 1.85%)</title><rect x="113.1" y="563.0" width="21.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.1" y="574.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.03%)</title><rect x="113.3" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.03%)</title><rect x="113.3" y="531.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.03%)</title><rect x="113.3" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.3" y="526.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.03%)</title><rect x="113.3" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.3" y="510.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.03%)</title><rect x="113.3" y="483.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.3" y="494.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (5 samples, 0.03%)</title><rect x="113.3" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.3" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (52 samples, 0.28%)</title><rect x="113.7" y="547.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="116.7" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (52 samples, 0.28%)</title><rect x="113.7" y="531.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.7" y="542.0"></text>
</g>
<g>
<title>__libc_recv (48 samples, 0.26%)</title><rect x="113.9" y="515.0" width="3.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="116.9" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 0.25%)</title><rect x="114.0" y="499.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="117.0" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (46 samples, 0.25%)</title><rect x="114.0" y="483.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="117.0" y="494.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (42 samples, 0.23%)</title><rect x="114.2" y="467.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="117.2" y="478.0"></text>
</g>
<g>
<title>__sys_recvfrom (42 samples, 0.23%)</title><rect x="114.2" y="451.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="117.2" y="462.0"></text>
</g>
<g>
<title>inet_recvmsg (38 samples, 0.21%)</title><rect x="114.2" y="435.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="117.2" y="446.0"></text>
</g>
<g>
<title>tcp_recvmsg (38 samples, 0.21%)</title><rect x="114.2" y="419.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="117.2" y="430.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.02%)</title><rect x="114.7" y="403.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="117.7" y="414.0"></text>
</g>
<g>
<title>sk_wait_data (5 samples, 0.03%)</title><rect x="115.1" y="403.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="118.1" y="414.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.04%)</title><rect x="115.4" y="403.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="118.4" y="414.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.04%)</title><rect x="115.4" y="387.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="118.4" y="398.0"></text>
</g>
<g>
<title>_copy_to_iter (8 samples, 0.04%)</title><rect x="115.4" y="371.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="118.4" y="382.0"></text>
</g>
<g>
<title>copyout (7 samples, 0.04%)</title><rect x="115.5" y="355.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="118.5" y="366.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (7 samples, 0.04%)</title><rect x="115.5" y="339.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="118.5" y="350.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.02%)</title><rect x="115.9" y="403.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="118.9" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (8 samples, 0.04%)</title><rect x="116.2" y="403.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="119.2" y="414.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.02%)</title><rect x="116.4" y="387.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="119.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (11 samples, 0.06%)</title><rect x="117.0" y="547.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="120.0" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (7 samples, 0.04%)</title><rect x="117.0" y="531.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="120.0" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.03%)</title><rect x="117.2" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="120.2" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.03%)</title><rect x="117.2" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (11 samples, 0.06%)</title><rect x="117.7" y="547.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.7" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.03%)</title><rect x="117.7" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="120.7" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.02%)</title><rect x="117.9" y="515.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.9" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.03%)</title><rect x="118.1" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.1" y="542.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.03%)</title><rect x="118.1" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="121.1" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (39 samples, 0.21%)</title><rect x="118.6" y="547.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.6" y="558.0"></text>
</g>
<g>
<title>setsockopt (37 samples, 0.20%)</title><rect x="118.8" y="531.0" width="2.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="121.8" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.15%)</title><rect x="119.4" y="515.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="122.4" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.15%)</title><rect x="119.4" y="499.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="122.4" y="510.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (16 samples, 0.09%)</title><rect x="120.1" y="483.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="123.1" y="494.0"></text>
</g>
<g>
<title>__sys_setsockopt (16 samples, 0.09%)</title><rect x="120.1" y="467.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="123.1" y="478.0"></text>
</g>
<g>
<title>sock_setsockopt (9 samples, 0.05%)</title><rect x="120.3" y="451.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="123.3" y="462.0"></text>
</g>
<g>
<title>sock_set_timeout (4 samples, 0.02%)</title><rect x="120.6" y="435.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="123.6" y="446.0"></text>
</g>
<g>
<title>_copy_from_user (4 samples, 0.02%)</title><rect x="120.6" y="419.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="123.6" y="430.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.02%)</title><rect x="120.9" y="451.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="123.9" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (212 samples, 1.16%)</title><rect x="121.2" y="547.0" width="13.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.2" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (204 samples, 1.12%)</title><rect x="121.4" y="531.0" width="13.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="124.4" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (191 samples, 1.05%)</title><rect x="122.3" y="515.0" width="12.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="125.3" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (191 samples, 1.05%)</title><rect x="122.3" y="499.0" width="12.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="125.3" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (187 samples, 1.02%)</title><rect x="122.5" y="483.0" width="12.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="125.5" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (186 samples, 1.02%)</title><rect x="122.6" y="467.0" width="12.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="125.6" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (182 samples, 1.00%)</title><rect x="122.6" y="451.0" width="11.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="125.6" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (181 samples, 0.99%)</title><rect x="122.7" y="435.0" width="11.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="125.7" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (180 samples, 0.99%)</title><rect x="122.8" y="419.0" width="11.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="125.8" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (164 samples, 0.90%)</title><rect x="123.0" y="403.0" width="10.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="126.0" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (164 samples, 0.90%)</title><rect x="123.0" y="387.0" width="10.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="126.0" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (162 samples, 0.89%)</title><rect x="123.0" y="371.0" width="10.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="126.0" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (152 samples, 0.83%)</title><rect x="123.2" y="355.0" width="9.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="126.2" y="366.0"></text>
</g>
<g>
<title>__sk_dst_check (5 samples, 0.03%)</title><rect x="123.2" y="339.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="126.2" y="350.0"></text>
</g>
<g>
<title>ip_local_out (29 samples, 0.16%)</title><rect x="123.5" y="339.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="126.5" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (29 samples, 0.16%)</title><rect x="123.5" y="323.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="126.5" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (28 samples, 0.15%)</title><rect x="123.6" y="307.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="126.6" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.03%)</title><rect x="123.6" y="291.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="126.6" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (5 samples, 0.03%)</title><rect x="124.1" y="291.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="127.1" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="124.1" y="275.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="127.1" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (8 samples, 0.04%)</title><rect x="124.8" y="291.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="127.8" y="302.0"></text>
</g>
<g>
<title>ip_output (118 samples, 0.65%)</title><rect x="125.4" y="339.0" width="7.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="128.4" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (110 samples, 0.60%)</title><rect x="125.6" y="323.0" width="7.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="128.6" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (12 samples, 0.07%)</title><rect x="125.9" y="307.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="128.9" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.05%)</title><rect x="126.0" y="291.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="129.0" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (10 samples, 0.05%)</title><rect x="126.0" y="275.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="129.0" y="286.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.02%)</title><rect x="126.0" y="259.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="129.0" y="270.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.02%)</title><rect x="126.3" y="259.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="129.3" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.02%)</title><rect x="126.3" y="243.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="129.3" y="254.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (93 samples, 0.51%)</title><rect x="126.7" y="307.0" width="6.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="129.7" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (93 samples, 0.51%)</title><rect x="126.7" y="291.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="129.7" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (91 samples, 0.50%)</title><rect x="126.8" y="275.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="129.8" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (91 samples, 0.50%)</title><rect x="126.8" y="259.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="129.8" y="270.0"></text>
</g>
<g>
<title>net_rx_action (90 samples, 0.49%)</title><rect x="126.8" y="243.0" width="5.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="129.8" y="254.0"></text>
</g>
<g>
<title>process_backlog (87 samples, 0.48%)</title><rect x="127.0" y="227.0" width="5.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="130.0" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (85 samples, 0.47%)</title><rect x="127.2" y="211.0" width="5.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="130.2" y="222.0"></text>
</g>
<g>
<title>ip_rcv (82 samples, 0.45%)</title><rect x="127.4" y="195.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="130.4" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (63 samples, 0.34%)</title><rect x="127.4" y="179.0" width="4.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="130.4" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (52 samples, 0.28%)</title><rect x="127.6" y="163.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="130.6" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (52 samples, 0.28%)</title><rect x="127.6" y="147.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="130.6" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (52 samples, 0.28%)</title><rect x="127.6" y="131.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="130.6" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.02%)</title><rect x="127.6" y="115.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="130.6" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (43 samples, 0.24%)</title><rect x="128.1" y="115.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="131.1" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (43 samples, 0.24%)</title><rect x="128.1" y="99.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="131.1" y="110.0"></text>
</g>
<g>
<title>tcp_ack (14 samples, 0.08%)</title><rect x="128.2" y="83.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="131.2" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (23 samples, 0.13%)</title><rect x="129.2" y="83.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="132.2" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (22 samples, 0.12%)</title><rect x="129.3" y="67.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="132.3" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (22 samples, 0.12%)</title><rect x="129.3" y="51.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="132.3" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (22 samples, 0.12%)</title><rect x="129.3" y="35.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="132.3" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.04%)</title><rect x="130.9" y="163.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="133.9" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.03%)</title><rect x="130.9" y="147.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="133.9" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.09%)</title><rect x="131.6" y="179.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="134.6" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (14 samples, 0.08%)</title><rect x="131.7" y="163.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="134.7" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="132.7" y="323.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="135.7" y="334.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.04%)</title><rect x="133.6" y="403.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="136.6" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.03%)</title><rect x="133.6" y="387.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="136.6" y="398.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.02%)</title><rect x="134.1" y="403.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="137.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (11 samples, 0.06%)</title><rect x="135.0" y="659.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="138.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (11 samples, 0.06%)</title><rect x="135.0" y="643.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (11 samples, 0.06%)</title><rect x="135.0" y="627.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.0" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (10 samples, 0.05%)</title><rect x="135.1" y="611.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (10 samples, 0.05%)</title><rect x="135.1" y="595.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="138.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 0.03%)</title><rect x="135.1" y="579.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="138.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.03%)</title><rect x="135.1" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.03%)</title><rect x="135.1" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.03%)</title><rect x="135.1" y="531.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.03%)</title><rect x="135.1" y="515.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.03%)</title><rect x="135.1" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.1" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.03%)</title><rect x="135.1" y="483.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="138.1" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="135.2" y="467.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="138.2" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="135.2" y="451.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="138.2" y="462.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="135.2" y="435.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="138.2" y="446.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="135.2" y="419.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="138.2" y="430.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="135.2" y="403.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="138.2" y="414.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.02%)</title><rect x="135.2" y="387.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="138.2" y="398.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="135.2" y="371.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="138.2" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.02%)</title><rect x="135.2" y="355.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="138.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (60 samples, 0.33%)</title><rect x="135.9" y="675.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (60 samples, 0.33%)</title><rect x="135.9" y="659.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="138.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (35 samples, 0.19%)</title><rect x="135.9" y="643.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="138.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (30 samples, 0.16%)</title><rect x="136.2" y="627.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="139.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (30 samples, 0.16%)</title><rect x="136.2" y="611.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.2" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (20 samples, 0.11%)</title><rect x="136.2" y="595.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="139.2" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (16 samples, 0.09%)</title><rect x="136.3" y="579.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="139.3" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.05%)</title><rect x="136.7" y="563.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="139.7" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.05%)</title><rect x="136.7" y="547.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="139.7" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="137.0" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="140.0" y="542.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="137.1" y="515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="140.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.05%)</title><rect x="137.5" y="595.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="140.5" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.03%)</title><rect x="137.7" y="579.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="140.7" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="137.8" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="140.8" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="137.8" y="547.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="140.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (5 samples, 0.03%)</title><rect x="138.1" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="141.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (5 samples, 0.03%)</title><rect x="138.1" y="627.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.02%)</title><rect x="138.2" y="611.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="141.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.02%)</title><rect x="138.2" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="141.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (20 samples, 0.11%)</title><rect x="138.5" y="643.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="141.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (20 samples, 0.11%)</title><rect x="138.5" y="627.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="141.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (20 samples, 0.11%)</title><rect x="138.5" y="611.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.11%)</title><rect x="138.5" y="595.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="141.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.11%)</title><rect x="138.5" y="579.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.5" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (18 samples, 0.10%)</title><rect x="138.6" y="563.0" width="1.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="141.6" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="139.1" y="547.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="142.1" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="139.1" y="531.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="142.1" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.06%)</title><rect x="139.1" y="515.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="142.1" y="526.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.06%)</title><rect x="139.1" y="499.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="142.1" y="510.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.06%)</title><rect x="139.1" y="483.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="142.1" y="494.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.05%)</title><rect x="139.1" y="467.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="142.1" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.05%)</title><rect x="139.1" y="451.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="142.1" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.05%)</title><rect x="139.1" y="435.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="142.1" y="446.0"></text>
</g>
<g>
<title>[proxy-worker-1 tid=25856] (439 samples, 2.40%)</title><rect x="139.8" y="739.0" width="28.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="142.8" y="750.0">[p..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (24 samples, 0.13%)</title><rect x="139.8" y="723.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="142.8" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (21 samples, 0.11%)</title><rect x="140.0" y="707.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="143.0" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (20 samples, 0.11%)</title><rect x="140.1" y="691.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="143.1" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (19 samples, 0.10%)</title><rect x="140.1" y="675.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="143.1" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (7 samples, 0.04%)</title><rect x="140.3" y="659.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="143.3" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (5 samples, 0.03%)</title><rect x="140.3" y="643.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="143.3" y="654.0"></text>
</g>
<g>
<title>__memset_avx2_erms (8 samples, 0.04%)</title><rect x="140.8" y="659.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="143.8" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.run (407 samples, 2.23%)</title><rect x="141.8" y="723.0" width="26.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.8" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (407 samples, 2.23%)</title><rect x="141.8" y="707.0" width="26.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="144.8" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (407 samples, 2.23%)</title><rect x="141.8" y="691.0" width="26.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="144.8" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (355 samples, 1.94%)</title><rect x="141.8" y="675.0" width="22.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="144.8" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (339 samples, 1.86%)</title><rect x="141.8" y="659.0" width="21.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="144.8" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (339 samples, 1.86%)</title><rect x="141.8" y="643.0" width="21.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.8" y="654.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (338 samples, 1.85%)</title><rect x="141.9" y="627.0" width="21.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="144.9" y="638.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (338 samples, 1.85%)</title><rect x="141.9" y="611.0" width="21.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="144.9" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (338 samples, 1.85%)</title><rect x="141.9" y="595.0" width="21.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.9" y="606.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (332 samples, 1.82%)</title><rect x="142.2" y="579.0" width="21.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.2" y="590.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (332 samples, 1.82%)</title><rect x="142.2" y="563.0" width="21.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="145.2" y="574.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (54 samples, 0.30%)</title><rect x="142.3" y="547.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.3" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (54 samples, 0.30%)</title><rect x="142.3" y="531.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="142.3" y="515.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="145.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="142.3" y="499.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="145.3" y="510.0"></text>
</g>
<g>
<title>__libc_recv (48 samples, 0.26%)</title><rect x="142.6" y="515.0" width="3.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="145.6" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 0.21%)</title><rect x="143.2" y="499.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="146.2" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (39 samples, 0.21%)</title><rect x="143.2" y="483.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="146.2" y="494.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (39 samples, 0.21%)</title><rect x="143.2" y="467.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="146.2" y="478.0"></text>
</g>
<g>
<title>__sys_recvfrom (38 samples, 0.21%)</title><rect x="143.2" y="451.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="146.2" y="462.0"></text>
</g>
<g>
<title>inet_recvmsg (35 samples, 0.19%)</title><rect x="143.3" y="435.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="146.3" y="446.0"></text>
</g>
<g>
<title>tcp_recvmsg (34 samples, 0.19%)</title><rect x="143.4" y="419.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="146.4" y="430.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.03%)</title><rect x="143.7" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="146.7" y="414.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.03%)</title><rect x="143.7" y="387.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="146.7" y="398.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.03%)</title><rect x="143.7" y="371.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="146.7" y="382.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.02%)</title><rect x="143.8" y="355.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="146.8" y="366.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.02%)</title><rect x="144.2" y="403.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="147.2" y="414.0"></text>
</g>
<g>
<title>sk_wait_data (8 samples, 0.04%)</title><rect x="144.6" y="403.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="147.6" y="414.0"></text>
</g>
<g>
<title>wait_woken (4 samples, 0.02%)</title><rect x="144.9" y="387.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="147.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (11 samples, 0.06%)</title><rect x="145.8" y="547.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="148.8" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (6 samples, 0.03%)</title><rect x="146.0" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (13 samples, 0.07%)</title><rect x="146.5" y="547.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="149.5" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (10 samples, 0.05%)</title><rect x="146.5" y="531.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.5" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.02%)</title><rect x="146.9" y="515.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.9" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.02%)</title><rect x="146.9" y="499.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.9" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (37 samples, 0.20%)</title><rect x="147.3" y="547.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="150.3" y="558.0"></text>
</g>
<g>
<title>setsockopt (35 samples, 0.19%)</title><rect x="147.4" y="531.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="150.4" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.13%)</title><rect x="148.2" y="515.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="151.2" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.13%)</title><rect x="148.2" y="499.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="151.2" y="510.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (18 samples, 0.10%)</title><rect x="148.5" y="483.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="151.5" y="494.0"></text>
</g>
<g>
<title>__sys_setsockopt (12 samples, 0.07%)</title><rect x="148.9" y="467.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="151.9" y="478.0"></text>
</g>
<g>
<title>sock_setsockopt (5 samples, 0.03%)</title><rect x="149.1" y="451.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="152.1" y="462.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.02%)</title><rect x="149.5" y="451.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="152.5" y="462.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.02%)</title><rect x="149.5" y="435.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="152.5" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (208 samples, 1.14%)</title><rect x="149.7" y="547.0" width="13.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="152.7" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (204 samples, 1.12%)</title><rect x="149.8" y="531.0" width="13.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="152.8" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (190 samples, 1.04%)</title><rect x="150.7" y="515.0" width="12.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="153.7" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (190 samples, 1.04%)</title><rect x="150.7" y="499.0" width="12.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="153.7" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (188 samples, 1.03%)</title><rect x="150.8" y="483.0" width="12.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="153.8" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (188 samples, 1.03%)</title><rect x="150.8" y="467.0" width="12.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="153.8" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (187 samples, 1.02%)</title><rect x="150.8" y="451.0" width="12.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="153.8" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (185 samples, 1.01%)</title><rect x="150.9" y="435.0" width="12.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="153.9" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (184 samples, 1.01%)</title><rect x="151.0" y="419.0" width="11.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="154.0" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (163 samples, 0.89%)</title><rect x="151.1" y="403.0" width="10.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="154.1" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (163 samples, 0.89%)</title><rect x="151.1" y="387.0" width="10.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="154.1" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (159 samples, 0.87%)</title><rect x="151.1" y="371.0" width="10.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="154.1" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (150 samples, 0.82%)</title><rect x="151.3" y="355.0" width="9.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="154.3" y="366.0"></text>
</g>
<g>
<title>ip_local_out (25 samples, 0.14%)</title><rect x="151.6" y="339.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="154.6" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (25 samples, 0.14%)</title><rect x="151.6" y="323.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="154.6" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (24 samples, 0.13%)</title><rect x="151.6" y="307.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="154.6" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (10 samples, 0.05%)</title><rect x="151.6" y="291.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="154.6" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (9 samples, 0.05%)</title><rect x="152.6" y="291.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="155.6" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (4 samples, 0.02%)</title><rect x="152.9" y="275.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="155.9" y="286.0"></text>
</g>
<g>
<title>ip_output (120 samples, 0.66%)</title><rect x="153.2" y="339.0" width="7.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="156.2" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (115 samples, 0.63%)</title><rect x="153.2" y="323.0" width="7.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="156.2" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (13 samples, 0.07%)</title><rect x="153.3" y="307.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="156.3" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.04%)</title><rect x="153.5" y="291.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="156.5" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.04%)</title><rect x="153.5" y="275.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="156.5" y="286.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.03%)</title><rect x="153.5" y="259.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="156.5" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.03%)</title><rect x="153.5" y="243.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="156.5" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.02%)</title><rect x="153.5" y="227.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="156.5" y="238.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (101 samples, 0.55%)</title><rect x="154.1" y="307.0" width="6.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="157.1" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (101 samples, 0.55%)</title><rect x="154.1" y="291.0" width="6.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="157.1" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (98 samples, 0.54%)</title><rect x="154.3" y="275.0" width="6.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="157.3" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (98 samples, 0.54%)</title><rect x="154.3" y="259.0" width="6.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="157.3" y="270.0"></text>
</g>
<g>
<title>net_rx_action (95 samples, 0.52%)</title><rect x="154.5" y="243.0" width="6.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="157.5" y="254.0"></text>
</g>
<g>
<title>process_backlog (94 samples, 0.51%)</title><rect x="154.6" y="227.0" width="6.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="157.6" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (93 samples, 0.51%)</title><rect x="154.6" y="211.0" width="6.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="157.6" y="222.0"></text>
</g>
<g>
<title>ip_rcv (90 samples, 0.49%)</title><rect x="154.8" y="195.0" width="5.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="157.8" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (70 samples, 0.38%)</title><rect x="154.9" y="179.0" width="4.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="157.9" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (55 samples, 0.30%)</title><rect x="155.1" y="163.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="158.1" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (55 samples, 0.30%)</title><rect x="155.1" y="147.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="158.1" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (53 samples, 0.29%)</title><rect x="155.2" y="131.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="158.2" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (47 samples, 0.26%)</title><rect x="155.6" y="115.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="158.6" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (46 samples, 0.25%)</title><rect x="155.7" y="99.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="158.7" y="110.0"></text>
</g>
<g>
<title>tcp_ack (14 samples, 0.08%)</title><rect x="155.7" y="83.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="158.7" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.03%)</title><rect x="155.8" y="67.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="158.8" y="78.0"></text>
</g>
<g>
<title>tcp_data_queue (28 samples, 0.15%)</title><rect x="156.6" y="83.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="159.6" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (25 samples, 0.14%)</title><rect x="156.7" y="67.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="159.7" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (25 samples, 0.14%)</title><rect x="156.7" y="51.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="159.7" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (25 samples, 0.14%)</title><rect x="156.7" y="35.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="159.7" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.07%)</title><rect x="158.6" y="163.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="161.6" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (12 samples, 0.07%)</title><rect x="158.6" y="147.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="161.6" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (18 samples, 0.10%)</title><rect x="159.5" y="179.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="162.5" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (12 samples, 0.07%)</title><rect x="159.7" y="163.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="162.7" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="160.7" y="323.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="163.7" y="334.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (10 samples, 0.05%)</title><rect x="161.9" y="403.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="164.9" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (10 samples, 0.05%)</title><rect x="161.9" y="387.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="164.9" y="398.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (5 samples, 0.03%)</title><rect x="163.1" y="547.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.1" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (5 samples, 0.03%)</title><rect x="163.1" y="531.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.1" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (5 samples, 0.03%)</title><rect x="163.1" y="515.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (15 samples, 0.08%)</title><rect x="163.7" y="659.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (15 samples, 0.08%)</title><rect x="163.7" y="643.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (15 samples, 0.08%)</title><rect x="163.7" y="627.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.7" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (14 samples, 0.08%)</title><rect x="163.8" y="611.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (14 samples, 0.08%)</title><rect x="163.8" y="595.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (11 samples, 0.06%)</title><rect x="163.8" y="579.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.06%)</title><rect x="163.8" y="563.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.06%)</title><rect x="163.8" y="547.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="166.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.06%)</title><rect x="163.8" y="531.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.06%)</title><rect x="163.8" y="515.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="166.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.06%)</title><rect x="163.8" y="499.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="166.8" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.06%)</title><rect x="163.8" y="483.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="166.8" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.05%)</title><rect x="163.9" y="467.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="166.9" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.05%)</title><rect x="163.9" y="451.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="166.9" y="462.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.05%)</title><rect x="163.9" y="435.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="166.9" y="446.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.05%)</title><rect x="163.9" y="419.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="166.9" y="430.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.05%)</title><rect x="163.9" y="403.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="166.9" y="414.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.04%)</title><rect x="164.0" y="387.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="167.0" y="398.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.04%)</title><rect x="164.0" y="371.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="167.0" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.04%)</title><rect x="164.0" y="355.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="167.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (51 samples, 0.28%)</title><rect x="164.8" y="675.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (50 samples, 0.27%)</title><rect x="164.8" y="659.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="167.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (39 samples, 0.21%)</title><rect x="164.8" y="643.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="167.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (37 samples, 0.20%)</title><rect x="165.0" y="627.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="168.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (37 samples, 0.20%)</title><rect x="165.0" y="611.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="168.0" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (27 samples, 0.15%)</title><rect x="165.0" y="595.0" width="1.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="168.0" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (25 samples, 0.14%)</title><rect x="165.1" y="579.0" width="1.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="168.1" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.11%)</title><rect x="165.4" y="563.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="168.4" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.11%)</title><rect x="165.4" y="547.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="168.4" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.07%)</title><rect x="165.9" y="531.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="168.9" y="542.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.05%)</title><rect x="166.1" y="515.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="169.1" y="526.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.05%)</title><rect x="166.1" y="499.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="169.1" y="510.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.05%)</title><rect x="166.7" y="595.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="169.7" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.03%)</title><rect x="166.8" y="579.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="169.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="166.8" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="169.8" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="166.8" y="547.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="169.8" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="166.8" y="531.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="169.8" y="542.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="166.8" y="515.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="169.8" y="526.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.03%)</title><rect x="166.8" y="499.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="169.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.05%)</title><rect x="167.4" y="643.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.05%)</title><rect x="167.4" y="627.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="170.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.05%)</title><rect x="167.4" y="611.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="170.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.05%)</title><rect x="167.4" y="595.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.05%)</title><rect x="167.4" y="579.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="170.4" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.05%)</title><rect x="167.4" y="563.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="170.4" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="167.6" y="547.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="170.6" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="167.6" y="531.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="170.6" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.04%)</title><rect x="167.6" y="515.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="170.6" y="526.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.04%)</title><rect x="167.6" y="499.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="170.6" y="510.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.04%)</title><rect x="167.6" y="483.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="170.6" y="494.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.04%)</title><rect x="167.6" y="467.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="170.6" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.04%)</title><rect x="167.6" y="451.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="170.6" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.04%)</title><rect x="167.6" y="435.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="170.6" y="446.0"></text>
</g>
<g>
<title>[proxy-worker-2 tid=25860] (439 samples, 2.40%)</title><rect x="168.2" y="739.0" width="28.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="171.2" y="750.0">[p..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (12 samples, 0.07%)</title><rect x="168.2" y="723.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="171.2" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (10 samples, 0.05%)</title><rect x="168.3" y="707.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="171.3" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (10 samples, 0.05%)</title><rect x="168.3" y="691.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="171.3" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (9 samples, 0.05%)</title><rect x="168.4" y="675.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="171.4" y="686.0"></text>
</g>
<g>
<title>__memset_avx2_erms (7 samples, 0.04%)</title><rect x="168.5" y="659.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="171.5" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.run (424 samples, 2.32%)</title><rect x="169.1" y="723.0" width="27.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="172.1" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (424 samples, 2.32%)</title><rect x="169.1" y="707.0" width="27.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.1" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (424 samples, 2.32%)</title><rect x="169.1" y="691.0" width="27.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.1" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (363 samples, 1.99%)</title><rect x="169.1" y="675.0" width="23.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.1" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (345 samples, 1.89%)</title><rect x="169.2" y="659.0" width="22.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.2" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (345 samples, 1.89%)</title><rect x="169.2" y="643.0" width="22.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.2" y="654.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (345 samples, 1.89%)</title><rect x="169.2" y="627.0" width="22.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.2" y="638.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (345 samples, 1.89%)</title><rect x="169.2" y="611.0" width="22.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.2" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (345 samples, 1.89%)</title><rect x="169.2" y="595.0" width="22.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.2" y="606.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (342 samples, 1.87%)</title><rect x="169.2" y="579.0" width="22.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="172.2" y="590.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (342 samples, 1.87%)</title><rect x="169.2" y="563.0" width="22.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="172.2" y="574.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (47 samples, 0.26%)</title><rect x="169.3" y="547.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.3" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (47 samples, 0.26%)</title><rect x="169.3" y="531.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.03%)</title><rect x="169.6" y="515.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="172.6" y="526.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.03%)</title><rect x="169.6" y="499.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="172.6" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.02%)</title><rect x="169.6" y="483.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="172.6" y="494.0"></text>
</g>
<g>
<title>__libc_recv (35 samples, 0.19%)</title><rect x="170.0" y="515.0" width="2.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="173.0" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.17%)</title><rect x="170.2" y="499.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="173.2" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.17%)</title><rect x="170.2" y="483.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="173.2" y="494.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (28 samples, 0.15%)</title><rect x="170.4" y="467.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="173.4" y="478.0"></text>
</g>
<g>
<title>__sys_recvfrom (28 samples, 0.15%)</title><rect x="170.4" y="451.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="173.4" y="462.0"></text>
</g>
<g>
<title>inet_recvmsg (26 samples, 0.14%)</title><rect x="170.5" y="435.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="173.5" y="446.0"></text>
</g>
<g>
<title>tcp_recvmsg (25 samples, 0.14%)</title><rect x="170.6" y="419.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="173.6" y="430.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.03%)</title><rect x="170.8" y="403.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="173.8" y="414.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.03%)</title><rect x="170.8" y="387.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="173.8" y="398.0"></text>
</g>
<g>
<title>skb_release_head_state (6 samples, 0.03%)</title><rect x="170.8" y="371.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="173.8" y="382.0"></text>
</g>
<g>
<title>sock_rfree (6 samples, 0.03%)</title><rect x="170.8" y="355.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="173.8" y="366.0"></text>
</g>
<g>
<title>sk_wait_data (6 samples, 0.03%)</title><rect x="171.3" y="403.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="174.3" y="414.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.02%)</title><rect x="171.7" y="403.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="174.7" y="414.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.02%)</title><rect x="171.7" y="387.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="174.7" y="398.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.02%)</title><rect x="171.7" y="371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="174.7" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (18 samples, 0.10%)</title><rect x="172.4" y="547.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.4" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.02%)</title><rect x="172.4" y="531.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="175.4" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.02%)</title><rect x="172.4" y="515.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="175.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (7 samples, 0.04%)</title><rect x="172.8" y="531.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="175.8" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.04%)</title><rect x="172.8" y="515.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.8" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.04%)</title><rect x="172.8" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="175.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (11 samples, 0.06%)</title><rect x="173.5" y="547.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.5" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.04%)</title><rect x="173.7" y="531.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="176.7" y="542.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (4 samples, 0.02%)</title><rect x="173.7" y="515.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.7" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (39 samples, 0.21%)</title><rect x="174.4" y="547.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="177.4" y="558.0"></text>
</g>
<g>
<title>setsockopt (37 samples, 0.20%)</title><rect x="174.6" y="531.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="177.6" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.11%)</title><rect x="175.6" y="515.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="178.6" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.11%)</title><rect x="175.6" y="499.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="178.6" y="510.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (14 samples, 0.08%)</title><rect x="176.1" y="483.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="179.1" y="494.0"></text>
</g>
<g>
<title>__sys_setsockopt (12 samples, 0.07%)</title><rect x="176.2" y="467.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="179.2" y="478.0"></text>
</g>
<g>
<title>sock_setsockopt (6 samples, 0.03%)</title><rect x="176.3" y="451.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="179.3" y="462.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.02%)</title><rect x="176.7" y="451.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="179.7" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (219 samples, 1.20%)</title><rect x="177.0" y="547.0" width="14.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.0" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (213 samples, 1.17%)</title><rect x="177.0" y="531.0" width="13.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="180.0" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (201 samples, 1.10%)</title><rect x="177.8" y="515.0" width="13.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="180.8" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (201 samples, 1.10%)</title><rect x="177.8" y="499.0" width="13.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="180.8" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (197 samples, 1.08%)</title><rect x="178.1" y="483.0" width="12.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="181.1" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (197 samples, 1.08%)</title><rect x="178.1" y="467.0" width="12.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="181.1" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (194 samples, 1.06%)</title><rect x="178.1" y="451.0" width="12.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="181.1" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (193 samples, 1.06%)</title><rect x="178.1" y="435.0" width="12.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="181.1" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (191 samples, 1.05%)</title><rect x="178.3" y="419.0" width="12.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="181.3" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (181 samples, 0.99%)</title><rect x="178.3" y="403.0" width="11.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="181.3" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (181 samples, 0.99%)</title><rect x="178.3" y="387.0" width="11.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="181.3" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (179 samples, 0.98%)</title><rect x="178.3" y="371.0" width="11.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="181.3" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (175 samples, 0.96%)</title><rect x="178.5" y="355.0" width="11.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="181.5" y="366.0"></text>
</g>
<g>
<title>ip_local_out (28 samples, 0.15%)</title><rect x="178.6" y="339.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="181.6" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (28 samples, 0.15%)</title><rect x="178.6" y="323.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="181.6" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (28 samples, 0.15%)</title><rect x="178.6" y="307.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="181.6" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (11 samples, 0.06%)</title><rect x="178.7" y="291.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="181.7" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (7 samples, 0.04%)</title><rect x="179.9" y="291.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="182.9" y="302.0"></text>
</g>
<g>
<title>ip_output (145 samples, 0.79%)</title><rect x="180.5" y="339.0" width="9.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="183.5" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (134 samples, 0.73%)</title><rect x="180.6" y="323.0" width="8.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="183.6" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (15 samples, 0.08%)</title><rect x="180.8" y="307.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="183.8" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.05%)</title><rect x="180.9" y="291.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="183.9" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (10 samples, 0.05%)</title><rect x="180.9" y="275.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="183.9" y="286.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.03%)</title><rect x="181.1" y="259.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="184.1" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.03%)</title><rect x="181.2" y="243.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="184.2" y="254.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (115 samples, 0.63%)</title><rect x="181.8" y="307.0" width="7.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="184.8" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (115 samples, 0.63%)</title><rect x="181.8" y="291.0" width="7.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="184.8" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (115 samples, 0.63%)</title><rect x="181.8" y="275.0" width="7.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="184.8" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (115 samples, 0.63%)</title><rect x="181.8" y="259.0" width="7.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="184.8" y="270.0"></text>
</g>
<g>
<title>net_rx_action (110 samples, 0.60%)</title><rect x="182.1" y="243.0" width="7.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="185.1" y="254.0"></text>
</g>
<g>
<title>process_backlog (109 samples, 0.60%)</title><rect x="182.2" y="227.0" width="7.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="185.2" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (107 samples, 0.59%)</title><rect x="182.3" y="211.0" width="6.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="185.3" y="222.0"></text>
</g>
<g>
<title>ip_rcv (106 samples, 0.58%)</title><rect x="182.4" y="195.0" width="6.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="185.4" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (85 samples, 0.47%)</title><rect x="182.5" y="179.0" width="5.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="185.5" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (76 samples, 0.42%)</title><rect x="182.5" y="163.0" width="4.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="185.5" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (75 samples, 0.41%)</title><rect x="182.6" y="147.0" width="4.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="185.6" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (74 samples, 0.41%)</title><rect x="182.6" y="131.0" width="4.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="185.6" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.03%)</title><rect x="182.8" y="115.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="185.8" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (64 samples, 0.35%)</title><rect x="183.2" y="115.0" width="4.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="186.2" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (63 samples, 0.34%)</title><rect x="183.3" y="99.0" width="4.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="186.3" y="110.0"></text>
</g>
<g>
<title>tcp_ack (20 samples, 0.11%)</title><rect x="183.5" y="83.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="186.5" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.04%)</title><rect x="183.7" y="67.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="186.7" y="78.0"></text>
</g>
<g>
<title>tcp_data_queue (40 samples, 0.22%)</title><rect x="184.8" y="83.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="187.8" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (39 samples, 0.21%)</title><rect x="184.8" y="67.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="187.8" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (39 samples, 0.21%)</title><rect x="184.8" y="51.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="187.8" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (39 samples, 0.21%)</title><rect x="184.8" y="35.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="187.8" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.04%)</title><rect x="187.4" y="163.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="190.4" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.03%)</title><rect x="187.4" y="147.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="190.4" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (18 samples, 0.10%)</title><rect x="188.1" y="179.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="191.1" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (12 samples, 0.07%)</title><rect x="188.3" y="163.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="191.3" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.04%)</title><rect x="189.3" y="323.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="192.3" y="334.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.03%)</title><rect x="189.3" y="307.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="192.3" y="318.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.02%)</title><rect x="190.1" y="403.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="193.1" y="414.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (5 samples, 0.03%)</title><rect x="190.8" y="531.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="193.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (17 samples, 0.09%)</title><rect x="191.4" y="659.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="194.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (17 samples, 0.09%)</title><rect x="191.4" y="643.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (17 samples, 0.09%)</title><rect x="191.4" y="627.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="194.4" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (17 samples, 0.09%)</title><rect x="191.4" y="611.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="194.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (17 samples, 0.09%)</title><rect x="191.4" y="595.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="194.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (14 samples, 0.08%)</title><rect x="191.4" y="579.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="194.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (13 samples, 0.07%)</title><rect x="191.5" y="563.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="194.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.07%)</title><rect x="191.5" y="547.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="194.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.07%)</title><rect x="191.5" y="531.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="194.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.07%)</title><rect x="191.5" y="515.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="194.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.07%)</title><rect x="191.5" y="499.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.5" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.06%)</title><rect x="191.6" y="483.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="194.6" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="191.8" y="467.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="194.8" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="191.8" y="451.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="194.8" y="462.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.04%)</title><rect x="191.9" y="435.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="194.9" y="446.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.04%)</title><rect x="191.9" y="419.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="194.9" y="430.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.04%)</title><rect x="191.9" y="403.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="194.9" y="414.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.02%)</title><rect x="192.1" y="387.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="195.1" y="398.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="192.1" y="371.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="195.1" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.02%)</title><rect x="192.1" y="355.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="195.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (61 samples, 0.33%)</title><rect x="192.5" y="675.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="195.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (61 samples, 0.33%)</title><rect x="192.5" y="659.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (49 samples, 0.27%)</title><rect x="192.5" y="643.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="195.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (47 samples, 0.26%)</title><rect x="192.7" y="627.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="195.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (47 samples, 0.26%)</title><rect x="192.7" y="611.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="195.7" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (32 samples, 0.18%)</title><rect x="192.7" y="595.0" width="2.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="195.7" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.03%)</title><rect x="192.7" y="579.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="195.7" y="590.0"></text>
</g>
<g>
<title>__lll_unlock_wake (25 samples, 0.14%)</title><rect x="193.1" y="579.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="196.1" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.10%)</title><rect x="193.6" y="563.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="196.6" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.10%)</title><rect x="193.6" y="547.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="196.6" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.05%)</title><rect x="194.1" y="531.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="197.1" y="542.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.04%)</title><rect x="194.3" y="515.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="197.3" y="526.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.04%)</title><rect x="194.3" y="499.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="197.3" y="510.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.08%)</title><rect x="194.7" y="595.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="197.7" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (14 samples, 0.08%)</title><rect x="194.7" y="579.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="197.7" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.05%)</title><rect x="195.0" y="563.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="198.0" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.05%)</title><rect x="195.0" y="547.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="198.0" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.04%)</title><rect x="195.1" y="531.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="198.1" y="542.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.04%)</title><rect x="195.2" y="515.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="198.2" y="526.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.04%)</title><rect x="195.2" y="499.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="198.2" y="510.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.02%)</title><rect x="195.4" y="483.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="198.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.06%)</title><rect x="195.8" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="198.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.06%)</title><rect x="195.8" y="627.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.06%)</title><rect x="195.8" y="611.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.06%)</title><rect x="195.8" y="595.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.06%)</title><rect x="195.8" y="579.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="198.8" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.05%)</title><rect x="195.8" y="563.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="198.8" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="195.9" y="547.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="198.9" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="195.9" y="531.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="198.9" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.04%)</title><rect x="196.0" y="515.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="199.0" y="526.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.04%)</title><rect x="196.0" y="499.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="199.0" y="510.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.04%)</title><rect x="196.0" y="483.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="199.0" y="494.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.04%)</title><rect x="196.0" y="467.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="199.0" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.04%)</title><rect x="196.0" y="451.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="199.0" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.04%)</title><rect x="196.0" y="435.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="199.0" y="446.0"></text>
</g>
<g>
<title>[proxy-worker-3 tid=25858] (439 samples, 2.40%)</title><rect x="196.5" y="739.0" width="28.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="199.5" y="750.0">[p..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (15 samples, 0.08%)</title><rect x="196.5" y="723.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="199.5" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (14 samples, 0.08%)</title><rect x="196.6" y="707.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="199.6" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (14 samples, 0.08%)</title><rect x="196.6" y="691.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="199.6" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (14 samples, 0.08%)</title><rect x="196.6" y="675.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="199.6" y="686.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (8 samples, 0.04%)</title><rect x="196.7" y="659.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="199.7" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (8 samples, 0.04%)</title><rect x="196.7" y="643.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="199.7" y="654.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (5 samples, 0.03%)</title><rect x="196.9" y="627.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="199.9" y="638.0"></text>
</g>
<g>
<title>__memset_avx2_erms (4 samples, 0.02%)</title><rect x="197.2" y="659.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="200.2" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.run (419 samples, 2.29%)</title><rect x="197.8" y="723.0" width="27.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="200.8" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (419 samples, 2.29%)</title><rect x="197.8" y="707.0" width="27.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="200.8" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (419 samples, 2.29%)</title><rect x="197.8" y="691.0" width="27.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="200.8" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (372 samples, 2.04%)</title><rect x="197.8" y="675.0" width="24.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.8" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (355 samples, 1.94%)</title><rect x="197.8" y="659.0" width="23.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="200.8" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (355 samples, 1.94%)</title><rect x="197.8" y="643.0" width="23.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="200.8" y="654.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (353 samples, 1.93%)</title><rect x="198.0" y="627.0" width="22.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="201.0" y="638.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (353 samples, 1.93%)</title><rect x="198.0" y="611.0" width="22.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.0" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (353 samples, 1.93%)</title><rect x="198.0" y="595.0" width="22.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.0" y="606.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (351 samples, 1.92%)</title><rect x="198.1" y="579.0" width="22.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="201.1" y="590.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (351 samples, 1.92%)</title><rect x="198.1" y="563.0" width="22.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="201.1" y="574.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (53 samples, 0.29%)</title><rect x="198.2" y="547.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.2" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (53 samples, 0.29%)</title><rect x="198.2" y="531.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="201.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.03%)</title><rect x="198.2" y="515.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="201.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.03%)</title><rect x="198.2" y="499.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="201.2" y="510.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.03%)</title><rect x="198.2" y="483.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="201.2" y="494.0"></text>
</g>
<g>
<title>__libc_recv (45 samples, 0.25%)</title><rect x="198.6" y="515.0" width="2.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="201.6" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.23%)</title><rect x="198.8" y="499.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="201.8" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.23%)</title><rect x="198.8" y="483.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="201.8" y="494.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (40 samples, 0.22%)</title><rect x="198.9" y="467.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="201.9" y="478.0"></text>
</g>
<g>
<title>__sys_recvfrom (40 samples, 0.22%)</title><rect x="198.9" y="451.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="201.9" y="462.0"></text>
</g>
<g>
<title>inet_recvmsg (31 samples, 0.17%)</title><rect x="199.4" y="435.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="202.4" y="446.0"></text>
</g>
<g>
<title>tcp_recvmsg (31 samples, 0.17%)</title><rect x="199.4" y="419.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="202.4" y="430.0"></text>
</g>
<g>
<title>sk_wait_data (9 samples, 0.05%)</title><rect x="200.1" y="403.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="203.1" y="414.0"></text>
</g>
<g>
<title>wait_woken (5 samples, 0.03%)</title><rect x="200.3" y="387.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="203.3" y="398.0"></text>
</g>
<g>
<title>schedule_timeout (4 samples, 0.02%)</title><rect x="200.4" y="371.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="203.4" y="382.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.03%)</title><rect x="200.7" y="403.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="203.7" y="414.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.03%)</title><rect x="200.7" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="203.7" y="398.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.02%)</title><rect x="200.7" y="371.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="203.7" y="382.0"></text>
</g>
<g>
<title>copyout (4 samples, 0.02%)</title><rect x="200.7" y="355.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="203.7" y="366.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.02%)</title><rect x="200.7" y="339.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="203.7" y="350.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.02%)</title><rect x="201.1" y="403.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="204.1" y="414.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (16 samples, 0.09%)</title><rect x="201.6" y="547.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="204.6" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (7 samples, 0.04%)</title><rect x="201.8" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="204.8" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.04%)</title><rect x="201.8" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="204.8" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.03%)</title><rect x="201.8" y="499.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.02%)</title><rect x="202.2" y="531.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="205.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (22 samples, 0.12%)</title><rect x="202.6" y="547.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="205.6" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (17 samples, 0.09%)</title><rect x="202.7" y="531.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="205.7" y="542.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.02%)</title><rect x="203.2" y="515.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="206.2" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.03%)</title><rect x="203.4" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.4" y="526.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.03%)</title><rect x="203.4" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="206.4" y="510.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (37 samples, 0.20%)</title><rect x="204.1" y="547.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.1" y="558.0"></text>
</g>
<g>
<title>setsockopt (36 samples, 0.20%)</title><rect x="204.2" y="531.0" width="2.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="207.2" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.11%)</title><rect x="205.2" y="515.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="208.2" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.11%)</title><rect x="205.2" y="499.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="208.2" y="510.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (17 samples, 0.09%)</title><rect x="205.4" y="483.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="208.4" y="494.0"></text>
</g>
<g>
<title>__sys_setsockopt (16 samples, 0.09%)</title><rect x="205.5" y="467.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="208.5" y="478.0"></text>
</g>
<g>
<title>sock_setsockopt (7 samples, 0.04%)</title><rect x="205.8" y="451.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="208.8" y="462.0"></text>
</g>
<g>
<title>sock_set_timeout (4 samples, 0.02%)</title><rect x="206.0" y="435.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="209.0" y="446.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (216 samples, 1.18%)</title><rect x="206.5" y="547.0" width="13.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="209.5" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (212 samples, 1.16%)</title><rect x="206.7" y="531.0" width="13.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="209.7" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (199 samples, 1.09%)</title><rect x="207.6" y="515.0" width="12.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="210.6" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (199 samples, 1.09%)</title><rect x="207.6" y="499.0" width="12.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="210.6" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (193 samples, 1.06%)</title><rect x="208.0" y="483.0" width="12.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="211.0" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (193 samples, 1.06%)</title><rect x="208.0" y="467.0" width="12.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="211.0" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (191 samples, 1.05%)</title><rect x="208.0" y="451.0" width="12.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="211.0" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (190 samples, 1.04%)</title><rect x="208.1" y="435.0" width="12.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="211.1" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (188 samples, 1.03%)</title><rect x="208.2" y="419.0" width="12.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="211.2" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (166 samples, 0.91%)</title><rect x="208.4" y="403.0" width="10.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="211.4" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (166 samples, 0.91%)</title><rect x="208.4" y="387.0" width="10.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="211.4" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (162 samples, 0.89%)</title><rect x="208.5" y="371.0" width="10.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="211.5" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (152 samples, 0.83%)</title><rect x="208.7" y="355.0" width="9.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="211.7" y="366.0"></text>
</g>
<g>
<title>ip_local_out (34 samples, 0.19%)</title><rect x="208.7" y="339.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="211.7" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (34 samples, 0.19%)</title><rect x="208.7" y="323.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="211.7" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (32 samples, 0.18%)</title><rect x="208.9" y="307.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="211.9" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.04%)</title><rect x="208.9" y="291.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="211.9" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.02%)</title><rect x="209.5" y="291.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="212.5" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (10 samples, 0.05%)</title><rect x="210.0" y="291.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="213.0" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (6 samples, 0.03%)</title><rect x="210.2" y="275.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="213.2" y="286.0"></text>
</g>
<g>
<title>ip_output (117 samples, 0.64%)</title><rect x="210.9" y="339.0" width="7.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="213.9" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (109 samples, 0.60%)</title><rect x="210.9" y="323.0" width="7.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="213.9" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.03%)</title><rect x="211.1" y="307.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="214.1" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.02%)</title><rect x="211.3" y="291.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="214.3" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.02%)</title><rect x="211.3" y="275.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="214.3" y="286.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.02%)</title><rect x="211.3" y="259.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="214.3" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.02%)</title><rect x="211.3" y="243.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="214.3" y="254.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (100 samples, 0.55%)</title><rect x="211.5" y="307.0" width="6.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="214.5" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (98 samples, 0.54%)</title><rect x="211.7" y="291.0" width="6.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="214.7" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (96 samples, 0.53%)</title><rect x="211.8" y="275.0" width="6.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="214.8" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (96 samples, 0.53%)</title><rect x="211.8" y="259.0" width="6.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="214.8" y="270.0"></text>
</g>
<g>
<title>net_rx_action (93 samples, 0.51%)</title><rect x="212.0" y="243.0" width="6.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="215.0" y="254.0"></text>
</g>
<g>
<title>process_backlog (93 samples, 0.51%)</title><rect x="212.0" y="227.0" width="6.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="215.0" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (92 samples, 0.50%)</title><rect x="212.0" y="211.0" width="6.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="215.0" y="222.0"></text>
</g>
<g>
<title>ip_rcv (88 samples, 0.48%)</title><rect x="212.3" y="195.0" width="5.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="215.3" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (72 samples, 0.39%)</title><rect x="212.4" y="179.0" width="4.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="215.4" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (62 samples, 0.34%)</title><rect x="212.5" y="163.0" width="4.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="215.5" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (62 samples, 0.34%)</title><rect x="212.5" y="147.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="215.5" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (61 samples, 0.33%)</title><rect x="212.6" y="131.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="215.6" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (57 samples, 0.31%)</title><rect x="212.8" y="115.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="215.8" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (57 samples, 0.31%)</title><rect x="212.8" y="99.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="215.8" y="110.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 0.06%)</title><rect x="212.9" y="83.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="215.9" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (43 samples, 0.24%)</title><rect x="213.6" y="83.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="216.6" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (40 samples, 0.22%)</title><rect x="213.7" y="67.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="216.7" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (36 samples, 0.20%)</title><rect x="214.0" y="51.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="217.0" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (36 samples, 0.20%)</title><rect x="214.0" y="35.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="217.0" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.04%)</title><rect x="216.5" y="163.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="219.5" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.04%)</title><rect x="216.5" y="147.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="219.5" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.08%)</title><rect x="217.1" y="179.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="220.1" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (11 samples, 0.06%)</title><rect x="217.1" y="163.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="220.1" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.04%)</title><rect x="218.0" y="323.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="221.0" y="334.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.06%)</title><rect x="219.3" y="403.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="222.3" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.05%)</title><rect x="219.4" y="387.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="222.4" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.03%)</title><rect x="219.6" y="371.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="222.6" y="382.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (4 samples, 0.02%)</title><rect x="220.4" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="223.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (17 samples, 0.09%)</title><rect x="220.8" y="659.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (17 samples, 0.09%)</title><rect x="220.8" y="643.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="223.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (17 samples, 0.09%)</title><rect x="220.8" y="627.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="223.8" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (17 samples, 0.09%)</title><rect x="220.8" y="611.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="223.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (17 samples, 0.09%)</title><rect x="220.8" y="595.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (13 samples, 0.07%)</title><rect x="220.8" y="579.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="223.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (13 samples, 0.07%)</title><rect x="220.8" y="563.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="223.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.07%)</title><rect x="220.8" y="547.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="223.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.07%)</title><rect x="220.8" y="531.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.07%)</title><rect x="220.8" y="515.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="223.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.07%)</title><rect x="220.8" y="499.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="223.8" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.05%)</title><rect x="220.9" y="483.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="223.9" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="221.1" y="467.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="224.1" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="221.1" y="451.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="224.1" y="462.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="221.1" y="435.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="224.1" y="446.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="221.1" y="419.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="224.1" y="430.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.03%)</title><rect x="221.1" y="403.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="224.1" y="414.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="221.2" y="387.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="224.2" y="398.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="221.2" y="371.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="224.2" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.03%)</title><rect x="221.2" y="355.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="224.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (47 samples, 0.26%)</title><rect x="221.9" y="675.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="224.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (47 samples, 0.26%)</title><rect x="221.9" y="659.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="224.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (33 samples, 0.18%)</title><rect x="221.9" y="643.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (28 samples, 0.15%)</title><rect x="222.2" y="627.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="225.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (28 samples, 0.15%)</title><rect x="222.2" y="611.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="225.2" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (18 samples, 0.10%)</title><rect x="222.2" y="595.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="225.2" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.03%)</title><rect x="222.4" y="579.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="225.4" y="590.0"></text>
</g>
<g>
<title>__lll_unlock_wake (10 samples, 0.05%)</title><rect x="222.8" y="579.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="225.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="223.0" y="563.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="226.0" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="223.0" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="226.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.05%)</title><rect x="223.4" y="595.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="226.4" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.04%)</title><rect x="223.5" y="579.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="226.5" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="223.6" y="563.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="226.6" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="223.6" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="226.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.07%)</title><rect x="224.1" y="643.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.07%)</title><rect x="224.1" y="627.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="227.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.07%)</title><rect x="224.1" y="611.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.07%)</title><rect x="224.1" y="595.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.07%)</title><rect x="224.1" y="579.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="227.1" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.06%)</title><rect x="224.2" y="563.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="227.2" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="224.4" y="547.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="227.4" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="224.4" y="531.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="227.4" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="224.6" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="227.6" y="526.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="224.6" y="499.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="227.6" y="510.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="224.6" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="227.6" y="494.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.02%)</title><rect x="224.6" y="467.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="227.6" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="224.6" y="451.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="227.6" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.02%)</title><rect x="224.6" y="435.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="227.6" y="446.0"></text>
</g>
<g>
<title>[proxy-worker-4 tid=25859] (440 samples, 2.41%)</title><rect x="224.9" y="739.0" width="28.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="227.9" y="750.0">[p..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (22 samples, 0.12%)</title><rect x="224.9" y="723.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="227.9" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (18 samples, 0.10%)</title><rect x="225.2" y="707.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="228.2" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (17 samples, 0.09%)</title><rect x="225.2" y="691.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="228.2" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (11 samples, 0.06%)</title><rect x="225.4" y="675.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="228.4" y="686.0"></text>
</g>
<g>
<title>__memset_avx2_erms (6 samples, 0.03%)</title><rect x="225.7" y="659.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="228.7" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.run (418 samples, 2.29%)</title><rect x="226.3" y="723.0" width="27.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="229.3" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (418 samples, 2.29%)</title><rect x="226.3" y="707.0" width="27.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="229.3" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (418 samples, 2.29%)</title><rect x="226.3" y="691.0" width="27.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="229.3" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (367 samples, 2.01%)</title><rect x="226.3" y="675.0" width="23.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="229.3" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (348 samples, 1.90%)</title><rect x="226.4" y="659.0" width="22.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="229.4" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (348 samples, 1.90%)</title><rect x="226.4" y="643.0" width="22.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="229.4" y="654.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (346 samples, 1.89%)</title><rect x="226.5" y="627.0" width="22.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="229.5" y="638.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (346 samples, 1.89%)</title><rect x="226.5" y="611.0" width="22.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="229.5" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (346 samples, 1.89%)</title><rect x="226.5" y="595.0" width="22.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="229.5" y="606.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (340 samples, 1.86%)</title><rect x="226.7" y="579.0" width="22.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="229.7" y="590.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (340 samples, 1.86%)</title><rect x="226.7" y="563.0" width="22.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="229.7" y="574.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (61 samples, 0.33%)</title><rect x="226.8" y="547.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="229.8" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (61 samples, 0.33%)</title><rect x="226.8" y="531.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="229.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="226.9" y="515.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="229.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="226.9" y="499.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="229.9" y="510.0"></text>
</g>
<g>
<title>__libc_recv (55 samples, 0.30%)</title><rect x="227.2" y="515.0" width="3.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="230.2" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.26%)</title><rect x="227.7" y="499.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="230.7" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (48 samples, 0.26%)</title><rect x="227.7" y="483.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="230.7" y="494.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (45 samples, 0.25%)</title><rect x="227.9" y="467.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="230.9" y="478.0"></text>
</g>
<g>
<title>__sys_recvfrom (45 samples, 0.25%)</title><rect x="227.9" y="451.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="230.9" y="462.0"></text>
</g>
<g>
<title>inet_recvmsg (38 samples, 0.21%)</title><rect x="228.1" y="435.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="231.1" y="446.0"></text>
</g>
<g>
<title>tcp_recvmsg (38 samples, 0.21%)</title><rect x="228.1" y="419.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="231.1" y="430.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.05%)</title><rect x="228.2" y="403.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="231.2" y="414.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.05%)</title><rect x="228.2" y="387.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="231.2" y="398.0"></text>
</g>
<g>
<title>skb_release_head_state (9 samples, 0.05%)</title><rect x="228.2" y="371.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="231.2" y="382.0"></text>
</g>
<g>
<title>sock_rfree (8 samples, 0.04%)</title><rect x="228.3" y="355.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="231.3" y="366.0"></text>
</g>
<g>
<title>sk_wait_data (13 samples, 0.07%)</title><rect x="228.9" y="403.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="231.9" y="414.0"></text>
</g>
<g>
<title>wait_woken (6 samples, 0.03%)</title><rect x="229.3" y="387.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="232.3" y="398.0"></text>
</g>
<g>
<title>schedule_timeout (6 samples, 0.03%)</title><rect x="229.3" y="371.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="232.3" y="382.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.03%)</title><rect x="229.7" y="403.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="232.7" y="414.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.03%)</title><rect x="229.7" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="232.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (12 samples, 0.07%)</title><rect x="230.8" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="233.8" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (4 samples, 0.02%)</title><rect x="231.0" y="531.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (12 samples, 0.07%)</title><rect x="231.5" y="547.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="234.5" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (9 samples, 0.05%)</title><rect x="231.7" y="531.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="234.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.03%)</title><rect x="232.3" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.02%)</title><rect x="232.4" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.4" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (33 samples, 0.18%)</title><rect x="232.7" y="547.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="235.7" y="558.0"></text>
</g>
<g>
<title>setsockopt (33 samples, 0.18%)</title><rect x="232.7" y="531.0" width="2.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="235.7" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.10%)</title><rect x="233.6" y="515.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="236.6" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.10%)</title><rect x="233.6" y="499.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="236.6" y="510.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (13 samples, 0.07%)</title><rect x="234.0" y="483.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="237.0" y="494.0"></text>
</g>
<g>
<title>__sys_setsockopt (13 samples, 0.07%)</title><rect x="234.0" y="467.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="237.0" y="478.0"></text>
</g>
<g>
<title>sock_setsockopt (6 samples, 0.03%)</title><rect x="234.2" y="451.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="237.2" y="462.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.02%)</title><rect x="234.3" y="435.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="237.3" y="446.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.02%)</title><rect x="234.6" y="451.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="237.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (209 samples, 1.14%)</title><rect x="234.8" y="547.0" width="13.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.8" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (205 samples, 1.12%)</title><rect x="234.9" y="531.0" width="13.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="237.9" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (197 samples, 1.08%)</title><rect x="235.4" y="515.0" width="12.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="238.4" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (197 samples, 1.08%)</title><rect x="235.4" y="499.0" width="12.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="238.4" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (194 samples, 1.06%)</title><rect x="235.6" y="483.0" width="12.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="238.6" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (194 samples, 1.06%)</title><rect x="235.6" y="467.0" width="12.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="238.6" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (193 samples, 1.06%)</title><rect x="235.6" y="451.0" width="12.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="238.6" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (192 samples, 1.05%)</title><rect x="235.7" y="435.0" width="12.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="238.7" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (191 samples, 1.05%)</title><rect x="235.7" y="419.0" width="12.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="238.7" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (172 samples, 0.94%)</title><rect x="236.0" y="403.0" width="11.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="239.0" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (172 samples, 0.94%)</title><rect x="236.0" y="387.0" width="11.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="239.0" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (165 samples, 0.90%)</title><rect x="236.1" y="371.0" width="10.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="239.1" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (162 samples, 0.89%)</title><rect x="236.2" y="355.0" width="10.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="239.2" y="366.0"></text>
</g>
<g>
<title>ip_local_out (30 samples, 0.16%)</title><rect x="236.4" y="339.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="239.4" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (30 samples, 0.16%)</title><rect x="236.4" y="323.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="239.4" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (26 samples, 0.14%)</title><rect x="236.6" y="307.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="239.6" y="318.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (6 samples, 0.03%)</title><rect x="236.8" y="291.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="239.8" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="237.0" y="275.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="240.0" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (15 samples, 0.08%)</title><rect x="237.3" y="291.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="240.3" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (6 samples, 0.03%)</title><rect x="237.4" y="275.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="240.4" y="286.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (5 samples, 0.03%)</title><rect x="237.9" y="275.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="240.9" y="286.0"></text>
</g>
<g>
<title>ip_output (129 samples, 0.71%)</title><rect x="238.3" y="339.0" width="8.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="241.3" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (122 samples, 0.67%)</title><rect x="238.4" y="323.0" width="7.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="241.4" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (13 samples, 0.07%)</title><rect x="238.7" y="307.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="241.7" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.05%)</title><rect x="238.9" y="291.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="241.9" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (9 samples, 0.05%)</title><rect x="239.0" y="275.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="242.0" y="286.0"></text>
</g>
<g>
<title>netif_rx (6 samples, 0.03%)</title><rect x="239.2" y="259.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="242.2" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.03%)</title><rect x="239.2" y="243.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="242.2" y="254.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (104 samples, 0.57%)</title><rect x="239.6" y="307.0" width="6.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="242.6" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (104 samples, 0.57%)</title><rect x="239.6" y="291.0" width="6.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="242.6" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (103 samples, 0.56%)</title><rect x="239.6" y="275.0" width="6.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="242.6" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (103 samples, 0.56%)</title><rect x="239.6" y="259.0" width="6.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="242.6" y="270.0"></text>
</g>
<g>
<title>net_rx_action (102 samples, 0.56%)</title><rect x="239.7" y="243.0" width="6.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="242.7" y="254.0"></text>
</g>
<g>
<title>process_backlog (102 samples, 0.56%)</title><rect x="239.7" y="227.0" width="6.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="242.7" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (100 samples, 0.55%)</title><rect x="239.8" y="211.0" width="6.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="242.8" y="222.0"></text>
</g>
<g>
<title>ip_rcv (97 samples, 0.53%)</title><rect x="240.0" y="195.0" width="6.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="243.0" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (75 samples, 0.41%)</title><rect x="240.1" y="179.0" width="4.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="243.1" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (65 samples, 0.36%)</title><rect x="240.2" y="163.0" width="4.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="243.2" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (65 samples, 0.36%)</title><rect x="240.2" y="147.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="243.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (63 samples, 0.34%)</title><rect x="240.3" y="131.0" width="4.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="243.3" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (53 samples, 0.29%)</title><rect x="241.0" y="115.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="244.0" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (53 samples, 0.29%)</title><rect x="241.0" y="99.0" width="3.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="244.0" y="110.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.05%)</title><rect x="241.0" y="83.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="244.0" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (41 samples, 0.22%)</title><rect x="241.7" y="83.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="244.7" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (37 samples, 0.20%)</title><rect x="241.9" y="67.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="244.9" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (36 samples, 0.20%)</title><rect x="241.9" y="51.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="244.9" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (36 samples, 0.20%)</title><rect x="241.9" y="35.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="244.9" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.04%)</title><rect x="244.4" y="163.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="247.4" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (20 samples, 0.11%)</title><rect x="245.0" y="179.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="248.0" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (13 samples, 0.07%)</title><rect x="245.1" y="163.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="248.1" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.03%)</title><rect x="246.3" y="323.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="249.3" y="334.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.02%)</title><rect x="246.9" y="371.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="249.9" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (10 samples, 0.05%)</title><rect x="247.2" y="403.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="250.2" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.05%)</title><rect x="247.2" y="387.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="250.2" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.03%)</title><rect x="247.4" y="371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="250.4" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.03%)</title><rect x="247.4" y="355.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="250.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (18 samples, 0.10%)</title><rect x="248.9" y="659.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="251.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (18 samples, 0.10%)</title><rect x="248.9" y="643.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="251.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (18 samples, 0.10%)</title><rect x="248.9" y="627.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.9" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (18 samples, 0.10%)</title><rect x="248.9" y="611.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="251.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (18 samples, 0.10%)</title><rect x="248.9" y="595.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="251.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (15 samples, 0.08%)</title><rect x="249.0" y="579.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 0.08%)</title><rect x="249.0" y="563.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="252.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.08%)</title><rect x="249.0" y="547.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 0.08%)</title><rect x="249.0" y="531.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="252.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.08%)</title><rect x="249.0" y="515.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="252.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.08%)</title><rect x="249.0" y="499.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.0" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.07%)</title><rect x="249.1" y="483.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="252.1" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.05%)</title><rect x="249.3" y="467.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="252.3" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.05%)</title><rect x="249.3" y="451.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="252.3" y="462.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.05%)</title><rect x="249.4" y="435.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="252.4" y="446.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.04%)</title><rect x="249.4" y="419.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="252.4" y="430.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.04%)</title><rect x="249.4" y="403.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="252.4" y="414.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="249.6" y="387.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="252.6" y="398.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="249.6" y="371.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="252.6" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.03%)</title><rect x="249.6" y="355.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="252.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (47 samples, 0.26%)</title><rect x="250.3" y="675.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="253.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (47 samples, 0.26%)</title><rect x="250.3" y="659.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="253.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (32 samples, 0.18%)</title><rect x="250.3" y="643.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (30 samples, 0.16%)</title><rect x="250.4" y="627.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="253.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (30 samples, 0.16%)</title><rect x="250.4" y="611.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.4" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (23 samples, 0.13%)</title><rect x="250.5" y="595.0" width="1.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="253.5" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.03%)</title><rect x="250.5" y="579.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="253.5" y="590.0"></text>
</g>
<g>
<title>__lll_unlock_wake (16 samples, 0.09%)</title><rect x="250.9" y="579.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="253.9" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.07%)</title><rect x="251.1" y="563.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="254.1" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.07%)</title><rect x="251.1" y="547.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="254.1" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="251.5" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="254.5" y="542.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="251.6" y="515.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="254.6" y="526.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="251.6" y="499.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="254.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.03%)</title><rect x="252.0" y="595.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="255.0" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.03%)</title><rect x="252.0" y="579.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="255.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.02%)</title><rect x="252.3" y="643.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="255.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.02%)</title><rect x="252.3" y="627.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="255.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.06%)</title><rect x="252.6" y="643.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="255.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.06%)</title><rect x="252.6" y="627.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="255.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.06%)</title><rect x="252.6" y="611.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="255.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.06%)</title><rect x="252.6" y="595.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.06%)</title><rect x="252.6" y="579.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.6" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.06%)</title><rect x="252.6" y="563.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="255.6" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.05%)</title><rect x="252.7" y="547.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="255.7" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.05%)</title><rect x="252.7" y="531.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="255.7" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.05%)</title><rect x="252.7" y="515.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="255.7" y="526.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.05%)</title><rect x="252.7" y="499.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="255.7" y="510.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.05%)</title><rect x="252.7" y="483.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="255.7" y="494.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.05%)</title><rect x="252.7" y="467.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="255.7" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.05%)</title><rect x="252.7" y="451.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="255.7" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.05%)</title><rect x="252.7" y="435.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="255.7" y="446.0"></text>
</g>
<g>
<title>[tid=25729] (97 samples, 0.53%)</title><rect x="253.3" y="739.0" width="6.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="256.3" y="750.0"></text>
</g>
<g>
<title>start_thread (93 samples, 0.51%)</title><rect x="253.6" y="723.0" width="6.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="256.6" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (93 samples, 0.51%)</title><rect x="253.6" y="707.0" width="6.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="256.6" y="718.0"></text>
</g>
<g>
<title>GangWorker::loop() (93 samples, 0.51%)</title><rect x="253.6" y="691.0" width="6.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="256.6" y="702.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (4 samples, 0.02%)</title><rect x="253.6" y="675.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="256.6" y="686.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (83 samples, 0.45%)</title><rect x="253.8" y="675.0" width="5.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="256.8" y="686.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (65 samples, 0.36%)</title><rect x="253.8" y="659.0" width="4.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="256.8" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (4 samples, 0.02%)</title><rect x="253.8" y="643.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="256.8" y="654.0"></text>
</g>
<g>
<title>SpinPause (60 samples, 0.33%)</title><rect x="254.2" y="643.0" width="3.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="257.2" y="654.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (12 samples, 0.07%)</title><rect x="258.4" y="659.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="261.4" y="670.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (11 samples, 0.06%)</title><rect x="258.4" y="643.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="261.4" y="654.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (9 samples, 0.05%)</title><rect x="258.5" y="627.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="261.5" y="638.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (8 samples, 0.04%)</title><rect x="258.6" y="611.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="261.6" y="622.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (4 samples, 0.02%)</title><rect x="259.3" y="675.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="262.3" y="686.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (4 samples, 0.02%)</title><rect x="259.3" y="659.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="262.3" y="670.0"></text>
</g>
<g>
<title>[tid=25736] (115 samples, 0.63%)</title><rect x="259.6" y="739.0" width="7.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="262.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="259.6" y="723.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="262.6" y="734.0"></text>
</g>
<g>
<title>start_thread (108 samples, 0.59%)</title><rect x="260.1" y="723.0" width="7.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="263.1" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (108 samples, 0.59%)</title><rect x="260.1" y="707.0" width="7.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="263.1" y="718.0"></text>
</g>
<g>
<title>VMThread::run() (108 samples, 0.59%)</title><rect x="260.1" y="691.0" width="7.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="263.1" y="702.0"></text>
</g>
<g>
<title>VMThread::loop() (108 samples, 0.59%)</title><rect x="260.1" y="675.0" width="7.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="263.1" y="686.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (29 samples, 0.16%)</title><rect x="260.2" y="659.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="263.2" y="670.0"></text>
</g>
<g>
<title>SpinPause (8 samples, 0.04%)</title><rect x="262.1" y="659.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="265.1" y="670.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.54] (27 samples, 0.15%)</title><rect x="262.6" y="659.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="265.6" y="670.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (27 samples, 0.15%)</title><rect x="262.6" y="643.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="265.6" y="654.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (27 samples, 0.15%)</title><rect x="262.6" y="627.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="265.6" y="638.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (23 samples, 0.13%)</title><rect x="262.7" y="611.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="265.7" y="622.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (7 samples, 0.04%)</title><rect x="263.2" y="595.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="266.2" y="606.0"></text>
</g>
<g>
<title>__GI_sched_yield (42 samples, 0.23%)</title><rect x="264.4" y="659.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="267.4" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.09%)</title><rect x="266.0" y="643.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="269.0" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.09%)</title><rect x="266.0" y="627.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="269.0" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (9 samples, 0.05%)</title><rect x="266.5" y="611.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="269.5" y="622.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.04%)</title><rect x="266.6" y="595.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="269.6" y="606.0"></text>
</g>
<g>
<title>__sched_text_start (7 samples, 0.04%)</title><rect x="266.6" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="269.6" y="590.0"></text>
</g>
<g>
<title>[tid=25752] (98 samples, 0.54%)</title><rect x="267.1" y="739.0" width="6.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="270.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="267.1" y="723.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="270.1" y="734.0"></text>
</g>
<g>
<title>start_thread (94 samples, 0.51%)</title><rect x="267.4" y="723.0" width="6.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="270.4" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (94 samples, 0.51%)</title><rect x="267.4" y="707.0" width="6.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="270.4" y="718.0"></text>
</g>
<g>
<title>GangWorker::loop() (94 samples, 0.51%)</title><rect x="267.4" y="691.0" width="6.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="270.4" y="702.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (86 samples, 0.47%)</title><rect x="267.5" y="675.0" width="5.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="270.5" y="686.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (54 samples, 0.30%)</title><rect x="267.5" y="659.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="270.5" y="670.0"></text>
</g>
<g>
<title>SpinPause (52 samples, 0.28%)</title><rect x="267.7" y="643.0" width="3.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="270.7" y="654.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.02%)</title><rect x="271.1" y="659.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="274.1" y="670.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (4 samples, 0.02%)</title><rect x="271.1" y="643.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="274.1" y="654.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (4 samples, 0.02%)</title><rect x="271.1" y="627.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="274.1" y="638.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (26 samples, 0.14%)</title><rect x="271.4" y="659.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="274.4" y="670.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (22 samples, 0.12%)</title><rect x="271.5" y="643.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="274.5" y="654.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (19 samples, 0.10%)</title><rect x="271.7" y="627.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="274.7" y="638.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (18 samples, 0.10%)</title><rect x="271.8" y="611.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="274.8" y="622.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (8 samples, 0.04%)</title><rect x="271.8" y="595.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="274.8" y="606.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (6 samples, 0.03%)</title><rect x="271.8" y="579.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="274.8" y="590.0"></text>
</g>
<g>
<title>G1RemSetScanState::G1ClearCardTableTask::work(unsigned int) (4 samples, 0.02%)</title><rect x="273.1" y="675.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="276.1" y="686.0"></text>
</g>
<g>
<title>HeapRegion::clear_cardtable() (4 samples, 0.02%)</title><rect x="273.1" y="659.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="276.1" y="670.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (4 samples, 0.02%)</title><rect x="273.1" y="643.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="276.1" y="654.0"></text>
</g>
<g>
<title>[tid=25753] (97 samples, 0.53%)</title><rect x="273.5" y="739.0" width="6.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="276.5" y="750.0"></text>
</g>
<g>
<title>start_thread (91 samples, 0.50%)</title><rect x="273.9" y="723.0" width="5.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="276.9" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (91 samples, 0.50%)</title><rect x="273.9" y="707.0" width="5.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="276.9" y="718.0"></text>
</g>
<g>
<title>GangWorker::loop() (91 samples, 0.50%)</title><rect x="273.9" y="691.0" width="5.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="276.9" y="702.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (85 samples, 0.47%)</title><rect x="273.9" y="675.0" width="5.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="276.9" y="686.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (63 samples, 0.34%)</title><rect x="273.9" y="659.0" width="4.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="276.9" y="670.0"></text>
</g>
<g>
<title>SpinPause (62 samples, 0.34%)</title><rect x="274.0" y="643.0" width="4.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="277.0" y="654.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.03%)</title><rect x="278.2" y="659.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="281.2" y="670.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (4 samples, 0.02%)</title><rect x="278.2" y="643.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="281.2" y="654.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (4 samples, 0.02%)</title><rect x="278.2" y="627.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="281.2" y="638.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (14 samples, 0.08%)</title><rect x="278.5" y="659.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="281.5" y="670.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (9 samples, 0.05%)</title><rect x="278.6" y="643.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="281.6" y="654.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (9 samples, 0.05%)</title><rect x="278.6" y="627.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="281.6" y="638.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (9 samples, 0.05%)</title><rect x="278.6" y="611.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="281.6" y="622.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (4 samples, 0.02%)</title><rect x="279.5" y="675.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="282.5" y="686.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (4 samples, 0.02%)</title><rect x="279.5" y="659.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="282.5" y="670.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.63] (4 samples, 0.02%)</title><rect x="279.5" y="643.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="282.5" y="654.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.02%)</title><rect x="279.5" y="627.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="282.5" y="638.0"></text>
</g>
<g>
<title>[tid=25754] (96 samples, 0.53%)</title><rect x="279.7" y="739.0" width="6.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="282.7" y="750.0"></text>
</g>
<g>
<title>start_thread (93 samples, 0.51%)</title><rect x="279.9" y="723.0" width="6.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="282.9" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (93 samples, 0.51%)</title><rect x="279.9" y="707.0" width="6.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="282.9" y="718.0"></text>
</g>
<g>
<title>GangWorker::loop() (91 samples, 0.50%)</title><rect x="280.0" y="691.0" width="5.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="283.0" y="702.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (4 samples, 0.02%)</title><rect x="280.0" y="675.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="283.0" y="686.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (77 samples, 0.42%)</title><rect x="280.3" y="675.0" width="5.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="283.3" y="686.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (60 samples, 0.33%)</title><rect x="280.3" y="659.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="283.3" y="670.0"></text>
</g>
<g>
<title>SpinPause (53 samples, 0.29%)</title><rect x="280.7" y="643.0" width="3.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="283.7" y="654.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (11 samples, 0.06%)</title><rect x="284.6" y="659.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="287.6" y="670.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (10 samples, 0.05%)</title><rect x="284.6" y="643.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="287.6" y="654.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (10 samples, 0.05%)</title><rect x="284.6" y="627.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="287.6" y="638.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (10 samples, 0.05%)</title><rect x="284.6" y="611.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="287.6" y="622.0"></text>
</g>
<g>
<title>G1RemSetScanState::G1ClearCardTableTask::work(unsigned int) (5 samples, 0.03%)</title><rect x="285.3" y="675.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="288.3" y="686.0"></text>
</g>
<g>
<title>HeapRegion::clear_cardtable() (4 samples, 0.02%)</title><rect x="285.3" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="288.3" y="670.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (4 samples, 0.02%)</title><rect x="285.3" y="643.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="288.3" y="654.0"></text>
</g>
<g>
<title>[worker-0 tid=25850] (995 samples, 5.45%)</title><rect x="285.9" y="739.0" width="64.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="288.9" y="750.0">[worker..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (8 samples, 0.04%)</title><rect x="286.1" y="723.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="289.1" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.04%)</title><rect x="286.1" y="707.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="289.1" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (7 samples, 0.04%)</title><rect x="286.1" y="691.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="289.1" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.03%)</title><rect x="286.1" y="675.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="289.1" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.03%)</title><rect x="286.1" y="659.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="289.1" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (4 samples, 0.02%)</title><rect x="286.1" y="643.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="289.1" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (4 samples, 0.02%)</title><rect x="286.1" y="627.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="289.1" y="638.0"></text>
</g>
<g>
<title>[unknown_Java] (53 samples, 0.29%)</title><rect x="286.6" y="723.0" width="3.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="289.6" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.05%)</title><rect x="289.4" y="707.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="292.4" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="289.5" y="691.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="292.5" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="289.5" y="675.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="292.5" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="289.6" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="292.6" y="670.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="289.7" y="643.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="292.7" y="654.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="289.7" y="627.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="292.7" y="638.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.02%)</title><rect x="289.7" y="611.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="292.7" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="289.7" y="595.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="292.7" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.02%)</title><rect x="289.7" y="579.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="292.7" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.run (932 samples, 5.10%)</title><rect x="290.0" y="723.0" width="60.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="293.0" y="734.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (932 samples, 5.10%)</title><rect x="290.0" y="707.0" width="60.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="293.0" y="718.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (932 samples, 5.10%)</title><rect x="290.0" y="691.0" width="60.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="293.0" y="702.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 0.03%)</title><rect x="290.0" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="293.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (5 samples, 0.03%)</title><rect x="290.0" y="659.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="293.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (927 samples, 5.07%)</title><rect x="290.3" y="675.0" width="59.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="293.3" y="686.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (927 samples, 5.07%)</title><rect x="290.3" y="659.0" width="59.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="293.3" y="670.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (790 samples, 4.32%)</title><rect x="290.5" y="643.0" width="51.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="293.5" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (790 samples, 4.32%)</title><rect x="290.5" y="627.0" width="51.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="293.5" y="638.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (790 samples, 4.32%)</title><rect x="290.5" y="611.0" width="51.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="293.5" y="622.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.02%)</title><rect x="290.6" y="595.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="293.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.02%)</title><rect x="290.6" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (650 samples, 3.56%)</title><rect x="291.0" y="595.0" width="42.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="294.0" y="606.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (59 samples, 0.32%)</title><rect x="291.1" y="579.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="294.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (50 samples, 0.27%)</title><rect x="291.3" y="563.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.3" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (35 samples, 0.19%)</title><rect x="291.4" y="547.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.4" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (35 samples, 0.19%)</title><rect x="291.4" y="531.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="294.4" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (35 samples, 0.19%)</title><rect x="291.4" y="515.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="294.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (33 samples, 0.18%)</title><rect x="291.5" y="499.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.5" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (33 samples, 0.18%)</title><rect x="291.5" y="483.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="294.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (31 samples, 0.17%)</title><rect x="291.6" y="467.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="294.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (31 samples, 0.17%)</title><rect x="291.6" y="451.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="294.6" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (30 samples, 0.16%)</title><rect x="291.7" y="435.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="294.7" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (30 samples, 0.16%)</title><rect x="291.7" y="419.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="294.7" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (29 samples, 0.16%)</title><rect x="291.7" y="403.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="294.7" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (29 samples, 0.16%)</title><rect x="291.7" y="387.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (28 samples, 0.15%)</title><rect x="291.8" y="371.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="294.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (28 samples, 0.15%)</title><rect x="291.8" y="355.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.8" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.09%)</title><rect x="291.9" y="339.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="294.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.08%)</title><rect x="292.0" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.0" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.07%)</title><rect x="292.1" y="307.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="295.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (9 samples, 0.05%)</title><rect x="293.0" y="339.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="296.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (7 samples, 0.04%)</title><rect x="293.2" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="296.2" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (7 samples, 0.04%)</title><rect x="293.2" y="307.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (7 samples, 0.04%)</title><rect x="293.2" y="291.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="296.2" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.03%)</title><rect x="293.3" y="275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="296.3" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="293.3" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="296.3" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="293.3" y="243.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="296.3" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="293.3" y="227.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="296.3" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="293.3" y="211.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="296.3" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (14 samples, 0.08%)</title><rect x="293.6" y="547.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="296.6" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (14 samples, 0.08%)</title><rect x="293.6" y="531.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="296.6" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (14 samples, 0.08%)</title><rect x="293.6" y="515.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="296.6" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (14 samples, 0.08%)</title><rect x="293.6" y="499.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="296.6" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.07%)</title><rect x="293.7" y="483.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="296.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.07%)</title><rect x="293.7" y="467.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="296.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5 samples, 0.03%)</title><rect x="293.7" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5 samples, 0.03%)</title><rect x="293.7" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="296.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5 samples, 0.03%)</title><rect x="293.7" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="296.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5 samples, 0.03%)</title><rect x="293.7" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="296.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (8 samples, 0.04%)</title><rect x="294.0" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="297.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (8 samples, 0.04%)</title><rect x="294.0" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="297.0" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (8 samples, 0.04%)</title><rect x="294.0" y="419.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="297.0" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.04%)</title><rect x="294.1" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="297.1" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (7 samples, 0.04%)</title><rect x="294.1" y="387.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="297.1" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.04%)</title><rect x="294.1" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="297.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (7 samples, 0.04%)</title><rect x="294.1" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.04%)</title><rect x="294.1" y="339.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="297.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (590 samples, 3.23%)</title><rect x="294.9" y="579.0" width="38.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="297.9" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (504 samples, 2.76%)</title><rect x="294.9" y="563.0" width="32.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="297.9" y="574.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (20 samples, 0.11%)</title><rect x="295.2" y="547.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (20 samples, 0.11%)</title><rect x="295.2" y="531.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (17 samples, 0.09%)</title><rect x="295.4" y="515.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (16 samples, 0.09%)</title><rect x="295.5" y="499.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="298.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.02%)</title><rect x="295.7" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (8 samples, 0.04%)</title><rect x="296.0" y="483.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="299.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (14 samples, 0.08%)</title><rect x="296.7" y="547.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="299.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (7 samples, 0.04%)</title><rect x="297.0" y="531.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="300.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (6 samples, 0.03%)</title><rect x="297.0" y="515.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (462 samples, 2.53%)</title><rect x="297.6" y="547.0" width="29.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="300.6" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (462 samples, 2.53%)</title><rect x="297.6" y="531.0" width="29.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="300.6" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (461 samples, 2.52%)</title><rect x="297.7" y="515.0" width="29.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="300.7" y="526.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (87 samples, 0.48%)</title><rect x="297.9" y="499.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="300.9" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="298.5" y="483.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="301.5" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (4 samples, 0.02%)</title><rect x="298.7" y="483.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="301.7" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (67 samples, 0.37%)</title><rect x="299.0" y="483.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="302.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.04%)</title><rect x="301.9" y="467.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="304.9" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (7 samples, 0.04%)</title><rect x="301.9" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (9 samples, 0.05%)</title><rect x="302.7" y="467.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="305.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (37 samples, 0.20%)</title><rect x="303.6" y="499.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="306.6" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (20 samples, 0.11%)</title><rect x="303.6" y="483.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="306.6" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (20 samples, 0.11%)</title><rect x="303.6" y="467.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.6" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (20 samples, 0.11%)</title><rect x="303.6" y="451.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.6" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="303.6" y="435.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.6" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="303.6" y="419.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="306.6" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="303.6" y="403.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="306.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="303.6" y="387.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="306.6" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="303.6" y="371.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.6" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="303.6" y="355.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="306.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (15 samples, 0.08%)</title><rect x="303.9" y="355.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="306.9" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="304.5" y="339.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="307.5" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (17 samples, 0.09%)</title><rect x="304.9" y="483.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="307.9" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (17 samples, 0.09%)</title><rect x="304.9" y="467.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="307.9" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (17 samples, 0.09%)</title><rect x="304.9" y="451.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="307.9" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (17 samples, 0.09%)</title><rect x="304.9" y="435.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="307.9" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (17 samples, 0.09%)</title><rect x="304.9" y="419.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="307.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (17 samples, 0.09%)</title><rect x="304.9" y="403.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="307.9" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (17 samples, 0.09%)</title><rect x="304.9" y="387.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="307.9" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="304.9" y="371.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="307.9" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="304.9" y="355.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="307.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="305.0" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="308.0" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="305.0" y="323.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.0" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.05%)</title><rect x="305.4" y="371.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.4" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.05%)</title><rect x="305.4" y="355.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.4" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="305.6" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.6" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="305.7" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="308.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (333 samples, 1.82%)</title><rect x="306.0" y="499.0" width="21.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="309.0" y="510.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (189 samples, 1.03%)</title><rect x="307.2" y="483.0" width="12.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="310.2" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (183 samples, 1.00%)</title><rect x="307.6" y="467.0" width="11.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.6" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (156 samples, 0.85%)</title><rect x="309.3" y="451.0" width="10.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="312.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (156 samples, 0.85%)</title><rect x="309.3" y="435.0" width="10.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.3" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (156 samples, 0.85%)</title><rect x="309.3" y="419.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="312.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (153 samples, 0.84%)</title><rect x="309.5" y="403.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (151 samples, 0.83%)</title><rect x="309.6" y="387.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="312.6" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (148 samples, 0.81%)</title><rect x="309.8" y="371.0" width="9.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="312.8" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (64 samples, 0.35%)</title><rect x="314.6" y="355.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="317.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="318.4" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="321.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="318.4" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="321.4" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="318.4" y="307.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="321.4" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (10 samples, 0.05%)</title><rect x="318.7" y="355.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="321.7" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (40 samples, 0.22%)</title><rect x="319.4" y="483.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="322.4" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (40 samples, 0.22%)</title><rect x="319.4" y="467.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="322.4" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (40 samples, 0.22%)</title><rect x="319.4" y="451.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="322.4" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (40 samples, 0.22%)</title><rect x="319.4" y="435.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="322.4" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="319.5" y="419.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="322.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="319.5" y="403.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="322.5" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (36 samples, 0.20%)</title><rect x="319.6" y="387.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="322.6" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="320.0" y="371.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="323.0" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="320.2" y="355.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="323.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="320.2" y="339.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.2" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="320.2" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="323.2" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (22 samples, 0.12%)</title><rect x="320.6" y="371.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="323.6" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (16 samples, 0.09%)</title><rect x="320.9" y="355.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="323.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="321.7" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.7" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="321.7" y="323.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="324.7" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (62 samples, 0.34%)</title><rect x="322.0" y="483.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.0" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (51 samples, 0.28%)</title><rect x="322.6" y="467.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="325.6" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (18 samples, 0.10%)</title><rect x="326.0" y="483.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.0" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="326.2" y="467.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="329.2" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.05%)</title><rect x="326.5" y="467.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="329.5" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.04%)</title><rect x="326.6" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.6" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.04%)</title><rect x="326.6" y="435.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.6" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="326.8" y="419.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.8" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.03%)</title><rect x="327.1" y="483.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.1" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.03%)</title><rect x="327.1" y="467.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.1" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="327.1" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="330.1" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.03%)</title><rect x="327.1" y="435.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (86 samples, 0.47%)</title><rect x="327.5" y="563.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="330.5" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (78 samples, 0.43%)</title><rect x="327.5" y="547.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (78 samples, 0.43%)</title><rect x="327.5" y="531.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.5" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (71 samples, 0.39%)</title><rect x="327.8" y="515.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="330.8" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (71 samples, 0.39%)</title><rect x="327.8" y="499.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="330.8" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (71 samples, 0.39%)</title><rect x="327.8" y="483.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="330.8" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (70 samples, 0.38%)</title><rect x="327.9" y="467.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.9" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (67 samples, 0.37%)</title><rect x="328.1" y="451.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="331.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (67 samples, 0.37%)</title><rect x="328.1" y="435.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="331.1" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (30 samples, 0.16%)</title><rect x="328.1" y="419.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (29 samples, 0.16%)</title><rect x="328.2" y="403.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="331.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (29 samples, 0.16%)</title><rect x="328.2" y="387.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (29 samples, 0.16%)</title><rect x="328.2" y="371.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="331.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (4 samples, 0.02%)</title><rect x="328.2" y="355.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (23 samples, 0.13%)</title><rect x="328.4" y="355.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="331.4" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="328.5" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="331.5" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (13 samples, 0.07%)</title><rect x="328.8" y="339.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="331.8" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (13 samples, 0.07%)</title><rect x="328.8" y="323.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="331.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (13 samples, 0.07%)</title><rect x="328.8" y="307.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="331.8" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="329.2" y="291.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.2" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="329.2" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.2" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="329.2" y="259.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="332.2" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="329.2" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (37 samples, 0.20%)</title><rect x="330.0" y="419.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="333.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (37 samples, 0.20%)</title><rect x="330.0" y="403.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="333.0" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (36 samples, 0.20%)</title><rect x="330.1" y="387.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.1" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (32 samples, 0.18%)</title><rect x="330.4" y="371.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="333.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (31 samples, 0.17%)</title><rect x="330.4" y="355.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (31 samples, 0.17%)</title><rect x="330.4" y="339.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.4" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (30 samples, 0.16%)</title><rect x="330.5" y="323.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="333.5" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (30 samples, 0.16%)</title><rect x="330.5" y="307.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.08%)</title><rect x="330.6" y="291.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="333.6" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.07%)</title><rect x="330.6" y="275.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.6" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.07%)</title><rect x="330.6" y="259.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (15 samples, 0.08%)</title><rect x="331.5" y="291.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="334.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (13 samples, 0.07%)</title><rect x="331.6" y="275.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="334.6" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (12 samples, 0.07%)</title><rect x="331.7" y="259.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="334.7" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (12 samples, 0.07%)</title><rect x="331.7" y="243.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="334.7" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (10 samples, 0.05%)</title><rect x="331.8" y="227.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="334.8" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="331.8" y="211.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="334.8" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="331.8" y="195.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="334.8" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="331.8" y="179.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.8" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="331.8" y="163.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="334.8" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="332.1" y="147.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="335.1" y="158.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="332.1" y="131.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="335.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (8 samples, 0.04%)</title><rect x="332.5" y="547.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="335.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (8 samples, 0.04%)</title><rect x="332.5" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="335.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.04%)</title><rect x="332.5" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="335.5" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (4 samples, 0.02%)</title><rect x="332.5" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="335.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (4 samples, 0.02%)</title><rect x="332.5" y="483.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="335.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (4 samples, 0.02%)</title><rect x="332.5" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="335.5" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="332.5" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="335.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="332.5" y="435.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="335.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (4 samples, 0.02%)</title><rect x="332.5" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="335.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (4 samples, 0.02%)</title><rect x="332.5" y="403.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="335.5" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (4 samples, 0.02%)</title><rect x="332.5" y="387.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.5" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="332.5" y="371.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="335.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (4 samples, 0.02%)</title><rect x="332.5" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="335.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="332.5" y="339.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="335.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (4 samples, 0.02%)</title><rect x="332.5" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="335.5" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="332.5" y="307.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.02%)</title><rect x="332.8" y="499.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="335.8" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.02%)</title><rect x="332.8" y="483.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="335.8" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.02%)</title><rect x="332.8" y="467.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="335.8" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.02%)</title><rect x="332.8" y="451.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="335.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="332.8" y="435.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="335.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="332.8" y="419.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="335.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (108 samples, 0.59%)</title><rect x="333.0" y="595.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="336.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.02%)</title><rect x="333.1" y="579.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="336.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (30 samples, 0.16%)</title><rect x="333.7" y="579.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="336.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (28 samples, 0.15%)</title><rect x="333.8" y="563.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="336.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (28 samples, 0.15%)</title><rect x="333.8" y="547.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="336.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (24 samples, 0.13%)</title><rect x="333.8" y="531.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="336.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (24 samples, 0.13%)</title><rect x="333.8" y="515.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="336.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 0.13%)</title><rect x="333.8" y="499.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="336.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 0.13%)</title><rect x="333.8" y="483.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="336.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 0.13%)</title><rect x="333.8" y="467.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="336.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (24 samples, 0.13%)</title><rect x="333.8" y="451.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="336.8" y="462.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.02%)</title><rect x="333.9" y="435.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="336.9" y="446.0"></text>
</g>
<g>
<title>__pthread_cond_signal (18 samples, 0.10%)</title><rect x="334.1" y="435.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="337.1" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.08%)</title><rect x="334.3" y="419.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="337.3" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.08%)</title><rect x="334.3" y="403.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="337.3" y="414.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.07%)</title><rect x="334.4" y="387.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="337.4" y="398.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.07%)</title><rect x="334.4" y="371.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="337.4" y="382.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.07%)</title><rect x="334.4" y="355.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="337.4" y="366.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.05%)</title><rect x="334.6" y="339.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="337.6" y="350.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.05%)</title><rect x="334.6" y="323.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="337.6" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.05%)</title><rect x="334.6" y="307.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="337.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.02%)</title><rect x="335.3" y="531.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (65 samples, 0.36%)</title><rect x="335.6" y="579.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="338.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (65 samples, 0.36%)</title><rect x="335.6" y="563.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (45 samples, 0.25%)</title><rect x="335.6" y="547.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="338.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.02%)</title><rect x="335.6" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (38 samples, 0.21%)</title><rect x="336.1" y="531.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="339.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (38 samples, 0.21%)</title><rect x="336.1" y="515.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.1" y="526.0"></text>
</g>
<g>
<title>Unsafe_Park (23 samples, 0.13%)</title><rect x="336.1" y="499.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="339.1" y="510.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.02%)</title><rect x="336.2" y="483.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="339.2" y="494.0"></text>
</g>
<g>
<title>__lll_unlock_wake (16 samples, 0.09%)</title><rect x="336.5" y="483.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="339.5" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="336.8" y="467.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="339.8" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="336.8" y="451.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="339.8" y="462.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.08%)</title><rect x="337.5" y="499.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="340.5" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_wait (10 samples, 0.05%)</title><rect x="337.6" y="483.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="340.6" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="337.7" y="467.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="340.7" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="337.7" y="451.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="340.7" y="462.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="337.9" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="340.9" y="446.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="337.9" y="419.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="340.9" y="430.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.03%)</title><rect x="337.9" y="403.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="340.9" y="414.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.02%)</title><rect x="337.9" y="387.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="340.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (17 samples, 0.09%)</title><rect x="338.7" y="547.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="341.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.09%)</title><rect x="338.7" y="531.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="341.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (17 samples, 0.09%)</title><rect x="338.7" y="515.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="341.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.09%)</title><rect x="338.7" y="499.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="341.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.09%)</title><rect x="338.7" y="483.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="341.7" y="494.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 0.08%)</title><rect x="338.9" y="467.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="341.9" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.07%)</title><rect x="339.0" y="451.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="342.0" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.07%)</title><rect x="339.0" y="435.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="342.0" y="446.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.06%)</title><rect x="339.1" y="419.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="342.1" y="430.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.06%)</title><rect x="339.1" y="403.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="342.1" y="414.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.06%)</title><rect x="339.1" y="387.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="342.1" y="398.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.06%)</title><rect x="339.1" y="371.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="342.1" y="382.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.06%)</title><rect x="339.1" y="355.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="342.1" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.06%)</title><rect x="339.1" y="339.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="342.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.from (4 samples, 0.02%)</title><rect x="340.0" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="343.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.merge (4 samples, 0.02%)</title><rect x="340.3" y="595.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="343.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (12 samples, 0.07%)</title><rect x="340.7" y="595.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="343.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (10 samples, 0.05%)</title><rect x="340.8" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="343.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (8 samples, 0.04%)</title><rect x="340.8" y="563.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="343.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (5 samples, 0.03%)</title><rect x="340.8" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="343.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (135 samples, 0.74%)</title><rect x="341.5" y="643.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="344.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (135 samples, 0.74%)</title><rect x="341.5" y="627.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="344.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (131 samples, 0.72%)</title><rect x="341.7" y="611.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="344.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.02%)</title><rect x="341.7" y="595.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="344.7" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (127 samples, 0.70%)</title><rect x="341.9" y="595.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="344.9" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (127 samples, 0.70%)</title><rect x="341.9" y="579.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="344.9" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (124 samples, 0.68%)</title><rect x="342.1" y="563.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="345.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (122 samples, 0.67%)</title><rect x="342.2" y="547.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="345.2" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (120 samples, 0.66%)</title><rect x="342.2" y="531.0" width="7.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="345.2" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (116 samples, 0.63%)</title><rect x="342.4" y="515.0" width="7.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="345.4" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (116 samples, 0.63%)</title><rect x="342.4" y="499.0" width="7.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="345.4" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (114 samples, 0.62%)</title><rect x="342.6" y="483.0" width="7.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="345.6" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (114 samples, 0.62%)</title><rect x="342.6" y="467.0" width="7.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="345.6" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (109 samples, 0.60%)</title><rect x="342.6" y="451.0" width="7.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="345.6" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (108 samples, 0.59%)</title><rect x="342.7" y="435.0" width="7.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="345.7" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (107 samples, 0.59%)</title><rect x="342.8" y="419.0" width="6.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="345.8" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (98 samples, 0.54%)</title><rect x="342.9" y="403.0" width="6.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="345.9" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (98 samples, 0.54%)</title><rect x="342.9" y="387.0" width="6.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="345.9" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (90 samples, 0.49%)</title><rect x="343.0" y="371.0" width="5.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="346.0" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (85 samples, 0.47%)</title><rect x="343.3" y="355.0" width="5.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="346.3" y="366.0"></text>
</g>
<g>
<title>ip_local_out (16 samples, 0.09%)</title><rect x="343.3" y="339.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="346.3" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (16 samples, 0.09%)</title><rect x="343.3" y="323.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="346.3" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.08%)</title><rect x="343.4" y="307.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="346.4" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="343.4" y="291.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="346.4" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (5 samples, 0.03%)</title><rect x="343.9" y="291.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="346.9" y="302.0"></text>
</g>
<g>
<title>ip_output (69 samples, 0.38%)</title><rect x="344.3" y="339.0" width="4.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="347.3" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (65 samples, 0.36%)</title><rect x="344.4" y="323.0" width="4.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="347.4" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (58 samples, 0.32%)</title><rect x="344.8" y="307.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="347.8" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (58 samples, 0.32%)</title><rect x="344.8" y="291.0" width="3.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="347.8" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (55 samples, 0.30%)</title><rect x="345.0" y="275.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="348.0" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (55 samples, 0.30%)</title><rect x="345.0" y="259.0" width="3.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="348.0" y="270.0"></text>
</g>
<g>
<title>net_rx_action (55 samples, 0.30%)</title><rect x="345.0" y="243.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="348.0" y="254.0"></text>
</g>
<g>
<title>process_backlog (55 samples, 0.30%)</title><rect x="345.0" y="227.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="348.0" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (53 samples, 0.29%)</title><rect x="345.2" y="211.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="348.2" y="222.0"></text>
</g>
<g>
<title>ip_rcv (51 samples, 0.28%)</title><rect x="345.3" y="195.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="348.3" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (41 samples, 0.22%)</title><rect x="345.4" y="179.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="348.4" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (37 samples, 0.20%)</title><rect x="345.4" y="163.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="348.4" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (37 samples, 0.20%)</title><rect x="345.4" y="147.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="348.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (36 samples, 0.20%)</title><rect x="345.4" y="131.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="348.4" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (34 samples, 0.19%)</title><rect x="345.5" y="115.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="348.5" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (34 samples, 0.19%)</title><rect x="345.5" y="99.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="348.5" y="110.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.03%)</title><rect x="345.5" y="83.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="348.5" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (24 samples, 0.13%)</title><rect x="346.1" y="83.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="349.1" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (22 samples, 0.12%)</title><rect x="346.1" y="67.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="349.1" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (20 samples, 0.11%)</title><rect x="346.3" y="51.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="349.3" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.11%)</title><rect x="346.3" y="35.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="349.3" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="347.7" y="163.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="350.7" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.04%)</title><rect x="348.1" y="179.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="351.1" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.03%)</title><rect x="348.2" y="163.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="351.2" y="174.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.03%)</title><rect x="349.2" y="403.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="352.2" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.03%)</title><rect x="349.2" y="387.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="352.2" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.03%)</title><rect x="349.3" y="371.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="352.3" y="382.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.02%)</title><rect x="349.7" y="451.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="352.7" y="462.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.02%)</title><rect x="349.7" y="435.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="352.7" y="446.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.02%)</title><rect x="349.7" y="419.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="352.7" y="430.0"></text>
</g>
<g>
<title>[worker-0 tid=25857] (902 samples, 4.94%)</title><rect x="350.2" y="739.0" width="58.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="353.2" y="750.0">[worke..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.03%)</title><rect x="350.3" y="723.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="353.3" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.02%)</title><rect x="350.3" y="707.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="353.3" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.02%)</title><rect x="350.3" y="691.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="353.3" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.02%)</title><rect x="350.3" y="675.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="353.3" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.02%)</title><rect x="350.3" y="659.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="353.3" y="670.0"></text>
</g>
<g>
<title>[unknown_Java] (54 samples, 0.30%)</title><rect x="350.6" y="723.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="353.6" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (841 samples, 4.60%)</title><rect x="354.1" y="723.0" width="54.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="357.1" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (841 samples, 4.60%)</title><rect x="354.1" y="707.0" width="54.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="357.1" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (841 samples, 4.60%)</title><rect x="354.1" y="691.0" width="54.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.1" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (39 samples, 0.21%)</title><rect x="354.4" y="675.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="357.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (37 samples, 0.20%)</title><rect x="354.5" y="659.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="357.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (32 samples, 0.18%)</title><rect x="354.5" y="643.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="357.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (4 samples, 0.02%)</title><rect x="354.8" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="357.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.02%)</title><rect x="354.8" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="357.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (23 samples, 0.13%)</title><rect x="355.1" y="627.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (23 samples, 0.13%)</title><rect x="355.1" y="611.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.1" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (12 samples, 0.07%)</title><rect x="355.2" y="595.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="358.2" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.03%)</title><rect x="355.4" y="579.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="358.4" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="355.4" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="358.4" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="355.4" y="547.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="358.4" y="558.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.05%)</title><rect x="355.9" y="595.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="358.9" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.03%)</title><rect x="356.1" y="579.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="359.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (798 samples, 4.37%)</title><rect x="356.9" y="675.0" width="51.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="359.9" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (798 samples, 4.37%)</title><rect x="356.9" y="659.0" width="51.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="359.9" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (681 samples, 3.73%)</title><rect x="357.0" y="643.0" width="44.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.0" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (681 samples, 3.73%)</title><rect x="357.0" y="627.0" width="44.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="360.0" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (681 samples, 3.73%)</title><rect x="357.0" y="611.0" width="44.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="360.0" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (678 samples, 3.71%)</title><rect x="357.1" y="595.0" width="43.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="360.1" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (59 samples, 0.32%)</title><rect x="357.1" y="579.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="360.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (47 samples, 0.26%)</title><rect x="357.2" y="563.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="360.2" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (34 samples, 0.19%)</title><rect x="357.3" y="547.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="360.3" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (34 samples, 0.19%)</title><rect x="357.3" y="531.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="360.3" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (34 samples, 0.19%)</title><rect x="357.3" y="515.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="360.3" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (33 samples, 0.18%)</title><rect x="357.4" y="499.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="360.4" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (33 samples, 0.18%)</title><rect x="357.4" y="483.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="360.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (30 samples, 0.16%)</title><rect x="357.6" y="467.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="360.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (30 samples, 0.16%)</title><rect x="357.6" y="451.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="360.6" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (30 samples, 0.16%)</title><rect x="357.6" y="435.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="360.6" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (29 samples, 0.16%)</title><rect x="357.6" y="419.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="360.6" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (29 samples, 0.16%)</title><rect x="357.6" y="403.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="360.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (28 samples, 0.15%)</title><rect x="357.7" y="387.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="360.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (24 samples, 0.13%)</title><rect x="357.9" y="371.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="360.9" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (24 samples, 0.13%)</title><rect x="357.9" y="355.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="360.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.07%)</title><rect x="358.1" y="339.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="361.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.07%)</title><rect x="358.1" y="323.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="361.1" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.05%)</title><rect x="358.3" y="307.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="361.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (9 samples, 0.05%)</title><rect x="358.9" y="339.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="361.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (8 samples, 0.04%)</title><rect x="359.0" y="323.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="362.0" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (8 samples, 0.04%)</title><rect x="359.0" y="307.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="362.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (8 samples, 0.04%)</title><rect x="359.0" y="291.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="362.0" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.04%)</title><rect x="359.0" y="275.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="362.0" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="359.0" y="259.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="362.0" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="359.0" y="243.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="362.0" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="359.0" y="227.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.0" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="359.0" y="211.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="362.0" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="359.2" y="195.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="362.2" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (12 samples, 0.07%)</title><rect x="359.5" y="547.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="362.5" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (12 samples, 0.07%)</title><rect x="359.5" y="531.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="362.5" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (12 samples, 0.07%)</title><rect x="359.5" y="515.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="362.5" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (12 samples, 0.07%)</title><rect x="359.5" y="499.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="362.5" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.07%)</title><rect x="359.5" y="483.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="362.5" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.07%)</title><rect x="359.5" y="467.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="362.5" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.02%)</title><rect x="359.5" y="451.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="362.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4 samples, 0.02%)</title><rect x="359.5" y="435.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="362.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4 samples, 0.02%)</title><rect x="359.5" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="362.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4 samples, 0.02%)</title><rect x="359.5" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="362.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (8 samples, 0.04%)</title><rect x="359.8" y="451.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="362.8" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (8 samples, 0.04%)</title><rect x="359.8" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="362.8" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (8 samples, 0.04%)</title><rect x="359.8" y="419.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="362.8" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.04%)</title><rect x="359.8" y="403.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="362.8" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (6 samples, 0.03%)</title><rect x="359.9" y="387.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="362.9" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (6 samples, 0.03%)</title><rect x="359.9" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="362.9" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (5 samples, 0.03%)</title><rect x="360.0" y="355.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="363.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="360.0" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="363.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$73/502264873.apply (7 samples, 0.04%)</title><rect x="360.5" y="563.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="363.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (6 samples, 0.03%)</title><rect x="360.5" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="363.5" y="558.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="360.5" y="531.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="363.5" y="542.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.03%)</title><rect x="360.5" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="363.5" y="526.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.03%)</title><rect x="360.5" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="363.5" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="360.5" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="363.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (619 samples, 3.39%)</title><rect x="360.9" y="579.0" width="40.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="363.9" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (524 samples, 2.87%)</title><rect x="360.9" y="563.0" width="33.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.9" y="574.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (22 samples, 0.12%)</title><rect x="361.1" y="547.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="364.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (22 samples, 0.12%)</title><rect x="361.1" y="531.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="364.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (21 samples, 0.11%)</title><rect x="361.2" y="515.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="364.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (21 samples, 0.11%)</title><rect x="361.2" y="499.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="364.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 0.04%)</title><rect x="361.8" y="483.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="364.8" y="494.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (7 samples, 0.04%)</title><rect x="361.9" y="467.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="364.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (14 samples, 0.08%)</title><rect x="362.7" y="547.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="365.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (4 samples, 0.02%)</title><rect x="362.8" y="531.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="365.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (8 samples, 0.04%)</title><rect x="363.1" y="531.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="366.1" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 0.02%)</title><rect x="363.1" y="515.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="366.1" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="363.1" y="499.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="366.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4 samples, 0.02%)</title><rect x="363.3" y="515.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="363.3" y="499.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (483 samples, 2.64%)</title><rect x="363.6" y="547.0" width="31.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="366.6" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (483 samples, 2.64%)</title><rect x="363.6" y="531.0" width="31.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="366.6" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (483 samples, 2.64%)</title><rect x="363.6" y="515.0" width="31.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="366.6" y="526.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (105 samples, 0.57%)</title><rect x="363.8" y="499.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="366.8" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="364.6" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="367.6" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (78 samples, 0.43%)</title><rect x="365.1" y="483.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="368.1" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.02%)</title><rect x="368.5" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="371.5" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.03%)</title><rect x="368.9" y="467.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="371.9" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.02%)</title><rect x="369.1" y="451.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="372.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (12 samples, 0.07%)</title><rect x="369.3" y="467.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="372.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.03%)</title><rect x="370.1" y="483.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="373.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (45 samples, 0.25%)</title><rect x="370.5" y="499.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="373.5" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (25 samples, 0.14%)</title><rect x="370.5" y="483.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="373.5" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (25 samples, 0.14%)</title><rect x="370.5" y="467.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="373.5" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (25 samples, 0.14%)</title><rect x="370.5" y="451.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="373.5" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="370.5" y="435.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="373.5" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="370.5" y="419.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="373.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="370.5" y="403.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="373.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="370.5" y="387.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="373.5" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="370.5" y="371.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="373.5" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="370.5" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="373.5" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="370.7" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="373.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="370.7" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="373.7" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="370.7" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="373.7" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (18 samples, 0.10%)</title><rect x="371.0" y="355.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="374.0" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="371.5" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="374.5" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="371.9" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="374.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="371.9" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="374.9" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="371.9" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="374.9" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (20 samples, 0.11%)</title><rect x="372.2" y="483.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="375.2" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (20 samples, 0.11%)</title><rect x="372.2" y="467.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.2" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="372.2" y="451.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.2" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="372.2" y="435.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="375.2" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="372.2" y="419.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="375.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="372.2" y="403.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="375.2" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="372.2" y="387.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="375.2" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="372.2" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="375.2" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="372.2" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="375.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="372.2" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.2" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (15 samples, 0.08%)</title><rect x="372.5" y="371.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="375.5" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (15 samples, 0.08%)</title><rect x="372.5" y="355.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="375.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.04%)</title><rect x="372.9" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="375.9" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (8 samples, 0.04%)</title><rect x="372.9" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="375.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (330 samples, 1.81%)</title><rect x="373.4" y="499.0" width="21.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="376.4" y="510.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (189 samples, 1.03%)</title><rect x="375.1" y="483.0" width="12.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.1" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (185 samples, 1.01%)</title><rect x="375.4" y="467.0" width="11.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="378.4" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (155 samples, 0.85%)</title><rect x="377.3" y="451.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (155 samples, 0.85%)</title><rect x="377.3" y="435.0" width="10.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="380.3" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (153 samples, 0.84%)</title><rect x="377.5" y="419.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="380.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (145 samples, 0.79%)</title><rect x="378.0" y="403.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="381.0" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (136 samples, 0.74%)</title><rect x="378.6" y="387.0" width="8.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="381.6" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (134 samples, 0.73%)</title><rect x="378.7" y="371.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="381.7" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (42 samples, 0.23%)</title><rect x="383.1" y="355.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.1" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="385.3" y="339.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="385.3" y="323.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="388.3" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.04%)</title><rect x="385.3" y="307.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.3" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (24 samples, 0.13%)</title><rect x="385.8" y="355.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="388.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="386.8" y="339.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="389.8" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="387.1" y="339.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="390.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="387.1" y="323.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.1" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="387.1" y="307.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="390.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (47 samples, 0.26%)</title><rect x="387.3" y="483.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.3" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (46 samples, 0.25%)</title><rect x="387.4" y="467.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="390.4" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (46 samples, 0.25%)</title><rect x="387.4" y="451.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.4" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (46 samples, 0.25%)</title><rect x="387.4" y="435.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.4" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (45 samples, 0.25%)</title><rect x="387.5" y="419.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (45 samples, 0.25%)</title><rect x="387.5" y="403.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="390.5" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (43 samples, 0.24%)</title><rect x="387.5" y="387.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.5" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="387.9" y="371.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.9" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="388.1" y="355.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="388.2" y="339.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="391.2" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="388.2" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="391.2" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (28 samples, 0.15%)</title><rect x="388.5" y="371.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="391.5" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (25 samples, 0.14%)</title><rect x="388.7" y="355.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="391.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="389.5" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="392.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="389.9" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="392.9" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.03%)</title><rect x="389.9" y="323.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="392.9" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (56 samples, 0.31%)</title><rect x="390.4" y="483.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="393.4" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (48 samples, 0.26%)</title><rect x="390.9" y="467.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="393.9" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.05%)</title><rect x="394.0" y="483.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="397.0" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="394.2" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="397.2" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.03%)</title><rect x="394.2" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="397.2" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.03%)</title><rect x="394.2" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (95 samples, 0.52%)</title><rect x="394.8" y="563.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (89 samples, 0.49%)</title><rect x="394.8" y="547.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="397.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (89 samples, 0.49%)</title><rect x="394.8" y="531.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="397.8" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (72 samples, 0.39%)</title><rect x="395.5" y="515.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="398.5" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (72 samples, 0.39%)</title><rect x="395.5" y="499.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (72 samples, 0.39%)</title><rect x="395.5" y="483.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="398.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (72 samples, 0.39%)</title><rect x="395.5" y="467.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="398.5" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (70 samples, 0.38%)</title><rect x="395.7" y="451.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="398.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (70 samples, 0.38%)</title><rect x="395.7" y="435.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="398.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (35 samples, 0.19%)</title><rect x="395.7" y="419.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="398.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.03%)</title><rect x="395.7" y="403.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (29 samples, 0.16%)</title><rect x="396.1" y="403.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (29 samples, 0.16%)</title><rect x="396.1" y="387.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="399.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (29 samples, 0.16%)</title><rect x="396.1" y="371.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="399.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (5 samples, 0.03%)</title><rect x="396.1" y="355.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="399.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (17 samples, 0.09%)</title><rect x="396.4" y="355.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.4" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="396.4" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="399.4" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="396.4" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="399.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (10 samples, 0.05%)</title><rect x="396.7" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="399.7" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (10 samples, 0.05%)</title><rect x="396.7" y="323.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="399.7" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="396.7" y="307.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (5 samples, 0.03%)</title><rect x="397.6" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="400.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (35 samples, 0.19%)</title><rect x="397.9" y="419.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (35 samples, 0.19%)</title><rect x="397.9" y="403.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="400.9" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (35 samples, 0.19%)</title><rect x="397.9" y="387.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="400.9" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (34 samples, 0.19%)</title><rect x="398.0" y="371.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.0" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (34 samples, 0.19%)</title><rect x="398.0" y="355.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="401.0" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (34 samples, 0.19%)</title><rect x="398.0" y="339.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="401.0" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (32 samples, 0.18%)</title><rect x="398.1" y="323.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="401.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (32 samples, 0.18%)</title><rect x="398.1" y="307.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="401.1" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.07%)</title><rect x="398.4" y="291.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="401.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.07%)</title><rect x="398.4" y="275.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="401.4" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.07%)</title><rect x="398.4" y="259.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="401.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (15 samples, 0.08%)</title><rect x="399.2" y="291.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="402.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (11 samples, 0.06%)</title><rect x="399.5" y="275.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.5" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11 samples, 0.06%)</title><rect x="399.5" y="259.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="402.5" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11 samples, 0.06%)</title><rect x="399.5" y="243.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="402.5" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.05%)</title><rect x="399.6" y="227.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="402.6" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (9 samples, 0.05%)</title><rect x="399.6" y="211.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="402.6" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (9 samples, 0.05%)</title><rect x="399.6" y="195.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="402.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.05%)</title><rect x="399.6" y="179.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="402.6" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.05%)</title><rect x="399.6" y="163.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="402.6" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="399.9" y="147.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.9" y="158.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="399.9" y="131.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.hasNext (4 samples, 0.02%)</title><rect x="400.3" y="515.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="403.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.03%)</title><rect x="400.5" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="403.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.03%)</title><rect x="400.5" y="531.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="403.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.03%)</title><rect x="400.5" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="403.5" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (6 samples, 0.03%)</title><rect x="400.5" y="499.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="403.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (6 samples, 0.03%)</title><rect x="400.5" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="403.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5 samples, 0.03%)</title><rect x="400.6" y="467.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="403.6" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="400.6" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="403.6" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="400.6" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="403.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (5 samples, 0.03%)</title><rect x="400.6" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="403.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (5 samples, 0.03%)</title><rect x="400.6" y="403.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="403.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (5 samples, 0.03%)</title><rect x="400.6" y="387.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="403.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.03%)</title><rect x="400.6" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="403.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (5 samples, 0.03%)</title><rect x="400.6" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="403.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.03%)</title><rect x="400.6" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="403.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (5 samples, 0.03%)</title><rect x="400.6" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="403.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (5 samples, 0.03%)</title><rect x="400.6" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="403.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (115 samples, 0.63%)</title><rect x="401.0" y="643.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="404.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (115 samples, 0.63%)</title><rect x="401.0" y="627.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="404.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (112 samples, 0.61%)</title><rect x="401.2" y="611.0" width="7.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="404.2" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (109 samples, 0.60%)</title><rect x="401.4" y="595.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="404.4" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (109 samples, 0.60%)</title><rect x="401.4" y="579.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="404.4" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (109 samples, 0.60%)</title><rect x="401.4" y="563.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="404.4" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (107 samples, 0.59%)</title><rect x="401.5" y="547.0" width="6.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="404.5" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (104 samples, 0.57%)</title><rect x="401.5" y="531.0" width="6.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="404.5" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (98 samples, 0.54%)</title><rect x="401.9" y="515.0" width="6.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="404.9" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (98 samples, 0.54%)</title><rect x="401.9" y="499.0" width="6.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="404.9" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (96 samples, 0.53%)</title><rect x="402.0" y="483.0" width="6.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="405.0" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (96 samples, 0.53%)</title><rect x="402.0" y="467.0" width="6.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="405.0" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (95 samples, 0.52%)</title><rect x="402.0" y="451.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="405.0" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (94 samples, 0.51%)</title><rect x="402.1" y="435.0" width="6.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="405.1" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (94 samples, 0.51%)</title><rect x="402.1" y="419.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="405.1" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (87 samples, 0.48%)</title><rect x="402.1" y="403.0" width="5.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="405.1" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (87 samples, 0.48%)</title><rect x="402.1" y="387.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="405.1" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (85 samples, 0.47%)</title><rect x="402.1" y="371.0" width="5.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="405.1" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (81 samples, 0.44%)</title><rect x="402.2" y="355.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="405.2" y="366.0"></text>
</g>
<g>
<title>ip_local_out (19 samples, 0.10%)</title><rect x="402.4" y="339.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="405.4" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (19 samples, 0.10%)</title><rect x="402.4" y="323.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="405.4" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (19 samples, 0.10%)</title><rect x="402.4" y="307.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="405.4" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="402.4" y="291.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="405.4" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (4 samples, 0.02%)</title><rect x="403.2" y="291.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="406.2" y="302.0"></text>
</g>
<g>
<title>ip_output (59 samples, 0.32%)</title><rect x="403.6" y="339.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="406.6" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (54 samples, 0.30%)</title><rect x="403.7" y="323.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="406.7" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (51 samples, 0.28%)</title><rect x="403.9" y="307.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="406.9" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (51 samples, 0.28%)</title><rect x="403.9" y="291.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="406.9" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (50 samples, 0.27%)</title><rect x="403.9" y="275.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="406.9" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (50 samples, 0.27%)</title><rect x="403.9" y="259.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="406.9" y="270.0"></text>
</g>
<g>
<title>net_rx_action (49 samples, 0.27%)</title><rect x="404.0" y="243.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="407.0" y="254.0"></text>
</g>
<g>
<title>process_backlog (48 samples, 0.26%)</title><rect x="404.1" y="227.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="407.1" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (48 samples, 0.26%)</title><rect x="404.1" y="211.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="407.1" y="222.0"></text>
</g>
<g>
<title>ip_rcv (48 samples, 0.26%)</title><rect x="404.1" y="195.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="407.1" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (37 samples, 0.20%)</title><rect x="404.2" y="179.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="407.2" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (29 samples, 0.16%)</title><rect x="404.2" y="163.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="407.2" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (29 samples, 0.16%)</title><rect x="404.2" y="147.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="407.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (28 samples, 0.15%)</title><rect x="404.3" y="131.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="407.3" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (25 samples, 0.14%)</title><rect x="404.5" y="115.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="407.5" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (25 samples, 0.14%)</title><rect x="404.5" y="99.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="407.5" y="110.0"></text>
</g>
<g>
<title>tcp_ack (7 samples, 0.04%)</title><rect x="404.6" y="83.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="407.6" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (14 samples, 0.08%)</title><rect x="405.2" y="83.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="408.2" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (11 samples, 0.06%)</title><rect x="405.2" y="67.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="408.2" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (9 samples, 0.05%)</title><rect x="405.3" y="51.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="408.3" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.05%)</title><rect x="405.3" y="35.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="408.3" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.04%)</title><rect x="406.1" y="163.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="409.1" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.03%)</title><rect x="406.1" y="147.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="409.1" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.04%)</title><rect x="406.6" y="179.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="409.6" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.04%)</title><rect x="406.6" y="163.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="409.6" y="174.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.03%)</title><rect x="407.7" y="403.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="410.7" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.03%)</title><rect x="407.7" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="410.7" y="398.0"></text>
</g>
<g>
<title>[worker-0 tid=25862] (908 samples, 4.97%)</title><rect x="408.5" y="739.0" width="58.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="411.5" y="750.0">[worke..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (12 samples, 0.07%)</title><rect x="408.5" y="723.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="411.5" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (10 samples, 0.05%)</title><rect x="408.7" y="707.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="411.7" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (9 samples, 0.05%)</title><rect x="408.7" y="691.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="411.7" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.04%)</title><rect x="408.7" y="675.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="411.7" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (7 samples, 0.04%)</title><rect x="408.7" y="659.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="411.7" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (4 samples, 0.02%)</title><rect x="408.8" y="643.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="411.8" y="654.0"></text>
</g>
<g>
<title>[unknown_Java] (41 samples, 0.22%)</title><rect x="409.3" y="723.0" width="2.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="412.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (854 samples, 4.67%)</title><rect x="411.9" y="723.0" width="55.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="414.9" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (854 samples, 4.67%)</title><rect x="411.9" y="707.0" width="55.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="414.9" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (854 samples, 4.67%)</title><rect x="411.9" y="691.0" width="55.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="414.9" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (41 samples, 0.22%)</title><rect x="412.1" y="675.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="415.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (40 samples, 0.22%)</title><rect x="412.2" y="659.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="415.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (31 samples, 0.17%)</title><rect x="412.2" y="643.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="415.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (7 samples, 0.04%)</title><rect x="412.3" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="415.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.04%)</title><rect x="412.3" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="415.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.04%)</title><rect x="412.3" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="415.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.04%)</title><rect x="412.3" y="579.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="415.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.04%)</title><rect x="412.3" y="563.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="415.3" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.03%)</title><rect x="412.3" y="547.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="415.3" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="412.5" y="531.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="415.5" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="412.5" y="515.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="415.5" y="526.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="412.5" y="499.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="415.5" y="510.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="412.5" y="483.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="415.5" y="494.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="412.5" y="467.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="415.5" y="478.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.02%)</title><rect x="412.5" y="451.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="415.5" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="412.5" y="435.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="415.5" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.02%)</title><rect x="412.5" y="419.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="415.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (23 samples, 0.13%)</title><rect x="412.7" y="627.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="415.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (23 samples, 0.13%)</title><rect x="412.7" y="611.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="415.7" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (13 samples, 0.07%)</title><rect x="412.7" y="595.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="415.7" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.04%)</title><rect x="413.0" y="579.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="416.0" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="413.2" y="563.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="416.2" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="413.2" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="416.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.05%)</title><rect x="413.6" y="595.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="416.6" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.04%)</title><rect x="413.6" y="579.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="416.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.02%)</title><rect x="414.2" y="643.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.02%)</title><rect x="414.2" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.03%)</title><rect x="414.5" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.03%)</title><rect x="414.5" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.03%)</title><rect x="414.5" y="611.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.03%)</title><rect x="414.5" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.03%)</title><rect x="414.5" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.5" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.02%)</title><rect x="414.5" y="563.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="417.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (810 samples, 4.43%)</title><rect x="414.8" y="675.0" width="52.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.8" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (810 samples, 4.43%)</title><rect x="414.8" y="659.0" width="52.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.8" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (690 samples, 3.78%)</title><rect x="414.8" y="643.0" width="44.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.8" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (690 samples, 3.78%)</title><rect x="414.8" y="627.0" width="44.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.8" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (689 samples, 3.77%)</title><rect x="414.9" y="611.0" width="44.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.9" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (686 samples, 3.75%)</title><rect x="414.9" y="595.0" width="44.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="417.9" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (40 samples, 0.22%)</title><rect x="415.0" y="579.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (35 samples, 0.19%)</title><rect x="415.1" y="563.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.1" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (22 samples, 0.12%)</title><rect x="415.1" y="547.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="418.1" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (22 samples, 0.12%)</title><rect x="415.1" y="531.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="418.1" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (21 samples, 0.11%)</title><rect x="415.2" y="515.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="418.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 0.11%)</title><rect x="415.2" y="499.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="418.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (21 samples, 0.11%)</title><rect x="415.2" y="483.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="418.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (21 samples, 0.11%)</title><rect x="415.2" y="467.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="418.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (21 samples, 0.11%)</title><rect x="415.2" y="451.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.2" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (21 samples, 0.11%)</title><rect x="415.2" y="435.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="418.2" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (18 samples, 0.10%)</title><rect x="415.4" y="419.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="418.4" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (18 samples, 0.10%)</title><rect x="415.4" y="403.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="418.4" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (17 samples, 0.09%)</title><rect x="415.4" y="387.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="418.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (16 samples, 0.09%)</title><rect x="415.5" y="371.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="418.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (16 samples, 0.09%)</title><rect x="415.5" y="355.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="418.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="415.6" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="418.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="415.6" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="418.6" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.04%)</title><rect x="415.6" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="418.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (8 samples, 0.04%)</title><rect x="416.0" y="339.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (8 samples, 0.04%)</title><rect x="416.0" y="323.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="419.0" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (8 samples, 0.04%)</title><rect x="416.0" y="307.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="419.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (8 samples, 0.04%)</title><rect x="416.0" y="291.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="419.0" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.04%)</title><rect x="416.0" y="275.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="419.0" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="416.0" y="259.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="419.0" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="416.0" y="243.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="419.0" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="416.0" y="227.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="419.0" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="416.0" y="211.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="419.0" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (13 samples, 0.07%)</title><rect x="416.5" y="547.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="419.5" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (13 samples, 0.07%)</title><rect x="416.5" y="531.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="419.5" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (13 samples, 0.07%)</title><rect x="416.5" y="515.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="419.5" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (13 samples, 0.07%)</title><rect x="416.5" y="499.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.5" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.07%)</title><rect x="416.6" y="483.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="419.6" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 0.07%)</title><rect x="416.6" y="467.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="419.6" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.03%)</title><rect x="416.6" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="419.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (6 samples, 0.03%)</title><rect x="416.6" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="419.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (6 samples, 0.03%)</title><rect x="416.6" y="419.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="419.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (6 samples, 0.03%)</title><rect x="416.6" y="403.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="419.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (4 samples, 0.02%)</title><rect x="416.7" y="387.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="419.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (6 samples, 0.03%)</title><rect x="417.0" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="420.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (6 samples, 0.03%)</title><rect x="417.0" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="420.0" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (6 samples, 0.03%)</title><rect x="417.0" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="420.0" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (6 samples, 0.03%)</title><rect x="417.0" y="403.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.0" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (6 samples, 0.03%)</title><rect x="417.0" y="387.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="420.0" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (6 samples, 0.03%)</title><rect x="417.0" y="371.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="420.0" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (4 samples, 0.02%)</title><rect x="417.1" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="420.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="417.1" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="420.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (643 samples, 3.52%)</title><rect x="417.6" y="579.0" width="41.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="420.6" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (548 samples, 3.00%)</title><rect x="417.6" y="563.0" width="35.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.6" y="574.0">ru/..</text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.03%)</title><rect x="417.8" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.03%)</title><rect x="417.8" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="420.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.03%)</title><rect x="417.8" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="420.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (20 samples, 0.11%)</title><rect x="418.1" y="547.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="421.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (20 samples, 0.11%)</title><rect x="418.1" y="531.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="421.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (19 samples, 0.10%)</title><rect x="418.2" y="515.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="421.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (18 samples, 0.10%)</title><rect x="418.3" y="499.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.03%)</title><rect x="418.7" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="421.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (6 samples, 0.03%)</title><rect x="419.1" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.03%)</title><rect x="419.1" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="422.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (19 samples, 0.10%)</title><rect x="419.5" y="547.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="422.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (11 samples, 0.06%)</title><rect x="419.7" y="531.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="422.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (8 samples, 0.04%)</title><rect x="419.8" y="515.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="422.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.04%)</title><rect x="419.8" y="499.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="422.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (8 samples, 0.04%)</title><rect x="419.8" y="483.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="422.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (7 samples, 0.04%)</title><rect x="419.9" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (7 samples, 0.04%)</title><rect x="419.9" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (7 samples, 0.04%)</title><rect x="419.9" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="422.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (6 samples, 0.03%)</title><rect x="420.0" y="419.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="423.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.02%)</title><rect x="420.1" y="403.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="423.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (5 samples, 0.03%)</title><rect x="420.4" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="423.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4 samples, 0.02%)</title><rect x="420.5" y="515.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="423.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="420.5" y="499.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (500 samples, 2.74%)</title><rect x="420.7" y="547.0" width="32.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="423.7" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (500 samples, 2.74%)</title><rect x="420.7" y="531.0" width="32.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="423.7" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (500 samples, 2.74%)</title><rect x="420.7" y="515.0" width="32.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="423.7" y="526.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (103 samples, 0.56%)</title><rect x="421.1" y="499.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.1" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (89 samples, 0.49%)</title><rect x="421.8" y="483.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="424.8" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.03%)</title><rect x="426.0" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="429.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (4 samples, 0.02%)</title><rect x="426.1" y="451.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="429.1" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.base (4 samples, 0.02%)</title><rect x="426.3" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.3" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (9 samples, 0.05%)</title><rect x="426.6" y="467.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="429.6" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (6 samples, 0.03%)</title><rect x="426.6" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="429.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (5 samples, 0.03%)</title><rect x="427.2" y="467.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (44 samples, 0.24%)</title><rect x="427.8" y="499.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="430.8" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (29 samples, 0.16%)</title><rect x="427.8" y="483.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.8" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (29 samples, 0.16%)</title><rect x="427.8" y="467.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="430.8" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (29 samples, 0.16%)</title><rect x="427.8" y="451.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.8" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (29 samples, 0.16%)</title><rect x="427.8" y="435.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="430.8" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (29 samples, 0.16%)</title><rect x="427.8" y="419.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="430.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (29 samples, 0.16%)</title><rect x="427.8" y="403.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="430.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (29 samples, 0.16%)</title><rect x="427.8" y="387.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.8" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (29 samples, 0.16%)</title><rect x="427.8" y="371.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.8" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (12 samples, 0.07%)</title><rect x="427.8" y="355.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="428.0" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="431.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.04%)</title><rect x="428.0" y="323.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="431.0" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.04%)</title><rect x="428.0" y="307.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="431.0" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (17 samples, 0.09%)</title><rect x="428.5" y="355.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="431.5" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="428.9" y="339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="431.9" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (15 samples, 0.08%)</title><rect x="429.6" y="483.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="432.6" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (15 samples, 0.08%)</title><rect x="429.6" y="467.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.6" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (15 samples, 0.08%)</title><rect x="429.6" y="451.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="432.6" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (15 samples, 0.08%)</title><rect x="429.6" y="435.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.6" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (15 samples, 0.08%)</title><rect x="429.6" y="419.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="432.6" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (15 samples, 0.08%)</title><rect x="429.6" y="403.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="432.6" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (15 samples, 0.08%)</title><rect x="429.6" y="387.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.6" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="429.6" y="371.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="432.6" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="429.6" y="355.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="432.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="429.7" y="339.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="432.7" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.04%)</title><rect x="429.7" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="432.7" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (7 samples, 0.04%)</title><rect x="430.2" y="371.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="433.2" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (7 samples, 0.04%)</title><rect x="430.2" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="433.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (347 samples, 1.90%)</title><rect x="430.6" y="499.0" width="22.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="433.6" y="510.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (212 samples, 1.16%)</title><rect x="432.0" y="483.0" width="13.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (206 samples, 1.13%)</title><rect x="432.4" y="467.0" width="13.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="435.4" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (170 samples, 0.93%)</title><rect x="434.7" y="451.0" width="11.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="437.7" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (169 samples, 0.93%)</title><rect x="434.8" y="435.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="437.8" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (164 samples, 0.90%)</title><rect x="435.1" y="419.0" width="10.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.1" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (163 samples, 0.89%)</title><rect x="435.2" y="403.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="438.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (158 samples, 0.86%)</title><rect x="435.5" y="387.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="438.5" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (155 samples, 0.85%)</title><rect x="435.7" y="371.0" width="10.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="438.7" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (46 samples, 0.25%)</title><rect x="440.9" y="355.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="443.9" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="443.6" y="339.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="446.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="443.6" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.6" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="443.6" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="446.6" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (28 samples, 0.15%)</title><rect x="443.9" y="355.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="446.9" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="444.9" y="339.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="447.9" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.04%)</title><rect x="445.1" y="339.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="448.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.04%)</title><rect x="445.1" y="323.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="448.1" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (8 samples, 0.04%)</title><rect x="445.1" y="307.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="448.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (35 samples, 0.19%)</title><rect x="445.7" y="483.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="448.7" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (35 samples, 0.19%)</title><rect x="445.7" y="467.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="448.7" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (35 samples, 0.19%)</title><rect x="445.7" y="451.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="448.7" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (35 samples, 0.19%)</title><rect x="445.7" y="435.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="448.7" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (34 samples, 0.19%)</title><rect x="445.8" y="419.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="448.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (33 samples, 0.18%)</title><rect x="445.9" y="403.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="448.9" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (31 samples, 0.17%)</title><rect x="446.0" y="387.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="449.0" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="446.3" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="449.3" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="446.4" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="449.4" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (19 samples, 0.10%)</title><rect x="446.8" y="371.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.8" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.08%)</title><rect x="447.1" y="355.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="450.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="447.7" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.7" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.03%)</title><rect x="447.7" y="323.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="450.7" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (60 samples, 0.33%)</title><rect x="448.0" y="483.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="451.0" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (47 samples, 0.26%)</title><rect x="448.7" y="467.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="451.7" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (14 samples, 0.08%)</title><rect x="451.9" y="483.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.9" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="452.2" y="467.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="455.2" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.04%)</title><rect x="452.2" y="451.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="455.2" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.04%)</title><rect x="452.2" y="435.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="455.2" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="452.4" y="419.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="455.4" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="452.8" y="483.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="455.8" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="452.8" y="467.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="455.8" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="452.8" y="451.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.8" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="452.8" y="435.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="455.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (95 samples, 0.52%)</title><rect x="453.0" y="563.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="456.0" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (85 samples, 0.47%)</title><rect x="453.0" y="547.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="456.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (85 samples, 0.47%)</title><rect x="453.0" y="531.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (72 samples, 0.39%)</title><rect x="453.7" y="515.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="456.7" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (72 samples, 0.39%)</title><rect x="453.7" y="499.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="456.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (69 samples, 0.38%)</title><rect x="453.9" y="483.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="456.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (69 samples, 0.38%)</title><rect x="453.9" y="467.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="456.9" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (65 samples, 0.36%)</title><rect x="454.2" y="451.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (65 samples, 0.36%)</title><rect x="454.2" y="435.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="457.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (27 samples, 0.15%)</title><rect x="454.2" y="419.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="457.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.03%)</title><rect x="454.2" y="403.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="457.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (22 samples, 0.12%)</title><rect x="454.5" y="403.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="457.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (22 samples, 0.12%)</title><rect x="454.5" y="387.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="457.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (22 samples, 0.12%)</title><rect x="454.5" y="371.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="457.5" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (5 samples, 0.03%)</title><rect x="454.6" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (11 samples, 0.06%)</title><rect x="454.9" y="355.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.9" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (7 samples, 0.04%)</title><rect x="455.2" y="339.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.2" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.04%)</title><rect x="455.2" y="323.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="458.2" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="455.2" y="307.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="458.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (38 samples, 0.21%)</title><rect x="455.9" y="419.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="458.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (38 samples, 0.21%)</title><rect x="455.9" y="403.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="458.9" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (38 samples, 0.21%)</title><rect x="455.9" y="387.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="458.9" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (37 samples, 0.20%)</title><rect x="456.0" y="371.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.0" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (35 samples, 0.19%)</title><rect x="456.1" y="355.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="459.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (33 samples, 0.18%)</title><rect x="456.3" y="339.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="459.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (31 samples, 0.17%)</title><rect x="456.4" y="323.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (30 samples, 0.16%)</title><rect x="456.4" y="307.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="459.4" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.09%)</title><rect x="456.6" y="291.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="459.6" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.08%)</title><rect x="456.7" y="275.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="459.7" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.07%)</title><rect x="456.8" y="259.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="459.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (11 samples, 0.06%)</title><rect x="457.6" y="291.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="460.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (9 samples, 0.05%)</title><rect x="457.7" y="275.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="460.7" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (8 samples, 0.04%)</title><rect x="457.7" y="259.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.7" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (8 samples, 0.04%)</title><rect x="457.7" y="243.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="460.7" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.03%)</title><rect x="457.9" y="227.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.9" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="457.9" y="211.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="460.9" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="457.9" y="195.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="460.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="457.9" y="179.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="460.9" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="457.9" y="163.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="460.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (10 samples, 0.05%)</title><rect x="458.5" y="547.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (10 samples, 0.05%)</title><rect x="458.5" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="461.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.05%)</title><rect x="458.5" y="515.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="461.5" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (6 samples, 0.03%)</title><rect x="458.5" y="499.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (6 samples, 0.03%)</title><rect x="458.5" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (6 samples, 0.03%)</title><rect x="458.5" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="461.5" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="458.6" y="451.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="461.6" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="458.6" y="435.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (4 samples, 0.02%)</title><rect x="458.6" y="419.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="461.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (4 samples, 0.02%)</title><rect x="458.6" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (4 samples, 0.02%)</title><rect x="458.6" y="387.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="461.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="458.6" y="371.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (4 samples, 0.02%)</title><rect x="458.6" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="458.6" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="461.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (4 samples, 0.02%)</title><rect x="458.6" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="458.6" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="461.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.02%)</title><rect x="458.9" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="461.9" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.02%)</title><rect x="458.9" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.02%)</title><rect x="458.9" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.02%)</title><rect x="458.9" y="451.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="461.9" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="458.9" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="461.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="458.9" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (120 samples, 0.66%)</title><rect x="459.4" y="643.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="462.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (120 samples, 0.66%)</title><rect x="459.4" y="627.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="462.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (119 samples, 0.65%)</title><rect x="459.4" y="611.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.02%)</title><rect x="459.4" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.4" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (115 samples, 0.63%)</title><rect x="459.7" y="595.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="462.7" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (115 samples, 0.63%)</title><rect x="459.7" y="579.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="462.7" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (114 samples, 0.62%)</title><rect x="459.7" y="563.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="462.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (113 samples, 0.62%)</title><rect x="459.7" y="547.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="462.7" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (111 samples, 0.61%)</title><rect x="459.7" y="531.0" width="7.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="462.7" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (105 samples, 0.57%)</title><rect x="460.1" y="515.0" width="6.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="463.1" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (105 samples, 0.57%)</title><rect x="460.1" y="499.0" width="6.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="463.1" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (103 samples, 0.56%)</title><rect x="460.2" y="483.0" width="6.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="463.2" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (103 samples, 0.56%)</title><rect x="460.2" y="467.0" width="6.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="463.2" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (101 samples, 0.55%)</title><rect x="460.2" y="451.0" width="6.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="463.2" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (100 samples, 0.55%)</title><rect x="460.3" y="435.0" width="6.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="463.3" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (98 samples, 0.54%)</title><rect x="460.4" y="419.0" width="6.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="463.4" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (87 samples, 0.48%)</title><rect x="460.6" y="403.0" width="5.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="463.6" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (87 samples, 0.48%)</title><rect x="460.6" y="387.0" width="5.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="463.6" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (85 samples, 0.47%)</title><rect x="460.6" y="371.0" width="5.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="463.6" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (79 samples, 0.43%)</title><rect x="460.7" y="355.0" width="5.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="463.7" y="366.0"></text>
</g>
<g>
<title>ip_local_out (17 samples, 0.09%)</title><rect x="460.9" y="339.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="463.9" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (17 samples, 0.09%)</title><rect x="460.9" y="323.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="463.9" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (17 samples, 0.09%)</title><rect x="460.9" y="307.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="463.9" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.03%)</title><rect x="461.0" y="291.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="464.0" y="302.0"></text>
</g>
<g>
<title>ip_output (59 samples, 0.32%)</title><rect x="462.0" y="339.0" width="3.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="465.0" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (58 samples, 0.32%)</title><rect x="462.0" y="323.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="465.0" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.03%)</title><rect x="462.1" y="307.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="465.1" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.03%)</title><rect x="462.1" y="291.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="465.1" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.03%)</title><rect x="462.1" y="275.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="465.1" y="286.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.02%)</title><rect x="462.1" y="259.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="465.1" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.02%)</title><rect x="462.1" y="243.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="465.1" y="254.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (52 samples, 0.28%)</title><rect x="462.4" y="307.0" width="3.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="465.4" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (52 samples, 0.28%)</title><rect x="462.4" y="291.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="465.4" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (50 samples, 0.27%)</title><rect x="462.5" y="275.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="465.5" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (50 samples, 0.27%)</title><rect x="462.5" y="259.0" width="3.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="465.5" y="270.0"></text>
</g>
<g>
<title>net_rx_action (50 samples, 0.27%)</title><rect x="462.5" y="243.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="465.5" y="254.0"></text>
</g>
<g>
<title>process_backlog (48 samples, 0.26%)</title><rect x="462.6" y="227.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="465.6" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (48 samples, 0.26%)</title><rect x="462.6" y="211.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="465.6" y="222.0"></text>
</g>
<g>
<title>ip_rcv (47 samples, 0.26%)</title><rect x="462.7" y="195.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="465.7" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (41 samples, 0.22%)</title><rect x="462.7" y="179.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="465.7" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (34 samples, 0.19%)</title><rect x="462.7" y="163.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="465.7" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (33 samples, 0.18%)</title><rect x="462.8" y="147.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="465.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (32 samples, 0.18%)</title><rect x="462.8" y="131.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="465.8" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (31 samples, 0.17%)</title><rect x="462.9" y="115.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="465.9" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (29 samples, 0.16%)</title><rect x="463.0" y="99.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="466.0" y="110.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.02%)</title><rect x="463.0" y="83.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="466.0" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (24 samples, 0.13%)</title><rect x="463.3" y="83.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="466.3" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (20 samples, 0.11%)</title><rect x="463.4" y="67.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="466.4" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (20 samples, 0.11%)</title><rect x="463.4" y="51.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="466.4" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.11%)</title><rect x="463.4" y="35.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="466.4" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.04%)</title><rect x="464.9" y="163.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="467.9" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.03%)</title><rect x="464.9" y="147.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="467.9" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.03%)</title><rect x="465.4" y="179.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="468.4" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.03%)</title><rect x="465.4" y="163.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="468.4" y="174.0"></text>
</g>
<g>
<title>[worker-1 tid=25861] (902 samples, 4.94%)</title><rect x="467.1" y="739.0" width="58.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="470.1" y="750.0">[worke..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (11 samples, 0.06%)</title><rect x="467.1" y="723.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="470.1" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.04%)</title><rect x="467.2" y="707.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="470.2" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.03%)</title><rect x="467.4" y="691.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="470.4" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="467.4" y="675.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="470.4" y="686.0"></text>
</g>
<g>
<title>[unknown_Java] (39 samples, 0.21%)</title><rect x="467.9" y="723.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="470.9" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (851 samples, 4.66%)</title><rect x="470.4" y="723.0" width="55.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.4" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (851 samples, 4.66%)</title><rect x="470.4" y="707.0" width="55.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="473.4" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (851 samples, 4.66%)</title><rect x="470.4" y="691.0" width="55.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="473.4" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (42 samples, 0.23%)</title><rect x="470.6" y="675.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="473.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (42 samples, 0.23%)</title><rect x="470.6" y="659.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="473.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (35 samples, 0.19%)</title><rect x="470.6" y="643.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="473.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (31 samples, 0.17%)</title><rect x="470.9" y="627.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="473.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (31 samples, 0.17%)</title><rect x="470.9" y="611.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.9" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (17 samples, 0.09%)</title><rect x="470.9" y="595.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="473.9" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.02%)</title><rect x="470.9" y="579.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="473.9" y="590.0"></text>
</g>
<g>
<title>__lll_unlock_wake (11 samples, 0.06%)</title><rect x="471.2" y="579.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="474.2" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="471.3" y="563.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="474.3" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="471.3" y="547.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="474.3" y="558.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.07%)</title><rect x="471.9" y="595.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="474.9" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.04%)</title><rect x="472.1" y="579.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="475.1" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="472.3" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="475.3" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="472.3" y="547.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="475.3" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="472.3" y="531.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="475.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.03%)</title><rect x="473.0" y="643.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="476.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.03%)</title><rect x="473.0" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="476.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.03%)</title><rect x="473.0" y="611.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="476.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.03%)</title><rect x="473.0" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="476.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.03%)</title><rect x="473.0" y="579.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.0" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.02%)</title><rect x="473.0" y="563.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="476.0" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="473.0" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="476.0" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="473.0" y="531.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="476.0" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="473.0" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="476.0" y="526.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="473.0" y="499.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="476.0" y="510.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="473.0" y="483.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="476.0" y="494.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.02%)</title><rect x="473.0" y="467.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="476.0" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="473.0" y="451.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="476.0" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.02%)</title><rect x="473.0" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="476.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (806 samples, 4.41%)</title><rect x="473.3" y="675.0" width="52.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.3" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (806 samples, 4.41%)</title><rect x="473.3" y="659.0" width="52.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="476.3" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (686 samples, 3.75%)</title><rect x="473.3" y="643.0" width="44.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.3" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (686 samples, 3.75%)</title><rect x="473.3" y="627.0" width="44.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="476.3" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (686 samples, 3.75%)</title><rect x="473.3" y="611.0" width="44.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.3" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (681 samples, 3.73%)</title><rect x="473.4" y="595.0" width="44.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="476.4" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (46 samples, 0.25%)</title><rect x="473.4" y="579.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="476.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (44 samples, 0.24%)</title><rect x="473.4" y="563.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="476.4" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (27 samples, 0.15%)</title><rect x="473.4" y="547.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="476.4" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (27 samples, 0.15%)</title><rect x="473.4" y="531.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="476.4" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (25 samples, 0.14%)</title><rect x="473.5" y="515.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (24 samples, 0.13%)</title><rect x="473.6" y="499.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.6" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (24 samples, 0.13%)</title><rect x="473.6" y="483.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (23 samples, 0.13%)</title><rect x="473.6" y="467.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (23 samples, 0.13%)</title><rect x="473.6" y="451.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.6" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (23 samples, 0.13%)</title><rect x="473.6" y="435.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="476.6" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (23 samples, 0.13%)</title><rect x="473.6" y="419.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.6" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (23 samples, 0.13%)</title><rect x="473.6" y="403.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="476.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (22 samples, 0.12%)</title><rect x="473.7" y="387.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (19 samples, 0.10%)</title><rect x="473.9" y="371.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="476.9" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (19 samples, 0.10%)</title><rect x="473.9" y="355.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="474.0" y="339.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="474.0" y="323.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.0" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.03%)</title><rect x="474.1" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="477.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (10 samples, 0.05%)</title><rect x="474.5" y="339.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (9 samples, 0.05%)</title><rect x="474.5" y="323.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="477.5" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (9 samples, 0.05%)</title><rect x="474.5" y="307.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="477.5" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (9 samples, 0.05%)</title><rect x="474.5" y="291.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="477.5" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.04%)</title><rect x="474.7" y="275.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="477.7" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="474.7" y="259.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="477.7" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="474.7" y="243.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="477.7" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="474.7" y="227.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="477.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="474.7" y="211.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="477.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (17 samples, 0.09%)</title><rect x="475.1" y="547.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="478.1" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (17 samples, 0.09%)</title><rect x="475.1" y="531.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="478.1" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (17 samples, 0.09%)</title><rect x="475.1" y="515.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="478.1" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (17 samples, 0.09%)</title><rect x="475.1" y="499.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="478.1" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.09%)</title><rect x="475.1" y="483.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="478.1" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.09%)</title><rect x="475.1" y="467.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7 samples, 0.04%)</title><rect x="475.1" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="478.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (7 samples, 0.04%)</title><rect x="475.1" y="435.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (7 samples, 0.04%)</title><rect x="475.1" y="419.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="478.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (7 samples, 0.04%)</title><rect x="475.1" y="403.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="478.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (4 samples, 0.02%)</title><rect x="475.2" y="387.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (10 samples, 0.05%)</title><rect x="475.6" y="451.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="478.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (10 samples, 0.05%)</title><rect x="475.6" y="435.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="478.6" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (10 samples, 0.05%)</title><rect x="475.6" y="419.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="478.6" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (10 samples, 0.05%)</title><rect x="475.6" y="403.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (9 samples, 0.05%)</title><rect x="475.6" y="387.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="478.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (9 samples, 0.05%)</title><rect x="475.6" y="371.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="478.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (8 samples, 0.04%)</title><rect x="475.7" y="355.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="478.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.04%)</title><rect x="475.8" y="339.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (635 samples, 3.48%)</title><rect x="476.3" y="579.0" width="41.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.3" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (535 samples, 2.93%)</title><rect x="476.4" y="563.0" width="34.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="479.4" y="574.0">ru..</text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.03%)</title><rect x="476.6" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="479.6" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.03%)</title><rect x="476.6" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.6" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="476.7" y="515.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (18 samples, 0.10%)</title><rect x="476.9" y="547.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (18 samples, 0.10%)</title><rect x="476.9" y="531.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="479.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (16 samples, 0.09%)</title><rect x="477.1" y="515.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (16 samples, 0.09%)</title><rect x="477.1" y="499.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="480.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (8 samples, 0.04%)</title><rect x="477.6" y="483.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="480.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (10 samples, 0.05%)</title><rect x="478.2" y="547.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="481.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (6 samples, 0.03%)</title><rect x="478.3" y="531.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (5 samples, 0.03%)</title><rect x="478.3" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="481.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.03%)</title><rect x="478.3" y="499.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (5 samples, 0.03%)</title><rect x="478.3" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.03%)</title><rect x="478.3" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="481.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (5 samples, 0.03%)</title><rect x="478.3" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (5 samples, 0.03%)</title><rect x="478.3" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (4 samples, 0.02%)</title><rect x="478.3" y="419.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.02%)</title><rect x="478.3" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="481.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (497 samples, 2.72%)</title><rect x="478.9" y="547.0" width="32.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.9" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (497 samples, 2.72%)</title><rect x="478.9" y="531.0" width="32.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="481.9" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (497 samples, 2.72%)</title><rect x="478.9" y="515.0" width="32.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.9" y="526.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (79 samples, 0.43%)</title><rect x="479.1" y="499.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.1" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (63 samples, 0.34%)</title><rect x="479.9" y="483.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.9" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.03%)</title><rect x="482.8" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="485.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (9 samples, 0.05%)</title><rect x="483.3" y="467.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (53 samples, 0.29%)</title><rect x="484.2" y="499.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="487.2" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (33 samples, 0.18%)</title><rect x="484.2" y="483.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.2" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (33 samples, 0.18%)</title><rect x="484.2" y="467.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.2" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (33 samples, 0.18%)</title><rect x="484.2" y="451.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="487.2" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (33 samples, 0.18%)</title><rect x="484.2" y="435.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="487.2" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (33 samples, 0.18%)</title><rect x="484.2" y="419.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="487.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (33 samples, 0.18%)</title><rect x="484.2" y="403.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (33 samples, 0.18%)</title><rect x="484.2" y="387.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.2" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (33 samples, 0.18%)</title><rect x="484.2" y="371.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="487.2" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="484.2" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="487.2" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="484.4" y="339.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="487.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="484.4" y="323.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="487.4" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="484.4" y="307.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="487.4" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (26 samples, 0.14%)</title><rect x="484.6" y="355.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="487.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.05%)</title><rect x="485.4" y="339.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="488.4" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (20 samples, 0.11%)</title><rect x="486.3" y="483.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="489.3" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (20 samples, 0.11%)</title><rect x="486.3" y="467.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="486.3" y="451.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="489.3" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="486.3" y="435.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="489.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="486.3" y="419.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="489.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="486.3" y="403.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="489.3" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="486.3" y="387.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="489.3" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="486.3" y="371.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.3" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="486.3" y="355.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="489.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.08%)</title><rect x="486.7" y="371.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.7" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.08%)</title><rect x="486.7" y="355.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="489.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="486.9" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="489.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="487.2" y="339.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.2" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.03%)</title><rect x="487.2" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (362 samples, 1.98%)</title><rect x="487.6" y="499.0" width="23.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.6" y="510.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (224 samples, 1.23%)</title><rect x="488.8" y="483.0" width="14.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.8" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (220 samples, 1.20%)</title><rect x="489.1" y="467.0" width="14.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.1" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (177 samples, 0.97%)</title><rect x="491.8" y="451.0" width="11.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="494.8" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (176 samples, 0.96%)</title><rect x="491.9" y="435.0" width="11.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="494.9" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (168 samples, 0.92%)</title><rect x="492.4" y="419.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="495.4" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (165 samples, 0.90%)</title><rect x="492.6" y="403.0" width="10.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="495.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (159 samples, 0.87%)</title><rect x="493.0" y="387.0" width="10.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="496.0" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (156 samples, 0.85%)</title><rect x="493.2" y="371.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="496.2" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (48 samples, 0.26%)</title><rect x="498.4" y="355.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.4" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (26 samples, 0.14%)</title><rect x="501.5" y="355.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="504.5" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="502.5" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="505.5" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.03%)</title><rect x="502.8" y="339.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="505.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="502.8" y="323.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="505.8" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.03%)</title><rect x="502.8" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="505.8" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (28 samples, 0.15%)</title><rect x="503.3" y="483.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="506.3" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (27 samples, 0.15%)</title><rect x="503.3" y="467.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="506.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="503.3" y="451.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="506.3" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="503.3" y="435.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="506.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="503.3" y="419.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="506.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="503.3" y="403.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.3" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (23 samples, 0.13%)</title><rect x="503.5" y="387.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.5" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="503.8" y="371.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.8" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="503.9" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="506.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="504.0" y="339.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="507.0" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.06%)</title><rect x="504.2" y="371.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="507.2" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (10 samples, 0.05%)</title><rect x="504.3" y="355.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="507.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="504.7" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="507.7" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="504.7" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="507.7" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (66 samples, 0.36%)</title><rect x="505.1" y="483.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.1" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (60 samples, 0.33%)</title><rect x="505.3" y="467.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.3" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (15 samples, 0.08%)</title><rect x="509.3" y="483.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="512.3" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="509.3" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="512.3" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="509.7" y="467.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="512.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (9 samples, 0.05%)</title><rect x="509.7" y="451.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="512.7" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (9 samples, 0.05%)</title><rect x="509.7" y="435.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="512.7" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.04%)</title><rect x="509.9" y="419.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="512.9" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.05%)</title><rect x="510.3" y="483.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="513.3" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.05%)</title><rect x="510.3" y="467.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.3" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (9 samples, 0.05%)</title><rect x="510.3" y="451.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="513.3" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (9 samples, 0.05%)</title><rect x="510.3" y="435.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="513.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (99 samples, 0.54%)</title><rect x="511.0" y="563.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="514.0" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (86 samples, 0.47%)</title><rect x="511.0" y="547.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (86 samples, 0.47%)</title><rect x="511.0" y="531.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (79 samples, 0.43%)</title><rect x="511.3" y="515.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="514.3" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (79 samples, 0.43%)</title><rect x="511.3" y="499.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.3" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (78 samples, 0.43%)</title><rect x="511.4" y="483.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="514.4" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (78 samples, 0.43%)</title><rect x="511.4" y="467.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.4" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (75 samples, 0.41%)</title><rect x="511.6" y="451.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="514.6" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (75 samples, 0.41%)</title><rect x="511.6" y="435.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.6" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (37 samples, 0.20%)</title><rect x="511.6" y="419.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="514.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (34 samples, 0.19%)</title><rect x="511.8" y="403.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (34 samples, 0.19%)</title><rect x="511.8" y="387.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (34 samples, 0.19%)</title><rect x="511.8" y="371.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (6 samples, 0.03%)</title><rect x="511.8" y="355.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="514.8" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="511.8" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.8" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.03%)</title><rect x="511.8" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="514.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="511.9" y="307.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="514.9" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="511.9" y="291.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="514.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (23 samples, 0.13%)</title><rect x="512.2" y="355.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.2" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (9 samples, 0.05%)</title><rect x="512.4" y="339.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.4" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (9 samples, 0.05%)</title><rect x="512.4" y="323.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.04%)</title><rect x="512.5" y="307.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.5" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="512.5" y="291.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.5" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (8 samples, 0.04%)</title><rect x="513.0" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="516.0" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.04%)</title><rect x="513.0" y="323.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="516.0" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="513.0" y="307.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="516.0" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="513.2" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="516.2" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="513.2" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.2" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="513.2" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="516.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (4 samples, 0.02%)</title><rect x="513.7" y="355.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="516.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (38 samples, 0.21%)</title><rect x="514.0" y="419.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (38 samples, 0.21%)</title><rect x="514.0" y="403.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="517.0" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (38 samples, 0.21%)</title><rect x="514.0" y="387.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="517.0" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (35 samples, 0.19%)</title><rect x="514.2" y="371.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="517.2" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (34 samples, 0.19%)</title><rect x="514.3" y="355.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="517.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (34 samples, 0.19%)</title><rect x="514.3" y="339.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="517.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (31 samples, 0.17%)</title><rect x="514.5" y="323.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.5" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (30 samples, 0.16%)</title><rect x="514.5" y="307.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="517.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.04%)</title><rect x="514.8" y="291.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.8" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="514.9" y="275.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.9" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.03%)</title><rect x="514.9" y="259.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="517.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (17 samples, 0.09%)</title><rect x="515.4" y="291.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (15 samples, 0.08%)</title><rect x="515.5" y="275.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.5" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14 samples, 0.08%)</title><rect x="515.5" y="259.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.5" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14 samples, 0.08%)</title><rect x="515.5" y="243.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="518.5" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (13 samples, 0.07%)</title><rect x="515.6" y="227.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="518.6" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (13 samples, 0.07%)</title><rect x="515.6" y="211.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.6" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (13 samples, 0.07%)</title><rect x="515.6" y="195.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="518.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.07%)</title><rect x="515.6" y="179.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.6" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.07%)</title><rect x="515.6" y="163.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="518.6" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="516.1" y="147.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="519.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (13 samples, 0.07%)</title><rect x="516.5" y="547.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (13 samples, 0.07%)</title><rect x="516.5" y="531.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.07%)</title><rect x="516.6" y="515.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="519.6" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (7 samples, 0.04%)</title><rect x="516.6" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="519.6" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (7 samples, 0.04%)</title><rect x="516.6" y="483.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.6" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (7 samples, 0.04%)</title><rect x="516.6" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.6" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.04%)</title><rect x="516.6" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="519.6" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.04%)</title><rect x="516.6" y="435.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (6 samples, 0.03%)</title><rect x="516.6" y="419.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="519.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (6 samples, 0.03%)</title><rect x="516.6" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (6 samples, 0.03%)</title><rect x="516.6" y="387.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (6 samples, 0.03%)</title><rect x="516.6" y="371.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="519.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (6 samples, 0.03%)</title><rect x="516.6" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="519.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (6 samples, 0.03%)</title><rect x="516.6" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (6 samples, 0.03%)</title><rect x="516.6" y="323.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.6" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (6 samples, 0.03%)</title><rect x="516.6" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="519.6" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (4 samples, 0.02%)</title><rect x="516.8" y="291.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="519.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4 samples, 0.02%)</title><rect x="516.8" y="275.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="519.8" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.03%)</title><rect x="517.0" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.0" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.03%)</title><rect x="517.0" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.0" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.03%)</title><rect x="517.0" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.0" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.03%)</title><rect x="517.0" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.0" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="517.0" y="435.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.0" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="517.0" y="419.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (120 samples, 0.66%)</title><rect x="517.6" y="643.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="520.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (120 samples, 0.66%)</title><rect x="517.6" y="627.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="520.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (114 samples, 0.62%)</title><rect x="517.8" y="611.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.03%)</title><rect x="517.8" y="595.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.02%)</title><rect x="517.9" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.9" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (108 samples, 0.59%)</title><rect x="518.2" y="595.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="521.2" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (108 samples, 0.59%)</title><rect x="518.2" y="579.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.2" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (106 samples, 0.58%)</title><rect x="518.3" y="563.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="521.3" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (105 samples, 0.57%)</title><rect x="518.3" y="547.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.3" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (102 samples, 0.56%)</title><rect x="518.5" y="531.0" width="6.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="521.5" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (101 samples, 0.55%)</title><rect x="518.5" y="515.0" width="6.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="521.5" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (101 samples, 0.55%)</title><rect x="518.5" y="499.0" width="6.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="521.5" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (100 samples, 0.55%)</title><rect x="518.6" y="483.0" width="6.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="521.6" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (100 samples, 0.55%)</title><rect x="518.6" y="467.0" width="6.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="521.6" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (98 samples, 0.54%)</title><rect x="518.6" y="451.0" width="6.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="521.6" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (95 samples, 0.52%)</title><rect x="518.8" y="435.0" width="6.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="521.8" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (94 samples, 0.51%)</title><rect x="518.8" y="419.0" width="6.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="521.8" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (83 samples, 0.45%)</title><rect x="518.9" y="403.0" width="5.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="521.9" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (83 samples, 0.45%)</title><rect x="518.9" y="387.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="521.9" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (82 samples, 0.45%)</title><rect x="518.9" y="371.0" width="5.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="521.9" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (79 samples, 0.43%)</title><rect x="518.9" y="355.0" width="5.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="521.9" y="366.0"></text>
</g>
<g>
<title>ip_local_out (20 samples, 0.11%)</title><rect x="518.9" y="339.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="521.9" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (20 samples, 0.11%)</title><rect x="518.9" y="323.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="521.9" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (18 samples, 0.10%)</title><rect x="519.0" y="307.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="522.0" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="519.0" y="291.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="522.0" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (6 samples, 0.03%)</title><rect x="519.7" y="291.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="522.7" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (4 samples, 0.02%)</title><rect x="519.9" y="275.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="522.9" y="286.0"></text>
</g>
<g>
<title>ip_output (59 samples, 0.32%)</title><rect x="520.2" y="339.0" width="3.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="523.2" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (56 samples, 0.31%)</title><rect x="520.3" y="323.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="523.3" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.03%)</title><rect x="520.3" y="307.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="523.3" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.02%)</title><rect x="520.3" y="291.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="523.3" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (50 samples, 0.27%)</title><rect x="520.7" y="307.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="523.7" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (50 samples, 0.27%)</title><rect x="520.7" y="291.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="523.7" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (49 samples, 0.27%)</title><rect x="520.7" y="275.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="523.7" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (49 samples, 0.27%)</title><rect x="520.7" y="259.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="523.7" y="270.0"></text>
</g>
<g>
<title>net_rx_action (48 samples, 0.26%)</title><rect x="520.8" y="243.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="523.8" y="254.0"></text>
</g>
<g>
<title>process_backlog (47 samples, 0.26%)</title><rect x="520.8" y="227.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="523.8" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (47 samples, 0.26%)</title><rect x="520.8" y="211.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="523.8" y="222.0"></text>
</g>
<g>
<title>ip_rcv (45 samples, 0.25%)</title><rect x="521.0" y="195.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="524.0" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (35 samples, 0.19%)</title><rect x="521.0" y="179.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="524.0" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (32 samples, 0.18%)</title><rect x="521.0" y="163.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="524.0" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (32 samples, 0.18%)</title><rect x="521.0" y="147.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="524.0" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (32 samples, 0.18%)</title><rect x="521.0" y="131.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="524.0" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (29 samples, 0.16%)</title><rect x="521.2" y="115.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="524.2" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (28 samples, 0.15%)</title><rect x="521.3" y="99.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="524.3" y="110.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.03%)</title><rect x="521.5" y="83.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="524.5" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (18 samples, 0.10%)</title><rect x="521.8" y="83.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="524.8" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (14 samples, 0.08%)</title><rect x="521.9" y="67.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="524.9" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 0.08%)</title><rect x="521.9" y="51.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="524.9" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.08%)</title><rect x="521.9" y="35.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="524.9" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.04%)</title><rect x="523.4" y="179.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="526.4" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.04%)</title><rect x="523.4" y="163.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="526.4" y="174.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.03%)</title><rect x="524.3" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="527.3" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.03%)</title><rect x="524.3" y="387.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="527.3" y="398.0"></text>
</g>
<g>
<title>[worker-1 tid=25864] (907 samples, 4.96%)</title><rect x="525.4" y="739.0" width="58.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="528.4" y="750.0">[worke..</text>
</g>
<g>
<title>[unknown_Java] (45 samples, 0.25%)</title><rect x="525.6" y="723.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="528.6" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (858 samples, 4.70%)</title><rect x="528.5" y="723.0" width="55.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="531.5" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (858 samples, 4.70%)</title><rect x="528.5" y="707.0" width="55.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="531.5" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (858 samples, 4.70%)</title><rect x="528.5" y="691.0" width="55.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.5" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (48 samples, 0.26%)</title><rect x="528.7" y="675.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (47 samples, 0.26%)</title><rect x="528.7" y="659.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="531.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (38 samples, 0.21%)</title><rect x="528.7" y="643.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="531.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (6 samples, 0.03%)</title><rect x="528.8" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="531.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.03%)</title><rect x="528.8" y="611.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="531.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.03%)</title><rect x="528.8" y="595.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="531.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.03%)</title><rect x="528.8" y="579.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.03%)</title><rect x="528.8" y="563.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.8" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.03%)</title><rect x="528.8" y="547.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="531.8" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="528.9" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="531.9" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="528.9" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="531.9" y="526.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="528.9" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="531.9" y="510.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="528.9" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="531.9" y="494.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="528.9" y="467.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="531.9" y="478.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.02%)</title><rect x="528.9" y="451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="531.9" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="528.9" y="435.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="531.9" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.02%)</title><rect x="528.9" y="419.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="531.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (31 samples, 0.17%)</title><rect x="529.2" y="627.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="532.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (31 samples, 0.17%)</title><rect x="529.2" y="611.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.2" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (16 samples, 0.09%)</title><rect x="529.2" y="595.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="532.2" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (11 samples, 0.06%)</title><rect x="529.5" y="579.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="532.5" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="529.7" y="563.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="532.7" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="529.7" y="547.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="532.7" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="529.8" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="532.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.08%)</title><rect x="530.2" y="595.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="533.2" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.04%)</title><rect x="530.3" y="579.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="533.3" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="530.5" y="563.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="533.5" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="530.5" y="547.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="533.5" y="558.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.03%)</title><rect x="530.7" y="579.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="533.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.03%)</title><rect x="531.4" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.03%)</title><rect x="531.4" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.03%)</title><rect x="531.4" y="611.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="534.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.03%)</title><rect x="531.4" y="595.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.03%)</title><rect x="531.4" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="534.4" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.03%)</title><rect x="531.4" y="563.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="534.4" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="531.4" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="534.4" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="531.4" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="534.4" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="531.4" y="515.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="534.4" y="526.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="531.4" y="499.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="534.4" y="510.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="531.4" y="483.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="534.4" y="494.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.02%)</title><rect x="531.5" y="467.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="534.5" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="531.5" y="451.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="534.5" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.02%)</title><rect x="531.5" y="435.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="534.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (808 samples, 4.42%)</title><rect x="531.8" y="675.0" width="52.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.8" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (807 samples, 4.42%)</title><rect x="531.8" y="659.0" width="52.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="534.8" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (683 samples, 3.74%)</title><rect x="532.0" y="643.0" width="44.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="535.0" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (683 samples, 3.74%)</title><rect x="532.0" y="627.0" width="44.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.0" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (683 samples, 3.74%)</title><rect x="532.0" y="611.0" width="44.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="535.0" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (682 samples, 3.73%)</title><rect x="532.0" y="595.0" width="44.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="535.0" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (52 samples, 0.28%)</title><rect x="532.0" y="579.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="535.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (43 samples, 0.24%)</title><rect x="532.1" y="563.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="535.1" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (29 samples, 0.16%)</title><rect x="532.1" y="547.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="535.1" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (29 samples, 0.16%)</title><rect x="532.1" y="531.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="535.1" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (29 samples, 0.16%)</title><rect x="532.1" y="515.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.1" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (28 samples, 0.15%)</title><rect x="532.2" y="499.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="535.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (28 samples, 0.15%)</title><rect x="532.2" y="483.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="535.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (27 samples, 0.15%)</title><rect x="532.3" y="467.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (27 samples, 0.15%)</title><rect x="532.3" y="451.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="535.3" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (27 samples, 0.15%)</title><rect x="532.3" y="435.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.3" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (26 samples, 0.14%)</title><rect x="532.3" y="419.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="535.3" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (26 samples, 0.14%)</title><rect x="532.3" y="403.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="535.3" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (24 samples, 0.13%)</title><rect x="532.5" y="387.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.5" y="398.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="532.5" y="371.0" width="0.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="535.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (20 samples, 0.11%)</title><rect x="532.7" y="371.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="535.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (20 samples, 0.11%)</title><rect x="532.7" y="355.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.05%)</title><rect x="532.9" y="339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="535.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.05%)</title><rect x="532.9" y="323.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="535.9" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.04%)</title><rect x="533.0" y="307.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="536.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (9 samples, 0.05%)</title><rect x="533.4" y="339.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="536.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (7 samples, 0.04%)</title><rect x="533.6" y="323.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="536.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (7 samples, 0.04%)</title><rect x="533.6" y="307.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="536.6" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (7 samples, 0.04%)</title><rect x="533.6" y="291.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="536.6" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.04%)</title><rect x="533.6" y="275.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="536.6" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="533.6" y="259.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="536.6" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="533.6" y="243.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="536.6" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="533.6" y="227.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="536.6" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="533.6" y="211.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="536.6" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (13 samples, 0.07%)</title><rect x="534.0" y="547.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="537.0" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (13 samples, 0.07%)</title><rect x="534.0" y="531.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (13 samples, 0.07%)</title><rect x="534.0" y="515.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="537.0" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (13 samples, 0.07%)</title><rect x="534.0" y="499.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="537.0" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.07%)</title><rect x="534.0" y="483.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="537.0" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.07%)</title><rect x="534.0" y="467.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="537.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (11 samples, 0.06%)</title><rect x="534.2" y="451.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="537.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (11 samples, 0.06%)</title><rect x="534.2" y="435.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="537.2" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (11 samples, 0.06%)</title><rect x="534.2" y="419.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="537.2" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (10 samples, 0.05%)</title><rect x="534.2" y="403.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="537.2" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (10 samples, 0.05%)</title><rect x="534.2" y="387.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="537.2" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (10 samples, 0.05%)</title><rect x="534.2" y="371.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="537.2" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (9 samples, 0.05%)</title><rect x="534.3" y="355.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="537.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (9 samples, 0.05%)</title><rect x="534.3" y="339.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="537.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="534.3" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="537.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="534.3" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="537.3" y="318.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.03%)</title><rect x="534.4" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="537.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (4 samples, 0.02%)</title><rect x="534.9" y="563.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="537.9" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="534.9" y="547.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="537.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$73/502264873.apply (4 samples, 0.02%)</title><rect x="535.1" y="563.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="538.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (630 samples, 3.45%)</title><rect x="535.4" y="579.0" width="40.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="538.4" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (535 samples, 2.93%)</title><rect x="535.4" y="563.0" width="34.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.4" y="574.0">ru..</text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.03%)</title><rect x="535.6" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="538.6" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.03%)</title><rect x="535.6" y="531.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="538.6" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.03%)</title><rect x="535.6" y="515.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="538.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (17 samples, 0.09%)</title><rect x="535.9" y="547.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (17 samples, 0.09%)</title><rect x="535.9" y="531.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="538.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (15 samples, 0.08%)</title><rect x="536.0" y="515.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="539.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (13 samples, 0.07%)</title><rect x="536.2" y="499.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="539.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (6 samples, 0.03%)</title><rect x="536.6" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="539.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (20 samples, 0.11%)</title><rect x="537.1" y="547.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (9 samples, 0.05%)</title><rect x="537.4" y="531.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="540.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (8 samples, 0.04%)</title><rect x="537.4" y="515.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.03%)</title><rect x="537.5" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="540.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (5 samples, 0.03%)</title><rect x="537.6" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="540.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.03%)</title><rect x="537.6" y="467.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="540.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (5 samples, 0.03%)</title><rect x="537.6" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="540.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (5 samples, 0.03%)</title><rect x="537.6" y="435.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="540.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (5 samples, 0.03%)</title><rect x="537.6" y="419.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="540.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (7 samples, 0.04%)</title><rect x="538.0" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="541.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.03%)</title><rect x="538.1" y="515.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="541.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.03%)</title><rect x="538.1" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (488 samples, 2.67%)</title><rect x="538.4" y="547.0" width="31.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="541.4" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (488 samples, 2.67%)</title><rect x="538.4" y="531.0" width="31.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="541.4" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (488 samples, 2.67%)</title><rect x="538.4" y="515.0" width="31.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="541.4" y="526.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (92 samples, 0.50%)</title><rect x="538.7" y="499.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.7" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (78 samples, 0.43%)</title><rect x="539.4" y="483.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="542.4" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (8 samples, 0.04%)</title><rect x="543.4" y="467.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.4" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.02%)</title><rect x="543.5" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="546.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (8 samples, 0.04%)</title><rect x="543.9" y="467.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="546.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (37 samples, 0.20%)</title><rect x="544.7" y="499.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.7" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (24 samples, 0.13%)</title><rect x="544.7" y="483.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.7" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (24 samples, 0.13%)</title><rect x="544.7" y="467.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.7" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (24 samples, 0.13%)</title><rect x="544.7" y="451.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.7" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (24 samples, 0.13%)</title><rect x="544.7" y="435.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="547.7" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (24 samples, 0.13%)</title><rect x="544.7" y="419.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="547.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (24 samples, 0.13%)</title><rect x="544.7" y="403.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (24 samples, 0.13%)</title><rect x="544.7" y="387.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="547.7" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (24 samples, 0.13%)</title><rect x="544.7" y="371.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.7" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="544.7" y="355.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="547.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="544.9" y="339.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="547.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="544.9" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="547.9" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="544.9" y="307.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="547.9" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (15 samples, 0.08%)</title><rect x="545.3" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="545.8" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="548.8" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (13 samples, 0.07%)</title><rect x="546.2" y="483.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.2" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (13 samples, 0.07%)</title><rect x="546.2" y="467.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.2" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (13 samples, 0.07%)</title><rect x="546.2" y="451.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="549.2" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (13 samples, 0.07%)</title><rect x="546.2" y="435.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="549.2" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.07%)</title><rect x="546.2" y="419.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.07%)</title><rect x="546.2" y="403.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="549.2" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (13 samples, 0.07%)</title><rect x="546.2" y="387.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="549.2" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="546.2" y="371.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="549.2" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="546.2" y="355.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="549.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="546.3" y="339.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="549.3" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="546.3" y="323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="549.3" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.04%)</title><rect x="546.6" y="371.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="549.6" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.04%)</title><rect x="546.6" y="355.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="549.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (354 samples, 1.94%)</title><rect x="547.1" y="499.0" width="22.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.1" y="510.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (213 samples, 1.17%)</title><rect x="548.3" y="483.0" width="13.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.3" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (209 samples, 1.14%)</title><rect x="548.6" y="467.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="551.6" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (166 samples, 0.91%)</title><rect x="551.3" y="451.0" width="10.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (166 samples, 0.91%)</title><rect x="551.3" y="435.0" width="10.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.3" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (164 samples, 0.90%)</title><rect x="551.4" y="419.0" width="10.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="554.4" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (160 samples, 0.88%)</title><rect x="551.7" y="403.0" width="10.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (156 samples, 0.85%)</title><rect x="551.9" y="387.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="554.9" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (153 samples, 0.84%)</title><rect x="552.1" y="371.0" width="9.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.1" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (53 samples, 0.29%)</title><rect x="557.2" y="355.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="560.2" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="560.2" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.03%)</title><rect x="560.2" y="323.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.2" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.03%)</title><rect x="560.2" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.2" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (21 samples, 0.11%)</title><rect x="560.6" y="355.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="561.4" y="339.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="564.4" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="561.7" y="339.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="561.7" y="323.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.7" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="561.7" y="307.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="564.7" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (43 samples, 0.24%)</title><rect x="562.1" y="483.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.1" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (42 samples, 0.23%)</title><rect x="562.1" y="467.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="565.1" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (42 samples, 0.23%)</title><rect x="562.1" y="451.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.1" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (42 samples, 0.23%)</title><rect x="562.1" y="435.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.1" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (42 samples, 0.23%)</title><rect x="562.1" y="419.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="565.1" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (42 samples, 0.23%)</title><rect x="562.1" y="403.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="565.1" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="562.3" y="387.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="565.3" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="562.8" y="371.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="565.8" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="562.8" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="565.8" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="563.0" y="339.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.0" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (25 samples, 0.14%)</title><rect x="563.2" y="371.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="566.2" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (22 samples, 0.12%)</title><rect x="563.4" y="355.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="566.4" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.04%)</title><rect x="564.0" y="339.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="564.5" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.5" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="564.6" y="323.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (60 samples, 0.33%)</title><rect x="564.8" y="483.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="567.8" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (52 samples, 0.28%)</title><rect x="565.2" y="467.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.2" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (12 samples, 0.07%)</title><rect x="568.7" y="483.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="571.7" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="568.7" y="467.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.7" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="569.1" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="572.1" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.03%)</title><rect x="569.1" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.1" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.03%)</title><rect x="569.1" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="572.1" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="569.2" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.2" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (7 samples, 0.04%)</title><rect x="569.5" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="572.5" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (7 samples, 0.04%)</title><rect x="569.5" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="572.5" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.04%)</title><rect x="569.5" y="451.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="572.5" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.04%)</title><rect x="569.5" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (95 samples, 0.52%)</title><rect x="569.9" y="563.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="572.9" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (86 samples, 0.47%)</title><rect x="569.9" y="547.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="572.9" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (86 samples, 0.47%)</title><rect x="569.9" y="531.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.9" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (76 samples, 0.42%)</title><rect x="570.4" y="515.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.4" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (76 samples, 0.42%)</title><rect x="570.4" y="499.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.4" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (74 samples, 0.41%)</title><rect x="570.6" y="483.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.6" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (74 samples, 0.41%)</title><rect x="570.6" y="467.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.6" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (71 samples, 0.39%)</title><rect x="570.8" y="451.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="573.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (71 samples, 0.39%)</title><rect x="570.8" y="435.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (43 samples, 0.24%)</title><rect x="570.8" y="419.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.03%)</title><rect x="570.8" y="403.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (38 samples, 0.21%)</title><rect x="571.1" y="403.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (38 samples, 0.21%)</title><rect x="571.1" y="387.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="574.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (38 samples, 0.21%)</title><rect x="571.1" y="371.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (6 samples, 0.03%)</title><rect x="571.1" y="355.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.1" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4 samples, 0.02%)</title><rect x="571.2" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="574.2" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="571.2" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="574.2" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="571.2" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.2" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="571.2" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (30 samples, 0.16%)</title><rect x="571.5" y="355.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="574.5" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (8 samples, 0.04%)</title><rect x="571.6" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="574.6" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (8 samples, 0.04%)</title><rect x="571.6" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="574.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.03%)</title><rect x="571.7" y="307.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.7" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="571.7" y="291.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.7" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (15 samples, 0.08%)</title><rect x="572.1" y="339.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="575.1" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (15 samples, 0.08%)</title><rect x="572.1" y="323.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="575.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (15 samples, 0.08%)</title><rect x="572.1" y="307.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="575.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (28 samples, 0.15%)</title><rect x="573.6" y="419.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (28 samples, 0.15%)</title><rect x="573.6" y="403.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="576.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (28 samples, 0.15%)</title><rect x="573.6" y="387.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="576.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (28 samples, 0.15%)</title><rect x="573.6" y="371.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="576.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (26 samples, 0.14%)</title><rect x="573.7" y="355.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="576.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (26 samples, 0.14%)</title><rect x="573.7" y="339.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="576.7" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (23 samples, 0.13%)</title><rect x="573.9" y="323.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="576.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (23 samples, 0.13%)</title><rect x="573.9" y="307.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="576.9" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.04%)</title><rect x="573.9" y="291.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.04%)</title><rect x="573.9" y="275.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.9" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.03%)</title><rect x="573.9" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="576.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (15 samples, 0.08%)</title><rect x="574.4" y="291.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="577.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (15 samples, 0.08%)</title><rect x="574.4" y="275.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="577.4" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (15 samples, 0.08%)</title><rect x="574.4" y="259.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="577.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (15 samples, 0.08%)</title><rect x="574.4" y="243.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="577.4" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (14 samples, 0.08%)</title><rect x="574.5" y="227.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="577.5" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (14 samples, 0.08%)</title><rect x="574.5" y="211.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="577.5" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (12 samples, 0.07%)</title><rect x="574.6" y="195.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="577.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.07%)</title><rect x="574.6" y="179.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="577.6" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.07%)</title><rect x="574.6" y="163.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="577.6" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="575.0" y="147.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="578.0" y="158.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="575.0" y="131.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="578.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.05%)</title><rect x="575.5" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="578.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (8 samples, 0.04%)</title><rect x="575.6" y="531.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.6" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.04%)</title><rect x="575.6" y="515.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="578.6" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.03%)</title><rect x="575.7" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.03%)</title><rect x="575.7" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="578.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.03%)</title><rect x="575.7" y="467.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.7" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.03%)</title><rect x="575.7" y="451.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="578.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="575.8" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="578.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="575.8" y="419.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (122 samples, 0.67%)</title><rect x="576.1" y="643.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="579.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (122 samples, 0.67%)</title><rect x="576.1" y="627.0" width="7.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="579.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (120 samples, 0.66%)</title><rect x="576.1" y="611.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="579.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.03%)</title><rect x="576.1" y="595.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="579.1" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.02%)</title><rect x="576.3" y="579.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="579.3" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (114 samples, 0.62%)</title><rect x="576.5" y="595.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="579.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (114 samples, 0.62%)</title><rect x="576.5" y="579.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="579.5" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (114 samples, 0.62%)</title><rect x="576.5" y="563.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="579.5" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (112 samples, 0.61%)</title><rect x="576.7" y="547.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="579.7" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (108 samples, 0.59%)</title><rect x="576.8" y="531.0" width="7.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="579.8" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (106 samples, 0.58%)</title><rect x="576.9" y="515.0" width="6.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="579.9" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (106 samples, 0.58%)</title><rect x="576.9" y="499.0" width="6.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="579.9" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (103 samples, 0.56%)</title><rect x="577.1" y="483.0" width="6.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="580.1" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (103 samples, 0.56%)</title><rect x="577.1" y="467.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="580.1" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (98 samples, 0.54%)</title><rect x="577.2" y="451.0" width="6.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="580.2" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (97 samples, 0.53%)</title><rect x="577.2" y="435.0" width="6.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="580.2" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (96 samples, 0.53%)</title><rect x="577.3" y="419.0" width="6.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="580.3" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (90 samples, 0.49%)</title><rect x="577.6" y="403.0" width="5.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="580.6" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (90 samples, 0.49%)</title><rect x="577.6" y="387.0" width="5.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="580.6" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (85 samples, 0.47%)</title><rect x="577.6" y="371.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="580.6" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (82 samples, 0.45%)</title><rect x="577.6" y="355.0" width="5.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="580.6" y="366.0"></text>
</g>
<g>
<title>ip_local_out (16 samples, 0.09%)</title><rect x="577.7" y="339.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="580.7" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (16 samples, 0.09%)</title><rect x="577.7" y="323.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="580.7" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.09%)</title><rect x="577.7" y="307.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="580.7" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="577.7" y="291.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="580.7" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (7 samples, 0.04%)</title><rect x="578.1" y="291.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="581.1" y="302.0"></text>
</g>
<g>
<title>ip_output (65 samples, 0.36%)</title><rect x="578.7" y="339.0" width="4.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="581.7" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (59 samples, 0.32%)</title><rect x="578.7" y="323.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="581.7" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.02%)</title><rect x="578.8" y="307.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="581.8" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.02%)</title><rect x="578.8" y="291.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="581.8" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.02%)</title><rect x="578.8" y="275.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="581.8" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (54 samples, 0.30%)</title><rect x="579.0" y="307.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="582.0" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (54 samples, 0.30%)</title><rect x="579.0" y="291.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="582.0" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (52 samples, 0.28%)</title><rect x="579.2" y="275.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="582.2" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (52 samples, 0.28%)</title><rect x="579.2" y="259.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="582.2" y="270.0"></text>
</g>
<g>
<title>net_rx_action (51 samples, 0.28%)</title><rect x="579.2" y="243.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="582.2" y="254.0"></text>
</g>
<g>
<title>process_backlog (51 samples, 0.28%)</title><rect x="579.2" y="227.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="582.2" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (51 samples, 0.28%)</title><rect x="579.2" y="211.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="582.2" y="222.0"></text>
</g>
<g>
<title>ip_rcv (49 samples, 0.27%)</title><rect x="579.4" y="195.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="582.4" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (36 samples, 0.20%)</title><rect x="579.4" y="179.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="582.4" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (29 samples, 0.16%)</title><rect x="579.4" y="163.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="582.4" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (29 samples, 0.16%)</title><rect x="579.4" y="147.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="582.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (26 samples, 0.14%)</title><rect x="579.6" y="131.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="582.6" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.02%)</title><rect x="579.7" y="115.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="582.7" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (19 samples, 0.10%)</title><rect x="580.0" y="115.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="583.0" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (19 samples, 0.10%)</title><rect x="580.0" y="99.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="583.0" y="110.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.02%)</title><rect x="580.1" y="83.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="583.1" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (13 samples, 0.07%)</title><rect x="580.3" y="83.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="583.3" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (12 samples, 0.07%)</title><rect x="580.3" y="67.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="583.3" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 0.07%)</title><rect x="580.3" y="51.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="583.3" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.07%)</title><rect x="580.3" y="35.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="583.3" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.03%)</title><rect x="581.3" y="163.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="584.3" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.07%)</title><rect x="581.8" y="179.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="584.8" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.04%)</title><rect x="581.9" y="163.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="584.9" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="582.7" y="323.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="585.7" y="334.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.02%)</title><rect x="583.5" y="451.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="586.5" y="462.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.02%)</title><rect x="583.5" y="435.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="586.5" y="446.0"></text>
</g>
<g>
<title>[worker-12 tid=26526] (994 samples, 5.44%)</title><rect x="583.9" y="739.0" width="64.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="586.9" y="750.0">[worker..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.03%)</title><rect x="584.1" y="723.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="587.1" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (5 samples, 0.03%)</title><rect x="584.1" y="707.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="587.1" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.03%)</title><rect x="584.1" y="691.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="587.1" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.03%)</title><rect x="584.1" y="675.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="587.1" y="686.0"></text>
</g>
<g>
<title>[unknown_Java] (54 samples, 0.30%)</title><rect x="584.4" y="723.0" width="3.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="587.4" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.02%)</title><rect x="587.6" y="707.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="590.6" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="587.6" y="691.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="590.6" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="587.6" y="675.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="590.6" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="587.6" y="659.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="590.6" y="670.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="587.6" y="643.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="590.6" y="654.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="587.6" y="627.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="590.6" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.run (933 samples, 5.11%)</title><rect x="587.9" y="723.0" width="60.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="590.9" y="734.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (933 samples, 5.11%)</title><rect x="587.9" y="707.0" width="60.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="590.9" y="718.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (933 samples, 5.11%)</title><rect x="587.9" y="691.0" width="60.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="590.9" y="702.0">java/u..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (931 samples, 5.10%)</title><rect x="588.0" y="675.0" width="60.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="591.0" y="686.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (931 samples, 5.10%)</title><rect x="588.0" y="659.0" width="60.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.0" y="670.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (793 samples, 4.34%)</title><rect x="588.0" y="643.0" width="51.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="591.0" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (793 samples, 4.34%)</title><rect x="588.0" y="627.0" width="51.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.0" y="638.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (792 samples, 4.34%)</title><rect x="588.1" y="611.0" width="51.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.1" y="622.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (658 samples, 3.60%)</title><rect x="588.5" y="595.0" width="42.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.5" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (53 samples, 0.29%)</title><rect x="588.6" y="579.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (46 samples, 0.25%)</title><rect x="588.7" y="563.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="591.7" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (40 samples, 0.22%)</title><rect x="588.7" y="547.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="591.7" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (40 samples, 0.22%)</title><rect x="588.7" y="531.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="591.7" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (38 samples, 0.21%)</title><rect x="588.8" y="515.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="591.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (36 samples, 0.20%)</title><rect x="588.9" y="499.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.9" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (36 samples, 0.20%)</title><rect x="588.9" y="483.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (35 samples, 0.19%)</title><rect x="589.0" y="467.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="592.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (35 samples, 0.19%)</title><rect x="589.0" y="451.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="592.0" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (35 samples, 0.19%)</title><rect x="589.0" y="435.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="592.0" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (35 samples, 0.19%)</title><rect x="589.0" y="419.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="592.0" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (33 samples, 0.18%)</title><rect x="589.1" y="403.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="592.1" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (33 samples, 0.18%)</title><rect x="589.1" y="387.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.1" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (28 samples, 0.15%)</title><rect x="589.4" y="371.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="592.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (28 samples, 0.15%)</title><rect x="589.4" y="355.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="592.4" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.07%)</title><rect x="589.7" y="339.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="592.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.06%)</title><rect x="589.8" y="323.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="592.8" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.05%)</title><rect x="589.9" y="307.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="592.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (12 samples, 0.07%)</title><rect x="590.5" y="339.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="593.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (11 samples, 0.06%)</title><rect x="590.5" y="323.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.5" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11 samples, 0.06%)</title><rect x="590.5" y="307.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.5" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11 samples, 0.06%)</title><rect x="590.5" y="291.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.5" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.05%)</title><rect x="590.7" y="275.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="593.7" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (9 samples, 0.05%)</title><rect x="590.7" y="259.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="593.7" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="590.7" y="243.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.7" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="590.7" y="227.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="590.7" y="211.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.7" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.03%)</title><rect x="591.2" y="547.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="594.2" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.03%)</title><rect x="591.2" y="531.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="594.2" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6 samples, 0.03%)</title><rect x="591.2" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.2" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6 samples, 0.03%)</title><rect x="591.2" y="499.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="594.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="591.2" y="483.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="591.2" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="594.2" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.02%)</title><rect x="591.2" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="594.2" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (4 samples, 0.02%)</title><rect x="591.6" y="563.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.6" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="591.6" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="594.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (603 samples, 3.30%)</title><rect x="592.0" y="579.0" width="39.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="595.0" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (501 samples, 2.74%)</title><rect x="592.0" y="563.0" width="32.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="595.0" y="574.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (26 samples, 0.14%)</title><rect x="592.3" y="547.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (26 samples, 0.14%)</title><rect x="592.3" y="531.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (24 samples, 0.13%)</title><rect x="592.4" y="515.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="595.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (18 samples, 0.10%)</title><rect x="592.8" y="499.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="595.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.03%)</title><rect x="593.0" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="596.0" y="494.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (5 samples, 0.03%)</title><rect x="593.1" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (9 samples, 0.05%)</title><rect x="593.4" y="483.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.03%)</title><rect x="593.6" y="467.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="596.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (18 samples, 0.10%)</title><rect x="594.2" y="547.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (7 samples, 0.04%)</title><rect x="594.2" y="531.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (5 samples, 0.03%)</title><rect x="594.3" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.03%)</title><rect x="594.3" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (5 samples, 0.03%)</title><rect x="594.3" y="483.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="597.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.03%)</title><rect x="594.3" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="597.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (5 samples, 0.03%)</title><rect x="594.3" y="451.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (4 samples, 0.02%)</title><rect x="594.4" y="435.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (4 samples, 0.02%)</title><rect x="594.4" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (10 samples, 0.05%)</title><rect x="594.7" y="531.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="597.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 0.02%)</title><rect x="594.7" y="515.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.7" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="594.7" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="597.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.03%)</title><rect x="595.0" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="598.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.03%)</title><rect x="595.0" y="499.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="598.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (450 samples, 2.46%)</title><rect x="595.3" y="547.0" width="29.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.3" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (450 samples, 2.46%)</title><rect x="595.3" y="531.0" width="29.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="598.3" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (450 samples, 2.46%)</title><rect x="595.3" y="515.0" width="29.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="598.3" y="526.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (86 samples, 0.47%)</title><rect x="595.7" y="499.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="598.7" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (71 samples, 0.39%)</title><rect x="596.5" y="483.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="599.5" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (9 samples, 0.05%)</title><rect x="599.7" y="467.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.7" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (5 samples, 0.03%)</title><rect x="599.7" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (4 samples, 0.02%)</title><rect x="600.0" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="603.0" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.03%)</title><rect x="600.3" y="467.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="603.3" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.02%)</title><rect x="600.3" y="451.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (7 samples, 0.04%)</title><rect x="600.6" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (44 samples, 0.24%)</title><rect x="601.3" y="499.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="604.3" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (25 samples, 0.14%)</title><rect x="601.3" y="483.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="604.3" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (25 samples, 0.14%)</title><rect x="601.3" y="467.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (25 samples, 0.14%)</title><rect x="601.3" y="451.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="601.3" y="435.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="604.3" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="601.3" y="419.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="604.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="601.3" y="403.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="604.3" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="601.3" y="387.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="604.3" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (25 samples, 0.14%)</title><rect x="601.3" y="371.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="604.3" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="601.3" y="355.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (18 samples, 0.10%)</title><rect x="601.7" y="355.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="602.5" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.5" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (19 samples, 0.10%)</title><rect x="602.9" y="483.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="605.9" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (19 samples, 0.10%)</title><rect x="602.9" y="467.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="605.9" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (19 samples, 0.10%)</title><rect x="602.9" y="451.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.9" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (19 samples, 0.10%)</title><rect x="602.9" y="435.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="605.9" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (19 samples, 0.10%)</title><rect x="602.9" y="419.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="605.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (19 samples, 0.10%)</title><rect x="602.9" y="403.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="605.9" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (19 samples, 0.10%)</title><rect x="602.9" y="387.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.9" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="602.9" y="371.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="605.9" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="602.9" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="605.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="602.9" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="605.9" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="602.9" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="605.9" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.08%)</title><rect x="603.2" y="371.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.2" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.08%)</title><rect x="603.2" y="355.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="606.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="603.7" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.7" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.03%)</title><rect x="603.8" y="323.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="606.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (314 samples, 1.72%)</title><rect x="604.1" y="499.0" width="20.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.1" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (171 samples, 0.94%)</title><rect x="606.0" y="483.0" width="11.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (169 samples, 0.93%)</title><rect x="606.1" y="467.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="609.1" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (145 samples, 0.79%)</title><rect x="607.7" y="451.0" width="9.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.7" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (145 samples, 0.79%)</title><rect x="607.7" y="435.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="610.7" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (142 samples, 0.78%)</title><rect x="607.8" y="419.0" width="9.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="610.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (134 samples, 0.73%)</title><rect x="608.4" y="403.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="611.4" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (128 samples, 0.70%)</title><rect x="608.8" y="387.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="611.8" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (123 samples, 0.67%)</title><rect x="609.1" y="371.0" width="7.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.1" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (42 samples, 0.23%)</title><rect x="613.3" y="355.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="616.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (16 samples, 0.09%)</title><rect x="616.0" y="355.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="619.0" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (35 samples, 0.19%)</title><rect x="617.0" y="483.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="620.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (34 samples, 0.19%)</title><rect x="617.1" y="467.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="620.1" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (34 samples, 0.19%)</title><rect x="617.1" y="451.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="620.1" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (34 samples, 0.19%)</title><rect x="617.1" y="435.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="620.1" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (33 samples, 0.18%)</title><rect x="617.1" y="419.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="620.1" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (33 samples, 0.18%)</title><rect x="617.1" y="403.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="620.1" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (30 samples, 0.16%)</title><rect x="617.3" y="387.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.3" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.05%)</title><rect x="617.5" y="371.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="620.5" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="617.7" y="355.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="620.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (16 samples, 0.09%)</title><rect x="618.2" y="371.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.2" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (12 samples, 0.07%)</title><rect x="618.4" y="355.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.4" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.03%)</title><rect x="618.6" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="621.6" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (66 samples, 0.36%)</title><rect x="619.3" y="483.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="622.3" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (53 samples, 0.29%)</title><rect x="620.0" y="467.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.0" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="623.5" y="483.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.5" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="623.8" y="467.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.8" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="623.8" y="451.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.8" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="623.8" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.8" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="624.1" y="483.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="627.1" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="624.1" y="467.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="627.1" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="624.1" y="451.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.1" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="624.1" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="627.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (102 samples, 0.56%)</title><rect x="624.4" y="563.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="627.4" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (88 samples, 0.48%)</title><rect x="624.4" y="547.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="627.4" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (88 samples, 0.48%)</title><rect x="624.4" y="531.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="627.4" y="542.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.02%)</title><rect x="624.7" y="515.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="627.7" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (77 samples, 0.42%)</title><rect x="625.0" y="515.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="628.0" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (77 samples, 0.42%)</title><rect x="625.0" y="499.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="628.0" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (74 samples, 0.41%)</title><rect x="625.2" y="483.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.2" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (73 samples, 0.40%)</title><rect x="625.2" y="467.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="628.2" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (72 samples, 0.39%)</title><rect x="625.3" y="451.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="628.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (72 samples, 0.39%)</title><rect x="625.3" y="435.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (32 samples, 0.18%)</title><rect x="625.3" y="419.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (30 samples, 0.16%)</title><rect x="625.4" y="403.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (30 samples, 0.16%)</title><rect x="625.4" y="387.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.4" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (30 samples, 0.16%)</title><rect x="625.4" y="371.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="628.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (6 samples, 0.03%)</title><rect x="625.5" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.5" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="625.5" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.5" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="625.5" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (19 samples, 0.10%)</title><rect x="625.9" y="355.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.9" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="626.0" y="339.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="629.0" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="626.0" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="629.0" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="626.0" y="307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="629.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="626.0" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="629.0" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (12 samples, 0.07%)</title><rect x="626.3" y="339.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="629.3" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (12 samples, 0.07%)</title><rect x="626.3" y="323.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="629.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (12 samples, 0.07%)</title><rect x="626.3" y="307.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="629.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (40 samples, 0.22%)</title><rect x="627.4" y="419.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (40 samples, 0.22%)</title><rect x="627.4" y="403.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.4" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (40 samples, 0.22%)</title><rect x="627.4" y="387.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="630.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (37 samples, 0.20%)</title><rect x="627.5" y="371.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="630.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (36 samples, 0.20%)</title><rect x="627.6" y="355.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="630.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (36 samples, 0.20%)</title><rect x="627.6" y="339.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (35 samples, 0.19%)</title><rect x="627.7" y="323.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="630.7" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (35 samples, 0.19%)</title><rect x="627.7" y="307.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="630.7" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.07%)</title><rect x="627.9" y="291.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.06%)</title><rect x="628.0" y="275.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="631.0" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.05%)</title><rect x="628.1" y="259.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="631.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (19 samples, 0.10%)</title><rect x="628.7" y="291.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="631.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (18 samples, 0.10%)</title><rect x="628.8" y="275.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="631.8" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (18 samples, 0.10%)</title><rect x="628.8" y="259.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="631.8" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (18 samples, 0.10%)</title><rect x="628.8" y="243.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="631.8" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (15 samples, 0.08%)</title><rect x="629.0" y="227.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="632.0" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (15 samples, 0.08%)</title><rect x="629.0" y="211.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.0" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (14 samples, 0.08%)</title><rect x="629.0" y="195.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.0" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (14 samples, 0.08%)</title><rect x="629.0" y="179.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="632.0" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (14 samples, 0.08%)</title><rect x="629.0" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.0" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="629.6" y="147.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="632.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (14 samples, 0.08%)</title><rect x="630.1" y="547.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (14 samples, 0.08%)</title><rect x="630.1" y="531.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="633.1" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.07%)</title><rect x="630.1" y="515.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.1" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (9 samples, 0.05%)</title><rect x="630.2" y="499.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="633.2" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (9 samples, 0.05%)</title><rect x="630.2" y="483.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.2" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (9 samples, 0.05%)</title><rect x="630.2" y="467.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="633.2" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.04%)</title><rect x="630.3" y="451.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.04%)</title><rect x="630.3" y="435.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="633.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (8 samples, 0.04%)</title><rect x="630.3" y="419.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="633.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (8 samples, 0.04%)</title><rect x="630.3" y="403.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="633.3" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (8 samples, 0.04%)</title><rect x="630.3" y="387.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.3" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.04%)</title><rect x="630.3" y="371.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.3" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (8 samples, 0.04%)</title><rect x="630.3" y="355.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="633.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.04%)</title><rect x="630.3" y="339.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (7 samples, 0.04%)</title><rect x="630.3" y="323.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="633.3" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.04%)</title><rect x="630.3" y="307.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.3" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="630.5" y="291.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.5" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="630.5" y="275.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.5" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="630.5" y="259.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="633.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (111 samples, 0.61%)</title><rect x="631.0" y="595.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="634.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (47 samples, 0.26%)</title><rect x="631.0" y="579.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="634.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (46 samples, 0.25%)</title><rect x="631.1" y="563.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="634.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (46 samples, 0.25%)</title><rect x="631.1" y="547.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="634.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (37 samples, 0.20%)</title><rect x="631.2" y="531.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="634.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (37 samples, 0.20%)</title><rect x="631.2" y="515.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="634.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (37 samples, 0.20%)</title><rect x="631.2" y="499.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="634.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (37 samples, 0.20%)</title><rect x="631.2" y="483.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="634.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (37 samples, 0.20%)</title><rect x="631.2" y="467.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="634.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (37 samples, 0.20%)</title><rect x="631.2" y="451.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="634.2" y="462.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.03%)</title><rect x="631.2" y="435.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="634.2" y="446.0"></text>
</g>
<g>
<title>__pthread_cond_signal (32 samples, 0.18%)</title><rect x="631.5" y="435.0" width="2.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="634.5" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.13%)</title><rect x="632.0" y="419.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="635.0" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.13%)</title><rect x="632.0" y="403.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="635.0" y="414.0"></text>
</g>
<g>
<title>__x64_sys_futex (21 samples, 0.11%)</title><rect x="632.1" y="387.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="635.1" y="398.0"></text>
</g>
<g>
<title>do_futex (20 samples, 0.11%)</title><rect x="632.2" y="371.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="635.2" y="382.0"></text>
</g>
<g>
<title>futex_wake (20 samples, 0.11%)</title><rect x="632.2" y="355.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="635.2" y="366.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.07%)</title><rect x="632.7" y="339.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="635.7" y="350.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.07%)</title><rect x="632.7" y="323.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="635.7" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.07%)</title><rect x="632.7" y="307.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="635.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.03%)</title><rect x="633.6" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="636.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.03%)</title><rect x="633.6" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.03%)</title><rect x="633.6" y="499.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="636.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (5 samples, 0.03%)</title><rect x="633.6" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="636.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (5 samples, 0.03%)</title><rect x="633.6" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.03%)</title><rect x="633.6" y="451.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="636.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (62 samples, 0.34%)</title><rect x="634.1" y="579.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (62 samples, 0.34%)</title><rect x="634.1" y="563.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="637.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (46 samples, 0.25%)</title><rect x="634.1" y="547.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="637.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (4 samples, 0.02%)</title><rect x="634.2" y="531.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.02%)</title><rect x="634.2" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.02%)</title><rect x="634.2" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="637.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.02%)</title><rect x="634.2" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="637.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.02%)</title><rect x="634.2" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="637.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (40 samples, 0.22%)</title><rect x="634.5" y="531.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="637.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (40 samples, 0.22%)</title><rect x="634.5" y="515.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="637.5" y="526.0"></text>
</g>
<g>
<title>Unsafe_Park (25 samples, 0.14%)</title><rect x="634.5" y="499.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="637.5" y="510.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.02%)</title><rect x="634.5" y="483.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="637.5" y="494.0"></text>
</g>
<g>
<title>__lll_unlock_wake (19 samples, 0.10%)</title><rect x="634.8" y="483.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="637.8" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.08%)</title><rect x="635.1" y="467.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="638.1" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.08%)</title><rect x="635.1" y="451.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="638.1" y="462.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="635.8" y="435.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="638.8" y="446.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="635.8" y="419.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="638.8" y="430.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="635.8" y="403.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="638.8" y="414.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.08%)</title><rect x="636.1" y="499.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="639.1" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_wait (9 samples, 0.05%)</title><rect x="636.2" y="483.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="639.2" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="636.3" y="467.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="639.3" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="636.3" y="451.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="639.3" y="462.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="636.5" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="639.5" y="446.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="636.5" y="419.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="639.5" y="430.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.02%)</title><rect x="636.5" y="403.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="639.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.08%)</title><rect x="637.2" y="547.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="640.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.08%)</title><rect x="637.2" y="531.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="640.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.08%)</title><rect x="637.2" y="515.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="640.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.08%)</title><rect x="637.2" y="499.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.08%)</title><rect x="637.2" y="483.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.2" y="494.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.07%)</title><rect x="637.3" y="467.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="640.3" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="637.4" y="451.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="640.4" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="637.4" y="435.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="640.4" y="446.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.06%)</title><rect x="637.4" y="419.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="640.4" y="430.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.06%)</title><rect x="637.4" y="403.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="640.4" y="414.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.06%)</title><rect x="637.4" y="387.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="640.4" y="398.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.05%)</title><rect x="637.4" y="371.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="640.4" y="382.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.05%)</title><rect x="637.4" y="355.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="640.4" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.05%)</title><rect x="637.4" y="339.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="640.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.merge (4 samples, 0.02%)</title><rect x="638.3" y="595.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="641.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (9 samples, 0.05%)</title><rect x="638.7" y="595.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="641.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (9 samples, 0.05%)</title><rect x="638.7" y="579.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="641.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (9 samples, 0.05%)</title><rect x="638.7" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="641.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (4 samples, 0.02%)</title><rect x="638.7" y="547.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="641.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (5 samples, 0.03%)</title><rect x="638.9" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="641.9" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytesInternal (4 samples, 0.02%)</title><rect x="638.9" y="531.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="641.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (138 samples, 0.76%)</title><rect x="639.2" y="643.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="642.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (138 samples, 0.76%)</title><rect x="639.2" y="627.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (133 samples, 0.73%)</title><rect x="639.4" y="611.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.4" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (131 samples, 0.72%)</title><rect x="639.6" y="595.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.6" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (131 samples, 0.72%)</title><rect x="639.6" y="579.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (127 samples, 0.70%)</title><rect x="639.6" y="563.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (125 samples, 0.68%)</title><rect x="639.8" y="547.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="642.8" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (120 samples, 0.66%)</title><rect x="639.9" y="531.0" width="7.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="642.9" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (116 samples, 0.63%)</title><rect x="640.1" y="515.0" width="7.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="643.1" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (116 samples, 0.63%)</title><rect x="640.1" y="499.0" width="7.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="643.1" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (115 samples, 0.63%)</title><rect x="640.1" y="483.0" width="7.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="643.1" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (115 samples, 0.63%)</title><rect x="640.1" y="467.0" width="7.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="643.1" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (113 samples, 0.62%)</title><rect x="640.1" y="451.0" width="7.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="643.1" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (112 samples, 0.61%)</title><rect x="640.2" y="435.0" width="7.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="643.2" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (111 samples, 0.61%)</title><rect x="640.3" y="419.0" width="7.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="643.3" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (103 samples, 0.56%)</title><rect x="640.3" y="403.0" width="6.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="643.3" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (103 samples, 0.56%)</title><rect x="640.3" y="387.0" width="6.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="643.3" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (100 samples, 0.55%)</title><rect x="640.4" y="371.0" width="6.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="643.4" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (97 samples, 0.53%)</title><rect x="640.5" y="355.0" width="6.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="643.5" y="366.0"></text>
</g>
<g>
<title>ip_local_out (16 samples, 0.09%)</title><rect x="640.5" y="339.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="643.5" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (16 samples, 0.09%)</title><rect x="640.5" y="323.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="643.5" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.09%)</title><rect x="640.5" y="307.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="643.5" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="640.5" y="291.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="643.5" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (8 samples, 0.04%)</title><rect x="641.0" y="291.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="644.0" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (6 samples, 0.03%)</title><rect x="641.0" y="275.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="644.0" y="286.0"></text>
</g>
<g>
<title>ip_output (81 samples, 0.44%)</title><rect x="641.6" y="339.0" width="5.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="644.6" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (77 samples, 0.42%)</title><rect x="641.6" y="323.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="644.6" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.03%)</title><rect x="641.8" y="307.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="644.8" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.03%)</title><rect x="641.8" y="291.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="644.8" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.03%)</title><rect x="641.8" y="275.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="644.8" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (69 samples, 0.38%)</title><rect x="642.1" y="307.0" width="4.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="645.1" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (69 samples, 0.38%)</title><rect x="642.1" y="291.0" width="4.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="645.1" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (69 samples, 0.38%)</title><rect x="642.1" y="275.0" width="4.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="645.1" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (69 samples, 0.38%)</title><rect x="642.1" y="259.0" width="4.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="645.1" y="270.0"></text>
</g>
<g>
<title>net_rx_action (69 samples, 0.38%)</title><rect x="642.1" y="243.0" width="4.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="645.1" y="254.0"></text>
</g>
<g>
<title>process_backlog (68 samples, 0.37%)</title><rect x="642.2" y="227.0" width="4.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="645.2" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (67 samples, 0.37%)</title><rect x="642.3" y="211.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="645.3" y="222.0"></text>
</g>
<g>
<title>ip_rcv (67 samples, 0.37%)</title><rect x="642.3" y="195.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="645.3" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (52 samples, 0.28%)</title><rect x="642.3" y="179.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="645.3" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (47 samples, 0.26%)</title><rect x="642.5" y="163.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="645.5" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (47 samples, 0.26%)</title><rect x="642.5" y="147.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="645.5" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (45 samples, 0.25%)</title><rect x="642.6" y="131.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="645.6" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (36 samples, 0.20%)</title><rect x="643.1" y="115.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="646.1" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (36 samples, 0.20%)</title><rect x="643.1" y="99.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="646.1" y="110.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 0.06%)</title><rect x="643.2" y="83.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="646.2" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (23 samples, 0.13%)</title><rect x="644.0" y="83.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="647.0" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (22 samples, 0.12%)</title><rect x="644.0" y="67.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="647.0" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (20 samples, 0.11%)</title><rect x="644.1" y="51.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="647.1" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.11%)</title><rect x="644.1" y="35.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="647.1" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.07%)</title><rect x="645.8" y="179.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="648.8" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.04%)</title><rect x="646.0" y="163.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="649.0" y="174.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.03%)</title><rect x="647.0" y="403.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="650.0" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.03%)</title><rect x="647.0" y="387.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="650.0" y="398.0"></text>
</g>
<g>
<title>[worker-15 tid=27776] (996 samples, 5.45%)</title><rect x="648.2" y="739.0" width="64.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="651.2" y="750.0">[worker..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (9 samples, 0.05%)</title><rect x="648.3" y="723.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="651.3" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (8 samples, 0.04%)</title><rect x="648.4" y="707.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="651.4" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (8 samples, 0.04%)</title><rect x="648.4" y="691.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="651.4" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.04%)</title><rect x="648.4" y="675.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="651.4" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.03%)</title><rect x="648.5" y="659.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="651.5" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (4 samples, 0.02%)</title><rect x="648.6" y="643.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="651.6" y="654.0"></text>
</g>
<g>
<title>[unknown_Java] (39 samples, 0.21%)</title><rect x="648.9" y="723.0" width="2.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="651.9" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (945 samples, 5.17%)</title><rect x="651.4" y="723.0" width="61.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.4" y="734.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (945 samples, 5.17%)</title><rect x="651.4" y="707.0" width="61.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.4" y="718.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (945 samples, 5.17%)</title><rect x="651.4" y="691.0" width="61.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.4" y="702.0">java/u..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (943 samples, 5.16%)</title><rect x="651.6" y="675.0" width="60.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="654.6" y="686.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (943 samples, 5.16%)</title><rect x="651.6" y="659.0" width="60.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.6" y="670.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (813 samples, 4.45%)</title><rect x="651.8" y="643.0" width="52.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.8" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (813 samples, 4.45%)</title><rect x="651.8" y="627.0" width="52.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.8" y="638.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (813 samples, 4.45%)</title><rect x="651.8" y="611.0" width="52.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.8" y="622.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (694 samples, 3.80%)</title><rect x="652.3" y="595.0" width="44.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="655.3" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (57 samples, 0.31%)</title><rect x="652.3" y="579.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="655.3" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (50 samples, 0.27%)</title><rect x="652.4" y="563.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.4" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (39 samples, 0.21%)</title><rect x="652.5" y="547.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="655.5" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (39 samples, 0.21%)</title><rect x="652.5" y="531.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="655.5" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (38 samples, 0.21%)</title><rect x="652.5" y="515.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="655.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (36 samples, 0.20%)</title><rect x="652.7" y="499.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="655.7" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (36 samples, 0.20%)</title><rect x="652.7" y="483.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.02%)</title><rect x="652.7" y="467.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="655.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4 samples, 0.02%)</title><rect x="652.7" y="451.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="655.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4 samples, 0.02%)</title><rect x="652.7" y="435.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="655.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4 samples, 0.02%)</title><rect x="652.7" y="419.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (4 samples, 0.02%)</title><rect x="652.7" y="403.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="655.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (32 samples, 0.18%)</title><rect x="652.9" y="467.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (32 samples, 0.18%)</title><rect x="652.9" y="451.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="655.9" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (32 samples, 0.18%)</title><rect x="652.9" y="435.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="655.9" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (31 samples, 0.17%)</title><rect x="653.0" y="419.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.0" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (30 samples, 0.16%)</title><rect x="653.1" y="403.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.1" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (30 samples, 0.16%)</title><rect x="653.1" y="387.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="656.1" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (28 samples, 0.15%)</title><rect x="653.2" y="371.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.2" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (27 samples, 0.15%)</title><rect x="653.3" y="355.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="656.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="653.5" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="656.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="653.5" y="323.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="656.5" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.03%)</title><rect x="653.5" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="656.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (17 samples, 0.09%)</title><rect x="653.8" y="339.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="656.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (14 samples, 0.08%)</title><rect x="654.0" y="323.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.0" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (14 samples, 0.08%)</title><rect x="654.0" y="307.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="657.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (14 samples, 0.08%)</title><rect x="654.0" y="291.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="657.0" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (13 samples, 0.07%)</title><rect x="654.1" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="657.1" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (13 samples, 0.07%)</title><rect x="654.1" y="259.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="657.1" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (13 samples, 0.07%)</title><rect x="654.1" y="243.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="657.1" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.07%)</title><rect x="654.1" y="227.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="657.1" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (13 samples, 0.07%)</title><rect x="654.1" y="211.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="657.1" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="654.4" y="195.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.4" y="206.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.03%)</title><rect x="654.5" y="179.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="657.5" y="190.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (10 samples, 0.05%)</title><rect x="655.0" y="547.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="658.0" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (10 samples, 0.05%)</title><rect x="655.0" y="531.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (10 samples, 0.05%)</title><rect x="655.0" y="515.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="658.0" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (10 samples, 0.05%)</title><rect x="655.0" y="499.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="658.0" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.05%)</title><rect x="655.1" y="483.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.1" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.05%)</title><rect x="655.1" y="467.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="658.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (5 samples, 0.03%)</title><rect x="655.1" y="451.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="658.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5 samples, 0.03%)</title><rect x="655.1" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="658.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5 samples, 0.03%)</title><rect x="655.1" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="658.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5 samples, 0.03%)</title><rect x="655.1" y="403.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (4 samples, 0.02%)</title><rect x="655.4" y="451.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (4 samples, 0.02%)</title><rect x="655.4" y="435.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.4" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (4 samples, 0.02%)</title><rect x="655.4" y="419.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.4" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="655.4" y="403.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="658.4" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (4 samples, 0.02%)</title><rect x="655.4" y="387.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="658.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.02%)</title><rect x="655.4" y="371.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="658.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (4 samples, 0.02%)</title><rect x="655.4" y="355.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="658.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.02%)</title><rect x="655.4" y="339.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$73/502264873.apply (4 samples, 0.02%)</title><rect x="655.7" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="658.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4 samples, 0.02%)</title><rect x="655.7" y="547.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="658.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (637 samples, 3.49%)</title><rect x="656.0" y="579.0" width="41.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.0" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (533 samples, 2.92%)</title><rect x="656.0" y="563.0" width="34.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.0" y="574.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (26 samples, 0.14%)</title><rect x="656.3" y="547.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="659.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (26 samples, 0.14%)</title><rect x="656.3" y="531.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="659.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (23 samples, 0.13%)</title><rect x="656.5" y="515.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (22 samples, 0.12%)</title><rect x="656.5" y="499.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="659.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (15 samples, 0.08%)</title><rect x="657.0" y="483.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="660.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.04%)</title><rect x="657.5" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.5" y="478.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (5 samples, 0.03%)</title><rect x="657.6" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="660.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (13 samples, 0.07%)</title><rect x="658.0" y="547.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (4 samples, 0.02%)</title><rect x="658.2" y="531.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (4 samples, 0.02%)</title><rect x="658.2" y="515.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.02%)</title><rect x="658.2" y="499.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="658.2" y="483.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (4 samples, 0.02%)</title><rect x="658.2" y="467.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="661.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (7 samples, 0.04%)</title><rect x="658.4" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="661.4" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5 samples, 0.03%)</title><rect x="658.4" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="661.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (5 samples, 0.03%)</title><rect x="658.4" y="499.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="661.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (488 samples, 2.67%)</title><rect x="658.9" y="547.0" width="31.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="661.9" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (488 samples, 2.67%)</title><rect x="658.9" y="531.0" width="31.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.9" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (488 samples, 2.67%)</title><rect x="658.9" y="515.0" width="31.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.9" y="526.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (98 samples, 0.54%)</title><rect x="658.9" y="499.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.9" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (80 samples, 0.44%)</title><rect x="659.8" y="483.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="662.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (13 samples, 0.07%)</title><rect x="664.2" y="467.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="667.2" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.02%)</title><rect x="665.0" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="668.0" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.02%)</title><rect x="665.0" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="668.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (47 samples, 0.26%)</title><rect x="665.3" y="499.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="668.3" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (39 samples, 0.21%)</title><rect x="665.3" y="483.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.3" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (39 samples, 0.21%)</title><rect x="665.3" y="467.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="668.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (39 samples, 0.21%)</title><rect x="665.3" y="451.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="668.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="665.3" y="435.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.3" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="665.3" y="419.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="665.3" y="403.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="668.3" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="665.3" y="387.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="668.3" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="665.3" y="371.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="668.3" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (14 samples, 0.08%)</title><rect x="665.3" y="355.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="668.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="665.6" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="665.7" y="323.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="668.7" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.04%)</title><rect x="665.7" y="307.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="668.7" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (25 samples, 0.14%)</title><rect x="666.2" y="355.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="669.2" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (7 samples, 0.04%)</title><rect x="667.3" y="339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="670.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="667.5" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="670.5" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="667.5" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="670.5" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (8 samples, 0.04%)</title><rect x="667.8" y="483.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="670.8" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.04%)</title><rect x="667.8" y="467.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="670.8" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="667.8" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="670.8" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="667.8" y="435.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="670.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="667.8" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="667.8" y="403.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="670.8" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="667.8" y="387.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="670.8" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.03%)</title><rect x="668.0" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.0" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.03%)</title><rect x="668.0" y="355.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (342 samples, 1.87%)</title><rect x="668.3" y="499.0" width="22.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.3" y="510.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (196 samples, 1.07%)</title><rect x="669.6" y="483.0" width="12.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="672.6" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (189 samples, 1.03%)</title><rect x="670.0" y="467.0" width="12.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="673.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (177 samples, 0.97%)</title><rect x="670.8" y="451.0" width="11.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.8" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (176 samples, 0.96%)</title><rect x="670.9" y="435.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.9" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (173 samples, 0.95%)</title><rect x="671.1" y="419.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="674.1" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (171 samples, 0.94%)</title><rect x="671.2" y="403.0" width="11.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="674.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (166 samples, 0.91%)</title><rect x="671.5" y="387.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="674.5" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (165 samples, 0.90%)</title><rect x="671.6" y="371.0" width="10.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="674.6" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (50 samples, 0.27%)</title><rect x="677.5" y="355.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="680.5" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (24 samples, 0.13%)</title><rect x="680.7" y="355.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="681.9" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="684.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="681.9" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="684.9" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="681.9" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="684.9" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (39 samples, 0.21%)</title><rect x="682.3" y="483.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="685.3" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (39 samples, 0.21%)</title><rect x="682.3" y="467.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="685.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="682.3" y="451.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.3" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="682.3" y="435.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="685.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="682.3" y="419.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="685.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="682.3" y="403.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.3" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (35 samples, 0.19%)</title><rect x="682.4" y="387.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.4" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (12 samples, 0.07%)</title><rect x="682.8" y="371.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.8" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="683.1" y="355.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.03%)</title><rect x="683.2" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.2" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="683.2" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="686.2" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (17 samples, 0.09%)</title><rect x="683.5" y="371.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.5" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (16 samples, 0.09%)</title><rect x="683.6" y="355.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="683.7" y="339.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (11 samples, 0.06%)</title><rect x="683.9" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="686.9" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (11 samples, 0.06%)</title><rect x="683.9" y="323.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="686.9" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (69 samples, 0.38%)</title><rect x="684.8" y="483.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.8" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (60 samples, 0.33%)</title><rect x="685.2" y="467.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.2" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (12 samples, 0.07%)</title><rect x="689.2" y="483.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.2" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="689.4" y="467.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.4" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.04%)</title><rect x="689.5" y="451.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="692.5" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.04%)</title><rect x="689.5" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="689.6" y="419.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="692.6" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.03%)</title><rect x="690.0" y="483.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="693.0" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.03%)</title><rect x="690.0" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="693.0" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="690.0" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.0" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.03%)</title><rect x="690.0" y="435.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (104 samples, 0.57%)</title><rect x="690.4" y="563.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.4" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (94 samples, 0.51%)</title><rect x="690.4" y="547.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="693.4" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (93 samples, 0.51%)</title><rect x="690.5" y="531.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="693.5" y="542.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.04%)</title><rect x="690.9" y="515.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="693.9" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (76 samples, 0.42%)</title><rect x="691.4" y="515.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="694.4" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (76 samples, 0.42%)</title><rect x="691.4" y="499.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="694.4" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (73 samples, 0.40%)</title><rect x="691.6" y="483.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="694.6" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (73 samples, 0.40%)</title><rect x="691.6" y="467.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="694.6" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (69 samples, 0.38%)</title><rect x="691.8" y="451.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="694.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (69 samples, 0.38%)</title><rect x="691.8" y="435.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (28 samples, 0.15%)</title><rect x="691.8" y="419.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (26 samples, 0.14%)</title><rect x="691.9" y="403.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="694.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (26 samples, 0.14%)</title><rect x="691.9" y="387.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="694.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (26 samples, 0.14%)</title><rect x="691.9" y="371.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (17 samples, 0.09%)</title><rect x="692.1" y="355.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="695.1" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (10 samples, 0.05%)</title><rect x="692.4" y="339.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.4" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (10 samples, 0.05%)</title><rect x="692.4" y="323.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="695.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="692.4" y="307.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (7 samples, 0.04%)</title><rect x="693.2" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="696.2" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4 samples, 0.02%)</title><rect x="693.4" y="339.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (41 samples, 0.22%)</title><rect x="693.6" y="419.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="696.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (41 samples, 0.22%)</title><rect x="693.6" y="403.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (40 samples, 0.22%)</title><rect x="693.7" y="387.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (39 samples, 0.21%)</title><rect x="693.8" y="371.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="696.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (38 samples, 0.21%)</title><rect x="693.8" y="355.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (38 samples, 0.21%)</title><rect x="693.8" y="339.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="696.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (36 samples, 0.20%)</title><rect x="693.9" y="323.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="696.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (36 samples, 0.20%)</title><rect x="693.9" y="307.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="696.9" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.05%)</title><rect x="694.1" y="291.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.1" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.05%)</title><rect x="694.1" y="275.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.1" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.04%)</title><rect x="694.2" y="259.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (22 samples, 0.12%)</title><rect x="694.8" y="291.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="697.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (19 samples, 0.10%)</title><rect x="695.0" y="275.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="698.0" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (17 samples, 0.09%)</title><rect x="695.0" y="259.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="698.0" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (17 samples, 0.09%)</title><rect x="695.0" y="243.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="698.0" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (14 samples, 0.08%)</title><rect x="695.2" y="227.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="698.2" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (14 samples, 0.08%)</title><rect x="695.2" y="211.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="698.2" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (14 samples, 0.08%)</title><rect x="695.2" y="195.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="698.2" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (14 samples, 0.08%)</title><rect x="695.2" y="179.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="698.2" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (14 samples, 0.08%)</title><rect x="695.2" y="163.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="698.2" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="695.6" y="147.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.6" y="158.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.03%)</title><rect x="695.8" y="131.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (10 samples, 0.05%)</title><rect x="696.5" y="547.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (10 samples, 0.05%)</title><rect x="696.5" y="531.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.04%)</title><rect x="696.7" y="515.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.7" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (4 samples, 0.02%)</title><rect x="696.7" y="499.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (4 samples, 0.02%)</title><rect x="696.7" y="483.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (89 samples, 0.49%)</title><rect x="697.1" y="595.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="700.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (23 samples, 0.13%)</title><rect x="697.3" y="579.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 0.11%)</title><rect x="697.5" y="563.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (20 samples, 0.11%)</title><rect x="697.5" y="547.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (17 samples, 0.09%)</title><rect x="697.6" y="531.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="700.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (16 samples, 0.09%)</title><rect x="697.6" y="515.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (16 samples, 0.09%)</title><rect x="697.6" y="499.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 0.09%)</title><rect x="697.6" y="483.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.09%)</title><rect x="697.6" y="467.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="700.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.09%)</title><rect x="697.6" y="451.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="700.6" y="462.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.06%)</title><rect x="698.0" y="435.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="701.0" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="698.1" y="419.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="701.1" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="698.1" y="403.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="701.1" y="414.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.04%)</title><rect x="698.1" y="387.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="701.1" y="398.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.04%)</title><rect x="698.1" y="371.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="701.1" y="382.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.04%)</title><rect x="698.1" y="355.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="701.1" y="366.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.04%)</title><rect x="698.1" y="339.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="701.1" y="350.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.04%)</title><rect x="698.1" y="323.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="701.1" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.04%)</title><rect x="698.1" y="307.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="701.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (61 samples, 0.33%)</title><rect x="698.8" y="579.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="701.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (61 samples, 0.33%)</title><rect x="698.8" y="563.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (48 samples, 0.26%)</title><rect x="698.9" y="547.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="701.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (5 samples, 0.03%)</title><rect x="699.1" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.03%)</title><rect x="699.1" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="702.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.03%)</title><rect x="699.1" y="499.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.03%)</title><rect x="699.1" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.03%)</title><rect x="699.1" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.1" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.02%)</title><rect x="699.2" y="451.0" width="0.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="702.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (39 samples, 0.21%)</title><rect x="699.4" y="531.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="702.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (39 samples, 0.21%)</title><rect x="699.4" y="515.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.4" y="526.0"></text>
</g>
<g>
<title>Unsafe_Park (21 samples, 0.11%)</title><rect x="699.5" y="499.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="702.5" y="510.0"></text>
</g>
<g>
<title>__lll_unlock_wake (16 samples, 0.09%)</title><rect x="699.8" y="483.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="702.8" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.07%)</title><rect x="700.0" y="467.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="703.0" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.07%)</title><rect x="700.0" y="451.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="703.0" y="462.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="700.5" y="435.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="703.5" y="446.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.09%)</title><rect x="700.9" y="499.0" width="1.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="703.9" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_wait (12 samples, 0.07%)</title><rect x="700.9" y="483.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="703.9" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="701.1" y="467.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="704.1" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="701.1" y="451.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="704.1" y="462.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="701.4" y="435.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="704.4" y="446.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="701.4" y="419.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="704.4" y="430.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.02%)</title><rect x="701.4" y="403.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="704.4" y="414.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.02%)</title><rect x="701.4" y="387.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="704.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.07%)</title><rect x="702.0" y="547.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="705.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.07%)</title><rect x="702.0" y="531.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="705.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.07%)</title><rect x="702.0" y="515.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.07%)</title><rect x="702.0" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="705.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.07%)</title><rect x="702.0" y="483.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.0" y="494.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.02%)</title><rect x="702.0" y="467.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="705.0" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.04%)</title><rect x="702.2" y="467.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="705.2" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="702.3" y="451.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="705.3" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="702.3" y="435.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="705.3" y="446.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="702.3" y="419.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="705.3" y="430.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="702.4" y="403.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="705.4" y="414.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="702.4" y="387.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="705.4" y="398.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.03%)</title><rect x="702.4" y="371.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="705.4" y="382.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.03%)</title><rect x="702.4" y="355.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="705.4" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.03%)</title><rect x="702.4" y="339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="705.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.from (5 samples, 0.03%)</title><rect x="702.9" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (13 samples, 0.07%)</title><rect x="703.4" y="595.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="706.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (12 samples, 0.07%)</title><rect x="703.5" y="579.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="706.5" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (10 samples, 0.05%)</title><rect x="703.5" y="563.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="706.5" y="574.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (5 samples, 0.03%)</title><rect x="703.6" y="547.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="706.6" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (4 samples, 0.02%)</title><rect x="703.9" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="706.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (127 samples, 0.70%)</title><rect x="704.3" y="643.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="707.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (127 samples, 0.70%)</title><rect x="704.3" y="627.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="707.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (119 samples, 0.65%)</title><rect x="704.7" y="611.0" width="7.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.7" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (116 samples, 0.63%)</title><rect x="704.9" y="595.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.9" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (116 samples, 0.63%)</title><rect x="704.9" y="579.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="707.9" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (112 samples, 0.61%)</title><rect x="705.1" y="563.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.1" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (110 samples, 0.60%)</title><rect x="705.2" y="547.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.2" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (107 samples, 0.59%)</title><rect x="705.2" y="531.0" width="7.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="708.2" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (105 samples, 0.57%)</title><rect x="705.4" y="515.0" width="6.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="708.4" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (105 samples, 0.57%)</title><rect x="705.4" y="499.0" width="6.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="708.4" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (104 samples, 0.57%)</title><rect x="705.4" y="483.0" width="6.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="708.4" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (104 samples, 0.57%)</title><rect x="705.4" y="467.0" width="6.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="708.4" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (100 samples, 0.55%)</title><rect x="705.5" y="451.0" width="6.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="708.5" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (98 samples, 0.54%)</title><rect x="705.6" y="435.0" width="6.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="708.6" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (97 samples, 0.53%)</title><rect x="705.7" y="419.0" width="6.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="708.7" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (89 samples, 0.49%)</title><rect x="705.8" y="403.0" width="5.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="708.8" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (89 samples, 0.49%)</title><rect x="705.8" y="387.0" width="5.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="708.8" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (86 samples, 0.47%)</title><rect x="705.8" y="371.0" width="5.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="708.8" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (84 samples, 0.46%)</title><rect x="705.9" y="355.0" width="5.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="708.9" y="366.0"></text>
</g>
<g>
<title>ip_local_out (16 samples, 0.09%)</title><rect x="705.9" y="339.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="708.9" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (16 samples, 0.09%)</title><rect x="705.9" y="323.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="708.9" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.09%)</title><rect x="705.9" y="307.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="708.9" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (9 samples, 0.05%)</title><rect x="706.0" y="291.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="709.0" y="302.0"></text>
</g>
<g>
<title>ip_output (68 samples, 0.37%)</title><rect x="706.9" y="339.0" width="4.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="709.9" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (65 samples, 0.36%)</title><rect x="706.9" y="323.0" width="4.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="709.9" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.03%)</title><rect x="706.9" y="307.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="709.9" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.02%)</title><rect x="706.9" y="291.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="709.9" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.02%)</title><rect x="706.9" y="275.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="709.9" y="286.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.02%)</title><rect x="706.9" y="259.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="709.9" y="270.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.02%)</title><rect x="706.9" y="243.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="709.9" y="254.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (60 samples, 0.33%)</title><rect x="707.3" y="307.0" width="3.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="710.3" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (60 samples, 0.33%)</title><rect x="707.3" y="291.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="710.3" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (60 samples, 0.33%)</title><rect x="707.3" y="275.0" width="3.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="710.3" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (60 samples, 0.33%)</title><rect x="707.3" y="259.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="710.3" y="270.0"></text>
</g>
<g>
<title>net_rx_action (60 samples, 0.33%)</title><rect x="707.3" y="243.0" width="3.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="710.3" y="254.0"></text>
</g>
<g>
<title>process_backlog (59 samples, 0.32%)</title><rect x="707.3" y="227.0" width="3.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="710.3" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (57 samples, 0.31%)</title><rect x="707.4" y="211.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="710.4" y="222.0"></text>
</g>
<g>
<title>ip_rcv (54 samples, 0.30%)</title><rect x="707.6" y="195.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="710.6" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (48 samples, 0.26%)</title><rect x="707.6" y="179.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="710.6" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (39 samples, 0.21%)</title><rect x="707.6" y="163.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="710.6" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (39 samples, 0.21%)</title><rect x="707.6" y="147.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="710.6" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (38 samples, 0.21%)</title><rect x="707.7" y="131.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="710.7" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (35 samples, 0.19%)</title><rect x="707.9" y="115.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="710.9" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (35 samples, 0.19%)</title><rect x="707.9" y="99.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="710.9" y="110.0"></text>
</g>
<g>
<title>tcp_ack (7 samples, 0.04%)</title><rect x="708.2" y="83.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="711.2" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (22 samples, 0.12%)</title><rect x="708.7" y="83.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="711.7" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (19 samples, 0.10%)</title><rect x="708.9" y="67.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="711.9" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (19 samples, 0.10%)</title><rect x="708.9" y="51.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="711.9" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 0.10%)</title><rect x="708.9" y="35.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="711.9" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.05%)</title><rect x="710.2" y="163.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="713.2" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.04%)</title><rect x="710.2" y="147.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="713.2" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.03%)</title><rect x="710.7" y="179.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="713.7" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.03%)</title><rect x="710.7" y="163.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="713.7" y="174.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.04%)</title><rect x="711.5" y="403.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="714.5" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.04%)</title><rect x="711.5" y="387.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="714.5" y="398.0"></text>
</g>
<g>
<title>[worker-17 tid=27962] (989 samples, 5.41%)</title><rect x="712.5" y="739.0" width="63.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="715.5" y="750.0">[worker..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.02%)</title><rect x="712.7" y="723.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="715.7" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.02%)</title><rect x="712.7" y="707.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="715.7" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.02%)</title><rect x="712.7" y="691.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="715.7" y="702.0"></text>
</g>
<g>
<title>[unknown_Java] (64 samples, 0.35%)</title><rect x="713.0" y="723.0" width="4.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="716.0" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.04%)</title><rect x="716.6" y="707.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="719.6" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="716.7" y="691.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="719.7" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="716.7" y="675.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="719.7" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.04%)</title><rect x="716.7" y="659.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="719.7" y="670.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.04%)</title><rect x="716.7" y="643.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="719.7" y="654.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.04%)</title><rect x="716.7" y="627.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="719.7" y="638.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.03%)</title><rect x="716.7" y="611.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="719.7" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.03%)</title><rect x="716.7" y="595.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="719.7" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.03%)</title><rect x="716.7" y="579.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="719.7" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.run (916 samples, 5.01%)</title><rect x="717.2" y="723.0" width="59.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.2" y="734.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (916 samples, 5.01%)</title><rect x="717.2" y="707.0" width="59.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="720.2" y="718.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (916 samples, 5.01%)</title><rect x="717.2" y="691.0" width="59.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="720.2" y="702.0">java/u..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (915 samples, 5.01%)</title><rect x="717.3" y="675.0" width="59.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="720.3" y="686.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (915 samples, 5.01%)</title><rect x="717.3" y="659.0" width="59.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.3" y="670.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (802 samples, 4.39%)</title><rect x="717.3" y="643.0" width="51.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.3" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (802 samples, 4.39%)</title><rect x="717.3" y="627.0" width="51.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.3" y="638.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (802 samples, 4.39%)</title><rect x="717.3" y="611.0" width="51.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.3" y="622.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.04%)</title><rect x="717.4" y="595.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="720.4" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.04%)</title><rect x="717.4" y="579.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="720.4" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="717.5" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="720.5" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="717.6" y="547.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.6" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="717.6" y="531.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="720.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (682 samples, 3.73%)</title><rect x="718.0" y="595.0" width="44.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="721.0" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (58 samples, 0.32%)</title><rect x="718.0" y="579.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="721.0" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (55 samples, 0.30%)</title><rect x="718.1" y="563.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="721.1" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (38 samples, 0.21%)</title><rect x="718.1" y="547.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="721.1" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (38 samples, 0.21%)</title><rect x="718.1" y="531.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="721.1" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (38 samples, 0.21%)</title><rect x="718.1" y="515.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.1" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (36 samples, 0.20%)</title><rect x="718.2" y="499.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="721.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (36 samples, 0.20%)</title><rect x="718.2" y="483.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="721.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (33 samples, 0.18%)</title><rect x="718.4" y="467.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="721.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (33 samples, 0.18%)</title><rect x="718.4" y="451.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="721.4" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (33 samples, 0.18%)</title><rect x="718.4" y="435.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="721.4" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (33 samples, 0.18%)</title><rect x="718.4" y="419.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="721.4" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (32 samples, 0.18%)</title><rect x="718.5" y="403.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="721.5" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (32 samples, 0.18%)</title><rect x="718.5" y="387.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="721.5" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (30 samples, 0.16%)</title><rect x="718.6" y="371.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="721.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (30 samples, 0.16%)</title><rect x="718.6" y="355.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="721.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.08%)</title><rect x="718.7" y="339.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="721.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.08%)</title><rect x="718.7" y="323.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="721.7" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.07%)</title><rect x="718.8" y="307.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="721.8" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (14 samples, 0.08%)</title><rect x="719.7" y="339.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="722.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (13 samples, 0.07%)</title><rect x="719.7" y="323.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.7" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13 samples, 0.07%)</title><rect x="719.7" y="307.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.7" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13 samples, 0.07%)</title><rect x="719.7" y="291.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="722.7" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (10 samples, 0.05%)</title><rect x="719.9" y="275.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="722.9" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="719.9" y="259.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="722.9" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="719.9" y="243.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="722.9" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="719.9" y="227.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.9" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="719.9" y="211.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="722.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (17 samples, 0.09%)</title><rect x="720.6" y="547.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="723.6" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (17 samples, 0.09%)</title><rect x="720.6" y="531.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="723.6" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (17 samples, 0.09%)</title><rect x="720.6" y="515.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="723.6" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (17 samples, 0.09%)</title><rect x="720.6" y="499.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="723.6" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.09%)</title><rect x="720.6" y="483.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="723.6" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (17 samples, 0.09%)</title><rect x="720.6" y="467.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="723.6" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (10 samples, 0.05%)</title><rect x="720.6" y="451.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="723.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (10 samples, 0.05%)</title><rect x="720.6" y="435.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="723.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (10 samples, 0.05%)</title><rect x="720.6" y="419.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="723.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (10 samples, 0.05%)</title><rect x="720.6" y="403.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (6 samples, 0.03%)</title><rect x="720.8" y="387.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="723.8" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="720.8" y="371.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="723.8" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="720.8" y="355.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="723.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (7 samples, 0.04%)</title><rect x="721.2" y="451.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (7 samples, 0.04%)</title><rect x="721.2" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.2" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (7 samples, 0.04%)</title><rect x="721.2" y="419.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="724.2" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.04%)</title><rect x="721.2" y="403.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="724.2" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (7 samples, 0.04%)</title><rect x="721.2" y="387.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="724.2" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.04%)</title><rect x="721.2" y="371.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.2" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (7 samples, 0.04%)</title><rect x="721.2" y="355.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="724.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.04%)</title><rect x="721.2" y="339.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="721.3" y="323.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="724.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="721.3" y="307.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="724.3" y="318.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="721.3" y="291.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (623 samples, 3.41%)</title><rect x="721.8" y="579.0" width="40.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="724.8" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (545 samples, 2.98%)</title><rect x="721.8" y="563.0" width="35.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="724.8" y="574.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (22 samples, 0.12%)</title><rect x="721.9" y="547.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (20 samples, 0.11%)</title><rect x="722.0" y="531.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="725.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (18 samples, 0.10%)</title><rect x="722.2" y="515.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (18 samples, 0.10%)</title><rect x="722.2" y="499.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (8 samples, 0.04%)</title><rect x="722.8" y="483.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.03%)</title><rect x="722.9" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="725.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (10 samples, 0.05%)</title><rect x="723.5" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="726.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (5 samples, 0.03%)</title><rect x="723.5" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="726.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (4 samples, 0.02%)</title><rect x="723.9" y="531.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="726.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (509 samples, 2.79%)</title><rect x="724.1" y="547.0" width="32.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="727.1" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (509 samples, 2.79%)</title><rect x="724.1" y="531.0" width="32.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="727.1" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (509 samples, 2.79%)</title><rect x="724.1" y="515.0" width="32.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="727.1" y="526.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (86 samples, 0.47%)</title><rect x="724.8" y="499.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.8" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (69 samples, 0.38%)</title><rect x="725.5" y="483.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.5" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.base (5 samples, 0.03%)</title><rect x="728.9" y="467.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="731.9" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.03%)</title><rect x="729.2" y="467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="732.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (7 samples, 0.04%)</title><rect x="729.5" y="467.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="732.5" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.02%)</title><rect x="730.0" y="483.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="733.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (40 samples, 0.22%)</title><rect x="730.4" y="499.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.4" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (28 samples, 0.15%)</title><rect x="730.4" y="483.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="733.4" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (28 samples, 0.15%)</title><rect x="730.4" y="467.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.4" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (28 samples, 0.15%)</title><rect x="730.4" y="451.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="733.4" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (28 samples, 0.15%)</title><rect x="730.4" y="435.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.4" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (28 samples, 0.15%)</title><rect x="730.4" y="419.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.4" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (28 samples, 0.15%)</title><rect x="730.4" y="403.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.4" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (28 samples, 0.15%)</title><rect x="730.4" y="387.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="733.4" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (28 samples, 0.15%)</title><rect x="730.4" y="371.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.4" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="730.4" y="355.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.4" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="730.5" y="339.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.03%)</title><rect x="730.5" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="733.5" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.03%)</title><rect x="730.5" y="307.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="733.5" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (20 samples, 0.11%)</title><rect x="730.9" y="355.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.9" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="731.6" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="734.6" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="731.9" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="734.9" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (12 samples, 0.07%)</title><rect x="732.2" y="483.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.2" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (12 samples, 0.07%)</title><rect x="732.2" y="467.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.2" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (12 samples, 0.07%)</title><rect x="732.2" y="451.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.2" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (12 samples, 0.07%)</title><rect x="732.2" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="735.2" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.07%)</title><rect x="732.2" y="419.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.07%)</title><rect x="732.2" y="403.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.2" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.07%)</title><rect x="732.2" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.2" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (10 samples, 0.05%)</title><rect x="732.3" y="371.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.3" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (10 samples, 0.05%)</title><rect x="732.3" y="355.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="735.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="732.6" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="735.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (372 samples, 2.04%)</title><rect x="733.0" y="499.0" width="24.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="736.0" y="510.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (214 samples, 1.17%)</title><rect x="734.8" y="483.0" width="13.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="737.8" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (211 samples, 1.15%)</title><rect x="735.0" y="467.0" width="13.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="738.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (171 samples, 0.94%)</title><rect x="737.6" y="451.0" width="11.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="740.6" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (171 samples, 0.94%)</title><rect x="737.6" y="435.0" width="11.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="740.6" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (166 samples, 0.91%)</title><rect x="737.9" y="419.0" width="10.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="740.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (160 samples, 0.88%)</title><rect x="738.3" y="403.0" width="10.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="741.3" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (156 samples, 0.85%)</title><rect x="738.6" y="387.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="741.6" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (153 samples, 0.84%)</title><rect x="738.8" y="371.0" width="9.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="741.8" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (54 samples, 0.30%)</title><rect x="743.8" y="355.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="747.0" y="339.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="750.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="747.0" y="323.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.0" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="747.0" y="307.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="750.0" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (21 samples, 0.11%)</title><rect x="747.3" y="355.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="750.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.03%)</title><rect x="748.3" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="748.3" y="323.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="751.3" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.03%)</title><rect x="748.3" y="307.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="751.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (39 samples, 0.21%)</title><rect x="748.7" y="483.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.7" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (37 samples, 0.20%)</title><rect x="748.8" y="467.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.8" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (37 samples, 0.20%)</title><rect x="748.8" y="451.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.8" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (37 samples, 0.20%)</title><rect x="748.8" y="435.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="751.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (37 samples, 0.20%)</title><rect x="748.8" y="419.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="751.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (37 samples, 0.20%)</title><rect x="748.8" y="403.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.8" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (36 samples, 0.20%)</title><rect x="748.8" y="387.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="751.8" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (12 samples, 0.07%)</title><rect x="749.4" y="371.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="752.4" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="749.6" y="355.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="749.9" y="339.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.9" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="749.9" y="323.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="752.9" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (16 samples, 0.09%)</title><rect x="750.1" y="371.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="753.1" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (13 samples, 0.07%)</title><rect x="750.3" y="355.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="753.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="750.7" y="339.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="750.9" y="339.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="753.9" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="750.9" y="323.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="753.9" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (70 samples, 0.38%)</title><rect x="751.2" y="483.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.2" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (64 samples, 0.35%)</title><rect x="751.5" y="467.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="754.5" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (15 samples, 0.08%)</title><rect x="755.7" y="483.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="758.7" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="756.0" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.0" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="756.3" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="759.3" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="756.3" y="451.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="759.3" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="756.3" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="759.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="756.4" y="419.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="759.4" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.03%)</title><rect x="756.7" y="483.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="759.7" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.03%)</title><rect x="756.7" y="467.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="756.7" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="759.7" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.03%)</title><rect x="756.7" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="759.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (78 samples, 0.43%)</title><rect x="757.0" y="563.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="760.0" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (71 samples, 0.39%)</title><rect x="757.0" y="547.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="760.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (71 samples, 0.39%)</title><rect x="757.0" y="531.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="760.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (62 samples, 0.34%)</title><rect x="757.4" y="515.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.4" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (62 samples, 0.34%)</title><rect x="757.4" y="499.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="760.4" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (61 samples, 0.33%)</title><rect x="757.4" y="483.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="760.4" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (61 samples, 0.33%)</title><rect x="757.4" y="467.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="760.4" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (55 samples, 0.30%)</title><rect x="757.8" y="451.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="760.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (55 samples, 0.30%)</title><rect x="757.8" y="435.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="760.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (25 samples, 0.14%)</title><rect x="757.8" y="419.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.02%)</title><rect x="757.8" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="760.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (21 samples, 0.11%)</title><rect x="758.1" y="403.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="761.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (21 samples, 0.11%)</title><rect x="758.1" y="387.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="761.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (21 samples, 0.11%)</title><rect x="758.1" y="371.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (4 samples, 0.02%)</title><rect x="758.1" y="355.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="761.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (15 samples, 0.08%)</title><rect x="758.3" y="355.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="761.3" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (7 samples, 0.04%)</title><rect x="758.5" y="339.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="761.5" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (7 samples, 0.04%)</title><rect x="758.5" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="761.5" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.03%)</title><rect x="758.5" y="307.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="761.5" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="758.5" y="291.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="761.5" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (5 samples, 0.03%)</title><rect x="758.9" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="761.9" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.03%)</title><rect x="758.9" y="323.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="761.9" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="758.9" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="761.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (30 samples, 0.16%)</title><rect x="759.4" y="419.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="762.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (30 samples, 0.16%)</title><rect x="759.4" y="403.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="762.4" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (30 samples, 0.16%)</title><rect x="759.4" y="387.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="762.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (30 samples, 0.16%)</title><rect x="759.4" y="371.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="762.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (27 samples, 0.15%)</title><rect x="759.6" y="355.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="762.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (27 samples, 0.15%)</title><rect x="759.6" y="339.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (24 samples, 0.13%)</title><rect x="759.8" y="323.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="762.8" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (23 samples, 0.13%)</title><rect x="759.9" y="307.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="762.9" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.05%)</title><rect x="760.1" y="291.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="763.1" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.04%)</title><rect x="760.2" y="275.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="763.2" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.04%)</title><rect x="760.2" y="259.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="763.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (11 samples, 0.06%)</title><rect x="760.7" y="291.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="763.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (9 samples, 0.05%)</title><rect x="760.8" y="275.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="763.8" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (9 samples, 0.05%)</title><rect x="760.8" y="259.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.8" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (9 samples, 0.05%)</title><rect x="760.8" y="243.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="763.8" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.04%)</title><rect x="760.9" y="227.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.9" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="760.9" y="211.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="763.9" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="761.0" y="195.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.0" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="761.0" y="179.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="764.0" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="761.0" y="163.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="764.0" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="761.1" y="147.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="764.1" y="158.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="761.1" y="131.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="764.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (7 samples, 0.04%)</title><rect x="761.6" y="547.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="764.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (7 samples, 0.04%)</title><rect x="761.6" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="764.6" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.03%)</title><rect x="761.6" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.6" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (6 samples, 0.03%)</title><rect x="761.6" y="499.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="764.6" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (6 samples, 0.03%)</title><rect x="761.6" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="764.6" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (6 samples, 0.03%)</title><rect x="761.6" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="764.6" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="761.6" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="764.6" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="761.6" y="435.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="764.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (6 samples, 0.03%)</title><rect x="761.6" y="419.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="764.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (6 samples, 0.03%)</title><rect x="761.6" y="403.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="764.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (6 samples, 0.03%)</title><rect x="761.6" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="764.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (6 samples, 0.03%)</title><rect x="761.6" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="764.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (5 samples, 0.03%)</title><rect x="761.7" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="764.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.03%)</title><rect x="761.7" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.7" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (5 samples, 0.03%)</title><rect x="761.7" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="764.7" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (5 samples, 0.03%)</title><rect x="761.7" y="307.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (4 samples, 0.02%)</title><rect x="761.8" y="291.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="764.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (100 samples, 0.55%)</title><rect x="762.0" y="595.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (31 samples, 0.17%)</title><rect x="762.0" y="579.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="765.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (28 samples, 0.15%)</title><rect x="762.2" y="563.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="765.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (28 samples, 0.15%)</title><rect x="762.2" y="547.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (23 samples, 0.13%)</title><rect x="762.3" y="531.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="765.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (23 samples, 0.13%)</title><rect x="762.3" y="515.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="765.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (23 samples, 0.13%)</title><rect x="762.3" y="499.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="765.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (23 samples, 0.13%)</title><rect x="762.3" y="483.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="765.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (23 samples, 0.13%)</title><rect x="762.3" y="467.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="765.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (23 samples, 0.13%)</title><rect x="762.3" y="451.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="765.3" y="462.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.02%)</title><rect x="762.3" y="435.0" width="0.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="765.3" y="446.0"></text>
</g>
<g>
<title>__pthread_cond_signal (19 samples, 0.10%)</title><rect x="762.5" y="435.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="765.5" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.09%)</title><rect x="762.7" y="419.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="765.7" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.09%)</title><rect x="762.7" y="403.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="765.7" y="414.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.07%)</title><rect x="762.9" y="387.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="765.9" y="398.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.07%)</title><rect x="762.9" y="371.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="765.9" y="382.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.07%)</title><rect x="762.9" y="355.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="765.9" y="366.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.06%)</title><rect x="763.0" y="339.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="766.0" y="350.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.06%)</title><rect x="763.0" y="323.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="766.0" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.06%)</title><rect x="763.0" y="307.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="766.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (67 samples, 0.37%)</title><rect x="764.0" y="579.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="767.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (67 samples, 0.37%)</title><rect x="764.0" y="563.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="767.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (41 samples, 0.22%)</title><rect x="764.0" y="547.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="767.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (35 samples, 0.19%)</title><rect x="764.4" y="531.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="767.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (35 samples, 0.19%)</title><rect x="764.4" y="515.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="767.4" y="526.0"></text>
</g>
<g>
<title>Unsafe_Park (23 samples, 0.13%)</title><rect x="764.4" y="499.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="767.4" y="510.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.03%)</title><rect x="764.5" y="483.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="767.5" y="494.0"></text>
</g>
<g>
<title>__lll_unlock_wake (11 samples, 0.06%)</title><rect x="765.0" y="483.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="768.0" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="765.3" y="467.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="768.3" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="765.3" y="451.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="768.3" y="462.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="765.4" y="435.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="768.4" y="446.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.06%)</title><rect x="765.9" y="499.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="768.9" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.04%)</title><rect x="766.1" y="483.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="769.1" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="766.3" y="467.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="769.3" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="766.3" y="451.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="769.3" y="462.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="766.4" y="435.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="769.4" y="446.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="766.4" y="419.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="769.4" y="430.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.02%)</title><rect x="766.4" y="403.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="769.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.02%)</title><rect x="766.7" y="547.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.02%)</title><rect x="766.7" y="531.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="769.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (22 samples, 0.12%)</title><rect x="766.9" y="547.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="769.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (22 samples, 0.12%)</title><rect x="766.9" y="531.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="769.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (22 samples, 0.12%)</title><rect x="766.9" y="515.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (22 samples, 0.12%)</title><rect x="766.9" y="499.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="769.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (22 samples, 0.12%)</title><rect x="766.9" y="483.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.9" y="494.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.02%)</title><rect x="767.1" y="467.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="770.1" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 0.08%)</title><rect x="767.3" y="467.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="770.3" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.05%)</title><rect x="767.6" y="451.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="770.6" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.05%)</title><rect x="767.6" y="435.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="770.6" y="446.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.04%)</title><rect x="767.8" y="419.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="770.8" y="430.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.04%)</title><rect x="767.8" y="403.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="770.8" y="414.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.04%)</title><rect x="767.8" y="387.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="770.8" y="398.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.03%)</title><rect x="767.9" y="371.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="770.9" y="382.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.03%)</title><rect x="767.9" y="355.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="770.9" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.03%)</title><rect x="767.9" y="339.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="770.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (5 samples, 0.03%)</title><rect x="768.7" y="595.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (5 samples, 0.03%)</title><rect x="768.7" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (5 samples, 0.03%)</title><rect x="768.7" y="563.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="771.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (113 samples, 0.62%)</title><rect x="769.1" y="643.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (113 samples, 0.62%)</title><rect x="769.1" y="627.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="772.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (108 samples, 0.59%)</title><rect x="769.3" y="611.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="772.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.02%)</title><rect x="769.3" y="595.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="772.3" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (104 samples, 0.57%)</title><rect x="769.5" y="595.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="772.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (104 samples, 0.57%)</title><rect x="769.5" y="579.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="772.5" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (101 samples, 0.55%)</title><rect x="769.7" y="563.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="772.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (97 samples, 0.53%)</title><rect x="770.0" y="547.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="773.0" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (94 samples, 0.51%)</title><rect x="770.0" y="531.0" width="6.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="773.0" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (91 samples, 0.50%)</title><rect x="770.2" y="515.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="773.2" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (91 samples, 0.50%)</title><rect x="770.2" y="499.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="773.2" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (90 samples, 0.49%)</title><rect x="770.3" y="483.0" width="5.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="773.3" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (90 samples, 0.49%)</title><rect x="770.3" y="467.0" width="5.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="773.3" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (85 samples, 0.47%)</title><rect x="770.5" y="451.0" width="5.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="773.5" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (85 samples, 0.47%)</title><rect x="770.5" y="435.0" width="5.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="773.5" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (84 samples, 0.46%)</title><rect x="770.6" y="419.0" width="5.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="773.6" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (76 samples, 0.42%)</title><rect x="770.6" y="403.0" width="4.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="773.6" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (76 samples, 0.42%)</title><rect x="770.6" y="387.0" width="4.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="773.6" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (72 samples, 0.39%)</title><rect x="770.6" y="371.0" width="4.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="773.6" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (71 samples, 0.39%)</title><rect x="770.6" y="355.0" width="4.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="773.6" y="366.0"></text>
</g>
<g>
<title>ip_local_out (12 samples, 0.07%)</title><rect x="770.6" y="339.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="773.6" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (12 samples, 0.07%)</title><rect x="770.6" y="323.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="773.6" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.06%)</title><rect x="770.7" y="307.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="773.7" y="318.0"></text>
</g>
<g>
<title>ip_output (59 samples, 0.32%)</title><rect x="771.4" y="339.0" width="3.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="774.4" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (52 samples, 0.28%)</title><rect x="771.4" y="323.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="774.4" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (47 samples, 0.26%)</title><rect x="771.7" y="307.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="774.7" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (47 samples, 0.26%)</title><rect x="771.7" y="291.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="774.7" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (46 samples, 0.25%)</title><rect x="771.8" y="275.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="774.8" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (46 samples, 0.25%)</title><rect x="771.8" y="259.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="774.8" y="270.0"></text>
</g>
<g>
<title>net_rx_action (45 samples, 0.25%)</title><rect x="771.8" y="243.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="774.8" y="254.0"></text>
</g>
<g>
<title>process_backlog (43 samples, 0.24%)</title><rect x="772.0" y="227.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="775.0" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (43 samples, 0.24%)</title><rect x="772.0" y="211.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="775.0" y="222.0"></text>
</g>
<g>
<title>ip_rcv (43 samples, 0.24%)</title><rect x="772.0" y="195.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="775.0" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (36 samples, 0.20%)</title><rect x="772.0" y="179.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="775.0" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (32 samples, 0.18%)</title><rect x="772.0" y="163.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="775.0" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (32 samples, 0.18%)</title><rect x="772.0" y="147.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="775.0" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (31 samples, 0.17%)</title><rect x="772.0" y="131.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="775.0" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (27 samples, 0.15%)</title><rect x="772.3" y="115.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="775.3" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (27 samples, 0.15%)</title><rect x="772.3" y="99.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="775.3" y="110.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.02%)</title><rect x="772.4" y="83.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="775.4" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (22 samples, 0.12%)</title><rect x="772.6" y="83.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="775.6" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (20 samples, 0.11%)</title><rect x="772.6" y="67.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="775.6" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (17 samples, 0.09%)</title><rect x="772.8" y="51.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="775.8" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.09%)</title><rect x="772.8" y="35.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="775.8" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="774.0" y="163.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="777.0" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.04%)</title><rect x="774.3" y="179.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="777.3" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="774.4" y="163.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="777.4" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="774.9" y="323.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="777.9" y="334.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.02%)</title><rect x="775.5" y="403.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="778.5" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.02%)</title><rect x="775.5" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="778.5" y="398.0"></text>
</g>
<g>
<title>[worker-18 tid=28030] (996 samples, 5.45%)</title><rect x="776.4" y="739.0" width="64.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="779.4" y="750.0">[worker..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.02%)</title><rect x="776.6" y="723.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="779.6" y="734.0"></text>
</g>
<g>
<title>[unknown_Java] (52 samples, 0.28%)</title><rect x="776.8" y="723.0" width="3.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="779.8" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.02%)</title><rect x="779.9" y="707.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="782.9" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.run (937 samples, 5.13%)</title><rect x="780.2" y="723.0" width="60.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="783.2" y="734.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (937 samples, 5.13%)</title><rect x="780.2" y="707.0" width="60.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="783.2" y="718.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (937 samples, 5.13%)</title><rect x="780.2" y="691.0" width="60.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="783.2" y="702.0">java/u..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (934 samples, 5.11%)</title><rect x="780.4" y="675.0" width="60.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="783.4" y="686.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (934 samples, 5.11%)</title><rect x="780.4" y="659.0" width="60.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="783.4" y="670.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (824 samples, 4.51%)</title><rect x="780.4" y="643.0" width="53.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="783.4" y="654.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (824 samples, 4.51%)</title><rect x="780.4" y="627.0" width="53.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.4" y="638.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (824 samples, 4.51%)</title><rect x="780.4" y="611.0" width="53.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="783.4" y="622.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.04%)</title><rect x="780.6" y="595.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="783.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.04%)</title><rect x="780.6" y="579.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="783.6" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="780.7" y="563.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="783.7" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="780.8" y="547.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.8" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="780.8" y="531.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="783.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (699 samples, 3.83%)</title><rect x="781.0" y="595.0" width="45.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.0" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (70 samples, 0.38%)</title><rect x="781.1" y="579.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (62 samples, 0.34%)</title><rect x="781.1" y="563.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="784.1" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (44 samples, 0.24%)</title><rect x="781.1" y="547.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="784.1" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (44 samples, 0.24%)</title><rect x="781.1" y="531.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="784.1" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (43 samples, 0.24%)</title><rect x="781.2" y="515.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="784.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (40 samples, 0.22%)</title><rect x="781.4" y="499.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="784.4" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (40 samples, 0.22%)</title><rect x="781.4" y="483.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="784.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (38 samples, 0.21%)</title><rect x="781.5" y="467.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (38 samples, 0.21%)</title><rect x="781.5" y="451.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="784.5" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (38 samples, 0.21%)</title><rect x="781.5" y="435.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="784.5" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (38 samples, 0.21%)</title><rect x="781.5" y="419.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="784.5" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (37 samples, 0.20%)</title><rect x="781.6" y="403.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (37 samples, 0.20%)</title><rect x="781.6" y="387.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="784.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (35 samples, 0.19%)</title><rect x="781.7" y="371.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="784.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (35 samples, 0.19%)</title><rect x="781.7" y="355.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="784.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.09%)</title><rect x="782.0" y="339.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="785.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.08%)</title><rect x="782.1" y="323.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="785.1" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.07%)</title><rect x="782.2" y="307.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="785.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (5 samples, 0.03%)</title><rect x="782.7" y="291.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="785.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (14 samples, 0.08%)</title><rect x="783.0" y="339.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="786.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (12 samples, 0.07%)</title><rect x="783.1" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="786.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (12 samples, 0.07%)</title><rect x="783.1" y="307.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="786.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (12 samples, 0.07%)</title><rect x="783.1" y="291.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="786.1" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.05%)</title><rect x="783.3" y="275.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="786.3" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (9 samples, 0.05%)</title><rect x="783.3" y="259.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="786.3" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="783.5" y="243.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="786.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="783.5" y="227.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="786.5" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="783.5" y="211.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="786.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (18 samples, 0.10%)</title><rect x="784.0" y="547.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="787.0" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (18 samples, 0.10%)</title><rect x="784.0" y="531.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="787.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (18 samples, 0.10%)</title><rect x="784.0" y="515.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="787.0" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (18 samples, 0.10%)</title><rect x="784.0" y="499.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="787.0" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.10%)</title><rect x="784.0" y="483.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="787.0" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (18 samples, 0.10%)</title><rect x="784.0" y="467.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="787.0" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (10 samples, 0.05%)</title><rect x="784.0" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="787.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (8 samples, 0.04%)</title><rect x="784.1" y="435.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="787.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (8 samples, 0.04%)</title><rect x="784.1" y="419.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="787.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (8 samples, 0.04%)</title><rect x="784.1" y="403.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="787.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (8 samples, 0.04%)</title><rect x="784.6" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (8 samples, 0.04%)</title><rect x="784.6" y="435.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="787.6" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (8 samples, 0.04%)</title><rect x="784.6" y="419.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="787.6" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.04%)</title><rect x="784.6" y="403.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="787.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (8 samples, 0.04%)</title><rect x="784.6" y="387.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="787.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.04%)</title><rect x="784.6" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="787.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (7 samples, 0.04%)</title><rect x="784.7" y="355.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="787.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (6 samples, 0.03%)</title><rect x="784.8" y="339.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="787.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (4 samples, 0.02%)</title><rect x="785.1" y="563.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="788.1" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="785.1" y="547.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="788.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (628 samples, 3.44%)</title><rect x="785.6" y="579.0" width="40.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.6" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (533 samples, 2.92%)</title><rect x="785.6" y="563.0" width="34.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="788.6" y="574.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (30 samples, 0.16%)</title><rect x="786.0" y="547.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="789.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (30 samples, 0.16%)</title><rect x="786.0" y="531.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="789.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (26 samples, 0.14%)</title><rect x="786.2" y="515.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="789.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (25 samples, 0.14%)</title><rect x="786.3" y="499.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="789.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (16 samples, 0.09%)</title><rect x="786.9" y="483.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="789.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.04%)</title><rect x="787.5" y="467.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="790.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (17 samples, 0.09%)</title><rect x="788.0" y="547.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (8 samples, 0.04%)</title><rect x="788.1" y="531.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (7 samples, 0.04%)</title><rect x="788.1" y="515.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="791.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.03%)</title><rect x="788.1" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="791.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (6 samples, 0.03%)</title><rect x="788.1" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="791.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (6 samples, 0.03%)</title><rect x="788.1" y="467.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (5 samples, 0.03%)</title><rect x="788.1" y="451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="791.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (5 samples, 0.03%)</title><rect x="788.1" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (4 samples, 0.02%)</title><rect x="788.2" y="419.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (8 samples, 0.04%)</title><rect x="788.6" y="531.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="791.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.03%)</title><rect x="788.8" y="515.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="788.8" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="791.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (479 samples, 2.62%)</title><rect x="789.1" y="547.0" width="30.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="792.1" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (479 samples, 2.62%)</title><rect x="789.1" y="531.0" width="30.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="792.1" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (479 samples, 2.62%)</title><rect x="789.1" y="515.0" width="30.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="792.1" y="526.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (85 samples, 0.47%)</title><rect x="789.3" y="499.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="792.3" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (72 samples, 0.39%)</title><rect x="790.1" y="483.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.1" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (10 samples, 0.05%)</title><rect x="793.5" y="467.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.5" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.02%)</title><rect x="793.5" y="451.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="796.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (6 samples, 0.03%)</title><rect x="793.7" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="796.7" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.02%)</title><rect x="794.2" y="467.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="797.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (4 samples, 0.02%)</title><rect x="794.4" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="797.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (52 samples, 0.28%)</title><rect x="794.8" y="499.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="797.8" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (31 samples, 0.17%)</title><rect x="794.8" y="483.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="797.8" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (31 samples, 0.17%)</title><rect x="794.8" y="467.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="797.8" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (31 samples, 0.17%)</title><rect x="794.8" y="451.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="797.8" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (31 samples, 0.17%)</title><rect x="794.8" y="435.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="797.8" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (31 samples, 0.17%)</title><rect x="794.8" y="419.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="797.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (31 samples, 0.17%)</title><rect x="794.8" y="403.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="797.8" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (31 samples, 0.17%)</title><rect x="794.8" y="387.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="797.8" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (31 samples, 0.17%)</title><rect x="794.8" y="371.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="797.8" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.05%)</title><rect x="794.8" y="355.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="797.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="795.1" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="798.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="795.2" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="798.2" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="795.2" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="798.2" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (21 samples, 0.11%)</title><rect x="795.5" y="355.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.5" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="796.5" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="799.5" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (21 samples, 0.11%)</title><rect x="796.8" y="483.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="799.8" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (21 samples, 0.11%)</title><rect x="796.8" y="467.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="799.8" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (21 samples, 0.11%)</title><rect x="796.8" y="451.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.8" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (21 samples, 0.11%)</title><rect x="796.8" y="435.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (21 samples, 0.11%)</title><rect x="796.8" y="419.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="799.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (21 samples, 0.11%)</title><rect x="796.8" y="403.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="799.8" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (21 samples, 0.11%)</title><rect x="796.8" y="387.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="799.8" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="796.8" y="371.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.8" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="796.8" y="355.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="799.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (17 samples, 0.09%)</title><rect x="797.1" y="371.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="800.1" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (17 samples, 0.09%)</title><rect x="797.1" y="355.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="800.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.03%)</title><rect x="797.4" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="797.8" y="339.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="800.8" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.03%)</title><rect x="797.8" y="323.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="800.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (338 samples, 1.85%)</title><rect x="798.2" y="499.0" width="21.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="801.2" y="510.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (188 samples, 1.03%)</title><rect x="799.7" y="483.0" width="12.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="802.7" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (183 samples, 1.00%)</title><rect x="800.1" y="467.0" width="11.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="803.1" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (157 samples, 0.86%)</title><rect x="801.7" y="451.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="804.7" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (157 samples, 0.86%)</title><rect x="801.7" y="435.0" width="10.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="804.7" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (157 samples, 0.86%)</title><rect x="801.7" y="419.0" width="10.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="804.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (152 samples, 0.83%)</title><rect x="802.1" y="403.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.1" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (151 samples, 0.83%)</title><rect x="802.1" y="387.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="805.1" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (149 samples, 0.82%)</title><rect x="802.3" y="371.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="805.3" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (44 samples, 0.24%)</title><rect x="807.6" y="355.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="810.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="810.2" y="339.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="813.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="810.2" y="323.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="813.2" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="810.2" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="813.2" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (21 samples, 0.11%)</title><rect x="810.5" y="355.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.5" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="811.2" y="339.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="814.2" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (6 samples, 0.03%)</title><rect x="811.4" y="339.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="814.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="811.4" y="323.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="814.4" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.03%)</title><rect x="811.4" y="307.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="814.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (47 samples, 0.26%)</title><rect x="811.9" y="483.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="814.9" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (45 samples, 0.25%)</title><rect x="812.0" y="467.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (45 samples, 0.25%)</title><rect x="812.0" y="451.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="815.0" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (45 samples, 0.25%)</title><rect x="812.0" y="435.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="815.0" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (44 samples, 0.24%)</title><rect x="812.1" y="419.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="815.1" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (43 samples, 0.24%)</title><rect x="812.1" y="403.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="815.1" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="812.4" y="387.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="815.4" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (11 samples, 0.06%)</title><rect x="813.0" y="371.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="816.0" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.05%)</title><rect x="813.1" y="355.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="816.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="813.2" y="339.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="816.2" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.04%)</title><rect x="813.2" y="323.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="816.2" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (19 samples, 0.10%)</title><rect x="813.7" y="371.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="816.7" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (17 samples, 0.09%)</title><rect x="813.8" y="355.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="816.8" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.03%)</title><rect x="814.3" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="817.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="814.7" y="339.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.7" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="814.7" y="323.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="817.7" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (60 samples, 0.33%)</title><rect x="814.9" y="483.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="817.9" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (52 samples, 0.28%)</title><rect x="815.3" y="467.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="818.3" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.05%)</title><rect x="818.8" y="483.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.8" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="819.0" y="467.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="822.0" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="819.0" y="451.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.0" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.04%)</title><rect x="819.0" y="435.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.0" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="819.1" y="419.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="822.1" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.05%)</title><rect x="819.4" y="483.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.4" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.05%)</title><rect x="819.4" y="467.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="822.4" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (9 samples, 0.05%)</title><rect x="819.4" y="451.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="822.4" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (9 samples, 0.05%)</title><rect x="819.4" y="435.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="822.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (95 samples, 0.52%)</title><rect x="820.0" y="563.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="823.0" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (85 samples, 0.47%)</title><rect x="820.0" y="547.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="823.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (85 samples, 0.47%)</title><rect x="820.0" y="531.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="823.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (73 samples, 0.40%)</title><rect x="820.7" y="515.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.7" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (73 samples, 0.40%)</title><rect x="820.7" y="499.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="823.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (5 samples, 0.03%)</title><rect x="820.7" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (68 samples, 0.37%)</title><rect x="821.1" y="483.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="824.1" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (68 samples, 0.37%)</title><rect x="821.1" y="467.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="824.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.34%)</title><rect x="821.4" y="451.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="824.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.34%)</title><rect x="821.4" y="435.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (33 samples, 0.18%)</title><rect x="821.4" y="419.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="824.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (31 samples, 0.17%)</title><rect x="821.6" y="403.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="824.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (31 samples, 0.17%)</title><rect x="821.6" y="387.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="824.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (30 samples, 0.16%)</title><rect x="821.6" y="371.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="824.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (22 samples, 0.12%)</title><rect x="821.9" y="355.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="824.9" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="822.0" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="825.0" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (13 samples, 0.07%)</title><rect x="822.4" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="825.4" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (13 samples, 0.07%)</title><rect x="822.4" y="323.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (13 samples, 0.07%)</title><rect x="822.4" y="307.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="825.4" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="822.9" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="825.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="822.9" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="825.9" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="822.9" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="825.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (4 samples, 0.02%)</title><rect x="823.3" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="826.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (29 samples, 0.16%)</title><rect x="823.6" y="419.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (29 samples, 0.16%)</title><rect x="823.6" y="403.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="826.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (28 samples, 0.15%)</title><rect x="823.6" y="387.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="826.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (27 samples, 0.15%)</title><rect x="823.7" y="371.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (27 samples, 0.15%)</title><rect x="823.7" y="355.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (26 samples, 0.14%)</title><rect x="823.8" y="339.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="826.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (23 samples, 0.13%)</title><rect x="824.0" y="323.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="827.0" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (23 samples, 0.13%)</title><rect x="824.0" y="307.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="827.0" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.05%)</title><rect x="824.0" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.0" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.05%)</title><rect x="824.0" y="275.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="827.0" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.04%)</title><rect x="824.2" y="259.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="827.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (12 samples, 0.07%)</title><rect x="824.6" y="291.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="827.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (12 samples, 0.07%)</title><rect x="824.6" y="275.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="827.6" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (12 samples, 0.07%)</title><rect x="824.6" y="259.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="827.6" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (12 samples, 0.07%)</title><rect x="824.6" y="243.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="827.6" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.05%)</title><rect x="824.8" y="227.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="827.8" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (9 samples, 0.05%)</title><rect x="824.8" y="211.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="827.8" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="824.9" y="195.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="827.9" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="824.9" y="179.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="827.9" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="824.9" y="163.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="827.9" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="825.1" y="147.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="828.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (10 samples, 0.05%)</title><rect x="825.5" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="828.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (10 samples, 0.05%)</title><rect x="825.5" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="828.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.05%)</title><rect x="825.5" y="515.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.5" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (9 samples, 0.05%)</title><rect x="825.5" y="499.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (9 samples, 0.05%)</title><rect x="825.5" y="483.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (8 samples, 0.04%)</title><rect x="825.6" y="467.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.6" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.04%)</title><rect x="825.6" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="828.6" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.04%)</title><rect x="825.6" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="828.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (8 samples, 0.04%)</title><rect x="825.6" y="419.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (8 samples, 0.04%)</title><rect x="825.6" y="403.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="828.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (8 samples, 0.04%)</title><rect x="825.6" y="387.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.04%)</title><rect x="825.6" y="371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (8 samples, 0.04%)</title><rect x="825.6" y="355.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="828.6" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.04%)</title><rect x="825.6" y="339.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="828.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (6 samples, 0.03%)</title><rect x="825.7" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="828.7" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (6 samples, 0.03%)</title><rect x="825.7" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (104 samples, 0.57%)</title><rect x="826.2" y="595.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="829.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.02%)</title><rect x="826.2" y="579.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="829.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.02%)</title><rect x="826.2" y="563.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="829.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.get$Lambda (4 samples, 0.02%)</title><rect x="826.2" y="547.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="829.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.&lt;init&gt; (4 samples, 0.02%)</title><rect x="826.2" y="531.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (25 samples, 0.14%)</title><rect x="826.6" y="579.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="829.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (25 samples, 0.14%)</title><rect x="826.6" y="563.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (25 samples, 0.14%)</title><rect x="826.6" y="547.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="829.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (23 samples, 0.13%)</title><rect x="826.6" y="531.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="829.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (22 samples, 0.12%)</title><rect x="826.7" y="515.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="829.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (22 samples, 0.12%)</title><rect x="826.7" y="499.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="829.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (22 samples, 0.12%)</title><rect x="826.7" y="483.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="829.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (22 samples, 0.12%)</title><rect x="826.7" y="467.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="829.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (22 samples, 0.12%)</title><rect x="826.7" y="451.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.7" y="462.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.03%)</title><rect x="826.7" y="435.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="829.7" y="446.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 0.08%)</title><rect x="827.1" y="435.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="830.1" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.07%)</title><rect x="827.3" y="419.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="830.3" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.07%)</title><rect x="827.3" y="403.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="830.3" y="414.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.06%)</title><rect x="827.4" y="387.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="830.4" y="398.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.06%)</title><rect x="827.4" y="371.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="830.4" y="382.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.05%)</title><rect x="827.5" y="355.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="830.5" y="366.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.04%)</title><rect x="827.6" y="339.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="830.6" y="350.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.04%)</title><rect x="827.6" y="323.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="830.6" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.04%)</title><rect x="827.6" y="307.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="830.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (70 samples, 0.38%)</title><rect x="828.2" y="579.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="831.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (70 samples, 0.38%)</title><rect x="828.2" y="563.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="831.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (55 samples, 0.30%)</title><rect x="828.2" y="547.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="831.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (10 samples, 0.05%)</title><rect x="828.5" y="531.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="831.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.05%)</title><rect x="828.5" y="515.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="831.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.05%)</title><rect x="828.5" y="499.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="831.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.05%)</title><rect x="828.5" y="483.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="831.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.05%)</title><rect x="828.5" y="467.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="831.5" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.04%)</title><rect x="828.6" y="451.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="831.6" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="828.8" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="831.8" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="828.8" y="419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="831.8" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="828.8" y="403.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="831.8" y="414.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="828.8" y="387.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="831.8" y="398.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="828.8" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="831.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (41 samples, 0.22%)</title><rect x="829.1" y="531.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="832.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (41 samples, 0.22%)</title><rect x="829.1" y="515.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="832.1" y="526.0"></text>
</g>
<g>
<title>Unsafe_Park (28 samples, 0.15%)</title><rect x="829.2" y="499.0" width="1.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="832.2" y="510.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.02%)</title><rect x="829.2" y="483.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="832.2" y="494.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (4 samples, 0.02%)</title><rect x="829.2" y="467.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="832.2" y="478.0"></text>
</g>
<g>
<title>__lll_unlock_wake (24 samples, 0.13%)</title><rect x="829.5" y="483.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="832.5" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.07%)</title><rect x="830.2" y="467.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="833.2" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.07%)</title><rect x="830.2" y="451.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="833.2" y="462.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.04%)</title><rect x="830.6" y="435.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="833.6" y="446.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="830.7" y="419.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="833.7" y="430.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="830.7" y="403.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="833.7" y="414.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.07%)</title><rect x="831.0" y="499.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="834.0" y="510.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (4 samples, 0.02%)</title><rect x="831.0" y="483.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="834.0" y="494.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.03%)</title><rect x="831.3" y="483.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="834.3" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="831.3" y="467.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="834.3" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="831.3" y="451.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="834.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.02%)</title><rect x="831.8" y="547.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="834.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.02%)</title><rect x="831.8" y="531.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="834.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.06%)</title><rect x="832.0" y="547.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.06%)</title><rect x="832.0" y="531.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.06%)</title><rect x="832.0" y="515.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.06%)</title><rect x="832.0" y="499.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.06%)</title><rect x="832.0" y="483.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="835.0" y="494.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.06%)</title><rect x="832.0" y="467.0" width="0.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="835.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.from (5 samples, 0.03%)</title><rect x="832.9" y="595.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (6 samples, 0.03%)</title><rect x="833.3" y="595.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="836.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (4 samples, 0.02%)</title><rect x="833.4" y="579.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="836.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (109 samples, 0.60%)</title><rect x="833.7" y="643.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="836.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (109 samples, 0.60%)</title><rect x="833.7" y="627.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="836.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (105 samples, 0.57%)</title><rect x="833.9" y="611.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="836.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.03%)</title><rect x="833.9" y="595.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="836.9" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (99 samples, 0.54%)</title><rect x="834.3" y="595.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="837.3" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (99 samples, 0.54%)</title><rect x="834.3" y="579.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="837.3" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (98 samples, 0.54%)</title><rect x="834.4" y="563.0" width="6.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="837.4" y="574.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.02%)</title><rect x="834.4" y="547.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="837.4" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (94 samples, 0.51%)</title><rect x="834.6" y="547.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.6" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (92 samples, 0.50%)</title><rect x="834.6" y="531.0" width="6.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="837.6" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (90 samples, 0.49%)</title><rect x="834.8" y="515.0" width="5.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="837.8" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (90 samples, 0.49%)</title><rect x="834.8" y="499.0" width="5.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="837.8" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (87 samples, 0.48%)</title><rect x="834.9" y="483.0" width="5.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="837.9" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (87 samples, 0.48%)</title><rect x="834.9" y="467.0" width="5.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="837.9" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (83 samples, 0.45%)</title><rect x="835.1" y="451.0" width="5.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="838.1" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (82 samples, 0.45%)</title><rect x="835.2" y="435.0" width="5.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="838.2" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (82 samples, 0.45%)</title><rect x="835.2" y="419.0" width="5.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="838.2" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (75 samples, 0.41%)</title><rect x="835.2" y="403.0" width="4.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="838.2" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (75 samples, 0.41%)</title><rect x="835.2" y="387.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="838.2" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (70 samples, 0.38%)</title><rect x="835.5" y="371.0" width="4.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="838.5" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (66 samples, 0.36%)</title><rect x="835.5" y="355.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="838.5" y="366.0"></text>
</g>
<g>
<title>ip_local_out (10 samples, 0.05%)</title><rect x="835.6" y="339.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="838.6" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (10 samples, 0.05%)</title><rect x="835.6" y="323.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="838.6" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.05%)</title><rect x="835.6" y="307.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="838.6" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="835.6" y="291.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="838.6" y="302.0"></text>
</g>
<g>
<title>ip_output (55 samples, 0.30%)</title><rect x="836.2" y="339.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="839.2" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (49 samples, 0.27%)</title><rect x="836.2" y="323.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="839.2" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (46 samples, 0.25%)</title><rect x="836.4" y="307.0" width="3.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="839.4" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (46 samples, 0.25%)</title><rect x="836.4" y="291.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="839.4" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (46 samples, 0.25%)</title><rect x="836.4" y="275.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="839.4" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (46 samples, 0.25%)</title><rect x="836.4" y="259.0" width="3.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="839.4" y="270.0"></text>
</g>
<g>
<title>net_rx_action (45 samples, 0.25%)</title><rect x="836.5" y="243.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="839.5" y="254.0"></text>
</g>
<g>
<title>process_backlog (44 samples, 0.24%)</title><rect x="836.6" y="227.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="839.6" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (43 samples, 0.24%)</title><rect x="836.6" y="211.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="839.6" y="222.0"></text>
</g>
<g>
<title>ip_rcv (43 samples, 0.24%)</title><rect x="836.6" y="195.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="839.6" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (33 samples, 0.18%)</title><rect x="836.6" y="179.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="839.6" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (30 samples, 0.16%)</title><rect x="836.6" y="163.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="839.6" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (30 samples, 0.16%)</title><rect x="836.6" y="147.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="839.6" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (30 samples, 0.16%)</title><rect x="836.6" y="131.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="839.6" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (25 samples, 0.14%)</title><rect x="836.9" y="115.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="839.9" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (25 samples, 0.14%)</title><rect x="836.9" y="99.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="839.9" y="110.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.02%)</title><rect x="837.1" y="83.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="840.1" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (16 samples, 0.09%)</title><rect x="837.4" y="83.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="840.4" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (14 samples, 0.08%)</title><rect x="837.5" y="67.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="840.5" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 0.08%)</title><rect x="837.5" y="51.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="840.5" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.08%)</title><rect x="837.5" y="35.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="840.5" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.04%)</title><rect x="839.0" y="179.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="842.0" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.03%)</title><rect x="839.0" y="163.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="842.0" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="839.5" y="323.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="842.5" y="334.0"></text>
</g>
<g>
<title>[worker-2 tid=25863] (900 samples, 4.93%)</title><rect x="840.7" y="739.0" width="58.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="843.7" y="750.0">[worke..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.04%)</title><rect x="840.8" y="723.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="843.8" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.03%)</title><rect x="840.8" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="843.8" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (6 samples, 0.03%)</title><rect x="840.8" y="691.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="843.8" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.03%)</title><rect x="840.8" y="675.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="843.8" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.02%)</title><rect x="840.9" y="659.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="843.9" y="670.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (4 samples, 0.02%)</title><rect x="840.9" y="643.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="843.9" y="654.0"></text>
</g>
<g>
<title>[unknown_Java] (39 samples, 0.21%)</title><rect x="841.3" y="723.0" width="2.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="844.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (852 samples, 4.66%)</title><rect x="843.8" y="723.0" width="55.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="846.8" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (852 samples, 4.66%)</title><rect x="843.8" y="707.0" width="55.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="846.8" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (852 samples, 4.66%)</title><rect x="843.8" y="691.0" width="55.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="846.8" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (50 samples, 0.27%)</title><rect x="843.8" y="675.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="846.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (47 samples, 0.26%)</title><rect x="843.9" y="659.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="846.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (41 samples, 0.22%)</title><rect x="843.9" y="643.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="846.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (37 samples, 0.20%)</title><rect x="844.2" y="627.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="847.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (37 samples, 0.20%)</title><rect x="844.2" y="611.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="847.2" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (23 samples, 0.13%)</title><rect x="844.2" y="595.0" width="1.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="847.2" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (19 samples, 0.10%)</title><rect x="844.3" y="579.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="847.3" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.07%)</title><rect x="844.7" y="563.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="847.7" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.07%)</title><rect x="844.7" y="547.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="847.7" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="845.2" y="531.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="848.2" y="542.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.03%)</title><rect x="845.2" y="515.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="848.2" y="526.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.03%)</title><rect x="845.2" y="499.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="848.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.08%)</title><rect x="845.7" y="595.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="848.7" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.04%)</title><rect x="845.8" y="579.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="848.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="845.9" y="563.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="848.9" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="845.9" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="848.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.03%)</title><rect x="846.6" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="849.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.03%)</title><rect x="846.6" y="627.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="849.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.03%)</title><rect x="846.6" y="611.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="849.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.03%)</title><rect x="846.6" y="595.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="849.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.03%)</title><rect x="846.6" y="579.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.6" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.02%)</title><rect x="846.6" y="563.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="849.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (802 samples, 4.39%)</title><rect x="847.0" y="675.0" width="51.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.0" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (801 samples, 4.38%)</title><rect x="847.1" y="659.0" width="51.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.1" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (698 samples, 3.82%)</title><rect x="847.2" y="643.0" width="45.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="850.2" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (698 samples, 3.82%)</title><rect x="847.2" y="627.0" width="45.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="850.2" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (698 samples, 3.82%)</title><rect x="847.2" y="611.0" width="45.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.2" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (698 samples, 3.82%)</title><rect x="847.2" y="595.0" width="45.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.2" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (54 samples, 0.30%)</title><rect x="847.2" y="579.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="850.2" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (48 samples, 0.26%)</title><rect x="847.3" y="563.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.3" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (41 samples, 0.22%)</title><rect x="847.3" y="547.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.3" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (41 samples, 0.22%)</title><rect x="847.3" y="531.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.3" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (40 samples, 0.22%)</title><rect x="847.4" y="515.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.4" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (39 samples, 0.21%)</title><rect x="847.5" y="499.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.5" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (39 samples, 0.21%)</title><rect x="847.5" y="483.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="850.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (37 samples, 0.20%)</title><rect x="847.6" y="467.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (37 samples, 0.20%)</title><rect x="847.6" y="451.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="850.6" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (37 samples, 0.20%)</title><rect x="847.6" y="435.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.6" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (37 samples, 0.20%)</title><rect x="847.6" y="419.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.6" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (36 samples, 0.20%)</title><rect x="847.7" y="403.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.7" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (35 samples, 0.19%)</title><rect x="847.7" y="387.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="850.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (31 samples, 0.17%)</title><rect x="848.0" y="371.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="851.0" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (30 samples, 0.16%)</title><rect x="848.1" y="355.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="851.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (17 samples, 0.09%)</title><rect x="848.2" y="339.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.09%)</title><rect x="848.3" y="323.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.3" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (11 samples, 0.06%)</title><rect x="848.5" y="307.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (11 samples, 0.06%)</title><rect x="849.3" y="339.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="852.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (9 samples, 0.05%)</title><rect x="849.4" y="323.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="852.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (9 samples, 0.05%)</title><rect x="849.4" y="307.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="852.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (9 samples, 0.05%)</title><rect x="849.4" y="291.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="852.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.04%)</title><rect x="849.5" y="275.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="852.5" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="849.5" y="259.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="852.5" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="849.5" y="243.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="852.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="849.5" y="227.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="852.5" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="849.5" y="211.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="852.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6 samples, 0.03%)</title><rect x="850.0" y="547.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.0" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6 samples, 0.03%)</title><rect x="850.0" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="853.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6 samples, 0.03%)</title><rect x="850.0" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.0" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6 samples, 0.03%)</title><rect x="850.0" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.0" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="850.0" y="483.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="853.0" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="850.0" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="853.0" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4 samples, 0.02%)</title><rect x="850.0" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4 samples, 0.02%)</title><rect x="850.0" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4 samples, 0.02%)</title><rect x="850.0" y="419.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4 samples, 0.02%)</title><rect x="850.0" y="403.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="853.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (643 samples, 3.52%)</title><rect x="850.7" y="579.0" width="41.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.7" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (538 samples, 2.94%)</title><rect x="850.7" y="563.0" width="34.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.7" y="574.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (21 samples, 0.11%)</title><rect x="850.9" y="547.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (21 samples, 0.11%)</title><rect x="850.9" y="531.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (20 samples, 0.11%)</title><rect x="851.0" y="515.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="854.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (19 samples, 0.10%)</title><rect x="851.0" y="499.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="854.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (4 samples, 0.02%)</title><rect x="852.0" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="855.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (16 samples, 0.09%)</title><rect x="852.4" y="547.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="855.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (7 samples, 0.04%)</title><rect x="852.5" y="531.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (7 samples, 0.04%)</title><rect x="852.5" y="515.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="855.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (7 samples, 0.04%)</title><rect x="852.5" y="499.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (7 samples, 0.04%)</title><rect x="852.5" y="483.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="855.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (7 samples, 0.04%)</title><rect x="852.5" y="467.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (7 samples, 0.04%)</title><rect x="852.5" y="451.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="855.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (7 samples, 0.04%)</title><rect x="852.5" y="435.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (6 samples, 0.03%)</title><rect x="852.6" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.02%)</title><rect x="852.7" y="403.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (7 samples, 0.04%)</title><rect x="853.0" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (496 samples, 2.71%)</title><rect x="853.4" y="547.0" width="32.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="856.4" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (496 samples, 2.71%)</title><rect x="853.4" y="531.0" width="32.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="856.4" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (496 samples, 2.71%)</title><rect x="853.4" y="515.0" width="32.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="856.4" y="526.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (90 samples, 0.49%)</title><rect x="853.9" y="499.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="856.9" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (71 samples, 0.39%)</title><rect x="854.6" y="483.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="857.6" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.03%)</title><rect x="858.1" y="467.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="861.1" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.03%)</title><rect x="858.6" y="467.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="861.6" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (5 samples, 0.03%)</title><rect x="858.6" y="451.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (4 samples, 0.02%)</title><rect x="858.9" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="861.9" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (7 samples, 0.04%)</title><rect x="859.2" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="862.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (4 samples, 0.02%)</title><rect x="859.4" y="467.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="862.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (54 samples, 0.30%)</title><rect x="859.7" y="499.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="862.7" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (37 samples, 0.20%)</title><rect x="859.7" y="483.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="862.7" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (37 samples, 0.20%)</title><rect x="859.7" y="467.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="862.7" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (37 samples, 0.20%)</title><rect x="859.7" y="451.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="862.7" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (37 samples, 0.20%)</title><rect x="859.7" y="435.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="862.7" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (37 samples, 0.20%)</title><rect x="859.7" y="419.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="862.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (37 samples, 0.20%)</title><rect x="859.7" y="403.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="862.7" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (37 samples, 0.20%)</title><rect x="859.7" y="387.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="862.7" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (37 samples, 0.20%)</title><rect x="859.7" y="371.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="862.7" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (12 samples, 0.07%)</title><rect x="859.7" y="355.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="862.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="859.9" y="339.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="862.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (9 samples, 0.05%)</title><rect x="859.9" y="323.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="862.9" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (9 samples, 0.05%)</title><rect x="859.9" y="307.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="862.9" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (25 samples, 0.14%)</title><rect x="860.5" y="355.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="863.5" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="861.6" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="864.6" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (17 samples, 0.09%)</title><rect x="862.1" y="483.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="865.1" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (17 samples, 0.09%)</title><rect x="862.1" y="467.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="865.1" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (17 samples, 0.09%)</title><rect x="862.1" y="451.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="865.1" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (17 samples, 0.09%)</title><rect x="862.1" y="435.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="865.1" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (17 samples, 0.09%)</title><rect x="862.1" y="419.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="865.1" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (17 samples, 0.09%)</title><rect x="862.1" y="403.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="865.1" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (17 samples, 0.09%)</title><rect x="862.1" y="387.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="865.1" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="862.1" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="865.1" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="862.1" y="355.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="865.1" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (13 samples, 0.07%)</title><rect x="862.4" y="371.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="865.4" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (13 samples, 0.07%)</title><rect x="862.4" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="865.4" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="862.9" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="865.9" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="863.0" y="323.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="866.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (344 samples, 1.88%)</title><rect x="863.2" y="499.0" width="22.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="866.2" y="510.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (201 samples, 1.10%)</title><rect x="865.0" y="483.0" width="13.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="868.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (198 samples, 1.08%)</title><rect x="865.1" y="467.0" width="12.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="868.1" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (168 samples, 0.92%)</title><rect x="867.0" y="451.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="870.0" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (168 samples, 0.92%)</title><rect x="867.0" y="435.0" width="10.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="870.0" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (162 samples, 0.89%)</title><rect x="867.4" y="419.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="870.4" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (159 samples, 0.87%)</title><rect x="867.6" y="403.0" width="10.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="870.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (152 samples, 0.83%)</title><rect x="868.1" y="387.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="871.1" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (148 samples, 0.81%)</title><rect x="868.3" y="371.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="871.3" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (51 samples, 0.28%)</title><rect x="873.7" y="355.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="876.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="876.7" y="339.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="879.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="876.7" y="323.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="879.7" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="876.7" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="879.7" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.08%)</title><rect x="877.0" y="355.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="880.0" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.03%)</title><rect x="877.6" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="880.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="877.6" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="880.6" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.03%)</title><rect x="877.6" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="880.6" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (31 samples, 0.17%)</title><rect x="878.0" y="483.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="881.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (31 samples, 0.17%)</title><rect x="878.0" y="467.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="881.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (31 samples, 0.17%)</title><rect x="878.0" y="451.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="881.0" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (31 samples, 0.17%)</title><rect x="878.0" y="435.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="881.0" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (30 samples, 0.16%)</title><rect x="878.0" y="419.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="881.0" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (30 samples, 0.16%)</title><rect x="878.0" y="403.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="881.0" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (26 samples, 0.14%)</title><rect x="878.2" y="387.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="881.2" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="878.5" y="371.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="881.5" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="878.5" y="355.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="881.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="878.7" y="339.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="881.7" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="878.7" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="881.7" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (13 samples, 0.07%)</title><rect x="879.0" y="371.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="882.0" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.05%)</title><rect x="879.3" y="355.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="882.3" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (61 samples, 0.33%)</title><rect x="880.0" y="483.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="883.0" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (54 samples, 0.30%)</title><rect x="880.4" y="467.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="883.4" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (15 samples, 0.08%)</title><rect x="883.9" y="483.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="886.9" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.04%)</title><rect x="883.9" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="886.9" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="884.4" y="467.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="887.4" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="884.4" y="451.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="887.4" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.04%)</title><rect x="884.4" y="435.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="887.4" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="884.6" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="887.6" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.05%)</title><rect x="884.9" y="483.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="887.9" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.05%)</title><rect x="884.9" y="467.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="887.9" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (9 samples, 0.05%)</title><rect x="884.9" y="451.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="887.9" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (9 samples, 0.05%)</title><rect x="884.9" y="435.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (105 samples, 0.57%)</title><rect x="885.5" y="563.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="888.5" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (93 samples, 0.51%)</title><rect x="885.5" y="547.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="888.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (92 samples, 0.50%)</title><rect x="885.5" y="531.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="888.5" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (78 samples, 0.43%)</title><rect x="886.3" y="515.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="889.3" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (78 samples, 0.43%)</title><rect x="886.3" y="499.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.3" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (75 samples, 0.41%)</title><rect x="886.5" y="483.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="889.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (75 samples, 0.41%)</title><rect x="886.5" y="467.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="889.5" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (75 samples, 0.41%)</title><rect x="886.5" y="451.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (75 samples, 0.41%)</title><rect x="886.5" y="435.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.5" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (36 samples, 0.20%)</title><rect x="886.5" y="419.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="889.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (7 samples, 0.04%)</title><rect x="886.5" y="403.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="889.5" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (29 samples, 0.16%)</title><rect x="886.9" y="403.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (29 samples, 0.16%)</title><rect x="886.9" y="387.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="889.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (29 samples, 0.16%)</title><rect x="886.9" y="371.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="889.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (8 samples, 0.04%)</title><rect x="887.1" y="355.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="890.1" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (7 samples, 0.04%)</title><rect x="887.1" y="339.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="890.1" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.04%)</title><rect x="887.1" y="323.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="887.1" y="307.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="890.1" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="887.1" y="291.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.1" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="887.1" y="275.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.1" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="887.1" y="259.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="890.1" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="887.3" y="243.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="890.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (16 samples, 0.09%)</title><rect x="887.6" y="355.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="890.6" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="887.8" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.8" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.03%)</title><rect x="887.8" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="887.9" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="890.9" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="887.9" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="890.9" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (6 samples, 0.03%)</title><rect x="888.2" y="339.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="891.2" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.03%)</title><rect x="888.2" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="891.2" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="888.2" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="891.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (39 samples, 0.21%)</title><rect x="888.8" y="419.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="891.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (39 samples, 0.21%)</title><rect x="888.8" y="403.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="891.8" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (39 samples, 0.21%)</title><rect x="888.8" y="387.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="891.8" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (38 samples, 0.21%)</title><rect x="888.9" y="371.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="891.9" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (37 samples, 0.20%)</title><rect x="888.9" y="355.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="891.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (37 samples, 0.20%)</title><rect x="888.9" y="339.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="891.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (32 samples, 0.18%)</title><rect x="889.3" y="323.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="892.3" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (31 samples, 0.17%)</title><rect x="889.3" y="307.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="892.3" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.07%)</title><rect x="889.5" y="291.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="892.5" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.07%)</title><rect x="889.5" y="275.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="892.5" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.05%)</title><rect x="889.7" y="259.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="892.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (16 samples, 0.09%)</title><rect x="890.3" y="291.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="893.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (16 samples, 0.09%)</title><rect x="890.3" y="275.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="893.3" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (16 samples, 0.09%)</title><rect x="890.3" y="259.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="893.3" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (16 samples, 0.09%)</title><rect x="890.3" y="243.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="893.3" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (16 samples, 0.09%)</title><rect x="890.3" y="227.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="893.3" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (16 samples, 0.09%)</title><rect x="890.3" y="211.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="893.3" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (16 samples, 0.09%)</title><rect x="890.3" y="195.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="893.3" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (16 samples, 0.09%)</title><rect x="890.3" y="179.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="893.3" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (16 samples, 0.09%)</title><rect x="890.3" y="163.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="893.3" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="890.8" y="147.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="893.8" y="158.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.03%)</title><rect x="891.0" y="131.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="894.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (12 samples, 0.07%)</title><rect x="891.5" y="547.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="894.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (12 samples, 0.07%)</title><rect x="891.5" y="531.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 0.07%)</title><rect x="891.5" y="515.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.5" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (10 samples, 0.05%)</title><rect x="891.5" y="499.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="894.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (10 samples, 0.05%)</title><rect x="891.5" y="483.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="894.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (8 samples, 0.04%)</title><rect x="891.6" y="467.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="894.6" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="891.7" y="451.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="894.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="891.7" y="435.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="894.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (6 samples, 0.03%)</title><rect x="891.7" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="894.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (6 samples, 0.03%)</title><rect x="891.7" y="403.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="894.7" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (6 samples, 0.03%)</title><rect x="891.7" y="387.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="894.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (6 samples, 0.03%)</title><rect x="891.7" y="371.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="894.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (6 samples, 0.03%)</title><rect x="891.7" y="355.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="894.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (6 samples, 0.03%)</title><rect x="891.7" y="339.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="894.7" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (6 samples, 0.03%)</title><rect x="891.7" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="894.7" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (6 samples, 0.03%)</title><rect x="891.7" y="307.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="894.7" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="891.7" y="291.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.7" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="891.7" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="894.7" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.03%)</title><rect x="891.7" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="894.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (102 samples, 0.56%)</title><rect x="892.2" y="643.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="895.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (102 samples, 0.56%)</title><rect x="892.2" y="627.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="895.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (98 samples, 0.54%)</title><rect x="892.4" y="611.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="895.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.03%)</title><rect x="892.4" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="895.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.02%)</title><rect x="892.6" y="579.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="895.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (92 samples, 0.50%)</title><rect x="892.8" y="595.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="895.8" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (92 samples, 0.50%)</title><rect x="892.8" y="579.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="895.8" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (92 samples, 0.50%)</title><rect x="892.8" y="563.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="895.8" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (92 samples, 0.50%)</title><rect x="892.8" y="547.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="895.8" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (89 samples, 0.49%)</title><rect x="892.8" y="531.0" width="5.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="895.8" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (87 samples, 0.48%)</title><rect x="892.9" y="515.0" width="5.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="895.9" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (87 samples, 0.48%)</title><rect x="892.9" y="499.0" width="5.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="895.9" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (85 samples, 0.47%)</title><rect x="893.1" y="483.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="896.1" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (85 samples, 0.47%)</title><rect x="893.1" y="467.0" width="5.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="896.1" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (83 samples, 0.45%)</title><rect x="893.1" y="451.0" width="5.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="896.1" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (82 samples, 0.45%)</title><rect x="893.1" y="435.0" width="5.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="896.1" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (81 samples, 0.44%)</title><rect x="893.2" y="419.0" width="5.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="896.2" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (77 samples, 0.42%)</title><rect x="893.2" y="403.0" width="5.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="896.2" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (77 samples, 0.42%)</title><rect x="893.2" y="387.0" width="5.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="896.2" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (74 samples, 0.41%)</title><rect x="893.3" y="371.0" width="4.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="896.3" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (71 samples, 0.39%)</title><rect x="893.4" y="355.0" width="4.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="896.4" y="366.0"></text>
</g>
<g>
<title>ip_local_out (20 samples, 0.11%)</title><rect x="893.5" y="339.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="896.5" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (19 samples, 0.10%)</title><rect x="893.5" y="323.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="896.5" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.09%)</title><rect x="893.7" y="307.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="896.7" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="893.8" y="291.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="896.8" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (5 samples, 0.03%)</title><rect x="894.4" y="291.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="897.4" y="302.0"></text>
</g>
<g>
<title>ip_output (50 samples, 0.27%)</title><rect x="894.8" y="339.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="897.8" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (47 samples, 0.26%)</title><rect x="894.8" y="323.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="897.8" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (43 samples, 0.24%)</title><rect x="895.1" y="307.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="898.1" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (43 samples, 0.24%)</title><rect x="895.1" y="291.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="898.1" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (42 samples, 0.23%)</title><rect x="895.1" y="275.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="898.1" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (42 samples, 0.23%)</title><rect x="895.1" y="259.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="898.1" y="270.0"></text>
</g>
<g>
<title>net_rx_action (42 samples, 0.23%)</title><rect x="895.1" y="243.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="898.1" y="254.0"></text>
</g>
<g>
<title>process_backlog (41 samples, 0.22%)</title><rect x="895.2" y="227.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="898.2" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (39 samples, 0.21%)</title><rect x="895.3" y="211.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="898.3" y="222.0"></text>
</g>
<g>
<title>ip_rcv (38 samples, 0.21%)</title><rect x="895.4" y="195.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="898.4" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (30 samples, 0.16%)</title><rect x="895.4" y="179.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="898.4" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (27 samples, 0.15%)</title><rect x="895.4" y="163.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="898.4" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (27 samples, 0.15%)</title><rect x="895.4" y="147.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="898.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (27 samples, 0.15%)</title><rect x="895.4" y="131.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="898.4" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (25 samples, 0.14%)</title><rect x="895.5" y="115.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="898.5" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (25 samples, 0.14%)</title><rect x="895.5" y="99.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="898.5" y="110.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.03%)</title><rect x="895.7" y="83.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="898.7" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (17 samples, 0.09%)</title><rect x="896.0" y="83.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="899.0" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (16 samples, 0.09%)</title><rect x="896.0" y="67.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="899.0" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 0.08%)</title><rect x="896.1" y="51.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="899.1" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.08%)</title><rect x="896.1" y="35.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="899.1" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.04%)</title><rect x="897.4" y="179.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="900.4" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.03%)</title><rect x="897.4" y="163.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="900.4" y="174.0"></text>
</g>
<g>
<title>[worker-2 tid=25868] (903 samples, 4.94%)</title><rect x="898.8" y="739.0" width="58.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="901.8" y="750.0">[worke..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.04%)</title><rect x="898.9" y="723.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="901.9" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.04%)</title><rect x="898.9" y="707.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="901.9" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (7 samples, 0.04%)</title><rect x="898.9" y="691.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="901.9" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.04%)</title><rect x="898.9" y="675.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="901.9" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.02%)</title><rect x="899.0" y="659.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="902.0" y="670.0"></text>
</g>
<g>
<title>[unknown_Java] (43 samples, 0.24%)</title><rect x="899.4" y="723.0" width="2.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="902.4" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (851 samples, 4.66%)</title><rect x="902.2" y="723.0" width="55.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.2" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (851 samples, 4.66%)</title><rect x="902.2" y="707.0" width="55.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="905.2" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (851 samples, 4.66%)</title><rect x="902.2" y="691.0" width="55.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="905.2" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (44 samples, 0.24%)</title><rect x="902.3" y="675.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="905.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (43 samples, 0.24%)</title><rect x="902.3" y="659.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (33 samples, 0.18%)</title><rect x="902.3" y="643.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="905.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (28 samples, 0.15%)</title><rect x="902.6" y="627.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="905.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (28 samples, 0.15%)</title><rect x="902.6" y="611.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="905.6" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (20 samples, 0.11%)</title><rect x="902.6" y="595.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="905.6" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (14 samples, 0.08%)</title><rect x="902.8" y="579.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="905.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="903.2" y="563.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="906.2" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="903.2" y="547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="906.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.04%)</title><rect x="903.9" y="595.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="906.9" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.03%)</title><rect x="904.0" y="579.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="907.0" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="904.1" y="563.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="907.1" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="904.1" y="547.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="907.1" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="904.1" y="531.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="907.1" y="542.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="904.1" y="515.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="907.1" y="526.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.02%)</title><rect x="904.1" y="499.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="907.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.04%)</title><rect x="904.6" y="643.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="907.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.04%)</title><rect x="904.6" y="627.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.04%)</title><rect x="904.6" y="611.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.04%)</title><rect x="904.6" y="595.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="907.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.04%)</title><rect x="904.6" y="579.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="907.6" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.04%)</title><rect x="904.6" y="563.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="907.6" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="904.6" y="547.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="907.6" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="904.6" y="531.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="907.6" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="904.7" y="515.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="907.7" y="526.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.03%)</title><rect x="904.7" y="499.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="907.7" y="510.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.03%)</title><rect x="904.7" y="483.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="907.7" y="494.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.02%)</title><rect x="904.8" y="467.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="907.8" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="904.8" y="451.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="907.8" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.02%)</title><rect x="904.8" y="435.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="907.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (806 samples, 4.41%)</title><rect x="905.1" y="675.0" width="52.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.1" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (806 samples, 4.41%)</title><rect x="905.1" y="659.0" width="52.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="908.1" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (697 samples, 3.82%)</title><rect x="905.2" y="643.0" width="45.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="908.2" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (697 samples, 3.82%)</title><rect x="905.2" y="627.0" width="45.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="908.2" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (697 samples, 3.82%)</title><rect x="905.2" y="611.0" width="45.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="908.2" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (689 samples, 3.77%)</title><rect x="905.2" y="595.0" width="44.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="908.2" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (47 samples, 0.26%)</title><rect x="905.3" y="579.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="908.3" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (38 samples, 0.21%)</title><rect x="905.4" y="563.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.4" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (26 samples, 0.14%)</title><rect x="905.4" y="547.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="908.4" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (26 samples, 0.14%)</title><rect x="905.4" y="531.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="908.4" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (25 samples, 0.14%)</title><rect x="905.5" y="515.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="908.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (25 samples, 0.14%)</title><rect x="905.5" y="499.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="908.5" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (25 samples, 0.14%)</title><rect x="905.5" y="483.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="908.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (25 samples, 0.14%)</title><rect x="905.5" y="467.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="908.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (25 samples, 0.14%)</title><rect x="905.5" y="451.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.5" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (25 samples, 0.14%)</title><rect x="905.5" y="435.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="908.5" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (25 samples, 0.14%)</title><rect x="905.5" y="419.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="908.5" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (25 samples, 0.14%)</title><rect x="905.5" y="403.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="908.5" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (25 samples, 0.14%)</title><rect x="905.5" y="387.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="908.5" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (22 samples, 0.12%)</title><rect x="905.7" y="371.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="908.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (22 samples, 0.12%)</title><rect x="905.7" y="355.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="908.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.07%)</title><rect x="905.7" y="339.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="908.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.06%)</title><rect x="905.7" y="323.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="908.7" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (11 samples, 0.06%)</title><rect x="905.7" y="307.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="908.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (10 samples, 0.05%)</title><rect x="906.4" y="339.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="909.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (9 samples, 0.05%)</title><rect x="906.5" y="323.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="909.5" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (9 samples, 0.05%)</title><rect x="906.5" y="307.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="909.5" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (9 samples, 0.05%)</title><rect x="906.5" y="291.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="909.5" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.03%)</title><rect x="906.8" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="909.8" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="906.8" y="259.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="909.8" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="906.8" y="243.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="909.8" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="906.8" y="227.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="909.8" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="906.8" y="211.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="909.8" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (11 samples, 0.06%)</title><rect x="907.1" y="547.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="910.1" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (11 samples, 0.06%)</title><rect x="907.1" y="531.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="910.1" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (10 samples, 0.05%)</title><rect x="907.2" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="910.2" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (10 samples, 0.05%)</title><rect x="907.2" y="499.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="910.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.05%)</title><rect x="907.2" y="483.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="910.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (9 samples, 0.05%)</title><rect x="907.2" y="467.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="910.2" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7 samples, 0.04%)</title><rect x="907.2" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="910.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5 samples, 0.03%)</title><rect x="907.4" y="435.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="910.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (5 samples, 0.03%)</title><rect x="907.4" y="419.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="910.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (5 samples, 0.03%)</title><rect x="907.4" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="910.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$73/502264873.apply (7 samples, 0.04%)</title><rect x="907.9" y="563.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="910.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (5 samples, 0.03%)</title><rect x="908.0" y="547.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="911.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (641 samples, 3.51%)</title><rect x="908.3" y="579.0" width="41.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="911.3" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (544 samples, 2.98%)</title><rect x="908.5" y="563.0" width="35.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.5" y="574.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (21 samples, 0.11%)</title><rect x="908.6" y="547.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="911.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (21 samples, 0.11%)</title><rect x="908.6" y="531.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="911.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (19 samples, 0.10%)</title><rect x="908.7" y="515.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="911.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (18 samples, 0.10%)</title><rect x="908.8" y="499.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="911.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (9 samples, 0.05%)</title><rect x="909.4" y="483.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="912.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.03%)</title><rect x="909.5" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="912.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (17 samples, 0.09%)</title><rect x="909.9" y="547.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="912.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (7 samples, 0.04%)</title><rect x="910.1" y="531.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="913.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (6 samples, 0.03%)</title><rect x="910.1" y="515.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="913.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.03%)</title><rect x="910.1" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="913.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (6 samples, 0.03%)</title><rect x="910.1" y="483.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="913.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.03%)</title><rect x="910.2" y="467.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="913.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (5 samples, 0.03%)</title><rect x="910.2" y="451.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="913.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (5 samples, 0.03%)</title><rect x="910.2" y="435.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="913.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (5 samples, 0.03%)</title><rect x="910.2" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="913.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (8 samples, 0.04%)</title><rect x="910.5" y="531.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="913.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.03%)</title><rect x="910.7" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="910.8" y="499.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="913.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (504 samples, 2.76%)</title><rect x="911.0" y="547.0" width="32.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="914.0" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (504 samples, 2.76%)</title><rect x="911.0" y="531.0" width="32.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="914.0" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (503 samples, 2.75%)</title><rect x="911.1" y="515.0" width="32.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="914.1" y="526.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (91 samples, 0.50%)</title><rect x="911.6" y="499.0" width="5.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.6" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (4 samples, 0.02%)</title><rect x="912.3" y="483.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="915.3" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (71 samples, 0.39%)</title><rect x="912.5" y="483.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="915.5" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.03%)</title><rect x="916.4" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="919.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (6 samples, 0.03%)</title><rect x="916.7" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="919.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (56 samples, 0.31%)</title><rect x="917.4" y="499.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="920.4" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (33 samples, 0.18%)</title><rect x="917.4" y="483.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="920.4" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (33 samples, 0.18%)</title><rect x="917.4" y="467.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="920.4" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (33 samples, 0.18%)</title><rect x="917.4" y="451.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="920.4" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (33 samples, 0.18%)</title><rect x="917.4" y="435.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="920.4" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (33 samples, 0.18%)</title><rect x="917.4" y="419.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="920.4" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (33 samples, 0.18%)</title><rect x="917.4" y="403.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="920.4" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (33 samples, 0.18%)</title><rect x="917.4" y="387.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="920.4" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (33 samples, 0.18%)</title><rect x="917.4" y="371.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="920.4" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="917.4" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="920.4" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="917.6" y="339.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="920.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="917.6" y="323.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="920.6" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="917.6" y="307.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="920.6" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (27 samples, 0.15%)</title><rect x="917.8" y="355.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="920.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="918.8" y="339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="921.8" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (23 samples, 0.13%)</title><rect x="919.6" y="483.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="922.6" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (23 samples, 0.13%)</title><rect x="919.6" y="467.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="922.6" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (23 samples, 0.13%)</title><rect x="919.6" y="451.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="922.6" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (23 samples, 0.13%)</title><rect x="919.6" y="435.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="922.6" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (23 samples, 0.13%)</title><rect x="919.6" y="419.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="922.6" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (23 samples, 0.13%)</title><rect x="919.6" y="403.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="922.6" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (23 samples, 0.13%)</title><rect x="919.6" y="387.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="922.6" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="919.6" y="371.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="922.6" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="919.6" y="355.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="922.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="919.8" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="922.8" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="919.8" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="922.8" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (15 samples, 0.08%)</title><rect x="920.1" y="371.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="923.1" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (15 samples, 0.08%)</title><rect x="920.1" y="355.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="923.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.04%)</title><rect x="920.5" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="923.5" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.04%)</title><rect x="920.5" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (349 samples, 1.91%)</title><rect x="921.0" y="499.0" width="22.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="924.0" y="510.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (184 samples, 1.01%)</title><rect x="923.0" y="483.0" width="11.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="926.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (177 samples, 0.97%)</title><rect x="923.4" y="467.0" width="11.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="926.4" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (148 samples, 0.81%)</title><rect x="925.3" y="451.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="928.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (148 samples, 0.81%)</title><rect x="925.3" y="435.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="928.3" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (144 samples, 0.79%)</title><rect x="925.6" y="419.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="928.6" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (138 samples, 0.76%)</title><rect x="926.0" y="403.0" width="8.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="929.0" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (130 samples, 0.71%)</title><rect x="926.5" y="387.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="929.5" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (127 samples, 0.70%)</title><rect x="926.7" y="371.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="929.7" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (48 samples, 0.26%)</title><rect x="930.1" y="355.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="933.1" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="932.9" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="935.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="932.9" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="935.9" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="932.9" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="935.9" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (26 samples, 0.14%)</title><rect x="933.2" y="355.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="936.2" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="934.4" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="937.4" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (36 samples, 0.20%)</title><rect x="934.9" y="483.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="937.9" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (36 samples, 0.20%)</title><rect x="934.9" y="467.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="937.9" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (36 samples, 0.20%)</title><rect x="934.9" y="451.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="937.9" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (36 samples, 0.20%)</title><rect x="934.9" y="435.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.9" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (35 samples, 0.19%)</title><rect x="934.9" y="419.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="937.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (35 samples, 0.19%)</title><rect x="934.9" y="403.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="937.9" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (34 samples, 0.19%)</title><rect x="935.0" y="387.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="938.0" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (11 samples, 0.06%)</title><rect x="935.4" y="371.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="938.4" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="935.6" y="355.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="938.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="935.8" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="938.8" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (16 samples, 0.09%)</title><rect x="936.2" y="371.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="939.2" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (16 samples, 0.09%)</title><rect x="936.2" y="355.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="939.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="936.9" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="939.9" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="936.9" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="939.9" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (73 samples, 0.40%)</title><rect x="937.2" y="483.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="940.2" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (66 samples, 0.36%)</title><rect x="937.5" y="467.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="940.5" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (12 samples, 0.07%)</title><rect x="941.9" y="483.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="944.9" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="942.0" y="467.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="945.0" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="942.2" y="467.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="945.2" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.03%)</title><rect x="942.3" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="945.3" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.03%)</title><rect x="942.3" y="435.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="945.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="942.4" y="419.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="945.4" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.08%)</title><rect x="942.7" y="483.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="945.7" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.08%)</title><rect x="942.7" y="467.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="945.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (14 samples, 0.08%)</title><rect x="942.7" y="451.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="945.7" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (14 samples, 0.08%)</title><rect x="942.7" y="435.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="945.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (95 samples, 0.52%)</title><rect x="943.6" y="563.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="946.6" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (86 samples, 0.47%)</title><rect x="943.6" y="547.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="946.6" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (85 samples, 0.47%)</title><rect x="943.7" y="531.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="946.7" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (74 samples, 0.41%)</title><rect x="944.2" y="515.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="947.2" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (74 samples, 0.41%)</title><rect x="944.2" y="499.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="947.2" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (4 samples, 0.02%)</title><rect x="944.2" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.2" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (70 samples, 0.38%)</title><rect x="944.5" y="483.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="947.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (70 samples, 0.38%)</title><rect x="944.5" y="467.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.5" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (67 samples, 0.37%)</title><rect x="944.7" y="451.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="947.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (67 samples, 0.37%)</title><rect x="944.7" y="435.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="947.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (31 samples, 0.17%)</title><rect x="944.7" y="419.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (28 samples, 0.15%)</title><rect x="944.9" y="403.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="947.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (28 samples, 0.15%)</title><rect x="944.9" y="387.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="947.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (28 samples, 0.15%)</title><rect x="944.9" y="371.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="947.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (17 samples, 0.09%)</title><rect x="945.1" y="355.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="948.1" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="945.3" y="339.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="948.3" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="945.3" y="323.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="948.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="945.3" y="307.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="948.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="945.3" y="291.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="948.3" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (10 samples, 0.05%)</title><rect x="945.5" y="339.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="948.5" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (10 samples, 0.05%)</title><rect x="945.5" y="323.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="948.5" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="945.5" y="307.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="948.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (7 samples, 0.04%)</title><rect x="946.2" y="355.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="949.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (36 samples, 0.20%)</title><rect x="946.7" y="419.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="949.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (36 samples, 0.20%)</title><rect x="946.7" y="403.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="949.7" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (36 samples, 0.20%)</title><rect x="946.7" y="387.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="949.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (34 samples, 0.19%)</title><rect x="946.8" y="371.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="949.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (32 samples, 0.18%)</title><rect x="946.9" y="355.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="949.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (32 samples, 0.18%)</title><rect x="946.9" y="339.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="949.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (29 samples, 0.16%)</title><rect x="947.1" y="323.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="950.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (29 samples, 0.16%)</title><rect x="947.1" y="307.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="950.1" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.09%)</title><rect x="947.3" y="291.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="950.3" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.08%)</title><rect x="947.5" y="275.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="950.5" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (14 samples, 0.08%)</title><rect x="947.5" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (10 samples, 0.05%)</title><rect x="948.4" y="291.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="951.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (10 samples, 0.05%)</title><rect x="948.4" y="275.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="951.4" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (9 samples, 0.05%)</title><rect x="948.4" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="951.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (9 samples, 0.05%)</title><rect x="948.4" y="243.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="951.4" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.04%)</title><rect x="948.4" y="227.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="951.4" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="948.4" y="211.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="951.4" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="948.5" y="195.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="951.5" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="948.5" y="179.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="951.5" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="948.5" y="163.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="951.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.05%)</title><rect x="949.1" y="547.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="952.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.05%)</title><rect x="949.1" y="531.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="952.1" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.05%)</title><rect x="949.1" y="515.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="952.1" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (8 samples, 0.04%)</title><rect x="949.1" y="499.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="952.1" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (8 samples, 0.04%)</title><rect x="949.1" y="483.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="952.1" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (8 samples, 0.04%)</title><rect x="949.1" y="467.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="952.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.04%)</title><rect x="949.1" y="451.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="952.1" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.04%)</title><rect x="949.1" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="952.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (8 samples, 0.04%)</title><rect x="949.1" y="419.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="952.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (8 samples, 0.04%)</title><rect x="949.1" y="403.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="952.1" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (8 samples, 0.04%)</title><rect x="949.1" y="387.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="952.1" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (8 samples, 0.04%)</title><rect x="949.1" y="371.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="952.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (8 samples, 0.04%)</title><rect x="949.1" y="355.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="952.1" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.04%)</title><rect x="949.2" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="952.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (7 samples, 0.04%)</title><rect x="949.2" y="323.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="952.2" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.04%)</title><rect x="949.2" y="307.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="952.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (4 samples, 0.02%)</title><rect x="949.4" y="291.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="952.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4 samples, 0.02%)</title><rect x="949.4" y="275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="952.4" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="949.4" y="259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="952.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="949.4" y="243.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="952.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.from (4 samples, 0.02%)</title><rect x="949.7" y="595.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="952.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (108 samples, 0.59%)</title><rect x="950.2" y="643.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="953.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (108 samples, 0.59%)</title><rect x="950.2" y="627.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="953.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (106 samples, 0.58%)</title><rect x="950.3" y="611.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="953.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.03%)</title><rect x="950.3" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="953.3" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.03%)</title><rect x="950.3" y="579.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.3" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.02%)</title><rect x="950.4" y="563.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="953.4" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (101 samples, 0.55%)</title><rect x="950.6" y="595.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="953.6" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (101 samples, 0.55%)</title><rect x="950.6" y="579.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="953.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (99 samples, 0.54%)</title><rect x="950.8" y="563.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="953.8" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (98 samples, 0.54%)</title><rect x="950.8" y="547.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="953.8" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (93 samples, 0.51%)</title><rect x="950.8" y="531.0" width="6.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="953.8" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (93 samples, 0.51%)</title><rect x="950.8" y="515.0" width="6.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="953.8" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (93 samples, 0.51%)</title><rect x="950.8" y="499.0" width="6.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="953.8" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (90 samples, 0.49%)</title><rect x="950.9" y="483.0" width="5.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="953.9" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (89 samples, 0.49%)</title><rect x="951.0" y="467.0" width="5.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="954.0" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (85 samples, 0.47%)</title><rect x="951.0" y="451.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="954.0" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (84 samples, 0.46%)</title><rect x="951.0" y="435.0" width="5.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="954.0" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (83 samples, 0.45%)</title><rect x="951.1" y="419.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="954.1" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (73 samples, 0.40%)</title><rect x="951.3" y="403.0" width="4.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="954.3" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (73 samples, 0.40%)</title><rect x="951.3" y="387.0" width="4.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="954.3" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (69 samples, 0.38%)</title><rect x="951.3" y="371.0" width="4.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="954.3" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (67 samples, 0.37%)</title><rect x="951.4" y="355.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="954.4" y="366.0"></text>
</g>
<g>
<title>ip_local_out (17 samples, 0.09%)</title><rect x="951.4" y="339.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="954.4" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (17 samples, 0.09%)</title><rect x="951.4" y="323.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="954.4" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (17 samples, 0.09%)</title><rect x="951.4" y="307.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="954.4" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.03%)</title><rect x="951.4" y="291.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="954.4" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (7 samples, 0.04%)</title><rect x="951.9" y="291.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="954.9" y="302.0"></text>
</g>
<g>
<title>ip_output (50 samples, 0.27%)</title><rect x="952.5" y="339.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="955.5" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (46 samples, 0.25%)</title><rect x="952.6" y="323.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="955.6" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (43 samples, 0.24%)</title><rect x="952.8" y="307.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="955.8" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (43 samples, 0.24%)</title><rect x="952.8" y="291.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="955.8" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (43 samples, 0.24%)</title><rect x="952.8" y="275.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="955.8" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (43 samples, 0.24%)</title><rect x="952.8" y="259.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="955.8" y="270.0"></text>
</g>
<g>
<title>net_rx_action (42 samples, 0.23%)</title><rect x="952.8" y="243.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="955.8" y="254.0"></text>
</g>
<g>
<title>process_backlog (41 samples, 0.22%)</title><rect x="952.9" y="227.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="955.9" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (41 samples, 0.22%)</title><rect x="952.9" y="211.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="955.9" y="222.0"></text>
</g>
<g>
<title>ip_rcv (41 samples, 0.22%)</title><rect x="952.9" y="195.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="955.9" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (36 samples, 0.20%)</title><rect x="952.9" y="179.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="955.9" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (31 samples, 0.17%)</title><rect x="952.9" y="163.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="955.9" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (30 samples, 0.16%)</title><rect x="953.0" y="147.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="956.0" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (29 samples, 0.16%)</title><rect x="953.0" y="131.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="956.0" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.02%)</title><rect x="953.1" y="115.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="956.1" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (22 samples, 0.12%)</title><rect x="953.5" y="115.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="956.5" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (22 samples, 0.12%)</title><rect x="953.5" y="99.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="956.5" y="110.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.03%)</title><rect x="953.5" y="83.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="956.5" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (16 samples, 0.09%)</title><rect x="953.9" y="83.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="956.9" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (14 samples, 0.08%)</title><rect x="953.9" y="67.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="956.9" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 0.08%)</title><rect x="953.9" y="51.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="956.9" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.08%)</title><rect x="953.9" y="35.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="956.9" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.03%)</title><rect x="954.9" y="163.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="957.9" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="954.9" y="147.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="957.9" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="955.3" y="179.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="958.3" y="190.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.02%)</title><rect x="956.4" y="451.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="959.4" y="462.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.02%)</title><rect x="956.4" y="435.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="959.4" y="446.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="956.8" y="531.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="959.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="956.8" y="515.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="959.8" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.03%)</title><rect x="956.8" y="499.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="959.8" y="510.0"></text>
</g>
<g>
<title>[worker-3 tid=25866] (899 samples, 4.92%)</title><rect x="957.2" y="739.0" width="58.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="960.2" y="750.0">[worke..</text>
</g>
<g>
<title>[unknown_Java] (62 samples, 0.34%)</title><rect x="957.5" y="723.0" width="4.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="960.5" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (832 samples, 4.55%)</title><rect x="961.5" y="723.0" width="53.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="964.5" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (832 samples, 4.55%)</title><rect x="961.5" y="707.0" width="53.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="964.5" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (832 samples, 4.55%)</title><rect x="961.5" y="691.0" width="53.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="964.5" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (37 samples, 0.20%)</title><rect x="961.5" y="675.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="964.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (37 samples, 0.20%)</title><rect x="961.5" y="659.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="964.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (30 samples, 0.16%)</title><rect x="961.5" y="643.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="964.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (23 samples, 0.13%)</title><rect x="962.0" y="627.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="965.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (23 samples, 0.13%)</title><rect x="962.0" y="611.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="965.0" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (11 samples, 0.06%)</title><rect x="962.0" y="595.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="965.0" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.03%)</title><rect x="962.1" y="579.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="965.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.07%)</title><rect x="962.7" y="595.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="965.7" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (10 samples, 0.05%)</title><rect x="962.8" y="579.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="965.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="963.2" y="563.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="966.2" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="963.2" y="547.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="966.2" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="963.2" y="531.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="966.2" y="542.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="963.2" y="515.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="966.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.03%)</title><rect x="963.5" y="643.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="966.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.03%)</title><rect x="963.5" y="627.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="966.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.03%)</title><rect x="963.5" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.03%)</title><rect x="963.5" y="595.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="966.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.03%)</title><rect x="963.5" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="966.5" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.03%)</title><rect x="963.5" y="563.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="966.5" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="963.7" y="547.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="966.7" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="963.7" y="531.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="966.7" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="963.7" y="515.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="966.7" y="526.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="963.7" y="499.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="966.7" y="510.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="963.7" y="483.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="966.7" y="494.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.02%)</title><rect x="963.7" y="467.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="966.7" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="963.7" y="451.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="966.7" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.02%)</title><rect x="963.7" y="435.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="966.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (794 samples, 4.35%)</title><rect x="963.9" y="675.0" width="51.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="966.9" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (794 samples, 4.35%)</title><rect x="963.9" y="659.0" width="51.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="966.9" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (683 samples, 3.74%)</title><rect x="964.0" y="643.0" width="44.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="967.0" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (683 samples, 3.74%)</title><rect x="964.0" y="627.0" width="44.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="967.0" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (683 samples, 3.74%)</title><rect x="964.0" y="611.0" width="44.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="967.0" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (681 samples, 3.73%)</title><rect x="964.1" y="595.0" width="43.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="967.1" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (44 samples, 0.24%)</title><rect x="964.1" y="579.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="967.1" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (41 samples, 0.22%)</title><rect x="964.1" y="563.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="967.1" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (29 samples, 0.16%)</title><rect x="964.1" y="547.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="967.1" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (29 samples, 0.16%)</title><rect x="964.1" y="531.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="967.1" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (28 samples, 0.15%)</title><rect x="964.2" y="515.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="967.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (25 samples, 0.14%)</title><rect x="964.4" y="499.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="967.4" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (25 samples, 0.14%)</title><rect x="964.4" y="483.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="967.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (22 samples, 0.12%)</title><rect x="964.6" y="467.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="967.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (22 samples, 0.12%)</title><rect x="964.6" y="451.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="967.6" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (22 samples, 0.12%)</title><rect x="964.6" y="435.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.6" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (22 samples, 0.12%)</title><rect x="964.6" y="419.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.6" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (20 samples, 0.11%)</title><rect x="964.7" y="403.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="967.7" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (20 samples, 0.11%)</title><rect x="964.7" y="387.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="967.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (18 samples, 0.10%)</title><rect x="964.8" y="371.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="967.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (18 samples, 0.10%)</title><rect x="964.8" y="355.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="967.8" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="965.0" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="968.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.03%)</title><rect x="965.0" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="968.0" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.03%)</title><rect x="965.0" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="968.0" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (11 samples, 0.06%)</title><rect x="965.3" y="339.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (9 samples, 0.05%)</title><rect x="965.4" y="323.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="968.4" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (9 samples, 0.05%)</title><rect x="965.4" y="307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="968.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (9 samples, 0.05%)</title><rect x="965.4" y="291.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="968.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (7 samples, 0.04%)</title><rect x="965.5" y="275.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="968.5" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="965.5" y="259.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="968.5" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="965.5" y="243.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="968.5" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="965.5" y="227.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="968.5" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="965.5" y="211.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="968.5" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (12 samples, 0.07%)</title><rect x="966.0" y="547.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="969.0" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (12 samples, 0.07%)</title><rect x="966.0" y="531.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="969.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (11 samples, 0.06%)</title><rect x="966.1" y="515.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="969.1" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (11 samples, 0.06%)</title><rect x="966.1" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="969.1" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.05%)</title><rect x="966.1" y="483.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="969.1" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.05%)</title><rect x="966.1" y="467.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="969.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (7 samples, 0.04%)</title><rect x="966.1" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="969.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (7 samples, 0.04%)</title><rect x="966.1" y="435.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="969.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (7 samples, 0.04%)</title><rect x="966.1" y="419.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="969.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (7 samples, 0.04%)</title><rect x="966.1" y="403.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="969.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (636 samples, 3.48%)</title><rect x="967.0" y="579.0" width="41.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="970.0" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (552 samples, 3.02%)</title><rect x="967.1" y="563.0" width="35.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="970.1" y="574.0">ru/..</text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="967.1" y="547.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="970.1" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.02%)</title><rect x="967.1" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="970.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.02%)</title><rect x="967.1" y="515.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (16 samples, 0.09%)</title><rect x="967.4" y="547.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="970.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (16 samples, 0.09%)</title><rect x="967.4" y="531.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="970.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (15 samples, 0.08%)</title><rect x="967.5" y="515.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="970.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (13 samples, 0.07%)</title><rect x="967.6" y="499.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="970.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (7 samples, 0.04%)</title><rect x="968.0" y="483.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.02%)</title><rect x="968.2" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="971.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (14 samples, 0.08%)</title><rect x="968.6" y="547.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (10 samples, 0.05%)</title><rect x="968.6" y="531.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (6 samples, 0.03%)</title><rect x="968.9" y="515.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="971.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.03%)</title><rect x="968.9" y="499.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="971.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (5 samples, 0.03%)</title><rect x="969.0" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="972.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (4 samples, 0.02%)</title><rect x="969.0" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="972.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (4 samples, 0.02%)</title><rect x="969.0" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="972.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (4 samples, 0.02%)</title><rect x="969.0" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="972.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (4 samples, 0.02%)</title><rect x="969.0" y="419.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="972.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.02%)</title><rect x="969.0" y="403.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="972.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (4 samples, 0.02%)</title><rect x="969.3" y="531.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="972.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (514 samples, 2.81%)</title><rect x="969.6" y="547.0" width="33.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="972.6" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (514 samples, 2.81%)</title><rect x="969.6" y="531.0" width="33.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="972.6" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (514 samples, 2.81%)</title><rect x="969.6" y="515.0" width="33.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="972.6" y="526.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (96 samples, 0.53%)</title><rect x="969.9" y="499.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="972.9" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (4 samples, 0.02%)</title><rect x="970.5" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.5" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (82 samples, 0.45%)</title><rect x="970.8" y="483.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="973.8" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.03%)</title><rect x="974.8" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="977.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (8 samples, 0.04%)</title><rect x="975.5" y="467.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="978.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (59 samples, 0.32%)</title><rect x="976.1" y="499.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="979.1" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (39 samples, 0.21%)</title><rect x="976.1" y="483.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="979.1" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (39 samples, 0.21%)</title><rect x="976.1" y="467.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="979.1" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (39 samples, 0.21%)</title><rect x="976.1" y="451.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="979.1" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="976.1" y="435.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="979.1" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="976.1" y="419.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="979.1" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="976.1" y="403.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="979.1" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="976.1" y="387.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="979.1" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="976.1" y="371.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="979.1" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (14 samples, 0.08%)</title><rect x="976.1" y="355.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="979.1" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (11 samples, 0.06%)</title><rect x="976.3" y="339.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="979.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (9 samples, 0.05%)</title><rect x="976.5" y="323.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="979.5" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (9 samples, 0.05%)</title><rect x="976.5" y="307.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="979.5" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (25 samples, 0.14%)</title><rect x="977.0" y="355.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="980.0" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="978.0" y="339.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="981.0" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="978.4" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.4" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (20 samples, 0.11%)</title><rect x="978.7" y="483.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.7" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (20 samples, 0.11%)</title><rect x="978.7" y="467.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="981.7" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="978.7" y="451.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="981.7" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="978.7" y="435.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="981.7" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="978.7" y="419.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="981.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="978.7" y="403.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="981.7" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (20 samples, 0.11%)</title><rect x="978.7" y="387.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="981.7" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="978.7" y="371.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.7" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="978.7" y="355.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="981.7" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="978.9" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.9" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="978.9" y="323.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="981.9" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (12 samples, 0.07%)</title><rect x="979.2" y="371.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="982.2" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (12 samples, 0.07%)</title><rect x="979.2" y="355.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="982.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="979.6" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="982.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (353 samples, 1.93%)</title><rect x="980.0" y="499.0" width="22.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="983.0" y="510.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (197 samples, 1.08%)</title><rect x="981.8" y="483.0" width="12.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="984.8" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (195 samples, 1.07%)</title><rect x="981.9" y="467.0" width="12.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="984.9" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (170 samples, 0.93%)</title><rect x="983.5" y="451.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="986.5" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (167 samples, 0.91%)</title><rect x="983.7" y="435.0" width="10.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="986.7" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (161 samples, 0.88%)</title><rect x="984.1" y="419.0" width="10.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="987.1" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (159 samples, 0.87%)</title><rect x="984.2" y="403.0" width="10.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="987.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (153 samples, 0.84%)</title><rect x="984.6" y="387.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="987.6" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (152 samples, 0.83%)</title><rect x="984.7" y="371.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="987.7" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (47 samples, 0.26%)</title><rect x="989.8" y="355.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="992.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="992.5" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="995.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="992.5" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="995.5" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="992.5" y="307.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="995.5" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (25 samples, 0.14%)</title><rect x="992.9" y="355.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="995.9" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="993.6" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="996.6" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (7 samples, 0.04%)</title><rect x="994.0" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="997.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.04%)</title><rect x="994.0" y="323.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="997.0" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.04%)</title><rect x="994.0" y="307.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="997.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (28 samples, 0.15%)</title><rect x="994.5" y="483.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="997.5" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (28 samples, 0.15%)</title><rect x="994.5" y="467.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="997.5" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (28 samples, 0.15%)</title><rect x="994.5" y="451.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="997.5" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (28 samples, 0.15%)</title><rect x="994.5" y="435.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="997.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (28 samples, 0.15%)</title><rect x="994.5" y="419.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="997.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="994.5" y="403.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="997.5" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (26 samples, 0.14%)</title><rect x="994.6" y="387.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="997.6" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="994.9" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="997.9" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="994.9" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="997.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="995.1" y="339.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="998.1" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="995.1" y="323.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.1" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (15 samples, 0.08%)</title><rect x="995.3" y="371.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="998.3" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.06%)</title><rect x="995.6" y="355.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="998.6" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (78 samples, 0.43%)</title><rect x="996.3" y="483.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="999.3" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (72 samples, 0.39%)</title><rect x="996.6" y="467.0" width="4.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="999.6" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (19 samples, 0.10%)</title><rect x="1001.3" y="483.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1004.3" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="1001.7" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1004.7" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="1002.0" y="467.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1005.0" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.04%)</title><rect x="1002.0" y="451.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.0" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.04%)</title><rect x="1002.0" y="435.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1005.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (82 samples, 0.45%)</title><rect x="1002.8" y="563.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1005.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (73 samples, 0.40%)</title><rect x="1002.8" y="547.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1005.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (73 samples, 0.40%)</title><rect x="1002.8" y="531.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1005.8" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (59 samples, 0.32%)</title><rect x="1003.3" y="515.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1006.3" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (58 samples, 0.32%)</title><rect x="1003.4" y="499.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1006.4" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (54 samples, 0.30%)</title><rect x="1003.7" y="483.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1006.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (54 samples, 0.30%)</title><rect x="1003.7" y="467.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1006.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (51 samples, 0.28%)</title><rect x="1003.9" y="451.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1006.9" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (51 samples, 0.28%)</title><rect x="1003.9" y="435.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1006.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (30 samples, 0.16%)</title><rect x="1003.9" y="419.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1006.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.02%)</title><rect x="1003.9" y="403.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1006.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (26 samples, 0.14%)</title><rect x="1004.1" y="403.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1007.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (26 samples, 0.14%)</title><rect x="1004.1" y="387.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1007.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (26 samples, 0.14%)</title><rect x="1004.1" y="371.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1007.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (6 samples, 0.03%)</title><rect x="1004.1" y="355.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1007.1" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4 samples, 0.02%)</title><rect x="1004.2" y="339.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1007.2" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1004.2" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1007.2" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1004.2" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1007.2" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1004.2" y="291.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1007.2" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1004.2" y="275.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1007.2" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1004.2" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1007.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (19 samples, 0.10%)</title><rect x="1004.5" y="355.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1007.5" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="1004.8" y="339.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1007.8" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="1004.8" y="323.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1007.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1004.8" y="307.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1007.8" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1004.8" y="291.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1007.8" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (10 samples, 0.05%)</title><rect x="1005.0" y="339.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1008.0" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.05%)</title><rect x="1005.1" y="323.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1008.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (9 samples, 0.05%)</title><rect x="1005.1" y="307.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1008.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (21 samples, 0.11%)</title><rect x="1005.8" y="419.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1008.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (21 samples, 0.11%)</title><rect x="1005.8" y="403.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1008.8" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (21 samples, 0.11%)</title><rect x="1005.8" y="387.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1008.8" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (21 samples, 0.11%)</title><rect x="1005.8" y="371.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1008.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (21 samples, 0.11%)</title><rect x="1005.8" y="355.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1008.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (21 samples, 0.11%)</title><rect x="1005.8" y="339.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1008.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (19 samples, 0.10%)</title><rect x="1005.9" y="323.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1008.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (19 samples, 0.10%)</title><rect x="1005.9" y="307.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1008.9" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.06%)</title><rect x="1006.0" y="291.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1009.0" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.06%)</title><rect x="1006.0" y="275.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1009.0" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.05%)</title><rect x="1006.0" y="259.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1009.0" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (6 samples, 0.03%)</title><rect x="1006.7" y="291.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1009.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (6 samples, 0.03%)</title><rect x="1006.7" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1009.7" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (6 samples, 0.03%)</title><rect x="1006.7" y="259.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1009.7" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (6 samples, 0.03%)</title><rect x="1006.7" y="243.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1009.7" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1006.7" y="227.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1009.7" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1006.7" y="211.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1009.7" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1006.7" y="195.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1009.7" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1006.7" y="179.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1009.7" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1006.7" y="163.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1009.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.hasNext (4 samples, 0.02%)</title><rect x="1007.2" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1010.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (9 samples, 0.05%)</title><rect x="1007.5" y="547.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1010.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (9 samples, 0.05%)</title><rect x="1007.5" y="531.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1010.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.05%)</title><rect x="1007.5" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1010.5" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (6 samples, 0.03%)</title><rect x="1007.5" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1010.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (6 samples, 0.03%)</title><rect x="1007.5" y="483.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1010.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (6 samples, 0.03%)</title><rect x="1007.5" y="467.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1010.5" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="1007.5" y="451.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1010.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6 samples, 0.03%)</title><rect x="1007.5" y="435.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1010.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (6 samples, 0.03%)</title><rect x="1007.5" y="419.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1010.5" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (6 samples, 0.03%)</title><rect x="1007.5" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1010.5" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (6 samples, 0.03%)</title><rect x="1007.5" y="387.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1010.5" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (6 samples, 0.03%)</title><rect x="1007.5" y="371.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1010.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (6 samples, 0.03%)</title><rect x="1007.5" y="355.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1010.5" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (6 samples, 0.03%)</title><rect x="1007.5" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1010.5" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (6 samples, 0.03%)</title><rect x="1007.5" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1010.5" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (6 samples, 0.03%)</title><rect x="1007.5" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1010.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (110 samples, 0.60%)</title><rect x="1008.1" y="643.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1011.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (110 samples, 0.60%)</title><rect x="1008.1" y="627.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1011.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (106 samples, 0.58%)</title><rect x="1008.2" y="611.0" width="6.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1011.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.02%)</title><rect x="1008.2" y="595.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1011.2" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (102 samples, 0.56%)</title><rect x="1008.5" y="595.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1011.5" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (101 samples, 0.55%)</title><rect x="1008.6" y="579.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1011.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (100 samples, 0.55%)</title><rect x="1008.6" y="563.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1011.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (99 samples, 0.54%)</title><rect x="1008.6" y="547.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1011.6" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (98 samples, 0.54%)</title><rect x="1008.7" y="531.0" width="6.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1011.7" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (92 samples, 0.50%)</title><rect x="1009.1" y="515.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1012.1" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (92 samples, 0.50%)</title><rect x="1009.1" y="499.0" width="5.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1012.1" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (89 samples, 0.49%)</title><rect x="1009.2" y="483.0" width="5.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1012.2" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (88 samples, 0.48%)</title><rect x="1009.3" y="467.0" width="5.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1012.3" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (88 samples, 0.48%)</title><rect x="1009.3" y="451.0" width="5.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1012.3" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (87 samples, 0.48%)</title><rect x="1009.3" y="435.0" width="5.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1012.3" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (84 samples, 0.46%)</title><rect x="1009.5" y="419.0" width="5.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1012.5" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (76 samples, 0.42%)</title><rect x="1009.6" y="403.0" width="4.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1012.6" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (76 samples, 0.42%)</title><rect x="1009.6" y="387.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1012.6" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (72 samples, 0.39%)</title><rect x="1009.7" y="371.0" width="4.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1012.7" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (70 samples, 0.38%)</title><rect x="1009.9" y="355.0" width="4.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1012.9" y="366.0"></text>
</g>
<g>
<title>ip_local_out (16 samples, 0.09%)</title><rect x="1009.9" y="339.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1012.9" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (16 samples, 0.09%)</title><rect x="1009.9" y="323.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1012.9" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.09%)</title><rect x="1009.9" y="307.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1012.9" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="1009.9" y="291.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1012.9" y="302.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.02%)</title><rect x="1010.2" y="291.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1013.2" y="302.0"></text>
</g>
<g>
<title>ip_output (54 samples, 0.30%)</title><rect x="1010.9" y="339.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1013.9" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (48 samples, 0.26%)</title><rect x="1011.1" y="323.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1014.1" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (43 samples, 0.24%)</title><rect x="1011.4" y="307.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1014.4" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (43 samples, 0.24%)</title><rect x="1011.4" y="291.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1014.4" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (43 samples, 0.24%)</title><rect x="1011.4" y="275.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1014.4" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (43 samples, 0.24%)</title><rect x="1011.4" y="259.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1014.4" y="270.0"></text>
</g>
<g>
<title>net_rx_action (43 samples, 0.24%)</title><rect x="1011.4" y="243.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1014.4" y="254.0"></text>
</g>
<g>
<title>process_backlog (42 samples, 0.23%)</title><rect x="1011.5" y="227.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1014.5" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (42 samples, 0.23%)</title><rect x="1011.5" y="211.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1014.5" y="222.0"></text>
</g>
<g>
<title>ip_rcv (40 samples, 0.22%)</title><rect x="1011.6" y="195.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1014.6" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (33 samples, 0.18%)</title><rect x="1011.6" y="179.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1014.6" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (27 samples, 0.15%)</title><rect x="1011.6" y="163.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1014.6" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (27 samples, 0.15%)</title><rect x="1011.6" y="147.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1014.6" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (27 samples, 0.15%)</title><rect x="1011.6" y="131.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1014.6" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (24 samples, 0.13%)</title><rect x="1011.8" y="115.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1014.8" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (24 samples, 0.13%)</title><rect x="1011.8" y="99.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1014.8" y="110.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.04%)</title><rect x="1011.8" y="83.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1014.8" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (15 samples, 0.08%)</title><rect x="1012.4" y="83.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1015.4" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (15 samples, 0.08%)</title><rect x="1012.4" y="67.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1015.4" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 0.08%)</title><rect x="1012.4" y="51.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1015.4" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.08%)</title><rect x="1012.4" y="35.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1015.4" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.03%)</title><rect x="1013.3" y="163.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1016.3" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.03%)</title><rect x="1013.3" y="147.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1016.3" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.04%)</title><rect x="1013.7" y="179.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1016.7" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.03%)</title><rect x="1013.7" y="163.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1016.7" y="174.0"></text>
</g>
<g>
<title>[worker-3 tid=25867] (902 samples, 4.94%)</title><rect x="1015.2" y="739.0" width="58.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1018.2" y="750.0">[worke..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.02%)</title><rect x="1015.2" y="723.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1018.2" y="734.0"></text>
</g>
<g>
<title>[unknown_Java] (49 samples, 0.27%)</title><rect x="1015.6" y="723.0" width="3.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1018.6" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.03%)</title><rect x="1018.4" y="707.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1021.4" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="1018.4" y="691.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1021.4" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="1018.4" y="675.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1021.4" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="1018.4" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1021.4" y="670.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="1018.4" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1021.4" y="654.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="1018.4" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1021.4" y="638.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.02%)</title><rect x="1018.4" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1021.4" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="1018.4" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1021.4" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.02%)</title><rect x="1018.4" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1021.4" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.run (847 samples, 4.64%)</title><rect x="1018.8" y="723.0" width="54.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1021.8" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (847 samples, 4.64%)</title><rect x="1018.8" y="707.0" width="54.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1021.8" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (847 samples, 4.64%)</title><rect x="1018.8" y="691.0" width="54.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1021.8" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (34 samples, 0.19%)</title><rect x="1019.1" y="675.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1022.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (34 samples, 0.19%)</title><rect x="1019.1" y="659.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1022.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (26 samples, 0.14%)</title><rect x="1019.1" y="643.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1022.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (19 samples, 0.10%)</title><rect x="1019.5" y="627.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1022.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (19 samples, 0.10%)</title><rect x="1019.5" y="611.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1022.5" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (10 samples, 0.05%)</title><rect x="1019.5" y="595.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1022.5" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.04%)</title><rect x="1019.7" y="579.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1022.7" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="1019.9" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1022.9" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="1019.9" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1022.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.05%)</title><rect x="1020.2" y="595.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1023.2" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.03%)</title><rect x="1020.4" y="579.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1023.4" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="1020.5" y="563.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1023.5" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="1020.5" y="547.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1023.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.03%)</title><rect x="1021.0" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1024.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.03%)</title><rect x="1021.0" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1024.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.03%)</title><rect x="1021.0" y="611.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1024.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.03%)</title><rect x="1021.0" y="595.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1024.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.03%)</title><rect x="1021.0" y="579.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1024.0" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.03%)</title><rect x="1021.0" y="563.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1024.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (808 samples, 4.42%)</title><rect x="1021.3" y="675.0" width="52.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1024.3" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (808 samples, 4.42%)</title><rect x="1021.3" y="659.0" width="52.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.3" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (693 samples, 3.79%)</title><rect x="1021.4" y="643.0" width="44.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1024.4" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (693 samples, 3.79%)</title><rect x="1021.4" y="627.0" width="44.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1024.4" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (693 samples, 3.79%)</title><rect x="1021.4" y="611.0" width="44.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1024.4" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (686 samples, 3.75%)</title><rect x="1021.4" y="595.0" width="44.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1024.4" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (38 samples, 0.21%)</title><rect x="1021.4" y="579.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.4" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (34 samples, 0.19%)</title><rect x="1021.5" y="563.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1024.5" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (24 samples, 0.13%)</title><rect x="1021.5" y="547.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1024.5" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (24 samples, 0.13%)</title><rect x="1021.5" y="531.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1024.5" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (23 samples, 0.13%)</title><rect x="1021.5" y="515.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1024.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (22 samples, 0.12%)</title><rect x="1021.6" y="499.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1024.6" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (22 samples, 0.12%)</title><rect x="1021.6" y="483.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (22 samples, 0.12%)</title><rect x="1021.6" y="467.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1024.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (22 samples, 0.12%)</title><rect x="1021.6" y="451.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1024.6" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (22 samples, 0.12%)</title><rect x="1021.6" y="435.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1024.6" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (22 samples, 0.12%)</title><rect x="1021.6" y="419.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1024.6" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (20 samples, 0.11%)</title><rect x="1021.7" y="403.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1024.7" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (20 samples, 0.11%)</title><rect x="1021.7" y="387.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1024.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (18 samples, 0.10%)</title><rect x="1021.9" y="371.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1024.9" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (18 samples, 0.10%)</title><rect x="1021.9" y="355.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1024.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.04%)</title><rect x="1021.9" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1024.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="1021.9" y="323.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1024.9" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="1022.1" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1025.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (9 samples, 0.05%)</title><rect x="1022.4" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1025.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (5 samples, 0.03%)</title><rect x="1022.6" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1025.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="1022.6" y="307.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1025.6" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.03%)</title><rect x="1022.6" y="291.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1025.6" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (10 samples, 0.05%)</title><rect x="1023.0" y="547.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1026.0" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (10 samples, 0.05%)</title><rect x="1023.0" y="531.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1026.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (10 samples, 0.05%)</title><rect x="1023.0" y="515.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1026.0" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (10 samples, 0.05%)</title><rect x="1023.0" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1026.0" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.05%)</title><rect x="1023.0" y="483.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1026.0" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (10 samples, 0.05%)</title><rect x="1023.0" y="467.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1026.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (7 samples, 0.04%)</title><rect x="1023.2" y="451.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1026.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (7 samples, 0.04%)</title><rect x="1023.2" y="435.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1026.2" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (7 samples, 0.04%)</title><rect x="1023.2" y="419.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1026.2" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.04%)</title><rect x="1023.2" y="403.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1026.2" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (7 samples, 0.04%)</title><rect x="1023.2" y="387.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1026.2" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.04%)</title><rect x="1023.2" y="371.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1026.2" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (6 samples, 0.03%)</title><rect x="1023.3" y="355.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1026.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (6 samples, 0.03%)</title><rect x="1023.3" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1026.3" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="1023.3" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1026.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="1023.3" y="307.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1026.3" y="318.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.02%)</title><rect x="1023.3" y="291.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1026.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (648 samples, 3.55%)</title><rect x="1023.9" y="579.0" width="41.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1026.9" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (551 samples, 3.02%)</title><rect x="1023.9" y="563.0" width="35.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1026.9" y="574.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (17 samples, 0.09%)</title><rect x="1024.1" y="547.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1027.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (17 samples, 0.09%)</title><rect x="1024.1" y="531.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1027.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (16 samples, 0.09%)</title><rect x="1024.2" y="515.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1027.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (16 samples, 0.09%)</title><rect x="1024.2" y="499.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1027.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (12 samples, 0.07%)</title><rect x="1024.5" y="483.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1027.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 0.04%)</title><rect x="1024.7" y="467.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1027.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (11 samples, 0.06%)</title><rect x="1025.3" y="547.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1028.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (6 samples, 0.03%)</title><rect x="1025.4" y="531.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1028.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (4 samples, 0.02%)</title><rect x="1025.4" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1028.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.02%)</title><rect x="1025.4" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1028.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1025.4" y="483.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1028.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1025.4" y="467.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1028.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (4 samples, 0.02%)</title><rect x="1025.4" y="451.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1028.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (4 samples, 0.02%)</title><rect x="1025.4" y="435.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1028.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (4 samples, 0.02%)</title><rect x="1025.4" y="419.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1028.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.02%)</title><rect x="1025.4" y="403.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1028.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (518 samples, 2.84%)</title><rect x="1026.0" y="547.0" width="33.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1029.0" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (518 samples, 2.84%)</title><rect x="1026.0" y="531.0" width="33.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1029.0" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (518 samples, 2.84%)</title><rect x="1026.0" y="515.0" width="33.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1029.0" y="526.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (95 samples, 0.52%)</title><rect x="1026.3" y="499.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1029.3" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (4 samples, 0.02%)</title><rect x="1027.0" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1030.0" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (72 samples, 0.39%)</title><rect x="1027.3" y="483.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1030.3" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.03%)</title><rect x="1030.8" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1033.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (12 samples, 0.07%)</title><rect x="1031.2" y="467.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1034.2" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.03%)</title><rect x="1031.9" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1034.9" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (5 samples, 0.03%)</title><rect x="1031.9" y="467.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1034.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (53 samples, 0.29%)</title><rect x="1032.5" y="499.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1035.5" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (29 samples, 0.16%)</title><rect x="1032.5" y="483.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1035.5" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (29 samples, 0.16%)</title><rect x="1032.5" y="467.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1035.5" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (29 samples, 0.16%)</title><rect x="1032.5" y="451.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1035.5" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (29 samples, 0.16%)</title><rect x="1032.5" y="435.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1035.5" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (29 samples, 0.16%)</title><rect x="1032.5" y="419.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1035.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (29 samples, 0.16%)</title><rect x="1032.5" y="403.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1035.5" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (29 samples, 0.16%)</title><rect x="1032.5" y="387.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1035.5" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (29 samples, 0.16%)</title><rect x="1032.5" y="371.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1035.5" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (12 samples, 0.07%)</title><rect x="1032.5" y="355.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1035.5" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.03%)</title><rect x="1032.9" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1035.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="1033.0" y="323.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1036.0" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="1033.0" y="307.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1036.0" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (17 samples, 0.09%)</title><rect x="1033.2" y="355.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1036.2" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="1033.9" y="339.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1036.9" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (24 samples, 0.13%)</title><rect x="1034.3" y="483.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1037.3" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (24 samples, 0.13%)</title><rect x="1034.3" y="467.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1037.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (24 samples, 0.13%)</title><rect x="1034.3" y="451.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1037.3" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (24 samples, 0.13%)</title><rect x="1034.3" y="435.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1037.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (24 samples, 0.13%)</title><rect x="1034.3" y="419.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1037.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (24 samples, 0.13%)</title><rect x="1034.3" y="403.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1037.3" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (24 samples, 0.13%)</title><rect x="1034.3" y="387.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1037.3" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="1034.3" y="371.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1037.3" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="1034.3" y="355.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1037.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.04%)</title><rect x="1034.4" y="339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1037.4" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.04%)</title><rect x="1034.4" y="323.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1037.4" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (15 samples, 0.08%)</title><rect x="1034.9" y="371.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1037.9" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (15 samples, 0.08%)</title><rect x="1034.9" y="355.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1037.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.04%)</title><rect x="1035.4" y="339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1038.4" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.03%)</title><rect x="1035.6" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1038.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (365 samples, 2.00%)</title><rect x="1035.9" y="499.0" width="23.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1038.9" y="510.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (199 samples, 1.09%)</title><rect x="1037.5" y="483.0" width="12.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1040.5" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (194 samples, 1.06%)</title><rect x="1037.8" y="467.0" width="12.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1040.8" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (169 samples, 0.93%)</title><rect x="1039.4" y="451.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1042.4" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (168 samples, 0.92%)</title><rect x="1039.5" y="435.0" width="10.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1042.5" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (163 samples, 0.89%)</title><rect x="1039.8" y="419.0" width="10.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1042.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (158 samples, 0.86%)</title><rect x="1040.2" y="403.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1043.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (154 samples, 0.84%)</title><rect x="1040.4" y="387.0" width="10.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1043.4" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (152 samples, 0.83%)</title><rect x="1040.5" y="371.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1043.5" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (50 samples, 0.27%)</title><rect x="1045.6" y="355.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1048.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (22 samples, 0.12%)</title><rect x="1048.9" y="355.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1051.9" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.05%)</title><rect x="1049.7" y="339.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1052.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (9 samples, 0.05%)</title><rect x="1049.7" y="323.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1052.7" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (9 samples, 0.05%)</title><rect x="1049.7" y="307.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1052.7" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (42 samples, 0.23%)</title><rect x="1050.4" y="483.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1053.4" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (41 samples, 0.22%)</title><rect x="1050.4" y="467.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1053.4" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (41 samples, 0.22%)</title><rect x="1050.4" y="451.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1053.4" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (41 samples, 0.22%)</title><rect x="1050.4" y="435.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1053.4" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="1050.5" y="419.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1053.5" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="1050.5" y="403.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1053.5" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (36 samples, 0.20%)</title><rect x="1050.7" y="387.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1053.7" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.05%)</title><rect x="1050.9" y="371.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1053.9" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="1051.0" y="355.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1054.0" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="1051.3" y="339.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1054.3" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="1051.3" y="323.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1054.3" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (23 samples, 0.13%)</title><rect x="1051.5" y="371.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1054.5" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (21 samples, 0.11%)</title><rect x="1051.6" y="355.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1054.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.04%)</title><rect x="1052.2" y="339.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1055.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="1052.7" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1055.7" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="1052.7" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1055.7" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (78 samples, 0.43%)</title><rect x="1053.1" y="483.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1056.1" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (67 samples, 0.37%)</title><rect x="1053.6" y="467.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1056.6" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (13 samples, 0.07%)</title><rect x="1058.1" y="483.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1061.1" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="1058.1" y="467.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1061.1" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="1058.5" y="467.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1061.5" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="1058.5" y="451.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1061.5" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.04%)</title><rect x="1058.5" y="435.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1061.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="1058.6" y="419.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1061.6" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.04%)</title><rect x="1058.9" y="483.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1061.9" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.04%)</title><rect x="1058.9" y="467.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1061.9" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.04%)</title><rect x="1058.9" y="451.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1061.9" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (8 samples, 0.04%)</title><rect x="1058.9" y="435.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1061.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (97 samples, 0.53%)</title><rect x="1059.5" y="563.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1062.5" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (91 samples, 0.50%)</title><rect x="1059.5" y="547.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1062.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (91 samples, 0.50%)</title><rect x="1059.5" y="531.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1062.5" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (79 samples, 0.43%)</title><rect x="1060.0" y="515.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1063.0" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (79 samples, 0.43%)</title><rect x="1060.0" y="499.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1063.0" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (77 samples, 0.42%)</title><rect x="1060.1" y="483.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1063.1" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (77 samples, 0.42%)</title><rect x="1060.1" y="467.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1063.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (74 samples, 0.41%)</title><rect x="1060.3" y="451.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1063.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (74 samples, 0.41%)</title><rect x="1060.3" y="435.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1063.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (32 samples, 0.18%)</title><rect x="1060.3" y="419.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1063.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.02%)</title><rect x="1060.3" y="403.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1063.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (28 samples, 0.15%)</title><rect x="1060.6" y="403.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1063.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (28 samples, 0.15%)</title><rect x="1060.6" y="387.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1063.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (28 samples, 0.15%)</title><rect x="1060.6" y="371.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1063.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (5 samples, 0.03%)</title><rect x="1060.6" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1063.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (13 samples, 0.07%)</title><rect x="1060.9" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1063.9" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="1060.9" y="339.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1063.9" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (5 samples, 0.03%)</title><rect x="1060.9" y="323.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1063.9" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1060.9" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1063.9" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1060.9" y="291.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1063.9" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (5 samples, 0.03%)</title><rect x="1061.3" y="339.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1064.3" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1061.3" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1064.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1061.3" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (8 samples, 0.04%)</title><rect x="1061.9" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1064.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (42 samples, 0.23%)</title><rect x="1062.4" y="419.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1065.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (42 samples, 0.23%)</title><rect x="1062.4" y="403.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1065.4" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (42 samples, 0.23%)</title><rect x="1062.4" y="387.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1065.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (38 samples, 0.21%)</title><rect x="1062.6" y="371.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1065.6" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (37 samples, 0.20%)</title><rect x="1062.7" y="355.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1065.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (35 samples, 0.19%)</title><rect x="1062.8" y="339.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1065.8" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (32 samples, 0.18%)</title><rect x="1063.0" y="323.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1066.0" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (31 samples, 0.17%)</title><rect x="1063.1" y="307.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1066.1" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.07%)</title><rect x="1063.3" y="291.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.3" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.05%)</title><rect x="1063.5" y="275.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1066.5" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.05%)</title><rect x="1063.5" y="259.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1066.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (14 samples, 0.08%)</title><rect x="1064.1" y="291.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1067.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (13 samples, 0.07%)</title><rect x="1064.2" y="275.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1067.2" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (13 samples, 0.07%)</title><rect x="1064.2" y="259.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1067.2" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (13 samples, 0.07%)</title><rect x="1064.2" y="243.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1067.2" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (12 samples, 0.07%)</title><rect x="1064.2" y="227.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1067.2" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (12 samples, 0.07%)</title><rect x="1064.2" y="211.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1067.2" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (12 samples, 0.07%)</title><rect x="1064.2" y="195.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1067.2" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.07%)</title><rect x="1064.2" y="179.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1067.2" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (12 samples, 0.07%)</title><rect x="1064.2" y="163.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1067.2" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="1064.6" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1067.6" y="158.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.03%)</title><rect x="1064.7" y="131.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1067.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.hasNext (4 samples, 0.02%)</title><rect x="1065.1" y="515.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1068.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (6 samples, 0.03%)</title><rect x="1065.3" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1068.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1065.3" y="531.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1068.3" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.03%)</title><rect x="1065.4" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1068.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.transform (5 samples, 0.03%)</title><rect x="1065.8" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1068.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (114 samples, 0.62%)</title><rect x="1066.1" y="643.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1069.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (114 samples, 0.62%)</title><rect x="1066.1" y="627.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1069.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (111 samples, 0.61%)</title><rect x="1066.2" y="611.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1069.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.03%)</title><rect x="1066.2" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1069.2" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (106 samples, 0.58%)</title><rect x="1066.6" y="595.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1069.6" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (106 samples, 0.58%)</title><rect x="1066.6" y="579.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1069.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (105 samples, 0.57%)</title><rect x="1066.6" y="563.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1069.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (104 samples, 0.57%)</title><rect x="1066.6" y="547.0" width="6.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1069.6" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (100 samples, 0.55%)</title><rect x="1066.7" y="531.0" width="6.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1069.7" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (95 samples, 0.52%)</title><rect x="1067.0" y="515.0" width="6.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1070.0" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (95 samples, 0.52%)</title><rect x="1067.0" y="499.0" width="6.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1070.0" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (92 samples, 0.50%)</title><rect x="1067.0" y="483.0" width="6.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1070.0" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (92 samples, 0.50%)</title><rect x="1067.0" y="467.0" width="6.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1070.0" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (90 samples, 0.49%)</title><rect x="1067.0" y="451.0" width="5.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1070.0" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (90 samples, 0.49%)</title><rect x="1067.0" y="435.0" width="5.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1070.0" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (90 samples, 0.49%)</title><rect x="1067.0" y="419.0" width="5.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1070.0" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (78 samples, 0.43%)</title><rect x="1067.1" y="403.0" width="5.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1070.1" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (78 samples, 0.43%)</title><rect x="1067.1" y="387.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1070.1" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (72 samples, 0.39%)</title><rect x="1067.2" y="371.0" width="4.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1070.2" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (72 samples, 0.39%)</title><rect x="1067.2" y="355.0" width="4.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1070.2" y="366.0"></text>
</g>
<g>
<title>ip_local_out (14 samples, 0.08%)</title><rect x="1067.3" y="339.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1070.3" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (14 samples, 0.08%)</title><rect x="1067.3" y="323.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1070.3" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.08%)</title><rect x="1067.3" y="307.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1070.3" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.02%)</title><rect x="1067.3" y="291.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1070.3" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (4 samples, 0.02%)</title><rect x="1067.8" y="291.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1070.8" y="302.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (4 samples, 0.02%)</title><rect x="1067.8" y="275.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1070.8" y="286.0"></text>
</g>
<g>
<title>ip_output (57 samples, 0.31%)</title><rect x="1068.2" y="339.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1071.2" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (52 samples, 0.28%)</title><rect x="1068.2" y="323.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1071.2" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.02%)</title><rect x="1068.2" y="307.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1071.2" y="318.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (48 samples, 0.26%)</title><rect x="1068.4" y="307.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1071.4" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (48 samples, 0.26%)</title><rect x="1068.4" y="291.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1071.4" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (47 samples, 0.26%)</title><rect x="1068.5" y="275.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1071.5" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (47 samples, 0.26%)</title><rect x="1068.5" y="259.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1071.5" y="270.0"></text>
</g>
<g>
<title>net_rx_action (45 samples, 0.25%)</title><rect x="1068.6" y="243.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1071.6" y="254.0"></text>
</g>
<g>
<title>process_backlog (45 samples, 0.25%)</title><rect x="1068.6" y="227.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1071.6" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (45 samples, 0.25%)</title><rect x="1068.6" y="211.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1071.6" y="222.0"></text>
</g>
<g>
<title>ip_rcv (45 samples, 0.25%)</title><rect x="1068.6" y="195.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1071.6" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (38 samples, 0.21%)</title><rect x="1068.6" y="179.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1071.6" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (36 samples, 0.20%)</title><rect x="1068.6" y="163.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1071.6" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (36 samples, 0.20%)</title><rect x="1068.6" y="147.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1071.6" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (36 samples, 0.20%)</title><rect x="1068.6" y="131.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1071.6" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (32 samples, 0.18%)</title><rect x="1068.9" y="115.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1071.9" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (31 samples, 0.17%)</title><rect x="1069.0" y="99.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1072.0" y="110.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.03%)</title><rect x="1069.0" y="83.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1072.0" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (25 samples, 0.14%)</title><rect x="1069.3" y="83.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1072.3" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (18 samples, 0.10%)</title><rect x="1069.6" y="67.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1072.6" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (17 samples, 0.09%)</title><rect x="1069.7" y="51.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1072.7" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.09%)</title><rect x="1069.7" y="35.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1072.7" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.03%)</title><rect x="1071.2" y="179.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1074.2" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.03%)</title><rect x="1071.2" y="163.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1074.2" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.02%)</title><rect x="1071.6" y="323.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1074.6" y="334.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.03%)</title><rect x="1072.1" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1075.1" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.03%)</title><rect x="1072.1" y="387.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1075.1" y="398.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.03%)</title><rect x="1072.1" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1075.1" y="382.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.03%)</title><rect x="1072.1" y="355.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1075.1" y="366.0"></text>
</g>
<g>
<title>[worker-4 tid=25865] (902 samples, 4.94%)</title><rect x="1073.5" y="739.0" width="58.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1076.5" y="750.0">[worke..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (11 samples, 0.06%)</title><rect x="1073.5" y="723.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1076.5" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (10 samples, 0.05%)</title><rect x="1073.5" y="707.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1076.5" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (10 samples, 0.05%)</title><rect x="1073.5" y="691.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1076.5" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.04%)</title><rect x="1073.5" y="675.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1076.5" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (5 samples, 0.03%)</title><rect x="1073.7" y="659.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1076.7" y="670.0"></text>
</g>
<g>
<title>[unknown_Java] (38 samples, 0.21%)</title><rect x="1074.2" y="723.0" width="2.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1077.2" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (853 samples, 4.67%)</title><rect x="1076.6" y="723.0" width="55.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1079.6" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (853 samples, 4.67%)</title><rect x="1076.6" y="707.0" width="55.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1079.6" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (853 samples, 4.67%)</title><rect x="1076.6" y="691.0" width="55.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1079.6" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (58 samples, 0.32%)</title><rect x="1076.8" y="675.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (57 samples, 0.31%)</title><rect x="1076.9" y="659.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (42 samples, 0.23%)</title><rect x="1076.9" y="643.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1079.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (34 samples, 0.19%)</title><rect x="1077.4" y="627.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1080.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (34 samples, 0.19%)</title><rect x="1077.4" y="611.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1080.4" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (17 samples, 0.09%)</title><rect x="1077.5" y="595.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1080.5" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (12 samples, 0.07%)</title><rect x="1077.7" y="579.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1080.7" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="1078.1" y="563.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1081.1" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="1078.1" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1081.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.09%)</title><rect x="1078.6" y="595.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1081.6" y="606.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (4 samples, 0.02%)</title><rect x="1078.6" y="579.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1081.6" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.04%)</title><rect x="1078.9" y="579.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1081.9" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="1079.1" y="563.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1082.1" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="1079.1" y="547.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1082.1" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="1079.2" y="531.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1082.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.07%)</title><rect x="1079.8" y="643.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1082.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.07%)</title><rect x="1079.8" y="627.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1082.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.07%)</title><rect x="1079.8" y="611.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1082.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.07%)</title><rect x="1079.8" y="595.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1082.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.07%)</title><rect x="1079.8" y="579.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1082.8" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.05%)</title><rect x="1079.9" y="563.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1082.9" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="1080.0" y="547.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1083.0" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="1080.0" y="531.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1083.0" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.05%)</title><rect x="1080.0" y="515.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1083.0" y="526.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.05%)</title><rect x="1080.0" y="499.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1083.0" y="510.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.05%)</title><rect x="1080.0" y="483.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1083.0" y="494.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.04%)</title><rect x="1080.1" y="467.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1083.1" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.04%)</title><rect x="1080.1" y="451.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1083.1" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.04%)</title><rect x="1080.1" y="435.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1083.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (792 samples, 4.34%)</title><rect x="1080.6" y="675.0" width="51.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1083.6" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (792 samples, 4.34%)</title><rect x="1080.6" y="659.0" width="51.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1083.6" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (683 samples, 3.74%)</title><rect x="1080.6" y="643.0" width="44.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1083.6" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (682 samples, 3.73%)</title><rect x="1080.7" y="627.0" width="44.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1083.7" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (682 samples, 3.73%)</title><rect x="1080.7" y="611.0" width="44.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1083.7" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (679 samples, 3.72%)</title><rect x="1080.8" y="595.0" width="43.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1083.8" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (49 samples, 0.27%)</title><rect x="1080.9" y="579.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1083.9" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (43 samples, 0.24%)</title><rect x="1081.0" y="563.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1084.0" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (32 samples, 0.18%)</title><rect x="1081.0" y="547.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1084.0" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (32 samples, 0.18%)</title><rect x="1081.0" y="531.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1084.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (31 samples, 0.17%)</title><rect x="1081.0" y="515.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1084.0" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (30 samples, 0.16%)</title><rect x="1081.1" y="499.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1084.1" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (30 samples, 0.16%)</title><rect x="1081.1" y="483.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1084.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (29 samples, 0.16%)</title><rect x="1081.2" y="467.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1084.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (29 samples, 0.16%)</title><rect x="1081.2" y="451.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1084.2" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (29 samples, 0.16%)</title><rect x="1081.2" y="435.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1084.2" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (27 samples, 0.15%)</title><rect x="1081.3" y="419.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1084.3" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (26 samples, 0.14%)</title><rect x="1081.4" y="403.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1084.4" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (26 samples, 0.14%)</title><rect x="1081.4" y="387.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1084.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (24 samples, 0.13%)</title><rect x="1081.5" y="371.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1084.5" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (24 samples, 0.13%)</title><rect x="1081.5" y="355.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1084.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.05%)</title><rect x="1081.6" y="339.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1084.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.05%)</title><rect x="1081.6" y="323.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1084.6" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.04%)</title><rect x="1081.7" y="307.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1084.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (13 samples, 0.07%)</title><rect x="1082.2" y="339.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1085.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (12 samples, 0.07%)</title><rect x="1082.3" y="323.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1085.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11 samples, 0.06%)</title><rect x="1082.3" y="307.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1085.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11 samples, 0.06%)</title><rect x="1082.3" y="291.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1085.3" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (10 samples, 0.05%)</title><rect x="1082.4" y="275.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1085.4" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="1082.4" y="259.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1085.4" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="1082.4" y="243.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1085.4" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="1082.4" y="227.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1085.4" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="1082.4" y="211.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1085.4" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (11 samples, 0.06%)</title><rect x="1083.0" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1086.0" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (11 samples, 0.06%)</title><rect x="1083.0" y="531.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1086.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (11 samples, 0.06%)</title><rect x="1083.0" y="515.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1086.0" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (11 samples, 0.06%)</title><rect x="1083.0" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1086.0" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.06%)</title><rect x="1083.0" y="483.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1086.0" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (11 samples, 0.06%)</title><rect x="1083.0" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1086.0" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.03%)</title><rect x="1083.0" y="451.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1086.0" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (6 samples, 0.03%)</title><rect x="1083.0" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1086.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (6 samples, 0.03%)</title><rect x="1083.0" y="419.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1086.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (6 samples, 0.03%)</title><rect x="1083.0" y="403.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1086.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (5 samples, 0.03%)</title><rect x="1083.4" y="451.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1086.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (5 samples, 0.03%)</title><rect x="1083.4" y="435.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1086.4" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (5 samples, 0.03%)</title><rect x="1083.4" y="419.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1086.4" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.03%)</title><rect x="1083.4" y="403.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1086.4" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (5 samples, 0.03%)</title><rect x="1083.4" y="387.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1086.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.03%)</title><rect x="1083.4" y="371.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1086.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (5 samples, 0.03%)</title><rect x="1083.4" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1086.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (5 samples, 0.03%)</title><rect x="1083.4" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1086.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (4 samples, 0.02%)</title><rect x="1083.5" y="323.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1086.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4 samples, 0.02%)</title><rect x="1083.5" y="307.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1086.5" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="1083.5" y="291.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1086.5" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="1083.5" y="275.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1086.5" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1083.5" y="259.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1086.5" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1083.5" y="243.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1086.5" y="254.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1083.5" y="227.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1086.5" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1083.5" y="211.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1086.5" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1083.5" y="195.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1086.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (629 samples, 3.44%)</title><rect x="1084.1" y="579.0" width="40.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.1" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (524 samples, 2.87%)</title><rect x="1084.1" y="563.0" width="33.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1087.1" y="574.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (22 samples, 0.12%)</title><rect x="1084.3" y="547.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (22 samples, 0.12%)</title><rect x="1084.3" y="531.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1087.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (19 samples, 0.10%)</title><rect x="1084.5" y="515.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1087.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (17 samples, 0.09%)</title><rect x="1084.7" y="499.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1087.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.02%)</title><rect x="1085.0" y="483.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1088.0" y="494.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (4 samples, 0.02%)</title><rect x="1085.0" y="467.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1088.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (8 samples, 0.04%)</title><rect x="1085.2" y="483.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1088.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (15 samples, 0.08%)</title><rect x="1085.8" y="547.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1088.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (9 samples, 0.05%)</title><rect x="1085.9" y="531.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1088.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (6 samples, 0.03%)</title><rect x="1086.1" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1089.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.03%)</title><rect x="1086.1" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1086.1" y="483.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1089.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1086.1" y="467.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (4 samples, 0.02%)</title><rect x="1086.2" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1089.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (4 samples, 0.02%)</title><rect x="1086.2" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1089.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (4 samples, 0.02%)</title><rect x="1086.2" y="419.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1089.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (4 samples, 0.02%)</title><rect x="1086.5" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1089.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (483 samples, 2.64%)</title><rect x="1086.8" y="547.0" width="31.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1089.8" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (483 samples, 2.64%)</title><rect x="1086.8" y="531.0" width="31.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1089.8" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (483 samples, 2.64%)</title><rect x="1086.8" y="515.0" width="31.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.8" y="526.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (81 samples, 0.44%)</title><rect x="1087.0" y="499.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1090.0" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (70 samples, 0.38%)</title><rect x="1087.7" y="483.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1090.7" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.03%)</title><rect x="1090.9" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1093.9" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.03%)</title><rect x="1091.4" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.4" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (5 samples, 0.03%)</title><rect x="1091.4" y="451.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1094.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (7 samples, 0.04%)</title><rect x="1091.8" y="467.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1094.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (44 samples, 0.24%)</title><rect x="1092.3" y="499.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1095.3" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (27 samples, 0.15%)</title><rect x="1092.3" y="483.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1095.3" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (27 samples, 0.15%)</title><rect x="1092.3" y="467.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1095.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (27 samples, 0.15%)</title><rect x="1092.3" y="451.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1095.3" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="1092.3" y="435.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1095.3" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="1092.3" y="419.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1095.3" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="1092.3" y="403.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.3" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="1092.3" y="387.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1095.3" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="1092.3" y="371.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1095.3" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="1092.3" y="355.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1095.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="1092.4" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1095.4" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (21 samples, 0.11%)</title><rect x="1092.7" y="355.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1095.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="1093.8" y="339.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1096.8" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (17 samples, 0.09%)</title><rect x="1094.0" y="483.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1097.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (17 samples, 0.09%)</title><rect x="1094.0" y="467.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1097.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (17 samples, 0.09%)</title><rect x="1094.0" y="451.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1097.0" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (17 samples, 0.09%)</title><rect x="1094.0" y="435.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1097.0" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (17 samples, 0.09%)</title><rect x="1094.0" y="419.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1097.0" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (17 samples, 0.09%)</title><rect x="1094.0" y="403.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1097.0" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (17 samples, 0.09%)</title><rect x="1094.0" y="387.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1097.0" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.08%)</title><rect x="1094.2" y="371.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1097.2" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.08%)</title><rect x="1094.2" y="355.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1097.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.03%)</title><rect x="1094.7" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1097.7" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.03%)</title><rect x="1094.7" y="323.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1097.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (354 samples, 1.94%)</title><rect x="1095.1" y="499.0" width="22.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1098.1" y="510.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (196 samples, 1.07%)</title><rect x="1096.3" y="483.0" width="12.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1099.3" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (192 samples, 1.05%)</title><rect x="1096.6" y="467.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1099.6" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (164 samples, 0.90%)</title><rect x="1098.4" y="451.0" width="10.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1101.4" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (164 samples, 0.90%)</title><rect x="1098.4" y="435.0" width="10.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1101.4" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (158 samples, 0.86%)</title><rect x="1098.8" y="419.0" width="10.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1101.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (149 samples, 0.82%)</title><rect x="1099.4" y="403.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1102.4" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (144 samples, 0.79%)</title><rect x="1099.7" y="387.0" width="9.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1102.7" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (141 samples, 0.77%)</title><rect x="1099.9" y="371.0" width="9.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1102.9" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (44 samples, 0.24%)</title><rect x="1104.7" y="355.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1107.7" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="1107.1" y="339.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1110.1" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.04%)</title><rect x="1107.1" y="323.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1110.1" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (8 samples, 0.04%)</title><rect x="1107.1" y="307.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1110.1" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (22 samples, 0.12%)</title><rect x="1107.6" y="355.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1110.6" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="1108.7" y="339.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1111.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="1108.7" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1111.7" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="1108.7" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1111.7" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (31 samples, 0.17%)</title><rect x="1109.0" y="483.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1112.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (31 samples, 0.17%)</title><rect x="1109.0" y="467.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1112.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (31 samples, 0.17%)</title><rect x="1109.0" y="451.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1112.0" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (31 samples, 0.17%)</title><rect x="1109.0" y="435.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1112.0" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (29 samples, 0.16%)</title><rect x="1109.1" y="419.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1112.1" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (29 samples, 0.16%)</title><rect x="1109.1" y="403.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1112.1" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (27 samples, 0.15%)</title><rect x="1109.1" y="387.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1112.1" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (10 samples, 0.05%)</title><rect x="1109.5" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1112.5" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="1109.6" y="355.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1112.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="1109.7" y="339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1112.7" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="1109.8" y="323.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1112.8" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (11 samples, 0.06%)</title><rect x="1110.2" y="371.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1113.2" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (8 samples, 0.04%)</title><rect x="1110.4" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1113.4" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="1110.6" y="339.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1113.6" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.03%)</title><rect x="1110.6" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1113.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (86 samples, 0.47%)</title><rect x="1111.0" y="483.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1114.0" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (73 samples, 0.40%)</title><rect x="1111.8" y="467.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1114.8" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (8 samples, 0.04%)</title><rect x="1116.6" y="483.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1119.6" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="1116.8" y="467.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1119.8" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.02%)</title><rect x="1116.8" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1119.8" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.02%)</title><rect x="1116.8" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1119.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="1116.8" y="419.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1119.8" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.08%)</title><rect x="1117.1" y="483.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.1" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (14 samples, 0.08%)</title><rect x="1117.1" y="467.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1120.1" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (14 samples, 0.08%)</title><rect x="1117.1" y="451.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.1" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (14 samples, 0.08%)</title><rect x="1117.1" y="435.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1120.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (104 samples, 0.57%)</title><rect x="1118.0" y="563.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1121.0" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (89 samples, 0.49%)</title><rect x="1118.0" y="547.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1121.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (89 samples, 0.49%)</title><rect x="1118.0" y="531.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1121.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (73 samples, 0.40%)</title><rect x="1118.6" y="515.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1121.6" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (73 samples, 0.40%)</title><rect x="1118.6" y="499.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1121.6" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (73 samples, 0.40%)</title><rect x="1118.6" y="483.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1121.6" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (73 samples, 0.40%)</title><rect x="1118.6" y="467.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1121.6" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (69 samples, 0.38%)</title><rect x="1118.9" y="451.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1121.9" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (69 samples, 0.38%)</title><rect x="1118.9" y="435.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1121.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (28 samples, 0.15%)</title><rect x="1118.9" y="419.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1121.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.02%)</title><rect x="1118.9" y="403.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1121.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (24 samples, 0.13%)</title><rect x="1119.1" y="403.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1122.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (24 samples, 0.13%)</title><rect x="1119.1" y="387.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1122.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (24 samples, 0.13%)</title><rect x="1119.1" y="371.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1122.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (5 samples, 0.03%)</title><rect x="1119.2" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (14 samples, 0.08%)</title><rect x="1119.5" y="355.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.5" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (4 samples, 0.02%)</title><rect x="1119.6" y="339.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1122.6" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="1119.6" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1122.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1119.6" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1122.6" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1119.6" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1122.6" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (8 samples, 0.04%)</title><rect x="1119.9" y="339.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1122.9" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.04%)</title><rect x="1119.9" y="323.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1122.9" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="1119.9" y="307.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1122.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (4 samples, 0.02%)</title><rect x="1120.4" y="355.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1123.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (41 samples, 0.22%)</title><rect x="1120.7" y="419.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1123.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (41 samples, 0.22%)</title><rect x="1120.7" y="403.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1123.7" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (41 samples, 0.22%)</title><rect x="1120.7" y="387.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1123.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (41 samples, 0.22%)</title><rect x="1120.7" y="371.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1123.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (40 samples, 0.22%)</title><rect x="1120.8" y="355.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1123.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (38 samples, 0.21%)</title><rect x="1120.9" y="339.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1123.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (30 samples, 0.16%)</title><rect x="1121.4" y="323.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1124.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (30 samples, 0.16%)</title><rect x="1121.4" y="307.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.4" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.07%)</title><rect x="1121.6" y="291.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1124.6" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.06%)</title><rect x="1121.7" y="275.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1124.7" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.04%)</title><rect x="1121.9" y="259.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1124.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (14 samples, 0.08%)</title><rect x="1122.4" y="291.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1125.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (13 samples, 0.07%)</title><rect x="1122.5" y="275.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.5" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (12 samples, 0.07%)</title><rect x="1122.5" y="259.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1125.5" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (12 samples, 0.07%)</title><rect x="1122.5" y="243.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1125.5" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (11 samples, 0.06%)</title><rect x="1122.6" y="227.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1125.6" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (11 samples, 0.06%)</title><rect x="1122.6" y="211.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1125.6" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="1122.6" y="195.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1125.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="1122.6" y="179.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1125.6" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (10 samples, 0.05%)</title><rect x="1122.6" y="163.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1125.6" y="174.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1123.0" y="147.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1126.0" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.hasNext (6 samples, 0.03%)</title><rect x="1123.3" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1126.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (15 samples, 0.08%)</title><rect x="1123.7" y="547.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1126.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (14 samples, 0.08%)</title><rect x="1123.7" y="531.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1126.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.07%)</title><rect x="1123.8" y="515.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1126.8" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (8 samples, 0.04%)</title><rect x="1123.8" y="499.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1126.8" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (8 samples, 0.04%)</title><rect x="1123.8" y="483.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1126.8" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (8 samples, 0.04%)</title><rect x="1123.8" y="467.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1126.8" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.04%)</title><rect x="1123.8" y="451.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1126.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.04%)</title><rect x="1123.8" y="435.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1126.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (7 samples, 0.04%)</title><rect x="1123.9" y="419.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1126.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (7 samples, 0.04%)</title><rect x="1123.9" y="403.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1126.9" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (7 samples, 0.04%)</title><rect x="1123.9" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1126.9" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.04%)</title><rect x="1123.9" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1126.9" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (7 samples, 0.04%)</title><rect x="1123.9" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1126.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.04%)</title><rect x="1123.9" y="339.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1126.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (6 samples, 0.03%)</title><rect x="1123.9" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1126.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (6 samples, 0.03%)</title><rect x="1123.9" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1126.9" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="1123.9" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1126.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.02%)</title><rect x="1123.9" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1126.9" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (5 samples, 0.03%)</title><rect x="1124.3" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1127.3" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (5 samples, 0.03%)</title><rect x="1124.3" y="483.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1127.3" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (5 samples, 0.03%)</title><rect x="1124.3" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1127.3" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (5 samples, 0.03%)</title><rect x="1124.3" y="451.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1127.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (108 samples, 0.59%)</title><rect x="1124.8" y="643.0" width="6.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1127.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (108 samples, 0.59%)</title><rect x="1124.8" y="627.0" width="6.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1127.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (107 samples, 0.59%)</title><rect x="1124.8" y="611.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.03%)</title><rect x="1124.8" y="595.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1127.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.02%)</title><rect x="1124.9" y="579.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1127.9" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (102 samples, 0.56%)</title><rect x="1125.2" y="595.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1128.2" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (101 samples, 0.55%)</title><rect x="1125.2" y="579.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1128.2" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (99 samples, 0.54%)</title><rect x="1125.3" y="563.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1128.3" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (96 samples, 0.53%)</title><rect x="1125.5" y="547.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1128.5" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (91 samples, 0.50%)</title><rect x="1125.5" y="531.0" width="5.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1128.5" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (86 samples, 0.47%)</title><rect x="1125.8" y="515.0" width="5.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1128.8" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (86 samples, 0.47%)</title><rect x="1125.8" y="499.0" width="5.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1128.8" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (85 samples, 0.47%)</title><rect x="1125.9" y="483.0" width="5.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1128.9" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (85 samples, 0.47%)</title><rect x="1125.9" y="467.0" width="5.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1128.9" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (85 samples, 0.47%)</title><rect x="1125.9" y="451.0" width="5.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1128.9" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (85 samples, 0.47%)</title><rect x="1125.9" y="435.0" width="5.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1128.9" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (84 samples, 0.46%)</title><rect x="1125.9" y="419.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1128.9" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (78 samples, 0.43%)</title><rect x="1126.1" y="403.0" width="5.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1129.1" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (78 samples, 0.43%)</title><rect x="1126.1" y="387.0" width="5.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1129.1" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (74 samples, 0.41%)</title><rect x="1126.2" y="371.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1129.2" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (72 samples, 0.39%)</title><rect x="1126.2" y="355.0" width="4.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1129.2" y="366.0"></text>
</g>
<g>
<title>ip_local_out (16 samples, 0.09%)</title><rect x="1126.2" y="339.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1129.2" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (16 samples, 0.09%)</title><rect x="1126.2" y="323.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1129.2" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (15 samples, 0.08%)</title><rect x="1126.2" y="307.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1129.2" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (8 samples, 0.04%)</title><rect x="1126.6" y="291.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1129.6" y="302.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (6 samples, 0.03%)</title><rect x="1126.8" y="275.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1129.8" y="286.0"></text>
</g>
<g>
<title>ip_output (56 samples, 0.31%)</title><rect x="1127.2" y="339.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1130.2" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (53 samples, 0.29%)</title><rect x="1127.2" y="323.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1130.2" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.03%)</title><rect x="1127.3" y="307.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1130.3" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.03%)</title><rect x="1127.3" y="291.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1130.3" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.03%)</title><rect x="1127.3" y="275.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1130.3" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (46 samples, 0.25%)</title><rect x="1127.7" y="307.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1130.7" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (46 samples, 0.25%)</title><rect x="1127.7" y="291.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1130.7" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (45 samples, 0.25%)</title><rect x="1127.7" y="275.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1130.7" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (45 samples, 0.25%)</title><rect x="1127.7" y="259.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1130.7" y="270.0"></text>
</g>
<g>
<title>net_rx_action (43 samples, 0.24%)</title><rect x="1127.9" y="243.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1130.9" y="254.0"></text>
</g>
<g>
<title>process_backlog (43 samples, 0.24%)</title><rect x="1127.9" y="227.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1130.9" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (42 samples, 0.23%)</title><rect x="1127.9" y="211.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1130.9" y="222.0"></text>
</g>
<g>
<title>ip_rcv (42 samples, 0.23%)</title><rect x="1127.9" y="195.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1130.9" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (33 samples, 0.18%)</title><rect x="1127.9" y="179.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1130.9" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (28 samples, 0.15%)</title><rect x="1128.1" y="163.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1131.1" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (28 samples, 0.15%)</title><rect x="1128.1" y="147.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1131.1" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (25 samples, 0.14%)</title><rect x="1128.3" y="131.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1131.3" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (22 samples, 0.12%)</title><rect x="1128.5" y="115.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1131.5" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (22 samples, 0.12%)</title><rect x="1128.5" y="99.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1131.5" y="110.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.04%)</title><rect x="1128.5" y="83.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1131.5" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.02%)</title><rect x="1128.7" y="67.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1131.7" y="78.0"></text>
</g>
<g>
<title>tcp_data_queue (14 samples, 0.08%)</title><rect x="1129.0" y="83.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1132.0" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (12 samples, 0.07%)</title><rect x="1129.2" y="67.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1132.2" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 0.07%)</title><rect x="1129.2" y="51.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1132.2" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.07%)</title><rect x="1129.2" y="35.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1132.2" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.05%)</title><rect x="1130.1" y="179.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1133.1" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.04%)</title><rect x="1130.1" y="163.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1133.1" y="174.0"></text>
</g>
<g>
<title>[worker-4 tid=25869] (902 samples, 4.94%)</title><rect x="1131.7" y="739.0" width="58.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1134.7" y="750.0">[worke..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.04%)</title><rect x="1131.8" y="723.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1134.8" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (7 samples, 0.04%)</title><rect x="1131.8" y="707.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1134.8" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (7 samples, 0.04%)</title><rect x="1131.8" y="691.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1134.8" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.03%)</title><rect x="1131.8" y="675.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1134.8" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.02%)</title><rect x="1131.9" y="659.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1134.9" y="670.0"></text>
</g>
<g>
<title>[unknown_Java] (42 samples, 0.23%)</title><rect x="1132.3" y="723.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1135.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.run (852 samples, 4.66%)</title><rect x="1135.0" y="723.0" width="55.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1138.0" y="734.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (852 samples, 4.66%)</title><rect x="1135.0" y="707.0" width="55.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1138.0" y="718.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (852 samples, 4.66%)</title><rect x="1135.0" y="691.0" width="55.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1138.0" y="702.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (54 samples, 0.30%)</title><rect x="1135.0" y="675.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1138.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (51 samples, 0.28%)</title><rect x="1135.2" y="659.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1138.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (39 samples, 0.21%)</title><rect x="1135.4" y="643.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1138.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (5 samples, 0.03%)</title><rect x="1135.5" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1138.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.03%)</title><rect x="1135.5" y="611.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1138.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.02%)</title><rect x="1135.5" y="595.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1138.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.02%)</title><rect x="1135.5" y="579.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1138.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.02%)</title><rect x="1135.5" y="563.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1138.5" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.02%)</title><rect x="1135.5" y="547.0" width="0.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1138.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (32 samples, 0.18%)</title><rect x="1135.8" y="627.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1138.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (32 samples, 0.18%)</title><rect x="1135.8" y="611.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1138.8" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (25 samples, 0.14%)</title><rect x="1135.8" y="595.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1138.8" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.03%)</title><rect x="1135.8" y="579.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1138.8" y="590.0"></text>
</g>
<g>
<title>__lll_unlock_wake (19 samples, 0.10%)</title><rect x="1136.2" y="579.0" width="1.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1139.2" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.07%)</title><rect x="1136.6" y="563.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1139.6" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.07%)</title><rect x="1136.6" y="547.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1139.6" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.03%)</title><rect x="1137.1" y="531.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1140.1" y="542.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="1137.2" y="515.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1140.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.04%)</title><rect x="1137.4" y="595.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1140.4" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.04%)</title><rect x="1137.4" y="579.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1140.4" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="1137.6" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1140.6" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="1137.6" y="547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1140.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.04%)</title><rect x="1138.0" y="643.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1141.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.04%)</title><rect x="1138.0" y="627.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.04%)</title><rect x="1138.0" y="611.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1141.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.04%)</title><rect x="1138.0" y="595.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1141.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.04%)</title><rect x="1138.0" y="579.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1141.0" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.03%)</title><rect x="1138.2" y="563.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1141.2" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="1138.3" y="547.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1141.3" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="1138.3" y="531.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1141.3" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="1138.3" y="515.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1141.3" y="526.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.02%)</title><rect x="1138.3" y="499.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1141.3" y="510.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.02%)</title><rect x="1138.3" y="483.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1141.3" y="494.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.02%)</title><rect x="1138.3" y="467.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1141.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (796 samples, 4.36%)</title><rect x="1138.6" y="675.0" width="51.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1141.6" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (796 samples, 4.36%)</title><rect x="1138.6" y="659.0" width="51.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1141.6" y="670.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (674 samples, 3.69%)</title><rect x="1138.6" y="643.0" width="43.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1141.6" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (674 samples, 3.69%)</title><rect x="1138.6" y="627.0" width="43.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1141.6" y="638.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (674 samples, 3.69%)</title><rect x="1138.6" y="611.0" width="43.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1141.6" y="622.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (671 samples, 3.67%)</title><rect x="1138.7" y="595.0" width="43.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1141.7" y="606.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (53 samples, 0.29%)</title><rect x="1138.7" y="579.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1141.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (48 samples, 0.26%)</title><rect x="1138.8" y="563.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1141.8" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (28 samples, 0.15%)</title><rect x="1138.8" y="547.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1141.8" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (28 samples, 0.15%)</title><rect x="1138.8" y="531.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1141.8" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (27 samples, 0.15%)</title><rect x="1138.8" y="515.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1141.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (26 samples, 0.14%)</title><rect x="1138.9" y="499.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1141.9" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (26 samples, 0.14%)</title><rect x="1138.9" y="483.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1141.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (25 samples, 0.14%)</title><rect x="1139.0" y="467.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1142.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (25 samples, 0.14%)</title><rect x="1139.0" y="451.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.0" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (25 samples, 0.14%)</title><rect x="1139.0" y="435.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1142.0" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (24 samples, 0.13%)</title><rect x="1139.0" y="419.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1142.0" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (24 samples, 0.13%)</title><rect x="1139.0" y="403.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.0" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (24 samples, 0.13%)</title><rect x="1139.0" y="387.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1142.0" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (23 samples, 0.13%)</title><rect x="1139.1" y="371.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1142.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (23 samples, 0.13%)</title><rect x="1139.1" y="355.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1142.1" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="1139.2" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1142.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.04%)</title><rect x="1139.2" y="323.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.2" y="334.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.03%)</title><rect x="1139.2" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1142.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (14 samples, 0.08%)</title><rect x="1139.6" y="339.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (12 samples, 0.07%)</title><rect x="1139.7" y="323.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1142.7" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (12 samples, 0.07%)</title><rect x="1139.7" y="307.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1142.7" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (12 samples, 0.07%)</title><rect x="1139.7" y="291.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1142.7" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (8 samples, 0.04%)</title><rect x="1140.0" y="275.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1143.0" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (8 samples, 0.04%)</title><rect x="1140.0" y="259.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.0" y="270.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="1140.1" y="243.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1143.1" y="254.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="1140.1" y="227.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1143.1" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.04%)</title><rect x="1140.1" y="211.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1143.1" y="222.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1140.3" y="195.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1143.3" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (20 samples, 0.11%)</title><rect x="1140.6" y="547.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1143.6" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (20 samples, 0.11%)</title><rect x="1140.6" y="531.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.6" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (20 samples, 0.11%)</title><rect x="1140.6" y="515.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1143.6" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (20 samples, 0.11%)</title><rect x="1140.6" y="499.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1143.6" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (20 samples, 0.11%)</title><rect x="1140.6" y="483.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1143.6" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (20 samples, 0.11%)</title><rect x="1140.6" y="467.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1143.6" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (13 samples, 0.07%)</title><rect x="1140.6" y="451.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1143.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (13 samples, 0.07%)</title><rect x="1140.6" y="435.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1143.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (13 samples, 0.07%)</title><rect x="1140.6" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1143.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (13 samples, 0.07%)</title><rect x="1140.6" y="403.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1143.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (9 samples, 0.05%)</title><rect x="1140.7" y="387.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1143.7" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (4 samples, 0.02%)</title><rect x="1141.0" y="371.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1144.0" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1141.0" y="355.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1144.0" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (4 samples, 0.02%)</title><rect x="1141.0" y="339.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1144.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (7 samples, 0.04%)</title><rect x="1141.4" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.4" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (7 samples, 0.04%)</title><rect x="1141.4" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1144.4" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (7 samples, 0.04%)</title><rect x="1141.4" y="419.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1144.4" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.04%)</title><rect x="1141.4" y="403.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1144.4" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (7 samples, 0.04%)</title><rect x="1141.4" y="387.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1144.4" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.04%)</title><rect x="1141.4" y="371.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1144.4" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (7 samples, 0.04%)</title><rect x="1141.4" y="355.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1144.4" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.04%)</title><rect x="1141.4" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1144.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$73/502264873.apply (4 samples, 0.02%)</title><rect x="1141.9" y="563.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1144.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (4 samples, 0.02%)</title><rect x="1141.9" y="547.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1144.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (616 samples, 3.37%)</title><rect x="1142.1" y="579.0" width="39.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1145.1" y="590.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (524 samples, 2.87%)</title><rect x="1142.1" y="563.0" width="33.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1145.1" y="574.0">ru..</text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.04%)</title><rect x="1142.2" y="547.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1145.2" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.04%)</title><rect x="1142.2" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1145.2" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.04%)</title><rect x="1142.3" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1145.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (12 samples, 0.07%)</title><rect x="1142.7" y="547.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1145.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (12 samples, 0.07%)</title><rect x="1142.7" y="531.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1145.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.descend (10 samples, 0.05%)</title><rect x="1142.8" y="515.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1145.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (9 samples, 0.05%)</title><rect x="1142.9" y="499.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1145.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (5 samples, 0.03%)</title><rect x="1143.2" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1146.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.03%)</title><rect x="1143.2" y="467.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1146.2" y="478.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (5 samples, 0.03%)</title><rect x="1143.2" y="451.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1146.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.iterator (11 samples, 0.06%)</title><rect x="1143.6" y="547.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1146.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (7 samples, 0.04%)</title><rect x="1143.6" y="531.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1146.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.iterator (6 samples, 0.03%)</title><rect x="1143.7" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1146.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.03%)</title><rect x="1143.7" y="499.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1146.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1143.7" y="483.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1146.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (6 samples, 0.03%)</title><rect x="1143.7" y="467.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1146.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (6 samples, 0.03%)</title><rect x="1143.7" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1146.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (6 samples, 0.03%)</title><rect x="1143.7" y="435.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1146.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (6 samples, 0.03%)</title><rect x="1143.7" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1146.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (4 samples, 0.02%)</title><rect x="1144.1" y="531.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1147.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (490 samples, 2.68%)</title><rect x="1144.3" y="547.0" width="31.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1147.3" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (490 samples, 2.68%)</title><rect x="1144.3" y="531.0" width="31.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1147.3" y="542.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (489 samples, 2.68%)</title><rect x="1144.4" y="515.0" width="31.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1147.4" y="526.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (82 samples, 0.45%)</title><rect x="1144.7" y="499.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1147.7" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (70 samples, 0.38%)</title><rect x="1145.3" y="483.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1148.3" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.03%)</title><rect x="1148.5" y="467.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1151.5" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.03%)</title><rect x="1148.9" y="467.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1151.9" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (5 samples, 0.03%)</title><rect x="1148.9" y="451.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1151.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (10 samples, 0.05%)</title><rect x="1149.2" y="467.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1152.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (50 samples, 0.27%)</title><rect x="1150.0" y="499.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1153.0" y="510.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (32 samples, 0.18%)</title><rect x="1150.0" y="483.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1153.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (32 samples, 0.18%)</title><rect x="1150.0" y="467.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1153.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (32 samples, 0.18%)</title><rect x="1150.0" y="451.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1153.0" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (32 samples, 0.18%)</title><rect x="1150.0" y="435.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1153.0" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (32 samples, 0.18%)</title><rect x="1150.0" y="419.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1153.0" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (32 samples, 0.18%)</title><rect x="1150.0" y="403.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1153.0" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (32 samples, 0.18%)</title><rect x="1150.0" y="387.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1153.0" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (32 samples, 0.18%)</title><rect x="1150.0" y="371.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1153.0" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="1150.0" y="355.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1153.0" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="1150.0" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1153.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.03%)</title><rect x="1150.0" y="323.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1153.0" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.03%)</title><rect x="1150.0" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1153.0" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (26 samples, 0.14%)</title><rect x="1150.3" y="355.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1153.3" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="1151.4" y="339.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1154.4" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.02%)</title><rect x="1151.8" y="339.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1154.8" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (18 samples, 0.10%)</title><rect x="1152.0" y="483.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1155.0" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (18 samples, 0.10%)</title><rect x="1152.0" y="467.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1155.0" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (18 samples, 0.10%)</title><rect x="1152.0" y="451.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1155.0" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (18 samples, 0.10%)</title><rect x="1152.0" y="435.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1155.0" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (18 samples, 0.10%)</title><rect x="1152.0" y="419.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.0" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (18 samples, 0.10%)</title><rect x="1152.0" y="403.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1155.0" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (18 samples, 0.10%)</title><rect x="1152.0" y="387.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1155.0" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="1152.0" y="371.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1155.0" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (9 samples, 0.05%)</title><rect x="1152.0" y="355.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1155.0" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.03%)</title><rect x="1152.2" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1155.2" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.03%)</title><rect x="1152.2" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.2" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.05%)</title><rect x="1152.6" y="371.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1155.6" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (9 samples, 0.05%)</title><rect x="1152.6" y="355.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1155.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (353 samples, 1.93%)</title><rect x="1153.2" y="499.0" width="22.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1156.2" y="510.0">r..</text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (205 samples, 1.12%)</title><rect x="1155.1" y="483.0" width="13.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1158.1" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (202 samples, 1.11%)</title><rect x="1155.3" y="467.0" width="13.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1158.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (174 samples, 0.95%)</title><rect x="1157.0" y="451.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1160.0" y="462.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (173 samples, 0.95%)</title><rect x="1157.1" y="435.0" width="11.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1160.1" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (171 samples, 0.94%)</title><rect x="1157.2" y="419.0" width="11.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1160.2" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (167 samples, 0.91%)</title><rect x="1157.4" y="403.0" width="10.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1160.4" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (163 samples, 0.89%)</title><rect x="1157.7" y="387.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1160.7" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (158 samples, 0.86%)</title><rect x="1158.0" y="371.0" width="10.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1161.0" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (59 samples, 0.32%)</title><rect x="1163.1" y="355.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1166.1" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="1166.5" y="339.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1169.5" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="1166.5" y="323.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1169.5" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (7 samples, 0.04%)</title><rect x="1166.5" y="307.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1169.5" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (20 samples, 0.11%)</title><rect x="1166.9" y="355.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1169.9" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.02%)</title><rect x="1167.8" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1170.8" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (39 samples, 0.21%)</title><rect x="1168.3" y="483.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1171.3" y="494.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (39 samples, 0.21%)</title><rect x="1168.3" y="467.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1171.3" y="478.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="1168.3" y="451.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1171.3" y="462.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (39 samples, 0.21%)</title><rect x="1168.3" y="435.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1171.3" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (37 samples, 0.20%)</title><rect x="1168.4" y="419.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1171.4" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (37 samples, 0.20%)</title><rect x="1168.4" y="403.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1171.4" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (33 samples, 0.18%)</title><rect x="1168.6" y="387.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1171.6" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (7 samples, 0.04%)</title><rect x="1168.7" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1171.7" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="1168.8" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1171.8" y="366.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (24 samples, 0.13%)</title><rect x="1169.2" y="371.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1172.2" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (21 samples, 0.11%)</title><rect x="1169.4" y="355.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1172.4" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.04%)</title><rect x="1170.0" y="339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1173.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.02%)</title><rect x="1170.5" y="339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1173.5" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.02%)</title><rect x="1170.5" y="323.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1173.5" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectLongBufferS.get (57 samples, 0.31%)</title><rect x="1170.8" y="483.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1173.8" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (49 samples, 0.27%)</title><rect x="1171.3" y="467.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1174.3" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (13 samples, 0.07%)</title><rect x="1174.5" y="483.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1177.5" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.03%)</title><rect x="1174.6" y="467.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1177.6" y="478.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (6 samples, 0.03%)</title><rect x="1175.0" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1178.0" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.03%)</title><rect x="1175.0" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1178.0" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.03%)</title><rect x="1175.0" y="435.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1178.0" y="446.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (10 samples, 0.05%)</title><rect x="1175.3" y="483.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1178.3" y="494.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (10 samples, 0.05%)</title><rect x="1175.3" y="467.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1178.3" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (10 samples, 0.05%)</title><rect x="1175.3" y="451.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1178.3" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (9 samples, 0.05%)</title><rect x="1175.4" y="435.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1178.4" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (92 samples, 0.50%)</title><rect x="1176.0" y="563.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1179.0" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (82 samples, 0.45%)</title><rect x="1176.0" y="547.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1179.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (82 samples, 0.45%)</title><rect x="1176.0" y="531.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1179.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (67 samples, 0.37%)</title><rect x="1176.5" y="515.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1179.5" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (67 samples, 0.37%)</title><rect x="1176.5" y="499.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1179.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (66 samples, 0.36%)</title><rect x="1176.6" y="483.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1179.6" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (66 samples, 0.36%)</title><rect x="1176.6" y="467.0" width="4.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.6" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (65 samples, 0.36%)</title><rect x="1176.6" y="451.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1179.6" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (65 samples, 0.36%)</title><rect x="1176.6" y="435.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1179.6" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (32 samples, 0.18%)</title><rect x="1176.6" y="419.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1179.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (30 samples, 0.16%)</title><rect x="1176.8" y="403.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1179.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (30 samples, 0.16%)</title><rect x="1176.8" y="387.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1179.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (30 samples, 0.16%)</title><rect x="1176.8" y="371.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1179.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (5 samples, 0.03%)</title><rect x="1176.8" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1179.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (17 samples, 0.09%)</title><rect x="1177.1" y="355.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1180.1" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (5 samples, 0.03%)</title><rect x="1177.3" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1180.3" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (4 samples, 0.02%)</title><rect x="1177.3" y="323.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1180.3" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (9 samples, 0.05%)</title><rect x="1177.6" y="339.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1180.6" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (9 samples, 0.05%)</title><rect x="1177.6" y="323.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1180.6" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (9 samples, 0.05%)</title><rect x="1177.6" y="307.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1180.6" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1177.9" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1180.9" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1177.9" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1180.9" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1177.9" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1180.9" y="270.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="1177.9" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1180.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (4 samples, 0.02%)</title><rect x="1178.4" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1181.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (33 samples, 0.18%)</title><rect x="1178.7" y="419.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1181.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (33 samples, 0.18%)</title><rect x="1178.7" y="403.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1181.7" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (32 samples, 0.18%)</title><rect x="1178.8" y="387.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1181.8" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (32 samples, 0.18%)</title><rect x="1178.8" y="371.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1181.8" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (31 samples, 0.17%)</title><rect x="1178.8" y="355.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1181.8" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (30 samples, 0.16%)</title><rect x="1178.9" y="339.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1181.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (25 samples, 0.14%)</title><rect x="1179.2" y="323.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1182.2" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (25 samples, 0.14%)</title><rect x="1179.2" y="307.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1182.2" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.07%)</title><rect x="1179.3" y="291.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1182.3" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.07%)</title><rect x="1179.3" y="275.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1182.3" y="286.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.05%)</title><rect x="1179.5" y="259.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1182.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (12 samples, 0.07%)</title><rect x="1180.1" y="291.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1183.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (12 samples, 0.07%)</title><rect x="1180.1" y="275.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1183.1" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (12 samples, 0.07%)</title><rect x="1180.1" y="259.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1183.1" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (12 samples, 0.07%)</title><rect x="1180.1" y="243.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1183.1" y="254.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (12 samples, 0.07%)</title><rect x="1180.1" y="227.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1183.1" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.&lt;init&gt; (12 samples, 0.07%)</title><rect x="1180.1" y="211.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1183.1" y="222.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.&lt;init&gt; (11 samples, 0.06%)</title><rect x="1180.1" y="195.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1183.1" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.06%)</title><rect x="1180.1" y="179.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1183.1" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (11 samples, 0.06%)</title><rect x="1180.1" y="163.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1183.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.hasNext (4 samples, 0.02%)</title><rect x="1180.8" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1183.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (10 samples, 0.05%)</title><rect x="1181.3" y="547.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1184.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (10 samples, 0.05%)</title><rect x="1181.3" y="531.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1184.3" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.05%)</title><rect x="1181.3" y="515.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1184.3" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (6 samples, 0.03%)</title><rect x="1181.3" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1184.3" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (6 samples, 0.03%)</title><rect x="1181.3" y="483.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1184.3" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5 samples, 0.03%)</title><rect x="1181.3" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1184.3" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="1181.3" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1184.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.03%)</title><rect x="1181.3" y="435.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1184.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (5 samples, 0.03%)</title><rect x="1181.3" y="419.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1184.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (5 samples, 0.03%)</title><rect x="1181.3" y="403.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1184.3" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (5 samples, 0.03%)</title><rect x="1181.3" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1184.3" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.03%)</title><rect x="1181.3" y="371.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1184.3" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (5 samples, 0.03%)</title><rect x="1181.3" y="355.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1184.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (5 samples, 0.03%)</title><rect x="1181.3" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1184.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (5 samples, 0.03%)</title><rect x="1181.3" y="323.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1184.3" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (5 samples, 0.03%)</title><rect x="1181.3" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1184.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.02%)</title><rect x="1181.7" y="499.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1184.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.02%)</title><rect x="1181.7" y="483.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1184.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.02%)</title><rect x="1181.7" y="467.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1184.7" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.02%)</title><rect x="1181.7" y="451.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1184.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="1181.7" y="435.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1184.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.02%)</title><rect x="1181.7" y="419.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1184.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.sendResponse (122 samples, 0.67%)</title><rect x="1182.1" y="643.0" width="7.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1185.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (122 samples, 0.67%)</title><rect x="1182.1" y="627.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1185.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (115 samples, 0.63%)</title><rect x="1182.4" y="611.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1185.4" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.03%)</title><rect x="1182.4" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1185.4" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (110 samples, 0.60%)</title><rect x="1182.7" y="595.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1185.7" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (110 samples, 0.60%)</title><rect x="1182.7" y="579.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1185.7" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (110 samples, 0.60%)</title><rect x="1182.7" y="563.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1185.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (107 samples, 0.59%)</title><rect x="1182.9" y="547.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1185.9" y="558.0"></text>
</g>
<g>
<title>.annobin_send.c (102 samples, 0.56%)</title><rect x="1183.0" y="531.0" width="6.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1186.0" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (99 samples, 0.54%)</title><rect x="1183.2" y="515.0" width="6.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1186.2" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (99 samples, 0.54%)</title><rect x="1183.2" y="499.0" width="6.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1186.2" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (97 samples, 0.53%)</title><rect x="1183.2" y="483.0" width="6.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1186.2" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (97 samples, 0.53%)</title><rect x="1183.2" y="467.0" width="6.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1186.2" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (95 samples, 0.52%)</title><rect x="1183.2" y="451.0" width="6.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1186.2" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (93 samples, 0.51%)</title><rect x="1183.3" y="435.0" width="6.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1186.3" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (93 samples, 0.51%)</title><rect x="1183.3" y="419.0" width="6.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1186.3" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (81 samples, 0.44%)</title><rect x="1183.6" y="403.0" width="5.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1186.6" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (81 samples, 0.44%)</title><rect x="1183.6" y="387.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1186.6" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (77 samples, 0.42%)</title><rect x="1183.7" y="371.0" width="5.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1186.7" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (73 samples, 0.40%)</title><rect x="1183.9" y="355.0" width="4.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1186.9" y="366.0"></text>
</g>
<g>
<title>ip_local_out (14 samples, 0.08%)</title><rect x="1184.0" y="339.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1187.0" y="350.0"></text>
</g>
<g>
<title>__ip_local_out (14 samples, 0.08%)</title><rect x="1184.0" y="323.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1187.0" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.08%)</title><rect x="1184.0" y="307.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1187.0" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.03%)</title><rect x="1184.1" y="291.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1187.1" y="302.0"></text>
</g>
<g>
<title>ip_output (57 samples, 0.31%)</title><rect x="1184.9" y="339.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1187.9" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (55 samples, 0.30%)</title><rect x="1185.0" y="323.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1188.0" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (52 samples, 0.28%)</title><rect x="1185.2" y="307.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1188.2" y="318.0"></text>
</g>
<g>
<title>do_softirq.part.0 (52 samples, 0.28%)</title><rect x="1185.2" y="291.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1188.2" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (50 samples, 0.27%)</title><rect x="1185.3" y="275.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1188.3" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (50 samples, 0.27%)</title><rect x="1185.3" y="259.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1188.3" y="270.0"></text>
</g>
<g>
<title>net_rx_action (50 samples, 0.27%)</title><rect x="1185.3" y="243.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1188.3" y="254.0"></text>
</g>
<g>
<title>process_backlog (49 samples, 0.27%)</title><rect x="1185.3" y="227.0" width="3.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1188.3" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (49 samples, 0.27%)</title><rect x="1185.3" y="211.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1188.3" y="222.0"></text>
</g>
<g>
<title>ip_rcv (47 samples, 0.26%)</title><rect x="1185.5" y="195.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1188.5" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (40 samples, 0.22%)</title><rect x="1185.5" y="179.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1188.5" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (30 samples, 0.16%)</title><rect x="1185.5" y="163.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1188.5" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (30 samples, 0.16%)</title><rect x="1185.5" y="147.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1188.5" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (28 samples, 0.15%)</title><rect x="1185.6" y="131.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1188.6" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (23 samples, 0.13%)</title><rect x="1185.9" y="115.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1188.9" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (23 samples, 0.13%)</title><rect x="1185.9" y="99.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1188.9" y="110.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.02%)</title><rect x="1185.9" y="83.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1188.9" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (18 samples, 0.10%)</title><rect x="1186.2" y="83.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1189.2" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (17 samples, 0.09%)</title><rect x="1186.3" y="67.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1189.3" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (17 samples, 0.09%)</title><rect x="1186.3" y="51.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1189.3" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.09%)</title><rect x="1186.3" y="35.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1189.3" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.05%)</title><rect x="1187.4" y="163.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1190.4" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.04%)</title><rect x="1187.5" y="147.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1190.5" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.04%)</title><rect x="1188.1" y="179.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1191.1" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.03%)</title><rect x="1188.2" y="163.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1191.2" y="174.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="1189.5" y="531.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1192.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.02%)</title><rect x="1189.5" y="515.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1192.5" y="526.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.02%)</title><rect x="1189.5" y="499.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1192.5" y="510.0"></text>
</g>
</g>
</svg>
