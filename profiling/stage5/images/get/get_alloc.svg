<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="597"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="597"> </text>
<g id="frames">
<g>
<title>all (2,253,783 samples, 100.00%)</title><rect x="10.0" y="563.0" width="1180.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="574.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=25747] (46,513 samples, 2.06%)</title><rect x="10.0" y="547.0" width="24.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="13.0" y="558.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (46,513 samples, 2.06%)</title><rect x="10.0" y="531.0" width="24.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="542.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5,097 samples, 0.23%)</title><rect x="10.0" y="515.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (5,097 samples, 0.23%)</title><rect x="10.0" y="499.0" width="2.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (41,416 samples, 1.84%)</title><rect x="12.7" y="515.0" width="21.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.7" y="526.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (41,416 samples, 1.84%)</title><rect x="12.7" y="499.0" width="21.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="15.7" y="510.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (41,413 samples, 1.84%)</title><rect x="12.7" y="483.0" width="21.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="15.7" y="494.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (26,678 samples, 1.18%)</title><rect x="12.7" y="467.0" width="13.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (26,678 samples, 1.18%)</title><rect x="12.7" y="451.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.7" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (24,995 samples, 1.11%)</title><rect x="12.7" y="435.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (24,845 samples, 1.10%)</title><rect x="12.7" y="419.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="15.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (12,769 samples, 0.57%)</title><rect x="12.8" y="403.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.8" y="414.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (12,769 samples, 0.57%)</title><rect x="12.8" y="387.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="15.8" y="398.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (4,850 samples, 0.22%)</title><rect x="12.9" y="371.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.9" y="382.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (4,828 samples, 0.21%)</title><rect x="12.9" y="355.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="15.9" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1,760 samples, 0.08%)</title><rect x="12.9" y="339.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="15.9" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1,760 samples, 0.08%)</title><rect x="12.9" y="323.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="15.9" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (3,068 samples, 0.14%)</title><rect x="13.9" y="339.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="16.9" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (3,068 samples, 0.14%)</title><rect x="13.9" y="323.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="16.9" y="334.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (7,476 samples, 0.33%)</title><rect x="15.5" y="371.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.5" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap (1,388 samples, 0.06%)</title><rect x="15.5" y="355.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="18.5" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (6,088 samples, 0.27%)</title><rect x="16.2" y="355.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.2" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5,988 samples, 0.27%)</title><rect x="16.2" y="339.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.2" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5,988 samples, 0.27%)</title><rect x="16.2" y="323.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.2" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5,988 samples, 0.27%)</title><rect x="16.2" y="307.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.2" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1,549 samples, 0.07%)</title><rect x="16.2" y="291.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.2" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (1,549 samples, 0.07%)</title><rect x="16.2" y="275.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="19.2" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (4,439 samples, 0.20%)</title><rect x="17.0" y="291.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.0" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (3,170 samples, 0.14%)</title><rect x="17.0" y="275.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="20.0" y="286.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1,269 samples, 0.06%)</title><rect x="18.7" y="275.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="21.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (12,041 samples, 0.53%)</title><rect x="19.5" y="403.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (4,939 samples, 0.22%)</title><rect x="19.5" y="387.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="22.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (4,933 samples, 0.22%)</title><rect x="19.5" y="371.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.5" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (1,551 samples, 0.07%)</title><rect x="19.5" y="355.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="22.5" y="366.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (3,382 samples, 0.15%)</title><rect x="20.3" y="355.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="23.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (4,376 samples, 0.19%)</title><rect x="22.0" y="387.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4,089 samples, 0.18%)</title><rect x="22.2" y="371.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="25.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4,089 samples, 0.18%)</title><rect x="22.2" y="355.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.2" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4,089 samples, 0.18%)</title><rect x="22.2" y="339.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.2" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4,089 samples, 0.18%)</title><rect x="22.2" y="323.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.2" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4,089 samples, 0.18%)</title><rect x="22.2" y="307.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.2" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (4,089 samples, 0.18%)</title><rect x="22.2" y="291.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="25.2" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (2,726 samples, 0.12%)</title><rect x="24.3" y="387.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="27.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,683 samples, 0.07%)</title><rect x="25.8" y="435.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="28.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,683 samples, 0.07%)</title><rect x="25.8" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,683 samples, 0.07%)</title><rect x="25.8" y="403.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="28.8" y="414.0"></text>
</g>
<g>
<title>java.lang.String (1,575 samples, 0.07%)</title><rect x="25.8" y="387.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="28.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10,206 samples, 0.45%)</title><rect x="26.6" y="467.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="29.6" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3,218 samples, 0.14%)</title><rect x="26.7" y="451.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="29.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (3,129 samples, 0.14%)</title><rect x="26.7" y="435.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="29.7" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,859 samples, 0.30%)</title><rect x="28.4" y="451.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="31.4" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,859 samples, 0.30%)</title><rect x="28.4" y="435.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="31.4" y="446.0"></text>
</g>
<g>
<title>char[] (2,726 samples, 0.12%)</title><rect x="28.4" y="419.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="31.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,099 samples, 0.18%)</title><rect x="29.8" y="419.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,099 samples, 0.18%)</title><rect x="29.8" y="403.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4,099 samples, 0.18%)</title><rect x="29.8" y="387.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.8" y="398.0"></text>
</g>
<g>
<title>byte[] (4,025 samples, 0.18%)</title><rect x="29.8" y="371.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="32.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,529 samples, 0.20%)</title><rect x="32.0" y="467.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="35.0" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,529 samples, 0.20%)</title><rect x="32.0" y="451.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="35.0" y="462.0"></text>
</g>
<g>
<title>char[] (1,379 samples, 0.06%)</title><rect x="32.0" y="435.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="35.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,008 samples, 0.13%)</title><rect x="32.8" y="435.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="35.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,008 samples, 0.13%)</title><rect x="32.8" y="419.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,008 samples, 0.13%)</title><rect x="32.8" y="403.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="35.8" y="414.0"></text>
</g>
<g>
<title>byte[] (3,008 samples, 0.13%)</title><rect x="32.8" y="387.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="35.8" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=25757] (59,141 samples, 2.62%)</title><rect x="34.4" y="547.0" width="30.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="37.4" y="558.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (59,141 samples, 2.62%)</title><rect x="34.4" y="531.0" width="30.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="37.4" y="542.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (59,141 samples, 2.62%)</title><rect x="34.4" y="515.0" width="30.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.4" y="526.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (59,141 samples, 2.62%)</title><rect x="34.4" y="499.0" width="30.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.4" y="510.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (59,141 samples, 2.62%)</title><rect x="34.4" y="483.0" width="30.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.4" y="494.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (37,512 samples, 1.66%)</title><rect x="34.4" y="467.0" width="19.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="37.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (37,512 samples, 1.66%)</title><rect x="34.4" y="451.0" width="19.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="37.4" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (35,597 samples, 1.58%)</title><rect x="34.4" y="435.0" width="18.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3,618 samples, 0.16%)</title><rect x="34.4" y="419.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,618 samples, 0.16%)</title><rect x="34.4" y="403.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="37.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,618 samples, 0.16%)</title><rect x="34.4" y="387.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.4" y="398.0"></text>
</g>
<g>
<title>java.lang.String (1,626 samples, 0.07%)</title><rect x="34.4" y="371.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="37.4" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,992 samples, 0.09%)</title><rect x="35.2" y="371.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.2" y="382.0"></text>
</g>
<g>
<title>byte[] (1,992 samples, 0.09%)</title><rect x="35.2" y="355.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="38.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (31,979 samples, 1.42%)</title><rect x="36.2" y="419.0" width="16.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="39.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (1,314 samples, 0.06%)</title><rect x="36.2" y="403.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (1,314 samples, 0.06%)</title><rect x="36.2" y="387.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.get$Lambda (1,314 samples, 0.06%)</title><rect x="36.2" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="39.2" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$70 (1,314 samples, 0.06%)</title><rect x="36.2" y="355.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="39.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,383 samples, 0.06%)</title><rect x="36.9" y="403.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="39.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,383 samples, 0.06%)</title><rect x="36.9" y="387.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,383 samples, 0.06%)</title><rect x="36.9" y="371.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.9" y="382.0"></text>
</g>
<g>
<title>java.lang.String (803 samples, 0.04%)</title><rect x="36.9" y="355.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="39.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (580 samples, 0.03%)</title><rect x="37.4" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.4" y="366.0"></text>
</g>
<g>
<title>byte[] (580 samples, 0.03%)</title><rect x="37.4" y="339.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="40.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (1,572 samples, 0.07%)</title><rect x="37.7" y="403.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (803 samples, 0.04%)</title><rect x="37.7" y="387.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="40.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (803 samples, 0.04%)</title><rect x="37.7" y="371.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="40.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (803 samples, 0.04%)</title><rect x="37.7" y="355.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="40.7" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (803 samples, 0.04%)</title><rect x="37.7" y="339.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="40.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (769 samples, 0.03%)</title><rect x="38.1" y="387.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (769 samples, 0.03%)</title><rect x="38.1" y="371.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (765 samples, 0.03%)</title><rect x="38.1" y="355.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="41.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (15,652 samples, 0.69%)</title><rect x="38.5" y="403.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.5" y="414.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (15,652 samples, 0.69%)</title><rect x="38.5" y="387.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="41.5" y="398.0"></text>
</g>
<g>
<title>java.util.HashSet (515 samples, 0.02%)</title><rect x="38.5" y="371.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="41.5" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3,192 samples, 0.14%)</title><rect x="38.8" y="371.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,224 samples, 0.05%)</title><rect x="38.8" y="355.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="41.8" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1,968 samples, 0.09%)</title><rect x="39.4" y="355.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.4" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1,390 samples, 0.06%)</title><rect x="39.4" y="339.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.4" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1,390 samples, 0.06%)</title><rect x="39.4" y="323.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="42.4" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (578 samples, 0.03%)</title><rect x="40.1" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.1" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (578 samples, 0.03%)</title><rect x="40.1" y="323.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="43.1" y="334.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (9,692 samples, 0.43%)</title><rect x="40.4" y="371.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="43.4" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap (1,698 samples, 0.08%)</title><rect x="40.4" y="355.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="43.4" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (7,994 samples, 0.35%)</title><rect x="41.3" y="355.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.3" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6,812 samples, 0.30%)</title><rect x="41.3" y="339.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="44.3" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6,812 samples, 0.30%)</title><rect x="41.3" y="323.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.3" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6,812 samples, 0.30%)</title><rect x="41.3" y="307.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.3" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3,947 samples, 0.18%)</title><rect x="41.3" y="291.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="44.3" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (3,947 samples, 0.18%)</title><rect x="41.3" y="275.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="44.3" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2,865 samples, 0.13%)</title><rect x="43.4" y="291.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.4" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2,252 samples, 0.10%)</title><rect x="43.4" y="275.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="46.4" y="286.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (613 samples, 0.03%)</title><rect x="44.6" y="275.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="47.6" y="286.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1,182 samples, 0.05%)</title><rect x="44.9" y="339.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1,182 samples, 0.05%)</title><rect x="44.9" y="323.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.9" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1,182 samples, 0.05%)</title><rect x="44.9" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="47.9" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (1,182 samples, 0.05%)</title><rect x="44.9" y="291.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="47.9" y="302.0"></text>
</g>
<g>
<title>java/util/Set.of (2,253 samples, 0.10%)</title><rect x="45.5" y="371.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.5" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (860 samples, 0.04%)</title><rect x="45.5" y="355.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="48.5" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1,393 samples, 0.06%)</title><rect x="45.9" y="355.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.9" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,393 samples, 0.06%)</title><rect x="45.9" y="339.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="48.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (12,058 samples, 0.54%)</title><rect x="46.7" y="403.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="49.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (2,270 samples, 0.10%)</title><rect x="46.7" y="387.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (630 samples, 0.03%)</title><rect x="46.7" y="371.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.7" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (630 samples, 0.03%)</title><rect x="46.7" y="355.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="49.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1,640 samples, 0.07%)</title><rect x="47.0" y="371.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="50.0" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (531 samples, 0.02%)</title><rect x="47.0" y="355.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="50.0" y="366.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (1,109 samples, 0.05%)</title><rect x="47.3" y="355.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="50.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (8,954 samples, 0.40%)</title><rect x="47.9" y="387.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="50.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (3,343 samples, 0.15%)</title><rect x="47.9" y="371.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="50.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (3,343 samples, 0.15%)</title><rect x="47.9" y="355.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="50.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,343 samples, 0.15%)</title><rect x="47.9" y="339.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="50.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,343 samples, 0.15%)</title><rect x="47.9" y="323.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="50.9" y="334.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (3,343 samples, 0.15%)</title><rect x="47.9" y="307.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="50.9" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,343 samples, 0.15%)</title><rect x="47.9" y="291.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="50.9" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,343 samples, 0.15%)</title><rect x="47.9" y="275.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="50.9" y="286.0"></text>
</g>
<g>
<title>java.lang.String (1,640 samples, 0.07%)</title><rect x="47.9" y="259.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="50.9" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,703 samples, 0.08%)</title><rect x="48.7" y="259.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="51.7" y="270.0"></text>
</g>
<g>
<title>byte[] (1,703 samples, 0.08%)</title><rect x="48.7" y="243.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="51.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (1,807 samples, 0.08%)</title><rect x="49.6" y="371.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="52.6" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,807 samples, 0.08%)</title><rect x="49.6" y="355.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,807 samples, 0.08%)</title><rect x="49.6" y="339.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.6" y="350.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (1,807 samples, 0.08%)</title><rect x="49.6" y="323.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="52.6" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (860 samples, 0.04%)</title><rect x="50.6" y="371.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="53.6" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,013 samples, 0.09%)</title><rect x="51.0" y="371.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,013 samples, 0.09%)</title><rect x="51.0" y="355.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="54.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,013 samples, 0.09%)</title><rect x="51.0" y="339.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,013 samples, 0.09%)</title><rect x="51.0" y="323.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.0" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,013 samples, 0.09%)</title><rect x="51.0" y="307.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="54.0" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,948 samples, 0.09%)</title><rect x="51.0" y="291.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="54.0" y="302.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (931 samples, 0.04%)</title><rect x="52.1" y="371.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.1" y="382.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (931 samples, 0.04%)</title><rect x="52.1" y="355.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="55.1" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (834 samples, 0.04%)</title><rect x="52.6" y="387.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="55.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,915 samples, 0.08%)</title><rect x="53.0" y="435.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="56.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,915 samples, 0.08%)</title><rect x="53.0" y="419.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,915 samples, 0.08%)</title><rect x="53.0" y="403.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.0" y="414.0"></text>
</g>
<g>
<title>java.lang.String (755 samples, 0.03%)</title><rect x="53.0" y="387.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="56.0" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,160 samples, 0.05%)</title><rect x="53.4" y="387.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="56.4" y="398.0"></text>
</g>
<g>
<title>byte[] (1,160 samples, 0.05%)</title><rect x="53.4" y="371.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="56.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11,841 samples, 0.53%)</title><rect x="54.0" y="467.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.0" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Request (1,411 samples, 0.06%)</title><rect x="54.0" y="451.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="57.0" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3,038 samples, 0.13%)</title><rect x="54.7" y="451.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (2,424 samples, 0.11%)</title><rect x="54.7" y="435.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="57.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (614 samples, 0.03%)</title><rect x="56.0" y="435.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="59.0" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,392 samples, 0.33%)</title><rect x="56.3" y="451.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.3" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,392 samples, 0.33%)</title><rect x="56.3" y="435.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="59.3" y="446.0"></text>
</g>
<g>
<title>char[] (3,237 samples, 0.14%)</title><rect x="56.3" y="419.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="59.3" y="430.0"></text>
</g>
<g>
<title>char[] (705 samples, 0.03%)</title><rect x="58.0" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="61.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (883 samples, 0.04%)</title><rect x="58.4" y="419.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="61.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,567 samples, 0.11%)</title><rect x="58.8" y="419.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="61.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,567 samples, 0.11%)</title><rect x="58.8" y="403.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,567 samples, 0.11%)</title><rect x="58.8" y="387.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.8" y="398.0"></text>
</g>
<g>
<title>byte[] (2,487 samples, 0.11%)</title><rect x="58.8" y="371.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="61.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9,788 samples, 0.43%)</title><rect x="60.2" y="467.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.2" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9,788 samples, 0.43%)</title><rect x="60.2" y="451.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="63.2" y="462.0"></text>
</g>
<g>
<title>char[] (4,288 samples, 0.19%)</title><rect x="60.2" y="435.0" width="2.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="63.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String (2,523 samples, 0.11%)</title><rect x="62.5" y="435.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="65.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,919 samples, 0.13%)</title><rect x="63.8" y="435.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="66.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,919 samples, 0.13%)</title><rect x="63.8" y="419.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,919 samples, 0.13%)</title><rect x="63.8" y="403.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.8" y="414.0"></text>
</g>
<g>
<title>byte[] (2,919 samples, 0.13%)</title><rect x="63.8" y="387.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="66.8" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=25763] (60,369 samples, 2.68%)</title><rect x="65.3" y="547.0" width="31.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="68.3" y="558.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (60,369 samples, 2.68%)</title><rect x="65.3" y="531.0" width="31.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.3" y="542.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (60,369 samples, 2.68%)</title><rect x="65.3" y="515.0" width="31.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.3" y="526.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (60,369 samples, 2.68%)</title><rect x="65.3" y="499.0" width="31.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.3" y="510.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (60,369 samples, 2.68%)</title><rect x="65.3" y="483.0" width="31.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.3" y="494.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (37,418 samples, 1.66%)</title><rect x="65.3" y="467.0" width="19.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.3" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (37,418 samples, 1.66%)</title><rect x="65.3" y="451.0" width="19.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.3" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (35,471 samples, 1.57%)</title><rect x="65.3" y="435.0" width="18.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3,613 samples, 0.16%)</title><rect x="65.3" y="419.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,613 samples, 0.16%)</title><rect x="65.3" y="403.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,613 samples, 0.16%)</title><rect x="65.3" y="387.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.3" y="398.0"></text>
</g>
<g>
<title>java.lang.String (1,767 samples, 0.08%)</title><rect x="65.3" y="371.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="68.3" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,846 samples, 0.08%)</title><rect x="66.2" y="371.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="69.2" y="382.0"></text>
</g>
<g>
<title>byte[] (1,846 samples, 0.08%)</title><rect x="66.2" y="355.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="69.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (31,858 samples, 1.41%)</title><rect x="67.2" y="419.0" width="16.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="70.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (1,263 samples, 0.06%)</title><rect x="67.2" y="403.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (1,263 samples, 0.06%)</title><rect x="67.2" y="387.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="70.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.get$Lambda (1,263 samples, 0.06%)</title><rect x="67.2" y="371.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.2" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$70 (1,263 samples, 0.06%)</title><rect x="67.2" y="355.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="70.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,424 samples, 0.06%)</title><rect x="67.9" y="403.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="70.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,424 samples, 0.06%)</title><rect x="67.9" y="387.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="70.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,424 samples, 0.06%)</title><rect x="67.9" y="371.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.9" y="382.0"></text>
</g>
<g>
<title>java.lang.String (774 samples, 0.03%)</title><rect x="67.9" y="355.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="70.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (650 samples, 0.03%)</title><rect x="68.3" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="71.3" y="366.0"></text>
</g>
<g>
<title>byte[] (650 samples, 0.03%)</title><rect x="68.3" y="339.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="71.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (1,610 samples, 0.07%)</title><rect x="68.6" y="403.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (798 samples, 0.04%)</title><rect x="68.6" y="387.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (798 samples, 0.04%)</title><rect x="68.6" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (798 samples, 0.04%)</title><rect x="68.6" y="355.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.6" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (798 samples, 0.04%)</title><rect x="68.6" y="339.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="71.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (812 samples, 0.04%)</title><rect x="69.0" y="387.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="72.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (812 samples, 0.04%)</title><rect x="69.0" y="371.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (811 samples, 0.04%)</title><rect x="69.0" y="355.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="72.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (15,640 samples, 0.69%)</title><rect x="69.5" y="403.0" width="8.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.5" y="414.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (15,640 samples, 0.69%)</title><rect x="69.5" y="387.0" width="8.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.5" y="398.0"></text>
</g>
<g>
<title>java.util.HashSet (499 samples, 0.02%)</title><rect x="69.5" y="371.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="72.5" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3,142 samples, 0.14%)</title><rect x="69.7" y="371.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="72.7" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,260 samples, 0.06%)</title><rect x="69.7" y="355.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="72.7" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1,882 samples, 0.08%)</title><rect x="70.4" y="355.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.4" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1,360 samples, 0.06%)</title><rect x="70.4" y="339.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.4" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1,360 samples, 0.06%)</title><rect x="70.4" y="323.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="73.4" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (522 samples, 0.02%)</title><rect x="71.1" y="339.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.1" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (522 samples, 0.02%)</title><rect x="71.1" y="323.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="74.1" y="334.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (9,649 samples, 0.43%)</title><rect x="71.4" y="371.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="74.4" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap (1,770 samples, 0.08%)</title><rect x="71.4" y="355.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="74.4" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (7,879 samples, 0.35%)</title><rect x="72.3" y="355.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.3" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6,684 samples, 0.30%)</title><rect x="72.3" y="339.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.3" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6,684 samples, 0.30%)</title><rect x="72.3" y="323.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="75.3" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6,684 samples, 0.30%)</title><rect x="72.3" y="307.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.3" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3,850 samples, 0.17%)</title><rect x="72.3" y="291.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.3" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (3,850 samples, 0.17%)</title><rect x="72.3" y="275.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="75.3" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2,834 samples, 0.13%)</title><rect x="74.3" y="291.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.3" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2,280 samples, 0.10%)</title><rect x="74.3" y="275.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="77.3" y="286.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (554 samples, 0.02%)</title><rect x="75.5" y="275.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="78.5" y="286.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1,195 samples, 0.05%)</title><rect x="75.8" y="339.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1,195 samples, 0.05%)</title><rect x="75.8" y="323.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.8" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1,195 samples, 0.05%)</title><rect x="75.8" y="307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.8" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (1,195 samples, 0.05%)</title><rect x="75.8" y="291.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="78.8" y="302.0"></text>
</g>
<g>
<title>java/util/Set.of (2,350 samples, 0.10%)</title><rect x="76.4" y="371.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.4" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (1,040 samples, 0.05%)</title><rect x="76.4" y="355.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="79.4" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1,310 samples, 0.06%)</title><rect x="77.0" y="355.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="80.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,310 samples, 0.06%)</title><rect x="77.0" y="339.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="80.0" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (11,921 samples, 0.53%)</title><rect x="77.6" y="403.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (2,160 samples, 0.10%)</title><rect x="77.6" y="387.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (620 samples, 0.03%)</title><rect x="77.6" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.6" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (620 samples, 0.03%)</title><rect x="77.6" y="355.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="80.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1,540 samples, 0.07%)</title><rect x="78.0" y="371.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.0" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (1,072 samples, 0.05%)</title><rect x="78.2" y="355.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="81.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (8,877 samples, 0.39%)</title><rect x="78.8" y="387.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="81.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (3,243 samples, 0.14%)</title><rect x="78.8" y="371.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (3,243 samples, 0.14%)</title><rect x="78.8" y="355.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="81.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,243 samples, 0.14%)</title><rect x="78.8" y="339.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,243 samples, 0.14%)</title><rect x="78.8" y="323.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="81.8" y="334.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (3,243 samples, 0.14%)</title><rect x="78.8" y="307.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.8" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,243 samples, 0.14%)</title><rect x="78.8" y="291.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.8" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,243 samples, 0.14%)</title><rect x="78.8" y="275.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="81.8" y="286.0"></text>
</g>
<g>
<title>java.lang.String (1,657 samples, 0.07%)</title><rect x="78.8" y="259.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="81.8" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,586 samples, 0.07%)</title><rect x="79.6" y="259.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="82.6" y="270.0"></text>
</g>
<g>
<title>byte[] (1,586 samples, 0.07%)</title><rect x="79.6" y="243.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="82.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (1,788 samples, 0.08%)</title><rect x="80.5" y="371.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,788 samples, 0.08%)</title><rect x="80.5" y="355.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,788 samples, 0.08%)</title><rect x="80.5" y="339.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.5" y="350.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (1,788 samples, 0.08%)</title><rect x="80.5" y="323.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="83.5" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (838 samples, 0.04%)</title><rect x="81.4" y="371.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="84.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,063 samples, 0.09%)</title><rect x="81.9" y="371.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,063 samples, 0.09%)</title><rect x="81.9" y="355.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.9" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,063 samples, 0.09%)</title><rect x="81.9" y="339.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,063 samples, 0.09%)</title><rect x="81.9" y="323.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="84.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,063 samples, 0.09%)</title><rect x="81.9" y="307.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.9" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,978 samples, 0.09%)</title><rect x="81.9" y="291.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="84.9" y="302.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (945 samples, 0.04%)</title><rect x="82.9" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.9" y="382.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (945 samples, 0.04%)</title><rect x="82.9" y="355.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="85.9" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (884 samples, 0.04%)</title><rect x="83.4" y="387.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="86.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,947 samples, 0.09%)</title><rect x="83.9" y="435.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="86.9" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,947 samples, 0.09%)</title><rect x="83.9" y="419.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.9" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,947 samples, 0.09%)</title><rect x="83.9" y="403.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="86.9" y="414.0"></text>
</g>
<g>
<title>java.lang.String (774 samples, 0.03%)</title><rect x="83.9" y="387.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="86.9" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,173 samples, 0.05%)</title><rect x="84.3" y="387.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.3" y="398.0"></text>
</g>
<g>
<title>byte[] (1,173 samples, 0.05%)</title><rect x="84.3" y="371.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="87.3" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11,961 samples, 0.53%)</title><rect x="84.9" y="467.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.9" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Request (1,448 samples, 0.06%)</title><rect x="84.9" y="451.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="87.9" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3,017 samples, 0.13%)</title><rect x="85.7" y="451.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (2,444 samples, 0.11%)</title><rect x="85.7" y="435.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="88.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (573 samples, 0.03%)</title><rect x="86.9" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="89.9" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,496 samples, 0.33%)</title><rect x="87.2" y="451.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.2" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,496 samples, 0.33%)</title><rect x="87.2" y="435.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.2" y="446.0"></text>
</g>
<g>
<title>char[] (3,305 samples, 0.15%)</title><rect x="87.2" y="419.0" width="1.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="90.2" y="430.0"></text>
</g>
<g>
<title>char[] (743 samples, 0.03%)</title><rect x="89.0" y="419.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="92.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (833 samples, 0.04%)</title><rect x="89.4" y="419.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="92.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,615 samples, 0.12%)</title><rect x="89.8" y="419.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="92.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,615 samples, 0.12%)</title><rect x="89.8" y="403.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="92.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,615 samples, 0.12%)</title><rect x="89.8" y="387.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.8" y="398.0"></text>
</g>
<g>
<title>byte[] (2,556 samples, 0.11%)</title><rect x="89.8" y="371.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="92.8" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10,990 samples, 0.49%)</title><rect x="91.2" y="467.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="94.2" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10,990 samples, 0.49%)</title><rect x="91.2" y="451.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.2" y="462.0"></text>
</g>
<g>
<title>char[] (4,499 samples, 0.20%)</title><rect x="91.2" y="435.0" width="2.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="94.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String (2,995 samples, 0.13%)</title><rect x="93.6" y="435.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="96.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,429 samples, 0.15%)</title><rect x="95.1" y="435.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,429 samples, 0.15%)</title><rect x="95.1" y="419.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="98.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,429 samples, 0.15%)</title><rect x="95.1" y="403.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="98.1" y="414.0"></text>
</g>
<g>
<title>byte[] (3,429 samples, 0.15%)</title><rect x="95.1" y="387.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="98.1" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25748] (60,517 samples, 2.69%)</title><rect x="96.9" y="547.0" width="31.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="99.9" y="558.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (60,517 samples, 2.69%)</title><rect x="96.9" y="531.0" width="31.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.9" y="542.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (60,517 samples, 2.69%)</title><rect x="96.9" y="515.0" width="31.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.9" y="526.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (60,517 samples, 2.69%)</title><rect x="96.9" y="499.0" width="31.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.9" y="510.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (60,517 samples, 2.69%)</title><rect x="96.9" y="483.0" width="31.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.9" y="494.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (39,216 samples, 1.74%)</title><rect x="96.9" y="467.0" width="20.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (39,216 samples, 1.74%)</title><rect x="96.9" y="451.0" width="20.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.9" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (36,114 samples, 1.60%)</title><rect x="96.9" y="435.0" width="18.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="99.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3,606 samples, 0.16%)</title><rect x="96.9" y="419.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,606 samples, 0.16%)</title><rect x="96.9" y="403.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,606 samples, 0.16%)</title><rect x="96.9" y="387.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="99.9" y="398.0"></text>
</g>
<g>
<title>java.lang.String (1,594 samples, 0.07%)</title><rect x="96.9" y="371.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="99.9" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,012 samples, 0.09%)</title><rect x="97.8" y="371.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="100.8" y="382.0"></text>
</g>
<g>
<title>byte[] (2,012 samples, 0.09%)</title><rect x="97.8" y="355.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="100.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (32,508 samples, 1.44%)</title><rect x="98.8" y="419.0" width="17.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (943 samples, 0.04%)</title><rect x="98.8" y="403.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (943 samples, 0.04%)</title><rect x="98.8" y="387.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.get$Lambda (943 samples, 0.04%)</title><rect x="98.8" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="101.8" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$70 (943 samples, 0.04%)</title><rect x="98.8" y="355.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="101.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (1,713 samples, 0.08%)</title><rect x="99.3" y="403.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (900 samples, 0.04%)</title><rect x="99.3" y="387.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (900 samples, 0.04%)</title><rect x="99.3" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (900 samples, 0.04%)</title><rect x="99.3" y="355.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.3" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (900 samples, 0.04%)</title><rect x="99.3" y="339.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="102.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (813 samples, 0.04%)</title><rect x="99.8" y="387.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="102.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (813 samples, 0.04%)</title><rect x="99.8" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="102.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (812 samples, 0.04%)</title><rect x="99.8" y="355.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="102.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (15,972 samples, 0.71%)</title><rect x="100.2" y="403.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="103.2" y="414.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (15,972 samples, 0.71%)</title><rect x="100.2" y="387.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.2" y="398.0"></text>
</g>
<g>
<title>java.util.HashSet (604 samples, 0.03%)</title><rect x="100.2" y="371.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="103.2" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3,341 samples, 0.15%)</title><rect x="100.5" y="371.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.5" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,186 samples, 0.05%)</title><rect x="100.5" y="355.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="103.5" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2,155 samples, 0.10%)</title><rect x="101.1" y="355.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.1" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1,658 samples, 0.07%)</title><rect x="101.1" y="339.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="104.1" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1,658 samples, 0.07%)</title><rect x="101.1" y="323.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="104.1" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (497 samples, 0.02%)</title><rect x="102.0" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="105.0" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (497 samples, 0.02%)</title><rect x="102.0" y="323.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="105.0" y="334.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (9,547 samples, 0.42%)</title><rect x="102.3" y="371.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.3" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap (1,912 samples, 0.08%)</title><rect x="102.3" y="355.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="105.3" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (7,635 samples, 0.34%)</title><rect x="103.3" y="355.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.3" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6,377 samples, 0.28%)</title><rect x="103.3" y="339.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.3" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6,377 samples, 0.28%)</title><rect x="103.3" y="323.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.3" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6,377 samples, 0.28%)</title><rect x="103.3" y="307.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="106.3" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3,438 samples, 0.15%)</title><rect x="103.3" y="291.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="106.3" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (3,438 samples, 0.15%)</title><rect x="103.3" y="275.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="106.3" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2,939 samples, 0.13%)</title><rect x="105.1" y="291.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.1" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2,936 samples, 0.13%)</title><rect x="105.1" y="275.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="108.1" y="286.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1,258 samples, 0.06%)</title><rect x="106.6" y="339.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="109.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1,258 samples, 0.06%)</title><rect x="106.6" y="323.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="109.6" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1,258 samples, 0.06%)</title><rect x="106.6" y="307.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="109.6" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (1,258 samples, 0.06%)</title><rect x="106.6" y="291.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="109.6" y="302.0"></text>
</g>
<g>
<title>java/util/Set.of (2,480 samples, 0.11%)</title><rect x="107.3" y="371.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.3" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (745 samples, 0.03%)</title><rect x="107.3" y="355.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="110.3" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1,735 samples, 0.08%)</title><rect x="107.7" y="355.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.7" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,735 samples, 0.08%)</title><rect x="107.7" y="339.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="110.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (13,880 samples, 0.62%)</title><rect x="108.6" y="403.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.6" y="414.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (2,924 samples, 0.13%)</title><rect x="108.6" y="387.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="111.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (842 samples, 0.04%)</title><rect x="108.6" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="111.6" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (842 samples, 0.04%)</title><rect x="108.6" y="355.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="111.6" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (2,082 samples, 0.09%)</title><rect x="109.0" y="371.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.0" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (840 samples, 0.04%)</title><rect x="109.0" y="355.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="112.0" y="366.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (1,242 samples, 0.06%)</title><rect x="109.4" y="355.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="112.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (9,943 samples, 0.44%)</title><rect x="110.1" y="387.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="113.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (3,611 samples, 0.16%)</title><rect x="110.1" y="371.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (3,611 samples, 0.16%)</title><rect x="110.1" y="355.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="113.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,611 samples, 0.16%)</title><rect x="110.1" y="339.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,611 samples, 0.16%)</title><rect x="110.1" y="323.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.1" y="334.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (3,611 samples, 0.16%)</title><rect x="110.1" y="307.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.1" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,611 samples, 0.16%)</title><rect x="110.1" y="291.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,611 samples, 0.16%)</title><rect x="110.1" y="275.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="113.1" y="286.0"></text>
</g>
<g>
<title>java.lang.String (2,031 samples, 0.09%)</title><rect x="110.1" y="259.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="113.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,580 samples, 0.07%)</title><rect x="111.2" y="259.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="114.2" y="270.0"></text>
</g>
<g>
<title>byte[] (1,580 samples, 0.07%)</title><rect x="111.2" y="243.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="114.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (1,984 samples, 0.09%)</title><rect x="112.0" y="371.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="115.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,984 samples, 0.09%)</title><rect x="112.0" y="355.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="115.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,984 samples, 0.09%)</title><rect x="112.0" y="339.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="115.0" y="350.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (1,984 samples, 0.09%)</title><rect x="112.0" y="323.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="115.0" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,246 samples, 0.06%)</title><rect x="113.0" y="371.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="116.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,046 samples, 0.09%)</title><rect x="113.7" y="371.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="116.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,046 samples, 0.09%)</title><rect x="113.7" y="355.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="116.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,046 samples, 0.09%)</title><rect x="113.7" y="339.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="116.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,046 samples, 0.09%)</title><rect x="113.7" y="323.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.7" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,046 samples, 0.09%)</title><rect x="113.7" y="307.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.7" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,046 samples, 0.09%)</title><rect x="113.7" y="291.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="116.7" y="302.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (1,056 samples, 0.05%)</title><rect x="114.7" y="371.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.7" y="382.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (1,056 samples, 0.05%)</title><rect x="114.7" y="355.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="117.7" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (1,013 samples, 0.04%)</title><rect x="115.3" y="387.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="118.3" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3,102 samples, 0.14%)</title><rect x="115.8" y="435.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="118.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,102 samples, 0.14%)</title><rect x="115.8" y="419.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="118.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,102 samples, 0.14%)</title><rect x="115.8" y="403.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.8" y="414.0"></text>
</g>
<g>
<title>java.lang.String (1,047 samples, 0.05%)</title><rect x="115.8" y="387.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="118.8" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,055 samples, 0.09%)</title><rect x="116.4" y="387.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="119.4" y="398.0"></text>
</g>
<g>
<title>byte[] (2,055 samples, 0.09%)</title><rect x="116.4" y="371.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="119.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (17,243 samples, 0.77%)</title><rect x="117.5" y="467.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="120.5" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Request (1,999 samples, 0.09%)</title><rect x="117.5" y="451.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="120.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3,705 samples, 0.16%)</title><rect x="118.5" y="451.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (3,702 samples, 0.16%)</title><rect x="118.5" y="435.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="121.5" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11,539 samples, 0.51%)</title><rect x="120.4" y="451.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="123.4" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11,539 samples, 0.51%)</title><rect x="120.4" y="435.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.4" y="446.0"></text>
</g>
<g>
<title>char[] (8,592 samples, 0.38%)</title><rect x="120.4" y="419.0" width="4.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="123.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (578 samples, 0.03%)</title><rect x="125.0" y="419.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="128.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,178 samples, 0.10%)</title><rect x="125.3" y="419.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,178 samples, 0.10%)</title><rect x="125.3" y="403.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="128.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,178 samples, 0.10%)</title><rect x="125.3" y="387.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.3" y="398.0"></text>
</g>
<g>
<title>byte[] (2,178 samples, 0.10%)</title><rect x="125.3" y="371.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="128.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,058 samples, 0.18%)</title><rect x="126.5" y="467.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.5" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,058 samples, 0.18%)</title><rect x="126.5" y="451.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.5" y="462.0"></text>
</g>
<g>
<title>char[] (1,822 samples, 0.08%)</title><rect x="126.5" y="435.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="129.5" y="446.0"></text>
</g>
<g>
<title>java.lang.String (843 samples, 0.04%)</title><rect x="127.4" y="435.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="130.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,393 samples, 0.06%)</title><rect x="127.9" y="435.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.9" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,393 samples, 0.06%)</title><rect x="127.9" y="419.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.9" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,393 samples, 0.06%)</title><rect x="127.9" y="403.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.9" y="414.0"></text>
</g>
<g>
<title>byte[] (1,393 samples, 0.06%)</title><rect x="127.9" y="387.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="130.9" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25758] (58,666 samples, 2.60%)</title><rect x="128.6" y="547.0" width="30.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="131.6" y="558.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (58,666 samples, 2.60%)</title><rect x="128.6" y="531.0" width="30.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.6" y="542.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (58,666 samples, 2.60%)</title><rect x="128.6" y="515.0" width="30.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="131.6" y="526.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (58,666 samples, 2.60%)</title><rect x="128.6" y="499.0" width="30.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="131.6" y="510.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (58,666 samples, 2.60%)</title><rect x="128.6" y="483.0" width="30.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.6" y="494.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (37,797 samples, 1.68%)</title><rect x="128.6" y="467.0" width="19.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="131.6" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (37,797 samples, 1.68%)</title><rect x="128.6" y="451.0" width="19.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="131.6" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (35,831 samples, 1.59%)</title><rect x="128.6" y="435.0" width="18.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="131.6" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3,777 samples, 0.17%)</title><rect x="128.6" y="419.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,777 samples, 0.17%)</title><rect x="128.6" y="403.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,777 samples, 0.17%)</title><rect x="128.6" y="387.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.6" y="398.0"></text>
</g>
<g>
<title>java.lang.String (1,728 samples, 0.08%)</title><rect x="128.6" y="371.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="131.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,049 samples, 0.09%)</title><rect x="129.5" y="371.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.5" y="382.0"></text>
</g>
<g>
<title>byte[] (2,049 samples, 0.09%)</title><rect x="129.5" y="355.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="132.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (32,054 samples, 1.42%)</title><rect x="130.6" y="419.0" width="16.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="133.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (1,371 samples, 0.06%)</title><rect x="130.6" y="403.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (1,371 samples, 0.06%)</title><rect x="130.6" y="387.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="133.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.get$Lambda (1,371 samples, 0.06%)</title><rect x="130.6" y="371.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.6" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$70 (1,371 samples, 0.06%)</title><rect x="130.6" y="355.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="133.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,518 samples, 0.07%)</title><rect x="131.3" y="403.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="134.3" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,518 samples, 0.07%)</title><rect x="131.3" y="387.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,518 samples, 0.07%)</title><rect x="131.3" y="371.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.3" y="382.0"></text>
</g>
<g>
<title>java.lang.String (917 samples, 0.04%)</title><rect x="131.3" y="355.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="134.3" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (601 samples, 0.03%)</title><rect x="131.8" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="134.8" y="366.0"></text>
</g>
<g>
<title>byte[] (601 samples, 0.03%)</title><rect x="131.8" y="339.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="134.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (1,562 samples, 0.07%)</title><rect x="132.1" y="403.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (769 samples, 0.03%)</title><rect x="132.1" y="387.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (769 samples, 0.03%)</title><rect x="132.1" y="371.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="135.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (769 samples, 0.03%)</title><rect x="132.1" y="355.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.1" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (769 samples, 0.03%)</title><rect x="132.1" y="339.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="135.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (793 samples, 0.04%)</title><rect x="132.5" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (793 samples, 0.04%)</title><rect x="132.5" y="371.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="135.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (790 samples, 0.04%)</title><rect x="132.5" y="355.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="135.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (15,258 samples, 0.68%)</title><rect x="132.9" y="403.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.9" y="414.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (15,258 samples, 0.68%)</title><rect x="132.9" y="387.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="135.9" y="398.0"></text>
</g>
<g>
<title>java.util.HashSet (555 samples, 0.02%)</title><rect x="132.9" y="371.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="135.9" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3,202 samples, 0.14%)</title><rect x="133.2" y="371.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,189 samples, 0.05%)</title><rect x="133.2" y="355.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="136.2" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2,013 samples, 0.09%)</title><rect x="133.8" y="355.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="136.8" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1,446 samples, 0.06%)</title><rect x="133.8" y="339.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.8" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1,446 samples, 0.06%)</title><rect x="133.8" y="323.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="136.8" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (567 samples, 0.03%)</title><rect x="134.6" y="339.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="137.6" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (567 samples, 0.03%)</title><rect x="134.6" y="323.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="137.6" y="334.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (9,192 samples, 0.41%)</title><rect x="134.9" y="371.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.9" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap (1,774 samples, 0.08%)</title><rect x="134.9" y="355.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="137.9" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (7,418 samples, 0.33%)</title><rect x="135.8" y="355.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="138.8" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6,351 samples, 0.28%)</title><rect x="135.8" y="339.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.8" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6,351 samples, 0.28%)</title><rect x="135.8" y="323.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.8" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6,351 samples, 0.28%)</title><rect x="135.8" y="307.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.8" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3,479 samples, 0.15%)</title><rect x="135.8" y="291.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.8" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (3,479 samples, 0.15%)</title><rect x="135.8" y="275.0" width="1.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="138.8" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2,872 samples, 0.13%)</title><rect x="137.6" y="291.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.6" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2,869 samples, 0.13%)</title><rect x="137.6" y="275.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="140.6" y="286.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1,067 samples, 0.05%)</title><rect x="139.1" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="142.1" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1,067 samples, 0.05%)</title><rect x="139.1" y="323.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.1" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1,067 samples, 0.05%)</title><rect x="139.1" y="307.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.1" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (1,067 samples, 0.05%)</title><rect x="139.1" y="291.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="142.1" y="302.0"></text>
</g>
<g>
<title>java/util/Set.of (2,309 samples, 0.10%)</title><rect x="139.7" y="371.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="142.7" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (893 samples, 0.04%)</title><rect x="139.7" y="355.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="142.7" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1,416 samples, 0.06%)</title><rect x="140.2" y="355.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="143.2" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,416 samples, 0.06%)</title><rect x="140.2" y="339.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="143.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (12,345 samples, 0.55%)</title><rect x="140.9" y="403.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="143.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (2,421 samples, 0.11%)</title><rect x="140.9" y="387.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.9" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (601 samples, 0.03%)</title><rect x="140.9" y="371.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.9" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (601 samples, 0.03%)</title><rect x="140.9" y="355.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="143.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1,820 samples, 0.08%)</title><rect x="141.2" y="371.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.2" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (554 samples, 0.02%)</title><rect x="141.2" y="355.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="144.2" y="366.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (1,266 samples, 0.06%)</title><rect x="141.5" y="355.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="144.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (9,039 samples, 0.40%)</title><rect x="142.2" y="387.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (3,487 samples, 0.15%)</title><rect x="142.2" y="371.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (3,487 samples, 0.15%)</title><rect x="142.2" y="355.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="145.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,487 samples, 0.15%)</title><rect x="142.2" y="339.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,487 samples, 0.15%)</title><rect x="142.2" y="323.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="145.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (3,487 samples, 0.15%)</title><rect x="142.2" y="307.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,487 samples, 0.15%)</title><rect x="142.2" y="291.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,487 samples, 0.15%)</title><rect x="142.2" y="275.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.2" y="286.0"></text>
</g>
<g>
<title>java.lang.String (1,806 samples, 0.08%)</title><rect x="142.2" y="259.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="145.2" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,681 samples, 0.07%)</title><rect x="143.1" y="259.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.1" y="270.0"></text>
</g>
<g>
<title>byte[] (1,681 samples, 0.07%)</title><rect x="143.1" y="243.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="146.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (1,772 samples, 0.08%)</title><rect x="144.0" y="371.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="147.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,772 samples, 0.08%)</title><rect x="144.0" y="355.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,772 samples, 0.08%)</title><rect x="144.0" y="339.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="147.0" y="350.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (1,772 samples, 0.08%)</title><rect x="144.0" y="323.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="147.0" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (881 samples, 0.04%)</title><rect x="144.9" y="371.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="147.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,045 samples, 0.09%)</title><rect x="145.4" y="371.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,045 samples, 0.09%)</title><rect x="145.4" y="355.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,045 samples, 0.09%)</title><rect x="145.4" y="339.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="148.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,045 samples, 0.09%)</title><rect x="145.4" y="323.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="148.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,045 samples, 0.09%)</title><rect x="145.4" y="307.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="148.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,045 samples, 0.09%)</title><rect x="145.4" y="291.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="148.4" y="302.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (854 samples, 0.04%)</title><rect x="146.5" y="371.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.5" y="382.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (854 samples, 0.04%)</title><rect x="146.5" y="355.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="149.5" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (885 samples, 0.04%)</title><rect x="146.9" y="387.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="149.9" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,966 samples, 0.09%)</title><rect x="147.4" y="435.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,966 samples, 0.09%)</title><rect x="147.4" y="419.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="150.4" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,966 samples, 0.09%)</title><rect x="147.4" y="403.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.4" y="414.0"></text>
</g>
<g>
<title>java.lang.String (818 samples, 0.04%)</title><rect x="147.4" y="387.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="150.4" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,148 samples, 0.05%)</title><rect x="147.8" y="387.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="150.8" y="398.0"></text>
</g>
<g>
<title>byte[] (1,148 samples, 0.05%)</title><rect x="147.8" y="371.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="150.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11,467 samples, 0.51%)</title><rect x="148.4" y="467.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.4" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Request (1,356 samples, 0.06%)</title><rect x="148.4" y="451.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="151.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2,990 samples, 0.13%)</title><rect x="149.1" y="451.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="152.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (2,987 samples, 0.13%)</title><rect x="149.1" y="435.0" width="1.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="152.1" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,121 samples, 0.32%)</title><rect x="150.7" y="451.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.7" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,121 samples, 0.32%)</title><rect x="150.7" y="435.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.7" y="446.0"></text>
</g>
<g>
<title>char[] (4,071 samples, 0.18%)</title><rect x="150.7" y="419.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="153.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (956 samples, 0.04%)</title><rect x="152.8" y="419.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="155.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,084 samples, 0.09%)</title><rect x="153.3" y="419.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,084 samples, 0.09%)</title><rect x="153.3" y="403.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,084 samples, 0.09%)</title><rect x="153.3" y="387.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.3" y="398.0"></text>
</g>
<g>
<title>byte[] (2,084 samples, 0.09%)</title><rect x="153.3" y="371.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="156.3" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9,402 samples, 0.42%)</title><rect x="154.4" y="467.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="157.4" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9,402 samples, 0.42%)</title><rect x="154.4" y="451.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.4" y="462.0"></text>
</g>
<g>
<title>char[] (4,277 samples, 0.19%)</title><rect x="154.4" y="435.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="157.4" y="446.0"></text>
</g>
<g>
<title>java.lang.String (2,014 samples, 0.09%)</title><rect x="156.6" y="435.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="159.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,111 samples, 0.14%)</title><rect x="157.7" y="435.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="160.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,111 samples, 0.14%)</title><rect x="157.7" y="419.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="160.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,111 samples, 0.14%)</title><rect x="157.7" y="403.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.7" y="414.0"></text>
</g>
<g>
<title>byte[] (3,111 samples, 0.14%)</title><rect x="157.7" y="387.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="160.7" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=25764] (61,878 samples, 2.75%)</title><rect x="159.3" y="547.0" width="32.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="162.3" y="558.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (61,878 samples, 2.75%)</title><rect x="159.3" y="531.0" width="32.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.3" y="542.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.process (61,878 samples, 2.75%)</title><rect x="159.3" y="515.0" width="32.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.3" y="526.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (61,878 samples, 2.75%)</title><rect x="159.3" y="499.0" width="32.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.3" y="510.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (61,878 samples, 2.75%)</title><rect x="159.3" y="483.0" width="32.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.3" y="494.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (38,456 samples, 1.71%)</title><rect x="159.3" y="467.0" width="20.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.3" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (38,456 samples, 1.71%)</title><rect x="159.3" y="451.0" width="20.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.3" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (36,464 samples, 1.62%)</title><rect x="159.3" y="435.0" width="19.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="162.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3,752 samples, 0.17%)</title><rect x="159.3" y="419.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,752 samples, 0.17%)</title><rect x="159.3" y="403.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="162.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,752 samples, 0.17%)</title><rect x="159.3" y="387.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="162.3" y="398.0"></text>
</g>
<g>
<title>java.lang.String (1,736 samples, 0.08%)</title><rect x="159.3" y="371.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="162.3" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,016 samples, 0.09%)</title><rect x="160.2" y="371.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="163.2" y="382.0"></text>
</g>
<g>
<title>byte[] (2,016 samples, 0.09%)</title><rect x="160.2" y="355.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="163.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (32,712 samples, 1.45%)</title><rect x="161.3" y="419.0" width="17.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="164.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (1,243 samples, 0.06%)</title><rect x="161.3" y="403.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (1,243 samples, 0.06%)</title><rect x="161.3" y="387.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.get$Lambda (1,243 samples, 0.06%)</title><rect x="161.3" y="371.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="164.3" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$70 (1,243 samples, 0.06%)</title><rect x="161.3" y="355.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="164.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,442 samples, 0.06%)</title><rect x="161.9" y="403.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="164.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,442 samples, 0.06%)</title><rect x="161.9" y="387.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="164.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,442 samples, 0.06%)</title><rect x="161.9" y="371.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="164.9" y="382.0"></text>
</g>
<g>
<title>java.lang.String (860 samples, 0.04%)</title><rect x="161.9" y="355.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="164.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (582 samples, 0.03%)</title><rect x="162.4" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="165.4" y="366.0"></text>
</g>
<g>
<title>byte[] (582 samples, 0.03%)</title><rect x="162.4" y="339.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="165.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (1,616 samples, 0.07%)</title><rect x="162.7" y="403.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (813 samples, 0.04%)</title><rect x="162.7" y="387.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (813 samples, 0.04%)</title><rect x="162.7" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (813 samples, 0.04%)</title><rect x="162.7" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.7" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (813 samples, 0.04%)</title><rect x="162.7" y="339.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="165.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (803 samples, 0.04%)</title><rect x="163.1" y="387.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="166.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (803 samples, 0.04%)</title><rect x="163.1" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="166.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (799 samples, 0.04%)</title><rect x="163.1" y="355.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="166.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (16,183 samples, 0.72%)</title><rect x="163.5" y="403.0" width="8.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.5" y="414.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (16,183 samples, 0.72%)</title><rect x="163.5" y="387.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.5" y="398.0"></text>
</g>
<g>
<title>java.util.HashSet (580 samples, 0.03%)</title><rect x="163.5" y="371.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="166.5" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3,112 samples, 0.14%)</title><rect x="163.8" y="371.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,230 samples, 0.05%)</title><rect x="163.8" y="355.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="166.8" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1,882 samples, 0.08%)</title><rect x="164.5" y="355.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="167.5" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1,377 samples, 0.06%)</title><rect x="164.5" y="339.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.5" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1,377 samples, 0.06%)</title><rect x="164.5" y="323.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="167.5" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (505 samples, 0.02%)</title><rect x="165.2" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="168.2" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (505 samples, 0.02%)</title><rect x="165.2" y="323.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="168.2" y="334.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (10,134 samples, 0.45%)</title><rect x="165.5" y="371.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="168.5" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap (1,838 samples, 0.08%)</title><rect x="165.5" y="355.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="168.5" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (8,296 samples, 0.37%)</title><rect x="166.4" y="355.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="169.4" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7,150 samples, 0.32%)</title><rect x="166.4" y="339.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="169.4" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7,150 samples, 0.32%)</title><rect x="166.4" y="323.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="169.4" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7,150 samples, 0.32%)</title><rect x="166.4" y="307.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="169.4" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4,042 samples, 0.18%)</title><rect x="166.4" y="291.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="169.4" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (4,042 samples, 0.18%)</title><rect x="166.4" y="275.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="169.4" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3,108 samples, 0.14%)</title><rect x="168.6" y="291.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.6" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2,498 samples, 0.11%)</title><rect x="168.6" y="275.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="171.6" y="286.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (610 samples, 0.03%)</title><rect x="169.9" y="275.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="172.9" y="286.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1,146 samples, 0.05%)</title><rect x="170.2" y="339.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="173.2" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1,146 samples, 0.05%)</title><rect x="170.2" y="323.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="173.2" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1,146 samples, 0.05%)</title><rect x="170.2" y="307.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.2" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (1,146 samples, 0.05%)</title><rect x="170.2" y="291.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="173.2" y="302.0"></text>
</g>
<g>
<title>java/util/Set.of (2,357 samples, 0.10%)</title><rect x="170.8" y="371.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.8" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (1,012 samples, 0.04%)</title><rect x="170.8" y="355.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="173.8" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1,345 samples, 0.06%)</title><rect x="171.3" y="355.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,345 samples, 0.06%)</title><rect x="171.3" y="339.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="174.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (12,228 samples, 0.54%)</title><rect x="172.0" y="403.0" width="6.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (2,350 samples, 0.10%)</title><rect x="172.0" y="387.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (737 samples, 0.03%)</title><rect x="172.0" y="371.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="175.0" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (737 samples, 0.03%)</title><rect x="172.0" y="355.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="175.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1,613 samples, 0.07%)</title><rect x="172.4" y="371.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.4" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (517 samples, 0.02%)</title><rect x="172.4" y="355.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="175.4" y="366.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (1,096 samples, 0.05%)</title><rect x="172.7" y="355.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="175.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (9,083 samples, 0.40%)</title><rect x="173.2" y="387.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (3,430 samples, 0.15%)</title><rect x="173.2" y="371.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (3,430 samples, 0.15%)</title><rect x="173.2" y="355.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,430 samples, 0.15%)</title><rect x="173.2" y="339.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="176.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,430 samples, 0.15%)</title><rect x="173.2" y="323.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.2" y="334.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (3,430 samples, 0.15%)</title><rect x="173.2" y="307.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="176.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,430 samples, 0.15%)</title><rect x="173.2" y="291.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="176.2" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,430 samples, 0.15%)</title><rect x="173.2" y="275.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.2" y="286.0"></text>
</g>
<g>
<title>java.lang.String (1,853 samples, 0.08%)</title><rect x="173.2" y="259.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="176.2" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,577 samples, 0.07%)</title><rect x="174.2" y="259.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="177.2" y="270.0"></text>
</g>
<g>
<title>byte[] (1,577 samples, 0.07%)</title><rect x="174.2" y="243.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="177.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (1,792 samples, 0.08%)</title><rect x="175.0" y="371.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,792 samples, 0.08%)</title><rect x="175.0" y="355.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="178.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,792 samples, 0.08%)</title><rect x="175.0" y="339.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.0" y="350.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (1,792 samples, 0.08%)</title><rect x="175.0" y="323.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="178.0" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (864 samples, 0.04%)</title><rect x="176.0" y="371.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="179.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,060 samples, 0.09%)</title><rect x="176.4" y="371.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="179.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,060 samples, 0.09%)</title><rect x="176.4" y="355.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="179.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,060 samples, 0.09%)</title><rect x="176.4" y="339.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,060 samples, 0.09%)</title><rect x="176.4" y="323.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="179.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,060 samples, 0.09%)</title><rect x="176.4" y="307.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="179.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,000 samples, 0.09%)</title><rect x="176.4" y="291.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="179.4" y="302.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (937 samples, 0.04%)</title><rect x="177.5" y="371.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="180.5" y="382.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (937 samples, 0.04%)</title><rect x="177.5" y="355.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="180.5" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (795 samples, 0.04%)</title><rect x="178.0" y="387.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="181.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,992 samples, 0.09%)</title><rect x="178.4" y="435.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="181.4" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,992 samples, 0.09%)</title><rect x="178.4" y="419.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="181.4" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,992 samples, 0.09%)</title><rect x="178.4" y="403.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="181.4" y="414.0"></text>
</g>
<g>
<title>java.lang.String (760 samples, 0.03%)</title><rect x="178.4" y="387.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="181.4" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,232 samples, 0.05%)</title><rect x="178.8" y="387.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.8" y="398.0"></text>
</g>
<g>
<title>byte[] (1,232 samples, 0.05%)</title><rect x="178.8" y="371.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="181.8" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (12,062 samples, 0.54%)</title><rect x="179.5" y="467.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="182.5" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Request (1,561 samples, 0.07%)</title><rect x="179.5" y="451.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="182.5" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3,015 samples, 0.13%)</title><rect x="180.3" y="451.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="183.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (2,483 samples, 0.11%)</title><rect x="180.3" y="435.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="183.3" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (532 samples, 0.02%)</title><rect x="181.6" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="184.6" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,486 samples, 0.33%)</title><rect x="181.9" y="451.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="184.9" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,486 samples, 0.33%)</title><rect x="181.9" y="435.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="184.9" y="446.0"></text>
</g>
<g>
<title>char[] (3,399 samples, 0.15%)</title><rect x="181.9" y="419.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="184.9" y="430.0"></text>
</g>
<g>
<title>char[] (670 samples, 0.03%)</title><rect x="183.6" y="419.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="186.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (857 samples, 0.04%)</title><rect x="184.0" y="419.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="187.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,560 samples, 0.11%)</title><rect x="184.4" y="419.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="187.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,560 samples, 0.11%)</title><rect x="184.4" y="403.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="187.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,560 samples, 0.11%)</title><rect x="184.4" y="387.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="187.4" y="398.0"></text>
</g>
<g>
<title>byte[] (2,505 samples, 0.11%)</title><rect x="184.4" y="371.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="187.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11,360 samples, 0.50%)</title><rect x="185.8" y="467.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="188.8" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11,360 samples, 0.50%)</title><rect x="185.8" y="451.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="188.8" y="462.0"></text>
</g>
<g>
<title>char[] (4,815 samples, 0.21%)</title><rect x="185.8" y="435.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="188.8" y="446.0"></text>
</g>
<g>
<title>java.lang.String (3,036 samples, 0.13%)</title><rect x="188.3" y="435.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="191.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,469 samples, 0.15%)</title><rect x="189.9" y="435.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="192.9" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,469 samples, 0.15%)</title><rect x="189.9" y="419.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="192.9" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,469 samples, 0.15%)</title><rect x="189.9" y="403.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="192.9" y="414.0"></text>
</g>
<g>
<title>byte[] (3,469 samples, 0.15%)</title><rect x="189.9" y="387.0" width="1.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="192.9" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25749] (68,726 samples, 3.05%)</title><rect x="191.7" y="547.0" width="36.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="194.7" y="558.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (68,726 samples, 3.05%)</title><rect x="191.7" y="531.0" width="36.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.7" y="542.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.process (68,726 samples, 3.05%)</title><rect x="191.7" y="515.0" width="36.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="194.7" y="526.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (68,726 samples, 3.05%)</title><rect x="191.7" y="499.0" width="36.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.7" y="510.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (68,725 samples, 3.05%)</title><rect x="191.7" y="483.0" width="36.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.7" y="494.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (34,692 samples, 1.54%)</title><rect x="191.7" y="467.0" width="18.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="194.7" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (34,692 samples, 1.54%)</title><rect x="191.7" y="451.0" width="18.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="194.7" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (32,591 samples, 1.45%)</title><rect x="191.7" y="435.0" width="17.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="194.7" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3,406 samples, 0.15%)</title><rect x="191.7" y="419.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="194.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,406 samples, 0.15%)</title><rect x="191.7" y="403.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="194.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,406 samples, 0.15%)</title><rect x="191.7" y="387.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="194.7" y="398.0"></text>
</g>
<g>
<title>java.lang.String (1,686 samples, 0.07%)</title><rect x="191.7" y="371.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="194.7" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,720 samples, 0.08%)</title><rect x="192.6" y="371.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="195.6" y="382.0"></text>
</g>
<g>
<title>byte[] (1,720 samples, 0.08%)</title><rect x="192.6" y="355.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="195.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (29,185 samples, 1.29%)</title><rect x="193.5" y="419.0" width="15.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="196.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (1,312 samples, 0.06%)</title><rect x="193.5" y="403.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (1,312 samples, 0.06%)</title><rect x="193.5" y="387.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="196.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.get$Lambda (1,312 samples, 0.06%)</title><rect x="193.5" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="196.5" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$70 (1,312 samples, 0.06%)</title><rect x="193.5" y="355.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="196.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (1,475 samples, 0.07%)</title><rect x="194.2" y="403.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="197.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (649 samples, 0.03%)</title><rect x="194.2" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="197.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (649 samples, 0.03%)</title><rect x="194.2" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="197.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (649 samples, 0.03%)</title><rect x="194.2" y="355.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="197.2" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (649 samples, 0.03%)</title><rect x="194.2" y="339.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="197.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (826 samples, 0.04%)</title><rect x="194.5" y="387.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (826 samples, 0.04%)</title><rect x="194.5" y="371.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="197.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (822 samples, 0.04%)</title><rect x="194.5" y="355.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="197.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (15,930 samples, 0.71%)</title><rect x="195.0" y="403.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.0" y="414.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (15,930 samples, 0.71%)</title><rect x="195.0" y="387.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.0" y="398.0"></text>
</g>
<g>
<title>java.util.HashSet (527 samples, 0.02%)</title><rect x="195.0" y="371.0" width="0.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="198.0" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3,011 samples, 0.13%)</title><rect x="195.2" y="371.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="198.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,077 samples, 0.05%)</title><rect x="195.2" y="355.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="198.2" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1,934 samples, 0.09%)</title><rect x="195.8" y="355.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="198.8" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1,216 samples, 0.05%)</title><rect x="195.8" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="198.8" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1,216 samples, 0.05%)</title><rect x="195.8" y="323.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="198.8" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (718 samples, 0.03%)</title><rect x="196.4" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="199.4" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (718 samples, 0.03%)</title><rect x="196.4" y="323.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="199.4" y="334.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (10,612 samples, 0.47%)</title><rect x="196.8" y="371.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.8" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap (1,710 samples, 0.08%)</title><rect x="196.8" y="355.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="199.8" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (8,902 samples, 0.39%)</title><rect x="197.7" y="355.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="200.7" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7,792 samples, 0.35%)</title><rect x="197.7" y="339.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="200.7" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7,792 samples, 0.35%)</title><rect x="197.7" y="323.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="200.7" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7,792 samples, 0.35%)</title><rect x="197.7" y="307.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="200.7" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4,063 samples, 0.18%)</title><rect x="197.7" y="291.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="200.7" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (4,063 samples, 0.18%)</title><rect x="197.7" y="275.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="200.7" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3,729 samples, 0.17%)</title><rect x="199.8" y="291.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="202.8" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2,260 samples, 0.10%)</title><rect x="199.8" y="275.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="202.8" y="286.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1,469 samples, 0.07%)</title><rect x="201.0" y="275.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="204.0" y="286.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1,110 samples, 0.05%)</title><rect x="201.8" y="339.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1,110 samples, 0.05%)</title><rect x="201.8" y="323.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="204.8" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1,110 samples, 0.05%)</title><rect x="201.8" y="307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.8" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (1,110 samples, 0.05%)</title><rect x="201.8" y="291.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="204.8" y="302.0"></text>
</g>
<g>
<title>java/util/Set.of (1,780 samples, 0.08%)</title><rect x="202.4" y="371.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.4" y="382.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1,313 samples, 0.06%)</title><rect x="202.6" y="355.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="205.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,313 samples, 0.06%)</title><rect x="202.6" y="339.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="205.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (10,468 samples, 0.46%)</title><rect x="203.3" y="403.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="206.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (2,330 samples, 0.10%)</title><rect x="203.3" y="387.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="206.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (524 samples, 0.02%)</title><rect x="203.3" y="371.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="206.3" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (524 samples, 0.02%)</title><rect x="203.3" y="355.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="206.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1,806 samples, 0.08%)</title><rect x="203.6" y="371.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="206.6" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (554 samples, 0.02%)</title><rect x="203.6" y="355.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="206.6" y="366.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (1,252 samples, 0.06%)</title><rect x="203.9" y="355.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="206.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (7,351 samples, 0.33%)</title><rect x="204.5" y="387.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (3,101 samples, 0.14%)</title><rect x="204.5" y="371.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="207.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (3,101 samples, 0.14%)</title><rect x="204.5" y="355.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="207.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,101 samples, 0.14%)</title><rect x="204.5" y="339.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="207.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,101 samples, 0.14%)</title><rect x="204.5" y="323.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.5" y="334.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (3,101 samples, 0.14%)</title><rect x="204.5" y="307.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="207.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,101 samples, 0.14%)</title><rect x="204.5" y="291.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="207.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,101 samples, 0.14%)</title><rect x="204.5" y="275.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.5" y="286.0"></text>
</g>
<g>
<title>java.lang.String (1,683 samples, 0.07%)</title><rect x="204.5" y="259.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="207.5" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,418 samples, 0.06%)</title><rect x="205.4" y="259.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.4" y="270.0"></text>
</g>
<g>
<title>byte[] (1,418 samples, 0.06%)</title><rect x="205.4" y="243.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="208.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (1,432 samples, 0.06%)</title><rect x="206.1" y="371.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="209.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,432 samples, 0.06%)</title><rect x="206.1" y="355.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="209.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,432 samples, 0.06%)</title><rect x="206.1" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="209.1" y="350.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (1,432 samples, 0.06%)</title><rect x="206.1" y="323.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="209.1" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (816 samples, 0.04%)</title><rect x="206.9" y="371.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="209.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,506 samples, 0.07%)</title><rect x="207.3" y="371.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,506 samples, 0.07%)</title><rect x="207.3" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="210.3" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,506 samples, 0.07%)</title><rect x="207.3" y="339.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="210.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,506 samples, 0.07%)</title><rect x="207.3" y="323.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.3" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,506 samples, 0.07%)</title><rect x="207.3" y="307.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="210.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,504 samples, 0.07%)</title><rect x="207.3" y="291.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="210.3" y="302.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (496 samples, 0.02%)</title><rect x="208.1" y="371.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="211.1" y="382.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (496 samples, 0.02%)</title><rect x="208.1" y="355.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="211.1" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (787 samples, 0.03%)</title><rect x="208.4" y="387.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="211.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2,101 samples, 0.09%)</title><rect x="208.8" y="435.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,101 samples, 0.09%)</title><rect x="208.8" y="419.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="211.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,101 samples, 0.09%)</title><rect x="208.8" y="403.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="211.8" y="414.0"></text>
</g>
<g>
<title>java.lang.String (1,124 samples, 0.05%)</title><rect x="208.8" y="387.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="211.8" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (977 samples, 0.04%)</title><rect x="209.4" y="387.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="212.4" y="398.0"></text>
</g>
<g>
<title>byte[] (977 samples, 0.04%)</title><rect x="209.4" y="371.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="212.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (28,130 samples, 1.25%)</title><rect x="209.9" y="467.0" width="14.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="212.9" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Request (3,566 samples, 0.16%)</title><rect x="209.9" y="451.0" width="1.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="212.9" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3,960 samples, 0.18%)</title><rect x="211.8" y="451.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="214.8" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (2,722 samples, 0.12%)</title><rect x="211.8" y="435.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="214.8" y="446.0"></text>
</g>
<g>
<title>java.lang.String[] (1,238 samples, 0.05%)</title><rect x="213.2" y="435.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="216.2" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20,604 samples, 0.91%)</title><rect x="213.8" y="451.0" width="10.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="216.8" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20,604 samples, 0.91%)</title><rect x="213.8" y="435.0" width="10.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="216.8" y="446.0"></text>
</g>
<g>
<title>char[] (8,703 samples, 0.39%)</title><rect x="213.8" y="419.0" width="4.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="216.8" y="430.0"></text>
</g>
<g>
<title>char[] (3,029 samples, 0.13%)</title><rect x="218.4" y="419.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="221.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (1,122 samples, 0.05%)</title><rect x="220.0" y="419.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="223.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7,750 samples, 0.34%)</title><rect x="220.6" y="419.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="223.6" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7,750 samples, 0.34%)</title><rect x="220.6" y="403.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.6" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7,750 samples, 0.34%)</title><rect x="220.6" y="387.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="223.6" y="398.0"></text>
</g>
<g>
<title>byte[] (7,733 samples, 0.34%)</title><rect x="220.6" y="371.0" width="4.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="223.6" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,903 samples, 0.26%)</title><rect x="224.6" y="467.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.6" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,903 samples, 0.26%)</title><rect x="224.6" y="451.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.6" y="462.0"></text>
</g>
<g>
<title>char[] (2,068 samples, 0.09%)</title><rect x="224.6" y="435.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="227.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String (2,718 samples, 0.12%)</title><rect x="225.7" y="435.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="228.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,116 samples, 0.05%)</title><rect x="227.1" y="435.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,116 samples, 0.05%)</title><rect x="227.1" y="419.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,116 samples, 0.05%)</title><rect x="227.1" y="403.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="230.1" y="414.0"></text>
</g>
<g>
<title>byte[] (1,116 samples, 0.05%)</title><rect x="227.1" y="387.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="230.1" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25759] (58,261 samples, 2.59%)</title><rect x="227.7" y="547.0" width="30.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="230.7" y="558.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (58,261 samples, 2.59%)</title><rect x="227.7" y="531.0" width="30.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.7" y="542.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2,283 samples, 0.10%)</title><rect x="227.7" y="515.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="230.7" y="526.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2,283 samples, 0.10%)</title><rect x="227.7" y="499.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="230.7" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (55,978 samples, 2.48%)</title><rect x="228.9" y="515.0" width="29.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="231.9" y="526.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (55,978 samples, 2.48%)</title><rect x="228.9" y="499.0" width="29.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="231.9" y="510.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (55,978 samples, 2.48%)</title><rect x="228.9" y="483.0" width="29.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="231.9" y="494.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (36,763 samples, 1.63%)</title><rect x="228.9" y="467.0" width="19.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="231.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (36,763 samples, 1.63%)</title><rect x="228.9" y="451.0" width="19.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="231.9" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (34,716 samples, 1.54%)</title><rect x="228.9" y="435.0" width="18.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3,577 samples, 0.16%)</title><rect x="228.9" y="419.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="231.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,577 samples, 0.16%)</title><rect x="228.9" y="403.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="231.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,577 samples, 0.16%)</title><rect x="228.9" y="387.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="231.9" y="398.0"></text>
</g>
<g>
<title>java.lang.String (1,685 samples, 0.07%)</title><rect x="228.9" y="371.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="231.9" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,892 samples, 0.08%)</title><rect x="229.8" y="371.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="232.8" y="382.0"></text>
</g>
<g>
<title>byte[] (1,892 samples, 0.08%)</title><rect x="229.8" y="355.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="232.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (31,139 samples, 1.38%)</title><rect x="230.8" y="419.0" width="16.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="233.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (1,204 samples, 0.05%)</title><rect x="230.8" y="403.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="233.8" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (1,204 samples, 0.05%)</title><rect x="230.8" y="387.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="233.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.get$Lambda (1,204 samples, 0.05%)</title><rect x="230.8" y="371.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="233.8" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$70 (1,204 samples, 0.05%)</title><rect x="230.8" y="355.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="233.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,434 samples, 0.06%)</title><rect x="231.4" y="403.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="234.4" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,434 samples, 0.06%)</title><rect x="231.4" y="387.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="234.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,434 samples, 0.06%)</title><rect x="231.4" y="371.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="234.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String (877 samples, 0.04%)</title><rect x="231.4" y="355.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="234.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (557 samples, 0.02%)</title><rect x="231.9" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="234.9" y="366.0"></text>
</g>
<g>
<title>byte[] (557 samples, 0.02%)</title><rect x="231.9" y="339.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="234.9" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (1,622 samples, 0.07%)</title><rect x="232.2" y="403.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (795 samples, 0.04%)</title><rect x="232.2" y="387.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (795 samples, 0.04%)</title><rect x="232.2" y="371.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (795 samples, 0.04%)</title><rect x="232.2" y="355.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="235.2" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (795 samples, 0.04%)</title><rect x="232.2" y="339.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="235.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (827 samples, 0.04%)</title><rect x="232.6" y="387.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="235.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (827 samples, 0.04%)</title><rect x="232.6" y="371.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="235.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (826 samples, 0.04%)</title><rect x="232.6" y="355.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="235.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (14,866 samples, 0.66%)</title><rect x="233.0" y="403.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="236.0" y="414.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (14,866 samples, 0.66%)</title><rect x="233.0" y="387.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="236.0" y="398.0"></text>
</g>
<g>
<title>java.util.HashSet (550 samples, 0.02%)</title><rect x="233.0" y="371.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="236.0" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3,112 samples, 0.14%)</title><rect x="233.3" y="371.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.3" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,123 samples, 0.05%)</title><rect x="233.3" y="355.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="236.3" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1,989 samples, 0.09%)</title><rect x="233.9" y="355.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="236.9" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1,478 samples, 0.07%)</title><rect x="233.9" y="339.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.9" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1,478 samples, 0.07%)</title><rect x="233.9" y="323.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="236.9" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (511 samples, 0.02%)</title><rect x="234.7" y="339.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.7" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (511 samples, 0.02%)</title><rect x="234.7" y="323.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="237.7" y="334.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (8,950 samples, 0.40%)</title><rect x="234.9" y="371.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.9" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap (1,600 samples, 0.07%)</title><rect x="234.9" y="355.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="237.9" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (7,350 samples, 0.33%)</title><rect x="235.8" y="355.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="238.8" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6,257 samples, 0.28%)</title><rect x="235.8" y="339.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="238.8" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6,257 samples, 0.28%)</title><rect x="235.8" y="323.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.8" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6,257 samples, 0.28%)</title><rect x="235.8" y="307.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.8" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3,364 samples, 0.15%)</title><rect x="235.8" y="291.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="238.8" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (3,364 samples, 0.15%)</title><rect x="235.8" y="275.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="238.8" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2,893 samples, 0.13%)</title><rect x="237.5" y="291.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="240.5" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2,890 samples, 0.13%)</title><rect x="237.5" y="275.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="240.5" y="286.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1,093 samples, 0.05%)</title><rect x="239.0" y="339.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1,093 samples, 0.05%)</title><rect x="239.0" y="323.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.0" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1,093 samples, 0.05%)</title><rect x="239.0" y="307.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="242.0" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (1,093 samples, 0.05%)</title><rect x="239.0" y="291.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="242.0" y="302.0"></text>
</g>
<g>
<title>java/util/Set.of (2,254 samples, 0.10%)</title><rect x="239.6" y="371.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="242.6" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (877 samples, 0.04%)</title><rect x="239.6" y="355.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="242.6" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1,377 samples, 0.06%)</title><rect x="240.1" y="355.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="243.1" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,377 samples, 0.06%)</title><rect x="240.1" y="339.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="243.1" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (12,013 samples, 0.53%)</title><rect x="240.8" y="403.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="243.8" y="414.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (2,313 samples, 0.10%)</title><rect x="240.8" y="387.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="243.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (539 samples, 0.02%)</title><rect x="240.8" y="371.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.8" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (539 samples, 0.02%)</title><rect x="240.8" y="355.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="243.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1,774 samples, 0.08%)</title><rect x="241.1" y="371.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="244.1" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (578 samples, 0.03%)</title><rect x="241.1" y="355.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="244.1" y="366.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (1,196 samples, 0.05%)</title><rect x="241.4" y="355.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="244.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (8,748 samples, 0.39%)</title><rect x="242.0" y="387.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (3,406 samples, 0.15%)</title><rect x="242.0" y="371.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="245.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (3,406 samples, 0.15%)</title><rect x="242.0" y="355.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="245.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,406 samples, 0.15%)</title><rect x="242.0" y="339.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="245.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,406 samples, 0.15%)</title><rect x="242.0" y="323.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (3,406 samples, 0.15%)</title><rect x="242.0" y="307.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="245.0" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,406 samples, 0.15%)</title><rect x="242.0" y="291.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="245.0" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,406 samples, 0.15%)</title><rect x="242.0" y="275.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.0" y="286.0"></text>
</g>
<g>
<title>java.lang.String (1,762 samples, 0.08%)</title><rect x="242.0" y="259.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="245.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,644 samples, 0.07%)</title><rect x="242.9" y="259.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="245.9" y="270.0"></text>
</g>
<g>
<title>byte[] (1,644 samples, 0.07%)</title><rect x="242.9" y="243.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="245.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (1,671 samples, 0.07%)</title><rect x="243.8" y="371.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="246.8" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,671 samples, 0.07%)</title><rect x="243.8" y="355.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="246.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,671 samples, 0.07%)</title><rect x="243.8" y="339.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="246.8" y="350.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (1,671 samples, 0.07%)</title><rect x="243.8" y="323.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="246.8" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (867 samples, 0.04%)</title><rect x="244.7" y="371.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="247.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,987 samples, 0.09%)</title><rect x="245.1" y="371.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="248.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,987 samples, 0.09%)</title><rect x="245.1" y="355.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.1" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,987 samples, 0.09%)</title><rect x="245.1" y="339.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="248.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,987 samples, 0.09%)</title><rect x="245.1" y="323.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="248.1" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,987 samples, 0.09%)</title><rect x="245.1" y="307.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.1" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,987 samples, 0.09%)</title><rect x="245.1" y="291.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="248.1" y="302.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (817 samples, 0.04%)</title><rect x="246.1" y="371.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="249.1" y="382.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (817 samples, 0.04%)</title><rect x="246.1" y="355.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="249.1" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (952 samples, 0.04%)</title><rect x="246.6" y="387.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="249.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2,047 samples, 0.09%)</title><rect x="247.1" y="435.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="250.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,047 samples, 0.09%)</title><rect x="247.1" y="419.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,047 samples, 0.09%)</title><rect x="247.1" y="403.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="250.1" y="414.0"></text>
</g>
<g>
<title>java.lang.String (893 samples, 0.04%)</title><rect x="247.1" y="387.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="250.1" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,154 samples, 0.05%)</title><rect x="247.5" y="387.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="250.5" y="398.0"></text>
</g>
<g>
<title>byte[] (1,154 samples, 0.05%)</title><rect x="247.5" y="371.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="250.5" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10,226 samples, 0.45%)</title><rect x="248.1" y="467.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.1" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Request (1,443 samples, 0.06%)</title><rect x="248.1" y="451.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="251.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2,782 samples, 0.12%)</title><rect x="248.9" y="451.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (2,780 samples, 0.12%)</title><rect x="248.9" y="435.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="251.9" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,001 samples, 0.27%)</title><rect x="250.4" y="451.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.4" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,001 samples, 0.27%)</title><rect x="250.4" y="435.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="253.4" y="446.0"></text>
</g>
<g>
<title>char[] (3,079 samples, 0.14%)</title><rect x="250.4" y="419.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="253.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (961 samples, 0.04%)</title><rect x="252.0" y="419.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="255.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,957 samples, 0.09%)</title><rect x="252.5" y="419.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="255.5" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,957 samples, 0.09%)</title><rect x="252.5" y="403.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.5" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,957 samples, 0.09%)</title><rect x="252.5" y="387.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="255.5" y="398.0"></text>
</g>
<g>
<title>byte[] (1,957 samples, 0.09%)</title><rect x="252.5" y="371.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="255.5" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,989 samples, 0.40%)</title><rect x="253.5" y="467.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.5" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,989 samples, 0.40%)</title><rect x="253.5" y="451.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="256.5" y="462.0"></text>
</g>
<g>
<title>char[] (4,283 samples, 0.19%)</title><rect x="253.5" y="435.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="256.5" y="446.0"></text>
</g>
<g>
<title>java.lang.String (1,828 samples, 0.08%)</title><rect x="255.7" y="435.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="258.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,878 samples, 0.13%)</title><rect x="256.7" y="435.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="259.7" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,878 samples, 0.13%)</title><rect x="256.7" y="419.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="259.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,878 samples, 0.13%)</title><rect x="256.7" y="403.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="259.7" y="414.0"></text>
</g>
<g>
<title>byte[] (2,878 samples, 0.13%)</title><rect x="256.7" y="387.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="259.7" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=25765] (58,357 samples, 2.59%)</title><rect x="258.2" y="547.0" width="30.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="261.2" y="558.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (58,357 samples, 2.59%)</title><rect x="258.2" y="531.0" width="30.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="261.2" y="542.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2,308 samples, 0.10%)</title><rect x="258.2" y="515.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.2" y="526.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2,308 samples, 0.10%)</title><rect x="258.2" y="499.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="261.2" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (56,049 samples, 2.49%)</title><rect x="259.4" y="515.0" width="29.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="262.4" y="526.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (56,049 samples, 2.49%)</title><rect x="259.4" y="499.0" width="29.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="262.4" y="510.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (56,049 samples, 2.49%)</title><rect x="259.4" y="483.0" width="29.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.4" y="494.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (35,919 samples, 1.59%)</title><rect x="259.4" y="467.0" width="18.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="262.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (35,919 samples, 1.59%)</title><rect x="259.4" y="451.0" width="18.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="262.4" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (33,955 samples, 1.51%)</title><rect x="259.4" y="435.0" width="17.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="262.4" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3,575 samples, 0.16%)</title><rect x="259.4" y="419.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,575 samples, 0.16%)</title><rect x="259.4" y="403.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,575 samples, 0.16%)</title><rect x="259.4" y="387.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.4" y="398.0"></text>
</g>
<g>
<title>java.lang.String (1,662 samples, 0.07%)</title><rect x="259.4" y="371.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="262.4" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,913 samples, 0.08%)</title><rect x="260.3" y="371.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="263.3" y="382.0"></text>
</g>
<g>
<title>byte[] (1,913 samples, 0.08%)</title><rect x="260.3" y="355.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="263.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (30,380 samples, 1.35%)</title><rect x="261.3" y="419.0" width="15.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="264.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (1,218 samples, 0.05%)</title><rect x="261.3" y="403.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="264.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (1,218 samples, 0.05%)</title><rect x="261.3" y="387.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="264.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.get$Lambda (1,218 samples, 0.05%)</title><rect x="261.3" y="371.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="264.3" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$70 (1,218 samples, 0.05%)</title><rect x="261.3" y="355.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="264.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,351 samples, 0.06%)</title><rect x="261.9" y="403.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="264.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,351 samples, 0.06%)</title><rect x="261.9" y="387.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="264.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,351 samples, 0.06%)</title><rect x="261.9" y="371.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="264.9" y="382.0"></text>
</g>
<g>
<title>java.lang.String (837 samples, 0.04%)</title><rect x="261.9" y="355.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="264.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (514 samples, 0.02%)</title><rect x="262.4" y="355.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="265.4" y="366.0"></text>
</g>
<g>
<title>byte[] (514 samples, 0.02%)</title><rect x="262.4" y="339.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="265.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (1,664 samples, 0.07%)</title><rect x="262.6" y="403.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="265.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (790 samples, 0.04%)</title><rect x="262.6" y="387.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="265.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (790 samples, 0.04%)</title><rect x="262.6" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="265.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (790 samples, 0.04%)</title><rect x="262.6" y="355.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="265.6" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (790 samples, 0.04%)</title><rect x="262.6" y="339.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="265.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (874 samples, 0.04%)</title><rect x="263.0" y="387.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="266.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (874 samples, 0.04%)</title><rect x="263.0" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="266.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (869 samples, 0.04%)</title><rect x="263.0" y="355.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="266.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (14,535 samples, 0.64%)</title><rect x="263.5" y="403.0" width="7.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="266.5" y="414.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (14,535 samples, 0.64%)</title><rect x="263.5" y="387.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="266.5" y="398.0"></text>
</g>
<g>
<title>java.util.HashSet (521 samples, 0.02%)</title><rect x="263.5" y="371.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="266.5" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3,095 samples, 0.14%)</title><rect x="263.8" y="371.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="266.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,148 samples, 0.05%)</title><rect x="263.8" y="355.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="266.8" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1,947 samples, 0.09%)</title><rect x="264.4" y="355.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.4" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1,396 samples, 0.06%)</title><rect x="264.4" y="339.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="267.4" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1,396 samples, 0.06%)</title><rect x="264.4" y="323.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="267.4" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (551 samples, 0.02%)</title><rect x="265.1" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.1" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (551 samples, 0.02%)</title><rect x="265.1" y="323.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="268.1" y="334.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (8,701 samples, 0.39%)</title><rect x="265.4" y="371.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="268.4" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap (1,675 samples, 0.07%)</title><rect x="265.4" y="355.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="268.4" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (7,026 samples, 0.31%)</title><rect x="266.3" y="355.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="269.3" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5,989 samples, 0.27%)</title><rect x="266.3" y="339.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="269.3" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5,989 samples, 0.27%)</title><rect x="266.3" y="323.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="269.3" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5,989 samples, 0.27%)</title><rect x="266.3" y="307.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="269.3" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3,301 samples, 0.15%)</title><rect x="266.3" y="291.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="269.3" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (3,301 samples, 0.15%)</title><rect x="266.3" y="275.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="269.3" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2,688 samples, 0.12%)</title><rect x="268.0" y="291.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="271.0" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2,686 samples, 0.12%)</title><rect x="268.0" y="275.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="271.0" y="286.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1,037 samples, 0.05%)</title><rect x="269.4" y="339.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="272.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1,037 samples, 0.05%)</title><rect x="269.4" y="323.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.4" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1,037 samples, 0.05%)</title><rect x="269.4" y="307.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.4" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (1,037 samples, 0.05%)</title><rect x="269.4" y="291.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="272.4" y="302.0"></text>
</g>
<g>
<title>java/util/Set.of (2,218 samples, 0.10%)</title><rect x="270.0" y="371.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="273.0" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (867 samples, 0.04%)</title><rect x="270.0" y="355.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="273.0" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1,351 samples, 0.06%)</title><rect x="270.4" y="355.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="273.4" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,351 samples, 0.06%)</title><rect x="270.4" y="339.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="273.4" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (11,612 samples, 0.52%)</title><rect x="271.1" y="403.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="274.1" y="414.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (2,213 samples, 0.10%)</title><rect x="271.1" y="387.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (505 samples, 0.02%)</title><rect x="271.1" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="274.1" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (505 samples, 0.02%)</title><rect x="271.1" y="355.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="274.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1,708 samples, 0.08%)</title><rect x="271.4" y="371.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="274.4" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (546 samples, 0.02%)</title><rect x="271.4" y="355.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="274.4" y="366.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (1,162 samples, 0.05%)</title><rect x="271.7" y="355.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="274.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (8,541 samples, 0.38%)</title><rect x="272.3" y="387.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="275.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (3,302 samples, 0.15%)</title><rect x="272.3" y="371.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="275.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (3,302 samples, 0.15%)</title><rect x="272.3" y="355.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="275.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,302 samples, 0.15%)</title><rect x="272.3" y="339.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="275.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,302 samples, 0.15%)</title><rect x="272.3" y="323.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="275.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (3,302 samples, 0.15%)</title><rect x="272.3" y="307.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="275.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,302 samples, 0.15%)</title><rect x="272.3" y="291.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="275.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,302 samples, 0.15%)</title><rect x="272.3" y="275.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="275.3" y="286.0"></text>
</g>
<g>
<title>java.lang.String (1,707 samples, 0.08%)</title><rect x="272.3" y="259.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="275.3" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,595 samples, 0.07%)</title><rect x="273.2" y="259.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="276.2" y="270.0"></text>
</g>
<g>
<title>byte[] (1,595 samples, 0.07%)</title><rect x="273.2" y="243.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="276.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (1,611 samples, 0.07%)</title><rect x="274.0" y="371.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="277.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,611 samples, 0.07%)</title><rect x="274.0" y="355.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="277.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,611 samples, 0.07%)</title><rect x="274.0" y="339.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="277.0" y="350.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (1,611 samples, 0.07%)</title><rect x="274.0" y="323.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="277.0" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (865 samples, 0.04%)</title><rect x="274.8" y="371.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="277.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,941 samples, 0.09%)</title><rect x="275.3" y="371.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="278.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,941 samples, 0.09%)</title><rect x="275.3" y="355.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.3" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,941 samples, 0.09%)</title><rect x="275.3" y="339.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,941 samples, 0.09%)</title><rect x="275.3" y="323.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.3" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,941 samples, 0.09%)</title><rect x="275.3" y="307.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.3" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,941 samples, 0.09%)</title><rect x="275.3" y="291.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="278.3" y="302.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (822 samples, 0.04%)</title><rect x="276.3" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.3" y="382.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (822 samples, 0.04%)</title><rect x="276.3" y="355.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="279.3" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (858 samples, 0.04%)</title><rect x="276.7" y="387.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="279.7" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,964 samples, 0.09%)</title><rect x="277.2" y="435.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,964 samples, 0.09%)</title><rect x="277.2" y="419.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,964 samples, 0.09%)</title><rect x="277.2" y="403.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="280.2" y="414.0"></text>
</g>
<g>
<title>java.lang.String (851 samples, 0.04%)</title><rect x="277.2" y="387.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="280.2" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,113 samples, 0.05%)</title><rect x="277.6" y="387.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="280.6" y="398.0"></text>
</g>
<g>
<title>byte[] (1,113 samples, 0.05%)</title><rect x="277.6" y="371.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="280.6" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9,929 samples, 0.44%)</title><rect x="278.2" y="467.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="281.2" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Request (1,387 samples, 0.06%)</title><rect x="278.2" y="451.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="281.2" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2,743 samples, 0.12%)</title><rect x="278.9" y="451.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="281.9" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (2,738 samples, 0.12%)</title><rect x="278.9" y="435.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="281.9" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,799 samples, 0.26%)</title><rect x="280.4" y="451.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.4" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,799 samples, 0.26%)</title><rect x="280.4" y="435.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="283.4" y="446.0"></text>
</g>
<g>
<title>char[] (3,032 samples, 0.13%)</title><rect x="280.4" y="419.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="283.4" y="430.0"></text>
</g>
<g>
<title>java.lang.String (809 samples, 0.04%)</title><rect x="282.0" y="419.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="285.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,951 samples, 0.09%)</title><rect x="282.4" y="419.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="285.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,951 samples, 0.09%)</title><rect x="282.4" y="403.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="285.4" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,951 samples, 0.09%)</title><rect x="282.4" y="387.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.4" y="398.0"></text>
</g>
<g>
<title>byte[] (1,951 samples, 0.09%)</title><rect x="282.4" y="371.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="285.4" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10,201 samples, 0.45%)</title><rect x="283.4" y="467.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.4" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10,201 samples, 0.45%)</title><rect x="283.4" y="451.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="286.4" y="462.0"></text>
</g>
<g>
<title>char[] (4,883 samples, 0.22%)</title><rect x="283.4" y="435.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="286.4" y="446.0"></text>
</g>
<g>
<title>java.lang.String (2,131 samples, 0.09%)</title><rect x="286.0" y="435.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="289.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,187 samples, 0.14%)</title><rect x="287.1" y="435.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="290.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,187 samples, 0.14%)</title><rect x="287.1" y="419.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="290.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,187 samples, 0.14%)</title><rect x="287.1" y="403.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.1" y="414.0"></text>
</g>
<g>
<title>byte[] (3,187 samples, 0.14%)</title><rect x="287.1" y="387.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="290.1" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25750] (58,943 samples, 2.62%)</title><rect x="288.8" y="547.0" width="30.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="291.8" y="558.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (58,943 samples, 2.62%)</title><rect x="288.8" y="531.0" width="30.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="291.8" y="542.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2,999 samples, 0.13%)</title><rect x="288.8" y="515.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="291.8" y="526.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2,999 samples, 0.13%)</title><rect x="288.8" y="499.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="291.8" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (55,944 samples, 2.48%)</title><rect x="290.3" y="515.0" width="29.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="293.3" y="526.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (55,944 samples, 2.48%)</title><rect x="290.3" y="499.0" width="29.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="293.3" y="510.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (55,943 samples, 2.48%)</title><rect x="290.3" y="483.0" width="29.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="293.3" y="494.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (39,650 samples, 1.76%)</title><rect x="290.3" y="467.0" width="20.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="293.3" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (39,650 samples, 1.76%)</title><rect x="290.3" y="451.0" width="20.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="293.3" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (37,527 samples, 1.67%)</title><rect x="290.3" y="435.0" width="19.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="293.3" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4,278 samples, 0.19%)</title><rect x="290.3" y="419.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="293.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (4,278 samples, 0.19%)</title><rect x="290.3" y="403.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="293.3" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,278 samples, 0.19%)</title><rect x="290.3" y="387.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="293.3" y="398.0"></text>
</g>
<g>
<title>java.lang.String (1,838 samples, 0.08%)</title><rect x="290.3" y="371.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="293.3" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,440 samples, 0.11%)</title><rect x="291.3" y="371.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.3" y="382.0"></text>
</g>
<g>
<title>byte[] (2,440 samples, 0.11%)</title><rect x="291.3" y="355.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="294.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (33,249 samples, 1.48%)</title><rect x="292.6" y="419.0" width="17.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (976 samples, 0.04%)</title><rect x="292.6" y="403.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (976 samples, 0.04%)</title><rect x="292.6" y="387.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="295.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.get$Lambda (976 samples, 0.04%)</title><rect x="292.6" y="371.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.6" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$70 (976 samples, 0.04%)</title><rect x="292.6" y="355.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="295.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (1,931 samples, 0.09%)</title><rect x="293.1" y="403.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.1" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (895 samples, 0.04%)</title><rect x="293.1" y="387.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.1" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (895 samples, 0.04%)</title><rect x="293.1" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="296.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (895 samples, 0.04%)</title><rect x="293.1" y="355.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="296.1" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (895 samples, 0.04%)</title><rect x="293.1" y="339.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="296.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,036 samples, 0.05%)</title><rect x="293.6" y="387.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="296.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,036 samples, 0.05%)</title><rect x="293.6" y="371.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (1,035 samples, 0.05%)</title><rect x="293.6" y="355.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="296.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (17,091 samples, 0.76%)</title><rect x="294.1" y="403.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="297.1" y="414.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (17,091 samples, 0.76%)</title><rect x="294.1" y="387.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="297.1" y="398.0"></text>
</g>
<g>
<title>java.util.HashSet (706 samples, 0.03%)</title><rect x="294.1" y="371.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="297.1" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3,091 samples, 0.14%)</title><rect x="294.5" y="371.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="297.5" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (981 samples, 0.04%)</title><rect x="294.5" y="355.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="297.5" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2,110 samples, 0.09%)</title><rect x="295.0" y="355.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="298.0" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1,591 samples, 0.07%)</title><rect x="295.0" y="339.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="298.0" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1,591 samples, 0.07%)</title><rect x="295.0" y="323.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="298.0" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (519 samples, 0.02%)</title><rect x="295.8" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.8" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (519 samples, 0.02%)</title><rect x="295.8" y="323.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="298.8" y="334.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (10,812 samples, 0.48%)</title><rect x="296.1" y="371.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="299.1" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap (1,746 samples, 0.08%)</title><rect x="296.1" y="355.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="299.1" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (9,066 samples, 0.40%)</title><rect x="297.0" y="355.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="300.0" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.add (7,843 samples, 0.35%)</title><rect x="297.0" y="339.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="300.0" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7,843 samples, 0.35%)</title><rect x="297.0" y="323.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="300.0" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7,843 samples, 0.35%)</title><rect x="297.0" y="307.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="300.0" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3,850 samples, 0.17%)</title><rect x="297.0" y="291.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="300.0" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (3,850 samples, 0.17%)</title><rect x="297.0" y="275.0" width="2.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="300.0" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3,993 samples, 0.18%)</title><rect x="299.0" y="291.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.0" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (3,993 samples, 0.18%)</title><rect x="299.0" y="275.0" width="2.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="302.0" y="286.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1,223 samples, 0.05%)</title><rect x="301.1" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.1" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1,223 samples, 0.05%)</title><rect x="301.1" y="323.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.1" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1,223 samples, 0.05%)</title><rect x="301.1" y="307.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.1" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (1,223 samples, 0.05%)</title><rect x="301.1" y="291.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="304.1" y="302.0"></text>
</g>
<g>
<title>java/util/Set.of (2,482 samples, 0.11%)</title><rect x="301.7" y="371.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="304.7" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (783 samples, 0.03%)</title><rect x="301.7" y="355.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="304.7" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1,699 samples, 0.08%)</title><rect x="302.2" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="305.2" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,699 samples, 0.08%)</title><rect x="302.2" y="339.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="305.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (13,251 samples, 0.59%)</title><rect x="303.0" y="403.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="306.0" y="414.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (2,354 samples, 0.10%)</title><rect x="303.0" y="387.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="306.0" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (668 samples, 0.03%)</title><rect x="303.0" y="371.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="306.0" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (668 samples, 0.03%)</title><rect x="303.0" y="355.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="306.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1,686 samples, 0.07%)</title><rect x="303.4" y="371.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="306.4" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (595 samples, 0.03%)</title><rect x="303.4" y="355.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="306.4" y="366.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (1,091 samples, 0.05%)</title><rect x="303.7" y="355.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="306.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (10,119 samples, 0.45%)</title><rect x="304.3" y="387.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="307.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (3,615 samples, 0.16%)</title><rect x="304.3" y="371.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="307.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (3,615 samples, 0.16%)</title><rect x="304.3" y="355.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="307.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,615 samples, 0.16%)</title><rect x="304.3" y="339.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="307.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,615 samples, 0.16%)</title><rect x="304.3" y="323.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="307.3" y="334.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (3,615 samples, 0.16%)</title><rect x="304.3" y="307.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="307.3" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,615 samples, 0.16%)</title><rect x="304.3" y="291.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="307.3" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,615 samples, 0.16%)</title><rect x="304.3" y="275.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="307.3" y="286.0"></text>
</g>
<g>
<title>java.lang.String (1,691 samples, 0.08%)</title><rect x="304.3" y="259.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="307.3" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,924 samples, 0.09%)</title><rect x="305.2" y="259.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="308.2" y="270.0"></text>
</g>
<g>
<title>byte[] (1,924 samples, 0.09%)</title><rect x="305.2" y="243.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="308.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (1,893 samples, 0.08%)</title><rect x="306.2" y="371.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="309.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,893 samples, 0.08%)</title><rect x="306.2" y="355.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="309.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,893 samples, 0.08%)</title><rect x="306.2" y="339.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="309.2" y="350.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (1,893 samples, 0.08%)</title><rect x="306.2" y="323.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="309.2" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (1,079 samples, 0.05%)</title><rect x="307.2" y="371.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="310.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,555 samples, 0.11%)</title><rect x="307.7" y="371.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="310.7" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2,555 samples, 0.11%)</title><rect x="307.7" y="355.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="310.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,555 samples, 0.11%)</title><rect x="307.7" y="339.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="310.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2,555 samples, 0.11%)</title><rect x="307.7" y="323.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="310.7" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,555 samples, 0.11%)</title><rect x="307.7" y="307.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.7" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (2,555 samples, 0.11%)</title><rect x="307.7" y="291.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="310.7" y="302.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (977 samples, 0.04%)</title><rect x="309.1" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="312.1" y="382.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (977 samples, 0.04%)</title><rect x="309.1" y="355.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="312.1" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (778 samples, 0.03%)</title><rect x="309.6" y="387.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="312.6" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2,123 samples, 0.09%)</title><rect x="310.0" y="435.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,123 samples, 0.09%)</title><rect x="310.0" y="419.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="313.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,123 samples, 0.09%)</title><rect x="310.0" y="403.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="313.0" y="414.0"></text>
</g>
<g>
<title>java.lang.String (870 samples, 0.04%)</title><rect x="310.0" y="387.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="313.0" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,253 samples, 0.06%)</title><rect x="310.4" y="387.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="313.4" y="398.0"></text>
</g>
<g>
<title>byte[] (1,253 samples, 0.06%)</title><rect x="310.4" y="371.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="313.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11,074 samples, 0.49%)</title><rect x="311.1" y="467.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="314.1" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Request (1,657 samples, 0.07%)</title><rect x="311.1" y="451.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="314.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3,048 samples, 0.14%)</title><rect x="312.0" y="451.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="315.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (3,048 samples, 0.14%)</title><rect x="312.0" y="435.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="315.0" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,369 samples, 0.28%)</title><rect x="313.6" y="451.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="316.6" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,369 samples, 0.28%)</title><rect x="313.6" y="435.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.6" y="446.0"></text>
</g>
<g>
<title>char[] (3,358 samples, 0.15%)</title><rect x="313.6" y="419.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="316.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (739 samples, 0.03%)</title><rect x="315.3" y="419.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="318.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,272 samples, 0.10%)</title><rect x="315.7" y="419.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="318.7" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,272 samples, 0.10%)</title><rect x="315.7" y="403.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="318.7" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,272 samples, 0.10%)</title><rect x="315.7" y="387.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="318.7" y="398.0"></text>
</g>
<g>
<title>byte[] (2,272 samples, 0.10%)</title><rect x="315.7" y="371.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="318.7" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,219 samples, 0.23%)</title><rect x="316.9" y="467.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="319.9" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,219 samples, 0.23%)</title><rect x="316.9" y="451.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="319.9" y="462.0"></text>
</g>
<g>
<title>char[] (2,730 samples, 0.12%)</title><rect x="316.9" y="435.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="319.9" y="446.0"></text>
</g>
<g>
<title>java.lang.String (894 samples, 0.04%)</title><rect x="318.3" y="435.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="321.3" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,595 samples, 0.07%)</title><rect x="318.8" y="435.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="321.8" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,595 samples, 0.07%)</title><rect x="318.8" y="419.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="321.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,595 samples, 0.07%)</title><rect x="318.8" y="403.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="321.8" y="414.0"></text>
</g>
<g>
<title>byte[] (1,595 samples, 0.07%)</title><rect x="318.8" y="387.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="321.8" y="398.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=25766] (59,130 samples, 2.62%)</title><rect x="319.6" y="547.0" width="31.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="322.6" y="558.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (59,130 samples, 2.62%)</title><rect x="319.6" y="531.0" width="31.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="322.6" y="542.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2,210 samples, 0.10%)</title><rect x="319.6" y="515.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="322.6" y="526.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2,210 samples, 0.10%)</title><rect x="319.6" y="499.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="322.6" y="510.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (56,920 samples, 2.53%)</title><rect x="320.8" y="515.0" width="29.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="323.8" y="526.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (56,920 samples, 2.53%)</title><rect x="320.8" y="499.0" width="29.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="323.8" y="510.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (56,920 samples, 2.53%)</title><rect x="320.8" y="483.0" width="29.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="323.8" y="494.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (36,022 samples, 1.60%)</title><rect x="320.8" y="467.0" width="18.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="323.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (36,022 samples, 1.60%)</title><rect x="320.8" y="451.0" width="18.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="323.8" y="462.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (34,030 samples, 1.51%)</title><rect x="320.8" y="435.0" width="17.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="323.8" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3,355 samples, 0.15%)</title><rect x="320.8" y="419.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="323.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,355 samples, 0.15%)</title><rect x="320.8" y="403.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="323.8" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,355 samples, 0.15%)</title><rect x="320.8" y="387.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.8" y="398.0"></text>
</g>
<g>
<title>java.lang.String (1,503 samples, 0.07%)</title><rect x="320.8" y="371.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="323.8" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,852 samples, 0.08%)</title><rect x="321.6" y="371.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="324.6" y="382.0"></text>
</g>
<g>
<title>byte[] (1,852 samples, 0.08%)</title><rect x="321.6" y="355.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="324.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (30,675 samples, 1.36%)</title><rect x="322.5" y="419.0" width="16.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1600029439.linkToTargetMethod (1,063 samples, 0.05%)</title><rect x="322.5" y="403.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="325.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1915269853.invokeStatic (1,063 samples, 0.05%)</title><rect x="322.5" y="387.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="325.5" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.get$Lambda (1,063 samples, 0.05%)</title><rect x="322.5" y="371.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="325.5" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$70 (1,063 samples, 0.05%)</title><rect x="322.5" y="355.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="325.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,482 samples, 0.07%)</title><rect x="323.1" y="403.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="326.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,482 samples, 0.07%)</title><rect x="323.1" y="387.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="326.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,482 samples, 0.07%)</title><rect x="323.1" y="371.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="326.1" y="382.0"></text>
</g>
<g>
<title>java.lang.String (884 samples, 0.04%)</title><rect x="323.1" y="355.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="326.1" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (598 samples, 0.03%)</title><rect x="323.6" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="326.6" y="366.0"></text>
</g>
<g>
<title>byte[] (598 samples, 0.03%)</title><rect x="323.6" y="339.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="326.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (1,593 samples, 0.07%)</title><rect x="323.9" y="403.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="326.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (687 samples, 0.03%)</title><rect x="323.9" y="387.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="326.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (687 samples, 0.03%)</title><rect x="323.9" y="371.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="326.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.get$Lambda (687 samples, 0.03%)</title><rect x="323.9" y="355.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="326.9" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$62 (687 samples, 0.03%)</title><rect x="323.9" y="339.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="326.9" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (906 samples, 0.04%)</title><rect x="324.2" y="387.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="327.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (906 samples, 0.04%)</title><rect x="324.2" y="371.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="327.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (903 samples, 0.04%)</title><rect x="324.2" y="355.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="327.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (14,987 samples, 0.66%)</title><rect x="324.7" y="403.0" width="7.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="327.7" y="414.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (14,987 samples, 0.66%)</title><rect x="324.7" y="387.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="327.7" y="398.0"></text>
</g>
<g>
<title>java.util.HashSet (516 samples, 0.02%)</title><rect x="324.7" y="371.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="327.7" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3,106 samples, 0.14%)</title><rect x="325.0" y="371.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.0" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,147 samples, 0.05%)</title><rect x="325.0" y="355.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="328.0" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1,959 samples, 0.09%)</title><rect x="325.6" y="355.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="328.6" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1,400 samples, 0.06%)</title><rect x="325.6" y="339.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="328.6" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (1,400 samples, 0.06%)</title><rect x="325.6" y="323.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="328.6" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (559 samples, 0.02%)</title><rect x="326.3" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="329.3" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (559 samples, 0.02%)</title><rect x="326.3" y="323.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="329.3" y="334.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (9,177 samples, 0.41%)</title><rect x="326.6" y="371.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.6" y="382.0"></text>
</g>
<g>
<title>java.util.HashMap (1,638 samples, 0.07%)</title><rect x="326.6" y="355.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="329.6" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (7,539 samples, 0.33%)</title><rect x="327.5" y="355.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="330.5" y="366.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6,456 samples, 0.29%)</title><rect x="327.5" y="339.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="330.5" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6,456 samples, 0.29%)</title><rect x="327.5" y="323.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.5" y="334.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (6,456 samples, 0.29%)</title><rect x="327.5" y="307.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="330.5" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3,727 samples, 0.17%)</title><rect x="327.5" y="291.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.5" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (3,727 samples, 0.17%)</title><rect x="327.5" y="275.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="330.5" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2,729 samples, 0.12%)</title><rect x="329.4" y="291.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.4" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (2,267 samples, 0.10%)</title><rect x="329.4" y="275.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="332.4" y="286.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1,083 samples, 0.05%)</title><rect x="330.8" y="339.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="333.8" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1,083 samples, 0.05%)</title><rect x="330.8" y="323.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="333.8" y="334.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1,083 samples, 0.05%)</title><rect x="330.8" y="307.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.8" y="318.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (1,083 samples, 0.05%)</title><rect x="330.8" y="291.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="333.8" y="302.0"></text>
</g>
<g>
<title>java/util/Set.of (2,188 samples, 0.10%)</title><rect x="331.4" y="371.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="334.4" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (802 samples, 0.04%)</title><rect x="331.4" y="355.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="334.4" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1,386 samples, 0.06%)</title><rect x="331.8" y="355.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="334.8" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,386 samples, 0.06%)</title><rect x="331.8" y="339.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="334.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (11,550 samples, 0.51%)</title><rect x="332.5" y="403.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="335.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (2,213 samples, 0.10%)</title><rect x="332.5" y="387.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="335.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (479 samples, 0.02%)</title><rect x="332.5" y="371.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="335.5" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (479 samples, 0.02%)</title><rect x="332.5" y="355.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="335.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1,734 samples, 0.08%)</title><rect x="332.8" y="371.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.8" y="382.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (619 samples, 0.03%)</title><rect x="332.8" y="355.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="335.8" y="366.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (1,115 samples, 0.05%)</title><rect x="333.1" y="355.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="336.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (8,487 samples, 0.38%)</title><rect x="333.7" y="387.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="336.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (3,468 samples, 0.15%)</title><rect x="333.7" y="371.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="336.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (3,468 samples, 0.15%)</title><rect x="333.7" y="355.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="336.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,468 samples, 0.15%)</title><rect x="333.7" y="339.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="336.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3,468 samples, 0.15%)</title><rect x="333.7" y="323.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="336.7" y="334.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (3,468 samples, 0.15%)</title><rect x="333.7" y="307.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="336.7" y="318.0"></text>
</g>
<g>
<title>java/lang/String.substring (3,468 samples, 0.15%)</title><rect x="333.7" y="291.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="336.7" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,468 samples, 0.15%)</title><rect x="333.7" y="275.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="336.7" y="286.0"></text>
</g>
<g>
<title>java.lang.String (1,799 samples, 0.08%)</title><rect x="333.7" y="259.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="336.7" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,669 samples, 0.07%)</title><rect x="334.6" y="259.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="337.6" y="270.0"></text>
</g>
<g>
<title>byte[] (1,669 samples, 0.07%)</title><rect x="334.6" y="243.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="337.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (1,563 samples, 0.07%)</title><rect x="335.5" y="371.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="338.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,563 samples, 0.07%)</title><rect x="335.5" y="355.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="338.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1,563 samples, 0.07%)</title><rect x="335.5" y="339.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="338.5" y="350.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (1,563 samples, 0.07%)</title><rect x="335.5" y="323.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="338.5" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (804 samples, 0.04%)</title><rect x="336.3" y="371.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="339.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,785 samples, 0.08%)</title><rect x="336.8" y="371.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="339.8" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1,785 samples, 0.08%)</title><rect x="336.8" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.8" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,785 samples, 0.08%)</title><rect x="336.8" y="339.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="339.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1,785 samples, 0.08%)</title><rect x="336.8" y="323.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="339.8" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,785 samples, 0.08%)</title><rect x="336.8" y="307.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="339.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (1,742 samples, 0.08%)</title><rect x="336.8" y="291.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="339.8" y="302.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (867 samples, 0.04%)</title><rect x="337.7" y="371.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.7" y="382.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (867 samples, 0.04%)</title><rect x="337.7" y="355.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="340.7" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (850 samples, 0.04%)</title><rect x="338.2" y="387.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="341.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,992 samples, 0.09%)</title><rect x="338.6" y="435.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="341.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,992 samples, 0.09%)</title><rect x="338.6" y="419.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="341.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,992 samples, 0.09%)</title><rect x="338.6" y="403.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="341.6" y="414.0"></text>
</g>
<g>
<title>java.lang.String (858 samples, 0.04%)</title><rect x="338.6" y="387.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="341.6" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,134 samples, 0.05%)</title><rect x="339.0" y="387.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.0" y="398.0"></text>
</g>
<g>
<title>byte[] (1,134 samples, 0.05%)</title><rect x="339.0" y="371.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="342.0" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10,426 samples, 0.46%)</title><rect x="339.6" y="467.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="342.6" y="478.0"></text>
</g>
<g>
<title>one.nio.http.Request (1,658 samples, 0.07%)</title><rect x="339.6" y="451.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="342.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2,701 samples, 0.12%)</title><rect x="340.5" y="451.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="343.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String[] (2,336 samples, 0.10%)</title><rect x="340.5" y="435.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="343.5" y="446.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,067 samples, 0.27%)</title><rect x="341.9" y="451.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.9" y="462.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,067 samples, 0.27%)</title><rect x="341.9" y="435.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="344.9" y="446.0"></text>
</g>
<g>
<title>char[] (2,126 samples, 0.09%)</title><rect x="341.9" y="419.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="344.9" y="430.0"></text>
</g>
<g>
<title>char[] (739 samples, 0.03%)</title><rect x="343.0" y="419.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="346.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (889 samples, 0.04%)</title><rect x="343.4" y="419.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="346.4" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,313 samples, 0.10%)</title><rect x="343.9" y="419.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="346.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,313 samples, 0.10%)</title><rect x="343.9" y="403.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="346.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,313 samples, 0.10%)</title><rect x="343.9" y="387.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="346.9" y="398.0"></text>
</g>
<g>
<title>byte[] (2,286 samples, 0.10%)</title><rect x="343.9" y="371.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="346.9" y="382.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10,472 samples, 0.46%)</title><rect x="345.1" y="467.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="348.1" y="478.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10,472 samples, 0.46%)</title><rect x="345.1" y="451.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="348.1" y="462.0"></text>
</g>
<g>
<title>char[] (4,712 samples, 0.21%)</title><rect x="345.1" y="435.0" width="2.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="348.1" y="446.0"></text>
</g>
<g>
<title>java.lang.String (2,641 samples, 0.12%)</title><rect x="347.6" y="435.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="350.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,048 samples, 0.14%)</title><rect x="349.0" y="435.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="352.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,048 samples, 0.14%)</title><rect x="349.0" y="419.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="352.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,048 samples, 0.14%)</title><rect x="349.0" y="403.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="352.0" y="414.0"></text>
</g>
<g>
<title>byte[] (3,048 samples, 0.14%)</title><rect x="349.0" y="387.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="352.0" y="398.0"></text>
</g>
<g>
<title>[proxy-worker-0 tid=25855] (138,907 samples, 6.16%)</title><rect x="350.6" y="547.0" width="72.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="353.6" y="558.0">[proxy-w..</text>
</g>
<g>
<title>java/lang/Thread.run (138,907 samples, 6.16%)</title><rect x="350.6" y="531.0" width="72.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="353.6" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (138,907 samples, 6.16%)</title><rect x="350.6" y="515.0" width="72.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="353.6" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (138,907 samples, 6.16%)</title><rect x="350.6" y="499.0" width="72.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="353.6" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (138,623 samples, 6.15%)</title><rect x="350.6" y="483.0" width="72.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="353.6" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (138,318 samples, 6.14%)</title><rect x="350.6" y="467.0" width="72.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="353.6" y="478.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (138,318 samples, 6.14%)</title><rect x="350.6" y="451.0" width="72.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="353.6" y="462.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (138,318 samples, 6.14%)</title><rect x="350.6" y="435.0" width="72.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="353.6" y="446.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (138,318 samples, 6.14%)</title><rect x="350.6" y="419.0" width="72.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="353.6" y="430.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (138,318 samples, 6.14%)</title><rect x="350.6" y="403.0" width="72.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="353.6" y="414.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (138,318 samples, 6.14%)</title><rect x="350.6" y="387.0" width="72.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="353.6" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (138,318 samples, 6.14%)</title><rect x="350.6" y="371.0" width="72.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="353.6" y="382.0">one/nio/..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (805 samples, 0.04%)</title><rect x="350.6" y="355.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="353.6" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (131,558 samples, 5.84%)</title><rect x="351.0" y="355.0" width="68.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.0" y="366.0">one/nio..</text>
</g>
<g>
<title>byte[] (20,198 samples, 0.90%)</title><rect x="351.0" y="339.0" width="10.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="354.0" y="350.0"></text>
</g>
<g>
<title>byte[] (111,360 samples, 4.94%)</title><rect x="361.6" y="339.0" width="58.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="364.6" y="350.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (2,651 samples, 0.12%)</title><rect x="419.9" y="355.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="422.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (2,521 samples, 0.11%)</title><rect x="419.9" y="339.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.9" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,521 samples, 0.11%)</title><rect x="419.9" y="323.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.9" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,521 samples, 0.11%)</title><rect x="419.9" y="307.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.9" y="318.0"></text>
</g>
<g>
<title>char[] (2,425 samples, 0.11%)</title><rect x="419.9" y="291.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="422.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (2,562 samples, 0.11%)</title><rect x="421.3" y="355.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="424.3" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,529 samples, 0.11%)</title><rect x="421.3" y="339.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="424.3" y="350.0"></text>
</g>
<g>
<title>byte[] (2,529 samples, 0.11%)</title><rect x="421.3" y="323.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="424.3" y="334.0"></text>
</g>
<g>
<title>[proxy-worker-1 tid=25856] (140,115 samples, 6.22%)</title><rect x="423.3" y="547.0" width="73.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="426.3" y="558.0">[proxy-w..</text>
</g>
<g>
<title>java/lang/Thread.run (140,115 samples, 6.22%)</title><rect x="423.3" y="531.0" width="73.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="426.3" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (140,115 samples, 6.22%)</title><rect x="423.3" y="515.0" width="73.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="426.3" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (140,115 samples, 6.22%)</title><rect x="423.3" y="499.0" width="73.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="426.3" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (139,772 samples, 6.20%)</title><rect x="423.3" y="483.0" width="73.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.3" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (139,417 samples, 6.19%)</title><rect x="423.3" y="467.0" width="73.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="426.3" y="478.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (139,417 samples, 6.19%)</title><rect x="423.3" y="451.0" width="73.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="426.3" y="462.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (139,417 samples, 6.19%)</title><rect x="423.3" y="435.0" width="73.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="426.3" y="446.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (139,417 samples, 6.19%)</title><rect x="423.3" y="419.0" width="73.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="426.3" y="430.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (139,417 samples, 6.19%)</title><rect x="423.3" y="403.0" width="73.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.3" y="414.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (139,417 samples, 6.19%)</title><rect x="423.3" y="387.0" width="73.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="426.3" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (139,417 samples, 6.19%)</title><rect x="423.3" y="371.0" width="73.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="426.3" y="382.0">one/nio/..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (869 samples, 0.04%)</title><rect x="423.3" y="355.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="426.3" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (132,359 samples, 5.87%)</title><rect x="423.8" y="355.0" width="69.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="426.8" y="366.0">one/nio..</text>
</g>
<g>
<title>byte[] (19,626 samples, 0.87%)</title><rect x="423.8" y="339.0" width="10.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="426.8" y="350.0"></text>
</g>
<g>
<title>byte[] (112,733 samples, 5.00%)</title><rect x="434.0" y="339.0" width="59.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="437.0" y="350.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (2,508 samples, 0.11%)</title><rect x="493.1" y="355.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="496.1" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (2,401 samples, 0.11%)</title><rect x="493.1" y="339.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="496.1" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,401 samples, 0.11%)</title><rect x="493.1" y="323.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="496.1" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,401 samples, 0.11%)</title><rect x="493.1" y="307.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="496.1" y="318.0"></text>
</g>
<g>
<title>char[] (2,376 samples, 0.11%)</title><rect x="493.1" y="291.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="496.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (2,940 samples, 0.13%)</title><rect x="494.4" y="355.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="497.4" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,888 samples, 0.13%)</title><rect x="494.4" y="339.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="497.4" y="350.0"></text>
</g>
<g>
<title>byte[] (2,888 samples, 0.13%)</title><rect x="494.4" y="323.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="497.4" y="334.0"></text>
</g>
<g>
<title>[proxy-worker-2 tid=25860] (137,779 samples, 6.11%)</title><rect x="496.7" y="547.0" width="72.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="499.7" y="558.0">[proxy-w..</text>
</g>
<g>
<title>java/lang/Thread.run (137,779 samples, 6.11%)</title><rect x="496.7" y="531.0" width="72.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.7" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (137,779 samples, 6.11%)</title><rect x="496.7" y="515.0" width="72.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="499.7" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (137,779 samples, 6.11%)</title><rect x="496.7" y="499.0" width="72.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.7" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (137,397 samples, 6.10%)</title><rect x="496.7" y="483.0" width="71.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="499.7" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (136,976 samples, 6.08%)</title><rect x="496.7" y="467.0" width="71.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="499.7" y="478.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (136,976 samples, 6.08%)</title><rect x="496.7" y="451.0" width="71.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="499.7" y="462.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (136,976 samples, 6.08%)</title><rect x="496.7" y="435.0" width="71.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="499.7" y="446.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (136,976 samples, 6.08%)</title><rect x="496.7" y="419.0" width="71.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="499.7" y="430.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (136,976 samples, 6.08%)</title><rect x="496.7" y="403.0" width="71.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="499.7" y="414.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (136,976 samples, 6.08%)</title><rect x="496.7" y="387.0" width="71.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="499.7" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (136,976 samples, 6.08%)</title><rect x="496.7" y="371.0" width="71.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="499.7" y="382.0">one/nio/..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (776 samples, 0.03%)</title><rect x="496.7" y="355.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="499.7" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (129,777 samples, 5.76%)</title><rect x="497.1" y="355.0" width="67.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="500.1" y="366.0">one/nio..</text>
</g>
<g>
<title>byte[] (19,895 samples, 0.88%)</title><rect x="497.1" y="339.0" width="10.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="500.1" y="350.0"></text>
</g>
<g>
<title>byte[] (109,882 samples, 4.88%)</title><rect x="507.5" y="339.0" width="57.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="510.5" y="350.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (2,736 samples, 0.12%)</title><rect x="565.0" y="355.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="568.0" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (2,524 samples, 0.11%)</title><rect x="565.1" y="339.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.1" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,524 samples, 0.11%)</title><rect x="565.1" y="323.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.1" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,524 samples, 0.11%)</title><rect x="565.1" y="307.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.1" y="318.0"></text>
</g>
<g>
<title>char[] (2,365 samples, 0.10%)</title><rect x="565.1" y="291.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="568.1" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (2,867 samples, 0.13%)</title><rect x="566.5" y="355.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="569.5" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,820 samples, 0.13%)</title><rect x="566.5" y="339.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="569.5" y="350.0"></text>
</g>
<g>
<title>byte[] (2,820 samples, 0.13%)</title><rect x="566.5" y="323.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="569.5" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (485 samples, 0.02%)</title><rect x="568.0" y="355.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.0" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (485 samples, 0.02%)</title><rect x="568.0" y="339.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="571.0" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (485 samples, 0.02%)</title><rect x="568.0" y="323.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.0" y="334.0"></text>
</g>
<g>
<title>[proxy-worker-3 tid=25858] (138,793 samples, 6.16%)</title><rect x="568.8" y="547.0" width="72.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="571.8" y="558.0">[proxy-w..</text>
</g>
<g>
<title>java/lang/Thread.run (138,793 samples, 6.16%)</title><rect x="568.8" y="531.0" width="72.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="571.8" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (138,793 samples, 6.16%)</title><rect x="568.8" y="515.0" width="72.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="571.8" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (138,793 samples, 6.16%)</title><rect x="568.8" y="499.0" width="72.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.8" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (138,413 samples, 6.14%)</title><rect x="568.8" y="483.0" width="72.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="571.8" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (138,028 samples, 6.12%)</title><rect x="568.8" y="467.0" width="72.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="571.8" y="478.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (138,028 samples, 6.12%)</title><rect x="568.8" y="451.0" width="72.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.8" y="462.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (138,028 samples, 6.12%)</title><rect x="568.8" y="435.0" width="72.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="571.8" y="446.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (138,028 samples, 6.12%)</title><rect x="568.8" y="419.0" width="72.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="571.8" y="430.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (138,028 samples, 6.12%)</title><rect x="568.8" y="403.0" width="72.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="571.8" y="414.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (138,028 samples, 6.12%)</title><rect x="568.8" y="387.0" width="72.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.8" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (138,028 samples, 6.12%)</title><rect x="568.8" y="371.0" width="72.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="571.8" y="382.0">one/nio/..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (753 samples, 0.03%)</title><rect x="568.8" y="355.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="571.8" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (131,191 samples, 5.82%)</title><rect x="569.2" y="355.0" width="68.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.2" y="366.0">one/nio..</text>
</g>
<g>
<title>byte[] (19,926 samples, 0.88%)</title><rect x="569.2" y="339.0" width="10.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="572.2" y="350.0"></text>
</g>
<g>
<title>byte[] (111,265 samples, 4.94%)</title><rect x="579.6" y="339.0" width="58.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="582.6" y="350.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (2,572 samples, 0.11%)</title><rect x="637.9" y="355.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="640.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (2,436 samples, 0.11%)</title><rect x="637.9" y="339.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="640.9" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,436 samples, 0.11%)</title><rect x="637.9" y="323.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="640.9" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,436 samples, 0.11%)</title><rect x="637.9" y="307.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.9" y="318.0"></text>
</g>
<g>
<title>char[] (2,393 samples, 0.11%)</title><rect x="637.9" y="291.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="640.9" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (2,722 samples, 0.12%)</title><rect x="639.2" y="355.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.2" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,677 samples, 0.12%)</title><rect x="639.2" y="339.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.2" y="350.0"></text>
</g>
<g>
<title>byte[] (2,677 samples, 0.12%)</title><rect x="639.2" y="323.0" width="1.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="642.2" y="334.0"></text>
</g>
<g>
<title>[proxy-worker-4 tid=25859] (138,642 samples, 6.15%)</title><rect x="641.5" y="547.0" width="72.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="644.5" y="558.0">[proxy-w..</text>
</g>
<g>
<title>java/lang/Thread.run (138,642 samples, 6.15%)</title><rect x="641.5" y="531.0" width="72.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="644.5" y="542.0">java/lan..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (138,642 samples, 6.15%)</title><rect x="641.5" y="515.0" width="72.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.5" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (138,642 samples, 6.15%)</title><rect x="641.5" y="499.0" width="72.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="644.5" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (138,260 samples, 6.13%)</title><rect x="641.5" y="483.0" width="72.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="644.5" y="494.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (137,852 samples, 6.12%)</title><rect x="641.5" y="467.0" width="72.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.5" y="478.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (137,852 samples, 6.12%)</title><rect x="641.5" y="451.0" width="72.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.5" y="462.0">java/uti..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$68/822061802.call (137,852 samples, 6.12%)</title><rect x="641.5" y="435.0" width="72.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.5" y="446.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$getResponsesFromRelicas$3 (137,852 samples, 6.12%)</title><rect x="641.5" y="419.0" width="72.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.5" y="430.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.proxy (137,852 samples, 6.12%)</title><rect x="641.5" y="403.0" width="72.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.5" y="414.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (137,852 samples, 6.12%)</title><rect x="641.5" y="387.0" width="72.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="644.5" y="398.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (137,852 samples, 6.12%)</title><rect x="641.5" y="371.0" width="72.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.5" y="382.0">one/nio/..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (746 samples, 0.03%)</title><rect x="641.5" y="355.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="644.5" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (130,854 samples, 5.81%)</title><rect x="641.9" y="355.0" width="68.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.9" y="366.0">one/nio..</text>
</g>
<g>
<title>byte[] (20,082 samples, 0.89%)</title><rect x="641.9" y="339.0" width="10.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="644.9" y="350.0"></text>
</g>
<g>
<title>byte[] (110,772 samples, 4.91%)</title><rect x="652.4" y="339.0" width="58.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="655.4" y="350.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (2,533 samples, 0.11%)</title><rect x="710.4" y="355.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="713.4" y="366.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (2,447 samples, 0.11%)</title><rect x="710.4" y="339.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="713.4" y="350.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,447 samples, 0.11%)</title><rect x="710.4" y="323.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.4" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,447 samples, 0.11%)</title><rect x="710.4" y="307.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.4" y="318.0"></text>
</g>
<g>
<title>char[] (2,387 samples, 0.11%)</title><rect x="710.4" y="291.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="713.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (2,966 samples, 0.13%)</title><rect x="711.7" y="355.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="714.7" y="366.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,915 samples, 0.13%)</title><rect x="711.7" y="339.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.7" y="350.0"></text>
</g>
<g>
<title>byte[] (2,915 samples, 0.13%)</title><rect x="711.7" y="323.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="714.7" y="334.0"></text>
</g>
<g>
<title>[worker-0 tid=25850] (60,888 samples, 2.70%)</title><rect x="714.1" y="547.0" width="31.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="717.1" y="558.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (60,888 samples, 2.70%)</title><rect x="714.1" y="531.0" width="31.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="717.1" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (60,888 samples, 2.70%)</title><rect x="714.1" y="515.0" width="31.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.1" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (60,888 samples, 2.70%)</title><rect x="714.1" y="499.0" width="31.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="717.1" y="510.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (60,887 samples, 2.70%)</title><rect x="714.1" y="483.0" width="31.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="717.1" y="494.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (60,887 samples, 2.70%)</title><rect x="714.1" y="467.0" width="31.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.1" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (60,785 samples, 2.70%)</title><rect x="714.1" y="451.0" width="31.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="717.1" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (60,785 samples, 2.70%)</title><rect x="714.1" y="435.0" width="31.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.1" y="446.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (60,653 samples, 2.69%)</title><rect x="714.1" y="419.0" width="31.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.1" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (58,401 samples, 2.59%)</title><rect x="714.2" y="403.0" width="30.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="717.2" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,621 samples, 0.21%)</title><rect x="714.2" y="387.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="717.2" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,175 samples, 0.19%)</title><rect x="714.2" y="371.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.2" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2,041 samples, 0.09%)</title><rect x="714.2" y="355.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="717.2" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2,041 samples, 0.09%)</title><rect x="714.2" y="339.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="717.2" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2,041 samples, 0.09%)</title><rect x="714.2" y="323.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="717.2" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,041 samples, 0.09%)</title><rect x="714.2" y="307.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="717.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,041 samples, 0.09%)</title><rect x="714.2" y="291.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="717.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (2,041 samples, 0.09%)</title><rect x="714.2" y="275.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="717.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,041 samples, 0.09%)</title><rect x="714.2" y="259.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="717.2" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,041 samples, 0.09%)</title><rect x="714.2" y="243.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="717.2" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,041 samples, 0.09%)</title><rect x="714.2" y="227.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="717.2" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,041 samples, 0.09%)</title><rect x="714.2" y="211.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="717.2" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,041 samples, 0.09%)</title><rect x="714.2" y="195.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="717.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (2,041 samples, 0.09%)</title><rect x="714.2" y="179.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="717.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,041 samples, 0.09%)</title><rect x="714.2" y="163.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="717.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (2,041 samples, 0.09%)</title><rect x="714.2" y="147.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="717.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,041 samples, 0.09%)</title><rect x="714.2" y="131.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="717.2" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,002 samples, 0.09%)</title><rect x="714.2" y="115.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="717.2" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,002 samples, 0.09%)</title><rect x="714.2" y="99.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="717.2" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,002 samples, 0.09%)</title><rect x="714.2" y="83.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="717.2" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,134 samples, 0.09%)</title><rect x="715.3" y="355.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="718.3" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,134 samples, 0.09%)</title><rect x="715.3" y="339.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="718.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,134 samples, 0.09%)</title><rect x="715.3" y="323.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="718.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,134 samples, 0.09%)</title><rect x="715.3" y="307.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="718.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,134 samples, 0.09%)</title><rect x="715.3" y="291.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="718.3" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,134 samples, 0.09%)</title><rect x="715.3" y="275.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,652 samples, 0.07%)</title><rect x="715.3" y="259.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,641 samples, 0.07%)</title><rect x="715.3" y="243.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="718.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,641 samples, 0.07%)</title><rect x="715.3" y="227.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="718.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,641 samples, 0.07%)</title><rect x="715.3" y="211.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (482 samples, 0.02%)</title><rect x="716.2" y="259.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="719.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (482 samples, 0.02%)</title><rect x="716.2" y="243.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="719.2" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (482 samples, 0.02%)</title><rect x="716.2" y="227.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.2" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (482 samples, 0.02%)</title><rect x="716.2" y="211.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="719.2" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (482 samples, 0.02%)</title><rect x="716.2" y="195.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="719.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (482 samples, 0.02%)</title><rect x="716.2" y="179.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="719.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (482 samples, 0.02%)</title><rect x="716.2" y="163.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="719.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (482 samples, 0.02%)</title><rect x="716.2" y="147.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="719.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (482 samples, 0.02%)</title><rect x="716.2" y="131.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="719.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (482 samples, 0.02%)</title><rect x="716.2" y="115.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (53,730 samples, 2.38%)</title><rect x="716.7" y="387.0" width="28.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.7" y="398.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (46,001 samples, 2.04%)</title><rect x="716.7" y="371.0" width="24.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="719.7" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (45,558 samples, 2.02%)</title><rect x="716.9" y="355.0" width="23.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.9" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (45,262 samples, 2.01%)</title><rect x="717.0" y="339.0" width="23.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.0" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (45,262 samples, 2.01%)</title><rect x="717.0" y="323.0" width="23.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.0" y="334.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (22,592 samples, 1.00%)</title><rect x="717.0" y="307.0" width="11.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,254 samples, 0.50%)</title><rect x="717.0" y="291.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.0" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,254 samples, 0.50%)</title><rect x="717.0" y="275.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="720.0" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,254 samples, 0.50%)</title><rect x="717.0" y="259.0" width="5.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="720.0" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,338 samples, 0.50%)</title><rect x="722.9" y="291.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="725.9" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,338 samples, 0.50%)</title><rect x="722.9" y="275.0" width="6.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="725.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (22,670 samples, 1.01%)</title><rect x="728.9" y="307.0" width="11.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="731.9" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,374 samples, 0.50%)</title><rect x="728.9" y="291.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.9" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,374 samples, 0.50%)</title><rect x="728.9" y="275.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.9" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,374 samples, 0.50%)</title><rect x="728.9" y="259.0" width="5.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="731.9" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,296 samples, 0.50%)</title><rect x="734.8" y="291.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="737.8" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,296 samples, 0.50%)</title><rect x="734.8" y="275.0" width="5.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="737.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (7,729 samples, 0.34%)</title><rect x="740.7" y="371.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="743.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,613 samples, 0.29%)</title><rect x="740.7" y="355.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="743.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,600 samples, 0.29%)</title><rect x="740.7" y="339.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,298 samples, 0.28%)</title><rect x="740.9" y="323.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,298 samples, 0.28%)</title><rect x="740.9" y="307.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="743.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,162 samples, 0.27%)</title><rect x="741.0" y="291.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="744.0" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,162 samples, 0.27%)</title><rect x="741.0" y="275.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,162 samples, 0.27%)</title><rect x="741.0" y="259.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="744.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,162 samples, 0.27%)</title><rect x="741.0" y="243.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="744.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,451 samples, 0.20%)</title><rect x="741.0" y="227.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="744.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,399 samples, 0.20%)</title><rect x="741.0" y="211.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="744.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,399 samples, 0.20%)</title><rect x="741.0" y="195.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,399 samples, 0.20%)</title><rect x="741.0" y="179.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="744.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,120 samples, 0.05%)</title><rect x="741.2" y="163.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="744.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (590 samples, 0.03%)</title><rect x="741.2" y="147.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="744.2" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (590 samples, 0.03%)</title><rect x="741.2" y="131.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="744.2" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (590 samples, 0.03%)</title><rect x="741.2" y="115.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="744.2" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (530 samples, 0.02%)</title><rect x="741.6" y="147.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="744.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (530 samples, 0.02%)</title><rect x="741.6" y="131.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="744.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,166 samples, 0.05%)</title><rect x="741.8" y="163.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="744.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (578 samples, 0.03%)</title><rect x="741.8" y="147.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.8" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (578 samples, 0.03%)</title><rect x="741.8" y="131.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="744.8" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (578 samples, 0.03%)</title><rect x="741.8" y="115.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="744.8" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (588 samples, 0.03%)</title><rect x="742.1" y="147.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="745.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (588 samples, 0.03%)</title><rect x="742.1" y="131.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="745.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (555 samples, 0.02%)</title><rect x="742.4" y="163.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (555 samples, 0.02%)</title><rect x="742.4" y="147.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="745.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (555 samples, 0.02%)</title><rect x="742.4" y="131.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="745.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (555 samples, 0.02%)</title><rect x="742.4" y="115.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="745.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,099 samples, 0.05%)</title><rect x="742.7" y="163.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="745.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (527 samples, 0.02%)</title><rect x="742.7" y="147.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="745.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (527 samples, 0.02%)</title><rect x="742.7" y="131.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="745.7" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (527 samples, 0.02%)</title><rect x="742.7" y="115.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="745.7" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (572 samples, 0.03%)</title><rect x="743.0" y="147.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="746.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (572 samples, 0.03%)</title><rect x="743.0" y="131.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="746.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (1,711 samples, 0.08%)</title><rect x="743.3" y="227.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,711 samples, 0.08%)</title><rect x="743.3" y="211.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="746.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,711 samples, 0.08%)</title><rect x="743.3" y="195.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,711 samples, 0.08%)</title><rect x="743.3" y="179.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="746.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,711 samples, 0.08%)</title><rect x="743.3" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="746.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,711 samples, 0.08%)</title><rect x="743.3" y="147.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (1,711 samples, 0.08%)</title><rect x="743.3" y="131.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="746.3" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,711 samples, 0.08%)</title><rect x="743.3" y="115.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="746.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (1,711 samples, 0.08%)</title><rect x="743.3" y="99.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="746.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,711 samples, 0.08%)</title><rect x="743.3" y="83.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="746.3" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,639 samples, 0.07%)</title><rect x="743.3" y="67.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="746.3" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,639 samples, 0.07%)</title><rect x="743.3" y="51.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="746.3" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,639 samples, 0.07%)</title><rect x="743.3" y="35.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="746.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,116 samples, 0.05%)</title><rect x="744.2" y="355.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,103 samples, 0.05%)</title><rect x="744.2" y="339.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,103 samples, 0.05%)</title><rect x="744.2" y="323.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="747.2" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (573 samples, 0.03%)</title><rect x="744.2" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="747.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (573 samples, 0.03%)</title><rect x="744.2" y="291.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.2" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (573 samples, 0.03%)</title><rect x="744.2" y="275.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (573 samples, 0.03%)</title><rect x="744.2" y="259.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="747.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (573 samples, 0.03%)</title><rect x="744.2" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (573 samples, 0.03%)</title><rect x="744.2" y="227.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="747.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (573 samples, 0.03%)</title><rect x="744.2" y="211.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.2" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (573 samples, 0.03%)</title><rect x="744.2" y="195.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (573 samples, 0.03%)</title><rect x="744.2" y="179.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="747.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (573 samples, 0.03%)</title><rect x="744.2" y="163.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="747.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (573 samples, 0.03%)</title><rect x="744.2" y="147.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="747.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (573 samples, 0.03%)</title><rect x="744.2" y="131.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="747.2" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (573 samples, 0.03%)</title><rect x="744.2" y="115.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (573 samples, 0.03%)</title><rect x="744.2" y="99.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (573 samples, 0.03%)</title><rect x="744.2" y="83.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.2" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (568 samples, 0.03%)</title><rect x="744.2" y="67.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="747.2" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (568 samples, 0.03%)</title><rect x="744.2" y="51.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="747.2" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (568 samples, 0.03%)</title><rect x="744.2" y="35.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="747.2" y="46.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (530 samples, 0.02%)</title><rect x="744.5" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (530 samples, 0.02%)</title><rect x="744.5" y="291.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (530 samples, 0.02%)</title><rect x="744.5" y="275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.5" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (530 samples, 0.02%)</title><rect x="744.5" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="747.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (530 samples, 0.02%)</title><rect x="744.5" y="243.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="747.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (530 samples, 0.02%)</title><rect x="744.5" y="227.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (885 samples, 0.04%)</title><rect x="744.8" y="403.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.from (510 samples, 0.02%)</title><rect x="745.3" y="403.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="748.3" y="414.0"></text>
</g>
<g>
<title>[worker-0 tid=25857] (60,468 samples, 2.68%)</title><rect x="745.9" y="547.0" width="31.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="748.9" y="558.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (60,468 samples, 2.68%)</title><rect x="745.9" y="531.0" width="31.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="748.9" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (60,468 samples, 2.68%)</title><rect x="745.9" y="515.0" width="31.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="748.9" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (60,468 samples, 2.68%)</title><rect x="745.9" y="499.0" width="31.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="748.9" y="510.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (60,145 samples, 2.67%)</title><rect x="746.1" y="483.0" width="31.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="749.1" y="494.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (60,145 samples, 2.67%)</title><rect x="746.1" y="467.0" width="31.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="749.1" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (60,023 samples, 2.66%)</title><rect x="746.1" y="451.0" width="31.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.1" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (60,023 samples, 2.66%)</title><rect x="746.1" y="435.0" width="31.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.1" y="446.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (555 samples, 0.02%)</title><rect x="746.1" y="419.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="749.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (59,427 samples, 2.64%)</title><rect x="746.4" y="419.0" width="31.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="749.4" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (59,097 samples, 2.62%)</title><rect x="746.5" y="403.0" width="30.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="749.5" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,769 samples, 0.21%)</title><rect x="746.5" y="387.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="749.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,347 samples, 0.19%)</title><rect x="746.5" y="371.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="749.5" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2,163 samples, 0.10%)</title><rect x="746.5" y="355.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.5" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2,163 samples, 0.10%)</title><rect x="746.5" y="339.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="749.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2,163 samples, 0.10%)</title><rect x="746.5" y="323.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="749.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,163 samples, 0.10%)</title><rect x="746.5" y="307.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="749.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,163 samples, 0.10%)</title><rect x="746.5" y="291.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (2,163 samples, 0.10%)</title><rect x="746.5" y="275.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,163 samples, 0.10%)</title><rect x="746.5" y="259.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="749.5" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,163 samples, 0.10%)</title><rect x="746.5" y="243.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="749.5" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,163 samples, 0.10%)</title><rect x="746.5" y="227.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="749.5" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,163 samples, 0.10%)</title><rect x="746.5" y="211.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="749.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,163 samples, 0.10%)</title><rect x="746.5" y="195.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (2,163 samples, 0.10%)</title><rect x="746.5" y="179.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="749.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,163 samples, 0.10%)</title><rect x="746.5" y="163.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (2,163 samples, 0.10%)</title><rect x="746.5" y="147.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="749.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,163 samples, 0.10%)</title><rect x="746.5" y="131.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="749.5" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,121 samples, 0.09%)</title><rect x="746.5" y="115.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.5" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,121 samples, 0.09%)</title><rect x="746.5" y="99.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="749.5" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,121 samples, 0.09%)</title><rect x="746.5" y="83.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="749.5" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,184 samples, 0.10%)</title><rect x="747.6" y="355.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.6" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,184 samples, 0.10%)</title><rect x="747.6" y="339.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="750.6" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,184 samples, 0.10%)</title><rect x="747.6" y="323.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="750.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,184 samples, 0.10%)</title><rect x="747.6" y="307.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,184 samples, 0.10%)</title><rect x="747.6" y="291.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="750.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,184 samples, 0.10%)</title><rect x="747.6" y="275.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,734 samples, 0.08%)</title><rect x="747.6" y="259.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="750.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,725 samples, 0.08%)</title><rect x="747.6" y="243.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="750.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,725 samples, 0.08%)</title><rect x="747.6" y="227.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,725 samples, 0.08%)</title><rect x="747.6" y="211.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (480 samples, 0.02%)</title><rect x="747.7" y="195.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="750.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (54,282 samples, 2.41%)</title><rect x="748.9" y="387.0" width="28.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="751.9" y="398.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (46,489 samples, 2.06%)</title><rect x="748.9" y="371.0" width="24.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="751.9" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (46,042 samples, 2.04%)</title><rect x="749.2" y="355.0" width="24.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.2" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (45,770 samples, 2.03%)</title><rect x="749.3" y="339.0" width="24.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="752.3" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (45,770 samples, 2.03%)</title><rect x="749.3" y="323.0" width="24.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.3" y="334.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (22,752 samples, 1.01%)</title><rect x="749.3" y="307.0" width="11.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="752.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,282 samples, 0.50%)</title><rect x="749.3" y="291.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="752.3" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,282 samples, 0.50%)</title><rect x="749.3" y="275.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.3" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,282 samples, 0.50%)</title><rect x="749.3" y="259.0" width="5.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="752.3" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,470 samples, 0.51%)</title><rect x="755.2" y="291.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="758.2" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,470 samples, 0.51%)</title><rect x="755.2" y="275.0" width="6.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="758.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (23,018 samples, 1.02%)</title><rect x="761.2" y="307.0" width="12.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,587 samples, 0.51%)</title><rect x="761.2" y="291.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="764.2" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,587 samples, 0.51%)</title><rect x="761.2" y="275.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="764.2" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,587 samples, 0.51%)</title><rect x="761.2" y="259.0" width="6.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="764.2" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,431 samples, 0.51%)</title><rect x="767.3" y="291.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="770.3" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,431 samples, 0.51%)</title><rect x="767.3" y="275.0" width="6.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="770.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (7,793 samples, 0.35%)</title><rect x="773.3" y="371.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="776.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,675 samples, 0.30%)</title><rect x="773.3" y="355.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="776.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,663 samples, 0.30%)</title><rect x="773.3" y="339.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,375 samples, 0.28%)</title><rect x="773.4" y="323.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="776.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,375 samples, 0.28%)</title><rect x="773.4" y="307.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="776.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,260 samples, 0.28%)</title><rect x="773.5" y="291.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,260 samples, 0.28%)</title><rect x="773.5" y="275.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,260 samples, 0.28%)</title><rect x="773.5" y="259.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="776.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,260 samples, 0.28%)</title><rect x="773.5" y="243.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="776.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,525 samples, 0.20%)</title><rect x="773.5" y="227.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,477 samples, 0.20%)</title><rect x="773.5" y="211.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,477 samples, 0.20%)</title><rect x="773.5" y="195.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="776.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,477 samples, 0.20%)</title><rect x="773.5" y="179.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="776.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,150 samples, 0.05%)</title><rect x="773.8" y="163.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (569 samples, 0.03%)</title><rect x="773.8" y="147.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="776.8" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (569 samples, 0.03%)</title><rect x="773.8" y="131.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.8" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (569 samples, 0.03%)</title><rect x="773.8" y="115.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="776.8" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (581 samples, 0.03%)</title><rect x="774.1" y="147.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="777.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (581 samples, 0.03%)</title><rect x="774.1" y="131.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="777.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,115 samples, 0.05%)</title><rect x="774.4" y="163.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="777.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (564 samples, 0.03%)</title><rect x="774.4" y="147.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="777.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (564 samples, 0.03%)</title><rect x="774.4" y="131.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="777.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (564 samples, 0.03%)</title><rect x="774.4" y="115.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="777.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (551 samples, 0.02%)</title><rect x="774.7" y="147.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="777.7" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (551 samples, 0.02%)</title><rect x="774.7" y="131.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="777.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (551 samples, 0.02%)</title><rect x="775.0" y="163.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="778.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (551 samples, 0.02%)</title><rect x="775.0" y="147.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="778.0" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (551 samples, 0.02%)</title><rect x="775.0" y="131.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="778.0" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (551 samples, 0.02%)</title><rect x="775.0" y="115.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="778.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,143 samples, 0.05%)</title><rect x="775.3" y="163.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (587 samples, 0.03%)</title><rect x="775.3" y="147.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="778.3" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (587 samples, 0.03%)</title><rect x="775.3" y="131.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="778.3" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (587 samples, 0.03%)</title><rect x="775.3" y="115.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="778.3" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (556 samples, 0.02%)</title><rect x="775.6" y="147.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="778.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (556 samples, 0.02%)</title><rect x="775.6" y="131.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="778.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (1,735 samples, 0.08%)</title><rect x="775.9" y="227.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="778.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,735 samples, 0.08%)</title><rect x="775.9" y="211.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.9" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,735 samples, 0.08%)</title><rect x="775.9" y="195.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="778.9" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,735 samples, 0.08%)</title><rect x="775.9" y="179.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="778.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,735 samples, 0.08%)</title><rect x="775.9" y="163.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,735 samples, 0.08%)</title><rect x="775.9" y="147.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (1,735 samples, 0.08%)</title><rect x="775.9" y="131.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="778.9" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,735 samples, 0.08%)</title><rect x="775.9" y="115.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (1,735 samples, 0.08%)</title><rect x="775.9" y="99.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="778.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,735 samples, 0.08%)</title><rect x="775.9" y="83.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="778.9" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,644 samples, 0.07%)</title><rect x="775.9" y="67.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="778.9" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,644 samples, 0.07%)</title><rect x="775.9" y="51.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="778.9" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,644 samples, 0.07%)</title><rect x="775.9" y="35.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="778.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,118 samples, 0.05%)</title><rect x="776.8" y="355.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,106 samples, 0.05%)</title><rect x="776.8" y="339.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="779.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,106 samples, 0.05%)</title><rect x="776.8" y="323.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.8" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (560 samples, 0.02%)</title><rect x="776.8" y="307.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="779.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (560 samples, 0.02%)</title><rect x="776.8" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="779.8" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (560 samples, 0.02%)</title><rect x="776.8" y="275.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="779.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (560 samples, 0.02%)</title><rect x="776.8" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="779.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (560 samples, 0.02%)</title><rect x="776.8" y="243.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="779.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (560 samples, 0.02%)</title><rect x="776.8" y="227.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (560 samples, 0.02%)</title><rect x="776.8" y="211.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="779.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (560 samples, 0.02%)</title><rect x="776.8" y="195.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="779.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (560 samples, 0.02%)</title><rect x="776.8" y="179.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="779.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (560 samples, 0.02%)</title><rect x="776.8" y="163.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (560 samples, 0.02%)</title><rect x="776.8" y="147.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="779.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (560 samples, 0.02%)</title><rect x="776.8" y="131.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.8" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (560 samples, 0.02%)</title><rect x="776.8" y="115.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="779.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (560 samples, 0.02%)</title><rect x="776.8" y="99.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="779.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (560 samples, 0.02%)</title><rect x="776.8" y="83.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (559 samples, 0.02%)</title><rect x="776.8" y="67.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="779.8" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (559 samples, 0.02%)</title><rect x="776.8" y="51.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="779.8" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (559 samples, 0.02%)</title><rect x="776.8" y="35.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="779.8" y="46.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (546 samples, 0.02%)</title><rect x="777.1" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (546 samples, 0.02%)</title><rect x="777.1" y="291.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="780.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (546 samples, 0.02%)</title><rect x="777.1" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.1" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (546 samples, 0.02%)</title><rect x="777.1" y="259.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (546 samples, 0.02%)</title><rect x="777.1" y="243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="780.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (546 samples, 0.02%)</title><rect x="777.1" y="227.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="780.1" y="238.0"></text>
</g>
<g>
<title>[worker-0 tid=25862] (60,484 samples, 2.68%)</title><rect x="777.6" y="547.0" width="31.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="780.6" y="558.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (60,484 samples, 2.68%)</title><rect x="777.6" y="531.0" width="31.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="780.6" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (60,484 samples, 2.68%)</title><rect x="777.6" y="515.0" width="31.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.6" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (60,484 samples, 2.68%)</title><rect x="777.6" y="499.0" width="31.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.6" y="510.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (60,173 samples, 2.67%)</title><rect x="777.8" y="483.0" width="31.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="780.8" y="494.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (60,173 samples, 2.67%)</title><rect x="777.8" y="467.0" width="31.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="780.8" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (60,038 samples, 2.66%)</title><rect x="777.8" y="451.0" width="31.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="780.8" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (60,038 samples, 2.66%)</title><rect x="777.8" y="435.0" width="31.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.8" y="446.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (578 samples, 0.03%)</title><rect x="777.8" y="419.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="780.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (59,394 samples, 2.64%)</title><rect x="778.1" y="419.0" width="31.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="781.1" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (59,046 samples, 2.62%)</title><rect x="778.1" y="403.0" width="30.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="781.1" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,768 samples, 0.21%)</title><rect x="778.1" y="387.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,343 samples, 0.19%)</title><rect x="778.1" y="371.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="781.1" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2,116 samples, 0.09%)</title><rect x="778.1" y="355.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.1" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2,116 samples, 0.09%)</title><rect x="778.1" y="339.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="781.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2,116 samples, 0.09%)</title><rect x="778.1" y="323.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,116 samples, 0.09%)</title><rect x="778.1" y="307.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="781.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,116 samples, 0.09%)</title><rect x="778.1" y="291.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (2,116 samples, 0.09%)</title><rect x="778.1" y="275.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="781.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,116 samples, 0.09%)</title><rect x="778.1" y="259.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.1" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,116 samples, 0.09%)</title><rect x="778.1" y="243.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="781.1" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,116 samples, 0.09%)</title><rect x="778.1" y="227.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="781.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,116 samples, 0.09%)</title><rect x="778.1" y="211.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="781.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,116 samples, 0.09%)</title><rect x="778.1" y="195.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="781.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (2,116 samples, 0.09%)</title><rect x="778.1" y="179.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="781.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,116 samples, 0.09%)</title><rect x="778.1" y="163.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="781.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (2,116 samples, 0.09%)</title><rect x="778.1" y="147.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="781.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,116 samples, 0.09%)</title><rect x="778.1" y="131.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.1" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,083 samples, 0.09%)</title><rect x="778.1" y="115.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.1" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,083 samples, 0.09%)</title><rect x="778.1" y="99.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="781.1" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,083 samples, 0.09%)</title><rect x="778.1" y="83.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="781.1" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,227 samples, 0.10%)</title><rect x="779.2" y="355.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.2" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,227 samples, 0.10%)</title><rect x="779.2" y="339.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="782.2" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,227 samples, 0.10%)</title><rect x="779.2" y="323.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,227 samples, 0.10%)</title><rect x="779.2" y="307.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="782.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,227 samples, 0.10%)</title><rect x="779.2" y="291.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,227 samples, 0.10%)</title><rect x="779.2" y="275.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,748 samples, 0.08%)</title><rect x="779.2" y="259.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,731 samples, 0.08%)</title><rect x="779.2" y="243.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="782.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,731 samples, 0.08%)</title><rect x="779.2" y="227.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,731 samples, 0.08%)</title><rect x="779.2" y="211.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="782.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (479 samples, 0.02%)</title><rect x="780.1" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="783.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (479 samples, 0.02%)</title><rect x="780.1" y="243.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="783.1" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (479 samples, 0.02%)</title><rect x="780.1" y="227.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="783.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (479 samples, 0.02%)</title><rect x="780.1" y="211.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="783.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (479 samples, 0.02%)</title><rect x="780.1" y="195.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (479 samples, 0.02%)</title><rect x="780.1" y="179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="783.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (479 samples, 0.02%)</title><rect x="780.1" y="163.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="783.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (479 samples, 0.02%)</title><rect x="780.1" y="147.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="783.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (479 samples, 0.02%)</title><rect x="780.1" y="131.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="783.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (479 samples, 0.02%)</title><rect x="780.1" y="115.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="783.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (54,239 samples, 2.41%)</title><rect x="780.6" y="387.0" width="28.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="783.6" y="398.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (46,345 samples, 2.06%)</title><rect x="780.6" y="371.0" width="24.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="783.6" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (45,877 samples, 2.04%)</title><rect x="780.9" y="355.0" width="24.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="783.9" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (45,569 samples, 2.02%)</title><rect x="781.0" y="339.0" width="23.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.0" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (45,569 samples, 2.02%)</title><rect x="781.0" y="323.0" width="23.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.0" y="334.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (22,714 samples, 1.01%)</title><rect x="781.0" y="307.0" width="11.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="784.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,393 samples, 0.51%)</title><rect x="781.0" y="291.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="784.0" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,393 samples, 0.51%)</title><rect x="781.0" y="275.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="784.0" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,393 samples, 0.51%)</title><rect x="781.0" y="259.0" width="6.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="784.0" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,321 samples, 0.50%)</title><rect x="787.0" y="291.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.0" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,321 samples, 0.50%)</title><rect x="787.0" y="275.0" width="5.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="790.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (22,855 samples, 1.01%)</title><rect x="792.9" y="307.0" width="12.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.9" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,502 samples, 0.51%)</title><rect x="792.9" y="291.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="795.9" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,502 samples, 0.51%)</title><rect x="792.9" y="275.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.9" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,502 samples, 0.51%)</title><rect x="792.9" y="259.0" width="6.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="795.9" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,353 samples, 0.50%)</title><rect x="798.9" y="291.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.9" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,353 samples, 0.50%)</title><rect x="798.9" y="275.0" width="6.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="801.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (7,894 samples, 0.35%)</title><rect x="804.9" y="371.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="807.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,817 samples, 0.30%)</title><rect x="804.9" y="355.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="807.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,807 samples, 0.30%)</title><rect x="804.9" y="339.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.9" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,524 samples, 0.29%)</title><rect x="805.0" y="323.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.0" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,524 samples, 0.29%)</title><rect x="805.0" y="307.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="808.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,412 samples, 0.28%)</title><rect x="805.1" y="291.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="808.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,412 samples, 0.28%)</title><rect x="805.1" y="275.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,412 samples, 0.28%)</title><rect x="805.1" y="259.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="808.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,412 samples, 0.28%)</title><rect x="805.1" y="243.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,633 samples, 0.21%)</title><rect x="805.1" y="227.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,592 samples, 0.20%)</title><rect x="805.1" y="211.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="808.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,592 samples, 0.20%)</title><rect x="805.1" y="195.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="808.1" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,592 samples, 0.20%)</title><rect x="805.1" y="179.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="808.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,131 samples, 0.05%)</title><rect x="805.4" y="163.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (598 samples, 0.03%)</title><rect x="805.4" y="147.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="808.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (598 samples, 0.03%)</title><rect x="805.4" y="131.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (598 samples, 0.03%)</title><rect x="805.4" y="115.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="808.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (533 samples, 0.02%)</title><rect x="805.7" y="147.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.7" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (533 samples, 0.02%)</title><rect x="805.7" y="131.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="808.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,185 samples, 0.05%)</title><rect x="806.0" y="163.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (602 samples, 0.03%)</title><rect x="806.0" y="147.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.0" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (602 samples, 0.03%)</title><rect x="806.0" y="131.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.0" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (602 samples, 0.03%)</title><rect x="806.0" y="115.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="809.0" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (583 samples, 0.03%)</title><rect x="806.3" y="147.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="809.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (583 samples, 0.03%)</title><rect x="806.3" y="131.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="809.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (588 samples, 0.03%)</title><rect x="806.6" y="163.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="809.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (588 samples, 0.03%)</title><rect x="806.6" y="147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="809.6" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (588 samples, 0.03%)</title><rect x="806.6" y="131.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="809.6" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (588 samples, 0.03%)</title><rect x="806.6" y="115.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="809.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,199 samples, 0.05%)</title><rect x="806.9" y="163.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="809.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (600 samples, 0.03%)</title><rect x="806.9" y="147.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (600 samples, 0.03%)</title><rect x="806.9" y="131.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.9" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (600 samples, 0.03%)</title><rect x="806.9" y="115.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="809.9" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (599 samples, 0.03%)</title><rect x="807.2" y="147.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="810.2" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (599 samples, 0.03%)</title><rect x="807.2" y="131.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="810.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (1,779 samples, 0.08%)</title><rect x="807.5" y="227.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,779 samples, 0.08%)</title><rect x="807.5" y="211.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,779 samples, 0.08%)</title><rect x="807.5" y="195.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="810.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,779 samples, 0.08%)</title><rect x="807.5" y="179.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="810.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,779 samples, 0.08%)</title><rect x="807.5" y="163.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,779 samples, 0.08%)</title><rect x="807.5" y="147.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (1,779 samples, 0.08%)</title><rect x="807.5" y="131.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="810.5" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,779 samples, 0.08%)</title><rect x="807.5" y="115.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="810.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (1,779 samples, 0.08%)</title><rect x="807.5" y="99.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="810.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,779 samples, 0.08%)</title><rect x="807.5" y="83.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="810.5" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,688 samples, 0.07%)</title><rect x="807.5" y="67.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="810.5" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,688 samples, 0.07%)</title><rect x="807.5" y="51.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="810.5" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,688 samples, 0.07%)</title><rect x="807.5" y="35.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="810.5" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,077 samples, 0.05%)</title><rect x="808.5" y="355.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="811.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,056 samples, 0.05%)</title><rect x="808.5" y="339.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="811.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,056 samples, 0.05%)</title><rect x="808.5" y="323.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="811.5" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (556 samples, 0.02%)</title><rect x="808.5" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (556 samples, 0.02%)</title><rect x="808.5" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="811.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (556 samples, 0.02%)</title><rect x="808.5" y="275.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (556 samples, 0.02%)</title><rect x="808.5" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="811.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (556 samples, 0.02%)</title><rect x="808.5" y="243.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="811.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (556 samples, 0.02%)</title><rect x="808.5" y="227.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="811.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (556 samples, 0.02%)</title><rect x="808.5" y="211.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="811.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (556 samples, 0.02%)</title><rect x="808.5" y="195.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="811.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (556 samples, 0.02%)</title><rect x="808.5" y="179.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="811.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (556 samples, 0.02%)</title><rect x="808.5" y="163.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="811.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (556 samples, 0.02%)</title><rect x="808.5" y="147.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="811.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (556 samples, 0.02%)</title><rect x="808.5" y="131.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="811.5" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (556 samples, 0.02%)</title><rect x="808.5" y="115.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="811.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (556 samples, 0.02%)</title><rect x="808.5" y="99.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="811.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (556 samples, 0.02%)</title><rect x="808.5" y="83.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.5" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (553 samples, 0.02%)</title><rect x="808.5" y="67.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="811.5" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (553 samples, 0.02%)</title><rect x="808.5" y="51.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="811.5" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (553 samples, 0.02%)</title><rect x="808.5" y="35.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="811.5" y="46.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (500 samples, 0.02%)</title><rect x="808.8" y="307.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="811.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (500 samples, 0.02%)</title><rect x="808.8" y="291.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.8" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (500 samples, 0.02%)</title><rect x="808.8" y="275.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.8" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (500 samples, 0.02%)</title><rect x="808.8" y="259.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="811.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (500 samples, 0.02%)</title><rect x="808.8" y="243.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="811.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (500 samples, 0.02%)</title><rect x="808.8" y="227.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="811.8" y="238.0"></text>
</g>
<g>
<title>[worker-1 tid=25861] (60,403 samples, 2.68%)</title><rect x="809.3" y="547.0" width="31.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="812.3" y="558.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (60,403 samples, 2.68%)</title><rect x="809.3" y="531.0" width="31.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.3" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (60,403 samples, 2.68%)</title><rect x="809.3" y="515.0" width="31.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="812.3" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (60,403 samples, 2.68%)</title><rect x="809.3" y="499.0" width="31.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="812.3" y="510.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (60,073 samples, 2.67%)</title><rect x="809.4" y="483.0" width="31.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="812.4" y="494.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (60,073 samples, 2.67%)</title><rect x="809.4" y="467.0" width="31.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="812.4" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (59,948 samples, 2.66%)</title><rect x="809.4" y="451.0" width="31.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="812.4" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (59,948 samples, 2.66%)</title><rect x="809.4" y="435.0" width="31.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="812.4" y="446.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (555 samples, 0.02%)</title><rect x="809.4" y="419.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="812.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (59,348 samples, 2.63%)</title><rect x="809.7" y="419.0" width="31.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.7" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (58,995 samples, 2.62%)</title><rect x="809.8" y="403.0" width="30.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="812.8" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,713 samples, 0.21%)</title><rect x="809.8" y="387.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="812.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,287 samples, 0.19%)</title><rect x="809.8" y="371.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="812.8" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2,186 samples, 0.10%)</title><rect x="809.8" y="355.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="812.8" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2,186 samples, 0.10%)</title><rect x="809.8" y="339.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2,186 samples, 0.10%)</title><rect x="809.8" y="323.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="812.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,186 samples, 0.10%)</title><rect x="809.8" y="307.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,186 samples, 0.10%)</title><rect x="809.8" y="291.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="812.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (2,186 samples, 0.10%)</title><rect x="809.8" y="275.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="812.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,186 samples, 0.10%)</title><rect x="809.8" y="259.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.8" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,186 samples, 0.10%)</title><rect x="809.8" y="243.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.8" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,186 samples, 0.10%)</title><rect x="809.8" y="227.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.8" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,186 samples, 0.10%)</title><rect x="809.8" y="211.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="812.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,186 samples, 0.10%)</title><rect x="809.8" y="195.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (2,186 samples, 0.10%)</title><rect x="809.8" y="179.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="812.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,186 samples, 0.10%)</title><rect x="809.8" y="163.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="812.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (2,186 samples, 0.10%)</title><rect x="809.8" y="147.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,186 samples, 0.10%)</title><rect x="809.8" y="131.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="812.8" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,147 samples, 0.10%)</title><rect x="809.8" y="115.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="812.8" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,147 samples, 0.10%)</title><rect x="809.8" y="99.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="812.8" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,147 samples, 0.10%)</title><rect x="809.8" y="83.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="812.8" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,101 samples, 0.09%)</title><rect x="810.9" y="355.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="813.9" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,101 samples, 0.09%)</title><rect x="810.9" y="339.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="813.9" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,101 samples, 0.09%)</title><rect x="810.9" y="323.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="813.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,101 samples, 0.09%)</title><rect x="810.9" y="307.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,101 samples, 0.09%)</title><rect x="810.9" y="291.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="813.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,101 samples, 0.09%)</title><rect x="810.9" y="275.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="813.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,634 samples, 0.07%)</title><rect x="810.9" y="259.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="813.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,613 samples, 0.07%)</title><rect x="810.9" y="243.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="813.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,613 samples, 0.07%)</title><rect x="810.9" y="227.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="813.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,613 samples, 0.07%)</title><rect x="810.9" y="211.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (54,237 samples, 2.41%)</title><rect x="812.3" y="387.0" width="28.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="815.3" y="398.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (46,370 samples, 2.06%)</title><rect x="812.3" y="371.0" width="24.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="815.3" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (45,934 samples, 2.04%)</title><rect x="812.5" y="355.0" width="24.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="815.5" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (45,642 samples, 2.03%)</title><rect x="812.6" y="339.0" width="23.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="815.6" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (45,642 samples, 2.03%)</title><rect x="812.6" y="323.0" width="23.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="815.6" y="334.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (22,768 samples, 1.01%)</title><rect x="812.6" y="307.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="815.6" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,466 samples, 0.51%)</title><rect x="812.6" y="291.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="815.6" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,466 samples, 0.51%)</title><rect x="812.6" y="275.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="815.6" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,466 samples, 0.51%)</title><rect x="812.6" y="259.0" width="6.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="815.6" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,302 samples, 0.50%)</title><rect x="818.6" y="291.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.6" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,302 samples, 0.50%)</title><rect x="818.6" y="275.0" width="6.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="821.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (22,874 samples, 1.01%)</title><rect x="824.6" y="307.0" width="11.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="827.6" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,398 samples, 0.51%)</title><rect x="824.6" y="291.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="827.6" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,398 samples, 0.51%)</title><rect x="824.6" y="275.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="827.6" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,398 samples, 0.51%)</title><rect x="824.6" y="259.0" width="5.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="827.6" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,476 samples, 0.51%)</title><rect x="830.5" y="291.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="833.5" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,476 samples, 0.51%)</title><rect x="830.5" y="275.0" width="6.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="833.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (7,867 samples, 0.35%)</title><rect x="836.5" y="371.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="839.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,785 samples, 0.30%)</title><rect x="836.5" y="355.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="839.5" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,766 samples, 0.30%)</title><rect x="836.5" y="339.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="839.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,487 samples, 0.29%)</title><rect x="836.7" y="323.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="839.7" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,487 samples, 0.29%)</title><rect x="836.7" y="307.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,353 samples, 0.28%)</title><rect x="836.8" y="291.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.8" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,353 samples, 0.28%)</title><rect x="836.8" y="275.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="839.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,353 samples, 0.28%)</title><rect x="836.8" y="259.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="839.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,353 samples, 0.28%)</title><rect x="836.8" y="243.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="839.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,599 samples, 0.20%)</title><rect x="836.8" y="227.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="839.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,538 samples, 0.20%)</title><rect x="836.8" y="211.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="839.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,538 samples, 0.20%)</title><rect x="836.8" y="195.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="839.8" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,538 samples, 0.20%)</title><rect x="836.8" y="179.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="839.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,137 samples, 0.05%)</title><rect x="837.0" y="163.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="840.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (580 samples, 0.03%)</title><rect x="837.0" y="147.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="840.0" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (580 samples, 0.03%)</title><rect x="837.0" y="131.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="840.0" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (580 samples, 0.03%)</title><rect x="837.0" y="115.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="840.0" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (557 samples, 0.02%)</title><rect x="837.4" y="147.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="840.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (557 samples, 0.02%)</title><rect x="837.4" y="131.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="840.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,154 samples, 0.05%)</title><rect x="837.6" y="163.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="840.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (581 samples, 0.03%)</title><rect x="837.6" y="147.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="840.6" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (581 samples, 0.03%)</title><rect x="837.6" y="131.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="840.6" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (581 samples, 0.03%)</title><rect x="837.6" y="115.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="840.6" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (573 samples, 0.03%)</title><rect x="837.9" y="147.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (573 samples, 0.03%)</title><rect x="837.9" y="131.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="840.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (585 samples, 0.03%)</title><rect x="838.2" y="163.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="841.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (585 samples, 0.03%)</title><rect x="838.2" y="147.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="841.2" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (585 samples, 0.03%)</title><rect x="838.2" y="131.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="841.2" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (585 samples, 0.03%)</title><rect x="838.2" y="115.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="841.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,159 samples, 0.05%)</title><rect x="838.6" y="163.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="841.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (610 samples, 0.03%)</title><rect x="838.6" y="147.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="841.6" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (610 samples, 0.03%)</title><rect x="838.6" y="131.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="841.6" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (610 samples, 0.03%)</title><rect x="838.6" y="115.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="841.6" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (549 samples, 0.02%)</title><rect x="838.9" y="147.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (549 samples, 0.02%)</title><rect x="838.9" y="131.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="841.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (1,754 samples, 0.08%)</title><rect x="839.2" y="227.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="842.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,754 samples, 0.08%)</title><rect x="839.2" y="211.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="842.2" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,754 samples, 0.08%)</title><rect x="839.2" y="195.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="842.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,754 samples, 0.08%)</title><rect x="839.2" y="179.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="842.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,754 samples, 0.08%)</title><rect x="839.2" y="163.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="842.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,754 samples, 0.08%)</title><rect x="839.2" y="147.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="842.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (1,754 samples, 0.08%)</title><rect x="839.2" y="131.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="842.2" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,754 samples, 0.08%)</title><rect x="839.2" y="115.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="842.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (1,754 samples, 0.08%)</title><rect x="839.2" y="99.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="842.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,754 samples, 0.08%)</title><rect x="839.2" y="83.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.2" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,660 samples, 0.07%)</title><rect x="839.2" y="67.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="842.2" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,660 samples, 0.07%)</title><rect x="839.2" y="51.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="842.2" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,660 samples, 0.07%)</title><rect x="839.2" y="35.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="842.2" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,082 samples, 0.05%)</title><rect x="840.1" y="355.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="843.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,060 samples, 0.05%)</title><rect x="840.1" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="843.1" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,060 samples, 0.05%)</title><rect x="840.1" y="323.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="843.1" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (542 samples, 0.02%)</title><rect x="840.1" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (542 samples, 0.02%)</title><rect x="840.1" y="291.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="843.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (542 samples, 0.02%)</title><rect x="840.1" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="843.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (542 samples, 0.02%)</title><rect x="840.1" y="259.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="843.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (542 samples, 0.02%)</title><rect x="840.1" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.1" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (542 samples, 0.02%)</title><rect x="840.1" y="227.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="843.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (542 samples, 0.02%)</title><rect x="840.1" y="211.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="843.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (542 samples, 0.02%)</title><rect x="840.1" y="195.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (542 samples, 0.02%)</title><rect x="840.1" y="179.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="843.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (542 samples, 0.02%)</title><rect x="840.1" y="163.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="843.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (542 samples, 0.02%)</title><rect x="840.1" y="147.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="843.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (542 samples, 0.02%)</title><rect x="840.1" y="131.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="843.1" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (542 samples, 0.02%)</title><rect x="840.1" y="115.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="843.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (542 samples, 0.02%)</title><rect x="840.1" y="99.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="843.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (542 samples, 0.02%)</title><rect x="840.1" y="83.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="843.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (539 samples, 0.02%)</title><rect x="840.1" y="67.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="843.1" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (539 samples, 0.02%)</title><rect x="840.1" y="51.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="843.1" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (539 samples, 0.02%)</title><rect x="840.1" y="35.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="843.1" y="46.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (518 samples, 0.02%)</title><rect x="840.4" y="307.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="843.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (518 samples, 0.02%)</title><rect x="840.4" y="291.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="843.4" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (518 samples, 0.02%)</title><rect x="840.4" y="275.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="843.4" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (518 samples, 0.02%)</title><rect x="840.4" y="259.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="843.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (518 samples, 0.02%)</title><rect x="840.4" y="243.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="843.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (518 samples, 0.02%)</title><rect x="840.4" y="227.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="843.4" y="238.0"></text>
</g>
<g>
<title>[worker-1 tid=25864] (60,373 samples, 2.68%)</title><rect x="840.9" y="547.0" width="31.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="843.9" y="558.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (60,373 samples, 2.68%)</title><rect x="840.9" y="531.0" width="31.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="843.9" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (60,373 samples, 2.68%)</title><rect x="840.9" y="515.0" width="31.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="843.9" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (60,373 samples, 2.68%)</title><rect x="840.9" y="499.0" width="31.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="843.9" y="510.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (60,023 samples, 2.66%)</title><rect x="841.1" y="483.0" width="31.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="844.1" y="494.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (60,023 samples, 2.66%)</title><rect x="841.1" y="467.0" width="31.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="844.1" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (59,892 samples, 2.66%)</title><rect x="841.1" y="451.0" width="31.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="844.1" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (59,892 samples, 2.66%)</title><rect x="841.1" y="435.0" width="31.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="844.1" y="446.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (577 samples, 0.03%)</title><rect x="841.1" y="419.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="844.1" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (59,265 samples, 2.63%)</title><rect x="841.4" y="419.0" width="31.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="844.4" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (58,934 samples, 2.61%)</title><rect x="841.4" y="403.0" width="30.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="844.4" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,667 samples, 0.21%)</title><rect x="841.4" y="387.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="844.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,226 samples, 0.19%)</title><rect x="841.4" y="371.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="844.4" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2,074 samples, 0.09%)</title><rect x="841.4" y="355.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="844.4" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2,074 samples, 0.09%)</title><rect x="841.4" y="339.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="844.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2,074 samples, 0.09%)</title><rect x="841.4" y="323.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="844.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,074 samples, 0.09%)</title><rect x="841.4" y="307.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="844.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,074 samples, 0.09%)</title><rect x="841.4" y="291.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="844.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (2,074 samples, 0.09%)</title><rect x="841.4" y="275.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,074 samples, 0.09%)</title><rect x="841.4" y="259.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="844.4" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,074 samples, 0.09%)</title><rect x="841.4" y="243.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="844.4" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,074 samples, 0.09%)</title><rect x="841.4" y="227.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="844.4" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,074 samples, 0.09%)</title><rect x="841.4" y="211.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="844.4" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,074 samples, 0.09%)</title><rect x="841.4" y="195.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="844.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (2,074 samples, 0.09%)</title><rect x="841.4" y="179.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="844.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,074 samples, 0.09%)</title><rect x="841.4" y="163.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="844.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (2,074 samples, 0.09%)</title><rect x="841.4" y="147.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="844.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,074 samples, 0.09%)</title><rect x="841.4" y="131.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="844.4" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,033 samples, 0.09%)</title><rect x="841.4" y="115.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,033 samples, 0.09%)</title><rect x="841.4" y="99.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="844.4" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,033 samples, 0.09%)</title><rect x="841.4" y="83.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="844.4" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,152 samples, 0.10%)</title><rect x="842.5" y="355.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="845.5" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,152 samples, 0.10%)</title><rect x="842.5" y="339.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="845.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,152 samples, 0.10%)</title><rect x="842.5" y="323.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="845.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,152 samples, 0.10%)</title><rect x="842.5" y="307.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="845.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,152 samples, 0.10%)</title><rect x="842.5" y="291.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="845.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,152 samples, 0.10%)</title><rect x="842.5" y="275.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,687 samples, 0.07%)</title><rect x="842.5" y="259.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="845.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,678 samples, 0.07%)</title><rect x="842.5" y="243.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,678 samples, 0.07%)</title><rect x="842.5" y="227.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,678 samples, 0.07%)</title><rect x="842.5" y="211.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="845.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (54,223 samples, 2.41%)</title><rect x="843.9" y="387.0" width="28.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="846.9" y="398.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (46,432 samples, 2.06%)</title><rect x="843.9" y="371.0" width="24.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.9" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (45,994 samples, 2.04%)</title><rect x="844.1" y="355.0" width="24.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="847.1" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (45,714 samples, 2.03%)</title><rect x="844.3" y="339.0" width="23.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="847.3" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (45,714 samples, 2.03%)</title><rect x="844.3" y="323.0" width="23.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="847.3" y="334.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (22,672 samples, 1.01%)</title><rect x="844.3" y="307.0" width="11.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="847.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,327 samples, 0.50%)</title><rect x="844.3" y="291.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="847.3" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,327 samples, 0.50%)</title><rect x="844.3" y="275.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.3" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,327 samples, 0.50%)</title><rect x="844.3" y="259.0" width="5.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="847.3" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,345 samples, 0.50%)</title><rect x="850.2" y="291.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="853.2" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,345 samples, 0.50%)</title><rect x="850.2" y="275.0" width="5.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="853.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (23,042 samples, 1.02%)</title><rect x="856.1" y="307.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="859.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,560 samples, 0.51%)</title><rect x="856.1" y="291.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="859.1" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,560 samples, 0.51%)</title><rect x="856.1" y="275.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="859.1" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,560 samples, 0.51%)</title><rect x="856.1" y="259.0" width="6.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="859.1" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,482 samples, 0.51%)</title><rect x="862.2" y="291.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="865.2" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,482 samples, 0.51%)</title><rect x="862.2" y="275.0" width="6.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="865.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (7,791 samples, 0.35%)</title><rect x="868.2" y="371.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="871.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,650 samples, 0.30%)</title><rect x="868.2" y="355.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="871.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,637 samples, 0.29%)</title><rect x="868.2" y="339.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="871.2" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,357 samples, 0.28%)</title><rect x="868.3" y="323.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="871.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,357 samples, 0.28%)</title><rect x="868.3" y="307.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="871.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,233 samples, 0.28%)</title><rect x="868.4" y="291.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="871.4" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,233 samples, 0.28%)</title><rect x="868.4" y="275.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="871.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,233 samples, 0.28%)</title><rect x="868.4" y="259.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="871.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,233 samples, 0.28%)</title><rect x="868.4" y="243.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="871.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,580 samples, 0.20%)</title><rect x="868.4" y="227.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="871.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,515 samples, 0.20%)</title><rect x="868.4" y="211.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="871.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,515 samples, 0.20%)</title><rect x="868.4" y="195.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="871.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,515 samples, 0.20%)</title><rect x="868.4" y="179.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="871.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,126 samples, 0.05%)</title><rect x="868.7" y="163.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="871.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (590 samples, 0.03%)</title><rect x="868.7" y="147.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="871.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (590 samples, 0.03%)</title><rect x="868.7" y="131.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="871.7" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (590 samples, 0.03%)</title><rect x="868.7" y="115.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="871.7" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (536 samples, 0.02%)</title><rect x="869.0" y="147.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="872.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (536 samples, 0.02%)</title><rect x="869.0" y="131.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="872.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,175 samples, 0.05%)</title><rect x="869.3" y="163.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="872.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (604 samples, 0.03%)</title><rect x="869.3" y="147.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="872.3" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (604 samples, 0.03%)</title><rect x="869.3" y="131.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="872.3" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (604 samples, 0.03%)</title><rect x="869.3" y="115.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="872.3" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (571 samples, 0.03%)</title><rect x="869.6" y="147.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="872.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (571 samples, 0.03%)</title><rect x="869.6" y="131.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="872.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (569 samples, 0.03%)</title><rect x="869.9" y="163.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="872.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (569 samples, 0.03%)</title><rect x="869.9" y="147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="872.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (569 samples, 0.03%)</title><rect x="869.9" y="131.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="872.9" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (569 samples, 0.03%)</title><rect x="869.9" y="115.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="872.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,132 samples, 0.05%)</title><rect x="870.2" y="163.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="873.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (560 samples, 0.02%)</title><rect x="870.2" y="147.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="873.2" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (560 samples, 0.02%)</title><rect x="870.2" y="131.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="873.2" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (560 samples, 0.02%)</title><rect x="870.2" y="115.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="873.2" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (572 samples, 0.03%)</title><rect x="870.5" y="147.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="873.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (572 samples, 0.03%)</title><rect x="870.5" y="131.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="873.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (1,653 samples, 0.07%)</title><rect x="870.8" y="227.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="873.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,653 samples, 0.07%)</title><rect x="870.8" y="211.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="873.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,653 samples, 0.07%)</title><rect x="870.8" y="195.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,653 samples, 0.07%)</title><rect x="870.8" y="179.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="873.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,653 samples, 0.07%)</title><rect x="870.8" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="873.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,653 samples, 0.07%)</title><rect x="870.8" y="147.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="873.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (1,653 samples, 0.07%)</title><rect x="870.8" y="131.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="873.8" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,653 samples, 0.07%)</title><rect x="870.8" y="115.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="873.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (1,653 samples, 0.07%)</title><rect x="870.8" y="99.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="873.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,653 samples, 0.07%)</title><rect x="870.8" y="83.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="873.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,573 samples, 0.07%)</title><rect x="870.8" y="67.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="873.8" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,573 samples, 0.07%)</title><rect x="870.8" y="51.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="873.8" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,573 samples, 0.07%)</title><rect x="870.8" y="35.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="873.8" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,141 samples, 0.05%)</title><rect x="871.7" y="355.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="874.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,122 samples, 0.05%)</title><rect x="871.7" y="339.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="874.7" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,122 samples, 0.05%)</title><rect x="871.7" y="323.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="874.7" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (594 samples, 0.03%)</title><rect x="871.7" y="307.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="874.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (594 samples, 0.03%)</title><rect x="871.7" y="291.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="874.7" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (594 samples, 0.03%)</title><rect x="871.7" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="874.7" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (594 samples, 0.03%)</title><rect x="871.7" y="259.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (594 samples, 0.03%)</title><rect x="871.7" y="243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="874.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (594 samples, 0.03%)</title><rect x="871.7" y="227.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="874.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (594 samples, 0.03%)</title><rect x="871.7" y="211.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="874.7" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (594 samples, 0.03%)</title><rect x="871.7" y="195.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="874.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (594 samples, 0.03%)</title><rect x="871.7" y="179.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="874.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (594 samples, 0.03%)</title><rect x="871.7" y="163.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="874.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (594 samples, 0.03%)</title><rect x="871.7" y="147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="874.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (594 samples, 0.03%)</title><rect x="871.7" y="131.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="874.7" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (594 samples, 0.03%)</title><rect x="871.7" y="115.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="874.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (594 samples, 0.03%)</title><rect x="871.7" y="99.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="874.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (594 samples, 0.03%)</title><rect x="871.7" y="83.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="874.7" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (588 samples, 0.03%)</title><rect x="871.7" y="67.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="874.7" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (588 samples, 0.03%)</title><rect x="871.7" y="51.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="874.7" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (588 samples, 0.03%)</title><rect x="871.7" y="35.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="874.7" y="46.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (528 samples, 0.02%)</title><rect x="872.0" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (528 samples, 0.02%)</title><rect x="872.0" y="291.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.0" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (528 samples, 0.02%)</title><rect x="872.0" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="875.0" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (528 samples, 0.02%)</title><rect x="872.0" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="875.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (528 samples, 0.02%)</title><rect x="872.0" y="243.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="875.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (528 samples, 0.02%)</title><rect x="872.0" y="227.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="875.0" y="238.0"></text>
</g>
<g>
<title>[worker-11 tid=26525] (60,856 samples, 2.70%)</title><rect x="872.5" y="547.0" width="31.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="875.5" y="558.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (60,856 samples, 2.70%)</title><rect x="872.5" y="531.0" width="31.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="875.5" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (60,856 samples, 2.70%)</title><rect x="872.5" y="515.0" width="31.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="875.5" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (60,856 samples, 2.70%)</title><rect x="872.5" y="499.0" width="31.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.5" y="510.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (60,854 samples, 2.70%)</title><rect x="872.5" y="483.0" width="31.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="875.5" y="494.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (60,854 samples, 2.70%)</title><rect x="872.5" y="467.0" width="31.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="875.5" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (60,757 samples, 2.70%)</title><rect x="872.5" y="451.0" width="31.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="875.5" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (60,757 samples, 2.70%)</title><rect x="872.5" y="435.0" width="31.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="875.5" y="446.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (60,624 samples, 2.69%)</title><rect x="872.6" y="419.0" width="31.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="875.6" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (58,374 samples, 2.59%)</title><rect x="872.7" y="403.0" width="30.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="875.7" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,685 samples, 0.21%)</title><rect x="872.7" y="387.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="875.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,280 samples, 0.19%)</title><rect x="872.7" y="371.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.7" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2,130 samples, 0.09%)</title><rect x="872.7" y="355.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="875.7" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2,130 samples, 0.09%)</title><rect x="872.7" y="339.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="875.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2,130 samples, 0.09%)</title><rect x="872.7" y="323.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="875.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,130 samples, 0.09%)</title><rect x="872.7" y="307.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,130 samples, 0.09%)</title><rect x="872.7" y="291.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="875.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (2,130 samples, 0.09%)</title><rect x="872.7" y="275.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,130 samples, 0.09%)</title><rect x="872.7" y="259.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.7" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,130 samples, 0.09%)</title><rect x="872.7" y="243.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="875.7" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,130 samples, 0.09%)</title><rect x="872.7" y="227.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="875.7" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,130 samples, 0.09%)</title><rect x="872.7" y="211.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="875.7" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,130 samples, 0.09%)</title><rect x="872.7" y="195.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="875.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (2,130 samples, 0.09%)</title><rect x="872.7" y="179.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="875.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,130 samples, 0.09%)</title><rect x="872.7" y="163.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="875.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (2,130 samples, 0.09%)</title><rect x="872.7" y="147.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="875.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,130 samples, 0.09%)</title><rect x="872.7" y="131.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.7" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,100 samples, 0.09%)</title><rect x="872.7" y="115.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="875.7" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,100 samples, 0.09%)</title><rect x="872.7" y="99.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="875.7" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,100 samples, 0.09%)</title><rect x="872.7" y="83.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="875.7" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,150 samples, 0.10%)</title><rect x="873.8" y="355.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="876.8" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,150 samples, 0.10%)</title><rect x="873.8" y="339.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="876.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,150 samples, 0.10%)</title><rect x="873.8" y="323.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="876.8" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,150 samples, 0.10%)</title><rect x="873.8" y="307.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="876.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,150 samples, 0.10%)</title><rect x="873.8" y="291.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,150 samples, 0.10%)</title><rect x="873.8" y="275.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="876.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,684 samples, 0.07%)</title><rect x="873.8" y="259.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,671 samples, 0.07%)</title><rect x="873.8" y="243.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="876.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,671 samples, 0.07%)</title><rect x="873.8" y="227.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="876.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,671 samples, 0.07%)</title><rect x="873.8" y="211.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="876.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (53,637 samples, 2.38%)</title><rect x="875.1" y="387.0" width="28.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="878.1" y="398.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (45,887 samples, 2.04%)</title><rect x="875.1" y="371.0" width="24.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.1" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (45,435 samples, 2.02%)</title><rect x="875.4" y="355.0" width="23.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="878.4" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (45,174 samples, 2.00%)</title><rect x="875.5" y="339.0" width="23.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="878.5" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (45,174 samples, 2.00%)</title><rect x="875.5" y="323.0" width="23.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.5" y="334.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (22,611 samples, 1.00%)</title><rect x="875.5" y="307.0" width="11.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="878.5" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,413 samples, 0.51%)</title><rect x="875.5" y="291.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="878.5" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,413 samples, 0.51%)</title><rect x="875.5" y="275.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="878.5" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,413 samples, 0.51%)</title><rect x="875.5" y="259.0" width="6.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="878.5" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,198 samples, 0.50%)</title><rect x="881.5" y="291.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="884.5" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,198 samples, 0.50%)</title><rect x="881.5" y="275.0" width="5.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="884.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (22,563 samples, 1.00%)</title><rect x="887.3" y="307.0" width="11.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="890.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,264 samples, 0.50%)</title><rect x="887.3" y="291.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="890.3" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,264 samples, 0.50%)</title><rect x="887.3" y="275.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="890.3" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,264 samples, 0.50%)</title><rect x="887.3" y="259.0" width="5.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="890.3" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,299 samples, 0.50%)</title><rect x="893.2" y="291.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="896.2" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,299 samples, 0.50%)</title><rect x="893.2" y="275.0" width="6.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="896.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (7,750 samples, 0.34%)</title><rect x="899.2" y="371.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="902.2" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,634 samples, 0.29%)</title><rect x="899.2" y="355.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="902.2" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,613 samples, 0.29%)</title><rect x="899.2" y="339.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="902.2" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,349 samples, 0.28%)</title><rect x="899.3" y="323.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="902.3" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,349 samples, 0.28%)</title><rect x="899.3" y="307.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="902.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,199 samples, 0.28%)</title><rect x="899.4" y="291.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="902.4" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,199 samples, 0.28%)</title><rect x="899.4" y="275.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="902.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,199 samples, 0.28%)</title><rect x="899.4" y="259.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.4" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,199 samples, 0.28%)</title><rect x="899.4" y="243.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="902.4" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,469 samples, 0.20%)</title><rect x="899.4" y="227.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="902.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,415 samples, 0.20%)</title><rect x="899.4" y="211.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="902.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,415 samples, 0.20%)</title><rect x="899.4" y="195.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.4" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,415 samples, 0.20%)</title><rect x="899.4" y="179.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="902.4" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,059 samples, 0.05%)</title><rect x="899.7" y="163.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="902.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (507 samples, 0.02%)</title><rect x="899.7" y="147.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="902.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (507 samples, 0.02%)</title><rect x="899.7" y="131.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="902.7" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (507 samples, 0.02%)</title><rect x="899.7" y="115.0" width="0.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="902.7" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (552 samples, 0.02%)</title><rect x="899.9" y="147.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (552 samples, 0.02%)</title><rect x="899.9" y="131.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="902.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,120 samples, 0.05%)</title><rect x="900.2" y="163.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="903.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (575 samples, 0.03%)</title><rect x="900.2" y="147.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="903.2" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (575 samples, 0.03%)</title><rect x="900.2" y="131.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="903.2" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (575 samples, 0.03%)</title><rect x="900.2" y="115.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="903.2" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (545 samples, 0.02%)</title><rect x="900.5" y="147.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="903.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (545 samples, 0.02%)</title><rect x="900.5" y="131.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="903.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (575 samples, 0.03%)</title><rect x="900.8" y="163.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="903.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (575 samples, 0.03%)</title><rect x="900.8" y="147.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="903.8" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (575 samples, 0.03%)</title><rect x="900.8" y="131.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="903.8" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (575 samples, 0.03%)</title><rect x="900.8" y="115.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="903.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,170 samples, 0.05%)</title><rect x="901.1" y="163.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (576 samples, 0.03%)</title><rect x="901.1" y="147.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="904.1" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (576 samples, 0.03%)</title><rect x="901.1" y="131.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="904.1" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (576 samples, 0.03%)</title><rect x="901.1" y="115.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="904.1" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (594 samples, 0.03%)</title><rect x="901.4" y="147.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (594 samples, 0.03%)</title><rect x="901.4" y="131.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="904.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (1,730 samples, 0.08%)</title><rect x="901.7" y="227.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="904.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,730 samples, 0.08%)</title><rect x="901.7" y="211.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="904.7" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,730 samples, 0.08%)</title><rect x="901.7" y="195.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="904.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,730 samples, 0.08%)</title><rect x="901.7" y="179.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="904.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,730 samples, 0.08%)</title><rect x="901.7" y="163.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="904.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,730 samples, 0.08%)</title><rect x="901.7" y="147.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="904.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (1,730 samples, 0.08%)</title><rect x="901.7" y="131.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="904.7" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,730 samples, 0.08%)</title><rect x="901.7" y="115.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="904.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (1,730 samples, 0.08%)</title><rect x="901.7" y="99.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="904.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,730 samples, 0.08%)</title><rect x="901.7" y="83.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="904.7" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,640 samples, 0.07%)</title><rect x="901.7" y="67.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="904.7" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,640 samples, 0.07%)</title><rect x="901.7" y="51.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="904.7" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,640 samples, 0.07%)</title><rect x="901.7" y="35.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="904.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,116 samples, 0.05%)</title><rect x="902.6" y="355.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,100 samples, 0.05%)</title><rect x="902.6" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="905.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,100 samples, 0.05%)</title><rect x="902.6" y="323.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.6" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (532 samples, 0.02%)</title><rect x="902.6" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (532 samples, 0.02%)</title><rect x="902.6" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="905.6" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (532 samples, 0.02%)</title><rect x="902.6" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (532 samples, 0.02%)</title><rect x="902.6" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="905.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (532 samples, 0.02%)</title><rect x="902.6" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="905.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (532 samples, 0.02%)</title><rect x="902.6" y="227.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (532 samples, 0.02%)</title><rect x="902.6" y="211.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (532 samples, 0.02%)</title><rect x="902.6" y="195.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (532 samples, 0.02%)</title><rect x="902.6" y="179.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="905.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (532 samples, 0.02%)</title><rect x="902.6" y="163.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="905.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (532 samples, 0.02%)</title><rect x="902.6" y="147.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="905.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (532 samples, 0.02%)</title><rect x="902.6" y="131.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="905.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (532 samples, 0.02%)</title><rect x="902.6" y="115.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="905.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (532 samples, 0.02%)</title><rect x="902.6" y="99.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="905.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (532 samples, 0.02%)</title><rect x="902.6" y="83.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.6" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (531 samples, 0.02%)</title><rect x="902.6" y="67.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="905.6" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (531 samples, 0.02%)</title><rect x="902.6" y="51.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="905.6" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (531 samples, 0.02%)</title><rect x="902.6" y="35.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="905.6" y="46.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (568 samples, 0.03%)</title><rect x="902.9" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (568 samples, 0.03%)</title><rect x="902.9" y="291.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="905.9" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (568 samples, 0.03%)</title><rect x="902.9" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="905.9" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (568 samples, 0.03%)</title><rect x="902.9" y="259.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="905.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (568 samples, 0.03%)</title><rect x="902.9" y="243.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="905.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (568 samples, 0.03%)</title><rect x="902.9" y="227.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="905.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (874 samples, 0.04%)</title><rect x="903.2" y="403.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="906.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.from (514 samples, 0.02%)</title><rect x="903.7" y="403.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.7" y="414.0"></text>
</g>
<g>
<title>[worker-12 tid=26526] (60,716 samples, 2.69%)</title><rect x="904.4" y="547.0" width="31.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="907.4" y="558.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (60,716 samples, 2.69%)</title><rect x="904.4" y="531.0" width="31.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.4" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (60,716 samples, 2.69%)</title><rect x="904.4" y="515.0" width="31.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="907.4" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (60,716 samples, 2.69%)</title><rect x="904.4" y="499.0" width="31.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="907.4" y="510.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (60,716 samples, 2.69%)</title><rect x="904.4" y="483.0" width="31.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.4" y="494.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (60,716 samples, 2.69%)</title><rect x="904.4" y="467.0" width="31.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="907.4" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (60,618 samples, 2.69%)</title><rect x="904.4" y="451.0" width="31.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="907.4" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (60,618 samples, 2.69%)</title><rect x="904.4" y="435.0" width="31.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="907.4" y="446.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (60,489 samples, 2.68%)</title><rect x="904.4" y="419.0" width="31.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="907.4" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (58,248 samples, 2.58%)</title><rect x="904.5" y="403.0" width="30.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="907.5" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,600 samples, 0.20%)</title><rect x="904.5" y="387.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.5" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,177 samples, 0.19%)</title><rect x="904.5" y="371.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="907.5" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2,052 samples, 0.09%)</title><rect x="904.5" y="355.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="907.5" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2,052 samples, 0.09%)</title><rect x="904.5" y="339.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="907.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2,052 samples, 0.09%)</title><rect x="904.5" y="323.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="907.5" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,052 samples, 0.09%)</title><rect x="904.5" y="307.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="907.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,052 samples, 0.09%)</title><rect x="904.5" y="291.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="907.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (2,052 samples, 0.09%)</title><rect x="904.5" y="275.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="907.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,052 samples, 0.09%)</title><rect x="904.5" y="259.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="907.5" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,052 samples, 0.09%)</title><rect x="904.5" y="243.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.5" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,052 samples, 0.09%)</title><rect x="904.5" y="227.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="907.5" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,052 samples, 0.09%)</title><rect x="904.5" y="211.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="907.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,052 samples, 0.09%)</title><rect x="904.5" y="195.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="907.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (2,052 samples, 0.09%)</title><rect x="904.5" y="179.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="907.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,052 samples, 0.09%)</title><rect x="904.5" y="163.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="907.5" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (2,052 samples, 0.09%)</title><rect x="904.5" y="147.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,052 samples, 0.09%)</title><rect x="904.5" y="131.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="907.5" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,015 samples, 0.09%)</title><rect x="904.5" y="115.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="907.5" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,015 samples, 0.09%)</title><rect x="904.5" y="99.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="907.5" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,015 samples, 0.09%)</title><rect x="904.5" y="83.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="907.5" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,125 samples, 0.09%)</title><rect x="905.6" y="355.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="908.6" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,125 samples, 0.09%)</title><rect x="905.6" y="339.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="908.6" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,125 samples, 0.09%)</title><rect x="905.6" y="323.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="908.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,125 samples, 0.09%)</title><rect x="905.6" y="307.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="908.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,125 samples, 0.09%)</title><rect x="905.6" y="291.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="908.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,125 samples, 0.09%)</title><rect x="905.6" y="275.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="908.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,621 samples, 0.07%)</title><rect x="905.6" y="259.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="908.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,613 samples, 0.07%)</title><rect x="905.6" y="243.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="908.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,613 samples, 0.07%)</title><rect x="905.6" y="227.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,613 samples, 0.07%)</title><rect x="905.6" y="211.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (504 samples, 0.02%)</title><rect x="906.4" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="909.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (504 samples, 0.02%)</title><rect x="906.4" y="243.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="909.4" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (504 samples, 0.02%)</title><rect x="906.4" y="227.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="909.4" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (504 samples, 0.02%)</title><rect x="906.4" y="211.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="909.4" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (504 samples, 0.02%)</title><rect x="906.4" y="195.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="909.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (504 samples, 0.02%)</title><rect x="906.4" y="179.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="909.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (504 samples, 0.02%)</title><rect x="906.4" y="163.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="909.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (504 samples, 0.02%)</title><rect x="906.4" y="147.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="909.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (504 samples, 0.02%)</title><rect x="906.4" y="131.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="909.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (504 samples, 0.02%)</title><rect x="906.4" y="115.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="909.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (492 samples, 0.02%)</title><rect x="906.4" y="99.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="909.4" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (492 samples, 0.02%)</title><rect x="906.4" y="83.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="909.4" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (492 samples, 0.02%)</title><rect x="906.4" y="67.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="909.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (53,598 samples, 2.38%)</title><rect x="906.9" y="387.0" width="28.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="909.9" y="398.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (45,959 samples, 2.04%)</title><rect x="906.9" y="371.0" width="24.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="909.9" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (45,512 samples, 2.02%)</title><rect x="907.2" y="355.0" width="23.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="910.2" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (45,242 samples, 2.01%)</title><rect x="907.3" y="339.0" width="23.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="910.3" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (45,242 samples, 2.01%)</title><rect x="907.3" y="323.0" width="23.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="910.3" y="334.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (22,636 samples, 1.00%)</title><rect x="907.3" y="307.0" width="11.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="910.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,336 samples, 0.50%)</title><rect x="907.3" y="291.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="910.3" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,336 samples, 0.50%)</title><rect x="907.3" y="275.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="910.3" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,336 samples, 0.50%)</title><rect x="907.3" y="259.0" width="5.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="910.3" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,300 samples, 0.50%)</title><rect x="913.2" y="291.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.2" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,300 samples, 0.50%)</title><rect x="913.2" y="275.0" width="6.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="916.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (22,606 samples, 1.00%)</title><rect x="919.2" y="307.0" width="11.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="922.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,386 samples, 0.51%)</title><rect x="919.2" y="291.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="922.2" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,386 samples, 0.51%)</title><rect x="919.2" y="275.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="922.2" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,386 samples, 0.51%)</title><rect x="919.2" y="259.0" width="5.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="922.2" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,220 samples, 0.50%)</title><rect x="925.1" y="291.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="928.1" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,220 samples, 0.50%)</title><rect x="925.1" y="275.0" width="5.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="928.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (7,639 samples, 0.34%)</title><rect x="931.0" y="371.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="934.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,602 samples, 0.29%)</title><rect x="931.0" y="355.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="934.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,593 samples, 0.29%)</title><rect x="931.0" y="339.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="934.0" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,316 samples, 0.28%)</title><rect x="931.1" y="323.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="934.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,316 samples, 0.28%)</title><rect x="931.1" y="307.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="934.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,199 samples, 0.28%)</title><rect x="931.2" y="291.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="934.2" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,199 samples, 0.28%)</title><rect x="931.2" y="275.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="934.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,199 samples, 0.28%)</title><rect x="931.2" y="259.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="934.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,199 samples, 0.28%)</title><rect x="931.2" y="243.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="934.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,536 samples, 0.20%)</title><rect x="931.2" y="227.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="934.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,482 samples, 0.20%)</title><rect x="931.2" y="211.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="934.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,482 samples, 0.20%)</title><rect x="931.2" y="195.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="934.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,482 samples, 0.20%)</title><rect x="931.2" y="179.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="934.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,134 samples, 0.05%)</title><rect x="931.5" y="163.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="934.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (596 samples, 0.03%)</title><rect x="931.5" y="147.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="934.5" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (596 samples, 0.03%)</title><rect x="931.5" y="131.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="934.5" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (596 samples, 0.03%)</title><rect x="931.5" y="115.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="934.5" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (538 samples, 0.02%)</title><rect x="931.8" y="147.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="934.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (538 samples, 0.02%)</title><rect x="931.8" y="131.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="934.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,178 samples, 0.05%)</title><rect x="932.1" y="163.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="935.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (574 samples, 0.03%)</title><rect x="932.1" y="147.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="935.1" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (574 samples, 0.03%)</title><rect x="932.1" y="131.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="935.1" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (574 samples, 0.03%)</title><rect x="932.1" y="115.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="935.1" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (604 samples, 0.03%)</title><rect x="932.4" y="147.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="935.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (604 samples, 0.03%)</title><rect x="932.4" y="131.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="935.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (589 samples, 0.03%)</title><rect x="932.7" y="163.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="935.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (589 samples, 0.03%)</title><rect x="932.7" y="147.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="935.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (589 samples, 0.03%)</title><rect x="932.7" y="131.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="935.7" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (589 samples, 0.03%)</title><rect x="932.7" y="115.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="935.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,089 samples, 0.05%)</title><rect x="933.0" y="163.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="936.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (557 samples, 0.02%)</title><rect x="933.0" y="147.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="936.0" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (557 samples, 0.02%)</title><rect x="933.0" y="131.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="936.0" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (557 samples, 0.02%)</title><rect x="933.0" y="115.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="936.0" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (532 samples, 0.02%)</title><rect x="933.3" y="147.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="936.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (532 samples, 0.02%)</title><rect x="933.3" y="131.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="936.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (1,663 samples, 0.07%)</title><rect x="933.6" y="227.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="936.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,663 samples, 0.07%)</title><rect x="933.6" y="211.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="936.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,663 samples, 0.07%)</title><rect x="933.6" y="195.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="936.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,663 samples, 0.07%)</title><rect x="933.6" y="179.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="936.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,663 samples, 0.07%)</title><rect x="933.6" y="163.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="936.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,663 samples, 0.07%)</title><rect x="933.6" y="147.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="936.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (1,663 samples, 0.07%)</title><rect x="933.6" y="131.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="936.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,663 samples, 0.07%)</title><rect x="933.6" y="115.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="936.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (1,663 samples, 0.07%)</title><rect x="933.6" y="99.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="936.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,663 samples, 0.07%)</title><rect x="933.6" y="83.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="936.6" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,589 samples, 0.07%)</title><rect x="933.6" y="67.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="936.6" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,589 samples, 0.07%)</title><rect x="933.6" y="51.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="936.6" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,589 samples, 0.07%)</title><rect x="933.6" y="35.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="936.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,037 samples, 0.05%)</title><rect x="934.4" y="355.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="937.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,023 samples, 0.05%)</title><rect x="934.5" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="937.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,023 samples, 0.05%)</title><rect x="934.5" y="323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="937.5" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (533 samples, 0.02%)</title><rect x="934.5" y="307.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="937.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (533 samples, 0.02%)</title><rect x="934.5" y="291.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="937.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (533 samples, 0.02%)</title><rect x="934.5" y="275.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="937.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (533 samples, 0.02%)</title><rect x="934.5" y="259.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="937.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (533 samples, 0.02%)</title><rect x="934.5" y="243.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (533 samples, 0.02%)</title><rect x="934.5" y="227.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="937.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (533 samples, 0.02%)</title><rect x="934.5" y="211.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="937.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (533 samples, 0.02%)</title><rect x="934.5" y="195.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="937.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (533 samples, 0.02%)</title><rect x="934.5" y="179.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="937.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (533 samples, 0.02%)</title><rect x="934.5" y="163.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="937.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (533 samples, 0.02%)</title><rect x="934.5" y="147.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (533 samples, 0.02%)</title><rect x="934.5" y="131.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="937.5" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (533 samples, 0.02%)</title><rect x="934.5" y="115.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="937.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (533 samples, 0.02%)</title><rect x="934.5" y="99.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="937.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (533 samples, 0.02%)</title><rect x="934.5" y="83.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="937.5" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (531 samples, 0.02%)</title><rect x="934.5" y="67.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="937.5" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (531 samples, 0.02%)</title><rect x="934.5" y="51.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="937.5" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (531 samples, 0.02%)</title><rect x="934.5" y="35.0" width="0.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="937.5" y="46.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (490 samples, 0.02%)</title><rect x="934.7" y="307.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="937.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (490 samples, 0.02%)</title><rect x="934.7" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="937.7" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (490 samples, 0.02%)</title><rect x="934.7" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="937.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (490 samples, 0.02%)</title><rect x="934.7" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="937.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (490 samples, 0.02%)</title><rect x="934.7" y="243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="937.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (490 samples, 0.02%)</title><rect x="934.7" y="227.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="937.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (890 samples, 0.04%)</title><rect x="935.0" y="403.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="938.0" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.from (503 samples, 0.02%)</title><rect x="935.5" y="403.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="938.5" y="414.0"></text>
</g>
<g>
<title>[worker-2 tid=25863] (60,562 samples, 2.69%)</title><rect x="936.1" y="547.0" width="31.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="939.1" y="558.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (60,562 samples, 2.69%)</title><rect x="936.1" y="531.0" width="31.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="939.1" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (60,562 samples, 2.69%)</title><rect x="936.1" y="515.0" width="31.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="939.1" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (60,562 samples, 2.69%)</title><rect x="936.1" y="499.0" width="31.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="939.1" y="510.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (60,244 samples, 2.67%)</title><rect x="936.3" y="483.0" width="31.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="939.3" y="494.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (60,244 samples, 2.67%)</title><rect x="936.3" y="467.0" width="31.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="939.3" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (60,116 samples, 2.67%)</title><rect x="936.3" y="451.0" width="31.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="939.3" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (60,116 samples, 2.67%)</title><rect x="936.3" y="435.0" width="31.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="939.3" y="446.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (589 samples, 0.03%)</title><rect x="936.3" y="419.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="939.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (59,470 samples, 2.64%)</title><rect x="936.7" y="419.0" width="31.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="939.7" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (59,096 samples, 2.62%)</title><rect x="936.7" y="403.0" width="30.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="939.7" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,669 samples, 0.21%)</title><rect x="936.7" y="387.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="939.7" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,245 samples, 0.19%)</title><rect x="936.7" y="371.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="939.7" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2,147 samples, 0.10%)</title><rect x="936.7" y="355.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="939.7" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2,147 samples, 0.10%)</title><rect x="936.7" y="339.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="939.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2,147 samples, 0.10%)</title><rect x="936.7" y="323.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="939.7" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,147 samples, 0.10%)</title><rect x="936.7" y="307.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="939.7" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,147 samples, 0.10%)</title><rect x="936.7" y="291.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="939.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (2,147 samples, 0.10%)</title><rect x="936.7" y="275.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="939.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,147 samples, 0.10%)</title><rect x="936.7" y="259.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="939.7" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,147 samples, 0.10%)</title><rect x="936.7" y="243.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="939.7" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,147 samples, 0.10%)</title><rect x="936.7" y="227.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="939.7" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,147 samples, 0.10%)</title><rect x="936.7" y="211.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="939.7" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,147 samples, 0.10%)</title><rect x="936.7" y="195.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="939.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (2,147 samples, 0.10%)</title><rect x="936.7" y="179.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="939.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,147 samples, 0.10%)</title><rect x="936.7" y="163.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="939.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (2,147 samples, 0.10%)</title><rect x="936.7" y="147.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="939.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,147 samples, 0.10%)</title><rect x="936.7" y="131.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="939.7" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,112 samples, 0.09%)</title><rect x="936.7" y="115.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="939.7" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,112 samples, 0.09%)</title><rect x="936.7" y="99.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="939.7" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,112 samples, 0.09%)</title><rect x="936.7" y="83.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="939.7" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,098 samples, 0.09%)</title><rect x="937.8" y="355.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="940.8" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,098 samples, 0.09%)</title><rect x="937.8" y="339.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="940.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,098 samples, 0.09%)</title><rect x="937.8" y="323.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="940.8" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,098 samples, 0.09%)</title><rect x="937.8" y="307.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="940.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,098 samples, 0.09%)</title><rect x="937.8" y="291.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="940.8" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,098 samples, 0.09%)</title><rect x="937.8" y="275.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="940.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,632 samples, 0.07%)</title><rect x="937.8" y="259.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="940.8" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,620 samples, 0.07%)</title><rect x="937.8" y="243.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="940.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,620 samples, 0.07%)</title><rect x="937.8" y="227.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="940.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,620 samples, 0.07%)</title><rect x="937.8" y="211.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="940.8" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (54,379 samples, 2.41%)</title><rect x="939.1" y="387.0" width="28.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="942.1" y="398.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (46,416 samples, 2.06%)</title><rect x="939.1" y="371.0" width="24.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="942.1" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (45,973 samples, 2.04%)</title><rect x="939.4" y="355.0" width="24.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="942.4" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (45,701 samples, 2.03%)</title><rect x="939.5" y="339.0" width="23.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="942.5" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (45,701 samples, 2.03%)</title><rect x="939.5" y="323.0" width="23.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="942.5" y="334.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (22,699 samples, 1.01%)</title><rect x="939.5" y="307.0" width="11.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="942.5" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,195 samples, 0.50%)</title><rect x="939.5" y="291.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="942.5" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,195 samples, 0.50%)</title><rect x="939.5" y="275.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="942.5" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,195 samples, 0.50%)</title><rect x="939.5" y="259.0" width="5.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="942.5" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,504 samples, 0.51%)</title><rect x="945.4" y="291.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="948.4" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,504 samples, 0.51%)</title><rect x="945.4" y="275.0" width="6.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="948.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (23,002 samples, 1.02%)</title><rect x="951.4" y="307.0" width="12.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="954.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,598 samples, 0.51%)</title><rect x="951.4" y="291.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="954.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,598 samples, 0.51%)</title><rect x="951.4" y="275.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="954.4" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,598 samples, 0.51%)</title><rect x="951.4" y="259.0" width="6.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="954.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,404 samples, 0.51%)</title><rect x="957.5" y="291.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="960.5" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,404 samples, 0.51%)</title><rect x="957.5" y="275.0" width="5.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="960.5" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (7,963 samples, 0.35%)</title><rect x="963.4" y="371.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="966.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,863 samples, 0.30%)</title><rect x="963.4" y="355.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="966.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,844 samples, 0.30%)</title><rect x="963.4" y="339.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="966.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,582 samples, 0.29%)</title><rect x="963.6" y="323.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="966.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,582 samples, 0.29%)</title><rect x="963.6" y="307.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="966.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,465 samples, 0.29%)</title><rect x="963.6" y="291.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="966.6" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,465 samples, 0.29%)</title><rect x="963.6" y="275.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="966.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,465 samples, 0.29%)</title><rect x="963.6" y="259.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="966.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,465 samples, 0.29%)</title><rect x="963.6" y="243.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="966.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,657 samples, 0.21%)</title><rect x="963.6" y="227.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="966.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,601 samples, 0.20%)</title><rect x="963.7" y="211.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="966.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,601 samples, 0.20%)</title><rect x="963.7" y="195.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="966.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,601 samples, 0.20%)</title><rect x="963.7" y="179.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="966.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,202 samples, 0.05%)</title><rect x="963.9" y="163.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="966.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (623 samples, 0.03%)</title><rect x="963.9" y="147.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="966.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (623 samples, 0.03%)</title><rect x="963.9" y="131.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="966.9" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (623 samples, 0.03%)</title><rect x="963.9" y="115.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="966.9" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (579 samples, 0.03%)</title><rect x="964.2" y="147.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.2" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (579 samples, 0.03%)</title><rect x="964.2" y="131.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="967.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,179 samples, 0.05%)</title><rect x="964.6" y="163.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="967.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (601 samples, 0.03%)</title><rect x="964.6" y="147.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="967.6" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (601 samples, 0.03%)</title><rect x="964.6" y="131.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.6" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (601 samples, 0.03%)</title><rect x="964.6" y="115.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="967.6" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (578 samples, 0.03%)</title><rect x="964.9" y="147.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="967.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (578 samples, 0.03%)</title><rect x="964.9" y="131.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="967.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (582 samples, 0.03%)</title><rect x="965.2" y="163.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="968.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (582 samples, 0.03%)</title><rect x="965.2" y="147.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="968.2" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (582 samples, 0.03%)</title><rect x="965.2" y="131.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="968.2" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (582 samples, 0.03%)</title><rect x="965.2" y="115.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="968.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,150 samples, 0.05%)</title><rect x="965.5" y="163.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="968.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (589 samples, 0.03%)</title><rect x="965.5" y="147.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="968.5" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (589 samples, 0.03%)</title><rect x="965.5" y="131.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.5" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (589 samples, 0.03%)</title><rect x="965.5" y="115.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="968.5" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (561 samples, 0.02%)</title><rect x="965.8" y="147.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (561 samples, 0.02%)</title><rect x="965.8" y="131.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="968.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (1,808 samples, 0.08%)</title><rect x="966.1" y="227.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="969.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,808 samples, 0.08%)</title><rect x="966.1" y="211.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,808 samples, 0.08%)</title><rect x="966.1" y="195.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,808 samples, 0.08%)</title><rect x="966.1" y="179.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="969.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,808 samples, 0.08%)</title><rect x="966.1" y="163.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="969.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,808 samples, 0.08%)</title><rect x="966.1" y="147.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (1,808 samples, 0.08%)</title><rect x="966.1" y="131.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="969.1" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,808 samples, 0.08%)</title><rect x="966.1" y="115.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="969.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (1,808 samples, 0.08%)</title><rect x="966.1" y="99.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="969.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,808 samples, 0.08%)</title><rect x="966.1" y="83.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="969.1" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,709 samples, 0.08%)</title><rect x="966.1" y="67.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="969.1" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,709 samples, 0.08%)</title><rect x="966.1" y="51.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="969.1" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,709 samples, 0.08%)</title><rect x="966.1" y="35.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="969.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,100 samples, 0.05%)</title><rect x="967.0" y="355.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="970.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,084 samples, 0.05%)</title><rect x="967.0" y="339.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="970.0" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,084 samples, 0.05%)</title><rect x="967.0" y="323.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="970.0" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (552 samples, 0.02%)</title><rect x="967.0" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="970.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (552 samples, 0.02%)</title><rect x="967.0" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="970.0" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (552 samples, 0.02%)</title><rect x="967.0" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="970.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (552 samples, 0.02%)</title><rect x="967.0" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="970.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (552 samples, 0.02%)</title><rect x="967.0" y="243.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="970.0" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (552 samples, 0.02%)</title><rect x="967.0" y="227.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="970.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (552 samples, 0.02%)</title><rect x="967.0" y="211.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="970.0" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (552 samples, 0.02%)</title><rect x="967.0" y="195.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="970.0" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (552 samples, 0.02%)</title><rect x="967.0" y="179.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (552 samples, 0.02%)</title><rect x="967.0" y="163.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="970.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (552 samples, 0.02%)</title><rect x="967.0" y="147.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (552 samples, 0.02%)</title><rect x="967.0" y="131.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="970.0" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (552 samples, 0.02%)</title><rect x="967.0" y="115.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="970.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (552 samples, 0.02%)</title><rect x="967.0" y="99.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (552 samples, 0.02%)</title><rect x="967.0" y="83.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="970.0" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (547 samples, 0.02%)</title><rect x="967.0" y="67.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="970.0" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (547 samples, 0.02%)</title><rect x="967.0" y="51.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="970.0" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (547 samples, 0.02%)</title><rect x="967.0" y="35.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="970.0" y="46.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (532 samples, 0.02%)</title><rect x="967.3" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="970.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (532 samples, 0.02%)</title><rect x="967.3" y="291.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (532 samples, 0.02%)</title><rect x="967.3" y="275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="970.3" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (532 samples, 0.02%)</title><rect x="967.3" y="259.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="970.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (532 samples, 0.02%)</title><rect x="967.3" y="243.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (532 samples, 0.02%)</title><rect x="967.3" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="970.3" y="238.0"></text>
</g>
<g>
<title>[worker-2 tid=25868] (60,586 samples, 2.69%)</title><rect x="967.9" y="547.0" width="31.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="970.9" y="558.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (60,586 samples, 2.69%)</title><rect x="967.9" y="531.0" width="31.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="970.9" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (60,586 samples, 2.69%)</title><rect x="967.9" y="515.0" width="31.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="970.9" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (60,586 samples, 2.69%)</title><rect x="967.9" y="499.0" width="31.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="970.9" y="510.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (60,232 samples, 2.67%)</title><rect x="968.0" y="483.0" width="31.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="971.0" y="494.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (60,232 samples, 2.67%)</title><rect x="968.0" y="467.0" width="31.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.0" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (60,107 samples, 2.67%)</title><rect x="968.0" y="451.0" width="31.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="971.0" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (60,107 samples, 2.67%)</title><rect x="968.0" y="435.0" width="31.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.0" y="446.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (559 samples, 0.02%)</title><rect x="968.0" y="419.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="971.0" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (59,498 samples, 2.64%)</title><rect x="968.4" y="419.0" width="31.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="971.4" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (59,133 samples, 2.62%)</title><rect x="968.4" y="403.0" width="31.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="971.4" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,627 samples, 0.21%)</title><rect x="968.4" y="387.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,199 samples, 0.19%)</title><rect x="968.4" y="371.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="971.4" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2,102 samples, 0.09%)</title><rect x="968.4" y="355.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="971.4" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2,102 samples, 0.09%)</title><rect x="968.4" y="339.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2,102 samples, 0.09%)</title><rect x="968.4" y="323.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="971.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,102 samples, 0.09%)</title><rect x="968.4" y="307.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="971.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,102 samples, 0.09%)</title><rect x="968.4" y="291.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="971.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (2,102 samples, 0.09%)</title><rect x="968.4" y="275.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="971.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,102 samples, 0.09%)</title><rect x="968.4" y="259.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="971.4" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,102 samples, 0.09%)</title><rect x="968.4" y="243.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="971.4" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,102 samples, 0.09%)</title><rect x="968.4" y="227.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="971.4" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,102 samples, 0.09%)</title><rect x="968.4" y="211.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="971.4" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,102 samples, 0.09%)</title><rect x="968.4" y="195.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="971.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (2,102 samples, 0.09%)</title><rect x="968.4" y="179.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,102 samples, 0.09%)</title><rect x="968.4" y="163.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="971.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (2,102 samples, 0.09%)</title><rect x="968.4" y="147.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="971.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,102 samples, 0.09%)</title><rect x="968.4" y="131.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="971.4" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,069 samples, 0.09%)</title><rect x="968.4" y="115.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="971.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,069 samples, 0.09%)</title><rect x="968.4" y="99.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="971.4" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,069 samples, 0.09%)</title><rect x="968.4" y="83.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="971.4" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,097 samples, 0.09%)</title><rect x="969.5" y="355.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="972.5" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,097 samples, 0.09%)</title><rect x="969.5" y="339.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="972.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,097 samples, 0.09%)</title><rect x="969.5" y="323.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="972.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,097 samples, 0.09%)</title><rect x="969.5" y="307.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="972.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,097 samples, 0.09%)</title><rect x="969.5" y="291.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="972.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,097 samples, 0.09%)</title><rect x="969.5" y="275.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="972.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,622 samples, 0.07%)</title><rect x="969.5" y="259.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="972.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,610 samples, 0.07%)</title><rect x="969.5" y="243.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="972.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,610 samples, 0.07%)</title><rect x="969.5" y="227.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="972.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,610 samples, 0.07%)</title><rect x="969.5" y="211.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="972.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (54,459 samples, 2.42%)</title><rect x="970.8" y="387.0" width="28.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="973.8" y="398.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (46,687 samples, 2.07%)</title><rect x="970.8" y="371.0" width="24.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.8" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (46,246 samples, 2.05%)</title><rect x="971.0" y="355.0" width="24.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="974.0" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (45,969 samples, 2.04%)</title><rect x="971.2" y="339.0" width="24.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="974.2" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (45,969 samples, 2.04%)</title><rect x="971.2" y="323.0" width="24.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="974.2" y="334.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (22,925 samples, 1.02%)</title><rect x="971.2" y="307.0" width="12.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="974.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,398 samples, 0.51%)</title><rect x="971.2" y="291.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="974.2" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,398 samples, 0.51%)</title><rect x="971.2" y="275.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="974.2" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,398 samples, 0.51%)</title><rect x="971.2" y="259.0" width="6.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="974.2" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,527 samples, 0.51%)</title><rect x="977.2" y="291.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="980.2" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,527 samples, 0.51%)</title><rect x="977.2" y="275.0" width="6.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="980.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (23,044 samples, 1.02%)</title><rect x="983.2" y="307.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="986.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,464 samples, 0.51%)</title><rect x="983.2" y="291.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="986.2" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,464 samples, 0.51%)</title><rect x="983.2" y="275.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="986.2" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,464 samples, 0.51%)</title><rect x="983.2" y="259.0" width="6.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="986.2" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,580 samples, 0.51%)</title><rect x="989.2" y="291.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="992.2" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,580 samples, 0.51%)</title><rect x="989.2" y="275.0" width="6.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="992.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (7,772 samples, 0.34%)</title><rect x="995.3" y="371.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="998.3" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,689 samples, 0.30%)</title><rect x="995.3" y="355.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="998.3" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,674 samples, 0.30%)</title><rect x="995.3" y="339.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="998.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,378 samples, 0.28%)</title><rect x="995.4" y="323.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,378 samples, 0.28%)</title><rect x="995.4" y="307.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="998.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,240 samples, 0.28%)</title><rect x="995.5" y="291.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,240 samples, 0.28%)</title><rect x="995.5" y="275.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="998.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,240 samples, 0.28%)</title><rect x="995.5" y="259.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="998.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,240 samples, 0.28%)</title><rect x="995.5" y="243.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="998.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,562 samples, 0.20%)</title><rect x="995.5" y="227.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,516 samples, 0.20%)</title><rect x="995.5" y="211.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="998.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,516 samples, 0.20%)</title><rect x="995.5" y="195.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="998.5" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,516 samples, 0.20%)</title><rect x="995.5" y="179.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="998.5" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,180 samples, 0.05%)</title><rect x="995.8" y="163.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="998.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (621 samples, 0.03%)</title><rect x="995.8" y="147.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.8" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (621 samples, 0.03%)</title><rect x="995.8" y="131.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="998.8" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (621 samples, 0.03%)</title><rect x="995.8" y="115.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="998.8" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (559 samples, 0.02%)</title><rect x="996.1" y="147.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="999.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (559 samples, 0.02%)</title><rect x="996.1" y="131.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="999.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,143 samples, 0.05%)</title><rect x="996.4" y="163.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="999.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (586 samples, 0.03%)</title><rect x="996.4" y="147.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="999.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (586 samples, 0.03%)</title><rect x="996.4" y="131.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="999.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (586 samples, 0.03%)</title><rect x="996.4" y="115.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="999.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (557 samples, 0.02%)</title><rect x="996.7" y="147.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="999.7" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (557 samples, 0.02%)</title><rect x="996.7" y="131.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="999.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (607 samples, 0.03%)</title><rect x="997.0" y="163.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1000.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (607 samples, 0.03%)</title><rect x="997.0" y="147.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1000.0" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (607 samples, 0.03%)</title><rect x="997.0" y="131.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1000.0" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (607 samples, 0.03%)</title><rect x="997.0" y="115.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1000.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,105 samples, 0.05%)</title><rect x="997.3" y="163.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1000.3" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (527 samples, 0.02%)</title><rect x="997.3" y="147.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1000.3" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (527 samples, 0.02%)</title><rect x="997.3" y="131.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1000.3" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (527 samples, 0.02%)</title><rect x="997.3" y="115.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1000.3" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (578 samples, 0.03%)</title><rect x="997.6" y="147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1000.6" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (578 samples, 0.03%)</title><rect x="997.6" y="131.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1000.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (1,678 samples, 0.07%)</title><rect x="997.9" y="227.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1000.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,678 samples, 0.07%)</title><rect x="997.9" y="211.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1000.9" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,678 samples, 0.07%)</title><rect x="997.9" y="195.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1000.9" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,678 samples, 0.07%)</title><rect x="997.9" y="179.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1000.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,678 samples, 0.07%)</title><rect x="997.9" y="163.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1000.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,678 samples, 0.07%)</title><rect x="997.9" y="147.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1000.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (1,678 samples, 0.07%)</title><rect x="997.9" y="131.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1000.9" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,678 samples, 0.07%)</title><rect x="997.9" y="115.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1000.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (1,678 samples, 0.07%)</title><rect x="997.9" y="99.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1000.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,678 samples, 0.07%)</title><rect x="997.9" y="83.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1000.9" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,609 samples, 0.07%)</title><rect x="997.9" y="67.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1000.9" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,609 samples, 0.07%)</title><rect x="997.9" y="51.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1000.9" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,609 samples, 0.07%)</title><rect x="997.9" y="35.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1000.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,083 samples, 0.05%)</title><rect x="998.8" y="355.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1001.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,062 samples, 0.05%)</title><rect x="998.8" y="339.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1001.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,062 samples, 0.05%)</title><rect x="998.8" y="323.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1001.8" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (527 samples, 0.02%)</title><rect x="998.8" y="307.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1001.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (527 samples, 0.02%)</title><rect x="998.8" y="291.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1001.8" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (527 samples, 0.02%)</title><rect x="998.8" y="275.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1001.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (527 samples, 0.02%)</title><rect x="998.8" y="259.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1001.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (527 samples, 0.02%)</title><rect x="998.8" y="243.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1001.8" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (527 samples, 0.02%)</title><rect x="998.8" y="227.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1001.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (527 samples, 0.02%)</title><rect x="998.8" y="211.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1001.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (527 samples, 0.02%)</title><rect x="998.8" y="195.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1001.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (527 samples, 0.02%)</title><rect x="998.8" y="179.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1001.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (527 samples, 0.02%)</title><rect x="998.8" y="163.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1001.8" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (527 samples, 0.02%)</title><rect x="998.8" y="147.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1001.8" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (527 samples, 0.02%)</title><rect x="998.8" y="131.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1001.8" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (527 samples, 0.02%)</title><rect x="998.8" y="115.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1001.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (527 samples, 0.02%)</title><rect x="998.8" y="99.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1001.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (527 samples, 0.02%)</title><rect x="998.8" y="83.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1001.8" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (525 samples, 0.02%)</title><rect x="998.8" y="67.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1001.8" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (525 samples, 0.02%)</title><rect x="998.8" y="51.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1001.8" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (525 samples, 0.02%)</title><rect x="998.8" y="35.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1001.8" y="46.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (535 samples, 0.02%)</title><rect x="999.0" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1002.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (535 samples, 0.02%)</title><rect x="999.0" y="291.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1002.0" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (535 samples, 0.02%)</title><rect x="999.0" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1002.0" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (535 samples, 0.02%)</title><rect x="999.0" y="259.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1002.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (535 samples, 0.02%)</title><rect x="999.0" y="243.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1002.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (535 samples, 0.02%)</title><rect x="999.0" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1002.0" y="238.0"></text>
</g>
<g>
<title>[worker-3 tid=25866] (60,511 samples, 2.68%)</title><rect x="999.6" y="547.0" width="31.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1002.6" y="558.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (60,511 samples, 2.68%)</title><rect x="999.6" y="531.0" width="31.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1002.6" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (60,511 samples, 2.68%)</title><rect x="999.6" y="515.0" width="31.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1002.6" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (60,511 samples, 2.68%)</title><rect x="999.6" y="499.0" width="31.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1002.6" y="510.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (60,188 samples, 2.67%)</title><rect x="999.7" y="483.0" width="31.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1002.7" y="494.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (60,188 samples, 2.67%)</title><rect x="999.7" y="467.0" width="31.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1002.7" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (60,045 samples, 2.66%)</title><rect x="999.7" y="451.0" width="31.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1002.7" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (60,045 samples, 2.66%)</title><rect x="999.7" y="435.0" width="31.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1002.7" y="446.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (576 samples, 0.03%)</title><rect x="999.7" y="419.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1002.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (59,429 samples, 2.64%)</title><rect x="1000.1" y="419.0" width="31.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1003.1" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (59,084 samples, 2.62%)</title><rect x="1000.1" y="403.0" width="30.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1003.1" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,740 samples, 0.21%)</title><rect x="1000.1" y="387.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1003.1" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,335 samples, 0.19%)</title><rect x="1000.1" y="371.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1003.1" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2,057 samples, 0.09%)</title><rect x="1000.1" y="355.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1003.1" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2,057 samples, 0.09%)</title><rect x="1000.1" y="339.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1003.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2,057 samples, 0.09%)</title><rect x="1000.1" y="323.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1003.1" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,057 samples, 0.09%)</title><rect x="1000.1" y="307.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1003.1" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,057 samples, 0.09%)</title><rect x="1000.1" y="291.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1003.1" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (2,057 samples, 0.09%)</title><rect x="1000.1" y="275.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1003.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,057 samples, 0.09%)</title><rect x="1000.1" y="259.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1003.1" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,057 samples, 0.09%)</title><rect x="1000.1" y="243.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.1" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,057 samples, 0.09%)</title><rect x="1000.1" y="227.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1003.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,057 samples, 0.09%)</title><rect x="1000.1" y="211.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1003.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,057 samples, 0.09%)</title><rect x="1000.1" y="195.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1003.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (2,057 samples, 0.09%)</title><rect x="1000.1" y="179.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1003.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,057 samples, 0.09%)</title><rect x="1000.1" y="163.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.1" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (2,057 samples, 0.09%)</title><rect x="1000.1" y="147.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1003.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,057 samples, 0.09%)</title><rect x="1000.1" y="131.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1003.1" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,020 samples, 0.09%)</title><rect x="1000.1" y="115.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1003.1" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,020 samples, 0.09%)</title><rect x="1000.1" y="99.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1003.1" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,020 samples, 0.09%)</title><rect x="1000.1" y="83.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1003.1" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,278 samples, 0.10%)</title><rect x="1001.2" y="355.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1004.2" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,278 samples, 0.10%)</title><rect x="1001.2" y="339.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1004.2" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,278 samples, 0.10%)</title><rect x="1001.2" y="323.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1004.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,278 samples, 0.10%)</title><rect x="1001.2" y="307.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1004.2" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,278 samples, 0.10%)</title><rect x="1001.2" y="291.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1004.2" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,278 samples, 0.10%)</title><rect x="1001.2" y="275.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1004.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,762 samples, 0.08%)</title><rect x="1001.2" y="259.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1004.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,746 samples, 0.08%)</title><rect x="1001.2" y="243.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1004.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,746 samples, 0.08%)</title><rect x="1001.2" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1004.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,746 samples, 0.08%)</title><rect x="1001.2" y="211.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1004.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (516 samples, 0.02%)</title><rect x="1002.1" y="259.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1005.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (516 samples, 0.02%)</title><rect x="1002.1" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1005.1" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (516 samples, 0.02%)</title><rect x="1002.1" y="227.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1005.1" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (516 samples, 0.02%)</title><rect x="1002.1" y="211.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1005.1" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (516 samples, 0.02%)</title><rect x="1002.1" y="195.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1005.1" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (516 samples, 0.02%)</title><rect x="1002.1" y="179.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1005.1" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (516 samples, 0.02%)</title><rect x="1002.1" y="163.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1005.1" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (516 samples, 0.02%)</title><rect x="1002.1" y="147.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1005.1" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (516 samples, 0.02%)</title><rect x="1002.1" y="131.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1005.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (516 samples, 0.02%)</title><rect x="1002.1" y="115.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.1" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (506 samples, 0.02%)</title><rect x="1002.1" y="99.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1005.1" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (506 samples, 0.02%)</title><rect x="1002.1" y="83.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1005.1" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (506 samples, 0.02%)</title><rect x="1002.1" y="67.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1005.1" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (54,290 samples, 2.41%)</title><rect x="1002.6" y="387.0" width="28.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.6" y="398.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (46,476 samples, 2.06%)</title><rect x="1002.6" y="371.0" width="24.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1005.6" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (46,032 samples, 2.04%)</title><rect x="1002.8" y="355.0" width="24.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1005.8" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (45,747 samples, 2.03%)</title><rect x="1003.0" y="339.0" width="23.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1006.0" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (45,747 samples, 2.03%)</title><rect x="1003.0" y="323.0" width="23.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1006.0" y="334.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (22,941 samples, 1.02%)</title><rect x="1003.0" y="307.0" width="12.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1006.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,398 samples, 0.51%)</title><rect x="1003.0" y="291.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.0" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,398 samples, 0.51%)</title><rect x="1003.0" y="275.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1006.0" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,398 samples, 0.51%)</title><rect x="1003.0" y="259.0" width="5.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1006.0" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,543 samples, 0.51%)</title><rect x="1008.9" y="291.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1011.9" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,543 samples, 0.51%)</title><rect x="1008.9" y="275.0" width="6.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1011.9" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (22,806 samples, 1.01%)</title><rect x="1015.0" y="307.0" width="11.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1018.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,463 samples, 0.51%)</title><rect x="1015.0" y="291.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1018.0" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,463 samples, 0.51%)</title><rect x="1015.0" y="275.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1018.0" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,463 samples, 0.51%)</title><rect x="1015.0" y="259.0" width="6.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1018.0" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,343 samples, 0.50%)</title><rect x="1021.0" y="291.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1024.0" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,343 samples, 0.50%)</title><rect x="1021.0" y="275.0" width="5.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1024.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (7,814 samples, 0.35%)</title><rect x="1026.9" y="371.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1029.9" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,774 samples, 0.30%)</title><rect x="1026.9" y="355.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1029.9" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,762 samples, 0.30%)</title><rect x="1026.9" y="339.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1029.9" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,459 samples, 0.29%)</title><rect x="1027.1" y="323.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1030.1" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,459 samples, 0.29%)</title><rect x="1027.1" y="307.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1030.1" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,347 samples, 0.28%)</title><rect x="1027.1" y="291.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1030.1" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,347 samples, 0.28%)</title><rect x="1027.1" y="275.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1030.1" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,347 samples, 0.28%)</title><rect x="1027.1" y="259.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1030.1" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,347 samples, 0.28%)</title><rect x="1027.1" y="243.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1030.1" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,638 samples, 0.21%)</title><rect x="1027.1" y="227.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1030.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,596 samples, 0.20%)</title><rect x="1027.2" y="211.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1030.2" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,596 samples, 0.20%)</title><rect x="1027.2" y="195.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1030.2" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,596 samples, 0.20%)</title><rect x="1027.2" y="179.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1030.2" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,146 samples, 0.05%)</title><rect x="1027.4" y="163.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1030.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (585 samples, 0.03%)</title><rect x="1027.4" y="147.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1030.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (585 samples, 0.03%)</title><rect x="1027.4" y="131.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1030.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (585 samples, 0.03%)</title><rect x="1027.4" y="115.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1030.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (561 samples, 0.02%)</title><rect x="1027.7" y="147.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1030.7" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (561 samples, 0.02%)</title><rect x="1027.7" y="131.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1030.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,143 samples, 0.05%)</title><rect x="1028.0" y="163.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1031.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (599 samples, 0.03%)</title><rect x="1028.0" y="147.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1031.0" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (599 samples, 0.03%)</title><rect x="1028.0" y="131.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1031.0" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (599 samples, 0.03%)</title><rect x="1028.0" y="115.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1031.0" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (544 samples, 0.02%)</title><rect x="1028.4" y="147.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1031.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (544 samples, 0.02%)</title><rect x="1028.4" y="131.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1031.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (606 samples, 0.03%)</title><rect x="1028.6" y="163.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1031.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (606 samples, 0.03%)</title><rect x="1028.6" y="147.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1031.6" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (606 samples, 0.03%)</title><rect x="1028.6" y="131.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1031.6" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (606 samples, 0.03%)</title><rect x="1028.6" y="115.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1031.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,157 samples, 0.05%)</title><rect x="1029.0" y="163.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1032.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (598 samples, 0.03%)</title><rect x="1029.0" y="147.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1032.0" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (598 samples, 0.03%)</title><rect x="1029.0" y="131.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1032.0" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (598 samples, 0.03%)</title><rect x="1029.0" y="115.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1032.0" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (559 samples, 0.02%)</title><rect x="1029.3" y="147.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1032.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (559 samples, 0.02%)</title><rect x="1029.3" y="131.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1032.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (1,709 samples, 0.08%)</title><rect x="1029.6" y="227.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1032.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,709 samples, 0.08%)</title><rect x="1029.6" y="211.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1032.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,709 samples, 0.08%)</title><rect x="1029.6" y="195.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1032.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,709 samples, 0.08%)</title><rect x="1029.6" y="179.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1032.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,709 samples, 0.08%)</title><rect x="1029.6" y="163.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1032.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,709 samples, 0.08%)</title><rect x="1029.6" y="147.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1032.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (1,709 samples, 0.08%)</title><rect x="1029.6" y="131.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1032.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,709 samples, 0.08%)</title><rect x="1029.6" y="115.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1032.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (1,709 samples, 0.08%)</title><rect x="1029.6" y="99.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1032.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,709 samples, 0.08%)</title><rect x="1029.6" y="83.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1032.6" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,624 samples, 0.07%)</title><rect x="1029.6" y="67.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1032.6" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,624 samples, 0.07%)</title><rect x="1029.6" y="51.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1032.6" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,624 samples, 0.07%)</title><rect x="1029.6" y="35.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1032.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,040 samples, 0.05%)</title><rect x="1030.5" y="355.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1033.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,030 samples, 0.05%)</title><rect x="1030.5" y="339.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1033.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,030 samples, 0.05%)</title><rect x="1030.5" y="323.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1033.5" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (504 samples, 0.02%)</title><rect x="1030.5" y="307.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1033.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (504 samples, 0.02%)</title><rect x="1030.5" y="291.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1033.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (504 samples, 0.02%)</title><rect x="1030.5" y="275.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1033.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (504 samples, 0.02%)</title><rect x="1030.5" y="259.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1033.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (504 samples, 0.02%)</title><rect x="1030.5" y="243.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1033.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (504 samples, 0.02%)</title><rect x="1030.5" y="227.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1033.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (504 samples, 0.02%)</title><rect x="1030.5" y="211.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (504 samples, 0.02%)</title><rect x="1030.5" y="195.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1033.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (504 samples, 0.02%)</title><rect x="1030.5" y="179.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1033.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (504 samples, 0.02%)</title><rect x="1030.5" y="163.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1033.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (504 samples, 0.02%)</title><rect x="1030.5" y="147.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1033.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (504 samples, 0.02%)</title><rect x="1030.5" y="131.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1033.5" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (504 samples, 0.02%)</title><rect x="1030.5" y="115.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1033.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (504 samples, 0.02%)</title><rect x="1030.5" y="99.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1033.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (504 samples, 0.02%)</title><rect x="1030.5" y="83.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1033.5" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (499 samples, 0.02%)</title><rect x="1030.5" y="67.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1033.5" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (499 samples, 0.02%)</title><rect x="1030.5" y="51.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1033.5" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (499 samples, 0.02%)</title><rect x="1030.5" y="35.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1033.5" y="46.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (526 samples, 0.02%)</title><rect x="1030.7" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1033.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (526 samples, 0.02%)</title><rect x="1030.7" y="291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1033.7" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (526 samples, 0.02%)</title><rect x="1030.7" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1033.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (526 samples, 0.02%)</title><rect x="1030.7" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1033.7" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (526 samples, 0.02%)</title><rect x="1030.7" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1033.7" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (526 samples, 0.02%)</title><rect x="1030.7" y="227.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1033.7" y="238.0"></text>
</g>
<g>
<title>[worker-3 tid=25867] (60,760 samples, 2.70%)</title><rect x="1031.3" y="547.0" width="31.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1034.3" y="558.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (60,760 samples, 2.70%)</title><rect x="1031.3" y="531.0" width="31.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1034.3" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (60,760 samples, 2.70%)</title><rect x="1031.3" y="515.0" width="31.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1034.3" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (60,760 samples, 2.70%)</title><rect x="1031.3" y="499.0" width="31.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1034.3" y="510.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (60,399 samples, 2.68%)</title><rect x="1031.4" y="483.0" width="31.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1034.4" y="494.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (60,399 samples, 2.68%)</title><rect x="1031.4" y="467.0" width="31.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1034.4" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (60,243 samples, 2.67%)</title><rect x="1031.4" y="451.0" width="31.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1034.4" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (60,243 samples, 2.67%)</title><rect x="1031.4" y="435.0" width="31.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1034.4" y="446.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (546 samples, 0.02%)</title><rect x="1031.4" y="419.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1034.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (59,649 samples, 2.65%)</title><rect x="1031.8" y="419.0" width="31.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1034.8" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (59,300 samples, 2.63%)</title><rect x="1031.8" y="403.0" width="31.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1034.8" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,679 samples, 0.21%)</title><rect x="1031.8" y="387.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1034.8" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,240 samples, 0.19%)</title><rect x="1031.8" y="371.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1034.8" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2,181 samples, 0.10%)</title><rect x="1031.8" y="355.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1034.8" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2,181 samples, 0.10%)</title><rect x="1031.8" y="339.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1034.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2,181 samples, 0.10%)</title><rect x="1031.8" y="323.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1034.8" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,181 samples, 0.10%)</title><rect x="1031.8" y="307.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1034.8" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,181 samples, 0.10%)</title><rect x="1031.8" y="291.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1034.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (2,181 samples, 0.10%)</title><rect x="1031.8" y="275.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1034.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,181 samples, 0.10%)</title><rect x="1031.8" y="259.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1034.8" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,181 samples, 0.10%)</title><rect x="1031.8" y="243.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1034.8" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,181 samples, 0.10%)</title><rect x="1031.8" y="227.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1034.8" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,181 samples, 0.10%)</title><rect x="1031.8" y="211.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1034.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,181 samples, 0.10%)</title><rect x="1031.8" y="195.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1034.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (2,181 samples, 0.10%)</title><rect x="1031.8" y="179.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1034.8" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,181 samples, 0.10%)</title><rect x="1031.8" y="163.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1034.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (2,181 samples, 0.10%)</title><rect x="1031.8" y="147.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1034.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,181 samples, 0.10%)</title><rect x="1031.8" y="131.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1034.8" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,146 samples, 0.10%)</title><rect x="1031.8" y="115.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1034.8" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,146 samples, 0.10%)</title><rect x="1031.8" y="99.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1034.8" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,146 samples, 0.10%)</title><rect x="1031.8" y="83.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1034.8" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,059 samples, 0.09%)</title><rect x="1032.9" y="355.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1035.9" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,059 samples, 0.09%)</title><rect x="1032.9" y="339.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1035.9" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,059 samples, 0.09%)</title><rect x="1032.9" y="323.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1035.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,059 samples, 0.09%)</title><rect x="1032.9" y="307.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1035.9" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,059 samples, 0.09%)</title><rect x="1032.9" y="291.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1035.9" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,059 samples, 0.09%)</title><rect x="1032.9" y="275.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1035.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,613 samples, 0.07%)</title><rect x="1032.9" y="259.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1035.9" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,596 samples, 0.07%)</title><rect x="1032.9" y="243.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1035.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,596 samples, 0.07%)</title><rect x="1032.9" y="227.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1035.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,596 samples, 0.07%)</title><rect x="1032.9" y="211.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1035.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (54,569 samples, 2.42%)</title><rect x="1034.2" y="387.0" width="28.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1037.2" y="398.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (46,797 samples, 2.08%)</title><rect x="1034.2" y="371.0" width="24.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1037.2" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (46,356 samples, 2.06%)</title><rect x="1034.5" y="355.0" width="24.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1037.5" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (46,035 samples, 2.04%)</title><rect x="1034.6" y="339.0" width="24.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1037.6" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (46,035 samples, 2.04%)</title><rect x="1034.6" y="323.0" width="24.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1037.6" y="334.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (22,833 samples, 1.01%)</title><rect x="1034.6" y="307.0" width="12.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1037.6" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,474 samples, 0.51%)</title><rect x="1034.6" y="291.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1037.6" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,474 samples, 0.51%)</title><rect x="1034.6" y="275.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1037.6" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,474 samples, 0.51%)</title><rect x="1034.6" y="259.0" width="6.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1037.6" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,359 samples, 0.50%)</title><rect x="1040.6" y="291.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1043.6" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,359 samples, 0.50%)</title><rect x="1040.6" y="275.0" width="6.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1043.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (23,202 samples, 1.03%)</title><rect x="1046.6" y="307.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1049.6" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,484 samples, 0.51%)</title><rect x="1046.6" y="291.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1049.6" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,484 samples, 0.51%)</title><rect x="1046.6" y="275.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1049.6" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,484 samples, 0.51%)</title><rect x="1046.6" y="259.0" width="6.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1049.6" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,718 samples, 0.52%)</title><rect x="1052.6" y="291.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1055.6" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,718 samples, 0.52%)</title><rect x="1052.6" y="275.0" width="6.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1055.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (7,772 samples, 0.34%)</title><rect x="1058.7" y="371.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1061.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,684 samples, 0.30%)</title><rect x="1058.7" y="355.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1061.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,669 samples, 0.30%)</title><rect x="1058.7" y="339.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1061.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,376 samples, 0.28%)</title><rect x="1058.9" y="323.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1061.9" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,376 samples, 0.28%)</title><rect x="1058.9" y="307.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1061.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,272 samples, 0.28%)</title><rect x="1059.0" y="291.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1062.0" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,272 samples, 0.28%)</title><rect x="1059.0" y="275.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1062.0" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,272 samples, 0.28%)</title><rect x="1059.0" y="259.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1062.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,272 samples, 0.28%)</title><rect x="1059.0" y="243.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1062.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,591 samples, 0.20%)</title><rect x="1059.0" y="227.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1062.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,531 samples, 0.20%)</title><rect x="1059.0" y="211.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1062.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,531 samples, 0.20%)</title><rect x="1059.0" y="195.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1062.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,531 samples, 0.20%)</title><rect x="1059.0" y="179.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1062.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,133 samples, 0.05%)</title><rect x="1059.2" y="163.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1062.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (544 samples, 0.02%)</title><rect x="1059.2" y="147.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1062.2" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (544 samples, 0.02%)</title><rect x="1059.2" y="131.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1062.2" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (544 samples, 0.02%)</title><rect x="1059.2" y="115.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1062.2" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (589 samples, 0.03%)</title><rect x="1059.5" y="147.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1062.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (589 samples, 0.03%)</title><rect x="1059.5" y="131.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1062.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,166 samples, 0.05%)</title><rect x="1059.8" y="163.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1062.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (596 samples, 0.03%)</title><rect x="1059.8" y="147.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1062.8" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (596 samples, 0.03%)</title><rect x="1059.8" y="131.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1062.8" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (596 samples, 0.03%)</title><rect x="1059.8" y="115.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1062.8" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (570 samples, 0.03%)</title><rect x="1060.2" y="147.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1063.2" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (570 samples, 0.03%)</title><rect x="1060.2" y="131.0" width="0.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1063.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (581 samples, 0.03%)</title><rect x="1060.4" y="163.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1063.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (581 samples, 0.03%)</title><rect x="1060.4" y="147.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1063.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (581 samples, 0.03%)</title><rect x="1060.4" y="131.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1063.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (581 samples, 0.03%)</title><rect x="1060.4" y="115.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1063.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,149 samples, 0.05%)</title><rect x="1060.8" y="163.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1063.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (602 samples, 0.03%)</title><rect x="1060.8" y="147.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1063.8" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (602 samples, 0.03%)</title><rect x="1060.8" y="131.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1063.8" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (602 samples, 0.03%)</title><rect x="1060.8" y="115.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1063.8" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (547 samples, 0.02%)</title><rect x="1061.1" y="147.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1064.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (547 samples, 0.02%)</title><rect x="1061.1" y="131.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1064.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (1,681 samples, 0.07%)</title><rect x="1061.4" y="227.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1064.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,681 samples, 0.07%)</title><rect x="1061.4" y="211.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1064.4" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,681 samples, 0.07%)</title><rect x="1061.4" y="195.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,681 samples, 0.07%)</title><rect x="1061.4" y="179.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1064.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,681 samples, 0.07%)</title><rect x="1061.4" y="163.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1064.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,681 samples, 0.07%)</title><rect x="1061.4" y="147.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (1,681 samples, 0.07%)</title><rect x="1061.4" y="131.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1064.4" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,681 samples, 0.07%)</title><rect x="1061.4" y="115.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1064.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (1,681 samples, 0.07%)</title><rect x="1061.4" y="99.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1064.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,681 samples, 0.07%)</title><rect x="1061.4" y="83.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1064.4" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,595 samples, 0.07%)</title><rect x="1061.4" y="67.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1064.4" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,595 samples, 0.07%)</title><rect x="1061.4" y="51.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1064.4" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,595 samples, 0.07%)</title><rect x="1061.4" y="35.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1064.4" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,088 samples, 0.05%)</title><rect x="1062.2" y="355.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1065.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,068 samples, 0.05%)</title><rect x="1062.2" y="339.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1065.2" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,068 samples, 0.05%)</title><rect x="1062.2" y="323.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1065.2" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (555 samples, 0.02%)</title><rect x="1062.2" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1065.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (555 samples, 0.02%)</title><rect x="1062.2" y="291.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1065.2" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (555 samples, 0.02%)</title><rect x="1062.2" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1065.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (555 samples, 0.02%)</title><rect x="1062.2" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1065.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (555 samples, 0.02%)</title><rect x="1062.2" y="243.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1065.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (555 samples, 0.02%)</title><rect x="1062.2" y="227.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1065.2" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (555 samples, 0.02%)</title><rect x="1062.2" y="211.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1065.2" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (555 samples, 0.02%)</title><rect x="1062.2" y="195.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (555 samples, 0.02%)</title><rect x="1062.2" y="179.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1065.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (555 samples, 0.02%)</title><rect x="1062.2" y="163.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1065.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (555 samples, 0.02%)</title><rect x="1062.2" y="147.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1065.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (555 samples, 0.02%)</title><rect x="1062.2" y="131.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1065.2" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (555 samples, 0.02%)</title><rect x="1062.2" y="115.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1065.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (555 samples, 0.02%)</title><rect x="1062.2" y="99.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1065.2" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (555 samples, 0.02%)</title><rect x="1062.2" y="83.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1065.2" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (548 samples, 0.02%)</title><rect x="1062.2" y="67.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1065.2" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (548 samples, 0.02%)</title><rect x="1062.2" y="51.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1065.2" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (548 samples, 0.02%)</title><rect x="1062.2" y="35.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1065.2" y="46.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (513 samples, 0.02%)</title><rect x="1062.5" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1065.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (513 samples, 0.02%)</title><rect x="1062.5" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1065.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (513 samples, 0.02%)</title><rect x="1062.5" y="275.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1065.5" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (513 samples, 0.02%)</title><rect x="1062.5" y="259.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1065.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (513 samples, 0.02%)</title><rect x="1062.5" y="243.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1065.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (513 samples, 0.02%)</title><rect x="1062.5" y="227.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1065.5" y="238.0"></text>
</g>
<g>
<title>[worker-4 tid=25865] (60,486 samples, 2.68%)</title><rect x="1063.1" y="547.0" width="31.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1066.1" y="558.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (60,486 samples, 2.68%)</title><rect x="1063.1" y="531.0" width="31.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1066.1" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (60,486 samples, 2.68%)</title><rect x="1063.1" y="515.0" width="31.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1066.1" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (60,486 samples, 2.68%)</title><rect x="1063.1" y="499.0" width="31.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1066.1" y="510.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (60,175 samples, 2.67%)</title><rect x="1063.2" y="483.0" width="31.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1066.2" y="494.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (60,175 samples, 2.67%)</title><rect x="1063.2" y="467.0" width="31.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1066.2" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (60,052 samples, 2.66%)</title><rect x="1063.2" y="451.0" width="31.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1066.2" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (60,052 samples, 2.66%)</title><rect x="1063.2" y="435.0" width="31.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1066.2" y="446.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (562 samples, 0.02%)</title><rect x="1063.2" y="419.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1066.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (59,447 samples, 2.64%)</title><rect x="1063.5" y="419.0" width="31.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1066.5" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (59,061 samples, 2.62%)</title><rect x="1063.6" y="403.0" width="30.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.6" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,631 samples, 0.21%)</title><rect x="1063.6" y="387.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1066.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,183 samples, 0.19%)</title><rect x="1063.6" y="371.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1066.6" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2,035 samples, 0.09%)</title><rect x="1063.6" y="355.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1066.6" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2,035 samples, 0.09%)</title><rect x="1063.6" y="339.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1066.6" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2,035 samples, 0.09%)</title><rect x="1063.6" y="323.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1066.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,035 samples, 0.09%)</title><rect x="1063.6" y="307.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1066.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,035 samples, 0.09%)</title><rect x="1063.6" y="291.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1066.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (2,035 samples, 0.09%)</title><rect x="1063.6" y="275.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1066.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,035 samples, 0.09%)</title><rect x="1063.6" y="259.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1066.6" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,035 samples, 0.09%)</title><rect x="1063.6" y="243.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1066.6" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,035 samples, 0.09%)</title><rect x="1063.6" y="227.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1066.6" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,035 samples, 0.09%)</title><rect x="1063.6" y="211.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1066.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,035 samples, 0.09%)</title><rect x="1063.6" y="195.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1066.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (2,035 samples, 0.09%)</title><rect x="1063.6" y="179.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1066.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,035 samples, 0.09%)</title><rect x="1063.6" y="163.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1066.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (2,035 samples, 0.09%)</title><rect x="1063.6" y="147.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1066.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,035 samples, 0.09%)</title><rect x="1063.6" y="131.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1066.6" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,007 samples, 0.09%)</title><rect x="1063.6" y="115.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1066.6" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,007 samples, 0.09%)</title><rect x="1063.6" y="99.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1066.6" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,007 samples, 0.09%)</title><rect x="1063.6" y="83.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1066.6" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,148 samples, 0.10%)</title><rect x="1064.6" y="355.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1067.6" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,148 samples, 0.10%)</title><rect x="1064.6" y="339.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1067.6" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,148 samples, 0.10%)</title><rect x="1064.6" y="323.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1067.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,148 samples, 0.10%)</title><rect x="1064.6" y="307.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1067.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,148 samples, 0.10%)</title><rect x="1064.6" y="291.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1067.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,148 samples, 0.10%)</title><rect x="1064.6" y="275.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1067.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,641 samples, 0.07%)</title><rect x="1064.6" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1067.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,626 samples, 0.07%)</title><rect x="1064.7" y="243.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1067.7" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,626 samples, 0.07%)</title><rect x="1064.7" y="227.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1067.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,626 samples, 0.07%)</title><rect x="1064.7" y="211.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1067.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (507 samples, 0.02%)</title><rect x="1065.5" y="259.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1068.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (507 samples, 0.02%)</title><rect x="1065.5" y="243.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1068.5" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (507 samples, 0.02%)</title><rect x="1065.5" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1068.5" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (507 samples, 0.02%)</title><rect x="1065.5" y="211.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1068.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (507 samples, 0.02%)</title><rect x="1065.5" y="195.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1068.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (507 samples, 0.02%)</title><rect x="1065.5" y="179.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1068.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (507 samples, 0.02%)</title><rect x="1065.5" y="163.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1068.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (507 samples, 0.02%)</title><rect x="1065.5" y="147.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1068.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (507 samples, 0.02%)</title><rect x="1065.5" y="131.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1068.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (507 samples, 0.02%)</title><rect x="1065.5" y="115.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1068.5" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (496 samples, 0.02%)</title><rect x="1065.5" y="99.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1068.5" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (496 samples, 0.02%)</title><rect x="1065.5" y="83.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1068.5" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (496 samples, 0.02%)</title><rect x="1065.5" y="67.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1068.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (54,387 samples, 2.41%)</title><rect x="1066.0" y="387.0" width="28.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1069.0" y="398.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (46,620 samples, 2.07%)</title><rect x="1066.0" y="371.0" width="24.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1069.0" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (46,157 samples, 2.05%)</title><rect x="1066.2" y="355.0" width="24.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1069.2" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (45,869 samples, 2.04%)</title><rect x="1066.4" y="339.0" width="24.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1069.4" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (45,869 samples, 2.04%)</title><rect x="1066.4" y="323.0" width="24.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1069.4" y="334.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (22,772 samples, 1.01%)</title><rect x="1066.4" y="307.0" width="11.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1069.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,294 samples, 0.50%)</title><rect x="1066.4" y="291.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1069.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,294 samples, 0.50%)</title><rect x="1066.4" y="275.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1069.4" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,294 samples, 0.50%)</title><rect x="1066.4" y="259.0" width="5.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1069.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,478 samples, 0.51%)</title><rect x="1072.3" y="291.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1075.3" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,478 samples, 0.51%)</title><rect x="1072.3" y="275.0" width="6.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1075.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (23,097 samples, 1.02%)</title><rect x="1078.3" y="307.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1081.3" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,666 samples, 0.52%)</title><rect x="1078.3" y="291.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1081.3" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,666 samples, 0.52%)</title><rect x="1078.3" y="275.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1081.3" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,666 samples, 0.52%)</title><rect x="1078.3" y="259.0" width="6.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1081.3" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,431 samples, 0.51%)</title><rect x="1084.4" y="291.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.4" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,431 samples, 0.51%)</title><rect x="1084.4" y="275.0" width="6.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1087.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (7,767 samples, 0.34%)</title><rect x="1090.4" y="371.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1093.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,663 samples, 0.30%)</title><rect x="1090.4" y="355.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1093.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,648 samples, 0.29%)</title><rect x="1090.4" y="339.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1093.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,357 samples, 0.28%)</title><rect x="1090.6" y="323.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1093.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,357 samples, 0.28%)</title><rect x="1090.6" y="307.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1093.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,250 samples, 0.28%)</title><rect x="1090.6" y="291.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.6" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,250 samples, 0.28%)</title><rect x="1090.6" y="275.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1093.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,250 samples, 0.28%)</title><rect x="1090.6" y="259.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1093.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,250 samples, 0.28%)</title><rect x="1090.6" y="243.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,558 samples, 0.20%)</title><rect x="1090.6" y="227.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1093.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,507 samples, 0.20%)</title><rect x="1090.7" y="211.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1093.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,507 samples, 0.20%)</title><rect x="1090.7" y="195.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1093.7" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,507 samples, 0.20%)</title><rect x="1090.7" y="179.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1093.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,159 samples, 0.05%)</title><rect x="1090.9" y="163.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1093.9" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (588 samples, 0.03%)</title><rect x="1090.9" y="147.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1093.9" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (588 samples, 0.03%)</title><rect x="1090.9" y="131.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1093.9" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (588 samples, 0.03%)</title><rect x="1090.9" y="115.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1093.9" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (571 samples, 0.03%)</title><rect x="1091.2" y="147.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1094.2" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (571 samples, 0.03%)</title><rect x="1091.2" y="131.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1094.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,140 samples, 0.05%)</title><rect x="1091.5" y="163.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1094.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (576 samples, 0.03%)</title><rect x="1091.5" y="147.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.5" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (576 samples, 0.03%)</title><rect x="1091.5" y="131.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1094.5" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (576 samples, 0.03%)</title><rect x="1091.5" y="115.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1094.5" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (564 samples, 0.03%)</title><rect x="1091.8" y="147.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1094.8" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (564 samples, 0.03%)</title><rect x="1091.8" y="131.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1094.8" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (586 samples, 0.03%)</title><rect x="1092.1" y="163.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1095.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (586 samples, 0.03%)</title><rect x="1092.1" y="147.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1095.1" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (586 samples, 0.03%)</title><rect x="1092.1" y="131.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1095.1" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (586 samples, 0.03%)</title><rect x="1092.1" y="115.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1095.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,114 samples, 0.05%)</title><rect x="1092.4" y="163.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1095.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (529 samples, 0.02%)</title><rect x="1092.4" y="147.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1095.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (529 samples, 0.02%)</title><rect x="1092.4" y="131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1095.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (529 samples, 0.02%)</title><rect x="1092.4" y="115.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1095.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (585 samples, 0.03%)</title><rect x="1092.7" y="147.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1095.7" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (585 samples, 0.03%)</title><rect x="1092.7" y="131.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1095.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (1,692 samples, 0.08%)</title><rect x="1093.0" y="227.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1096.0" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,692 samples, 0.08%)</title><rect x="1093.0" y="211.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1096.0" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,692 samples, 0.08%)</title><rect x="1093.0" y="195.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1096.0" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,692 samples, 0.08%)</title><rect x="1093.0" y="179.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.0" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,692 samples, 0.08%)</title><rect x="1093.0" y="163.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1096.0" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,692 samples, 0.08%)</title><rect x="1093.0" y="147.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1096.0" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (1,692 samples, 0.08%)</title><rect x="1093.0" y="131.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1096.0" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,692 samples, 0.08%)</title><rect x="1093.0" y="115.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1096.0" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (1,692 samples, 0.08%)</title><rect x="1093.0" y="99.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1096.0" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,692 samples, 0.08%)</title><rect x="1093.0" y="83.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1096.0" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,616 samples, 0.07%)</title><rect x="1093.0" y="67.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1096.0" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,616 samples, 0.07%)</title><rect x="1093.0" y="51.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1096.0" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,616 samples, 0.07%)</title><rect x="1093.0" y="35.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1096.0" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,104 samples, 0.05%)</title><rect x="1093.9" y="355.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1096.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,089 samples, 0.05%)</title><rect x="1093.9" y="339.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1096.9" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,089 samples, 0.05%)</title><rect x="1093.9" y="323.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1096.9" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (538 samples, 0.02%)</title><rect x="1093.9" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1096.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (538 samples, 0.02%)</title><rect x="1093.9" y="291.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1096.9" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (538 samples, 0.02%)</title><rect x="1093.9" y="275.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1096.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (538 samples, 0.02%)</title><rect x="1093.9" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1096.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (538 samples, 0.02%)</title><rect x="1093.9" y="243.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1096.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (538 samples, 0.02%)</title><rect x="1093.9" y="227.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1096.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (538 samples, 0.02%)</title><rect x="1093.9" y="211.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1096.9" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (538 samples, 0.02%)</title><rect x="1093.9" y="195.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1096.9" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (538 samples, 0.02%)</title><rect x="1093.9" y="179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1096.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (538 samples, 0.02%)</title><rect x="1093.9" y="163.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1096.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (538 samples, 0.02%)</title><rect x="1093.9" y="147.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1096.9" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (538 samples, 0.02%)</title><rect x="1093.9" y="131.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1096.9" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (538 samples, 0.02%)</title><rect x="1093.9" y="115.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1096.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (538 samples, 0.02%)</title><rect x="1093.9" y="99.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1096.9" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (538 samples, 0.02%)</title><rect x="1093.9" y="83.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1096.9" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (535 samples, 0.02%)</title><rect x="1093.9" y="67.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1096.9" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (535 samples, 0.02%)</title><rect x="1093.9" y="51.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1096.9" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (535 samples, 0.02%)</title><rect x="1093.9" y="35.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1096.9" y="46.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (551 samples, 0.02%)</title><rect x="1094.2" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1097.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (551 samples, 0.02%)</title><rect x="1094.2" y="291.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.2" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (551 samples, 0.02%)</title><rect x="1094.2" y="275.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1097.2" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (551 samples, 0.02%)</title><rect x="1094.2" y="259.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1097.2" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (551 samples, 0.02%)</title><rect x="1094.2" y="243.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1097.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (551 samples, 0.02%)</title><rect x="1094.2" y="227.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1097.2" y="238.0"></text>
</g>
<g>
<title>[worker-4 tid=25869] (60,528 samples, 2.69%)</title><rect x="1094.7" y="547.0" width="31.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1097.7" y="558.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (60,528 samples, 2.69%)</title><rect x="1094.7" y="531.0" width="31.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.7" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (60,528 samples, 2.69%)</title><rect x="1094.7" y="515.0" width="31.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1097.7" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (60,528 samples, 2.69%)</title><rect x="1094.7" y="499.0" width="31.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1097.7" y="510.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (60,200 samples, 2.67%)</title><rect x="1094.9" y="483.0" width="31.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1097.9" y="494.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (60,200 samples, 2.67%)</title><rect x="1094.9" y="467.0" width="31.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1097.9" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (60,068 samples, 2.67%)</title><rect x="1094.9" y="451.0" width="31.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1097.9" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (60,068 samples, 2.67%)</title><rect x="1094.9" y="435.0" width="31.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1097.9" y="446.0">ru..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$MetaRequest (577 samples, 0.03%)</title><rect x="1094.9" y="419.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1097.9" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (59,434 samples, 2.64%)</title><rect x="1095.2" y="419.0" width="31.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1098.2" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (59,081 samples, 2.62%)</title><rect x="1095.3" y="403.0" width="30.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1098.3" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,704 samples, 0.21%)</title><rect x="1095.3" y="387.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1098.3" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,283 samples, 0.19%)</title><rect x="1095.3" y="371.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1098.3" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2,137 samples, 0.09%)</title><rect x="1095.3" y="355.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1098.3" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2,137 samples, 0.09%)</title><rect x="1095.3" y="339.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1098.3" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2,137 samples, 0.09%)</title><rect x="1095.3" y="323.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1098.3" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,137 samples, 0.09%)</title><rect x="1095.3" y="307.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1098.3" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,137 samples, 0.09%)</title><rect x="1095.3" y="291.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (2,137 samples, 0.09%)</title><rect x="1095.3" y="275.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1098.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,137 samples, 0.09%)</title><rect x="1095.3" y="259.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1098.3" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,137 samples, 0.09%)</title><rect x="1095.3" y="243.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.3" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,137 samples, 0.09%)</title><rect x="1095.3" y="227.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1098.3" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,137 samples, 0.09%)</title><rect x="1095.3" y="211.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1098.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,137 samples, 0.09%)</title><rect x="1095.3" y="195.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1098.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (2,137 samples, 0.09%)</title><rect x="1095.3" y="179.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1098.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,137 samples, 0.09%)</title><rect x="1095.3" y="163.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1098.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (2,137 samples, 0.09%)</title><rect x="1095.3" y="147.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,137 samples, 0.09%)</title><rect x="1095.3" y="131.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.3" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (2,101 samples, 0.09%)</title><rect x="1095.3" y="115.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1098.3" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (2,101 samples, 0.09%)</title><rect x="1095.3" y="99.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1098.3" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (2,101 samples, 0.09%)</title><rect x="1095.3" y="83.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1098.3" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,146 samples, 0.10%)</title><rect x="1096.4" y="355.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1099.4" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,146 samples, 0.10%)</title><rect x="1096.4" y="339.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1099.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,146 samples, 0.10%)</title><rect x="1096.4" y="323.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1099.4" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,146 samples, 0.10%)</title><rect x="1096.4" y="307.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1099.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,146 samples, 0.10%)</title><rect x="1096.4" y="291.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1099.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,146 samples, 0.10%)</title><rect x="1096.4" y="275.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1099.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,677 samples, 0.07%)</title><rect x="1096.4" y="259.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1099.4" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,663 samples, 0.07%)</title><rect x="1096.4" y="243.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1099.4" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,663 samples, 0.07%)</title><rect x="1096.4" y="227.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1099.4" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,663 samples, 0.07%)</title><rect x="1096.4" y="211.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1099.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (54,332 samples, 2.41%)</title><rect x="1097.7" y="387.0" width="28.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1100.7" y="398.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (46,493 samples, 2.06%)</title><rect x="1097.7" y="371.0" width="24.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1100.7" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (46,053 samples, 2.04%)</title><rect x="1098.0" y="355.0" width="24.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1101.0" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (45,792 samples, 2.03%)</title><rect x="1098.1" y="339.0" width="24.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1101.1" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (45,792 samples, 2.03%)</title><rect x="1098.1" y="323.0" width="24.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1101.1" y="334.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (22,976 samples, 1.02%)</title><rect x="1098.1" y="307.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1101.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,602 samples, 0.51%)</title><rect x="1098.1" y="291.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1101.1" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,602 samples, 0.51%)</title><rect x="1098.1" y="275.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1101.1" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,602 samples, 0.51%)</title><rect x="1098.1" y="259.0" width="6.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1101.1" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,374 samples, 0.50%)</title><rect x="1104.2" y="291.0" width="5.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1107.2" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,374 samples, 0.50%)</title><rect x="1104.2" y="275.0" width="5.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1107.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (22,816 samples, 1.01%)</title><rect x="1110.1" y="307.0" width="12.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1113.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,398 samples, 0.51%)</title><rect x="1110.1" y="291.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1113.1" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,398 samples, 0.51%)</title><rect x="1110.1" y="275.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1113.1" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,398 samples, 0.51%)</title><rect x="1110.1" y="259.0" width="6.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1113.1" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,418 samples, 0.51%)</title><rect x="1116.1" y="291.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1119.1" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,418 samples, 0.51%)</title><rect x="1116.1" y="275.0" width="6.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1119.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (7,839 samples, 0.35%)</title><rect x="1122.1" y="371.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1125.1" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,682 samples, 0.30%)</title><rect x="1122.1" y="355.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.1" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,672 samples, 0.30%)</title><rect x="1122.1" y="339.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1125.1" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,380 samples, 0.28%)</title><rect x="1122.2" y="323.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1125.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,380 samples, 0.28%)</title><rect x="1122.2" y="307.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1125.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,256 samples, 0.28%)</title><rect x="1122.3" y="291.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1125.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,256 samples, 0.28%)</title><rect x="1122.3" y="275.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1125.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,256 samples, 0.28%)</title><rect x="1122.3" y="259.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1125.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,256 samples, 0.28%)</title><rect x="1122.3" y="243.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1125.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,664 samples, 0.21%)</title><rect x="1122.3" y="227.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1125.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,618 samples, 0.20%)</title><rect x="1122.3" y="211.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1125.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,618 samples, 0.20%)</title><rect x="1122.3" y="195.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1125.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,618 samples, 0.20%)</title><rect x="1122.3" y="179.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1125.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,174 samples, 0.05%)</title><rect x="1122.6" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.6" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (584 samples, 0.03%)</title><rect x="1122.6" y="147.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1125.6" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (584 samples, 0.03%)</title><rect x="1122.6" y="131.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1125.6" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (584 samples, 0.03%)</title><rect x="1122.6" y="115.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1125.6" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (590 samples, 0.03%)</title><rect x="1122.9" y="147.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1125.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (590 samples, 0.03%)</title><rect x="1122.9" y="131.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1125.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,179 samples, 0.05%)</title><rect x="1123.2" y="163.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1126.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (575 samples, 0.03%)</title><rect x="1123.2" y="147.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1126.2" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (575 samples, 0.03%)</title><rect x="1123.2" y="131.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1126.2" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (575 samples, 0.03%)</title><rect x="1123.2" y="115.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1126.2" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (604 samples, 0.03%)</title><rect x="1123.5" y="147.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1126.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (604 samples, 0.03%)</title><rect x="1123.5" y="131.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1126.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (599 samples, 0.03%)</title><rect x="1123.8" y="163.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1126.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (599 samples, 0.03%)</title><rect x="1123.8" y="147.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1126.8" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (599 samples, 0.03%)</title><rect x="1123.8" y="131.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1126.8" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (599 samples, 0.03%)</title><rect x="1123.8" y="115.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1126.8" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,174 samples, 0.05%)</title><rect x="1124.1" y="163.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1127.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (596 samples, 0.03%)</title><rect x="1124.1" y="147.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1127.1" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (596 samples, 0.03%)</title><rect x="1124.1" y="131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.1" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (596 samples, 0.03%)</title><rect x="1124.1" y="115.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1127.1" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (578 samples, 0.03%)</title><rect x="1124.4" y="147.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1127.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (578 samples, 0.03%)</title><rect x="1124.4" y="131.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1127.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (1,592 samples, 0.07%)</title><rect x="1124.7" y="227.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1127.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,592 samples, 0.07%)</title><rect x="1124.7" y="211.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1127.7" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,592 samples, 0.07%)</title><rect x="1124.7" y="195.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1127.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,592 samples, 0.07%)</title><rect x="1124.7" y="179.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1127.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,592 samples, 0.07%)</title><rect x="1124.7" y="163.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1127.7" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,592 samples, 0.07%)</title><rect x="1124.7" y="147.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1127.7" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (1,592 samples, 0.07%)</title><rect x="1124.7" y="131.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1127.7" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,592 samples, 0.07%)</title><rect x="1124.7" y="115.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1127.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (1,592 samples, 0.07%)</title><rect x="1124.7" y="99.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1127.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,592 samples, 0.07%)</title><rect x="1124.7" y="83.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1127.7" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,501 samples, 0.07%)</title><rect x="1124.7" y="67.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.7" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,501 samples, 0.07%)</title><rect x="1124.7" y="51.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1127.7" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,501 samples, 0.07%)</title><rect x="1124.7" y="35.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1127.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,157 samples, 0.05%)</title><rect x="1125.6" y="355.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1128.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,143 samples, 0.05%)</title><rect x="1125.6" y="339.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1128.6" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,143 samples, 0.05%)</title><rect x="1125.6" y="323.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1128.6" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (571 samples, 0.03%)</title><rect x="1125.6" y="307.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1128.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (571 samples, 0.03%)</title><rect x="1125.6" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1128.6" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (571 samples, 0.03%)</title><rect x="1125.6" y="275.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (571 samples, 0.03%)</title><rect x="1125.6" y="259.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (571 samples, 0.03%)</title><rect x="1125.6" y="243.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1128.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (571 samples, 0.03%)</title><rect x="1125.6" y="227.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1128.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (571 samples, 0.03%)</title><rect x="1125.6" y="211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (571 samples, 0.03%)</title><rect x="1125.6" y="195.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1128.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (571 samples, 0.03%)</title><rect x="1125.6" y="179.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1128.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (571 samples, 0.03%)</title><rect x="1125.6" y="163.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (571 samples, 0.03%)</title><rect x="1125.6" y="147.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1128.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (571 samples, 0.03%)</title><rect x="1125.6" y="131.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (571 samples, 0.03%)</title><rect x="1125.6" y="115.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1128.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (571 samples, 0.03%)</title><rect x="1125.6" y="99.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1128.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (571 samples, 0.03%)</title><rect x="1125.6" y="83.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1128.6" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (564 samples, 0.03%)</title><rect x="1125.6" y="67.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1128.6" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (564 samples, 0.03%)</title><rect x="1125.6" y="51.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.6" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (564 samples, 0.03%)</title><rect x="1125.6" y="35.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1128.6" y="46.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (572 samples, 0.03%)</title><rect x="1125.9" y="307.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.9" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (572 samples, 0.03%)</title><rect x="1125.9" y="291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1128.9" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (572 samples, 0.03%)</title><rect x="1125.9" y="275.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1128.9" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (572 samples, 0.03%)</title><rect x="1125.9" y="259.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1128.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (572 samples, 0.03%)</title><rect x="1125.9" y="243.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1128.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (572 samples, 0.03%)</title><rect x="1125.9" y="227.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1128.9" y="238.0"></text>
</g>
<g>
<title>[worker-6 tid=25879] (60,719 samples, 2.69%)</title><rect x="1126.4" y="547.0" width="31.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1129.4" y="558.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (60,719 samples, 2.69%)</title><rect x="1126.4" y="531.0" width="31.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1129.4" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (60,719 samples, 2.69%)</title><rect x="1126.4" y="515.0" width="31.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1129.4" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (60,719 samples, 2.69%)</title><rect x="1126.4" y="499.0" width="31.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1129.4" y="510.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (60,717 samples, 2.69%)</title><rect x="1126.4" y="483.0" width="31.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1129.4" y="494.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (60,717 samples, 2.69%)</title><rect x="1126.4" y="467.0" width="31.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.4" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (60,616 samples, 2.69%)</title><rect x="1126.4" y="451.0" width="31.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1129.4" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (60,616 samples, 2.69%)</title><rect x="1126.4" y="435.0" width="31.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1129.4" y="446.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (60,504 samples, 2.68%)</title><rect x="1126.5" y="419.0" width="31.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1129.5" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (58,298 samples, 2.59%)</title><rect x="1126.6" y="403.0" width="30.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1129.6" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,572 samples, 0.20%)</title><rect x="1126.6" y="387.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.6" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,136 samples, 0.18%)</title><rect x="1126.6" y="371.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1129.6" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1,954 samples, 0.09%)</title><rect x="1126.6" y="355.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1129.6" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1,954 samples, 0.09%)</title><rect x="1126.6" y="339.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.6" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1,954 samples, 0.09%)</title><rect x="1126.6" y="323.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1129.6" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,954 samples, 0.09%)</title><rect x="1126.6" y="307.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,954 samples, 0.09%)</title><rect x="1126.6" y="291.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1129.6" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (1,954 samples, 0.09%)</title><rect x="1126.6" y="275.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.6" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,954 samples, 0.09%)</title><rect x="1126.6" y="259.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.6" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,954 samples, 0.09%)</title><rect x="1126.6" y="243.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1129.6" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,954 samples, 0.09%)</title><rect x="1126.6" y="227.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.6" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,954 samples, 0.09%)</title><rect x="1126.6" y="211.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,954 samples, 0.09%)</title><rect x="1126.6" y="195.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1129.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (1,954 samples, 0.09%)</title><rect x="1126.6" y="179.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1129.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,954 samples, 0.09%)</title><rect x="1126.6" y="163.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1129.6" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (1,954 samples, 0.09%)</title><rect x="1126.6" y="147.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1129.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,954 samples, 0.09%)</title><rect x="1126.6" y="131.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.6" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,928 samples, 0.09%)</title><rect x="1126.6" y="115.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1129.6" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,928 samples, 0.09%)</title><rect x="1126.6" y="99.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1129.6" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,928 samples, 0.09%)</title><rect x="1126.6" y="83.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1129.6" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,182 samples, 0.10%)</title><rect x="1127.6" y="355.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1130.6" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,182 samples, 0.10%)</title><rect x="1127.6" y="339.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1130.6" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,182 samples, 0.10%)</title><rect x="1127.6" y="323.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1130.6" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,182 samples, 0.10%)</title><rect x="1127.6" y="307.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1130.6" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,182 samples, 0.10%)</title><rect x="1127.6" y="291.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1130.6" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,182 samples, 0.10%)</title><rect x="1127.6" y="275.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1130.6" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,681 samples, 0.07%)</title><rect x="1127.6" y="259.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1130.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,675 samples, 0.07%)</title><rect x="1127.6" y="243.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1130.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,675 samples, 0.07%)</title><rect x="1127.6" y="227.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1130.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,675 samples, 0.07%)</title><rect x="1127.6" y="211.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1130.6" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (501 samples, 0.02%)</title><rect x="1128.5" y="259.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1131.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (501 samples, 0.02%)</title><rect x="1128.5" y="243.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1131.5" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (501 samples, 0.02%)</title><rect x="1128.5" y="227.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1131.5" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (501 samples, 0.02%)</title><rect x="1128.5" y="211.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1131.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (501 samples, 0.02%)</title><rect x="1128.5" y="195.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1131.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (501 samples, 0.02%)</title><rect x="1128.5" y="179.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1131.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (501 samples, 0.02%)</title><rect x="1128.5" y="163.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1131.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (501 samples, 0.02%)</title><rect x="1128.5" y="147.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1131.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (501 samples, 0.02%)</title><rect x="1128.5" y="131.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1131.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (501 samples, 0.02%)</title><rect x="1128.5" y="115.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1131.5" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (484 samples, 0.02%)</title><rect x="1128.5" y="99.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1131.5" y="110.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (484 samples, 0.02%)</title><rect x="1128.5" y="83.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1131.5" y="94.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (484 samples, 0.02%)</title><rect x="1128.5" y="67.0" width="0.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1131.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (53,676 samples, 2.38%)</title><rect x="1129.0" y="387.0" width="28.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1132.0" y="398.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (45,961 samples, 2.04%)</title><rect x="1129.0" y="371.0" width="24.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1132.0" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (45,504 samples, 2.02%)</title><rect x="1129.2" y="355.0" width="23.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1132.2" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (45,216 samples, 2.01%)</title><rect x="1129.4" y="339.0" width="23.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1132.4" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (45,216 samples, 2.01%)</title><rect x="1129.4" y="323.0" width="23.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1132.4" y="334.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (22,547 samples, 1.00%)</title><rect x="1129.4" y="307.0" width="11.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1132.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,239 samples, 0.50%)</title><rect x="1129.4" y="291.0" width="5.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1132.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,239 samples, 0.50%)</title><rect x="1129.4" y="275.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1132.4" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,239 samples, 0.50%)</title><rect x="1129.4" y="259.0" width="5.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1132.4" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,308 samples, 0.50%)</title><rect x="1135.3" y="291.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1138.3" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,308 samples, 0.50%)</title><rect x="1135.3" y="275.0" width="5.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1138.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (22,669 samples, 1.01%)</title><rect x="1141.2" y="307.0" width="11.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1144.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,329 samples, 0.50%)</title><rect x="1141.2" y="291.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1144.2" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,329 samples, 0.50%)</title><rect x="1141.2" y="275.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1144.2" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,329 samples, 0.50%)</title><rect x="1141.2" y="259.0" width="5.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1144.2" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,340 samples, 0.50%)</title><rect x="1147.1" y="291.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1150.1" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,340 samples, 0.50%)</title><rect x="1147.1" y="275.0" width="5.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1150.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (7,715 samples, 0.34%)</title><rect x="1153.0" y="371.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1156.0" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,589 samples, 0.29%)</title><rect x="1153.0" y="355.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1156.0" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,570 samples, 0.29%)</title><rect x="1153.0" y="339.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1156.0" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,272 samples, 0.28%)</title><rect x="1153.2" y="323.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1156.2" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,272 samples, 0.28%)</title><rect x="1153.2" y="307.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1156.2" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,164 samples, 0.27%)</title><rect x="1153.3" y="291.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1156.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,164 samples, 0.27%)</title><rect x="1153.3" y="275.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1156.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,164 samples, 0.27%)</title><rect x="1153.3" y="259.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1156.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,164 samples, 0.27%)</title><rect x="1153.3" y="243.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1156.3" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,502 samples, 0.20%)</title><rect x="1153.3" y="227.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1156.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,447 samples, 0.20%)</title><rect x="1153.3" y="211.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1156.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,447 samples, 0.20%)</title><rect x="1153.3" y="195.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1156.3" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,447 samples, 0.20%)</title><rect x="1153.3" y="179.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1156.3" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,135 samples, 0.05%)</title><rect x="1153.5" y="163.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1156.5" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (584 samples, 0.03%)</title><rect x="1153.5" y="147.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1156.5" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (584 samples, 0.03%)</title><rect x="1153.5" y="131.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1156.5" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (584 samples, 0.03%)</title><rect x="1153.5" y="115.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1156.5" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (551 samples, 0.02%)</title><rect x="1153.9" y="147.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1156.9" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (551 samples, 0.02%)</title><rect x="1153.9" y="131.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1156.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,138 samples, 0.05%)</title><rect x="1154.1" y="163.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1157.1" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (548 samples, 0.02%)</title><rect x="1154.1" y="147.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1157.1" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (548 samples, 0.02%)</title><rect x="1154.1" y="131.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1157.1" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (548 samples, 0.02%)</title><rect x="1154.1" y="115.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1157.1" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (590 samples, 0.03%)</title><rect x="1154.4" y="147.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1157.4" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (590 samples, 0.03%)</title><rect x="1154.4" y="131.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1157.4" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (550 samples, 0.02%)</title><rect x="1154.7" y="163.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1157.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (550 samples, 0.02%)</title><rect x="1154.7" y="147.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1157.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (550 samples, 0.02%)</title><rect x="1154.7" y="131.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1157.7" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (550 samples, 0.02%)</title><rect x="1154.7" y="115.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1157.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,130 samples, 0.05%)</title><rect x="1155.0" y="163.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1158.0" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (559 samples, 0.02%)</title><rect x="1155.0" y="147.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1158.0" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (559 samples, 0.02%)</title><rect x="1155.0" y="131.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1158.0" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (559 samples, 0.02%)</title><rect x="1155.0" y="115.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1158.0" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (571 samples, 0.03%)</title><rect x="1155.3" y="147.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1158.3" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (571 samples, 0.03%)</title><rect x="1155.3" y="131.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1158.3" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (1,662 samples, 0.07%)</title><rect x="1155.6" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1158.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,662 samples, 0.07%)</title><rect x="1155.6" y="211.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1158.6" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,662 samples, 0.07%)</title><rect x="1155.6" y="195.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1158.6" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,662 samples, 0.07%)</title><rect x="1155.6" y="179.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1158.6" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,662 samples, 0.07%)</title><rect x="1155.6" y="163.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1158.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,662 samples, 0.07%)</title><rect x="1155.6" y="147.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1158.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (1,662 samples, 0.07%)</title><rect x="1155.6" y="131.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1158.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,662 samples, 0.07%)</title><rect x="1155.6" y="115.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1158.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (1,662 samples, 0.07%)</title><rect x="1155.6" y="99.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1158.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,662 samples, 0.07%)</title><rect x="1155.6" y="83.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1158.6" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,589 samples, 0.07%)</title><rect x="1155.6" y="67.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1158.6" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,589 samples, 0.07%)</title><rect x="1155.6" y="51.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1158.6" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,589 samples, 0.07%)</title><rect x="1155.6" y="35.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1158.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,126 samples, 0.05%)</title><rect x="1156.5" y="355.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1159.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,104 samples, 0.05%)</title><rect x="1156.5" y="339.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1159.5" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,104 samples, 0.05%)</title><rect x="1156.5" y="323.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1159.5" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (542 samples, 0.02%)</title><rect x="1156.5" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1159.5" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (542 samples, 0.02%)</title><rect x="1156.5" y="291.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1159.5" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (542 samples, 0.02%)</title><rect x="1156.5" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1159.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (542 samples, 0.02%)</title><rect x="1156.5" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1159.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (542 samples, 0.02%)</title><rect x="1156.5" y="243.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1159.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (542 samples, 0.02%)</title><rect x="1156.5" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1159.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (542 samples, 0.02%)</title><rect x="1156.5" y="211.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1159.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (542 samples, 0.02%)</title><rect x="1156.5" y="195.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1159.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (542 samples, 0.02%)</title><rect x="1156.5" y="179.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1159.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (542 samples, 0.02%)</title><rect x="1156.5" y="163.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1159.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (542 samples, 0.02%)</title><rect x="1156.5" y="147.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1159.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (542 samples, 0.02%)</title><rect x="1156.5" y="131.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1159.5" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (542 samples, 0.02%)</title><rect x="1156.5" y="115.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1159.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (542 samples, 0.02%)</title><rect x="1156.5" y="99.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1159.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (542 samples, 0.02%)</title><rect x="1156.5" y="83.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1159.5" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (539 samples, 0.02%)</title><rect x="1156.5" y="67.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.5" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (539 samples, 0.02%)</title><rect x="1156.5" y="51.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1159.5" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (539 samples, 0.02%)</title><rect x="1156.5" y="35.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1159.5" y="46.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (562 samples, 0.02%)</title><rect x="1156.8" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1159.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (562 samples, 0.02%)</title><rect x="1156.8" y="291.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1159.8" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (562 samples, 0.02%)</title><rect x="1156.8" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1159.8" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (562 samples, 0.02%)</title><rect x="1156.8" y="259.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1159.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (562 samples, 0.02%)</title><rect x="1156.8" y="243.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1159.8" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (562 samples, 0.02%)</title><rect x="1156.8" y="227.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1159.8" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (892 samples, 0.04%)</title><rect x="1157.1" y="403.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1160.1" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.from (485 samples, 0.02%)</title><rect x="1157.6" y="403.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1160.6" y="414.0"></text>
</g>
<g>
<title>[worker-9 tid=26333] (60,704 samples, 2.69%)</title><rect x="1158.2" y="547.0" width="31.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1161.2" y="558.0">[w..</text>
</g>
<g>
<title>java/lang/Thread.run (60,704 samples, 2.69%)</title><rect x="1158.2" y="531.0" width="31.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1161.2" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (60,704 samples, 2.69%)</title><rect x="1158.2" y="515.0" width="31.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1161.2" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (60,704 samples, 2.69%)</title><rect x="1158.2" y="499.0" width="31.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1161.2" y="510.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$62/743145411.run (60,703 samples, 2.69%)</title><rect x="1158.2" y="483.0" width="31.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1161.2" y="494.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$executeAsync$4 (60,703 samples, 2.69%)</title><rect x="1158.2" y="467.0" width="31.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.2" y="478.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$70/1231568276.act (60,591 samples, 2.69%)</title><rect x="1158.2" y="451.0" width="31.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1161.2" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$0 (60,591 samples, 2.69%)</title><rect x="1158.2" y="435.0" width="31.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1161.2" y="446.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.get (60,458 samples, 2.68%)</title><rect x="1158.3" y="419.0" width="31.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1161.3" y="430.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.getCell (58,184 samples, 2.58%)</title><rect x="1158.4" y="403.0" width="30.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1161.4" y="414.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4,513 samples, 0.20%)</title><rect x="1158.4" y="387.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1161.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4,095 samples, 0.18%)</title><rect x="1158.4" y="371.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1161.4" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2,001 samples, 0.09%)</title><rect x="1158.4" y="355.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1161.4" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2,001 samples, 0.09%)</title><rect x="1158.4" y="339.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.4" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2,001 samples, 0.09%)</title><rect x="1158.4" y="323.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.4" y="334.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,001 samples, 0.09%)</title><rect x="1158.4" y="307.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1161.4" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,001 samples, 0.09%)</title><rect x="1158.4" y="291.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1161.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (2,001 samples, 0.09%)</title><rect x="1158.4" y="275.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1161.4" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (2,001 samples, 0.09%)</title><rect x="1158.4" y="259.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1161.4" y="270.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,001 samples, 0.09%)</title><rect x="1158.4" y="243.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1161.4" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,001 samples, 0.09%)</title><rect x="1158.4" y="227.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1161.4" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (2,001 samples, 0.09%)</title><rect x="1158.4" y="211.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1161.4" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2,001 samples, 0.09%)</title><rect x="1158.4" y="195.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1161.4" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (2,001 samples, 0.09%)</title><rect x="1158.4" y="179.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1161.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2,001 samples, 0.09%)</title><rect x="1158.4" y="163.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1161.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (2,001 samples, 0.09%)</title><rect x="1158.4" y="147.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1161.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (2,001 samples, 0.09%)</title><rect x="1158.4" y="131.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1161.4" y="142.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,967 samples, 0.09%)</title><rect x="1158.4" y="115.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1161.4" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,967 samples, 0.09%)</title><rect x="1158.4" y="99.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1161.4" y="110.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,967 samples, 0.09%)</title><rect x="1158.4" y="83.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1161.4" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,094 samples, 0.09%)</title><rect x="1159.5" y="355.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1162.5" y="366.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,094 samples, 0.09%)</title><rect x="1159.5" y="339.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1162.5" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,094 samples, 0.09%)</title><rect x="1159.5" y="323.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1162.5" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,094 samples, 0.09%)</title><rect x="1159.5" y="307.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1162.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,094 samples, 0.09%)</title><rect x="1159.5" y="291.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1162.5" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,094 samples, 0.09%)</title><rect x="1159.5" y="275.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1162.5" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,629 samples, 0.07%)</title><rect x="1159.5" y="259.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1162.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,619 samples, 0.07%)</title><rect x="1159.5" y="243.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1162.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (1,619 samples, 0.07%)</title><rect x="1159.5" y="227.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1162.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (1,619 samples, 0.07%)</title><rect x="1159.5" y="211.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1162.5" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.rowsIterator (53,620 samples, 2.38%)</title><rect x="1160.8" y="387.0" width="28.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1163.8" y="398.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.joinIterators (45,701 samples, 2.03%)</title><rect x="1160.8" y="371.0" width="23.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1163.8" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.iterator (45,247 samples, 2.01%)</title><rect x="1161.0" y="355.0" width="23.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1164.0" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.&lt;init&gt; (44,962 samples, 1.99%)</title><rect x="1161.2" y="339.0" width="23.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1164.2" y="350.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.position (44,962 samples, 1.99%)</title><rect x="1161.2" y="323.0" width="23.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1164.2" y="334.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (22,256 samples, 0.99%)</title><rect x="1161.2" y="307.0" width="11.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1164.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,179 samples, 0.50%)</title><rect x="1161.2" y="291.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1164.2" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,179 samples, 0.50%)</title><rect x="1161.2" y="275.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1164.2" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,179 samples, 0.50%)</title><rect x="1161.2" y="259.0" width="5.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1164.2" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,077 samples, 0.49%)</title><rect x="1167.0" y="291.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1170.0" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,077 samples, 0.49%)</title><rect x="1167.0" y="275.0" width="5.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1170.0" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (22,706 samples, 1.01%)</title><rect x="1172.8" y="307.0" width="11.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1175.8" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (11,513 samples, 0.51%)</title><rect x="1172.8" y="291.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1175.8" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (11,513 samples, 0.51%)</title><rect x="1172.8" y="275.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1175.8" y="286.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,513 samples, 0.51%)</title><rect x="1172.8" y="259.0" width="6.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1175.8" y="270.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (11,193 samples, 0.50%)</title><rect x="1178.8" y="291.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1181.8" y="302.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (11,193 samples, 0.50%)</title><rect x="1178.8" y="275.0" width="5.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1181.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table.reduceIterators (7,919 samples, 0.35%)</title><rect x="1184.7" y="371.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1187.7" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6,809 samples, 0.30%)</title><rect x="1184.7" y="355.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1187.7" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6,792 samples, 0.30%)</title><rect x="1184.7" y="339.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1187.7" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (6,513 samples, 0.29%)</title><rect x="1184.8" y="323.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1187.8" y="334.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (6,513 samples, 0.29%)</title><rect x="1184.8" y="307.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1187.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (6,383 samples, 0.28%)</title><rect x="1184.9" y="291.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1187.9" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (6,383 samples, 0.28%)</title><rect x="1184.9" y="275.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1187.9" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,383 samples, 0.28%)</title><rect x="1184.9" y="259.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1187.9" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (6,383 samples, 0.28%)</title><rect x="1184.9" y="243.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1187.9" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,619 samples, 0.20%)</title><rect x="1184.9" y="227.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1187.9" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,576 samples, 0.20%)</title><rect x="1184.9" y="211.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1187.9" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable$SSTableIterator.next (4,576 samples, 0.20%)</title><rect x="1184.9" y="195.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1187.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.transform (4,576 samples, 0.20%)</title><rect x="1184.9" y="179.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1187.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.keyAt (1,155 samples, 0.05%)</title><rect x="1185.2" y="163.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.2" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (572 samples, 0.03%)</title><rect x="1185.2" y="147.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1188.2" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (572 samples, 0.03%)</title><rect x="1185.2" y="131.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1188.2" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (572 samples, 0.03%)</title><rect x="1185.2" y="115.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1188.2" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (583 samples, 0.03%)</title><rect x="1185.5" y="147.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.5" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (583 samples, 0.03%)</title><rect x="1185.5" y="131.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1188.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.rowAt (1,217 samples, 0.05%)</title><rect x="1185.8" y="163.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1188.8" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (609 samples, 0.03%)</title><rect x="1185.8" y="147.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1188.8" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (609 samples, 0.03%)</title><rect x="1185.8" y="131.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1188.8" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (609 samples, 0.03%)</title><rect x="1185.8" y="115.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1188.8" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (608 samples, 0.03%)</title><rect x="1186.1" y="147.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1189.1" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (608 samples, 0.03%)</title><rect x="1186.1" y="131.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1189.1" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.timestampAt (596 samples, 0.03%)</title><rect x="1186.4" y="163.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1189.4" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (596 samples, 0.03%)</title><rect x="1186.4" y="147.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1189.4" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (596 samples, 0.03%)</title><rect x="1186.4" y="131.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1189.4" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (596 samples, 0.03%)</title><rect x="1186.4" y="115.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1189.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/SSTable.valueAt (1,130 samples, 0.05%)</title><rect x="1186.7" y="163.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1189.7" y="174.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (561 samples, 0.02%)</title><rect x="1186.7" y="147.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1189.7" y="158.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (561 samples, 0.02%)</title><rect x="1186.7" y="131.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1189.7" y="142.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (561 samples, 0.02%)</title><rect x="1186.7" y="115.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1189.7" y="126.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (569 samples, 0.03%)</title><rect x="1187.0" y="147.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1190.0" y="158.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (569 samples, 0.03%)</title><rect x="1187.0" y="131.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1190.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (1,764 samples, 0.08%)</title><rect x="1187.3" y="227.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1190.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (1,764 samples, 0.08%)</title><rect x="1187.3" y="211.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1190.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,764 samples, 0.08%)</title><rect x="1187.3" y="195.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1190.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,764 samples, 0.08%)</title><rect x="1187.3" y="179.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1190.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (1,764 samples, 0.08%)</title><rect x="1187.3" y="163.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1190.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1,764 samples, 0.08%)</title><rect x="1187.3" y="147.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1190.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (1,764 samples, 0.08%)</title><rect x="1187.3" y="131.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1190.3" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1,764 samples, 0.08%)</title><rect x="1187.3" y="115.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1190.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (1,764 samples, 0.08%)</title><rect x="1187.3" y="99.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1190.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (1,764 samples, 0.08%)</title><rect x="1187.3" y="83.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1190.3" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (1,682 samples, 0.07%)</title><rect x="1187.3" y="67.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1190.3" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (1,682 samples, 0.07%)</title><rect x="1187.3" y="51.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1190.3" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (1,682 samples, 0.07%)</title><rect x="1187.3" y="35.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1190.3" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1,110 samples, 0.05%)</title><rect x="1188.3" y="355.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1191.3" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1,089 samples, 0.05%)</title><rect x="1188.3" y="339.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1191.3" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,089 samples, 0.05%)</title><rect x="1188.3" y="323.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.3" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (542 samples, 0.02%)</title><rect x="1188.3" y="307.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.3" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (542 samples, 0.02%)</title><rect x="1188.3" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.3" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (542 samples, 0.02%)</title><rect x="1188.3" y="275.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1191.3" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (542 samples, 0.02%)</title><rect x="1188.3" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1191.3" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (542 samples, 0.02%)</title><rect x="1188.3" y="243.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1191.3" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Table$$Lambda$71/467132638.compare (542 samples, 0.02%)</title><rect x="1188.3" y="227.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.3" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.compareTo (542 samples, 0.02%)</title><rect x="1188.3" y="211.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1191.3" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (542 samples, 0.02%)</title><rect x="1188.3" y="195.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.3" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (542 samples, 0.02%)</title><rect x="1188.3" y="179.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1191.3" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$66/79075161.compare (542 samples, 0.02%)</title><rect x="1188.3" y="163.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1191.3" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (542 samples, 0.02%)</title><rect x="1188.3" y="147.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1191.3" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$64/1289595091.compare (542 samples, 0.02%)</title><rect x="1188.3" y="131.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.3" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (542 samples, 0.02%)</title><rect x="1188.3" y="115.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1191.3" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row$$Lambda$63/406700913.apply (542 samples, 0.02%)</title><rect x="1188.3" y="99.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.3" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getKey (542 samples, 0.02%)</title><rect x="1188.3" y="83.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1191.3" y="94.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.asReadOnlyBuffer (538 samples, 0.02%)</title><rect x="1188.3" y="67.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1191.3" y="78.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.duplicate (538 samples, 0.02%)</title><rect x="1188.3" y="51.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1191.3" y="62.0"></text>
</g>
<g>
<title>java.nio.DirectByteBufferR (538 samples, 0.02%)</title><rect x="1188.3" y="35.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1191.3" y="46.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (547 samples, 0.02%)</title><rect x="1188.6" y="307.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.6" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (547 samples, 0.02%)</title><rect x="1188.6" y="291.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1191.6" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (547 samples, 0.02%)</title><rect x="1188.6" y="275.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1191.6" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (547 samples, 0.02%)</title><rect x="1188.6" y="259.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1191.6" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (547 samples, 0.02%)</title><rect x="1188.6" y="243.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1191.6" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (547 samples, 0.02%)</title><rect x="1188.6" y="227.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1191.6" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.getResponsesFromRelicas (874 samples, 0.04%)</title><rect x="1188.9" y="403.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1191.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/Value.from (502 samples, 0.02%)</title><rect x="1189.3" y="403.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1192.3" y="414.0"></text>
</g>
</g>
</svg>
