<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1173"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1173"> </text>
<g id="frames">
<g>
<title>all (3,456 samples, 100.00%)</title><rect x="10.0" y="1139.0" width="1180.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="1150.0">all</text>
</g>
<g>
<title>Klass::klass_holder() const (1 samples, 0.03%)</title><rect x="10.0" y="1123.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="1134.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="10.3" y="1123.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.3" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.12%)</title><rect x="10.7" y="1123.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.7" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="10.7" y="1107.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.7" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="10.7" y="1091.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.7" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="10.7" y="1075.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.7" y="1086.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.03%)</title><rect x="10.7" y="1059.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.7" y="1070.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.09%)</title><rect x="11.0" y="1107.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="14.0" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.09%)</title><rect x="11.0" y="1091.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="14.0" y="1102.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="11.0" y="1075.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.0" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.06%)</title><rect x="11.4" y="1075.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="14.4" y="1086.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="11.4" y="1059.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.4" y="1070.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="11.7" y="1059.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="14.7" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.12%)</title><rect x="12.0" y="1123.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="15.0" y="1134.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.09%)</title><rect x="12.4" y="1107.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.4" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.09%)</title><rect x="12.4" y="1091.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="15.4" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.09%)</title><rect x="12.4" y="1075.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="15.4" y="1086.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.03%)</title><rect x="12.7" y="1059.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="15.7" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="13.1" y="1059.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.1" y="1070.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.03%)</title><rect x="13.1" y="1043.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="16.1" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.17%)</title><rect x="13.4" y="1123.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="16.4" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.12%)</title><rect x="14.1" y="1107.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="17.1" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.12%)</title><rect x="14.1" y="1091.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="17.1" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.09%)</title><rect x="14.1" y="1075.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="17.1" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.09%)</title><rect x="14.1" y="1059.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="17.1" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="14.1" y="1043.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="17.1" y="1054.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="14.4" y="1043.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.4" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.03%)</title><rect x="14.4" y="1027.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.4" y="1038.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="14.4" y="1011.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="17.4" y="1022.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="14.8" y="1043.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="17.8" y="1054.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="15.1" y="1075.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="18.1" y="1086.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (65 samples, 1.88%)</title><rect x="15.5" y="1123.0" width="22.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="18.5" y="1134.0">S..</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (65 samples, 1.88%)</title><rect x="15.5" y="1107.0" width="22.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="18.5" y="1118.0">O..</text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.03%)</title><rect x="15.5" y="1091.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.5" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (47 samples, 1.36%)</title><rect x="15.8" y="1091.0" width="16.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="18.8" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (34 samples, 0.98%)</title><rect x="15.8" y="1075.0" width="11.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="18.8" y="1086.0"></text>
</g>
<g>
<title>SpinPause (13 samples, 0.38%)</title><rect x="27.4" y="1075.0" width="4.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="30.4" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (17 samples, 0.49%)</title><rect x="31.9" y="1091.0" width="5.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="34.9" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (14 samples, 0.41%)</title><rect x="32.5" y="1075.0" width="4.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="35.5" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (8 samples, 0.23%)</title><rect x="32.9" y="1059.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="35.9" y="1070.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.06%)</title><rect x="35.6" y="1059.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="38.6" y="1070.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.06%)</title><rect x="36.3" y="1059.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="39.3" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="36.6" y="1043.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="39.6" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="36.6" y="1027.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="39.6" y="1038.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.03%)</title><rect x="37.0" y="1059.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="40.0" y="1070.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.03%)</title><rect x="37.0" y="1043.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="40.0" y="1054.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.03%)</title><rect x="37.3" y="1075.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="40.3" y="1086.0"></text>
</g>
<g>
<title>[not_walkable] (12 samples, 0.35%)</title><rect x="37.7" y="1123.0" width="4.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="40.7" y="1134.0"></text>
</g>
<g>
<title>[not_walkable_Java] (6 samples, 0.17%)</title><rect x="41.8" y="1123.0" width="2.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="44.8" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.09%)</title><rect x="41.8" y="1107.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="44.8" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (3 samples, 0.09%)</title><rect x="41.8" y="1091.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="44.8" y="1102.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.09%)</title><rect x="41.8" y="1075.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="44.8" y="1086.0"></text>
</g>
<g>
<title>CodeBlob::oop_map_for_return_address(unsigned char*) (1 samples, 0.03%)</title><rect x="41.8" y="1059.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="44.8" y="1070.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (2 samples, 0.06%)</title><rect x="42.1" y="1059.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="45.1" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.03%)</title><rect x="42.8" y="1107.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="45.8" y="1118.0"></text>
</g>
<g>
<title>__GI___clock_gettime (2 samples, 0.06%)</title><rect x="43.1" y="1107.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="46.1" y="1118.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.06%)</title><rect x="43.1" y="1091.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="46.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.23%)</title><rect x="43.8" y="1123.0" width="2.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="46.8" y="1134.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.03%)</title><rect x="43.8" y="1107.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="46.8" y="1118.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.03%)</title><rect x="44.1" y="1107.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="47.1" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (6 samples, 0.17%)</title><rect x="44.5" y="1107.0" width="2.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="47.5" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.12%)</title><rect x="45.2" y="1091.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="48.2" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.12%)</title><rect x="45.2" y="1075.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="48.2" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.09%)</title><rect x="45.5" y="1059.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="48.5" y="1070.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.06%)</title><rect x="45.5" y="1043.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="48.5" y="1054.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.06%)</title><rect x="45.5" y="1027.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="48.5" y="1038.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="45.9" y="1011.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="48.9" y="1022.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="46.2" y="1043.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="49.2" y="1054.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="46.2" y="1027.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="49.2" y="1038.0"></text>
</g>
<g>
<title>[unknown_Java] (65 samples, 1.88%)</title><rect x="46.5" y="1123.0" width="22.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="49.5" y="1134.0">[..</text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="61.6" y="1107.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="64.6" y="1118.0"></text>
</g>
<g>
<title>__GI___clock_gettime (1 samples, 0.03%)</title><rect x="61.9" y="1107.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="64.9" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 0.43%)</title><rect x="62.2" y="1107.0" width="5.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="65.2" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.43%)</title><rect x="62.2" y="1091.0" width="5.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="65.2" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.43%)</title><rect x="62.2" y="1075.0" width="5.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="65.2" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.43%)</title><rect x="62.2" y="1059.0" width="5.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="65.2" y="1070.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.43%)</title><rect x="62.2" y="1043.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="65.2" y="1054.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.43%)</title><rect x="62.2" y="1027.0" width="5.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="65.2" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.38%)</title><rect x="62.9" y="1011.0" width="4.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="65.9" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.38%)</title><rect x="62.9" y="995.0" width="4.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="65.9" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.38%)</title><rect x="62.9" y="979.0" width="4.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="65.9" y="990.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.06%)</title><rect x="67.4" y="1107.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="70.4" y="1118.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="68.0" y="1107.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="71.0" y="1118.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="68.4" y="1107.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="71.4" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="68.4" y="1091.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="71.4" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="68.4" y="1075.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="71.4" y="1086.0"></text>
</g>
<g>
<title>__GI___clock_gettime (1 samples, 0.03%)</title><rect x="68.7" y="1123.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="71.7" y="1134.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="69.1" y="1123.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="72.1" y="1134.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="69.1" y="1107.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="72.1" y="1118.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="69.1" y="1091.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="72.1" y="1102.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="69.1" y="1075.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="72.1" y="1086.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="69.1" y="1059.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="72.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,031 samples, 58.77%)</title><rect x="69.4" y="1123.0" width="693.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.4" y="1134.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,031 samples, 58.77%)</title><rect x="69.4" y="1107.0" width="693.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.4" y="1118.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,031 samples, 58.77%)</title><rect x="69.4" y="1091.0" width="693.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.4" y="1102.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (4 samples, 0.12%)</title><rect x="69.8" y="1075.0" width="1.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="72.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (365 samples, 10.56%)</title><rect x="71.1" y="1075.0" width="124.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.1" y="1086.0">java/util/concu..</text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="72.1" y="1059.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="75.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (361 samples, 10.45%)</title><rect x="72.5" y="1059.0" width="123.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="75.5" y="1070.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (361 samples, 10.45%)</title><rect x="72.5" y="1043.0" width="123.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.5" y="1054.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="72.5" y="1027.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.03%)</title><rect x="72.5" y="1011.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.03%)</title><rect x="72.5" y="995.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (1 samples, 0.03%)</title><rect x="72.5" y="979.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="75.5" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_L_I (1 samples, 0.03%)</title><rect x="72.5" y="963.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.5" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadOnly.getAcquire (1 samples, 0.03%)</title><rect x="72.5" y="947.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="75.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1729551726.apply (360 samples, 10.42%)</title><rect x="72.8" y="1027.0" width="122.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="75.8" y="1038.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (360 samples, 10.42%)</title><rect x="72.8" y="1011.0" width="122.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.8" y="1022.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (360 samples, 10.42%)</title><rect x="72.8" y="995.0" width="122.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.8" y="1006.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="72.8" y="979.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="75.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="72.8" y="963.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="75.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (1 samples, 0.03%)</title><rect x="72.8" y="947.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="75.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="72.8" y="931.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (354 samples, 10.24%)</title><rect x="73.2" y="979.0" width="120.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.2" y="990.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (354 samples, 10.24%)</title><rect x="73.2" y="963.0" width="120.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.2" y="974.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (354 samples, 10.24%)</title><rect x="73.2" y="947.0" width="120.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.2" y="958.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="73.5" y="931.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.5" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="73.5" y="915.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (180 samples, 5.21%)</title><rect x="73.8" y="931.0" width="61.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.8" y="942.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (180 samples, 5.21%)</title><rect x="73.8" y="915.0" width="61.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="76.8" y="926.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (1 samples, 0.03%)</title><rect x="74.2" y="899.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="74.2" y="883.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="74.2" y="867.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (177 samples, 5.12%)</title><rect x="74.5" y="899.0" width="60.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.5" y="910.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$209/384755526.apply (176 samples, 5.09%)</title><rect x="74.9" y="883.0" width="60.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.9" y="894.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.03%)</title><rect x="75.2" y="867.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (174 samples, 5.03%)</title><rect x="75.6" y="867.0" width="59.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.6" y="878.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (174 samples, 5.03%)</title><rect x="75.6" y="851.0" width="59.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.6" y="862.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$149/2119912657.apply (174 samples, 5.03%)</title><rect x="75.6" y="835.0" width="59.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.6" y="846.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (174 samples, 5.03%)</title><rect x="75.6" y="819.0" width="59.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.6" y="830.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.09%)</title><rect x="75.6" y="803.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.06%)</title><rect x="75.9" y="787.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (1 samples, 0.03%)</title><rect x="75.9" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="75.9" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="76.2" y="771.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="79.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="76.2" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="79.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (171 samples, 4.95%)</title><rect x="76.6" y="803.0" width="58.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.6" y="814.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (145 samples, 4.20%)</title><rect x="76.6" y="787.0" width="49.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.6" y="798.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (145 samples, 4.20%)</title><rect x="76.6" y="771.0" width="49.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.6" y="782.0">java/..</text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="76.6" y="755.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="79.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (1 samples, 0.03%)</title><rect x="76.9" y="755.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="76.9" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="79.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.03%)</title><rect x="77.3" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="77.6" y="755.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/1335640103.apply (140 samples, 4.05%)</title><rect x="77.9" y="755.0" width="47.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="80.9" y="766.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (140 samples, 4.05%)</title><rect x="77.9" y="739.0" width="47.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="80.9" y="750.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="78.3" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.3" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="78.3" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$245/1147499784.get$Lambda (1 samples, 0.03%)</title><rect x="78.3" y="691.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="81.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (8 samples, 0.23%)</title><rect x="78.6" y="723.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="81.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (8 samples, 0.23%)</title><rect x="78.6" y="707.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.06%)</title><rect x="78.6" y="691.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.06%)</title><rect x="78.6" y="675.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="81.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.06%)</title><rect x="78.6" y="659.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.06%)</title><rect x="78.6" y="643.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (2 samples, 0.06%)</title><rect x="78.6" y="627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="81.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.17%)</title><rect x="79.3" y="691.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.17%)</title><rect x="79.3" y="675.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.17%)</title><rect x="79.3" y="659.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.17%)</title><rect x="79.3" y="643.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.03%)</title><rect x="79.3" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="82.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.03%)</title><rect x="79.3" y="611.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.03%)</title><rect x="79.3" y="595.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.03%)</title><rect x="79.3" y="579.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="82.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.03%)</title><rect x="79.3" y="563.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.03%)</title><rect x="79.3" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.03%)</title><rect x="79.3" y="531.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="82.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.03%)</title><rect x="79.3" y="515.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="82.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="79.3" y="499.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.weakCompareAndSet (1 samples, 0.03%)</title><rect x="79.3" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.12%)</title><rect x="79.7" y="627.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="82.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (4 samples, 0.12%)</title><rect x="79.7" y="611.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.03%)</title><rect x="80.0" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.03%)</title><rect x="80.0" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="83.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.03%)</title><rect x="80.0" y="563.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.06%)</title><rect x="80.3" y="595.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.06%)</title><rect x="80.3" y="579.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (2 samples, 0.06%)</title><rect x="80.3" y="563.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (2 samples, 0.06%)</title><rect x="80.3" y="547.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (2 samples, 0.06%)</title><rect x="80.3" y="531.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.3" y="542.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (2 samples, 0.06%)</title><rect x="80.3" y="515.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="83.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.06%)</title><rect x="80.3" y="499.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.3" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.06%)</title><rect x="80.3" y="483.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.3" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.06%)</title><rect x="80.3" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.3" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (2 samples, 0.06%)</title><rect x="80.3" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="83.3" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (2 samples, 0.06%)</title><rect x="80.3" y="435.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.3" y="446.0"></text>
</g>
<g>
<title>.annobin_writev.c (1 samples, 0.03%)</title><rect x="80.7" y="419.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="83.7" y="430.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="80.7" y="403.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="83.7" y="414.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="80.7" y="387.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="83.7" y="398.0"></text>
</g>
<g>
<title>do_writev (1 samples, 0.03%)</title><rect x="80.7" y="371.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="83.7" y="382.0"></text>
</g>
<g>
<title>vfs_writev (1 samples, 0.03%)</title><rect x="80.7" y="355.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="83.7" y="366.0"></text>
</g>
<g>
<title>do_iter_write (1 samples, 0.03%)</title><rect x="80.7" y="339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="83.7" y="350.0"></text>
</g>
<g>
<title>do_iter_readv_writev (1 samples, 0.03%)</title><rect x="80.7" y="323.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="83.7" y="334.0"></text>
</g>
<g>
<title>sock_write_iter (1 samples, 0.03%)</title><rect x="80.7" y="307.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="83.7" y="318.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.03%)</title><rect x="80.7" y="291.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="83.7" y="302.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.03%)</title><rect x="80.7" y="275.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="83.7" y="286.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.03%)</title><rect x="80.7" y="259.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="83.7" y="270.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.03%)</title><rect x="80.7" y="243.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="83.7" y="254.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.03%)</title><rect x="80.7" y="227.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="83.7" y="238.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.03%)</title><rect x="80.7" y="211.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="83.7" y="222.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.03%)</title><rect x="80.7" y="195.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="83.7" y="206.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="80.7" y="179.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="83.7" y="190.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.03%)</title><rect x="80.7" y="163.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="83.7" y="174.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="80.7" y="147.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="83.7" y="158.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.03%)</title><rect x="80.7" y="131.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="83.7" y="142.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="80.7" y="115.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="83.7" y="126.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="80.7" y="99.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="83.7" y="110.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="80.7" y="83.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="83.7" y="94.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.03%)</title><rect x="80.7" y="67.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="83.7" y="78.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.03%)</title><rect x="80.7" y="51.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="83.7" y="62.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="80.7" y="35.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="83.7" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="81.0" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.03%)</title><rect x="81.0" y="611.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.03%)</title><rect x="81.0" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.03%)</title><rect x="81.0" y="579.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.03%)</title><rect x="81.0" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.03%)</title><rect x="81.0" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="84.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1 samples, 0.03%)</title><rect x="81.0" y="531.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.03%)</title><rect x="81.0" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (42 samples, 1.22%)</title><rect x="81.4" y="723.0" width="14.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (42 samples, 1.22%)</title><rect x="81.4" y="707.0" width="14.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="84.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (7 samples, 0.20%)</title><rect x="81.4" y="691.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (7 samples, 0.20%)</title><rect x="81.4" y="675.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (7 samples, 0.20%)</title><rect x="81.4" y="659.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="84.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 0.12%)</title><rect x="81.4" y="643.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 0.12%)</title><rect x="81.4" y="627.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.4" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.06%)</title><rect x="82.0" y="611.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="85.0" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.06%)</title><rect x="82.0" y="595.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (1 samples, 0.03%)</title><rect x="82.7" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (2 samples, 0.06%)</title><rect x="83.1" y="643.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="86.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (1 samples, 0.03%)</title><rect x="83.4" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="86.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (35 samples, 1.01%)</title><rect x="83.8" y="691.0" width="11.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (35 samples, 1.01%)</title><rect x="83.8" y="675.0" width="11.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (33 samples, 0.95%)</title><rect x="83.8" y="659.0" width="11.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="86.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (33 samples, 0.95%)</title><rect x="83.8" y="643.0" width="11.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (33 samples, 0.95%)</title><rect x="83.8" y="627.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.8" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.14%)</title><rect x="84.8" y="611.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.8" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.14%)</title><rect x="84.8" y="595.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.8" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.14%)</title><rect x="84.8" y="579.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.8" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.14%)</title><rect x="84.8" y="563.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.8" y="574.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.12%)</title><rect x="85.1" y="547.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="88.1" y="558.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.03%)</title><rect x="85.1" y="531.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="88.1" y="542.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (3 samples, 0.09%)</title><rect x="85.5" y="531.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="88.5" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.84] (2 samples, 0.06%)</title><rect x="85.5" y="515.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="88.5" y="526.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.03%)</title><rect x="86.1" y="515.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="89.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (25 samples, 0.72%)</title><rect x="86.5" y="611.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="89.5" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (25 samples, 0.72%)</title><rect x="86.5" y="595.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="89.5" y="606.0"></text>
</g>
<g>
<title>__libc_write (25 samples, 0.72%)</title><rect x="86.5" y="579.0" width="8.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="89.5" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.58%)</title><rect x="88.2" y="563.0" width="6.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="91.2" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.58%)</title><rect x="88.2" y="547.0" width="6.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="91.2" y="558.0"></text>
</g>
<g>
<title>ksys_write (19 samples, 0.55%)</title><rect x="88.5" y="531.0" width="6.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="91.5" y="542.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.06%)</title><rect x="88.5" y="515.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="91.5" y="526.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="88.5" y="499.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="91.5" y="510.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="88.9" y="483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="91.9" y="494.0"></text>
</g>
<g>
<title>vfs_write (17 samples, 0.49%)</title><rect x="89.2" y="515.0" width="5.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="92.2" y="526.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="89.2" y="499.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="92.2" y="510.0"></text>
</g>
<g>
<title>new_sync_write (14 samples, 0.41%)</title><rect x="89.6" y="499.0" width="4.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="92.6" y="510.0"></text>
</g>
<g>
<title>pipe_write (14 samples, 0.41%)</title><rect x="89.6" y="483.0" width="4.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="92.6" y="494.0"></text>
</g>
<g>
<title>__wake_up_common_lock (11 samples, 0.32%)</title><rect x="89.9" y="467.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="92.9" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.32%)</title><rect x="89.9" y="451.0" width="3.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="92.9" y="462.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.03%)</title><rect x="93.7" y="467.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="96.7" y="478.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.03%)</title><rect x="93.7" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="96.7" y="462.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.03%)</title><rect x="93.7" y="435.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="96.7" y="446.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="94.0" y="467.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="97.0" y="478.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="94.0" y="451.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="97.0" y="462.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="94.0" y="435.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="97.0" y="446.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.03%)</title><rect x="94.3" y="499.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="97.3" y="510.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="94.7" y="499.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="97.7" y="510.0"></text>
</g>
<g>
<title>file_has_perm (1 samples, 0.03%)</title><rect x="94.7" y="483.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="97.7" y="494.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="94.7" y="467.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="97.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (2 samples, 0.06%)</title><rect x="95.0" y="659.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (88 samples, 2.55%)</title><rect x="95.7" y="723.0" width="30.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="98.7" y="734.0">jd..</text>
</g>
<g>
<title>java/lang/Long.toString (2 samples, 0.06%)</title><rect x="96.0" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.0" y="718.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (2 samples, 0.06%)</title><rect x="96.0" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.0" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="96.4" y="675.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="99.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="96.7" y="707.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.7" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.03%)</title><rect x="96.7" y="691.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (1 samples, 0.03%)</title><rect x="96.7" y="675.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.7" y="686.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.29%)</title><rect x="97.1" y="707.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.1" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (10 samples, 0.29%)</title><rect x="97.1" y="691.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.1" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.14%)</title><rect x="97.1" y="675.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.1" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.newCapacity (2 samples, 0.06%)</title><rect x="97.7" y="659.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.7" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="98.4" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.4" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.isLatin1 (1 samples, 0.03%)</title><rect x="98.8" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.8" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (4 samples, 0.12%)</title><rect x="99.1" y="675.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.1" y="686.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.12%)</title><rect x="99.1" y="659.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.09%)</title><rect x="99.5" y="643.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="102.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (53 samples, 1.53%)</title><rect x="100.5" y="707.0" width="18.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="103.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (2 samples, 0.06%)</title><rect x="100.5" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.5" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.06%)</title><rect x="100.5" y="675.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="103.5" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.06%)</title><rect x="100.5" y="659.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="103.5" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.06%)</title><rect x="100.5" y="643.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="103.5" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.06%)</title><rect x="100.5" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="103.5" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.06%)</title><rect x="100.5" y="611.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="103.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="100.5" y="595.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="103.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="100.5" y="579.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="103.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.06%)</title><rect x="100.5" y="563.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.5" y="574.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="100.8" y="547.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="103.8" y="558.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="100.8" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.8" y="542.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="100.8" y="515.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="103.8" y="526.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.03%)</title><rect x="100.8" y="499.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (19 samples, 0.55%)</title><rect x="101.2" y="691.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="101.2" y="675.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.14%)</title><rect x="101.5" y="675.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.5" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.14%)</title><rect x="101.5" y="659.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.5" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="102.9" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="105.9" y="654.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext (2 samples, 0.06%)</title><rect x="103.2" y="675.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="106.2" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (3 samples, 0.09%)</title><rect x="103.9" y="675.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.9" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (3 samples, 0.09%)</title><rect x="103.9" y="659.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.9" y="670.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.&lt;init&gt; (1 samples, 0.03%)</title><rect x="103.9" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.9" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.06%)</title><rect x="104.2" y="643.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="107.2" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.06%)</title><rect x="104.2" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="107.2" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.06%)</title><rect x="104.2" y="611.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="107.2" y="622.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (4 samples, 0.12%)</title><rect x="104.9" y="675.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="107.9" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (4 samples, 0.12%)</title><rect x="104.9" y="659.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="107.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (3 samples, 0.09%)</title><rect x="105.3" y="643.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="108.3" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (3 samples, 0.09%)</title><rect x="105.3" y="627.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.3" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (3 samples, 0.09%)</title><rect x="105.3" y="611.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="108.3" y="622.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="105.6" y="595.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="108.6" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="105.9" y="595.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="108.9" y="606.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$248/471895969.test (4 samples, 0.12%)</title><rect x="106.3" y="675.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.3" y="686.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (4 samples, 0.12%)</title><rect x="106.3" y="659.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="109.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$194/1679023824.test (1 samples, 0.03%)</title><rect x="106.3" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="109.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.lambda$static$0 (1 samples, 0.03%)</title><rect x="106.3" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="109.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="106.3" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="109.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="106.3" y="595.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="109.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="106.3" y="579.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="109.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/1464555023.test (3 samples, 0.09%)</title><rect x="106.6" y="643.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="109.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (3 samples, 0.09%)</title><rect x="106.6" y="627.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="109.6" y="638.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/254801937.test (3 samples, 0.09%)</title><rect x="106.6" y="611.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.6" y="622.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (3 samples, 0.09%)</title><rect x="106.6" y="595.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="109.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/270056930.test (3 samples, 0.09%)</title><rect x="106.6" y="579.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="109.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (3 samples, 0.09%)</title><rect x="106.6" y="563.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="109.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.06%)</title><rect x="106.6" y="547.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="109.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.06%)</title><rect x="106.6" y="531.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.6" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.06%)</title><rect x="106.6" y="515.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="109.6" y="526.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="107.0" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.0" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="107.3" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="107.3" y="531.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.3" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="107.3" y="515.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (2 samples, 0.06%)</title><rect x="107.7" y="691.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.isConnect (2 samples, 0.06%)</title><rect x="107.7" y="675.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.7" y="686.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.06%)</title><rect x="107.7" y="659.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.06%)</title><rect x="107.7" y="643.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.7" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.06%)</title><rect x="107.7" y="627.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.06%)</title><rect x="107.7" y="611.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="110.7" y="622.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.06%)</title><rect x="107.7" y="595.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="110.7" y="606.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.03%)</title><rect x="108.0" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (30 samples, 0.87%)</title><rect x="108.3" y="691.0" width="10.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="111.3" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (30 samples, 0.87%)</title><rect x="108.3" y="675.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="111.3" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (30 samples, 0.87%)</title><rect x="108.3" y="659.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.3" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (1 samples, 0.03%)</title><rect x="108.7" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.7" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (1 samples, 0.03%)</title><rect x="108.7" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.7" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.03%)</title><rect x="108.7" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.7" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (2 samples, 0.06%)</title><rect x="109.0" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.0" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (26 samples, 0.75%)</title><rect x="109.7" y="643.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.7" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (25 samples, 0.72%)</title><rect x="109.7" y="627.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="112.7" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (25 samples, 0.72%)</title><rect x="109.7" y="611.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.7" y="622.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.06%)</title><rect x="109.7" y="595.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.7" y="606.0"></text>
</g>
<g>
<title>java/lang/String.trim (8 samples, 0.23%)</title><rect x="110.4" y="595.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="113.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (7 samples, 0.20%)</title><rect x="110.7" y="579.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.06%)</title><rect x="112.4" y="563.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="115.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="112.4" y="547.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.4" y="558.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="112.4" y="531.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.4" y="542.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="112.4" y="515.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="115.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="112.8" y="547.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.03%)</title><rect x="113.1" y="595.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.1" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.accept (1 samples, 0.03%)</title><rect x="113.1" y="579.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.1" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.03%)</title><rect x="113.1" y="563.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.1" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="113.1" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.1" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="113.1" y="531.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="116.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="113.1" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="116.1" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="113.1" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="116.1" y="510.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="113.1" y="483.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="116.1" y="494.0"></text>
</g>
<g>
<title>java/util/List.copyOf (4 samples, 0.12%)</title><rect x="113.5" y="595.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="116.5" y="606.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (4 samples, 0.12%)</title><rect x="113.5" y="579.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="116.5" y="590.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.06%)</title><rect x="114.1" y="563.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.1" y="574.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListN.&lt;init&gt; (2 samples, 0.06%)</title><rect x="114.1" y="547.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="117.1" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.29%)</title><rect x="114.8" y="595.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="117.8" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (1 samples, 0.03%)</title><rect x="115.8" y="579.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.8" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (5 samples, 0.14%)</title><rect x="116.2" y="579.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="119.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.12%)</title><rect x="116.5" y="563.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="119.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.12%)</title><rect x="116.5" y="547.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="119.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.09%)</title><rect x="116.9" y="531.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="119.9" y="542.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.03%)</title><rect x="117.6" y="515.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="120.6" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.03%)</title><rect x="117.9" y="579.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="120.9" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (1 samples, 0.03%)</title><rect x="117.9" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="120.9" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.03%)</title><rect x="118.2" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1 samples, 0.03%)</title><rect x="118.6" y="707.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (8 samples, 0.23%)</title><rect x="118.9" y="707.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.09%)</title><rect x="118.9" y="691.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="121.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (4 samples, 0.12%)</title><rect x="119.9" y="691.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.09%)</title><rect x="119.9" y="675.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="120.6" y="659.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="123.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="121.0" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.03%)</title><rect x="121.0" y="659.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/667821226.invoke (1 samples, 0.03%)</title><rect x="121.0" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="124.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="121.0" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="124.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.proxy (1 samples, 0.03%)</title><rect x="121.3" y="691.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (12 samples, 0.35%)</title><rect x="121.6" y="707.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.6" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.06%)</title><rect x="122.3" y="691.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="125.3" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.06%)</title><rect x="122.3" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.3" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.06%)</title><rect x="122.3" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.3" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.06%)</title><rect x="122.3" y="643.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="125.3" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="122.7" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.7" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.23%)</title><rect x="123.0" y="691.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.0" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (2 samples, 0.06%)</title><rect x="123.4" y="675.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.4" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (5 samples, 0.14%)</title><rect x="124.0" y="675.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="127.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.14%)</title><rect x="124.0" y="659.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.14%)</title><rect x="124.0" y="643.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="127.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="124.0" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="127.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.12%)</title><rect x="124.4" y="627.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.4" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="124.7" y="611.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="127.7" y="622.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="124.7" y="595.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="127.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.getChar (2 samples, 0.06%)</title><rect x="125.1" y="611.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="128.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="125.7" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="125.7" y="739.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="128.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.03%)</title><rect x="125.7" y="723.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="128.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.03%)</title><rect x="125.7" y="707.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="128.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (26 samples, 0.75%)</title><rect x="126.1" y="787.0" width="8.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="129.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (9 samples, 0.26%)</title><rect x="126.8" y="771.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.26%)</title><rect x="126.8" y="755.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.26%)</title><rect x="126.8" y="739.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="129.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (9 samples, 0.26%)</title><rect x="126.8" y="723.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (9 samples, 0.26%)</title><rect x="126.8" y="707.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (2 samples, 0.06%)</title><rect x="126.8" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.06%)</title><rect x="126.8" y="675.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.06%)</title><rect x="126.8" y="659.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="129.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.06%)</title><rect x="126.8" y="643.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.06%)</title><rect x="126.8" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.06%)</title><rect x="126.8" y="611.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.06%)</title><rect x="126.8" y="595.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.06%)</title><rect x="126.8" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="129.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.06%)</title><rect x="126.8" y="563.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.weakCompareAndSet (2 samples, 0.06%)</title><rect x="126.8" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5 samples, 0.14%)</title><rect x="127.5" y="691.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="130.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (5 samples, 0.14%)</title><rect x="127.5" y="675.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="130.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5 samples, 0.14%)</title><rect x="127.5" y="659.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="130.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.09%)</title><rect x="127.8" y="643.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="130.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="127.8" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="127.8" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="130.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1241815609.get$Lambda (1 samples, 0.03%)</title><rect x="127.8" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="130.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1241815609.&lt;init&gt; (1 samples, 0.03%)</title><rect x="127.8" y="579.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="130.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (1 samples, 0.03%)</title><rect x="128.1" y="627.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.03%)</title><rect x="128.5" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="131.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.03%)</title><rect x="128.5" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1089333161.run (1 samples, 0.03%)</title><rect x="128.5" y="595.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.03%)</title><rect x="128.5" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="131.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1 samples, 0.03%)</title><rect x="128.8" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="131.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.03%)</title><rect x="128.8" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="131.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.isDone (1 samples, 0.03%)</title><rect x="128.8" y="611.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="131.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.06%)</title><rect x="129.2" y="691.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.06%)</title><rect x="129.2" y="675.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (13 samples, 0.38%)</title><rect x="129.8" y="771.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$270/294090489.get$Lambda (1 samples, 0.03%)</title><rect x="133.9" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="136.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.&lt;init&gt; (1 samples, 0.03%)</title><rect x="134.3" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="137.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="134.6" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="137.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="134.6" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="137.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.03%)</title><rect x="134.6" y="739.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="137.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.03%)</title><rect x="134.6" y="723.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="137.6" y="734.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.03%)</title><rect x="134.6" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.6" y="718.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (1 samples, 0.03%)</title><rect x="134.6" y="691.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="137.6" y="702.0"></text>
</g>
<g>
<title>java/lang/Enum.ordinal (1 samples, 0.03%)</title><rect x="134.6" y="675.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="137.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="135.0" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="135.0" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="138.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (172 samples, 4.98%)</title><rect x="135.3" y="931.0" width="58.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.3" y="942.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="135.6" y="915.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="135.6" y="899.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="138.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="135.6" y="883.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="135.6" y="867.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="138.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.03%)</title><rect x="136.0" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="139.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.03%)</title><rect x="136.0" y="899.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="139.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.03%)</title><rect x="136.0" y="883.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="136.0" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.03%)</title><rect x="136.0" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="139.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="136.0" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="139.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.03%)</title><rect x="136.0" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.03%)</title><rect x="136.0" y="803.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="136.0" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="139.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.03%)</title><rect x="136.0" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.03%)</title><rect x="136.0" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="139.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.03%)</title><rect x="136.0" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="139.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.03%)</title><rect x="136.0" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.0" y="734.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="136.0" y="707.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="139.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (169 samples, 4.89%)</title><rect x="136.3" y="915.0" width="57.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="139.3" y="926.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (161 samples, 4.66%)</title><rect x="136.7" y="899.0" width="54.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.7" y="910.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (161 samples, 4.66%)</title><rect x="136.7" y="883.0" width="54.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="139.7" y="894.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (161 samples, 4.66%)</title><rect x="136.7" y="867.0" width="54.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="139.7" y="878.0">java/..</text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="136.7" y="851.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="139.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$154/1584594711.apply (160 samples, 4.63%)</title><rect x="137.0" y="851.0" width="54.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="140.0" y="862.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (160 samples, 4.63%)</title><rect x="137.0" y="835.0" width="54.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="140.0" y="846.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (160 samples, 4.63%)</title><rect x="137.0" y="819.0" width="54.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="140.0" y="830.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (75 samples, 2.17%)</title><rect x="137.4" y="803.0" width="25.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="140.4" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (75 samples, 2.17%)</title><rect x="137.4" y="787.0" width="25.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="140.4" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (75 samples, 2.17%)</title><rect x="137.4" y="771.0" width="25.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.4" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.&lt;init&gt; (1 samples, 0.03%)</title><rect x="137.4" y="755.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="140.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$201/376986198.apply (69 samples, 2.00%)</title><rect x="137.7" y="755.0" width="23.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.7" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (69 samples, 2.00%)</title><rect x="137.7" y="739.0" width="23.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="140.7" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (69 samples, 2.00%)</title><rect x="137.7" y="723.0" width="23.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.7" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (69 samples, 2.00%)</title><rect x="137.7" y="707.0" width="23.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="140.7" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (54 samples, 1.56%)</title><rect x="137.7" y="691.0" width="18.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (48 samples, 1.39%)</title><rect x="137.7" y="675.0" width="16.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (48 samples, 1.39%)</title><rect x="137.7" y="659.0" width="16.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="140.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (47 samples, 1.36%)</title><rect x="138.0" y="643.0" width="16.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (1 samples, 0.03%)</title><rect x="138.0" y="627.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="138.0" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="141.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.get$Lambda (1 samples, 0.03%)</title><rect x="138.0" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.&lt;init&gt; (1 samples, 0.03%)</title><rect x="138.0" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="141.0" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (46 samples, 1.33%)</title><rect x="138.4" y="627.0" width="15.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="141.4" y="638.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.03%)</title><rect x="138.4" y="611.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="141.4" y="622.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (36 samples, 1.04%)</title><rect x="138.7" y="611.0" width="12.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="141.7" y="622.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.03%)</title><rect x="139.1" y="595.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="142.1" y="606.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.03%)</title><rect x="139.4" y="595.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="142.4" y="606.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.06%)</title><rect x="139.7" y="595.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="142.7" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.03%)</title><rect x="140.4" y="595.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="143.4" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.03%)</title><rect x="140.4" y="579.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="143.4" y="590.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 0.17%)</title><rect x="140.8" y="595.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="143.8" y="606.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.03%)</title><rect x="141.5" y="579.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="144.5" y="590.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.03%)</title><rect x="141.8" y="579.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="144.8" y="590.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.06%)</title><rect x="142.1" y="579.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="145.1" y="590.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.06%)</title><rect x="142.8" y="595.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="145.8" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.09%)</title><rect x="143.5" y="595.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="146.5" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (1 samples, 0.03%)</title><rect x="144.5" y="595.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="147.5" y="606.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.03%)</title><rect x="144.9" y="595.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="147.9" y="606.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (7 samples, 0.20%)</title><rect x="145.2" y="595.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="148.2" y="606.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="146.2" y="579.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="149.2" y="590.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.09%)</title><rect x="146.6" y="579.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="149.6" y="590.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.09%)</title><rect x="146.6" y="563.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="149.6" y="574.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.09%)</title><rect x="146.6" y="547.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="149.6" y="558.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (10 samples, 0.29%)</title><rect x="147.6" y="595.0" width="3.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="150.6" y="606.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.12%)</title><rect x="147.9" y="579.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="150.9" y="590.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (4 samples, 0.12%)</title><rect x="147.9" y="563.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="150.9" y="574.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.06%)</title><rect x="149.3" y="579.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="152.3" y="590.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.09%)</title><rect x="150.0" y="579.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="153.0" y="590.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.09%)</title><rect x="150.0" y="563.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="153.0" y="574.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.06%)</title><rect x="150.3" y="547.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="153.3" y="558.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="150.7" y="531.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="153.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.run (9 samples, 0.26%)</title><rect x="151.0" y="611.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (7 samples, 0.20%)</title><rect x="151.7" y="595.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.7" y="606.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (7 samples, 0.20%)</title><rect x="151.7" y="579.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="154.7" y="590.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (3 samples, 0.09%)</title><rect x="151.7" y="563.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.7" y="574.0"></text>
</g>
<g>
<title>java/lang/System.checkKey (2 samples, 0.06%)</title><rect x="151.7" y="547.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.7" y="558.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.06%)</title><rect x="151.7" y="531.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="152.0" y="515.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.0" y="526.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.03%)</title><rect x="152.0" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.0" y="510.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.03%)</title><rect x="152.4" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.4" y="558.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.03%)</title><rect x="152.4" y="531.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="155.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.03%)</title><rect x="152.4" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="155.4" y="526.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.12%)</title><rect x="152.7" y="563.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.09%)</title><rect x="153.1" y="547.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="153.7" y="531.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="153.7" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (6 samples, 0.17%)</title><rect x="154.1" y="675.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="157.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.14%)</title><rect x="154.1" y="659.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.12%)</title><rect x="154.4" y="643.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.4" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.12%)</title><rect x="154.4" y="627.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="157.4" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.12%)</title><rect x="154.4" y="611.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.4" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.12%)</title><rect x="154.4" y="595.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.4" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.12%)</title><rect x="154.4" y="579.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="157.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteBuffer (1 samples, 0.03%)</title><rect x="155.8" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (15 samples, 0.43%)</title><rect x="156.1" y="691.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="159.1" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (15 samples, 0.43%)</title><rect x="156.1" y="675.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="159.1" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="156.5" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="156.5" y="643.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="159.5" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="156.5" y="627.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="156.5" y="611.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.5" y="622.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="156.5" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="159.5" y="606.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="156.5" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.5" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (3 samples, 0.09%)</title><rect x="156.8" y="659.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="159.8" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (3 samples, 0.09%)</title><rect x="157.8" y="659.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="160.8" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.09%)</title><rect x="157.8" y="643.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.09%)</title><rect x="157.8" y="627.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="160.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.09%)</title><rect x="157.8" y="611.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="160.8" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.03%)</title><rect x="158.5" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="161.5" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (7 samples, 0.20%)</title><rect x="158.9" y="659.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.parentOf (1 samples, 0.03%)</title><rect x="158.9" y="643.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="161.9" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateLeft (1 samples, 0.03%)</title><rect x="159.2" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.2" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (5 samples, 0.14%)</title><rect x="159.5" y="643.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$309/980063472.apply (5 samples, 0.14%)</title><rect x="161.3" y="755.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (5 samples, 0.14%)</title><rect x="161.3" y="739.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="164.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (1 samples, 0.03%)</title><rect x="161.6" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="164.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (3 samples, 0.09%)</title><rect x="161.9" y="723.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="164.9" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="162.6" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="165.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (84 samples, 2.43%)</title><rect x="163.0" y="803.0" width="28.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.0" y="814.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (84 samples, 2.43%)</title><rect x="163.0" y="787.0" width="28.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="166.0" y="798.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="163.6" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="163.6" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$157/1814841056.get$Lambda (1 samples, 0.03%)</title><rect x="163.6" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (8 samples, 0.23%)</title><rect x="164.0" y="771.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="167.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1 samples, 0.03%)</title><rect x="166.4" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="169.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (2 samples, 0.06%)</title><rect x="166.7" y="771.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="169.7" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.06%)</title><rect x="166.7" y="755.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="169.7" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.06%)</title><rect x="166.7" y="739.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="169.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.get$Lambda (2 samples, 0.06%)</title><rect x="166.7" y="723.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="169.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.&lt;init&gt; (2 samples, 0.06%)</title><rect x="166.7" y="707.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="169.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (4 samples, 0.12%)</title><rect x="167.4" y="771.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (25 samples, 0.72%)</title><rect x="168.8" y="771.0" width="8.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="171.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (19 samples, 0.55%)</title><rect x="168.8" y="755.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="171.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (16 samples, 0.46%)</title><rect x="169.8" y="739.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="172.8" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.14%)</title><rect x="169.8" y="723.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.8" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.06%)</title><rect x="169.8" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="172.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (2 samples, 0.06%)</title><rect x="169.8" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.8" y="702.0"></text>
</g>
<g>
<title>java/util/Objects.equals (2 samples, 0.06%)</title><rect x="169.8" y="675.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.8" y="686.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (2 samples, 0.06%)</title><rect x="169.8" y="659.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="172.8" y="670.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.03%)</title><rect x="170.1" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="173.1" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.09%)</title><rect x="170.5" y="707.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="173.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.03%)</title><rect x="171.2" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="174.2" y="702.0"></text>
</g>
<g>
<title>java/util/Objects.hash (1 samples, 0.03%)</title><rect x="171.2" y="675.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.2" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (1 samples, 0.03%)</title><rect x="171.2" y="659.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (11 samples, 0.32%)</title><rect x="171.5" y="723.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.5" y="734.0"></text>
</g>
<g>
<title>java/lang/Object.equals (1 samples, 0.03%)</title><rect x="172.2" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="175.2" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.03%)</title><rect x="172.5" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="175.5" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.03%)</title><rect x="172.5" y="691.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.5" y="702.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.03%)</title><rect x="172.5" y="675.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="175.5" y="686.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (1 samples, 0.03%)</title><rect x="172.5" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="175.5" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (7 samples, 0.20%)</title><rect x="172.9" y="707.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="175.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectionPool (2 samples, 0.06%)</title><rect x="175.3" y="755.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="178.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (4 samples, 0.12%)</title><rect x="175.9" y="755.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.9" y="766.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.03%)</title><rect x="175.9" y="739.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="178.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.isFinished (3 samples, 0.09%)</title><rect x="176.3" y="739.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="179.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (42 samples, 1.22%)</title><rect x="177.3" y="771.0" width="14.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.3" y="782.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (40 samples, 1.16%)</title><rect x="177.6" y="755.0" width="13.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="180.6" y="766.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.03%)</title><rect x="178.0" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="181.0" y="750.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (28 samples, 0.81%)</title><rect x="178.3" y="739.0" width="9.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="181.3" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.03%)</title><rect x="178.7" y="723.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="181.7" y="734.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.03%)</title><rect x="179.0" y="723.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="182.0" y="734.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="179.4" y="723.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="182.4" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.06%)</title><rect x="179.7" y="723.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="182.7" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.03%)</title><rect x="180.0" y="707.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="183.0" y="718.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (8 samples, 0.23%)</title><rect x="180.4" y="723.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="183.4" y="734.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.03%)</title><rect x="181.7" y="707.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="184.7" y="718.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (2 samples, 0.06%)</title><rect x="182.1" y="707.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="185.1" y="718.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.03%)</title><rect x="182.8" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="185.8" y="718.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="183.1" y="723.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="186.1" y="734.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.03%)</title><rect x="183.4" y="723.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="186.4" y="734.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.06%)</title><rect x="183.8" y="723.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="186.8" y="734.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (6 samples, 0.17%)</title><rect x="184.5" y="723.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="187.5" y="734.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.14%)</title><rect x="184.8" y="707.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="187.8" y="718.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.09%)</title><rect x="184.8" y="691.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="187.8" y="702.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.06%)</title><rect x="185.8" y="691.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="188.8" y="702.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (4 samples, 0.12%)</title><rect x="186.5" y="723.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="189.5" y="734.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="187.5" y="707.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="190.5" y="718.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (1 samples, 0.03%)</title><rect x="187.9" y="739.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="190.9" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (2 samples, 0.06%)</title><rect x="188.2" y="739.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="191.2" y="750.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.06%)</title><rect x="188.9" y="739.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="191.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$163/1956467138.run (4 samples, 0.12%)</title><rect x="189.6" y="739.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="192.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (4 samples, 0.12%)</title><rect x="189.6" y="723.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.6" y="734.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (4 samples, 0.12%)</title><rect x="189.6" y="707.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.6" y="718.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (4 samples, 0.12%)</title><rect x="189.6" y="691.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="192.6" y="702.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (4 samples, 0.12%)</title><rect x="189.6" y="675.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.6" y="686.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.09%)</title><rect x="189.9" y="659.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="192.9" y="670.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (3 samples, 0.09%)</title><rect x="189.9" y="643.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="192.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (3 samples, 0.09%)</title><rect x="189.9" y="627.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="190.3" y="611.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="193.3" y="622.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="190.3" y="595.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="193.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.navigableKeySet (1 samples, 0.03%)</title><rect x="190.6" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.6" y="622.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="191.0" y="739.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="194.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.proxy (1 samples, 0.03%)</title><rect x="191.3" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="194.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="191.6" y="899.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="194.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="191.6" y="883.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="194.6" y="894.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="191.6" y="867.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="194.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (6 samples, 0.17%)</title><rect x="192.0" y="899.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="195.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.12%)</title><rect x="192.0" y="883.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="195.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.09%)</title><rect x="192.3" y="867.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="195.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="192.3" y="851.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.3" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="192.3" y="835.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="195.3" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.06%)</title><rect x="192.7" y="851.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="195.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (2 samples, 0.06%)</title><rect x="193.4" y="883.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="193.4" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="196.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="193.4" y="851.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.4" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="193.4" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="196.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (1 samples, 0.03%)</title><rect x="193.7" y="867.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.7" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/888960014.linkToTargetMethod (1 samples, 0.03%)</title><rect x="193.7" y="851.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="196.7" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1103745955.invoke (1 samples, 0.03%)</title><rect x="193.7" y="835.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="196.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (5 samples, 0.14%)</title><rect x="194.0" y="979.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.0" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (2 samples, 0.06%)</title><rect x="194.4" y="963.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="197.4" y="974.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.06%)</title><rect x="194.4" y="947.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="197.4" y="958.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.06%)</title><rect x="194.4" y="931.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="197.4" y="942.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (2 samples, 0.06%)</title><rect x="194.4" y="915.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="197.4" y="926.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (2 samples, 0.06%)</title><rect x="194.4" y="899.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="197.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (2 samples, 0.06%)</title><rect x="195.1" y="963.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="198.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (2 samples, 0.06%)</title><rect x="195.1" y="947.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.1" y="958.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (2 samples, 0.06%)</title><rect x="195.1" y="931.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="198.1" y="942.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.03%)</title><rect x="195.1" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="198.1" y="926.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.03%)</title><rect x="195.1" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.1" y="910.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.03%)</title><rect x="195.1" y="883.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="198.1" y="894.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.indexFor (1 samples, 0.03%)</title><rect x="195.4" y="915.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.06%)</title><rect x="195.7" y="1075.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.06%)</title><rect x="195.7" y="1059.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (459 samples, 13.28%)</title><rect x="196.4" y="1075.0" width="156.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="199.4" y="1086.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (428 samples, 12.38%)</title><rect x="198.1" y="1059.0" width="146.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="201.1" y="1070.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (319 samples, 9.23%)</title><rect x="198.1" y="1043.0" width="108.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="201.1" y="1054.0">java/util/con..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (9 samples, 0.26%)</title><rect x="198.5" y="1027.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.06%)</title><rect x="201.5" y="1027.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (14 samples, 0.41%)</title><rect x="202.2" y="1027.0" width="4.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="205.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.predecessor (1 samples, 0.03%)</title><rect x="205.0" y="1011.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.03%)</title><rect x="205.3" y="1011.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="208.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (2 samples, 0.06%)</title><rect x="205.6" y="1011.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="208.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="206.3" y="1011.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="206.3" y="995.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="206.3" y="979.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="209.3" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="206.3" y="963.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.3" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="206.3" y="947.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="209.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquire (1 samples, 0.03%)</title><rect x="206.7" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="209.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (39 samples, 1.13%)</title><rect x="207.0" y="1027.0" width="13.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (39 samples, 1.13%)</title><rect x="207.0" y="1011.0" width="13.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="210.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (38 samples, 1.10%)</title><rect x="207.0" y="995.0" width="13.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (38 samples, 1.10%)</title><rect x="207.0" y="979.0" width="13.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="210.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (38 samples, 1.10%)</title><rect x="207.0" y="963.0" width="13.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="210.0" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.17%)</title><rect x="207.3" y="947.0" width="2.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="210.3" y="958.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="207.3" y="931.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="210.3" y="942.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.03%)</title><rect x="207.7" y="931.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="210.7" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="208.0" y="931.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="211.0" y="942.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.06%)</title><rect x="208.4" y="931.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="211.4" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="209.1" y="931.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="212.1" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="209.1" y="915.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="212.1" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="209.1" y="899.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="212.1" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (31 samples, 0.90%)</title><rect x="209.4" y="947.0" width="10.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="212.4" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.69%)</title><rect x="211.8" y="931.0" width="8.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="214.8" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.69%)</title><rect x="211.8" y="915.0" width="8.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="214.8" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (23 samples, 0.67%)</title><rect x="212.1" y="899.0" width="7.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="215.1" y="910.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.64%)</title><rect x="212.5" y="883.0" width="7.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="215.5" y="894.0"></text>
</g>
<g>
<title>futex_wake (22 samples, 0.64%)</title><rect x="212.5" y="867.0" width="7.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="215.5" y="878.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="212.8" y="851.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="215.8" y="862.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="213.2" y="851.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="216.2" y="862.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.03%)</title><rect x="213.2" y="835.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="216.2" y="846.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.06%)</title><rect x="213.5" y="851.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="216.5" y="862.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.49%)</title><rect x="214.2" y="851.0" width="5.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="217.2" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 0.49%)</title><rect x="214.2" y="835.0" width="5.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="217.2" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.49%)</title><rect x="214.2" y="819.0" width="5.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="217.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.03%)</title><rect x="220.0" y="995.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="223.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (254 samples, 7.35%)</title><rect x="220.3" y="1027.0" width="86.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="223.3" y="1038.0">java/util/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (254 samples, 7.35%)</title><rect x="220.3" y="1011.0" width="86.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="223.3" y="1022.0">jdk/intern..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="221.3" y="995.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="224.3" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.03%)</title><rect x="221.7" y="995.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="224.7" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Park (109 samples, 3.15%)</title><rect x="222.0" y="995.0" width="37.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="225.0" y="1006.0">Uns..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="223.4" y="979.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="226.4" y="990.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="223.7" y="979.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="226.7" y="990.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="224.1" y="979.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="227.1" y="990.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="224.4" y="979.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="227.4" y="990.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (31 samples, 0.90%)</title><rect x="224.8" y="979.0" width="10.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="227.8" y="990.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (7 samples, 0.20%)</title><rect x="228.5" y="963.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="231.5" y="974.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="230.9" y="963.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="233.9" y="974.0"></text>
</g>
<g>
<title>__tls_get_addr (12 samples, 0.35%)</title><rect x="231.3" y="963.0" width="4.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="234.3" y="974.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="235.3" y="979.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="238.3" y="990.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.06%)</title><rect x="235.7" y="979.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="238.7" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.03%)</title><rect x="236.4" y="979.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="239.4" y="990.0"></text>
</g>
<g>
<title>__lll_unlock_wake (55 samples, 1.59%)</title><rect x="236.7" y="979.0" width="18.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="239.7" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.81%)</title><rect x="245.9" y="963.0" width="9.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="248.9" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.81%)</title><rect x="245.9" y="947.0" width="9.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="248.9" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.38%)</title><rect x="251.1" y="931.0" width="4.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="254.1" y="942.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.32%)</title><rect x="251.7" y="915.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="254.7" y="926.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.29%)</title><rect x="252.1" y="899.0" width="3.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="255.1" y="910.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.06%)</title><rect x="252.8" y="883.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="255.8" y="894.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.09%)</title><rect x="253.4" y="883.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="256.4" y="894.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.09%)</title><rect x="254.5" y="883.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="257.5" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="255.5" y="979.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="258.5" y="990.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.06%)</title><rect x="255.8" y="979.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="258.8" y="990.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.09%)</title><rect x="256.5" y="979.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="259.5" y="990.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.03%)</title><rect x="257.5" y="979.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="260.5" y="990.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="257.9" y="979.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="260.9" y="990.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="258.2" y="979.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="261.2" y="990.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (2 samples, 0.06%)</title><rect x="258.6" y="979.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="261.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (139 samples, 4.02%)</title><rect x="259.2" y="995.0" width="47.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="262.2" y="1006.0">[unk..</text>
</g>
<g>
<title>__condvar_dec_grefs (3 samples, 0.09%)</title><rect x="259.2" y="979.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="262.2" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_wait (125 samples, 3.62%)</title><rect x="260.3" y="979.0" width="42.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="263.3" y="990.0">__pt..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="272.9" y="963.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="275.9" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (87 samples, 2.52%)</title><rect x="273.2" y="963.0" width="29.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="276.2" y="974.0">en..</text>
</g>
<g>
<title>do_syscall_64 (87 samples, 2.52%)</title><rect x="273.2" y="947.0" width="29.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="276.2" y="958.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (79 samples, 2.29%)</title><rect x="276.0" y="931.0" width="27.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="279.0" y="942.0">_..</text>
</g>
<g>
<title>do_futex (75 samples, 2.17%)</title><rect x="277.3" y="915.0" width="25.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="280.3" y="926.0">d..</text>
</g>
<g>
<title>futex_wait (69 samples, 2.00%)</title><rect x="279.4" y="899.0" width="23.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="282.4" y="910.0">f..</text>
</g>
<g>
<title>drop_futex_key_refs.isra.0 (1 samples, 0.03%)</title><rect x="281.8" y="883.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="284.8" y="894.0"></text>
</g>
<g>
<title>futex_wait_queue_me (49 samples, 1.42%)</title><rect x="282.1" y="883.0" width="16.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="285.1" y="894.0"></text>
</g>
<g>
<title>plist_add (3 samples, 0.09%)</title><rect x="284.2" y="867.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="287.2" y="878.0"></text>
</g>
<g>
<title>schedule (40 samples, 1.16%)</title><rect x="285.2" y="867.0" width="13.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="288.2" y="878.0"></text>
</g>
<g>
<title>__sched_text_start (35 samples, 1.01%)</title><rect x="286.9" y="851.0" width="12.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="289.9" y="862.0"></text>
</g>
<g>
<title>finish_task_switch (32 samples, 0.93%)</title><rect x="287.9" y="835.0" width="11.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="290.9" y="846.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.06%)</title><rect x="298.2" y="819.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="301.2" y="830.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.06%)</title><rect x="298.2" y="803.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="301.2" y="814.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.06%)</title><rect x="298.2" y="787.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="301.2" y="798.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.06%)</title><rect x="298.2" y="771.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="301.2" y="782.0"></text>
</g>
<g>
<title>run_timer_softirq (2 samples, 0.06%)</title><rect x="298.2" y="755.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="301.2" y="766.0"></text>
</g>
<g>
<title>futex_wait_setup (12 samples, 0.35%)</title><rect x="298.9" y="883.0" width="4.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="301.9" y="894.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.06%)</title><rect x="300.6" y="867.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="303.6" y="878.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (2 samples, 0.06%)</title><rect x="300.6" y="851.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="303.6" y="862.0"></text>
</g>
<g>
<title>get_futex_value_locked (4 samples, 0.12%)</title><rect x="301.2" y="867.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="304.2" y="878.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="302.6" y="867.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="305.6" y="878.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (7 samples, 0.20%)</title><rect x="303.0" y="979.0" width="2.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="306.0" y="990.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="305.3" y="979.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="308.3" y="990.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.03%)</title><rect x="305.7" y="979.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="308.7" y="990.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (2 samples, 0.06%)</title><rect x="306.0" y="979.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="309.0" y="990.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="306.7" y="995.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="309.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (19 samples, 0.55%)</title><rect x="307.0" y="1043.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="310.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (19 samples, 0.55%)</title><rect x="307.0" y="1027.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="310.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (15 samples, 0.43%)</title><rect x="307.7" y="1011.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.predecessor (1 samples, 0.03%)</title><rect x="308.8" y="995.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="311.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.09%)</title><rect x="309.1" y="995.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="312.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.09%)</title><rect x="309.1" y="979.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (2 samples, 0.06%)</title><rect x="309.1" y="963.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="312.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="309.8" y="963.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="312.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="309.8" y="947.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="312.8" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="309.8" y="931.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="312.8" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="309.8" y="915.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="312.8" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="309.8" y="899.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="312.8" y="910.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="309.8" y="883.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="312.8" y="894.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="309.8" y="867.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="312.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (8 samples, 0.23%)</title><rect x="310.1" y="995.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="313.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.06%)</title><rect x="312.9" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="315.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.06%)</title><rect x="312.9" y="995.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="315.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.03%)</title><rect x="312.9" y="979.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="315.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="313.2" y="979.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="316.2" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="313.2" y="963.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="316.2" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="313.2" y="947.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="316.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (90 samples, 2.60%)</title><rect x="313.5" y="1043.0" width="30.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="316.5" y="1054.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (90 samples, 2.60%)</title><rect x="313.5" y="1027.0" width="30.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.5" y="1038.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (90 samples, 2.60%)</title><rect x="313.5" y="1011.0" width="30.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="316.5" y="1022.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (90 samples, 2.60%)</title><rect x="313.5" y="995.0" width="30.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.5" y="1006.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (90 samples, 2.60%)</title><rect x="313.5" y="979.0" width="30.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.5" y="990.0">jd..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (2 samples, 0.06%)</title><rect x="313.5" y="963.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="316.5" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="314.2" y="963.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="317.2" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.29%)</title><rect x="314.6" y="963.0" width="3.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="317.6" y="974.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="314.6" y="947.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="317.6" y="958.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="314.9" y="947.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="317.9" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.03%)</title><rect x="315.2" y="947.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="318.2" y="958.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (3 samples, 0.09%)</title><rect x="315.6" y="947.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="318.6" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="316.6" y="947.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="319.6" y="958.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.03%)</title><rect x="317.0" y="947.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="320.0" y="958.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="317.3" y="947.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="320.3" y="958.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="317.6" y="947.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="320.6" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (77 samples, 2.23%)</title><rect x="318.0" y="963.0" width="26.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="321.0" y="974.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (66 samples, 1.91%)</title><rect x="321.7" y="947.0" width="22.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="324.7" y="958.0">e..</text>
</g>
<g>
<title>do_syscall_64 (66 samples, 1.91%)</title><rect x="321.7" y="931.0" width="22.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="324.7" y="942.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (61 samples, 1.77%)</title><rect x="323.4" y="915.0" width="20.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="326.4" y="926.0"></text>
</g>
<g>
<title>do_futex (61 samples, 1.77%)</title><rect x="323.4" y="899.0" width="20.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="326.4" y="910.0"></text>
</g>
<g>
<title>futex_wake (61 samples, 1.77%)</title><rect x="323.4" y="883.0" width="20.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="326.4" y="894.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.12%)</title><rect x="324.5" y="867.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="327.5" y="878.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.03%)</title><rect x="325.5" y="851.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="328.5" y="862.0"></text>
</g>
<g>
<title>wake_up_q (54 samples, 1.56%)</title><rect x="325.8" y="867.0" width="18.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="328.8" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (53 samples, 1.53%)</title><rect x="326.2" y="851.0" width="18.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="329.2" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (53 samples, 1.53%)</title><rect x="326.2" y="835.0" width="18.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="329.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (26 samples, 0.75%)</title><rect x="344.3" y="1059.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="347.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (26 samples, 0.75%)</title><rect x="344.3" y="1043.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.getDelay (1 samples, 0.03%)</title><rect x="344.3" y="1027.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="347.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeUnit.convert (1 samples, 0.03%)</title><rect x="344.3" y="1011.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="347.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (25 samples, 0.72%)</title><rect x="344.6" y="1027.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="347.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.03%)</title><rect x="344.6" y="1011.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="347.6" y="1022.0"></text>
</g>
<g>
<title>__GI___clock_gettime (1 samples, 0.03%)</title><rect x="344.6" y="995.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="347.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (24 samples, 0.69%)</title><rect x="344.9" y="1011.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="347.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (24 samples, 0.69%)</title><rect x="344.9" y="995.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="347.9" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.20%)</title><rect x="344.9" y="979.0" width="2.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="347.9" y="990.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.14%)</title><rect x="344.9" y="963.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="347.9" y="974.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="345.6" y="947.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="348.6" y="958.0"></text>
</g>
<g>
<title>__GI___clock_gettime (1 samples, 0.03%)</title><rect x="346.0" y="947.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="349.0" y="958.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="346.3" y="947.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="349.3" y="958.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="346.7" y="963.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="349.7" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="346.7" y="947.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="349.7" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="346.7" y="931.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="349.7" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="346.7" y="915.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="349.7" y="926.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="346.7" y="899.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="349.7" y="910.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="346.7" y="883.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="349.7" y="894.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.03%)</title><rect x="347.0" y="963.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="350.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.46%)</title><rect x="347.3" y="979.0" width="5.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="350.3" y="990.0"></text>
</g>
<g>
<title>.annobin_pthread_cond_wait.c (1 samples, 0.03%)</title><rect x="347.3" y="963.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="350.3" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (15 samples, 0.43%)</title><rect x="347.7" y="963.0" width="5.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="350.7" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.41%)</title><rect x="348.0" y="947.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="351.0" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.41%)</title><rect x="348.0" y="931.0" width="4.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="351.0" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.41%)</title><rect x="348.0" y="915.0" width="4.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="351.0" y="926.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.38%)</title><rect x="348.0" y="899.0" width="4.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="351.0" y="910.0"></text>
</g>
<g>
<title>futex_wait (12 samples, 0.35%)</title><rect x="348.4" y="883.0" width="4.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="351.4" y="894.0"></text>
</g>
<g>
<title>futex_wait_queue_me (9 samples, 0.26%)</title><rect x="349.0" y="867.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="352.0" y="878.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (3 samples, 0.09%)</title><rect x="349.0" y="851.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="352.0" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.09%)</title><rect x="349.0" y="835.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="352.0" y="846.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.17%)</title><rect x="350.1" y="851.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="353.1" y="862.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.14%)</title><rect x="350.4" y="835.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="353.4" y="846.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.14%)</title><rect x="350.4" y="819.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="353.4" y="830.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="352.1" y="867.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="355.1" y="878.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.03%)</title><rect x="352.5" y="899.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="355.5" y="910.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.03%)</title><rect x="352.5" y="883.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="355.5" y="894.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="352.8" y="979.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="355.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$247/1271722553.run (293 samples, 8.48%)</title><rect x="353.1" y="1075.0" width="100.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="356.1" y="1086.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (292 samples, 8.45%)</title><rect x="353.5" y="1059.0" width="99.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="356.5" y="1070.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (289 samples, 8.36%)</title><rect x="354.5" y="1043.0" width="98.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.5" y="1054.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (281 samples, 8.13%)</title><rect x="356.9" y="1027.0" width="95.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="359.9" y="1038.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.theExecutor (1 samples, 0.03%)</title><rect x="356.9" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="359.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (280 samples, 8.10%)</title><rect x="357.2" y="1011.0" width="95.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="360.2" y="1022.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (280 samples, 8.10%)</title><rect x="357.2" y="995.0" width="95.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="360.2" y="1006.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (280 samples, 8.10%)</title><rect x="357.2" y="979.0" width="95.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="360.2" y="990.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (280 samples, 8.10%)</title><rect x="357.2" y="963.0" width="95.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="360.2" y="974.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (280 samples, 8.10%)</title><rect x="357.2" y="947.0" width="95.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="360.2" y="958.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.03%)</title><rect x="357.2" y="931.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="360.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.03%)</title><rect x="357.2" y="915.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="360.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.03%)</title><rect x="357.2" y="899.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.03%)</title><rect x="357.2" y="883.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="360.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.03%)</title><rect x="357.2" y="867.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="360.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.03%)</title><rect x="357.2" y="851.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="360.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.03%)</title><rect x="357.2" y="835.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.03%)</title><rect x="357.2" y="819.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="360.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="357.2" y="803.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="360.2" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.weakCompareAndSet (1 samples, 0.03%)</title><rect x="357.2" y="787.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="360.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (278 samples, 8.04%)</title><rect x="357.6" y="931.0" width="94.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="360.6" y="942.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (278 samples, 8.04%)</title><rect x="357.6" y="915.0" width="94.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="360.6" y="926.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (38 samples, 1.10%)</title><rect x="357.9" y="899.0" width="13.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="360.9" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="359.6" y="883.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="362.6" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="359.6" y="867.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="362.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$255/1758095350.get$Lambda (1 samples, 0.03%)</title><rect x="359.6" y="851.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="362.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (25 samples, 0.72%)</title><rect x="360.0" y="883.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="363.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (25 samples, 0.72%)</title><rect x="360.0" y="867.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="363.0" y="878.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="360.0" y="851.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="363.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (24 samples, 0.69%)</title><rect x="360.3" y="851.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="363.3" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="361.0" y="835.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="364.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (21 samples, 0.61%)</title><rect x="361.3" y="835.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="364.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (6 samples, 0.17%)</title><rect x="362.7" y="819.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="365.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="363.0" y="803.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="366.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.03%)</title><rect x="363.0" y="787.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="366.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.03%)</title><rect x="363.0" y="771.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="366.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (1 samples, 0.03%)</title><rect x="363.0" y="755.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="366.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_L_I (1 samples, 0.03%)</title><rect x="363.0" y="739.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadOnly.getAcquire (1 samples, 0.03%)</title><rect x="363.0" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.0" y="734.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="363.0" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="366.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$267/1020030449.apply (4 samples, 0.12%)</title><rect x="363.4" y="803.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="366.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (4 samples, 0.12%)</title><rect x="363.4" y="787.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="366.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (4 samples, 0.12%)</title><rect x="363.4" y="771.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (4 samples, 0.12%)</title><rect x="363.4" y="755.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="363.7" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.7" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="363.7" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="366.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$278/649988588.get$Lambda (1 samples, 0.03%)</title><rect x="363.7" y="707.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="366.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$278/649988588.&lt;init&gt; (1 samples, 0.03%)</title><rect x="363.7" y="691.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.06%)</title><rect x="364.1" y="739.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.06%)</title><rect x="364.1" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="367.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.06%)</title><rect x="364.1" y="707.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="367.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.&lt;init&gt; (1 samples, 0.03%)</title><rect x="364.1" y="691.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="364.1" y="675.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="367.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.03%)</title><rect x="364.4" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="367.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.03%)</title><rect x="364.4" y="675.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="367.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (10 samples, 0.29%)</title><rect x="364.8" y="819.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="367.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10 samples, 0.29%)</title><rect x="364.8" y="803.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="367.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$235/542698874.apply (10 samples, 0.29%)</title><rect x="364.8" y="787.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="367.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (9 samples, 0.26%)</title><rect x="365.1" y="771.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="368.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (9 samples, 0.26%)</title><rect x="365.1" y="755.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$148/2053429061.apply (9 samples, 0.26%)</title><rect x="365.1" y="739.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (8 samples, 0.23%)</title><rect x="365.4" y="723.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="368.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.09%)</title><rect x="365.4" y="707.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="368.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.09%)</title><rect x="365.4" y="691.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="368.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (3 samples, 0.09%)</title><rect x="365.4" y="675.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="368.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (3 samples, 0.09%)</title><rect x="365.4" y="659.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="368.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (1 samples, 0.03%)</title><rect x="366.5" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="369.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="366.5" y="691.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="369.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="366.5" y="675.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="369.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (1 samples, 0.03%)</title><rect x="366.5" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="369.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="366.5" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="369.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (4 samples, 0.12%)</title><rect x="366.8" y="707.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="369.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.03%)</title><rect x="366.8" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="369.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (3 samples, 0.09%)</title><rect x="367.1" y="691.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="370.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (2 samples, 0.06%)</title><rect x="367.1" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="370.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (2 samples, 0.06%)</title><rect x="367.1" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="370.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="367.5" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="370.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (1 samples, 0.03%)</title><rect x="367.8" y="675.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="370.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (1 samples, 0.03%)</title><rect x="367.8" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="370.8" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="367.8" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="370.8" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="367.8" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.03%)</title><rect x="368.2" y="819.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="371.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.03%)</title><rect x="368.2" y="803.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="371.2" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="368.2" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="371.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="368.2" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="371.2" y="782.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="368.2" y="755.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="371.2" y="766.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="368.2" y="739.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="371.2" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="368.2" y="723.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="371.2" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="368.2" y="707.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="371.2" y="718.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="368.2" y="691.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="371.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (7 samples, 0.20%)</title><rect x="368.5" y="883.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="371.5" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.09%)</title><rect x="368.5" y="867.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="371.5" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.09%)</title><rect x="368.5" y="851.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="371.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (4 samples, 0.12%)</title><rect x="369.5" y="867.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="372.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (4 samples, 0.12%)</title><rect x="369.5" y="851.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="372.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.03%)</title><rect x="370.9" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="373.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.03%)</title><rect x="370.9" y="883.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="373.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.03%)</title><rect x="370.9" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="373.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (237 samples, 6.86%)</title><rect x="371.2" y="899.0" width="81.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.2" y="910.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (237 samples, 6.86%)</title><rect x="371.2" y="883.0" width="81.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="374.2" y="894.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (237 samples, 6.86%)</title><rect x="371.2" y="867.0" width="81.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="374.2" y="878.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (237 samples, 6.86%)</title><rect x="371.2" y="851.0" width="81.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="374.2" y="862.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$274/1744778345.run (2 samples, 0.06%)</title><rect x="371.6" y="835.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="374.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (2 samples, 0.06%)</title><rect x="371.6" y="819.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2 samples, 0.06%)</title><rect x="371.6" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="374.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1 samples, 0.03%)</title><rect x="371.9" y="787.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="374.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (233 samples, 6.74%)</title><rect x="372.3" y="835.0" width="79.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="375.3" y="846.0">jdk/inter..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (227 samples, 6.57%)</title><rect x="372.9" y="819.0" width="77.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="375.9" y="830.0">java/nio/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (227 samples, 6.57%)</title><rect x="372.9" y="803.0" width="77.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="375.9" y="814.0">sun/nio/c..</text>
</g>
<g>
<title>java/util/Objects.checkFromIndexSize (1 samples, 0.03%)</title><rect x="372.9" y="787.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="375.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/util/Preconditions.checkFromIndexSize (1 samples, 0.03%)</title><rect x="372.9" y="771.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="375.9" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (226 samples, 6.54%)</title><rect x="373.3" y="787.0" width="77.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="376.3" y="798.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (226 samples, 6.54%)</title><rect x="373.3" y="771.0" width="77.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="376.3" y="782.0">sun/nio/c..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.03%)</title><rect x="373.3" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="376.3" y="766.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.03%)</title><rect x="373.3" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="376.3" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (1 samples, 0.03%)</title><rect x="373.6" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="376.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1 samples, 0.03%)</title><rect x="373.6" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="376.6" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (220 samples, 6.37%)</title><rect x="374.0" y="755.0" width="75.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="377.0" y="766.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (220 samples, 6.37%)</title><rect x="374.0" y="739.0" width="75.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="377.0" y="750.0">sun/nio/..</text>
</g>
<g>
<title>.annobin_writev.c (216 samples, 6.25%)</title><rect x="374.3" y="723.0" width="73.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="377.3" y="734.0">.annobin..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="377.0" y="707.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="380.0" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (207 samples, 5.99%)</title><rect x="377.4" y="707.0" width="70.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="380.4" y="718.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (207 samples, 5.99%)</title><rect x="377.4" y="691.0" width="70.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="380.4" y="702.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_writev (1 samples, 0.03%)</title><rect x="377.4" y="675.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="380.4" y="686.0"></text>
</g>
<g>
<title>do_writev (206 samples, 5.96%)</title><rect x="377.7" y="675.0" width="70.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="380.7" y="686.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (7 samples, 0.20%)</title><rect x="378.4" y="659.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="381.4" y="670.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.20%)</title><rect x="378.4" y="643.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="381.4" y="654.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.14%)</title><rect x="379.1" y="627.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="382.1" y="638.0"></text>
</g>
<g>
<title>vfs_writev (197 samples, 5.70%)</title><rect x="380.8" y="659.0" width="67.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="383.8" y="670.0">vfs_wri..</text>
</g>
<g>
<title>do_iter_write (193 samples, 5.58%)</title><rect x="381.5" y="643.0" width="65.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="384.5" y="654.0">do_iter..</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="381.5" y="627.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="384.5" y="638.0"></text>
</g>
<g>
<title>do_iter_readv_writev (189 samples, 5.47%)</title><rect x="381.8" y="627.0" width="64.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="384.8" y="638.0">do_iter..</text>
</g>
<g>
<title>sock_write_iter (186 samples, 5.38%)</title><rect x="382.8" y="611.0" width="63.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="385.8" y="622.0">sock_wr..</text>
</g>
<g>
<title>sock_sendmsg (185 samples, 5.35%)</title><rect x="383.2" y="595.0" width="63.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="386.2" y="606.0">sock_se..</text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.09%)</title><rect x="383.2" y="579.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="386.2" y="590.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.09%)</title><rect x="383.2" y="563.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="386.2" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg (182 samples, 5.27%)</title><rect x="384.2" y="579.0" width="62.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="387.2" y="590.0">tcp_se..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="384.2" y="563.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="387.2" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="384.2" y="547.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="387.2" y="558.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="384.6" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="387.6" y="574.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="384.6" y="547.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="387.6" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (180 samples, 5.21%)</title><rect x="384.9" y="563.0" width="61.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="387.9" y="574.0">tcp_se..</text>
</g>
<g>
<title>__tcp_push_pending_frames (173 samples, 5.01%)</title><rect x="385.2" y="547.0" width="59.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="388.2" y="558.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (173 samples, 5.01%)</title><rect x="385.2" y="531.0" width="59.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="388.2" y="542.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (163 samples, 4.72%)</title><rect x="386.3" y="515.0" width="55.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="389.3" y="526.0">__tcp..</text>
</g>
<g>
<title>__ip_queue_xmit (157 samples, 4.54%)</title><rect x="386.9" y="499.0" width="53.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="389.9" y="510.0">__ip_..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.03%)</title><rect x="386.9" y="483.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="389.9" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="386.9" y="467.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="389.9" y="478.0"></text>
</g>
<g>
<title>ip_local_out (29 samples, 0.84%)</title><rect x="387.3" y="483.0" width="9.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="390.3" y="494.0"></text>
</g>
<g>
<title>__ip_local_out (29 samples, 0.84%)</title><rect x="387.3" y="467.0" width="9.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="390.3" y="478.0"></text>
</g>
<g>
<title>nf_hook_slow (29 samples, 0.84%)</title><rect x="387.3" y="451.0" width="9.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="390.3" y="462.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.23%)</title><rect x="387.6" y="435.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="390.6" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.12%)</title><rect x="390.4" y="435.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="393.4" y="446.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.09%)</title><rect x="390.7" y="419.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="393.7" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (15 samples, 0.43%)</title><rect x="391.7" y="435.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="394.7" y="446.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (3 samples, 0.09%)</title><rect x="392.1" y="419.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="395.1" y="430.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (1 samples, 0.03%)</title><rect x="393.1" y="419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="396.1" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (8 samples, 0.23%)</title><rect x="393.4" y="419.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="396.4" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="395.1" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="398.1" y="414.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (2 samples, 0.06%)</title><rect x="395.5" y="403.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="398.5" y="414.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (2 samples, 0.06%)</title><rect x="396.2" y="419.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="399.2" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (1 samples, 0.03%)</title><rect x="396.8" y="435.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="399.8" y="446.0"></text>
</g>
<g>
<title>ip_output (127 samples, 3.67%)</title><rect x="397.2" y="483.0" width="43.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="400.2" y="494.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output2 (117 samples, 3.39%)</title><rect x="397.5" y="467.0" width="40.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="400.5" y="478.0">ip_..</text>
</g>
<g>
<title>__dev_queue_xmit (11 samples, 0.32%)</title><rect x="398.6" y="451.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="401.6" y="462.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.20%)</title><rect x="399.2" y="435.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="402.2" y="446.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.17%)</title><rect x="399.6" y="419.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="402.6" y="430.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.03%)</title><rect x="400.3" y="403.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="403.3" y="414.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.06%)</title><rect x="400.6" y="403.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="403.6" y="414.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.06%)</title><rect x="400.6" y="387.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="403.6" y="398.0"></text>
</g>
<g>
<title>ktime_get_with_offset (2 samples, 0.06%)</title><rect x="400.6" y="371.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="403.6" y="382.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.06%)</title><rect x="400.6" y="355.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="403.6" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="401.3" y="403.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="404.3" y="414.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.03%)</title><rect x="401.6" y="435.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="404.6" y="446.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.03%)</title><rect x="402.0" y="435.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="405.0" y="446.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (103 samples, 2.98%)</title><rect x="402.3" y="451.0" width="35.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="405.3" y="462.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (101 samples, 2.92%)</title><rect x="403.0" y="435.0" width="34.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="406.0" y="446.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (100 samples, 2.89%)</title><rect x="403.3" y="419.0" width="34.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="406.3" y="430.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (100 samples, 2.89%)</title><rect x="403.3" y="403.0" width="34.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="406.3" y="414.0">__..</text>
</g>
<g>
<title>net_rx_action (95 samples, 2.75%)</title><rect x="404.7" y="387.0" width="32.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="407.7" y="398.0">ne..</text>
</g>
<g>
<title>process_backlog (94 samples, 2.72%)</title><rect x="405.0" y="371.0" width="32.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="408.0" y="382.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (93 samples, 2.69%)</title><rect x="405.4" y="355.0" width="31.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="408.4" y="366.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.06%)</title><rect x="405.4" y="339.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="408.4" y="350.0"></text>
</g>
<g>
<title>ip_rcv (91 samples, 2.63%)</title><rect x="406.1" y="339.0" width="31.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="409.1" y="350.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (65 samples, 1.88%)</title><rect x="406.4" y="323.0" width="22.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="409.4" y="334.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (54 samples, 1.56%)</title><rect x="407.1" y="307.0" width="18.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="410.1" y="318.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (53 samples, 1.53%)</title><rect x="407.4" y="291.0" width="18.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="410.4" y="302.0"></text>
</g>
<g>
<title>tcp_v4_rcv (52 samples, 1.50%)</title><rect x="407.8" y="275.0" width="17.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="410.8" y="286.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.14%)</title><rect x="409.1" y="259.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="412.1" y="270.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="410.5" y="243.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="413.5" y="254.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="410.8" y="259.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="413.8" y="270.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.03%)</title><rect x="410.8" y="243.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="413.8" y="254.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (1 samples, 0.03%)</title><rect x="410.8" y="227.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="413.8" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (42 samples, 1.22%)</title><rect x="411.2" y="259.0" width="14.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="414.2" y="270.0"></text>
</g>
<g>
<title>tcp_rcv_established (42 samples, 1.22%)</title><rect x="411.2" y="243.0" width="14.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="414.2" y="254.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.09%)</title><rect x="412.2" y="227.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="415.2" y="238.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.09%)</title><rect x="412.2" y="211.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="415.2" y="222.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="412.9" y="195.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="415.9" y="206.0"></text>
</g>
<g>
<title>sock_def_readable (34 samples, 0.98%)</title><rect x="413.2" y="227.0" width="11.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="416.2" y="238.0"></text>
</g>
<g>
<title>__wake_up_common_lock (31 samples, 0.90%)</title><rect x="414.3" y="211.0" width="10.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="417.3" y="222.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (31 samples, 0.90%)</title><rect x="414.3" y="195.0" width="10.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="417.3" y="206.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.06%)</title><rect x="424.8" y="227.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="427.8" y="238.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.26%)</title><rect x="425.5" y="307.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="428.5" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.20%)</title><rect x="426.2" y="291.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="429.2" y="302.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (2 samples, 0.06%)</title><rect x="427.9" y="275.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="430.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (2 samples, 0.06%)</title><rect x="428.6" y="323.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="431.6" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (23 samples, 0.67%)</title><rect x="429.3" y="323.0" width="7.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="432.3" y="334.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (1 samples, 0.03%)</title><rect x="430.3" y="307.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="433.3" y="318.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (14 samples, 0.41%)</title><rect x="430.6" y="307.0" width="4.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="433.6" y="318.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (1 samples, 0.03%)</title><rect x="435.4" y="307.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="438.4" y="318.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (2 samples, 0.06%)</title><rect x="435.8" y="307.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="438.8" y="318.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (2 samples, 0.06%)</title><rect x="436.5" y="307.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="439.5" y="318.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="437.1" y="387.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="440.1" y="398.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="437.1" y="371.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="440.1" y="382.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.03%)</title><rect x="437.1" y="355.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="440.1" y="366.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="437.1" y="339.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="440.1" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.26%)</title><rect x="437.5" y="467.0" width="3.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="440.5" y="478.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.09%)</title><rect x="438.2" y="451.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="441.2" y="462.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (1 samples, 0.03%)</title><rect x="439.2" y="451.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="442.2" y="462.0"></text>
</g>
<g>
<title>selinux_ip_postroute (2 samples, 0.06%)</title><rect x="439.5" y="451.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="442.5" y="462.0"></text>
</g>
<g>
<title>selinux_peerlbl_enabled (1 samples, 0.03%)</title><rect x="439.9" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="442.9" y="446.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (1 samples, 0.03%)</title><rect x="440.2" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="443.2" y="462.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="440.5" y="499.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="443.5" y="510.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.03%)</title><rect x="440.9" y="499.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="443.9" y="510.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.03%)</title><rect x="441.2" y="499.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="444.2" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="441.6" y="499.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="444.6" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.12%)</title><rect x="441.9" y="515.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="444.9" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.06%)</title><rect x="441.9" y="499.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="444.9" y="510.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.06%)</title><rect x="441.9" y="483.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="444.9" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.06%)</title><rect x="441.9" y="467.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="444.9" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.06%)</title><rect x="442.6" y="499.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="445.6" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.09%)</title><rect x="443.3" y="515.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="446.3" y="526.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.03%)</title><rect x="444.0" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="447.0" y="510.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.03%)</title><rect x="444.3" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="447.3" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.03%)</title><rect x="444.6" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="447.6" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.03%)</title><rect x="444.6" y="531.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="447.6" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.09%)</title><rect x="445.0" y="547.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="448.0" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.09%)</title><rect x="445.0" y="531.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="448.0" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.06%)</title><rect x="445.3" y="515.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="448.3" y="526.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="446.0" y="547.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="449.0" y="558.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.09%)</title><rect x="446.4" y="627.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="449.4" y="638.0"></text>
</g>
<g>
<title>selinux_file_permission (3 samples, 0.09%)</title><rect x="446.4" y="611.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="449.4" y="622.0"></text>
</g>
<g>
<title>import_iovec (2 samples, 0.06%)</title><rect x="447.4" y="643.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="450.4" y="654.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (2 samples, 0.06%)</title><rect x="447.4" y="627.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="450.4" y="638.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.03%)</title><rect x="447.7" y="611.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="450.7" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="447.7" y="595.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="450.7" y="606.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (1 samples, 0.03%)</title><rect x="448.1" y="723.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="451.1" y="734.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.06%)</title><rect x="448.4" y="723.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="451.4" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.12%)</title><rect x="449.1" y="755.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.1" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.12%)</title><rect x="449.1" y="739.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="452.1" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.09%)</title><rect x="449.4" y="723.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.4" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (4 samples, 0.12%)</title><rect x="450.5" y="819.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="453.5" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (1 samples, 0.03%)</title><rect x="450.8" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="453.8" y="814.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.06%)</title><rect x="451.1" y="803.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="454.1" y="814.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.hasNext (1 samples, 0.03%)</title><rect x="451.1" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="454.1" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="451.5" y="787.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="454.5" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="451.5" y="771.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="454.5" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="451.5" y="755.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="454.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.03%)</title><rect x="451.8" y="835.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="454.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.03%)</title><rect x="451.8" y="819.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="454.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.compareAndSet (1 samples, 0.03%)</title><rect x="451.8" y="803.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="454.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.03%)</title><rect x="452.2" y="899.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="455.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.03%)</title><rect x="452.2" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="455.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.compareAndSet (1 samples, 0.03%)</title><rect x="452.2" y="867.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="455.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="452.5" y="931.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="455.5" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="452.8" y="1027.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="455.8" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="452.8" y="1011.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="455.8" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="452.8" y="995.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="455.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (414 samples, 11.98%)</title><rect x="453.2" y="1075.0" width="141.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="456.2" y="1086.0">jdk/internal/net/h..</text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="453.5" y="1059.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="456.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (412 samples, 11.92%)</title><rect x="453.9" y="1059.0" width="140.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="456.9" y="1070.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (189 samples, 5.47%)</title><rect x="454.9" y="1043.0" width="64.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="457.9" y="1054.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (189 samples, 5.47%)</title><rect x="454.9" y="1027.0" width="64.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.9" y="1038.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (189 samples, 5.47%)</title><rect x="454.9" y="1011.0" width="64.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="457.9" y="1022.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (38 samples, 1.10%)</title><rect x="455.2" y="995.0" width="13.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="458.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (38 samples, 1.10%)</title><rect x="455.2" y="979.0" width="13.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="458.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (38 samples, 1.10%)</title><rect x="455.2" y="963.0" width="13.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="458.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (38 samples, 1.10%)</title><rect x="455.2" y="947.0" width="13.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="458.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (36 samples, 1.04%)</title><rect x="455.6" y="931.0" width="12.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="458.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (36 samples, 1.04%)</title><rect x="455.6" y="915.0" width="12.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="458.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (34 samples, 0.98%)</title><rect x="456.3" y="899.0" width="11.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="459.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (34 samples, 0.98%)</title><rect x="456.3" y="883.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="459.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (33 samples, 0.95%)</title><rect x="456.6" y="867.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.6" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="457.3" y="851.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.3" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="457.3" y="835.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.3" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (30 samples, 0.87%)</title><rect x="457.6" y="851.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="460.6" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (29 samples, 0.84%)</title><rect x="458.0" y="835.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.0" y="846.0"></text>
</g>
<g>
<title>__libc_write (29 samples, 0.84%)</title><rect x="458.0" y="819.0" width="9.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="461.0" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.67%)</title><rect x="460.0" y="803.0" width="7.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="463.0" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.67%)</title><rect x="460.0" y="787.0" width="7.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="463.0" y="798.0"></text>
</g>
<g>
<title>ksys_write (23 samples, 0.67%)</title><rect x="460.0" y="771.0" width="7.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="463.0" y="782.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="460.0" y="755.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="463.0" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="460.0" y="739.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="463.0" y="750.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="460.4" y="755.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="463.4" y="766.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="460.4" y="739.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="463.4" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="460.4" y="723.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="463.4" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="460.4" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="463.4" y="718.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="460.4" y="691.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="463.4" y="702.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="460.4" y="675.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="463.4" y="686.0"></text>
</g>
<g>
<title>vfs_write (21 samples, 0.61%)</title><rect x="460.7" y="755.0" width="7.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="463.7" y="766.0"></text>
</g>
<g>
<title>new_sync_write (19 samples, 0.55%)</title><rect x="460.7" y="739.0" width="6.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="463.7" y="750.0"></text>
</g>
<g>
<title>pipe_write (19 samples, 0.55%)</title><rect x="460.7" y="723.0" width="6.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="463.7" y="734.0"></text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 0.43%)</title><rect x="461.0" y="707.0" width="5.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="464.0" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.43%)</title><rect x="461.0" y="691.0" width="5.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="464.0" y="702.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.03%)</title><rect x="466.2" y="707.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="469.2" y="718.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.03%)</title><rect x="466.5" y="707.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="469.5" y="718.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.03%)</title><rect x="466.5" y="691.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="469.5" y="702.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="466.8" y="707.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="469.8" y="718.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.06%)</title><rect x="467.2" y="739.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="470.2" y="750.0"></text>
</g>
<g>
<title>file_has_perm (1 samples, 0.03%)</title><rect x="467.2" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="470.2" y="734.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="467.2" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="470.2" y="718.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.03%)</title><rect x="467.5" y="723.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="470.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.03%)</title><rect x="467.9" y="931.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="470.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (1 samples, 0.03%)</title><rect x="467.9" y="915.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.weakCompareAndSetVolatile (1 samples, 0.03%)</title><rect x="467.9" y="899.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="470.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (2 samples, 0.06%)</title><rect x="468.2" y="995.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.get (2 samples, 0.06%)</title><rect x="468.2" y="979.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="471.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (148 samples, 4.28%)</title><rect x="468.9" y="995.0" width="50.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="471.9" y="1006.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.03%)</title><rect x="469.2" y="979.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="472.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (146 samples, 4.22%)</title><rect x="469.6" y="979.0" width="49.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.6" y="990.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (146 samples, 4.22%)</title><rect x="469.6" y="963.0" width="49.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="472.6" y="974.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (146 samples, 4.22%)</title><rect x="469.6" y="947.0" width="49.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.6" y="958.0">jdk/i..</text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.03%)</title><rect x="470.6" y="931.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="473.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (66 samples, 1.91%)</title><rect x="470.9" y="931.0" width="22.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="473.9" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (3 samples, 0.09%)</title><rect x="470.9" y="915.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.9" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.09%)</title><rect x="470.9" y="899.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="473.9" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.09%)</title><rect x="470.9" y="883.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="473.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (63 samples, 1.82%)</title><rect x="472.0" y="915.0" width="21.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.0" y="926.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="472.3" y="899.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="475.3" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="472.3" y="883.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="475.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (61 samples, 1.77%)</title><rect x="472.6" y="899.0" width="20.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="475.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (61 samples, 1.77%)</title><rect x="472.6" y="883.0" width="20.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="475.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.09%)</title><rect x="472.6" y="867.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="475.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.09%)</title><rect x="472.6" y="851.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="475.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.06%)</title><rect x="472.6" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.6" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_L_I (2 samples, 0.06%)</title><rect x="472.6" y="819.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="475.6" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadOnly.getAcquire (1 samples, 0.03%)</title><rect x="473.0" y="803.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="476.0" y="814.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="473.0" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.03%)</title><rect x="473.3" y="835.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (58 samples, 1.68%)</title><rect x="473.7" y="867.0" width="19.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="476.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (57 samples, 1.65%)</title><rect x="473.7" y="851.0" width="19.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (57 samples, 1.65%)</title><rect x="473.7" y="835.0" width="19.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="476.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (53 samples, 1.53%)</title><rect x="473.7" y="819.0" width="18.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (53 samples, 1.53%)</title><rect x="473.7" y="803.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (52 samples, 1.50%)</title><rect x="473.7" y="787.0" width="17.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.06%)</title><rect x="474.7" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="477.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.06%)</title><rect x="474.7" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="477.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.06%)</title><rect x="474.7" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.06%)</title><rect x="474.7" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.7" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_L_I (2 samples, 0.06%)</title><rect x="474.7" y="707.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.7" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadOnly.getAcquire (2 samples, 0.06%)</title><rect x="474.7" y="691.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="477.7" y="702.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (2 samples, 0.06%)</title><rect x="474.7" y="675.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="475.4" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="478.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$132/1112562714.apply (41 samples, 1.19%)</title><rect x="475.7" y="771.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="478.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (40 samples, 1.16%)</title><rect x="476.1" y="755.0" width="13.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="479.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.06%)</title><rect x="476.1" y="739.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.06%)</title><rect x="476.1" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.06%)</title><rect x="476.1" y="707.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="479.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$201/376986198.apply (2 samples, 0.06%)</title><rect x="476.1" y="691.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="479.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (2 samples, 0.06%)</title><rect x="476.1" y="675.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (2 samples, 0.06%)</title><rect x="476.1" y="659.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="479.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (2 samples, 0.06%)</title><rect x="476.1" y="643.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (2 samples, 0.06%)</title><rect x="476.1" y="627.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (2 samples, 0.06%)</title><rect x="476.1" y="611.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="479.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (2 samples, 0.06%)</title><rect x="476.1" y="595.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (2 samples, 0.06%)</title><rect x="476.1" y="579.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (2 samples, 0.06%)</title><rect x="476.1" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.06%)</title><rect x="476.1" y="547.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="479.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.get$Lambda (1 samples, 0.03%)</title><rect x="476.4" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="479.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.&lt;init&gt; (1 samples, 0.03%)</title><rect x="476.4" y="515.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (38 samples, 1.10%)</title><rect x="476.7" y="739.0" width="13.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="479.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.03%)</title><rect x="476.7" y="723.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.03%)</title><rect x="476.7" y="707.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="479.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.03%)</title><rect x="476.7" y="691.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="476.7" y="675.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="479.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (37 samples, 1.07%)</title><rect x="477.1" y="723.0" width="12.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.1" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$120/1352876739.apply (1 samples, 0.03%)</title><rect x="477.1" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.1" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (1 samples, 0.03%)</title><rect x="477.1" y="691.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="480.1" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (1 samples, 0.03%)</title><rect x="477.1" y="675.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (1 samples, 0.03%)</title><rect x="477.1" y="659.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (36 samples, 1.04%)</title><rect x="477.4" y="707.0" width="12.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="480.4" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (3 samples, 0.09%)</title><rect x="478.1" y="691.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.1" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.03%)</title><rect x="478.1" y="675.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="481.1" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.03%)</title><rect x="478.1" y="659.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.1" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.03%)</title><rect x="478.1" y="643.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="481.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="478.1" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.1" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.03%)</title><rect x="478.1" y="611.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="481.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="478.1" y="595.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="481.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="478.1" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="478.1" y="563.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="481.1" y="574.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.03%)</title><rect x="478.1" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="481.1" y="558.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.03%)</title><rect x="478.1" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="481.1" y="542.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.03%)</title><rect x="478.4" y="675.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.03%)</title><rect x="478.4" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="481.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.03%)</title><rect x="478.4" y="643.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="481.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="478.4" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="481.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="478.4" y="611.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.4" y="622.0"></text>
</g>
<g>
<title>java/util/stream/PipelineHelper.&lt;init&gt; (1 samples, 0.03%)</title><rect x="478.4" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.4" y="606.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="478.4" y="579.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="481.4" y="590.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.03%)</title><rect x="478.4" y="563.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="481.4" y="574.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (1 samples, 0.03%)</title><rect x="478.8" y="675.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.03%)</title><rect x="478.8" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.03%)</title><rect x="478.8" y="643.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="481.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.03%)</title><rect x="478.8" y="627.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.03%)</title><rect x="478.8" y="611.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.09%)</title><rect x="479.1" y="691.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="482.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.03%)</title><rect x="479.1" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="479.1" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="482.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="479.1" y="643.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="482.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.06%)</title><rect x="479.5" y="675.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.06%)</title><rect x="479.5" y="659.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="482.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (2 samples, 0.06%)</title><rect x="479.5" y="643.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="482.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.06%)</title><rect x="479.5" y="627.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="482.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (2 samples, 0.06%)</title><rect x="480.2" y="691.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="483.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.fixupContentLen (6 samples, 0.17%)</title><rect x="480.8" y="691.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="483.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.12%)</title><rect x="481.5" y="675.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="484.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.12%)</title><rect x="481.5" y="659.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.5" y="670.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="481.5" y="643.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.5" y="654.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="481.9" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.9" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.06%)</title><rect x="482.2" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (17 samples, 0.49%)</title><rect x="482.9" y="691.0" width="5.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.9" y="702.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="482.9" y="675.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="485.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1452226218.run (16 samples, 0.46%)</title><rect x="483.2" y="675.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (15 samples, 0.43%)</title><rect x="483.6" y="659.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="483.9" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="486.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="483.9" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1089333161.get$Lambda (1 samples, 0.03%)</title><rect x="483.9" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1089333161.&lt;init&gt; (1 samples, 0.03%)</title><rect x="483.9" y="595.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (3 samples, 0.09%)</title><rect x="484.3" y="643.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.06%)</title><rect x="484.3" y="627.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.03%)</title><rect x="484.6" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.set (1 samples, 0.03%)</title><rect x="484.9" y="627.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (5 samples, 0.14%)</title><rect x="485.3" y="643.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="488.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (5 samples, 0.14%)</title><rect x="485.3" y="627.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="488.3" y="638.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (5 samples, 0.14%)</title><rect x="485.3" y="611.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.3" y="622.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (4 samples, 0.12%)</title><rect x="485.6" y="595.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="488.6" y="606.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (3 samples, 0.09%)</title><rect x="486.0" y="579.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="489.0" y="590.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.06%)</title><rect x="486.0" y="563.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="489.0" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (1 samples, 0.03%)</title><rect x="486.3" y="547.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="489.3" y="558.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="486.6" y="563.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="489.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (4 samples, 0.12%)</title><rect x="487.0" y="643.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (3 samples, 0.09%)</title><rect x="487.3" y="627.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="490.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.09%)</title><rect x="487.3" y="611.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/352462511.invoke (1 samples, 0.03%)</title><rect x="487.3" y="595.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/344898752.invoke (1 samples, 0.03%)</title><rect x="487.3" y="579.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/875918262.invoke (1 samples, 0.03%)</title><rect x="487.3" y="563.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="490.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="487.3" y="547.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.3" y="558.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.03%)</title><rect x="487.3" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="490.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.toString (1 samples, 0.03%)</title><rect x="487.3" y="515.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="490.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.dbgString (1 samples, 0.03%)</title><rect x="487.3" y="499.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/623247230.linkToTargetMethod (1 samples, 0.03%)</title><rect x="487.3" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="490.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/773662650.invoke (1 samples, 0.03%)</title><rect x="487.3" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="490.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1760126453.invokeStatic (1 samples, 0.03%)</title><rect x="487.3" y="451.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.03%)</title><rect x="487.3" y="435.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.3" y="446.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (1 samples, 0.03%)</title><rect x="487.3" y="419.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.3" y="430.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="487.3" y="403.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="490.3" y="414.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="487.7" y="595.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="490.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1 samples, 0.03%)</title><rect x="488.4" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="491.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (1 samples, 0.03%)</title><rect x="488.4" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="491.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (3 samples, 0.09%)</title><rect x="488.7" y="691.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="491.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;init&gt; (1 samples, 0.03%)</title><rect x="489.0" y="675.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.03%)</title><rect x="489.4" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="492.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/388216554.apply (5 samples, 0.14%)</title><rect x="489.7" y="771.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="492.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (5 samples, 0.14%)</title><rect x="489.7" y="755.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="492.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (5 samples, 0.14%)</title><rect x="489.7" y="739.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="492.7" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (2 samples, 0.06%)</title><rect x="490.7" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="493.7" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (2 samples, 0.06%)</title><rect x="490.7" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="493.7" y="718.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.03%)</title><rect x="491.1" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="494.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.03%)</title><rect x="491.4" y="787.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.03%)</title><rect x="491.4" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="494.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.03%)</title><rect x="491.4" y="755.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="491.4" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="494.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="491.4" y="723.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="494.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$278/649988588.apply (4 samples, 0.12%)</title><rect x="491.8" y="819.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (4 samples, 0.12%)</title><rect x="491.8" y="803.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="494.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="491.8" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="494.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (3 samples, 0.09%)</title><rect x="492.1" y="787.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="495.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.06%)</title><rect x="492.1" y="771.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.06%)</title><rect x="492.1" y="755.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="495.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.06%)</title><rect x="492.1" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="495.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="492.8" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="495.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.channel (1 samples, 0.03%)</title><rect x="492.8" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="495.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$98/505021446.getAsBoolean (1 samples, 0.03%)</title><rect x="493.1" y="851.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="496.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isSelectorThread (1 samples, 0.03%)</title><rect x="493.1" y="835.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="496.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (74 samples, 2.14%)</title><rect x="493.5" y="931.0" width="25.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="496.5" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (5 samples, 0.14%)</title><rect x="494.2" y="915.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="497.2" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.09%)</title><rect x="494.5" y="899.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="497.5" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.09%)</title><rect x="494.5" y="883.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.5" y="894.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.06%)</title><rect x="494.8" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.8" y="878.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.06%)</title><rect x="494.8" y="851.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.8" y="862.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="495.5" y="899.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="498.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (7 samples, 0.20%)</title><rect x="495.9" y="915.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="498.9" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.09%)</title><rect x="496.9" y="899.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="499.9" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.09%)</title><rect x="496.9" y="883.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="499.9" y="894.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.06%)</title><rect x="496.9" y="867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="499.9" y="878.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.06%)</title><rect x="496.9" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="499.9" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="497.2" y="835.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="500.2" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="497.2" y="819.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="500.2" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="497.2" y="803.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="500.2" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="497.2" y="787.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="500.2" y="798.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="497.2" y="771.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="500.2" y="782.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="497.2" y="755.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="500.2" y="766.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.03%)</title><rect x="497.2" y="739.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="500.2" y="750.0"></text>
</g>
<g>
<title>tcp_delack_timer_handler (1 samples, 0.03%)</title><rect x="497.2" y="723.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="500.2" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.isLatin1 (1 samples, 0.03%)</title><rect x="497.6" y="867.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="500.6" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="497.9" y="899.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="500.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (5 samples, 0.14%)</title><rect x="498.3" y="915.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.3" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.09%)</title><rect x="498.3" y="899.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.3" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.09%)</title><rect x="498.3" y="883.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.3" y="894.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.06%)</title><rect x="498.6" y="867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="501.6" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.06%)</title><rect x="499.3" y="899.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="502.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (9 samples, 0.26%)</title><rect x="500.0" y="915.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="503.0" y="926.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (7 samples, 0.20%)</title><rect x="500.0" y="899.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.0" y="910.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (7 samples, 0.20%)</title><rect x="500.0" y="883.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="503.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.06%)</title><rect x="501.7" y="867.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="504.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.06%)</title><rect x="501.7" y="851.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="504.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.06%)</title><rect x="501.7" y="835.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="504.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.06%)</title><rect x="502.3" y="899.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="505.3" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.06%)</title><rect x="502.3" y="883.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="505.3" y="894.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.06%)</title><rect x="502.3" y="867.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="505.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (21 samples, 0.61%)</title><rect x="503.0" y="915.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.0" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (20 samples, 0.58%)</title><rect x="503.4" y="899.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="506.4" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (20 samples, 0.58%)</title><rect x="503.4" y="883.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="506.4" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (15 samples, 0.43%)</title><rect x="504.4" y="867.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="507.4" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (13 samples, 0.38%)</title><rect x="505.1" y="851.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="508.1" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (13 samples, 0.38%)</title><rect x="505.1" y="835.0" width="4.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="508.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.trim (6 samples, 0.17%)</title><rect x="505.1" y="819.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="508.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (6 samples, 0.17%)</title><rect x="505.1" y="803.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.12%)</title><rect x="505.8" y="787.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="508.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.06%)</title><rect x="505.8" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="508.8" y="782.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.06%)</title><rect x="505.8" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$62/938545229.test (2 samples, 0.06%)</title><rect x="505.8" y="739.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="508.8" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.06%)</title><rect x="506.4" y="771.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="509.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="507.1" y="819.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="510.1" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="507.1" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="510.1" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.get$Lambda (1 samples, 0.03%)</title><rect x="507.1" y="787.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.1" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.&lt;init&gt; (1 samples, 0.03%)</title><rect x="507.1" y="771.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="510.1" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.17%)</title><rect x="507.5" y="819.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="510.5" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (4 samples, 0.12%)</title><rect x="507.8" y="803.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="510.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.09%)</title><rect x="508.2" y="787.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="511.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.09%)</title><rect x="508.2" y="771.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="511.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="508.8" y="755.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="511.8" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.03%)</title><rect x="509.2" y="803.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="512.2" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (2 samples, 0.06%)</title><rect x="509.5" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="512.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrLF (1 samples, 0.03%)</title><rect x="510.2" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="513.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (24 samples, 0.69%)</title><rect x="510.5" y="915.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="513.5" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.06%)</title><rect x="510.9" y="899.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="513.9" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.06%)</title><rect x="510.9" y="883.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="513.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="511.2" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="514.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (21 samples, 0.61%)</title><rect x="511.6" y="899.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="514.6" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="511.6" y="883.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="511.6" y="867.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="511.6" y="851.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.14%)</title><rect x="511.9" y="883.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.03%)</title><rect x="512.6" y="867.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="512.9" y="867.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.9" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="513.3" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (7 samples, 0.20%)</title><rect x="513.6" y="883.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="514.0" y="867.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.0" y="878.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="514.0" y="851.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="517.0" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (4 samples, 0.12%)</title><rect x="514.3" y="867.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="517.3" y="878.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="515.7" y="867.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="518.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.14%)</title><rect x="516.0" y="883.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="519.0" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (5 samples, 0.14%)</title><rect x="516.0" y="867.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="519.0" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="516.7" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="516.7" y="835.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.7" y="846.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="517.0" y="851.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="520.0" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="517.4" y="851.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="520.4" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (3 samples, 0.09%)</title><rect x="517.7" y="883.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.7" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="518.1" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="518.1" y="851.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="521.1" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="518.1" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="521.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$282/1262603830.apply (1 samples, 0.03%)</title><rect x="518.4" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="521.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (1 samples, 0.03%)</title><rect x="518.4" y="851.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.4" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.03%)</title><rect x="518.4" y="835.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="521.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="518.4" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="521.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$214/1397508456.accept (2 samples, 0.06%)</title><rect x="518.7" y="931.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (2 samples, 0.06%)</title><rect x="518.7" y="915.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="521.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (2 samples, 0.06%)</title><rect x="518.7" y="899.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="521.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (220 samples, 6.37%)</title><rect x="519.4" y="1043.0" width="75.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.4" y="1054.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (2 samples, 0.06%)</title><rect x="519.4" y="1027.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="522.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (218 samples, 6.31%)</title><rect x="520.1" y="1027.0" width="74.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="523.1" y="1038.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.03%)</title><rect x="520.1" y="1011.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (217 samples, 6.28%)</title><rect x="520.4" y="1011.0" width="74.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="523.4" y="1022.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (217 samples, 6.28%)</title><rect x="520.4" y="995.0" width="74.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="523.4" y="1006.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (217 samples, 6.28%)</title><rect x="520.4" y="979.0" width="74.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="523.4" y="990.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (210 samples, 6.08%)</title><rect x="520.4" y="963.0" width="71.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="523.4" y="974.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="520.4" y="947.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.4" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="520.4" y="931.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="523.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1241815609.get$Lambda (1 samples, 0.03%)</title><rect x="520.4" y="915.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$221/1241815609.&lt;init&gt; (1 samples, 0.03%)</title><rect x="520.4" y="899.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="523.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (4 samples, 0.12%)</title><rect x="520.8" y="947.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="523.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (2 samples, 0.06%)</title><rect x="521.5" y="931.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="524.5" y="942.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="521.8" y="915.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (205 samples, 5.93%)</title><rect x="522.2" y="947.0" width="69.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="525.2" y="958.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (205 samples, 5.93%)</title><rect x="522.2" y="931.0" width="69.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="525.2" y="942.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1089333161.run (123 samples, 3.56%)</title><rect x="522.2" y="915.0" width="41.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="525.2" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (123 samples, 3.56%)</title><rect x="522.2" y="899.0" width="41.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="525.2" y="910.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (123 samples, 3.56%)</title><rect x="522.2" y="883.0" width="41.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="525.2" y="894.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (6 samples, 0.17%)</title><rect x="522.2" y="867.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="525.2" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.09%)</title><rect x="522.5" y="851.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="525.5" y="862.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.06%)</title><rect x="522.8" y="835.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="525.8" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.06%)</title><rect x="522.8" y="819.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="525.8" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.06%)</title><rect x="522.8" y="803.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="525.8" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.06%)</title><rect x="522.8" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="525.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="522.8" y="771.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="525.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="522.8" y="755.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="525.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.06%)</title><rect x="522.8" y="739.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="525.8" y="750.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.03%)</title><rect x="523.5" y="851.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="526.5" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.03%)</title><rect x="523.5" y="835.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="526.5" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.03%)</title><rect x="523.5" y="819.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="526.5" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="523.5" y="803.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="526.5" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="523.5" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="526.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.03%)</title><rect x="523.9" y="851.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="526.9" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.03%)</title><rect x="523.9" y="835.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="526.9" y="846.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.03%)</title><rect x="523.9" y="819.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="526.9" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.03%)</title><rect x="523.9" y="803.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="526.9" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.03%)</title><rect x="523.9" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="526.9" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1 samples, 0.03%)</title><rect x="523.9" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="526.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (117 samples, 3.39%)</title><rect x="524.2" y="867.0" width="39.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="527.2" y="878.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (117 samples, 3.39%)</title><rect x="524.2" y="851.0" width="39.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.2" y="862.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (79 samples, 2.29%)</title><rect x="524.2" y="835.0" width="27.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.2" y="846.0">j..</text>
</g>
<g>
<title>java/time/Instant.plus (37 samples, 1.07%)</title><rect x="529.3" y="819.0" width="12.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="532.3" y="830.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (32 samples, 0.93%)</title><rect x="530.7" y="803.0" width="10.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="533.7" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.plus (32 samples, 0.93%)</title><rect x="530.7" y="787.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="533.7" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (6 samples, 0.17%)</title><rect x="539.6" y="771.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="542.6" y="782.0"></text>
</g>
<g>
<title>java/time/Instant.create (6 samples, 0.17%)</title><rect x="539.6" y="755.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="542.6" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="541.6" y="803.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="544.6" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="541.6" y="787.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="544.6" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="541.6" y="771.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="544.6" y="782.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="541.6" y="755.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="544.6" y="766.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="541.6" y="739.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="544.6" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (3 samples, 0.09%)</title><rect x="542.0" y="819.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.0" y="830.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (2 samples, 0.06%)</title><rect x="542.3" y="803.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="545.3" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.06%)</title><rect x="542.3" y="787.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="545.3" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.06%)</title><rect x="542.3" y="771.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="545.3" y="782.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (1 samples, 0.03%)</title><rect x="542.6" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="545.6" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (3 samples, 0.09%)</title><rect x="543.0" y="819.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="546.0" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (3 samples, 0.09%)</title><rect x="543.0" y="803.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.0" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (3 samples, 0.09%)</title><rect x="543.0" y="787.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="546.0" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.add (1 samples, 0.03%)</title><rect x="544.0" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="547.0" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkBefore (1 samples, 0.03%)</title><rect x="544.0" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="547.0" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (2 samples, 0.06%)</title><rect x="544.3" y="819.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.3" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (18 samples, 0.52%)</title><rect x="545.0" y="819.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="548.0" y="830.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="550.8" y="803.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="553.8" y="814.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="550.8" y="787.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="553.8" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="550.8" y="771.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="553.8" y="782.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="550.8" y="755.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="553.8" y="766.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="550.8" y="739.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="553.8" y="750.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="550.8" y="723.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="553.8" y="734.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.03%)</title><rect x="550.8" y="707.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="553.8" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="550.8" y="691.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="553.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (3 samples, 0.09%)</title><rect x="551.2" y="835.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.06%)</title><rect x="551.2" y="819.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="554.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="551.2" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.03%)</title><rect x="551.2" y="787.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="554.2" y="798.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.03%)</title><rect x="551.2" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="554.2" y="782.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.03%)</title><rect x="551.2" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="554.2" y="766.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.03%)</title><rect x="551.2" y="739.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.2" y="750.0"></text>
</g>
<g>
<title>java/net/Inet4Address.equals (1 samples, 0.03%)</title><rect x="551.2" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="554.2" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="551.5" y="803.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.03%)</title><rect x="551.5" y="787.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="554.5" y="798.0"></text>
</g>
<g>
<title>java/util/Objects.hash (1 samples, 0.03%)</title><rect x="551.5" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.5" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (1 samples, 0.03%)</title><rect x="551.5" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.5" y="766.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (1 samples, 0.03%)</title><rect x="551.5" y="739.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="554.5" y="750.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.hashCode (1 samples, 0.03%)</title><rect x="551.5" y="723.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="554.5" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.03%)</title><rect x="551.9" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.9" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.03%)</title><rect x="551.9" y="803.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.9" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="551.9" y="787.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="554.9" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="551.9" y="771.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="554.9" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="551.9" y="755.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="554.9" y="766.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="551.9" y="739.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="554.9" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.03%)</title><rect x="551.9" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="554.9" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="551.9" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="554.9" y="718.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="551.9" y="691.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="554.9" y="702.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="551.9" y="675.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="554.9" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="551.9" y="659.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="554.9" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="551.9" y="643.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="554.9" y="654.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="551.9" y="627.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="554.9" y="638.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="551.9" y="611.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="554.9" y="622.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.03%)</title><rect x="551.9" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="554.9" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="551.9" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="554.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (35 samples, 1.01%)</title><rect x="552.2" y="835.0" width="11.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (35 samples, 1.01%)</title><rect x="552.2" y="819.0" width="11.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="555.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (9 samples, 0.26%)</title><rect x="552.2" y="803.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="555.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (9 samples, 0.26%)</title><rect x="552.2" y="787.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="555.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (9 samples, 0.26%)</title><rect x="552.2" y="771.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="555.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 0.12%)</title><rect x="552.9" y="755.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 0.12%)</title><rect x="552.9" y="739.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="555.9" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="553.6" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="556.6" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="553.6" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.03%)</title><rect x="553.9" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (1 samples, 0.03%)</title><rect x="554.2" y="755.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (2 samples, 0.06%)</title><rect x="554.6" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (26 samples, 0.75%)</title><rect x="555.3" y="803.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (26 samples, 0.75%)</title><rect x="555.3" y="787.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="558.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (26 samples, 0.75%)</title><rect x="555.3" y="771.0" width="8.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (26 samples, 0.75%)</title><rect x="555.3" y="755.0" width="8.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="558.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (26 samples, 0.75%)</title><rect x="555.3" y="739.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="558.3" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.06%)</title><rect x="555.6" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.6" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.06%)</title><rect x="555.6" y="707.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.6" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="556.0" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="559.0" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="556.0" y="675.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="559.0" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="556.0" y="659.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="559.0" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.03%)</title><rect x="556.0" y="643.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="559.0" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="556.0" y="627.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="559.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (23 samples, 0.67%)</title><rect x="556.3" y="723.0" width="7.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="559.3" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (21 samples, 0.61%)</title><rect x="557.0" y="707.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="560.0" y="718.0"></text>
</g>
<g>
<title>__libc_write (21 samples, 0.61%)</title><rect x="557.0" y="691.0" width="7.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="560.0" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.49%)</title><rect x="558.3" y="675.0" width="5.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="561.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.49%)</title><rect x="558.3" y="659.0" width="5.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="561.3" y="670.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.03%)</title><rect x="558.7" y="643.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="561.7" y="654.0"></text>
</g>
<g>
<title>ksys_write (15 samples, 0.43%)</title><rect x="559.0" y="643.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="562.0" y="654.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="559.0" y="627.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="562.0" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="559.0" y="611.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="562.0" y="622.0"></text>
</g>
<g>
<title>vfs_write (14 samples, 0.41%)</title><rect x="559.4" y="627.0" width="4.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="562.4" y="638.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="559.4" y="611.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="562.4" y="622.0"></text>
</g>
<g>
<title>new_sync_write (12 samples, 0.35%)</title><rect x="559.7" y="611.0" width="4.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="562.7" y="622.0"></text>
</g>
<g>
<title>pipe_write (10 samples, 0.29%)</title><rect x="560.4" y="595.0" width="3.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="563.4" y="606.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.20%)</title><rect x="560.7" y="579.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="563.7" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.20%)</title><rect x="560.7" y="563.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="563.7" y="574.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.03%)</title><rect x="563.1" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="566.1" y="590.0"></text>
</g>
<g>
<title>__mnt_want_write (1 samples, 0.03%)</title><rect x="563.1" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="566.1" y="574.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="563.5" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="566.5" y="590.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="563.8" y="611.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="566.8" y="622.0"></text>
</g>
<g>
<title>file_has_perm (1 samples, 0.03%)</title><rect x="563.8" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="566.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/1528731011.accept (4 samples, 0.12%)</title><rect x="564.1" y="915.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (4 samples, 0.12%)</title><rect x="564.1" y="899.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (4 samples, 0.12%)</title><rect x="564.1" y="883.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.09%)</title><rect x="564.1" y="867.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.09%)</title><rect x="564.1" y="851.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.09%)</title><rect x="564.1" y="835.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.09%)</title><rect x="564.1" y="819.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="564.1" y="803.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$297/1321510655.accept (2 samples, 0.06%)</title><rect x="564.5" y="803.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (2 samples, 0.06%)</title><rect x="564.5" y="787.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (2 samples, 0.06%)</title><rect x="564.5" y="771.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.5" y="782.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (1 samples, 0.03%)</title><rect x="564.8" y="755.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.8" y="766.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (1 samples, 0.03%)</title><rect x="564.8" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.8" y="750.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (1 samples, 0.03%)</title><rect x="564.8" y="723.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$216/1072692812.accept (1 samples, 0.03%)</title><rect x="565.2" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.03%)</title><rect x="565.2" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="568.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (77 samples, 2.23%)</title><rect x="565.5" y="915.0" width="26.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.5" y="926.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (77 samples, 2.23%)</title><rect x="565.5" y="899.0" width="26.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.5" y="910.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (77 samples, 2.23%)</title><rect x="565.5" y="883.0" width="26.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="568.5" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (72 samples, 2.08%)</title><rect x="565.5" y="867.0" width="24.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="568.5" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.03%)</title><rect x="565.5" y="851.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.5" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="565.5" y="835.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.5" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="565.5" y="819.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (71 samples, 2.05%)</title><rect x="565.9" y="851.0" width="24.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="568.9" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (71 samples, 2.05%)</title><rect x="565.9" y="835.0" width="24.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.9" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (70 samples, 2.03%)</title><rect x="566.2" y="819.0" width="23.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.2" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.06%)</title><rect x="566.2" y="803.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.06%)</title><rect x="566.2" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="569.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.06%)</title><rect x="566.2" y="771.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.06%)</title><rect x="566.2" y="755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="569.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.06%)</title><rect x="566.2" y="739.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="569.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.06%)</title><rect x="566.2" y="723.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.06%)</title><rect x="566.2" y="707.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.06%)</title><rect x="566.2" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.06%)</title><rect x="566.2" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (2 samples, 0.06%)</title><rect x="566.2" y="659.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="569.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/1036110883.accept (2 samples, 0.06%)</title><rect x="566.2" y="643.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="569.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$300/1036110883.accept (68 samples, 1.97%)</title><rect x="566.9" y="803.0" width="23.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="569.9" y="814.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (68 samples, 1.97%)</title><rect x="566.9" y="787.0" width="23.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="569.9" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (68 samples, 1.97%)</title><rect x="566.9" y="771.0" width="23.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="569.9" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.03%)</title><rect x="566.9" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="569.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="566.9" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="566.9" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (67 samples, 1.94%)</title><rect x="567.2" y="755.0" width="22.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="570.2" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5 samples, 0.14%)</title><rect x="567.6" y="739.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="570.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$309/980063472.apply (4 samples, 0.12%)</title><rect x="567.9" y="723.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (4 samples, 0.12%)</title><rect x="567.9" y="707.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (3 samples, 0.09%)</title><rect x="568.2" y="691.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="571.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.headers (1 samples, 0.03%)</title><rect x="568.9" y="675.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="571.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.06%)</title><rect x="569.3" y="739.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="572.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (59 samples, 1.71%)</title><rect x="570.0" y="739.0" width="20.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (58 samples, 1.68%)</title><rect x="570.3" y="723.0" width="19.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (56 samples, 1.62%)</title><rect x="570.3" y="707.0" width="19.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (48 samples, 1.39%)</title><rect x="571.0" y="691.0" width="16.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (48 samples, 1.39%)</title><rect x="571.0" y="675.0" width="16.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (48 samples, 1.39%)</title><rect x="571.0" y="659.0" width="16.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="574.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (1 samples, 0.03%)</title><rect x="571.0" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (47 samples, 1.36%)</title><rect x="571.3" y="643.0" width="16.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LJJ_Z (1 samples, 0.03%)</title><rect x="571.3" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="574.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="571.3" y="611.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (45 samples, 1.30%)</title><rect x="571.7" y="627.0" width="15.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (45 samples, 1.30%)</title><rect x="571.7" y="611.0" width="15.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="574.7" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.14%)</title><rect x="571.7" y="595.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="574.7" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.03%)</title><rect x="572.0" y="579.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="575.0" y="590.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.03%)</title><rect x="572.3" y="579.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="575.3" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.03%)</title><rect x="572.7" y="579.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="575.7" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="573.0" y="579.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="576.0" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (39 samples, 1.13%)</title><rect x="573.4" y="595.0" width="13.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="576.4" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.90%)</title><rect x="576.1" y="579.0" width="10.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="579.1" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.90%)</title><rect x="576.1" y="563.0" width="10.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="579.1" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (29 samples, 0.84%)</title><rect x="576.8" y="547.0" width="9.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="579.8" y="558.0"></text>
</g>
<g>
<title>do_futex (29 samples, 0.84%)</title><rect x="576.8" y="531.0" width="9.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="579.8" y="542.0"></text>
</g>
<g>
<title>futex_wake (29 samples, 0.84%)</title><rect x="576.8" y="515.0" width="9.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="579.8" y="526.0"></text>
</g>
<g>
<title>wake_up_q (29 samples, 0.84%)</title><rect x="576.8" y="499.0" width="9.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="579.8" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (29 samples, 0.84%)</title><rect x="576.8" y="483.0" width="9.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="579.8" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (29 samples, 0.84%)</title><rect x="576.8" y="467.0" width="9.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="579.8" y="478.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="586.7" y="595.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="589.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="587.0" y="627.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="590.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.17%)</title><rect x="587.4" y="691.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="590.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.17%)</title><rect x="587.4" y="675.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="590.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.17%)</title><rect x="587.4" y="659.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="590.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 0.14%)</title><rect x="587.4" y="643.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.14%)</title><rect x="587.4" y="627.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="590.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.14%)</title><rect x="587.4" y="611.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="590.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.14%)</title><rect x="587.4" y="595.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="590.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (5 samples, 0.14%)</title><rect x="587.4" y="579.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (5 samples, 0.14%)</title><rect x="587.4" y="563.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="590.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$138/443747487.accept (2 samples, 0.06%)</title><rect x="588.4" y="547.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="591.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="589.1" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="592.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.03%)</title><rect x="589.1" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="592.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$306/99915046.accept (2 samples, 0.06%)</title><rect x="589.4" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="592.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (1 samples, 0.03%)</title><rect x="589.8" y="691.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="592.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.completed (1 samples, 0.03%)</title><rect x="589.8" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="592.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (5 samples, 0.14%)</title><rect x="590.1" y="867.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.1" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.06%)</title><rect x="590.1" y="851.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.1" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.03%)</title><rect x="590.8" y="851.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="593.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (2 samples, 0.06%)</title><rect x="591.1" y="851.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="594.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1 samples, 0.03%)</title><rect x="591.5" y="835.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="594.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (1 samples, 0.03%)</title><rect x="591.8" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (1 samples, 0.03%)</title><rect x="591.8" y="899.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="594.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (1 samples, 0.03%)</title><rect x="592.1" y="963.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (6 samples, 0.17%)</title><rect x="592.5" y="963.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="595.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (6 samples, 0.17%)</title><rect x="592.5" y="947.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.isDone (2 samples, 0.06%)</title><rect x="592.5" y="931.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="595.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4 samples, 0.12%)</title><rect x="593.2" y="931.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4 samples, 0.12%)</title><rect x="593.2" y="915.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.06%)</title><rect x="593.9" y="899.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="596.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.06%)</title><rect x="593.9" y="883.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.9" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$107/2098846329.run (493 samples, 14.27%)</title><rect x="594.5" y="1075.0" width="168.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="597.5" y="1086.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>itable stub (2 samples, 0.06%)</title><rect x="595.6" y="1059.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="598.6" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$328/1195073115.run (488 samples, 14.12%)</title><rect x="596.2" y="1059.0" width="166.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="599.2" y="1070.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (486 samples, 14.06%)</title><rect x="596.9" y="1043.0" width="166.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="599.9" y="1054.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.delete (467 samples, 13.51%)</title><rect x="596.9" y="1027.0" width="159.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.9" y="1038.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="596.9" y="1011.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="596.9" y="995.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="599.9" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="597.3" y="1011.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="600.3" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="597.3" y="995.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="600.3" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="597.3" y="979.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="600.3" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="597.3" y="963.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="600.3" y="974.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="597.3" y="947.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="600.3" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="597.3" y="931.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="600.3" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="597.3" y="915.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="600.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.06%)</title><rect x="597.6" y="1011.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="600.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.03%)</title><rect x="598.0" y="995.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.03%)</title><rect x="598.0" y="979.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="601.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="598.0" y="963.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="601.0" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="598.3" y="1011.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.3" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (97 samples, 2.81%)</title><rect x="598.6" y="1011.0" width="33.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="601.6" y="1022.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (96 samples, 2.78%)</title><rect x="599.0" y="995.0" width="32.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.0" y="1006.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (1 samples, 0.03%)</title><rect x="599.0" y="979.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="599.0" y="963.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock (1 samples, 0.03%)</title><rect x="599.3" y="979.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="602.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="599.3" y="963.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="602.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="599.3" y="947.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="599.3" y="931.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="602.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="599.3" y="915.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="602.3" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="599.3" y="899.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="602.3" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="599.3" y="883.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="602.3" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="599.3" y="867.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="602.3" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="599.3" y="851.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="602.3" y="862.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="599.3" y="835.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="602.3" y="846.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="599.3" y="819.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="602.3" y="830.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="599.3" y="803.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="602.3" y="814.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="599.3" y="787.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="602.3" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="599.3" y="771.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="602.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (93 samples, 2.69%)</title><rect x="599.7" y="979.0" width="31.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="602.7" y="990.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (89 samples, 2.58%)</title><rect x="600.0" y="963.0" width="30.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="603.0" y="974.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (89 samples, 2.58%)</title><rect x="600.0" y="947.0" width="30.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="603.0" y="958.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.09%)</title><rect x="607.5" y="931.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="610.5" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.09%)</title><rect x="607.5" y="915.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (22 samples, 0.64%)</title><rect x="608.5" y="931.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.5" y="942.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="615.7" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="618.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (1 samples, 0.03%)</title><rect x="616.0" y="931.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="619.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (4 samples, 0.12%)</title><rect x="616.4" y="931.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.03%)</title><rect x="616.4" y="915.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.09%)</title><rect x="616.7" y="915.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="619.7" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.09%)</title><rect x="616.7" y="899.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="619.7" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.09%)</title><rect x="616.7" y="883.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.7" y="894.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.06%)</title><rect x="616.7" y="867.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="619.7" y="878.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="617.4" y="867.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="620.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (35 samples, 1.01%)</title><rect x="617.8" y="931.0" width="11.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="620.8" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (33 samples, 0.95%)</title><rect x="618.4" y="915.0" width="11.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.4" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (32 samples, 0.93%)</title><rect x="618.8" y="899.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.8" y="910.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (7 samples, 0.20%)</title><rect x="619.5" y="883.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="622.5" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.09%)</title><rect x="620.8" y="867.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="623.8" y="878.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (21 samples, 0.61%)</title><rect x="621.9" y="883.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.9" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (1 samples, 0.03%)</title><rect x="625.3" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.3" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (9 samples, 0.26%)</title><rect x="625.6" y="867.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="628.6" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.06%)</title><rect x="628.0" y="851.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="631.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (1 samples, 0.03%)</title><rect x="628.7" y="867.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="631.7" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (1 samples, 0.03%)</title><rect x="628.7" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="631.7" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.06%)</title><rect x="629.0" y="883.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="632.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (2 samples, 0.06%)</title><rect x="629.7" y="931.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="632.7" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (2 samples, 0.06%)</title><rect x="630.4" y="963.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="633.4" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.06%)</title><rect x="630.4" y="947.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.4" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.06%)</title><rect x="630.4" y="931.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.4" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="630.4" y="915.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="633.4" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="630.4" y="899.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="633.4" y="910.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="630.7" y="883.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="633.7" y="894.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="630.7" y="867.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="633.7" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getSizeOfFlushedRow (1 samples, 0.03%)</title><rect x="631.1" y="963.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="634.1" y="974.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.03%)</title><rect x="631.1" y="947.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.1" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (1 samples, 0.03%)</title><rect x="631.4" y="979.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="634.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.getSizeOfFlushedRow (1 samples, 0.03%)</title><rect x="631.4" y="963.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="634.4" y="974.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.03%)</title><rect x="631.4" y="947.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.4" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getResponsesFromReplicas (141 samples, 4.08%)</title><rect x="631.8" y="1011.0" width="48.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="634.8" y="1022.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.09%)</title><rect x="631.8" y="995.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="634.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1000975683.invoke (3 samples, 0.09%)</title><rect x="631.8" y="979.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="634.8" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.06%)</title><rect x="631.8" y="963.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="634.8" y="974.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.03%)</title><rect x="631.8" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="634.8" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="631.8" y="931.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="634.8" y="942.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.03%)</title><rect x="632.1" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="635.1" y="958.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="632.1" y="931.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (1 samples, 0.03%)</title><rect x="632.4" y="963.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="635.4" y="974.0"></text>
</g>
<g>
<title>java/net/URI.create (22 samples, 0.64%)</title><rect x="632.8" y="995.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="635.8" y="1006.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (22 samples, 0.64%)</title><rect x="632.8" y="979.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.8" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (21 samples, 0.61%)</title><rect x="633.1" y="963.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="636.1" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (19 samples, 0.55%)</title><rect x="633.5" y="947.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.5" y="958.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="633.8" y="931.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="636.8" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="633.8" y="915.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.8" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (14 samples, 0.41%)</title><rect x="634.1" y="931.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.1" y="942.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="634.8" y="915.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="637.8" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="634.8" y="899.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="637.8" y="910.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="634.8" y="883.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="637.8" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (2 samples, 0.06%)</title><rect x="635.2" y="915.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.2" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="635.5" y="899.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.5" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="635.5" y="883.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="638.5" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="635.5" y="867.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.5" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="635.5" y="851.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.5" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (8 samples, 0.23%)</title><rect x="635.9" y="915.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="638.9" y="926.0"></text>
</g>
<g>
<title>java/lang/String.charAt (7 samples, 0.20%)</title><rect x="635.9" y="899.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="638.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="636.2" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="639.2" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (5 samples, 0.14%)</title><rect x="636.5" y="883.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.5" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="638.2" y="899.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="641.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="638.2" y="883.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="641.2" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="638.2" y="867.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="641.2" y="878.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="638.6" y="915.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="641.6" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.09%)</title><rect x="638.9" y="931.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="641.9" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="639.3" y="915.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="642.3" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="639.3" y="899.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.3" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="639.9" y="947.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.9" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="639.9" y="931.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="642.9" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="639.9" y="915.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.9" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="639.9" y="899.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.9" y="910.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="639.9" y="883.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="642.9" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (2 samples, 0.06%)</title><rect x="640.3" y="995.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (2 samples, 0.06%)</title><rect x="640.3" y="979.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (1 samples, 0.03%)</title><rect x="640.6" y="963.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="643.6" y="974.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.03%)</title><rect x="640.6" y="947.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.6" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.remove (2 samples, 0.06%)</title><rect x="641.0" y="995.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="644.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.06%)</title><rect x="641.0" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (81 samples, 2.34%)</title><rect x="641.7" y="995.0" width="27.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.7" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (81 samples, 2.34%)</title><rect x="641.7" y="979.0" width="27.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.7" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (81 samples, 2.34%)</title><rect x="641.7" y="963.0" width="27.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="644.7" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (81 samples, 2.34%)</title><rect x="641.7" y="947.0" width="27.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.7" y="958.0">j..</text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.03%)</title><rect x="642.0" y="931.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.0" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="642.3" y="931.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.3" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="642.3" y="915.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$138/443747487.get$Lambda (1 samples, 0.03%)</title><rect x="642.3" y="899.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="645.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.06%)</title><rect x="642.7" y="931.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="645.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.06%)</title><rect x="642.7" y="915.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="645.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="643.0" y="899.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="646.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="643.0" y="883.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="646.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.reference (1 samples, 0.03%)</title><rect x="643.4" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="646.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (43 samples, 1.24%)</title><rect x="643.7" y="931.0" width="14.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.7" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.06%)</title><rect x="644.0" y="915.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="647.0" y="926.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.06%)</title><rect x="644.0" y="899.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="647.0" y="910.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.03%)</title><rect x="644.0" y="883.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.0" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="644.0" y="867.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.0" y="878.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="644.0" y="851.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.0" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.03%)</title><rect x="644.4" y="883.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="647.4" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.03%)</title><rect x="644.4" y="867.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.4" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="644.4" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="647.4" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="644.4" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.4" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (11 samples, 0.32%)</title><rect x="644.7" y="915.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="647.7" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (10 samples, 0.29%)</title><rect x="645.1" y="899.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.1" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (3 samples, 0.09%)</title><rect x="645.1" y="883.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.1" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (3 samples, 0.09%)</title><rect x="645.1" y="867.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.1" y="878.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="645.1" y="851.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="648.1" y="862.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (2 samples, 0.06%)</title><rect x="645.4" y="851.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="648.4" y="862.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (5 samples, 0.14%)</title><rect x="646.1" y="883.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.1" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.14%)</title><rect x="646.1" y="867.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="649.1" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (4 samples, 0.12%)</title><rect x="646.1" y="851.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="649.1" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.12%)</title><rect x="646.1" y="835.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.1" y="846.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (4 samples, 0.12%)</title><rect x="646.1" y="819.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="649.1" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.accept (4 samples, 0.12%)</title><rect x="646.1" y="803.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="649.1" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.12%)</title><rect x="646.1" y="787.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="649.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.03%)</title><rect x="646.1" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="649.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.03%)</title><rect x="646.1" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="649.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$64/1610702581.test (3 samples, 0.09%)</title><rect x="646.4" y="771.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="649.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (3 samples, 0.09%)</title><rect x="646.4" y="755.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="649.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1433666880.test (1 samples, 0.03%)</title><rect x="646.4" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.03%)</title><rect x="646.4" y="723.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="649.4" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.03%)</title><rect x="646.4" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="649.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (2 samples, 0.06%)</title><rect x="646.8" y="739.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="647.1" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="650.1" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.03%)</title><rect x="647.5" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.5" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (2 samples, 0.06%)</title><rect x="647.8" y="883.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="650.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (28 samples, 0.81%)</title><rect x="648.5" y="915.0" width="9.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="651.5" y="926.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (27 samples, 0.78%)</title><rect x="648.8" y="899.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="651.8" y="910.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (27 samples, 0.78%)</title><rect x="648.8" y="883.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="651.8" y="894.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="648.8" y="867.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="651.8" y="878.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (14 samples, 0.41%)</title><rect x="649.2" y="867.0" width="4.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="652.2" y="878.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.03%)</title><rect x="649.2" y="851.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="652.2" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.03%)</title><rect x="649.5" y="851.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="652.5" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.03%)</title><rect x="649.5" y="835.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="652.5" y="846.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.14%)</title><rect x="649.8" y="851.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="652.8" y="862.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.03%)</title><rect x="649.8" y="835.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="652.8" y="846.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.03%)</title><rect x="650.2" y="835.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="653.2" y="846.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.03%)</title><rect x="650.5" y="835.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="653.5" y="846.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.03%)</title><rect x="650.5" y="819.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="653.5" y="830.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.06%)</title><rect x="650.9" y="835.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="653.9" y="846.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.09%)</title><rect x="651.6" y="851.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="654.6" y="862.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.06%)</title><rect x="651.9" y="835.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="654.9" y="846.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.06%)</title><rect x="651.9" y="819.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="654.9" y="830.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="652.2" y="803.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="655.2" y="814.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (4 samples, 0.12%)</title><rect x="652.6" y="851.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="655.6" y="862.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.09%)</title><rect x="652.9" y="835.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="655.9" y="846.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.03%)</title><rect x="653.6" y="819.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="656.6" y="830.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (1 samples, 0.03%)</title><rect x="653.9" y="867.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="656.9" y="878.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.03%)</title><rect x="654.3" y="867.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="657.3" y="878.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (10 samples, 0.29%)</title><rect x="654.6" y="867.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="657.6" y="878.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (10 samples, 0.29%)</title><rect x="654.6" y="851.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.20%)</title><rect x="654.6" y="835.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="654.6" y="819.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="657.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.17%)</title><rect x="655.0" y="819.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="658.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.06%)</title><rect x="655.3" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.09%)</title><rect x="656.0" y="803.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="659.0" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.06%)</title><rect x="656.0" y="787.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="659.0" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.06%)</title><rect x="656.0" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.0" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.03%)</title><rect x="656.3" y="755.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.3" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="656.7" y="787.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="659.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="657.0" y="835.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="660.0" y="846.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="657.0" y="819.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.0" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="657.0" y="803.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.0" y="814.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (2 samples, 0.06%)</title><rect x="657.4" y="835.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="660.4" y="846.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.03%)</title><rect x="657.4" y="819.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.03%)</title><rect x="657.4" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="660.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="657.4" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="660.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="657.4" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.4" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="657.7" y="819.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="660.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (1 samples, 0.03%)</title><rect x="658.0" y="915.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.0" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.characteristics (1 samples, 0.03%)</title><rect x="658.0" y="899.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (6 samples, 0.17%)</title><rect x="658.4" y="931.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.4" y="942.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.03%)</title><rect x="658.4" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="661.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (1 samples, 0.03%)</title><rect x="658.7" y="915.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.7" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="658.7" y="899.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.7" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="658.7" y="883.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$125/1199316342.get$Lambda (1 samples, 0.03%)</title><rect x="658.7" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="661.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$125/1199316342.&lt;init&gt; (1 samples, 0.03%)</title><rect x="658.7" y="851.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="661.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (2 samples, 0.06%)</title><rect x="659.1" y="915.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="662.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (2 samples, 0.06%)</title><rect x="659.1" y="899.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="662.1" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.03%)</title><rect x="659.1" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="662.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.03%)</title><rect x="659.1" y="867.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (1 samples, 0.03%)</title><rect x="659.1" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="662.1" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (1 samples, 0.03%)</title><rect x="659.4" y="883.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.4" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.03%)</title><rect x="659.4" y="867.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="662.4" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.03%)</title><rect x="659.4" y="851.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="662.4" y="862.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.03%)</title><rect x="659.4" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="662.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (1 samples, 0.03%)</title><rect x="659.8" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="662.8" y="926.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="660.1" y="915.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="663.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (26 samples, 0.75%)</title><rect x="660.4" y="931.0" width="8.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="663.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (26 samples, 0.75%)</title><rect x="660.4" y="915.0" width="8.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="663.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (26 samples, 0.75%)</title><rect x="660.4" y="899.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (26 samples, 0.75%)</title><rect x="660.4" y="883.0" width="8.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="663.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (22 samples, 0.64%)</title><rect x="660.4" y="867.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="663.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (22 samples, 0.64%)</title><rect x="660.4" y="851.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="663.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (22 samples, 0.64%)</title><rect x="660.4" y="835.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (22 samples, 0.64%)</title><rect x="660.4" y="819.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="663.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (22 samples, 0.64%)</title><rect x="660.4" y="803.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (22 samples, 0.64%)</title><rect x="660.4" y="787.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.4" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.06%)</title><rect x="660.4" y="771.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="663.4" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="660.8" y="755.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="663.8" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.58%)</title><rect x="661.1" y="771.0" width="6.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="664.1" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.49%)</title><rect x="662.1" y="755.0" width="5.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="665.1" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.49%)</title><rect x="662.1" y="739.0" width="5.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="665.1" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.46%)</title><rect x="662.5" y="723.0" width="5.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="665.5" y="734.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.46%)</title><rect x="662.5" y="707.0" width="5.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="665.5" y="718.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.43%)</title><rect x="662.8" y="691.0" width="5.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="665.8" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="662.8" y="675.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="665.8" y="686.0"></text>
</g>
<g>
<title>wake_up_q (14 samples, 0.41%)</title><rect x="663.2" y="675.0" width="4.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="666.2" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 0.41%)</title><rect x="663.2" y="659.0" width="4.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="666.2" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.41%)</title><rect x="663.2" y="643.0" width="4.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="666.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.06%)</title><rect x="667.9" y="867.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="670.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.06%)</title><rect x="667.9" y="851.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.06%)</title><rect x="668.6" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.06%)</title><rect x="668.6" y="851.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="671.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.06%)</title><rect x="668.6" y="835.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="671.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.06%)</title><rect x="668.6" y="819.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="669.0" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.0" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="669.0" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="672.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="669.0" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.GET (1 samples, 0.03%)</title><rect x="669.3" y="995.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="672.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.method0 (1 samples, 0.03%)</title><rect x="669.3" y="979.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.PUT (1 samples, 0.03%)</title><rect x="669.7" y="995.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="672.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.method0 (1 samples, 0.03%)</title><rect x="669.7" y="979.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (9 samples, 0.26%)</title><rect x="670.0" y="995.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="673.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (9 samples, 0.26%)</title><rect x="670.0" y="979.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="673.0" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8 samples, 0.23%)</title><rect x="670.3" y="963.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="673.3" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8 samples, 0.23%)</title><rect x="670.3" y="947.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="673.3" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (1 samples, 0.03%)</title><rect x="670.3" y="931.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.3" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (1 samples, 0.03%)</title><rect x="670.3" y="915.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="673.3" y="926.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="670.3" y="899.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="673.3" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (2 samples, 0.06%)</title><rect x="670.7" y="931.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="673.7" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.14%)</title><rect x="671.4" y="931.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="674.4" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/937225413.accept (5 samples, 0.14%)</title><rect x="671.4" y="915.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.4" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.14%)</title><rect x="671.4" y="899.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="674.4" y="910.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.06%)</title><rect x="671.4" y="883.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="674.4" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.06%)</title><rect x="671.4" y="867.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.4" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.06%)</title><rect x="671.4" y="851.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="674.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="671.4" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="674.4" y="846.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="671.4" y="819.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.4" y="830.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="671.4" y="803.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="674.4" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="671.7" y="835.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.7" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.09%)</title><rect x="672.0" y="883.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="675.0" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$118/2131634163.accept (2 samples, 0.06%)</title><rect x="672.4" y="867.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="675.4" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.06%)</title><rect x="672.4" y="851.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="675.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1433666880.test (2 samples, 0.06%)</title><rect x="672.4" y="835.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="675.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.06%)</title><rect x="672.4" y="819.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="675.4" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.06%)</title><rect x="672.4" y="803.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="675.4" y="814.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.06%)</title><rect x="672.4" y="787.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="675.4" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.06%)</title><rect x="672.4" y="771.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="675.4" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.06%)</title><rect x="672.4" y="755.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="675.4" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.06%)</title><rect x="672.4" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="675.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="672.4" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="672.4" y="707.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="675.4" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.06%)</title><rect x="672.4" y="691.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="675.4" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.06%)</title><rect x="672.4" y="675.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="675.4" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="672.7" y="659.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="675.7" y="670.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.03%)</title><rect x="672.7" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="675.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (5 samples, 0.14%)</title><rect x="673.1" y="995.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="676.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (5 samples, 0.14%)</title><rect x="673.1" y="979.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="676.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (5 samples, 0.14%)</title><rect x="673.1" y="963.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="676.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1433666880.test (3 samples, 0.09%)</title><rect x="673.1" y="947.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="676.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (3 samples, 0.09%)</title><rect x="673.1" y="931.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="676.1" y="942.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (3 samples, 0.09%)</title><rect x="673.1" y="915.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="676.1" y="926.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.06%)</title><rect x="673.4" y="899.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.4" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.06%)</title><rect x="673.4" y="883.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="676.4" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.06%)</title><rect x="673.4" y="867.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="676.4" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.06%)</title><rect x="673.4" y="851.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="673.4" y="835.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="676.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.06%)</title><rect x="673.4" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.06%)</title><rect x="673.4" y="803.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.4" y="814.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.06%)</title><rect x="673.4" y="787.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="676.4" y="798.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.03%)</title><rect x="673.7" y="771.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (2 samples, 0.06%)</title><rect x="674.1" y="947.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.1" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getFirstResponses (15 samples, 0.43%)</title><rect x="674.8" y="995.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="677.8" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1 samples, 0.03%)</title><rect x="675.1" y="979.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="678.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2 samples, 0.06%)</title><rect x="675.5" y="979.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2 samples, 0.06%)</title><rect x="675.5" y="963.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="678.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.06%)</title><rect x="675.5" y="947.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="678.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.06%)</title><rect x="675.5" y="931.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (11 samples, 0.32%)</title><rect x="676.1" y="979.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="679.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (9 samples, 0.26%)</title><rect x="676.1" y="963.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (9 samples, 0.26%)</title><rect x="676.1" y="947.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (7 samples, 0.20%)</title><rect x="676.8" y="931.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="679.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (7 samples, 0.20%)</title><rect x="676.8" y="915.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="679.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (7 samples, 0.20%)</title><rect x="676.8" y="899.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="679.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (7 samples, 0.20%)</title><rect x="676.8" y="883.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.20%)</title><rect x="676.8" y="867.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.20%)</title><rect x="676.8" y="851.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="679.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.20%)</title><rect x="676.8" y="835.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="679.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.20%)</title><rect x="676.8" y="819.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.20%)</title><rect x="676.8" y="803.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="679.8" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.20%)</title><rect x="676.8" y="787.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="679.8" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="678.5" y="771.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="681.5" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.06%)</title><rect x="678.5" y="755.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="681.5" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.06%)</title><rect x="678.5" y="739.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="681.5" y="750.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.06%)</title><rect x="678.5" y="723.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="681.5" y="734.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.06%)</title><rect x="678.5" y="707.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="681.5" y="718.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.06%)</title><rect x="678.5" y="691.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="681.5" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.06%)</title><rect x="678.5" y="675.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="681.5" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.06%)</title><rect x="678.5" y="659.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="681.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Timeout.&lt;init&gt; (1 samples, 0.03%)</title><rect x="679.2" y="963.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.03%)</title><rect x="679.2" y="947.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.03%)</title><rect x="679.6" y="963.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="682.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.03%)</title><rect x="679.6" y="947.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="682.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.03%)</title><rect x="679.6" y="931.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="682.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.03%)</title><rect x="679.6" y="915.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="682.6" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (213 samples, 6.16%)</title><rect x="679.9" y="1011.0" width="72.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="682.9" y="1022.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (213 samples, 6.16%)</title><rect x="679.9" y="995.0" width="72.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="682.9" y="1006.0">one/nio/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.06%)</title><rect x="680.6" y="979.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="683.6" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.06%)</title><rect x="680.6" y="963.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="683.6" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.06%)</title><rect x="680.6" y="947.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.6" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (207 samples, 5.99%)</title><rect x="681.3" y="979.0" width="70.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="684.3" y="990.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="681.3" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.3" y="974.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="681.3" y="947.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="684.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (206 samples, 5.96%)</title><rect x="681.6" y="963.0" width="70.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.6" y="974.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (206 samples, 5.96%)</title><rect x="681.6" y="947.0" width="70.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="684.6" y="958.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (205 samples, 5.93%)</title><rect x="681.6" y="931.0" width="70.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.6" y="942.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (204 samples, 5.90%)</title><rect x="681.9" y="915.0" width="69.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.9" y="926.0">one/nio..</text>
</g>
<g>
<title>.annobin_send.c (199 samples, 5.76%)</title><rect x="682.3" y="899.0" width="67.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="685.3" y="910.0">.annobi..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="684.7" y="883.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="687.7" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (191 samples, 5.53%)</title><rect x="685.0" y="883.0" width="65.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="688.0" y="894.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (191 samples, 5.53%)</title><rect x="685.0" y="867.0" width="65.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="688.0" y="878.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_sendto (187 samples, 5.41%)</title><rect x="686.4" y="851.0" width="63.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="689.4" y="862.0">__x64_s..</text>
</g>
<g>
<title>__sys_sendto (187 samples, 5.41%)</title><rect x="686.4" y="835.0" width="63.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="689.4" y="846.0">__sys_s..</text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="686.4" y="819.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="689.4" y="830.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.03%)</title><rect x="686.4" y="803.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="689.4" y="814.0"></text>
</g>
<g>
<title>sock_sendmsg (182 samples, 5.27%)</title><rect x="686.7" y="819.0" width="62.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="689.7" y="830.0">sock_s..</text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.14%)</title><rect x="686.7" y="803.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="689.7" y="814.0"></text>
</g>
<g>
<title>sock_has_perm (5 samples, 0.14%)</title><rect x="686.7" y="787.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="689.7" y="798.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.06%)</title><rect x="687.7" y="771.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="690.7" y="782.0"></text>
</g>
<g>
<title>tcp_sendmsg (177 samples, 5.12%)</title><rect x="688.4" y="803.0" width="60.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="691.4" y="814.0">tcp_se..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="688.4" y="787.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="691.4" y="798.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (176 samples, 5.09%)</title><rect x="688.8" y="787.0" width="60.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="691.8" y="798.0">tcp_se..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="689.1" y="771.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="692.1" y="782.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (161 samples, 4.66%)</title><rect x="689.5" y="771.0" width="54.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="692.5" y="782.0">__tcp..</text>
</g>
<g>
<title>tcp_write_xmit (160 samples, 4.63%)</title><rect x="689.8" y="755.0" width="54.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="692.8" y="766.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (148 samples, 4.28%)</title><rect x="690.8" y="739.0" width="50.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="693.8" y="750.0">__tcp..</text>
</g>
<g>
<title>__ip_queue_xmit (141 samples, 4.08%)</title><rect x="691.2" y="723.0" width="48.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="694.2" y="734.0">__ip..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.03%)</title><rect x="691.2" y="707.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="694.2" y="718.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="691.2" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="694.2" y="702.0"></text>
</g>
<g>
<title>ip_local_out (34 samples, 0.98%)</title><rect x="691.5" y="707.0" width="11.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="694.5" y="718.0"></text>
</g>
<g>
<title>__ip_local_out (33 samples, 0.95%)</title><rect x="691.8" y="691.0" width="11.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="694.8" y="702.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.03%)</title><rect x="691.8" y="675.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="694.8" y="686.0"></text>
</g>
<g>
<title>nf_hook_slow (32 samples, 0.93%)</title><rect x="692.2" y="675.0" width="10.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="695.2" y="686.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (14 samples, 0.41%)</title><rect x="692.5" y="659.0" width="4.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="695.5" y="670.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (1 samples, 0.03%)</title><rect x="697.3" y="659.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="700.3" y="670.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.06%)</title><rect x="697.7" y="659.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="700.7" y="670.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (2 samples, 0.06%)</title><rect x="697.7" y="643.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="700.7" y="654.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (1 samples, 0.03%)</title><rect x="698.3" y="659.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="701.3" y="670.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (1 samples, 0.03%)</title><rect x="698.7" y="659.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="701.7" y="670.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (9 samples, 0.26%)</title><rect x="699.0" y="659.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="702.0" y="670.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (4 samples, 0.12%)</title><rect x="699.4" y="643.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="702.4" y="654.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (1 samples, 0.03%)</title><rect x="700.7" y="643.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="703.7" y="654.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (2 samples, 0.06%)</title><rect x="701.1" y="643.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="704.1" y="654.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (1 samples, 0.03%)</title><rect x="701.4" y="627.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="704.4" y="638.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (1 samples, 0.03%)</title><rect x="701.7" y="643.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="704.7" y="654.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (2 samples, 0.06%)</title><rect x="702.1" y="659.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="705.1" y="670.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (1 samples, 0.03%)</title><rect x="702.1" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="705.1" y="654.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (1 samples, 0.03%)</title><rect x="702.4" y="643.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="705.4" y="654.0"></text>
</g>
<g>
<title>selinux_ipv4_output (1 samples, 0.03%)</title><rect x="702.8" y="659.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="705.8" y="670.0"></text>
</g>
<g>
<title>ip_output (106 samples, 3.07%)</title><rect x="703.1" y="707.0" width="36.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="706.1" y="718.0">ip_..</text>
</g>
<g>
<title>ip_finish_output2 (95 samples, 2.75%)</title><rect x="703.5" y="691.0" width="32.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="706.5" y="702.0">ip..</text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.20%)</title><rect x="704.5" y="675.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="707.5" y="686.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.14%)</title><rect x="705.2" y="659.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="708.2" y="670.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.12%)</title><rect x="705.5" y="643.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="708.5" y="654.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.09%)</title><rect x="705.5" y="627.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="708.5" y="638.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.09%)</title><rect x="705.5" y="611.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="708.5" y="622.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.06%)</title><rect x="705.5" y="595.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="708.5" y="606.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.03%)</title><rect x="706.2" y="595.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="709.2" y="606.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.03%)</title><rect x="706.5" y="627.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="709.5" y="638.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (84 samples, 2.43%)</title><rect x="706.9" y="675.0" width="28.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="709.9" y="686.0">__..</text>
</g>
<g>
<title>do_softirq.part.0 (84 samples, 2.43%)</title><rect x="706.9" y="659.0" width="28.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="709.9" y="670.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (83 samples, 2.40%)</title><rect x="707.2" y="643.0" width="28.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="710.2" y="654.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (83 samples, 2.40%)</title><rect x="707.2" y="627.0" width="28.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="710.2" y="638.0">__..</text>
</g>
<g>
<title>net_rx_action (82 samples, 2.37%)</title><rect x="707.6" y="611.0" width="27.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="710.6" y="622.0">n..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.03%)</title><rect x="708.2" y="595.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="711.2" y="606.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="708.6" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="711.6" y="606.0"></text>
</g>
<g>
<title>process_backlog (78 samples, 2.26%)</title><rect x="708.9" y="595.0" width="26.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="711.9" y="606.0">p..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (78 samples, 2.26%)</title><rect x="708.9" y="579.0" width="26.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="711.9" y="590.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.06%)</title><rect x="709.3" y="563.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="712.3" y="574.0"></text>
</g>
<g>
<title>ip_rcv (75 samples, 2.17%)</title><rect x="709.9" y="563.0" width="25.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="712.9" y="574.0">i..</text>
</g>
<g>
<title>ip_local_deliver (53 samples, 1.53%)</title><rect x="709.9" y="547.0" width="18.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="712.9" y="558.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (45 samples, 1.30%)</title><rect x="709.9" y="531.0" width="15.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="712.9" y="542.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (45 samples, 1.30%)</title><rect x="709.9" y="515.0" width="15.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="712.9" y="526.0"></text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.09%)</title><rect x="709.9" y="499.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="712.9" y="510.0"></text>
</g>
<g>
<title>tcp_v4_rcv (42 samples, 1.22%)</title><rect x="711.0" y="499.0" width="14.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="714.0" y="510.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.09%)</title><rect x="712.3" y="483.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="715.3" y="494.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="713.0" y="467.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="716.0" y="478.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="713.4" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="716.4" y="494.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.03%)</title><rect x="713.4" y="467.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="716.4" y="478.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (34 samples, 0.98%)</title><rect x="713.7" y="483.0" width="11.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="716.7" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_established (34 samples, 0.98%)</title><rect x="713.7" y="467.0" width="11.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="716.7" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.12%)</title><rect x="714.4" y="451.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="717.4" y="462.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.12%)</title><rect x="714.4" y="435.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="717.4" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.12%)</title><rect x="714.4" y="419.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="717.4" y="430.0"></text>
</g>
<g>
<title>tcp_ack (14 samples, 0.41%)</title><rect x="715.7" y="451.0" width="4.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="718.7" y="462.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.06%)</title><rect x="718.8" y="435.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="721.8" y="446.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="718.8" y="419.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="721.8" y="430.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="719.2" y="419.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="722.2" y="430.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="719.5" y="435.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="722.5" y="446.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.03%)</title><rect x="719.8" y="435.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="722.8" y="446.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.03%)</title><rect x="720.2" y="435.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="723.2" y="446.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="720.5" y="451.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="723.5" y="462.0"></text>
</g>
<g>
<title>tcp_data_queue (12 samples, 0.35%)</title><rect x="720.9" y="451.0" width="4.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="723.9" y="462.0"></text>
</g>
<g>
<title>sock_def_readable (10 samples, 0.29%)</title><rect x="720.9" y="435.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="723.9" y="446.0"></text>
</g>
<g>
<title>__wake_up_common_lock (8 samples, 0.23%)</title><rect x="721.6" y="419.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="724.6" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.23%)</title><rect x="721.6" y="403.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="724.6" y="414.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.03%)</title><rect x="724.3" y="435.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="727.3" y="446.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.03%)</title><rect x="724.6" y="435.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="727.6" y="446.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="725.0" y="451.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="728.0" y="462.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="725.0" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="728.0" y="446.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="725.0" y="419.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="728.0" y="430.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.23%)</title><rect x="725.3" y="531.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="728.3" y="542.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.17%)</title><rect x="725.6" y="515.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="728.6" y="526.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (1 samples, 0.03%)</title><rect x="727.0" y="499.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="730.0" y="510.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (1 samples, 0.03%)</title><rect x="727.4" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="730.4" y="510.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (1 samples, 0.03%)</title><rect x="727.7" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="730.7" y="526.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="728.0" y="547.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="731.0" y="558.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.03%)</title><rect x="728.0" y="531.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="731.0" y="542.0"></text>
</g>
<g>
<title>nf_hook_slow (21 samples, 0.61%)</title><rect x="728.4" y="547.0" width="7.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="731.4" y="558.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (16 samples, 0.46%)</title><rect x="728.4" y="531.0" width="5.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="731.4" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="733.5" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="736.5" y="526.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (1 samples, 0.03%)</title><rect x="733.8" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="736.8" y="542.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (1 samples, 0.03%)</title><rect x="734.2" y="531.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="737.2" y="542.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack] (2 samples, 0.06%)</title><rect x="734.5" y="531.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="737.5" y="542.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (1 samples, 0.03%)</title><rect x="735.2" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="738.2" y="542.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (1 samples, 0.03%)</title><rect x="735.2" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="738.2" y="526.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.03%)</title><rect x="735.5" y="675.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="738.5" y="686.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.29%)</title><rect x="735.9" y="691.0" width="3.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="738.9" y="702.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.09%)</title><rect x="735.9" y="675.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="738.9" y="686.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (1 samples, 0.03%)</title><rect x="736.9" y="675.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="739.9" y="686.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (1 samples, 0.03%)</title><rect x="737.3" y="675.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="740.3" y="686.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (3 samples, 0.09%)</title><rect x="737.6" y="675.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="740.6" y="686.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.03%)</title><rect x="738.3" y="659.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="741.3" y="670.0"></text>
</g>
<g>
<title>selinux_ip_postroute (2 samples, 0.06%)</title><rect x="738.6" y="675.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="741.6" y="686.0"></text>
</g>
<g>
<title>selinux_peerlbl_enabled (1 samples, 0.03%)</title><rect x="739.0" y="659.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="742.0" y="670.0"></text>
</g>
<g>
<title>netlbl_enabled (1 samples, 0.03%)</title><rect x="739.0" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="742.0" y="654.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="739.3" y="723.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="742.3" y="734.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.03%)</title><rect x="739.6" y="723.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="742.6" y="734.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.03%)</title><rect x="740.0" y="723.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="743.0" y="734.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.03%)</title><rect x="740.3" y="723.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="743.3" y="734.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.03%)</title><rect x="740.7" y="723.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="743.7" y="734.0"></text>
</g>
<g>
<title>__list_add_valid (1 samples, 0.03%)</title><rect x="740.7" y="707.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="743.7" y="718.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="741.0" y="723.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="744.0" y="734.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="741.4" y="739.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="744.4" y="750.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.14%)</title><rect x="741.7" y="739.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="744.7" y="750.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.09%)</title><rect x="742.4" y="723.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="745.4" y="734.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.09%)</title><rect x="742.4" y="707.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="745.4" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.09%)</title><rect x="742.4" y="691.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="745.4" y="702.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.09%)</title><rect x="743.4" y="739.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="746.4" y="750.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.09%)</title><rect x="743.4" y="723.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="746.4" y="734.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.06%)</title><rect x="743.7" y="707.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="746.7" y="718.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.06%)</title><rect x="744.4" y="771.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="747.4" y="782.0"></text>
</g>
<g>
<title>copyin (2 samples, 0.06%)</title><rect x="744.4" y="755.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="747.4" y="766.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.06%)</title><rect x="744.4" y="739.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="747.4" y="750.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.17%)</title><rect x="745.1" y="771.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="748.1" y="782.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.12%)</title><rect x="745.8" y="755.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="748.8" y="766.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.06%)</title><rect x="745.8" y="739.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="748.8" y="750.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.06%)</title><rect x="745.8" y="723.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="748.8" y="734.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.06%)</title><rect x="746.5" y="739.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="749.5" y="750.0"></text>
</g>
<g>
<title>tcp_cwnd_restart (1 samples, 0.03%)</title><rect x="747.2" y="771.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="750.2" y="782.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.03%)</title><rect x="747.2" y="755.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="750.2" y="766.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.06%)</title><rect x="747.5" y="771.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="750.5" y="782.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.03%)</title><rect x="747.8" y="755.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="750.8" y="766.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="747.8" y="739.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="750.8" y="750.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.06%)</title><rect x="748.2" y="771.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="751.2" y="782.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.12%)</title><rect x="748.9" y="819.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="751.9" y="830.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.12%)</title><rect x="748.9" y="803.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="751.9" y="814.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.06%)</title><rect x="749.5" y="787.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="752.5" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="750.2" y="899.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="753.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="750.6" y="899.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="753.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.09%)</title><rect x="750.6" y="883.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="753.6" y="894.0"></text>
</g>
<g>
<title>.annobin_send.c (2 samples, 0.06%)</title><rect x="750.6" y="867.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="753.6" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="751.3" y="867.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="754.3" y="878.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="751.3" y="851.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="754.3" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="751.3" y="835.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="754.3" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="751.6" y="931.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="754.6" y="942.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="751.6" y="915.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="754.6" y="926.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="751.6" y="899.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="754.6" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.06%)</title><rect x="751.9" y="979.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="754.9" y="990.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.06%)</title><rect x="751.9" y="963.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.9" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.06%)</title><rect x="751.9" y="947.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.9" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (11 samples, 0.32%)</title><rect x="752.6" y="1011.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.6" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.06%)</title><rect x="752.6" y="995.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="755.6" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2 samples, 0.06%)</title><rect x="752.6" y="979.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="755.6" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (2 samples, 0.06%)</title><rect x="752.6" y="963.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.6" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (2 samples, 0.06%)</title><rect x="752.6" y="947.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="755.6" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (1 samples, 0.03%)</title><rect x="753.0" y="931.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="756.0" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (9 samples, 0.26%)</title><rect x="753.3" y="995.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="756.3" y="1006.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (9 samples, 0.26%)</title><rect x="753.3" y="979.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.3" y="990.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (2 samples, 0.06%)</title><rect x="753.6" y="963.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.6" y="974.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (2 samples, 0.06%)</title><rect x="753.6" y="947.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.6" y="958.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (2 samples, 0.06%)</title><rect x="753.6" y="931.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.6" y="942.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2 samples, 0.06%)</title><rect x="753.6" y="915.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.6" y="926.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2 samples, 0.06%)</title><rect x="753.6" y="899.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="756.6" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.06%)</title><rect x="753.6" y="883.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.6" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="753.6" y="867.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.6" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="753.6" y="851.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="756.6" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="753.6" y="835.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="756.6" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="754.0" y="819.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="757.0" y="830.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (5 samples, 0.14%)</title><rect x="754.3" y="963.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="757.3" y="974.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.munch (1 samples, 0.03%)</title><rect x="754.3" y="947.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="757.3" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.compact (1 samples, 0.03%)</title><rect x="754.3" y="931.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="757.3" y="942.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (4 samples, 0.12%)</title><rect x="754.7" y="947.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.7" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.order (1 samples, 0.03%)</title><rect x="754.7" y="931.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.7" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.03%)</title><rect x="754.7" y="915.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="757.7" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.09%)</title><rect x="755.0" y="931.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="758.0" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.09%)</title><rect x="755.0" y="915.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="758.0" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="755.0" y="899.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="758.0" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.09%)</title><rect x="755.0" y="883.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="758.0" y="894.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (1 samples, 0.03%)</title><rect x="756.0" y="963.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="759.0" y="974.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytesInternal (1 samples, 0.03%)</title><rect x="756.0" y="947.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="759.0" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="756.0" y="931.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="759.0" y="942.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.03%)</title><rect x="756.0" y="915.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="759.0" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/MetaRequest.&lt;init&gt; (19 samples, 0.55%)</title><rect x="756.4" y="1027.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="757.7" y="1011.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="757.7" y="995.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="757.7" y="979.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="760.7" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.14%)</title><rect x="758.1" y="1011.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.1" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.14%)</title><rect x="758.1" y="995.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="761.1" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.14%)</title><rect x="758.1" y="979.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="761.1" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.06%)</title><rect x="759.8" y="1011.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.8" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.06%)</title><rect x="759.8" y="995.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="762.8" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="759.8" y="979.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="762.8" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="759.8" y="963.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="762.8" y="974.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="760.1" y="947.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="763.1" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="760.1" y="931.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="763.1" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="760.1" y="915.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="763.1" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.03%)</title><rect x="760.1" y="899.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="763.1" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.03%)</title><rect x="760.1" y="883.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="763.1" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.03%)</title><rect x="760.1" y="867.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="763.1" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.03%)</title><rect x="760.1" y="851.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="763.1" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::extract_attached_method(vframeStream&amp;) (1 samples, 0.03%)</title><rect x="760.1" y="835.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="763.1" y="846.0"></text>
</g>
<g>
<title>CompiledMethod::attached_method_before_pc(unsigned char*) (1 samples, 0.03%)</title><rect x="760.1" y="819.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="763.1" y="830.0"></text>
</g>
<g>
<title>RelocIterator::initialize(CompiledMethod*, unsigned char*, unsigned char*) (1 samples, 0.03%)</title><rect x="760.1" y="803.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="763.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.20%)</title><rect x="760.5" y="1011.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="763.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="760.8" y="995.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="763.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.06%)</title><rect x="760.8" y="979.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.8" y="990.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="760.8" y="963.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="763.8" y="974.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="761.2" y="963.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="764.2" y="974.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="761.5" y="995.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="761.5" y="979.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="764.5" y="990.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.09%)</title><rect x="761.8" y="995.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="764.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="762.2" y="979.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="765.2" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="762.2" y="963.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="765.2" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.06%)</title><rect x="762.2" y="947.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (312 samples, 9.03%)</title><rect x="762.9" y="1123.0" width="106.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="765.9" y="1134.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (312 samples, 9.03%)</title><rect x="762.9" y="1107.0" width="106.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.9" y="1118.0">java/util/con..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="764.6" y="1091.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="767.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (219 samples, 6.34%)</title><rect x="764.9" y="1091.0" width="74.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="767.9" y="1102.0">java/uti..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (5 samples, 0.14%)</title><rect x="764.9" y="1075.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="767.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.compareAndSet (5 samples, 0.14%)</title><rect x="764.9" y="1059.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="767.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (213 samples, 6.16%)</title><rect x="766.6" y="1075.0" width="72.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="769.6" y="1086.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (5 samples, 0.14%)</title><rect x="766.6" y="1059.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="769.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_L (2 samples, 0.06%)</title><rect x="767.0" y="1043.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="770.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAndSet (2 samples, 0.06%)</title><rect x="767.0" y="1027.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="770.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (2 samples, 0.06%)</title><rect x="767.6" y="1043.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="770.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (4 samples, 0.12%)</title><rect x="768.3" y="1059.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="771.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (1 samples, 0.03%)</title><rect x="769.4" y="1043.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (204 samples, 5.90%)</title><rect x="769.7" y="1059.0" width="69.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="772.7" y="1070.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (204 samples, 5.90%)</title><rect x="769.7" y="1043.0" width="69.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="772.7" y="1054.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (204 samples, 5.90%)</title><rect x="769.7" y="1027.0" width="69.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="772.7" y="1038.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (54 samples, 1.56%)</title><rect x="770.4" y="1011.0" width="18.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="773.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (2 samples, 0.06%)</title><rect x="770.4" y="995.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (52 samples, 1.50%)</title><rect x="771.1" y="995.0" width="17.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="774.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (48 samples, 1.39%)</title><rect x="772.1" y="979.0" width="16.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (46 samples, 1.33%)</title><rect x="772.8" y="963.0" width="15.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (8 samples, 0.23%)</title><rect x="772.8" y="947.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="775.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (8 samples, 0.23%)</title><rect x="772.8" y="931.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="775.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (8 samples, 0.23%)</title><rect x="772.8" y="915.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="775.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (6 samples, 0.17%)</title><rect x="773.4" y="899.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="776.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (6 samples, 0.17%)</title><rect x="773.4" y="883.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="776.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.siftDown (1 samples, 0.03%)</title><rect x="773.4" y="867.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="776.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.14%)</title><rect x="773.8" y="867.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="776.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.12%)</title><rect x="774.1" y="851.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="777.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.06%)</title><rect x="774.1" y="835.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="777.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.06%)</title><rect x="774.8" y="835.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="777.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (38 samples, 1.10%)</title><rect x="775.5" y="947.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="778.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (35 samples, 1.01%)</title><rect x="775.8" y="931.0" width="12.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="778.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (35 samples, 1.01%)</title><rect x="775.8" y="915.0" width="12.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="778.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (35 samples, 1.01%)</title><rect x="775.8" y="899.0" width="12.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="778.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (35 samples, 1.01%)</title><rect x="775.8" y="883.0" width="12.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="778.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (34 samples, 0.98%)</title><rect x="776.2" y="867.0" width="11.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (34 samples, 0.98%)</title><rect x="776.2" y="851.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="779.2" y="862.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="776.2" y="835.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="779.2" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.17%)</title><rect x="776.5" y="835.0" width="2.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="779.5" y="846.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.06%)</title><rect x="776.9" y="819.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="779.9" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.03%)</title><rect x="777.5" y="819.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="780.5" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="777.9" y="819.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="780.9" y="830.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.03%)</title><rect x="778.2" y="819.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="781.2" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (27 samples, 0.78%)</title><rect x="778.6" y="835.0" width="9.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="781.6" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.61%)</title><rect x="780.6" y="819.0" width="7.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="783.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.61%)</title><rect x="780.6" y="803.0" width="7.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="783.6" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 0.58%)</title><rect x="781.0" y="787.0" width="6.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="784.0" y="798.0"></text>
</g>
<g>
<title>do_futex (20 samples, 0.58%)</title><rect x="781.0" y="771.0" width="6.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="784.0" y="782.0"></text>
</g>
<g>
<title>futex_wake (20 samples, 0.58%)</title><rect x="781.0" y="755.0" width="6.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="784.0" y="766.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="781.0" y="739.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="784.0" y="750.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.03%)</title><rect x="781.0" y="723.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="784.0" y="734.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="781.3" y="739.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="784.3" y="750.0"></text>
</g>
<g>
<title>wake_up_q (18 samples, 0.52%)</title><rect x="781.6" y="739.0" width="6.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="784.6" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (18 samples, 0.52%)</title><rect x="781.6" y="723.0" width="6.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="784.6" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 0.52%)</title><rect x="781.6" y="707.0" width="6.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="784.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.06%)</title><rect x="787.8" y="931.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="790.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.06%)</title><rect x="787.8" y="915.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="790.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.06%)</title><rect x="787.8" y="899.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="790.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.06%)</title><rect x="787.8" y="883.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.06%)</title><rect x="787.8" y="867.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="790.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.06%)</title><rect x="787.8" y="851.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.06%)</title><rect x="787.8" y="835.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.06%)</title><rect x="787.8" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="790.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (2 samples, 0.06%)</title><rect x="787.8" y="803.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="790.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (1 samples, 0.03%)</title><rect x="788.1" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="791.1" y="798.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="788.5" y="979.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="791.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (148 samples, 4.28%)</title><rect x="788.8" y="1011.0" width="50.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="791.8" y="1022.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.20%)</title><rect x="788.8" y="995.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="791.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.20%)</title><rect x="788.8" y="979.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="791.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.20%)</title><rect x="788.8" y="963.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.20%)</title><rect x="788.8" y="947.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="791.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (7 samples, 0.20%)</title><rect x="788.8" y="931.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="791.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (7 samples, 0.20%)</title><rect x="788.8" y="915.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="791.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (7 samples, 0.20%)</title><rect x="788.8" y="899.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="791.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (7 samples, 0.20%)</title><rect x="788.8" y="883.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (7 samples, 0.20%)</title><rect x="788.8" y="867.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="791.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (7 samples, 0.20%)</title><rect x="788.8" y="851.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="791.8" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="790.2" y="835.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="793.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$139/2122885846.accept (1 samples, 0.03%)</title><rect x="790.5" y="835.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="793.5" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$140/507376197.accept (1 samples, 0.03%)</title><rect x="790.9" y="835.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="793.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$140/507376197.accept (11 samples, 0.32%)</title><rect x="791.2" y="995.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="794.2" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$getFirstResponses$6 (11 samples, 0.32%)</title><rect x="791.2" y="979.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (11 samples, 0.32%)</title><rect x="791.2" y="963.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="794.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11 samples, 0.32%)</title><rect x="791.2" y="947.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="794.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (10 samples, 0.29%)</title><rect x="791.5" y="931.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="794.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (9 samples, 0.26%)</title><rect x="791.9" y="915.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="794.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (9 samples, 0.26%)</title><rect x="791.9" y="899.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="794.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (8 samples, 0.23%)</title><rect x="792.2" y="883.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (8 samples, 0.23%)</title><rect x="792.2" y="867.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (8 samples, 0.23%)</title><rect x="792.2" y="851.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="795.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (8 samples, 0.23%)</title><rect x="792.2" y="835.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.20%)</title><rect x="792.6" y="819.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="795.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.20%)</title><rect x="792.6" y="803.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="795.6" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="792.6" y="787.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="795.6" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.17%)</title><rect x="792.9" y="787.0" width="2.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="795.9" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.17%)</title><rect x="792.9" y="771.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="795.9" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.17%)</title><rect x="792.9" y="755.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="795.9" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.17%)</title><rect x="792.9" y="739.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="795.9" y="750.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.17%)</title><rect x="792.9" y="723.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="795.9" y="734.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.17%)</title><rect x="792.9" y="707.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="795.9" y="718.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.14%)</title><rect x="793.3" y="691.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="796.3" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.14%)</title><rect x="793.3" y="675.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="796.3" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.14%)</title><rect x="793.3" y="659.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="796.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$329/2105147641.accept (130 samples, 3.76%)</title><rect x="795.0" y="995.0" width="44.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="798.0" y="1006.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$delete$4 (129 samples, 3.73%)</title><rect x="795.3" y="979.0" width="44.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="798.3" y="990.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList$COWIterator.hasNext (1 samples, 0.03%)</title><rect x="796.3" y="963.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.3" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.06%)</title><rect x="796.7" y="963.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="799.7" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (123 samples, 3.56%)</title><rect x="797.3" y="963.0" width="42.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="800.3" y="974.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (123 samples, 3.56%)</title><rect x="797.3" y="947.0" width="42.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="800.3" y="958.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (122 samples, 3.53%)</title><rect x="797.3" y="931.0" width="41.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.3" y="942.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.12%)</title><rect x="797.3" y="915.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="800.3" y="926.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="797.3" y="899.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="800.3" y="910.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.06%)</title><rect x="798.0" y="899.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="801.0" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.03%)</title><rect x="798.0" y="883.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="801.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="798.0" y="867.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="801.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="798.0" y="851.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.0" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="798.4" y="883.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="801.4" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="798.4" y="867.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="801.4" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (118 samples, 3.41%)</title><rect x="798.7" y="915.0" width="40.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="801.7" y="926.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (118 samples, 3.41%)</title><rect x="798.7" y="899.0" width="40.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="801.7" y="910.0">one..</text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="798.7" y="883.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="801.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (117 samples, 3.39%)</title><rect x="799.1" y="883.0" width="39.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="802.1" y="894.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (116 samples, 3.36%)</title><rect x="799.4" y="867.0" width="39.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="802.4" y="878.0">one..</text>
</g>
<g>
<title>.annobin_send.c (113 samples, 3.27%)</title><rect x="799.4" y="851.0" width="38.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="802.4" y="862.0">.an..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="800.4" y="835.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="803.4" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (109 samples, 3.15%)</title><rect x="800.8" y="835.0" width="37.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="803.8" y="846.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (109 samples, 3.15%)</title><rect x="800.8" y="819.0" width="37.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="803.8" y="830.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (108 samples, 3.12%)</title><rect x="801.1" y="803.0" width="36.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="804.1" y="814.0">__x..</text>
</g>
<g>
<title>__sys_sendto (107 samples, 3.10%)</title><rect x="801.4" y="787.0" width="36.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="804.4" y="798.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (106 samples, 3.07%)</title><rect x="801.8" y="771.0" width="36.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="804.8" y="782.0">soc..</text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.09%)</title><rect x="801.8" y="755.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="804.8" y="766.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.09%)</title><rect x="801.8" y="739.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="804.8" y="750.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="802.5" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="805.5" y="734.0"></text>
</g>
<g>
<title>tcp_sendmsg (103 samples, 2.98%)</title><rect x="802.8" y="755.0" width="35.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="805.8" y="766.0">tcp..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="803.2" y="739.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="806.2" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="803.2" y="723.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="806.2" y="734.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="803.5" y="739.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="806.5" y="750.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="803.5" y="723.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="806.5" y="734.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (100 samples, 2.89%)</title><rect x="803.8" y="739.0" width="34.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="806.8" y="750.0">tc..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="804.5" y="723.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="807.5" y="734.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="804.5" y="707.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="807.5" y="718.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (85 samples, 2.46%)</title><rect x="804.9" y="723.0" width="29.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="807.9" y="734.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (85 samples, 2.46%)</title><rect x="804.9" y="707.0" width="29.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="807.9" y="718.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (80 samples, 2.31%)</title><rect x="805.2" y="691.0" width="27.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="808.2" y="702.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (76 samples, 2.20%)</title><rect x="805.9" y="675.0" width="25.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="808.9" y="686.0">_..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.03%)</title><rect x="805.9" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="808.9" y="670.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="805.9" y="643.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="808.9" y="654.0"></text>
</g>
<g>
<title>ip_local_out (12 samples, 0.35%)</title><rect x="806.2" y="659.0" width="4.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="809.2" y="670.0"></text>
</g>
<g>
<title>__ip_local_out (12 samples, 0.35%)</title><rect x="806.2" y="643.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="809.2" y="654.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.35%)</title><rect x="806.2" y="627.0" width="4.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="809.2" y="638.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.09%)</title><rect x="806.6" y="611.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="809.6" y="622.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.06%)</title><rect x="807.6" y="611.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="810.6" y="622.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (6 samples, 0.17%)</title><rect x="808.3" y="611.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="811.3" y="622.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (2 samples, 0.06%)</title><rect x="808.3" y="595.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="811.3" y="606.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (4 samples, 0.12%)</title><rect x="809.0" y="595.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="812.0" y="606.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (1 samples, 0.03%)</title><rect x="809.6" y="579.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="812.6" y="590.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (1 samples, 0.03%)</title><rect x="810.0" y="579.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="813.0" y="590.0"></text>
</g>
<g>
<title>ip_output (63 samples, 1.82%)</title><rect x="810.3" y="659.0" width="21.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="813.3" y="670.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (56 samples, 1.62%)</title><rect x="810.3" y="643.0" width="19.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="813.3" y="654.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.12%)</title><rect x="811.0" y="627.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="814.0" y="638.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.06%)</title><rect x="811.7" y="611.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="814.7" y="622.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="811.7" y="595.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="814.7" y="606.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.03%)</title><rect x="812.0" y="595.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="815.0" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (50 samples, 1.45%)</title><rect x="812.4" y="627.0" width="17.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="815.4" y="638.0"></text>
</g>
<g>
<title>do_softirq.part.0 (50 samples, 1.45%)</title><rect x="812.4" y="611.0" width="17.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="815.4" y="622.0"></text>
</g>
<g>
<title>do_softirq_own_stack (50 samples, 1.45%)</title><rect x="812.4" y="595.0" width="17.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="815.4" y="606.0"></text>
</g>
<g>
<title>__softirqentry_text_start (50 samples, 1.45%)</title><rect x="812.4" y="579.0" width="17.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="815.4" y="590.0"></text>
</g>
<g>
<title>net_rx_action (48 samples, 1.39%)</title><rect x="812.4" y="563.0" width="16.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="815.4" y="574.0"></text>
</g>
<g>
<title>process_backlog (48 samples, 1.39%)</title><rect x="812.4" y="547.0" width="16.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="815.4" y="558.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (47 samples, 1.36%)</title><rect x="812.7" y="531.0" width="16.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="815.7" y="542.0"></text>
</g>
<g>
<title>ip_rcv (47 samples, 1.36%)</title><rect x="812.7" y="515.0" width="16.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="815.7" y="526.0"></text>
</g>
<g>
<title>ip_local_deliver (35 samples, 1.01%)</title><rect x="813.1" y="499.0" width="11.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="816.1" y="510.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (28 samples, 0.81%)</title><rect x="813.1" y="483.0" width="9.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="816.1" y="494.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (28 samples, 0.81%)</title><rect x="813.1" y="467.0" width="9.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="816.1" y="478.0"></text>
</g>
<g>
<title>tcp_v4_rcv (28 samples, 0.81%)</title><rect x="813.1" y="451.0" width="9.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="816.1" y="462.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="813.1" y="435.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="816.1" y="446.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.03%)</title><rect x="813.1" y="419.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="816.1" y="430.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (1 samples, 0.03%)</title><rect x="813.1" y="403.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="816.1" y="414.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (27 samples, 0.78%)</title><rect x="813.4" y="435.0" width="9.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="816.4" y="446.0"></text>
</g>
<g>
<title>tcp_rcv_established (27 samples, 0.78%)</title><rect x="813.4" y="419.0" width="9.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="816.4" y="430.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.06%)</title><rect x="813.7" y="403.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="816.7" y="414.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.06%)</title><rect x="813.7" y="387.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="816.7" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="814.1" y="371.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="817.1" y="382.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.14%)</title><rect x="814.4" y="403.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="817.4" y="414.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.06%)</title><rect x="814.8" y="387.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="817.8" y="398.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="814.8" y="371.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="817.8" y="382.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="815.1" y="371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="818.1" y="382.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="815.4" y="387.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="818.4" y="398.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.03%)</title><rect x="815.8" y="387.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="818.8" y="398.0"></text>
</g>
<g>
<title>tcp_data_queue (18 samples, 0.52%)</title><rect x="816.1" y="403.0" width="6.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="819.1" y="414.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.03%)</title><rect x="816.8" y="387.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="819.8" y="398.0"></text>
</g>
<g>
<title>sock_def_readable (15 samples, 0.43%)</title><rect x="817.2" y="387.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="820.2" y="398.0"></text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 0.41%)</title><rect x="817.5" y="371.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="820.5" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.41%)</title><rect x="817.5" y="355.0" width="4.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="820.5" y="366.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="822.3" y="403.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="825.3" y="414.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="822.3" y="387.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="825.3" y="398.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="822.3" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="825.3" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.20%)</title><rect x="822.6" y="483.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="825.6" y="494.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.12%)</title><rect x="822.6" y="467.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="825.6" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (1 samples, 0.03%)</title><rect x="824.0" y="467.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="827.0" y="478.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (1 samples, 0.03%)</title><rect x="824.3" y="467.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="827.3" y="478.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.03%)</title><rect x="824.7" y="467.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="827.7" y="478.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="825.0" y="499.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="828.0" y="510.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.03%)</title><rect x="825.0" y="483.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="828.0" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.29%)</title><rect x="825.3" y="499.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="828.3" y="510.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.20%)</title><rect x="826.0" y="483.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="829.0" y="494.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (1 samples, 0.03%)</title><rect x="828.4" y="483.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="831.4" y="494.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="828.8" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="831.8" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="828.8" y="547.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="831.8" y="558.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="829.1" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="832.1" y="574.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="829.1" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="832.1" y="558.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.03%)</title><rect x="829.1" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="832.1" y="542.0"></text>
</g>
<g>
<title>tcp_delack_timer_handler (1 samples, 0.03%)</title><rect x="829.1" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="832.1" y="526.0"></text>
</g>
<g>
<title>nf_hook_slow (7 samples, 0.20%)</title><rect x="829.4" y="643.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="832.4" y="654.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (1 samples, 0.03%)</title><rect x="829.4" y="627.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="832.4" y="638.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (2 samples, 0.06%)</title><rect x="829.8" y="627.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="832.8" y="638.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (1 samples, 0.03%)</title><rect x="830.5" y="627.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="833.5" y="638.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (2 samples, 0.06%)</title><rect x="830.8" y="627.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="833.8" y="638.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.03%)</title><rect x="831.2" y="611.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="834.2" y="622.0"></text>
</g>
<g>
<title>selinux_ip_postroute (1 samples, 0.03%)</title><rect x="831.5" y="627.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="834.5" y="638.0"></text>
</g>
<g>
<title>selinux_peerlbl_enabled (1 samples, 0.03%)</title><rect x="831.5" y="611.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="834.5" y="622.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="831.8" y="675.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="834.8" y="686.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.03%)</title><rect x="831.8" y="659.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="834.8" y="670.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.03%)</title><rect x="832.2" y="675.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="835.2" y="686.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.06%)</title><rect x="832.5" y="691.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="835.5" y="702.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="832.9" y="675.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="835.9" y="686.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.06%)</title><rect x="833.2" y="691.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="836.2" y="702.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="833.2" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="836.2" y="686.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="833.2" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="836.2" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="833.2" y="643.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="836.2" y="654.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="833.5" y="675.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="836.5" y="686.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.17%)</title><rect x="833.9" y="723.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="836.9" y="734.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.17%)</title><rect x="833.9" y="707.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="836.9" y="718.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.09%)</title><rect x="833.9" y="691.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="836.9" y="702.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.09%)</title><rect x="833.9" y="675.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="836.9" y="686.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="834.6" y="659.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="837.6" y="670.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.06%)</title><rect x="834.9" y="691.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="837.9" y="702.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="835.2" y="675.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="838.2" y="686.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="835.6" y="691.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="838.6" y="702.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.17%)</title><rect x="835.9" y="723.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="838.9" y="734.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.14%)</title><rect x="836.3" y="707.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="839.3" y="718.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="837.6" y="691.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="840.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="838.0" y="851.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="841.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="838.0" y="835.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="841.0" y="846.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="838.0" y="819.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="841.0" y="830.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="838.3" y="819.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="841.3" y="830.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="838.7" y="851.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="841.7" y="862.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.03%)</title><rect x="839.0" y="931.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.03%)</title><rect x="839.3" y="1075.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="842.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="839.3" y="1059.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="842.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="839.3" y="1043.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="842.3" y="1054.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="839.3" y="1027.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="842.3" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="839.3" y="1011.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="842.3" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="839.3" y="995.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="842.3" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="839.3" y="979.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="842.3" y="990.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="839.3" y="963.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="842.3" y="974.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="839.3" y="947.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="842.3" y="958.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="839.3" y="931.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="842.3" y="942.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="839.3" y="915.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="842.3" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="839.3" y="899.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="842.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (26 samples, 0.75%)</title><rect x="839.7" y="1091.0" width="8.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="842.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.03%)</title><rect x="839.7" y="1075.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="842.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (25 samples, 0.72%)</title><rect x="840.0" y="1075.0" width="8.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="843.0" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.17%)</title><rect x="840.0" y="1059.0" width="2.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="843.0" y="1070.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="840.0" y="1043.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="843.0" y="1054.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.06%)</title><rect x="840.4" y="1043.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="843.4" y="1054.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="840.7" y="1027.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="843.7" y="1038.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.06%)</title><rect x="841.1" y="1043.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="844.1" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="841.4" y="1027.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="844.4" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="841.4" y="1011.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="844.4" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="841.4" y="995.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="844.4" y="1006.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="841.4" y="979.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="844.4" y="990.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="841.4" y="963.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="844.4" y="974.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="841.4" y="947.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="844.4" y="958.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="841.7" y="1043.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="844.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.55%)</title><rect x="842.1" y="1059.0" width="6.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="845.1" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_wait (18 samples, 0.52%)</title><rect x="842.1" y="1043.0" width="6.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="845.1" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.38%)</title><rect x="843.8" y="1027.0" width="4.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="846.8" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.38%)</title><rect x="843.8" y="1011.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="846.8" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.35%)</title><rect x="844.1" y="995.0" width="4.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="847.1" y="1006.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.32%)</title><rect x="844.5" y="979.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="847.5" y="990.0"></text>
</g>
<g>
<title>futex_wait (10 samples, 0.29%)</title><rect x="844.8" y="963.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="847.8" y="974.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.20%)</title><rect x="844.8" y="947.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="847.8" y="958.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.14%)</title><rect x="845.5" y="931.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="848.5" y="942.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 0.14%)</title><rect x="845.5" y="915.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="848.5" y="926.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.12%)</title><rect x="845.8" y="899.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="848.8" y="910.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.09%)</title><rect x="847.2" y="947.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="850.2" y="958.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="847.9" y="931.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="850.9" y="942.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="848.2" y="1043.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="851.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (59 samples, 1.71%)</title><rect x="848.6" y="1091.0" width="20.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="851.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.03%)</title><rect x="848.6" y="1075.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="851.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (58 samples, 1.68%)</title><rect x="848.9" y="1075.0" width="19.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.9" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Park (20 samples, 0.58%)</title><rect x="848.9" y="1059.0" width="6.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="851.9" y="1070.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="849.2" y="1043.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="852.2" y="1054.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="849.6" y="1043.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="852.6" y="1054.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (7 samples, 0.20%)</title><rect x="849.9" y="1043.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="852.9" y="1054.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="850.6" y="1027.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="853.6" y="1038.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="851.0" y="1027.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="854.0" y="1038.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="851.3" y="1027.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="854.3" y="1038.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.03%)</title><rect x="852.0" y="1027.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="855.0" y="1038.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="852.0" y="1011.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="855.0" y="1022.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="852.0" y="995.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="855.0" y="1006.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="852.3" y="1043.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="855.3" y="1054.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.23%)</title><rect x="852.7" y="1043.0" width="2.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="855.7" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.14%)</title><rect x="853.7" y="1027.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="856.7" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.14%)</title><rect x="853.7" y="1011.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="856.7" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="855.1" y="995.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="858.1" y="1006.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="855.1" y="979.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="858.1" y="990.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="855.1" y="963.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="858.1" y="974.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="855.4" y="1043.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="858.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 1.10%)</title><rect x="855.7" y="1059.0" width="13.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="858.7" y="1070.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.03%)</title><rect x="855.7" y="1043.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="858.7" y="1054.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (34 samples, 0.98%)</title><rect x="856.1" y="1043.0" width="11.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="859.1" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.72%)</title><rect x="859.1" y="1027.0" width="8.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="862.1" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.72%)</title><rect x="859.1" y="1011.0" width="8.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="862.1" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (23 samples, 0.67%)</title><rect x="859.8" y="995.0" width="7.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="862.8" y="1006.0"></text>
</g>
<g>
<title>do_futex (20 samples, 0.58%)</title><rect x="860.5" y="979.0" width="6.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="863.5" y="990.0"></text>
</g>
<g>
<title>futex_wait (20 samples, 0.58%)</title><rect x="860.5" y="963.0" width="6.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="863.5" y="974.0"></text>
</g>
<g>
<title>futex_wait_queue_me (11 samples, 0.32%)</title><rect x="861.2" y="947.0" width="3.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="864.2" y="958.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.03%)</title><rect x="862.6" y="931.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="865.6" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="862.6" y="915.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="865.6" y="926.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.06%)</title><rect x="862.9" y="931.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="865.9" y="942.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.12%)</title><rect x="863.6" y="931.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="866.6" y="942.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.12%)</title><rect x="863.6" y="915.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="866.6" y="926.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.09%)</title><rect x="863.9" y="899.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="866.9" y="910.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="865.0" y="947.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="868.0" y="958.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="865.0" y="931.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="868.0" y="942.0"></text>
</g>
<g>
<title>hrtimer_cancel (6 samples, 0.17%)</title><rect x="865.3" y="947.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="868.3" y="958.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (6 samples, 0.17%)</title><rect x="865.3" y="931.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="868.3" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.14%)</title><rect x="865.3" y="915.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="868.3" y="926.0"></text>
</g>
<g>
<title>lock_hrtimer_base.isra.0 (1 samples, 0.03%)</title><rect x="867.0" y="915.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="870.0" y="926.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="867.0" y="899.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="870.0" y="910.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.03%)</title><rect x="867.3" y="979.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="870.3" y="990.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.06%)</title><rect x="867.7" y="1043.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="870.7" y="1054.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="868.4" y="1043.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="871.4" y="1054.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.06%)</title><rect x="868.7" y="1091.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="871.7" y="1102.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.06%)</title><rect x="868.7" y="1075.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="871.7" y="1086.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="869.1" y="1059.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="872.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (492 samples, 14.24%)</title><rect x="869.4" y="1123.0" width="168.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="872.4" y="1134.0">jdk/internal/net/http..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (2 samples, 0.06%)</title><rect x="870.1" y="1107.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.1" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (2 samples, 0.06%)</title><rect x="870.1" y="1091.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="873.1" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (3 samples, 0.09%)</title><rect x="870.8" y="1107.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="873.8" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (198 samples, 5.73%)</title><rect x="871.8" y="1107.0" width="67.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="874.8" y="1118.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/404115466.accept (194 samples, 5.61%)</title><rect x="871.8" y="1091.0" width="66.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="874.8" y="1102.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (194 samples, 5.61%)</title><rect x="871.8" y="1075.0" width="66.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="874.8" y="1086.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (194 samples, 5.61%)</title><rect x="871.8" y="1059.0" width="66.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="874.8" y="1070.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (194 samples, 5.61%)</title><rect x="871.8" y="1043.0" width="66.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="874.8" y="1054.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (194 samples, 5.61%)</title><rect x="871.8" y="1027.0" width="66.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.8" y="1038.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5 samples, 0.14%)</title><rect x="871.8" y="1011.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="874.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (5 samples, 0.14%)</title><rect x="871.8" y="995.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="874.8" y="1006.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.03%)</title><rect x="872.1" y="979.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="875.1" y="990.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.03%)</title><rect x="872.1" y="963.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="875.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.09%)</title><rect x="872.5" y="979.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.5" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.09%)</title><rect x="872.5" y="963.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="875.5" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.09%)</title><rect x="872.5" y="947.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.5" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="872.5" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="875.5" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.06%)</title><rect x="872.8" y="931.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="875.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (189 samples, 5.47%)</title><rect x="873.5" y="1011.0" width="64.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="876.5" y="1022.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (189 samples, 5.47%)</title><rect x="873.5" y="995.0" width="64.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="876.5" y="1006.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (189 samples, 5.47%)</title><rect x="873.5" y="979.0" width="64.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="876.5" y="990.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (189 samples, 5.47%)</title><rect x="873.5" y="963.0" width="64.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.5" y="974.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (189 samples, 5.47%)</title><rect x="873.5" y="947.0" width="64.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="876.5" y="958.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/1894615385.run (187 samples, 5.41%)</title><rect x="874.2" y="931.0" width="63.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="877.2" y="942.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (187 samples, 5.41%)</title><rect x="874.2" y="915.0" width="63.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="877.2" y="926.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (21 samples, 0.61%)</title><rect x="874.2" y="899.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="877.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (21 samples, 0.61%)</title><rect x="874.2" y="883.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (21 samples, 0.61%)</title><rect x="874.2" y="867.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="877.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (1 samples, 0.03%)</title><rect x="874.2" y="851.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="877.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.03%)</title><rect x="874.2" y="835.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.03%)</title><rect x="874.2" y="819.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="877.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.03%)</title><rect x="874.2" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="877.2" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="874.2" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="874.2" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="877.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (20 samples, 0.58%)</title><rect x="874.5" y="851.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="877.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (20 samples, 0.58%)</title><rect x="874.5" y="835.0" width="6.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="877.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (20 samples, 0.58%)</title><rect x="874.5" y="819.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="877.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 0.58%)</title><rect x="874.5" y="803.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="877.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (20 samples, 0.58%)</title><rect x="874.5" y="787.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="877.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (1 samples, 0.03%)</title><rect x="874.5" y="771.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="877.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (15 samples, 0.43%)</title><rect x="874.9" y="771.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="877.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="874.9" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="877.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="874.9" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="877.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="874.9" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="877.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="874.9" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="874.9" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="877.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="874.9" y="675.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="877.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="874.9" y="659.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="877.9" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="874.9" y="643.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="877.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.41%)</title><rect x="875.2" y="755.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="878.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.41%)</title><rect x="875.2" y="739.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="878.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.41%)</title><rect x="875.2" y="723.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="878.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.41%)</title><rect x="875.2" y="707.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="878.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.41%)</title><rect x="875.2" y="691.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="878.2" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.09%)</title><rect x="875.2" y="675.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="878.2" y="686.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="875.2" y="659.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="878.2" y="670.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="875.5" y="659.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="878.5" y="670.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.03%)</title><rect x="875.9" y="659.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="878.9" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.32%)</title><rect x="876.2" y="675.0" width="3.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="879.2" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.29%)</title><rect x="876.6" y="659.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="879.6" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.29%)</title><rect x="876.6" y="643.0" width="3.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="879.6" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.26%)</title><rect x="876.9" y="627.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="879.9" y="638.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.26%)</title><rect x="876.9" y="611.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="879.9" y="622.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.26%)</title><rect x="876.9" y="595.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="879.9" y="606.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.23%)</title><rect x="877.2" y="579.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="880.2" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.23%)</title><rect x="877.2" y="563.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="880.2" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.23%)</title><rect x="877.2" y="547.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="880.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.getAndIncrement (1 samples, 0.03%)</title><rect x="880.0" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="883.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="880.3" y="771.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="883.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.06%)</title><rect x="880.7" y="771.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="883.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.06%)</title><rect x="880.7" y="755.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="883.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="880.7" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="883.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.03%)</title><rect x="880.7" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="883.7" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="880.7" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="883.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="881.0" y="739.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="884.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="881.0" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.03%)</title><rect x="881.3" y="899.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="884.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (4 samples, 0.12%)</title><rect x="881.7" y="899.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="884.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (4 samples, 0.12%)</title><rect x="881.7" y="883.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="884.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.06%)</title><rect x="882.0" y="867.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="885.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.06%)</title><rect x="882.0" y="851.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="885.0" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (2 samples, 0.06%)</title><rect x="882.0" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="885.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.03%)</title><rect x="882.7" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="885.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.03%)</title><rect x="882.7" y="851.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="885.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (158 samples, 4.57%)</title><rect x="883.0" y="899.0" width="54.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="886.0" y="910.0">jdk/i..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (158 samples, 4.57%)</title><rect x="883.0" y="883.0" width="54.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="886.0" y="894.0">sun/n..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.12%)</title><rect x="883.0" y="867.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="886.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.12%)</title><rect x="883.0" y="851.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="886.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.12%)</title><rect x="883.0" y="835.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="886.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.12%)</title><rect x="883.0" y="819.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="886.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.09%)</title><rect x="883.4" y="803.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="886.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.09%)</title><rect x="883.4" y="787.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="886.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.09%)</title><rect x="883.4" y="771.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="886.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (154 samples, 4.46%)</title><rect x="884.4" y="867.0" width="52.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="887.4" y="878.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (154 samples, 4.46%)</title><rect x="884.4" y="851.0" width="52.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="887.4" y="862.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (145 samples, 4.20%)</title><rect x="884.8" y="835.0" width="49.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="887.8" y="846.0">sun/n..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.03%)</title><rect x="884.8" y="819.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="887.8" y="830.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.03%)</title><rect x="884.8" y="803.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="887.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="884.8" y="787.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.8" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="884.8" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="887.8" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (144 samples, 4.17%)</title><rect x="885.1" y="819.0" width="49.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="888.1" y="830.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (144 samples, 4.17%)</title><rect x="885.1" y="803.0" width="49.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="888.1" y="814.0">sun/n..</text>
</g>
<g>
<title>__libc_read (141 samples, 4.08%)</title><rect x="885.4" y="787.0" width="48.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="888.4" y="798.0">__li..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (125 samples, 3.62%)</title><rect x="890.9" y="771.0" width="42.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="893.9" y="782.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (125 samples, 3.62%)</title><rect x="890.9" y="755.0" width="42.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="893.9" y="766.0">do_s..</text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="892.3" y="739.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="895.3" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="892.3" y="723.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="895.3" y="734.0"></text>
</g>
<g>
<title>ksys_read (120 samples, 3.47%)</title><rect x="892.6" y="739.0" width="41.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="895.6" y="750.0">ksy..</text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.12%)</title><rect x="892.6" y="723.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="895.6" y="734.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.12%)</title><rect x="892.6" y="707.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="895.6" y="718.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.09%)</title><rect x="893.0" y="691.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="896.0" y="702.0"></text>
</g>
<g>
<title>vfs_read (116 samples, 3.36%)</title><rect x="894.0" y="723.0" width="39.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="897.0" y="734.0">vfs..</text>
</g>
<g>
<title>fsnotify (2 samples, 0.06%)</title><rect x="894.0" y="707.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="897.0" y="718.0"></text>
</g>
<g>
<title>new_sync_read (110 samples, 3.18%)</title><rect x="894.7" y="707.0" width="37.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="897.7" y="718.0">new..</text>
</g>
<g>
<title>sock_read_iter (110 samples, 3.18%)</title><rect x="894.7" y="691.0" width="37.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="897.7" y="702.0">soc..</text>
</g>
<g>
<title>inet_recvmsg (108 samples, 3.12%)</title><rect x="894.7" y="675.0" width="36.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="897.7" y="686.0">ine..</text>
</g>
<g>
<title>tcp_recvmsg (106 samples, 3.07%)</title><rect x="895.3" y="659.0" width="36.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="898.3" y="670.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="897.0" y="643.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="900.0" y="654.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="897.0" y="627.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="900.0" y="638.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="897.0" y="611.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="900.0" y="622.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="897.0" y="595.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="900.0" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="897.4" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="900.4" y="654.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (2 samples, 0.06%)</title><rect x="897.7" y="643.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="900.7" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.06%)</title><rect x="897.7" y="627.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="900.7" y="638.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="898.1" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="901.1" y="622.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (93 samples, 2.69%)</title><rect x="898.4" y="643.0" width="31.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="901.4" y="654.0">__..</text>
</g>
<g>
<title>__ip_queue_xmit (90 samples, 2.60%)</title><rect x="899.4" y="627.0" width="30.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="902.4" y="638.0">__..</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.12%)</title><rect x="899.4" y="611.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="902.4" y="622.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.06%)</title><rect x="900.1" y="595.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="903.1" y="606.0"></text>
</g>
<g>
<title>ip_local_out (22 samples, 0.64%)</title><rect x="900.8" y="611.0" width="7.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="903.8" y="622.0"></text>
</g>
<g>
<title>__ip_local_out (22 samples, 0.64%)</title><rect x="900.8" y="595.0" width="7.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="903.8" y="606.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.03%)</title><rect x="901.5" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="904.5" y="590.0"></text>
</g>
<g>
<title>nf_hook_slow (19 samples, 0.55%)</title><rect x="901.8" y="579.0" width="6.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="904.8" y="590.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.17%)</title><rect x="901.8" y="563.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="904.8" y="574.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (1 samples, 0.03%)</title><rect x="903.9" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="906.9" y="574.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (5 samples, 0.14%)</title><rect x="904.2" y="563.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="907.2" y="574.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.09%)</title><rect x="904.9" y="547.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="907.9" y="558.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (1 samples, 0.03%)</title><rect x="905.9" y="563.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="908.9" y="574.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (5 samples, 0.14%)</title><rect x="906.3" y="563.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="909.3" y="574.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (2 samples, 0.06%)</title><rect x="907.0" y="547.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="910.0" y="558.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (1 samples, 0.03%)</title><rect x="907.6" y="547.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="910.6" y="558.0"></text>
</g>
<g>
<title>selinux_ipv4_output (1 samples, 0.03%)</title><rect x="908.0" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="911.0" y="574.0"></text>
</g>
<g>
<title>netlbl_enabled (1 samples, 0.03%)</title><rect x="908.0" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="911.0" y="558.0"></text>
</g>
<g>
<title>ip_output (64 samples, 1.85%)</title><rect x="908.3" y="611.0" width="21.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="911.3" y="622.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (56 samples, 1.62%)</title><rect x="908.7" y="595.0" width="19.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="911.7" y="606.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.20%)</title><rect x="909.3" y="579.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="912.3" y="590.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.14%)</title><rect x="910.0" y="563.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="913.0" y="574.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.14%)</title><rect x="910.0" y="547.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="913.0" y="558.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.14%)</title><rect x="910.0" y="531.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="913.0" y="542.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.14%)</title><rect x="910.0" y="515.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="913.0" y="526.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.09%)</title><rect x="910.4" y="499.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="913.4" y="510.0"></text>
</g>
<g>
<title>ktime_get_with_offset (1 samples, 0.03%)</title><rect x="911.4" y="499.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="914.4" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (47 samples, 1.36%)</title><rect x="911.7" y="579.0" width="16.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="914.7" y="590.0"></text>
</g>
<g>
<title>do_softirq.part.0 (47 samples, 1.36%)</title><rect x="911.7" y="563.0" width="16.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="914.7" y="574.0"></text>
</g>
<g>
<title>do_softirq_own_stack (47 samples, 1.36%)</title><rect x="911.7" y="547.0" width="16.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="914.7" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (47 samples, 1.36%)</title><rect x="911.7" y="531.0" width="16.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="914.7" y="542.0"></text>
</g>
<g>
<title>net_rx_action (45 samples, 1.30%)</title><rect x="912.4" y="515.0" width="15.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="915.4" y="526.0"></text>
</g>
<g>
<title>process_backlog (44 samples, 1.27%)</title><rect x="912.8" y="499.0" width="15.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="915.8" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (44 samples, 1.27%)</title><rect x="912.8" y="483.0" width="15.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="915.8" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.06%)</title><rect x="912.8" y="467.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="915.8" y="478.0"></text>
</g>
<g>
<title>ip_rcv (42 samples, 1.22%)</title><rect x="913.4" y="467.0" width="14.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="916.4" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver (32 samples, 0.93%)</title><rect x="913.4" y="451.0" width="11.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="916.4" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (24 samples, 0.69%)</title><rect x="913.4" y="435.0" width="8.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="916.4" y="446.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (24 samples, 0.69%)</title><rect x="913.4" y="419.0" width="8.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="916.4" y="430.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.03%)</title><rect x="913.8" y="403.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="916.8" y="414.0"></text>
</g>
<g>
<title>tcp_v4_rcv (22 samples, 0.64%)</title><rect x="914.1" y="403.0" width="7.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="917.1" y="414.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="915.1" y="387.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="918.1" y="398.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.06%)</title><rect x="915.5" y="387.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="918.5" y="398.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.06%)</title><rect x="915.5" y="371.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="918.5" y="382.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (1 samples, 0.03%)</title><rect x="915.8" y="355.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="918.8" y="366.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (16 samples, 0.46%)</title><rect x="916.2" y="387.0" width="5.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="919.2" y="398.0"></text>
</g>
<g>
<title>tcp_rcv_established (16 samples, 0.46%)</title><rect x="916.2" y="371.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="919.2" y="382.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="916.2" y="355.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="919.2" y="366.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="916.5" y="355.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="919.5" y="366.0"></text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.06%)</title><rect x="916.9" y="355.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="919.9" y="366.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.35%)</title><rect x="917.5" y="355.0" width="4.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="920.5" y="366.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.06%)</title><rect x="918.2" y="339.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="921.2" y="350.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="918.2" y="323.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="921.2" y="334.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="918.6" y="323.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="921.6" y="334.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.06%)</title><rect x="918.9" y="339.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="921.9" y="350.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="919.6" y="339.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="922.6" y="350.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="919.6" y="323.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="922.6" y="334.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (2 samples, 0.06%)</title><rect x="919.9" y="339.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="922.9" y="350.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.03%)</title><rect x="920.6" y="339.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="923.6" y="350.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="920.9" y="339.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="923.9" y="350.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.03%)</title><rect x="921.3" y="339.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="924.3" y="350.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.23%)</title><rect x="921.6" y="435.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="924.6" y="446.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.23%)</title><rect x="921.6" y="419.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="924.6" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.06%)</title><rect x="923.3" y="403.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="926.3" y="414.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (1 samples, 0.03%)</title><rect x="924.0" y="403.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="927.0" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (10 samples, 0.29%)</title><rect x="924.4" y="451.0" width="3.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="927.4" y="462.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (1 samples, 0.03%)</title><rect x="924.4" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="927.4" y="446.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.20%)</title><rect x="924.7" y="435.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="927.7" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (1 samples, 0.03%)</title><rect x="927.1" y="435.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="930.1" y="446.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (1 samples, 0.03%)</title><rect x="927.4" y="435.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="930.4" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.03%)</title><rect x="927.8" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="930.8" y="606.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.17%)</title><rect x="928.1" y="595.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="931.1" y="606.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (2 samples, 0.06%)</title><rect x="928.1" y="579.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="931.1" y="590.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (1 samples, 0.03%)</title><rect x="928.8" y="579.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="931.8" y="590.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (1 samples, 0.03%)</title><rect x="929.1" y="579.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="932.1" y="590.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (2 samples, 0.06%)</title><rect x="929.5" y="579.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="932.5" y="590.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.03%)</title><rect x="929.8" y="563.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="932.8" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="930.2" y="643.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="933.2" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="930.2" y="627.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="933.2" y="638.0"></text>
</g>
<g>
<title>ns_to_timespec64 (1 samples, 0.03%)</title><rect x="930.5" y="643.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="933.5" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.03%)</title><rect x="930.9" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="933.9" y="654.0"></text>
</g>
<g>
<title>tcp_recv_timestamp (1 samples, 0.03%)</title><rect x="931.2" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="934.2" y="654.0"></text>
</g>
<g>
<title>sock_recvmsg (2 samples, 0.06%)</title><rect x="931.5" y="675.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="934.5" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.06%)</title><rect x="931.5" y="659.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="934.5" y="670.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (1 samples, 0.03%)</title><rect x="931.5" y="643.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="934.5" y="654.0"></text>
</g>
<g>
<title>sock_has_perm (1 samples, 0.03%)</title><rect x="931.9" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="934.9" y="654.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.12%)</title><rect x="932.2" y="707.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="935.2" y="718.0"></text>
</g>
<g>
<title>file_has_perm (1 samples, 0.03%)</title><rect x="932.2" y="691.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="935.2" y="702.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="932.2" y="675.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="935.2" y="686.0"></text>
</g>
<g>
<title>selinux_file_permission (3 samples, 0.09%)</title><rect x="932.6" y="691.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="935.6" y="702.0"></text>
</g>
<g>
<title>__inode_security_revalidate (3 samples, 0.09%)</title><rect x="932.6" y="675.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="935.6" y="686.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="933.2" y="659.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="936.2" y="670.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="933.2" y="643.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="936.2" y="654.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="933.6" y="787.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="936.6" y="798.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="933.9" y="787.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="936.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.23%)</title><rect x="934.3" y="835.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="937.3" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.17%)</title><rect x="934.3" y="819.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="937.3" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (5 samples, 0.14%)</title><rect x="934.6" y="803.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="937.6" y="814.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="934.9" y="787.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="937.9" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="935.3" y="787.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="938.3" y="798.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.03%)</title><rect x="936.0" y="787.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="939.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.06%)</title><rect x="936.3" y="819.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="939.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (1 samples, 0.03%)</title><rect x="936.7" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="939.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.03%)</title><rect x="937.0" y="899.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="940.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.03%)</title><rect x="937.0" y="883.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="940.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (2 samples, 0.06%)</title><rect x="937.3" y="899.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="940.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$244/1205372074.accept (3 samples, 0.09%)</title><rect x="938.0" y="1091.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="941.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (3 samples, 0.09%)</title><rect x="938.0" y="1075.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="941.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$240/135343777.run (3 samples, 0.09%)</title><rect x="938.0" y="1059.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="941.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (3 samples, 0.09%)</title><rect x="938.0" y="1043.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="941.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (3 samples, 0.09%)</title><rect x="938.0" y="1027.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="941.0" y="1038.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.03%)</title><rect x="938.4" y="1011.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="941.4" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.03%)</title><rect x="938.7" y="1011.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="941.7" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.03%)</title><rect x="938.7" y="995.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="941.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1 samples, 0.03%)</title><rect x="939.0" y="1091.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="942.0" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (11 samples, 0.32%)</title><rect x="939.4" y="1107.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="942.4" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (11 samples, 0.32%)</title><rect x="939.4" y="1091.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="942.4" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (3 samples, 0.09%)</title><rect x="943.1" y="1107.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="946.1" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.09%)</title><rect x="943.1" y="1091.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="946.1" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (3 samples, 0.09%)</title><rect x="943.1" y="1075.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="946.1" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (3 samples, 0.09%)</title><rect x="943.1" y="1059.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="946.1" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.09%)</title><rect x="943.1" y="1043.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="946.1" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.09%)</title><rect x="943.1" y="1027.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="946.1" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.03%)</title><rect x="943.5" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="946.5" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.03%)</title><rect x="943.8" y="1011.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="946.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (51 samples, 1.48%)</title><rect x="944.2" y="1107.0" width="17.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="947.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$188/903113097.run (24 samples, 0.69%)</title><rect x="944.5" y="1091.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (24 samples, 0.69%)</title><rect x="944.5" y="1075.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="947.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.log (1 samples, 0.03%)</title><rect x="944.5" y="1059.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="947.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (23 samples, 0.67%)</title><rect x="944.8" y="1059.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (23 samples, 0.67%)</title><rect x="944.8" y="1043.0" width="7.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="947.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (1 samples, 0.03%)</title><rect x="944.8" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="947.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (22 samples, 0.64%)</title><rect x="945.2" y="1027.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="948.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (22 samples, 0.64%)</title><rect x="945.2" y="1011.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="948.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/1894615385.run (19 samples, 0.55%)</title><rect x="945.5" y="995.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="948.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (19 samples, 0.55%)</title><rect x="945.5" y="979.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="948.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (18 samples, 0.52%)</title><rect x="945.5" y="963.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="948.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (15 samples, 0.43%)</title><rect x="946.6" y="947.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="949.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (4 samples, 0.12%)</title><rect x="946.9" y="931.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="949.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (4 samples, 0.12%)</title><rect x="946.9" y="915.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="949.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (4 samples, 0.12%)</title><rect x="946.9" y="899.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="949.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.09%)</title><rect x="946.9" y="883.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="949.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (3 samples, 0.09%)</title><rect x="946.9" y="867.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="949.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.09%)</title><rect x="946.9" y="851.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="949.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.09%)</title><rect x="946.9" y="835.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="949.9" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.03%)</title><rect x="947.2" y="819.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="950.2" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.03%)</title><rect x="947.2" y="803.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="950.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.03%)</title><rect x="947.6" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="950.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.03%)</title><rect x="947.6" y="803.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="950.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (1 samples, 0.03%)</title><rect x="947.9" y="883.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="950.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (10 samples, 0.29%)</title><rect x="948.3" y="931.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="951.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.29%)</title><rect x="948.3" y="915.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="951.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.29%)</title><rect x="948.3" y="899.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="951.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.29%)</title><rect x="948.3" y="883.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="951.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.29%)</title><rect x="948.3" y="867.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="951.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (10 samples, 0.29%)</title><rect x="948.3" y="851.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="951.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (1 samples, 0.03%)</title><rect x="948.3" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="951.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (8 samples, 0.23%)</title><rect x="948.6" y="835.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="951.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.23%)</title><rect x="948.6" y="819.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="951.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.23%)</title><rect x="948.6" y="803.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="951.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.23%)</title><rect x="948.6" y="787.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="951.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.23%)</title><rect x="948.6" y="771.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="951.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.23%)</title><rect x="948.6" y="755.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="951.6" y="766.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="948.9" y="739.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="951.9" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.06%)</title><rect x="949.3" y="739.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="952.3" y="750.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.03%)</title><rect x="949.6" y="723.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="952.6" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.12%)</title><rect x="950.0" y="739.0" width="1.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="953.0" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="950.7" y="723.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="953.7" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.06%)</title><rect x="950.7" y="707.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="953.7" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.06%)</title><rect x="950.7" y="691.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="953.7" y="702.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.06%)</title><rect x="950.7" y="675.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="953.7" y="686.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.06%)</title><rect x="950.7" y="659.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="953.7" y="670.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.06%)</title><rect x="950.7" y="643.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="953.7" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.06%)</title><rect x="950.7" y="627.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="953.7" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.06%)</title><rect x="950.7" y="611.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="953.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="951.3" y="835.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="954.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="951.3" y="819.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="954.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="951.3" y="803.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.03%)</title><rect x="951.3" y="787.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="954.3" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="951.3" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="954.3" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="951.3" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="954.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.03%)</title><rect x="951.7" y="963.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="954.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.03%)</title><rect x="951.7" y="947.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="954.7" y="958.0"></text>
</g>
<g>
<title>java/lang/Math.min (1 samples, 0.03%)</title><rect x="951.7" y="931.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="954.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.06%)</title><rect x="952.0" y="995.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="955.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (1 samples, 0.03%)</title><rect x="952.0" y="979.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="955.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.03%)</title><rect x="952.4" y="979.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="955.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/1926392655.run (26 samples, 0.75%)</title><rect x="952.7" y="1091.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="955.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (26 samples, 0.75%)</title><rect x="952.7" y="1075.0" width="8.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="955.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (25 samples, 0.72%)</title><rect x="952.7" y="1059.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="955.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (24 samples, 0.69%)</title><rect x="953.0" y="1043.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="956.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (24 samples, 0.69%)</title><rect x="953.0" y="1027.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="956.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (1 samples, 0.03%)</title><rect x="953.0" y="1011.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="956.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (19 samples, 0.55%)</title><rect x="953.4" y="1011.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="956.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (19 samples, 0.55%)</title><rect x="953.4" y="995.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="956.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 0.55%)</title><rect x="953.4" y="979.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="956.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 0.55%)</title><rect x="953.4" y="963.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="956.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.55%)</title><rect x="953.4" y="947.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="956.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.55%)</title><rect x="953.4" y="931.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="956.4" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="953.4" y="915.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="956.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="953.7" y="915.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="956.7" y="926.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="953.7" y="899.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="956.7" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_signal (17 samples, 0.49%)</title><rect x="954.1" y="915.0" width="5.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="957.1" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.35%)</title><rect x="955.8" y="899.0" width="4.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="958.8" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.35%)</title><rect x="955.8" y="883.0" width="4.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="958.8" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.26%)</title><rect x="956.8" y="867.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="959.8" y="878.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.23%)</title><rect x="957.1" y="851.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="960.1" y="862.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.23%)</title><rect x="957.1" y="835.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="960.1" y="846.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="957.5" y="819.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="960.5" y="830.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.17%)</title><rect x="957.8" y="819.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="960.8" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.14%)</title><rect x="958.2" y="803.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="961.2" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.14%)</title><rect x="958.2" y="787.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="961.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.09%)</title><rect x="959.9" y="1011.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="962.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.09%)</title><rect x="959.9" y="995.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="962.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.06%)</title><rect x="960.2" y="979.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.03%)</title><rect x="960.2" y="963.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="963.2" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="960.2" y="947.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="963.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.03%)</title><rect x="960.6" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.6" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="960.6" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="963.6" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="960.6" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="963.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="960.9" y="1011.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="963.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="960.9" y="995.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="963.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.03%)</title><rect x="961.2" y="1059.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="964.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (1 samples, 0.03%)</title><rect x="961.2" y="1043.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="964.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="961.2" y="1027.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="964.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (24 samples, 0.69%)</title><rect x="961.6" y="1107.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="964.6" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.12%)</title><rect x="961.9" y="1091.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="964.9" y="1102.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.12%)</title><rect x="961.9" y="1075.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="964.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (4 samples, 0.12%)</title><rect x="961.9" y="1059.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="964.9" y="1070.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (4 samples, 0.12%)</title><rect x="961.9" y="1043.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="964.9" y="1054.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (3 samples, 0.09%)</title><rect x="962.3" y="1027.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="965.3" y="1038.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.09%)</title><rect x="962.3" y="1011.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="965.3" y="1022.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.06%)</title><rect x="962.6" y="995.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="965.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeMaybeRequired (3 samples, 0.09%)</title><rect x="963.3" y="1091.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="966.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (16 samples, 0.46%)</title><rect x="964.3" y="1091.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="967.3" y="1102.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="966.0" y="1075.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="969.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="966.4" y="1075.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="966.4" y="1059.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="969.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$315/928562525.get$Lambda (1 samples, 0.03%)</title><rect x="966.4" y="1043.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="969.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (1 samples, 0.03%)</title><rect x="966.7" y="1075.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="969.7" y="1086.0"></text>
</g>
<g>
<title>java/util/LinkedList.getLast (1 samples, 0.03%)</title><rect x="966.7" y="1059.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="969.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (8 samples, 0.23%)</title><rect x="967.0" y="1075.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="970.0" y="1086.0"></text>
</g>
<g>
<title>java/time/Instant.isAfter (1 samples, 0.03%)</title><rect x="968.8" y="1059.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.8" y="1070.0"></text>
</g>
<g>
<title>java/time/Instant.compareTo (1 samples, 0.03%)</title><rect x="968.8" y="1043.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="971.8" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.03%)</title><rect x="969.1" y="1059.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="972.1" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.next (1 samples, 0.03%)</title><rect x="969.4" y="1059.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="972.4" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (1 samples, 0.03%)</title><rect x="969.4" y="1043.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="972.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.&lt;init&gt; (5 samples, 0.14%)</title><rect x="969.8" y="1107.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="972.8" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (5 samples, 0.14%)</title><rect x="969.8" y="1091.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="972.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (10 samples, 0.29%)</title><rect x="971.5" y="1107.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="974.5" y="1118.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.12%)</title><rect x="971.8" y="1091.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="974.8" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.12%)</title><rect x="971.8" y="1075.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="974.8" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (4 samples, 0.12%)</title><rect x="971.8" y="1059.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="974.8" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (4 samples, 0.12%)</title><rect x="971.8" y="1043.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="974.8" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (4 samples, 0.12%)</title><rect x="971.8" y="1027.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="974.8" y="1038.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="972.5" y="1011.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="975.5" y="1022.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="972.5" y="995.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="975.5" y="1006.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="972.5" y="979.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="975.5" y="990.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="972.5" y="963.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="975.5" y="974.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="972.5" y="947.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="975.5" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="972.5" y="931.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="975.5" y="942.0"></text>
</g>
<g>
<title>java/util/stream/PipelineHelper.&lt;init&gt; (1 samples, 0.03%)</title><rect x="972.8" y="1011.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="975.8" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (5 samples, 0.14%)</title><rect x="973.2" y="1091.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="976.2" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (5 samples, 0.14%)</title><rect x="973.2" y="1075.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="976.2" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (5 samples, 0.14%)</title><rect x="973.2" y="1059.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="976.2" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (5 samples, 0.14%)</title><rect x="973.2" y="1043.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="976.2" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (5 samples, 0.14%)</title><rect x="973.2" y="1027.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="976.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.03%)</title><rect x="974.6" y="1011.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="977.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (4 samples, 0.12%)</title><rect x="974.9" y="1107.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="977.9" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.09%)</title><rect x="975.2" y="1091.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="978.2" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.09%)</title><rect x="975.2" y="1075.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="978.2" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.09%)</title><rect x="975.2" y="1059.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="978.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isReferenced (1 samples, 0.03%)</title><rect x="976.3" y="1107.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="979.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.03%)</title><rect x="976.3" y="1091.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="979.3" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (161 samples, 4.66%)</title><rect x="976.6" y="1107.0" width="55.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="979.6" y="1118.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (158 samples, 4.57%)</title><rect x="977.6" y="1091.0" width="54.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="980.6" y="1102.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (158 samples, 4.57%)</title><rect x="977.6" y="1075.0" width="54.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="980.6" y="1086.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (90 samples, 2.60%)</title><rect x="978.3" y="1059.0" width="30.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="981.3" y="1070.0">su..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (84 samples, 2.43%)</title><rect x="979.3" y="1043.0" width="28.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="982.3" y="1054.0">.a..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (68 samples, 1.97%)</title><rect x="984.8" y="1027.0" width="23.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="987.8" y="1038.0">e..</text>
</g>
<g>
<title>do_syscall_64 (68 samples, 1.97%)</title><rect x="984.8" y="1011.0" width="23.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="987.8" y="1022.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (61 samples, 1.77%)</title><rect x="987.2" y="995.0" width="20.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="990.2" y="1006.0"></text>
</g>
<g>
<title>do_epoll_wait (61 samples, 1.77%)</title><rect x="987.2" y="979.0" width="20.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="990.2" y="990.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="987.2" y="963.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="990.2" y="974.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.12%)</title><rect x="987.5" y="963.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="990.5" y="974.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.09%)</title><rect x="987.9" y="947.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="990.9" y="958.0"></text>
</g>
<g>
<title>ep_poll (56 samples, 1.62%)</title><rect x="988.9" y="963.0" width="19.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="991.9" y="974.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (25 samples, 0.72%)</title><rect x="991.3" y="947.0" width="8.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="994.3" y="958.0"></text>
</g>
<g>
<title>ep_send_events_proc (19 samples, 0.55%)</title><rect x="992.7" y="931.0" width="6.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="995.7" y="942.0"></text>
</g>
<g>
<title>__list_del_entry_valid (2 samples, 0.06%)</title><rect x="993.7" y="915.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="996.7" y="926.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (14 samples, 0.41%)</title><rect x="994.4" y="915.0" width="4.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="997.4" y="926.0"></text>
</g>
<g>
<title>pipe_poll (5 samples, 0.14%)</title><rect x="995.4" y="899.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="998.4" y="910.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.17%)</title><rect x="997.1" y="899.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1000.1" y="910.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.09%)</title><rect x="998.1" y="883.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1001.1" y="894.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="999.1" y="931.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1002.1" y="942.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="999.5" y="931.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1002.5" y="942.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.03%)</title><rect x="999.8" y="947.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1002.8" y="958.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="999.8" y="931.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1002.8" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (22 samples, 0.64%)</title><rect x="1000.2" y="947.0" width="7.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1003.2" y="958.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.03%)</title><rect x="1000.2" y="931.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1003.2" y="942.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (3 samples, 0.09%)</title><rect x="1000.5" y="931.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1003.5" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1000.8" y="915.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1003.8" y="926.0"></text>
</g>
<g>
<title>lock_hrtimer_base.isra.0 (1 samples, 0.03%)</title><rect x="1001.2" y="915.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1004.2" y="926.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (2 samples, 0.06%)</title><rect x="1001.5" y="931.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1004.5" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.06%)</title><rect x="1001.5" y="915.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1004.5" y="926.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.46%)</title><rect x="1002.2" y="931.0" width="5.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1005.2" y="942.0"></text>
</g>
<g>
<title>__sched_text_start (15 samples, 0.43%)</title><rect x="1002.6" y="915.0" width="5.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1005.6" y="926.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.43%)</title><rect x="1002.6" y="899.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1005.6" y="910.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.06%)</title><rect x="1007.0" y="883.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1010.0" y="894.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.06%)</title><rect x="1007.0" y="867.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1010.0" y="878.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.06%)</title><rect x="1007.0" y="851.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1010.0" y="862.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.06%)</title><rect x="1007.0" y="835.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1010.0" y="846.0"></text>
</g>
<g>
<title>run_timer_softirq (2 samples, 0.06%)</title><rect x="1007.0" y="819.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1010.0" y="830.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="1007.3" y="803.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1010.3" y="814.0"></text>
</g>
<g>
<title>tcp_delack_timer (1 samples, 0.03%)</title><rect x="1007.3" y="787.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1010.3" y="798.0"></text>
</g>
<g>
<title>tcp_delack_timer_handler (1 samples, 0.03%)</title><rect x="1007.3" y="771.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1010.3" y="782.0"></text>
</g>
<g>
<title>select_estimate_accuracy (1 samples, 0.03%)</title><rect x="1007.7" y="947.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1010.7" y="958.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.03%)</title><rect x="1007.7" y="931.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1010.7" y="942.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="1007.7" y="915.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1010.7" y="926.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (1 samples, 0.03%)</title><rect x="1008.0" y="1043.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1011.0" y="1054.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="1008.4" y="1043.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1011.4" y="1054.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="1008.7" y="1043.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1011.7" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (55 samples, 1.59%)</title><rect x="1009.0" y="1059.0" width="18.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1012.0" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (1 samples, 0.03%)</title><rect x="1009.7" y="1043.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1012.7" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.06%)</title><rect x="1010.1" y="1043.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1013.1" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.06%)</title><rect x="1010.1" y="1027.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1013.1" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (47 samples, 1.36%)</title><rect x="1010.7" y="1043.0" width="16.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1013.7" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (46 samples, 1.33%)</title><rect x="1011.1" y="1027.0" width="15.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1014.1" y="1038.0"></text>
</g>
<g>
<title>__libc_read (46 samples, 1.33%)</title><rect x="1011.1" y="1011.0" width="15.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1014.1" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 1.07%)</title><rect x="1014.2" y="995.0" width="12.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1017.2" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 1.07%)</title><rect x="1014.2" y="979.0" width="12.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1017.2" y="990.0"></text>
</g>
<g>
<title>ksys_read (31 samples, 0.90%)</title><rect x="1016.2" y="963.0" width="10.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1019.2" y="974.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.06%)</title><rect x="1016.2" y="947.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1019.2" y="958.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="1016.2" y="931.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1019.2" y="942.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="1016.9" y="947.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1019.9" y="958.0"></text>
</g>
<g>
<title>vfs_read (28 samples, 0.81%)</title><rect x="1017.2" y="947.0" width="9.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1020.2" y="958.0"></text>
</g>
<g>
<title>new_sync_read (22 samples, 0.64%)</title><rect x="1017.2" y="931.0" width="7.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1020.2" y="942.0"></text>
</g>
<g>
<title>pipe_read (22 samples, 0.64%)</title><rect x="1017.2" y="915.0" width="7.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1020.2" y="926.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.09%)</title><rect x="1017.9" y="899.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1020.9" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.09%)</title><rect x="1017.9" y="883.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1020.9" y="894.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (2 samples, 0.06%)</title><rect x="1018.9" y="899.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1021.9" y="910.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.12%)</title><rect x="1019.6" y="899.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1022.6" y="910.0"></text>
</g>
<g>
<title>copyout (2 samples, 0.06%)</title><rect x="1020.3" y="883.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1023.3" y="894.0"></text>
</g>
<g>
<title>generic_pipe_buf_confirm (1 samples, 0.03%)</title><rect x="1021.0" y="899.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1024.0" y="910.0"></text>
</g>
<g>
<title>touch_atime (10 samples, 0.29%)</title><rect x="1021.3" y="899.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1024.3" y="910.0"></text>
</g>
<g>
<title>__mnt_drop_write (1 samples, 0.03%)</title><rect x="1021.3" y="883.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1024.3" y="894.0"></text>
</g>
<g>
<title>__mnt_want_write (1 samples, 0.03%)</title><rect x="1021.7" y="883.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1024.7" y="894.0"></text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.03%)</title><rect x="1022.0" y="883.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1025.0" y="894.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.03%)</title><rect x="1022.4" y="883.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1025.4" y="894.0"></text>
</g>
<g>
<title>atime_needs_update (4 samples, 0.12%)</title><rect x="1022.7" y="883.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1025.7" y="894.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.09%)</title><rect x="1023.0" y="867.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1026.0" y="878.0"></text>
</g>
<g>
<title>timespec64_trunc (2 samples, 0.06%)</title><rect x="1023.4" y="851.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1026.4" y="862.0"></text>
</g>
<g>
<title>generic_update_time (2 samples, 0.06%)</title><rect x="1024.1" y="883.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1027.1" y="894.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.03%)</title><rect x="1024.4" y="867.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1027.4" y="878.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.17%)</title><rect x="1024.7" y="931.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1027.7" y="942.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="1024.7" y="915.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1027.7" y="926.0"></text>
</g>
<g>
<title>file_has_perm (3 samples, 0.09%)</title><rect x="1025.1" y="915.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1028.1" y="926.0"></text>
</g>
<g>
<title>avc_has_perm (3 samples, 0.09%)</title><rect x="1025.1" y="899.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1028.1" y="910.0"></text>
</g>
<g>
<title>selinux_file_permission (2 samples, 0.06%)</title><rect x="1026.1" y="915.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1029.1" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.09%)</title><rect x="1026.8" y="1043.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1029.8" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.03%)</title><rect x="1026.8" y="1027.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1029.8" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.03%)</title><rect x="1026.8" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1029.8" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.03%)</title><rect x="1026.8" y="995.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1029.8" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.03%)</title><rect x="1027.1" y="1027.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1030.1" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.03%)</title><rect x="1027.1" y="1011.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1030.1" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="1027.1" y="995.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1030.1" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.nioReadyOps (1 samples, 0.03%)</title><rect x="1027.5" y="1027.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1030.5" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (11 samples, 0.32%)</title><rect x="1027.8" y="1059.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1030.8" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.remove (1 samples, 0.03%)</title><rect x="1027.8" y="1043.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1030.8" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (10 samples, 0.29%)</title><rect x="1028.2" y="1043.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1031.2" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (10 samples, 0.29%)</title><rect x="1028.2" y="1027.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1031.2" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1 samples, 0.03%)</title><rect x="1030.9" y="1011.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1033.9" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (1 samples, 0.03%)</title><rect x="1031.2" y="1011.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1034.2" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (10 samples, 0.29%)</title><rect x="1031.6" y="1107.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1034.6" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (10 samples, 0.29%)</title><rect x="1031.6" y="1091.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1034.6" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (10 samples, 0.29%)</title><rect x="1031.6" y="1075.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1034.6" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (7 samples, 0.20%)</title><rect x="1031.6" y="1059.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1034.6" y="1070.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (6 samples, 0.17%)</title><rect x="1031.6" y="1043.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1034.6" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.09%)</title><rect x="1032.6" y="1027.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1035.6" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.09%)</title><rect x="1032.6" y="1011.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1035.6" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (3 samples, 0.09%)</title><rect x="1032.6" y="995.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1035.6" y="1006.0"></text>
</g>
<g>
<title>do_epoll_wait (3 samples, 0.09%)</title><rect x="1032.6" y="979.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1035.6" y="990.0"></text>
</g>
<g>
<title>ep_poll (3 samples, 0.09%)</title><rect x="1032.6" y="963.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1035.6" y="974.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (3 samples, 0.09%)</title><rect x="1032.6" y="947.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1035.6" y="958.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.09%)</title><rect x="1032.6" y="931.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1035.6" y="942.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.06%)</title><rect x="1032.9" y="915.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1035.9" y="926.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.06%)</title><rect x="1032.9" y="899.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1035.9" y="910.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="1033.3" y="883.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1036.3" y="894.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="1033.6" y="1043.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1036.6" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (3 samples, 0.09%)</title><rect x="1034.0" y="1059.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1037.0" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (2 samples, 0.06%)</title><rect x="1034.0" y="1043.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1037.0" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (2 samples, 0.06%)</title><rect x="1034.0" y="1027.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1037.0" y="1038.0"></text>
</g>
<g>
<title>__libc_read (2 samples, 0.06%)</title><rect x="1034.0" y="1011.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1037.0" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="1034.0" y="995.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1037.0" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.06%)</title><rect x="1034.0" y="979.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1037.0" y="990.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.03%)</title><rect x="1034.3" y="963.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1037.3" y="974.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.03%)</title><rect x="1034.3" y="947.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1037.3" y="958.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.03%)</title><rect x="1034.3" y="931.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1037.3" y="942.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.03%)</title><rect x="1034.3" y="915.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1037.3" y="926.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="1034.3" y="899.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1037.3" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1034.3" y="883.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1037.3" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.03%)</title><rect x="1034.6" y="1043.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1037.6" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (1 samples, 0.03%)</title><rect x="1034.6" y="1027.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1037.6" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndUpdateReadyOps (1 samples, 0.03%)</title><rect x="1034.6" y="1011.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1037.6" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (1 samples, 0.03%)</title><rect x="1034.6" y="995.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1037.6" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectedKeys (1 samples, 0.03%)</title><rect x="1035.0" y="1107.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1038.0" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (6 samples, 0.17%)</title><rect x="1035.3" y="1107.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1038.3" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (6 samples, 0.17%)</title><rect x="1035.3" y="1091.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1038.3" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (5 samples, 0.14%)</title><rect x="1035.7" y="1075.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1038.7" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (3 samples, 0.09%)</title><rect x="1036.0" y="1059.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1039.0" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (3 samples, 0.09%)</title><rect x="1036.0" y="1043.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1039.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1 samples, 0.03%)</title><rect x="1037.0" y="1059.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1040.0" y="1070.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (348 samples, 10.07%)</title><rect x="1037.4" y="1123.0" width="118.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1040.4" y="1134.0">one/nio/server..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.03%)</title><rect x="1037.4" y="1107.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1040.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.03%)</title><rect x="1037.7" y="1107.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1040.7" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.03%)</title><rect x="1037.7" y="1091.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1040.7" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (83 samples, 2.40%)</title><rect x="1038.1" y="1107.0" width="28.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1041.1" y="1118.0">on..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1039.4" y="1091.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1042.4" y="1102.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1039.4" y="1075.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1042.4" y="1086.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1039.4" y="1059.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1042.4" y="1070.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1039.4" y="1043.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1042.4" y="1054.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="1039.4" y="1027.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1042.4" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (4 samples, 0.12%)</title><rect x="1039.8" y="1091.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1042.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.06%)</title><rect x="1040.5" y="1075.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1043.5" y="1086.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getInt (1 samples, 0.03%)</title><rect x="1040.8" y="1059.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1043.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getInt (1 samples, 0.03%)</title><rect x="1040.8" y="1043.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1043.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (74 samples, 2.14%)</title><rect x="1041.1" y="1091.0" width="25.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1044.1" y="1102.0">o..</text>
</g>
<g>
<title>.annobin_epoll_wait.c (62 samples, 1.79%)</title><rect x="1042.2" y="1075.0" width="21.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1045.2" y="1086.0">...</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (54 samples, 1.56%)</title><rect x="1044.9" y="1059.0" width="18.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1047.9" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (54 samples, 1.56%)</title><rect x="1044.9" y="1043.0" width="18.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1047.9" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (52 samples, 1.50%)</title><rect x="1045.6" y="1027.0" width="17.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1048.6" y="1038.0"></text>
</g>
<g>
<title>do_epoll_wait (51 samples, 1.48%)</title><rect x="1045.9" y="1011.0" width="17.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1048.9" y="1022.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="1046.3" y="995.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1049.3" y="1006.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.12%)</title><rect x="1046.6" y="995.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1049.6" y="1006.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.12%)</title><rect x="1046.6" y="979.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1049.6" y="990.0"></text>
</g>
<g>
<title>ep_poll (44 samples, 1.27%)</title><rect x="1048.0" y="995.0" width="15.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1051.0" y="1006.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (25 samples, 0.72%)</title><rect x="1049.7" y="979.0" width="8.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1052.7" y="990.0"></text>
</g>
<g>
<title>ep_send_events_proc (16 samples, 0.46%)</title><rect x="1050.7" y="963.0" width="5.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1053.7" y="974.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (10 samples, 0.29%)</title><rect x="1052.7" y="947.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1055.7" y="958.0"></text>
</g>
<g>
<title>sock_poll (9 samples, 0.26%)</title><rect x="1053.1" y="931.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1056.1" y="942.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.06%)</title><rect x="1055.5" y="915.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1058.5" y="926.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="1055.8" y="899.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1058.8" y="910.0"></text>
</g>
<g>
<title>mutex_lock (5 samples, 0.14%)</title><rect x="1056.2" y="963.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1059.2" y="974.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="1057.9" y="963.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1060.9" y="974.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (14 samples, 0.41%)</title><rect x="1058.2" y="979.0" width="4.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1061.2" y="990.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.32%)</title><rect x="1059.2" y="963.0" width="3.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1062.2" y="974.0"></text>
</g>
<g>
<title>__sched_text_start (9 samples, 0.26%)</title><rect x="1059.9" y="947.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1062.9" y="958.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.17%)</title><rect x="1060.9" y="931.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1063.9" y="942.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="1063.0" y="995.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1066.0" y="1006.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.03%)</title><rect x="1063.3" y="1075.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1066.3" y="1086.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1063.7" y="1075.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1066.7" y="1086.0"></text>
</g>
<g>
<title>__GI___clock_gettime (3 samples, 0.09%)</title><rect x="1064.0" y="1075.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1067.0" y="1086.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="1065.0" y="1075.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1068.0" y="1086.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="1065.4" y="1075.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1068.4" y="1086.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.06%)</title><rect x="1065.7" y="1075.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1068.7" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (263 samples, 7.61%)</title><rect x="1066.4" y="1107.0" width="89.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1069.4" y="1118.0">one/nio/ne..</text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="1067.8" y="1091.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1070.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (256 samples, 7.41%)</title><rect x="1068.1" y="1091.0" width="87.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1071.1" y="1102.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (173 samples, 5.01%)</title><rect x="1068.1" y="1075.0" width="59.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1071.1" y="1086.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (130 samples, 3.76%)</title><rect x="1069.8" y="1059.0" width="44.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1072.8" y="1070.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (127 samples, 3.67%)</title><rect x="1070.8" y="1043.0" width="43.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1073.8" y="1054.0">one/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (115 samples, 3.33%)</title><rect x="1070.8" y="1027.0" width="39.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1073.8" y="1038.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.23%)</title><rect x="1071.2" y="1011.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1074.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.06%)</title><rect x="1071.5" y="995.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1074.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.06%)</title><rect x="1071.5" y="979.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1074.5" y="990.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.06%)</title><rect x="1072.2" y="995.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1075.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.06%)</title><rect x="1072.2" y="979.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1075.2" y="990.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.09%)</title><rect x="1072.9" y="995.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1075.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="1072.9" y="979.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1075.9" y="990.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.06%)</title><rect x="1073.2" y="979.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1076.2" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (106 samples, 3.07%)</title><rect x="1073.9" y="1011.0" width="36.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1076.9" y="1022.0">ru/..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.12%)</title><rect x="1073.9" y="995.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1076.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.09%)</title><rect x="1074.3" y="979.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1077.3" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.09%)</title><rect x="1074.3" y="963.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1077.3" y="974.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="1074.9" y="947.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1077.9" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (63 samples, 1.82%)</title><rect x="1075.3" y="995.0" width="21.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1078.3" y="1006.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="1075.3" y="979.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1078.3" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="1075.3" y="963.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1078.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$107/2098846329.get$Lambda (1 samples, 0.03%)</title><rect x="1075.3" y="947.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1078.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (62 samples, 1.79%)</title><rect x="1075.6" y="979.0" width="21.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1078.6" y="990.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (59 samples, 1.71%)</title><rect x="1076.3" y="963.0" width="20.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1079.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (57 samples, 1.65%)</title><rect x="1076.3" y="947.0" width="19.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1079.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (57 samples, 1.65%)</title><rect x="1076.3" y="931.0" width="19.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1079.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (57 samples, 1.65%)</title><rect x="1076.3" y="915.0" width="19.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1079.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (57 samples, 1.65%)</title><rect x="1076.3" y="899.0" width="19.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1079.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (57 samples, 1.65%)</title><rect x="1076.3" y="883.0" width="19.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1079.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (57 samples, 1.65%)</title><rect x="1076.3" y="867.0" width="19.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1079.3" y="878.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.20%)</title><rect x="1076.6" y="851.0" width="2.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1079.6" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="1076.6" y="835.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1079.6" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="1077.0" y="835.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1080.0" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="1077.3" y="835.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1080.3" y="846.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.03%)</title><rect x="1077.7" y="835.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1080.7" y="846.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.09%)</title><rect x="1078.0" y="835.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1081.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1079.0" y="851.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1082.0" y="862.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="1079.0" y="835.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1082.0" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (48 samples, 1.39%)</title><rect x="1079.4" y="851.0" width="16.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1082.4" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 1.13%)</title><rect x="1082.4" y="835.0" width="13.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1085.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (39 samples, 1.13%)</title><rect x="1082.4" y="819.0" width="13.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1085.4" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (36 samples, 1.04%)</title><rect x="1083.5" y="803.0" width="12.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1086.5" y="814.0"></text>
</g>
<g>
<title>do_futex (35 samples, 1.01%)</title><rect x="1083.8" y="787.0" width="12.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1086.8" y="798.0"></text>
</g>
<g>
<title>futex_wake (34 samples, 0.98%)</title><rect x="1084.2" y="771.0" width="11.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1087.2" y="782.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="1085.5" y="755.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1088.5" y="766.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="1085.9" y="755.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1088.9" y="766.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.03%)</title><rect x="1085.9" y="739.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1088.9" y="750.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.03%)</title><rect x="1086.2" y="755.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1089.2" y="766.0"></text>
</g>
<g>
<title>wake_up_q (27 samples, 0.78%)</title><rect x="1086.5" y="755.0" width="9.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1089.5" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (27 samples, 0.78%)</title><rect x="1086.5" y="739.0" width="9.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1089.5" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (27 samples, 0.78%)</title><rect x="1086.5" y="723.0" width="9.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1089.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.06%)</title><rect x="1095.8" y="947.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1098.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.06%)</title><rect x="1095.8" y="931.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.06%)</title><rect x="1095.8" y="915.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1098.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.06%)</title><rect x="1095.8" y="899.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1098.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.03%)</title><rect x="1095.8" y="883.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1098.8" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="1095.8" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1098.8" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="1095.8" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1098.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.03%)</title><rect x="1096.1" y="883.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1099.1" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="1096.1" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1099.1" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="1096.1" y="851.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1099.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.isRunning (1 samples, 0.03%)</title><rect x="1096.4" y="963.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1099.4" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (24 samples, 0.69%)</title><rect x="1096.8" y="995.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1099.8" y="1006.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (24 samples, 0.69%)</title><rect x="1096.8" y="979.0" width="8.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1099.8" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (4 samples, 0.12%)</title><rect x="1097.1" y="963.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1100.1" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (4 samples, 0.12%)</title><rect x="1097.1" y="947.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1100.1" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (4 samples, 0.12%)</title><rect x="1097.1" y="931.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1100.1" y="942.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (16 samples, 0.46%)</title><rect x="1098.5" y="963.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1101.5" y="974.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (14 samples, 0.41%)</title><rect x="1099.2" y="947.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1102.2" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (1 samples, 0.03%)</title><rect x="1099.5" y="931.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1102.5" y="942.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.12%)</title><rect x="1099.9" y="931.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1102.9" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.12%)</title><rect x="1099.9" y="915.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1102.9" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="1099.9" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1102.9" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.09%)</title><rect x="1100.2" y="899.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1103.2" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.06%)</title><rect x="1100.5" y="883.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1103.5" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (6 samples, 0.17%)</title><rect x="1101.2" y="931.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1104.2" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.06%)</title><rect x="1102.6" y="915.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1105.6" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.06%)</title><rect x="1102.6" y="899.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1105.6" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.hasNext (1 samples, 0.03%)</title><rect x="1103.3" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1106.3" y="942.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1 samples, 0.03%)</title><rect x="1103.6" y="931.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1106.6" y="942.0"></text>
</g>
<g>
<title>java/util/Set.of (3 samples, 0.09%)</title><rect x="1104.0" y="963.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1107.0" y="974.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1104.3" y="947.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1107.3" y="958.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.probe (1 samples, 0.03%)</title><rect x="1104.3" y="931.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1107.3" y="942.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (1 samples, 0.03%)</title><rect x="1104.3" y="915.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1107.3" y="926.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (1 samples, 0.03%)</title><rect x="1104.3" y="899.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1107.3" y="910.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.emptySet (1 samples, 0.03%)</title><rect x="1104.6" y="947.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1107.6" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (15 samples, 0.43%)</title><rect x="1105.0" y="995.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1108.0" y="1006.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (5 samples, 0.14%)</title><rect x="1105.0" y="979.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1108.0" y="990.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (4 samples, 0.12%)</title><rect x="1105.3" y="963.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1108.3" y="974.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.&lt;init&gt; (4 samples, 0.12%)</title><rect x="1105.3" y="947.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1108.3" y="958.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.&lt;init&gt; (3 samples, 0.09%)</title><rect x="1105.7" y="931.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1108.7" y="942.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (8 samples, 0.23%)</title><rect x="1106.7" y="979.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1109.7" y="990.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (6 samples, 0.17%)</title><rect x="1106.7" y="963.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1109.7" y="974.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (3 samples, 0.09%)</title><rect x="1107.7" y="947.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1110.7" y="958.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (2 samples, 0.06%)</title><rect x="1108.1" y="931.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1111.1" y="942.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (2 samples, 0.06%)</title><rect x="1108.1" y="915.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1111.1" y="926.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (1 samples, 0.03%)</title><rect x="1108.4" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1111.4" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="1108.4" y="883.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1111.4" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="1108.4" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1111.4" y="878.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="1108.4" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1111.4" y="862.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (1 samples, 0.03%)</title><rect x="1108.7" y="963.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1111.7" y="974.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (1 samples, 0.03%)</title><rect x="1109.1" y="963.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1112.1" y="974.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1 samples, 0.03%)</title><rect x="1109.1" y="947.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1112.1" y="958.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1 samples, 0.03%)</title><rect x="1109.1" y="931.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1112.1" y="942.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1109.1" y="915.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1112.1" y="926.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1109.1" y="899.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1112.1" y="910.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.get (2 samples, 0.06%)</title><rect x="1109.4" y="979.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1112.4" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.get (2 samples, 0.06%)</title><rect x="1109.4" y="963.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1112.4" y="974.0"></text>
</g>
<g>
<title>java/util/Objects.checkIndex (2 samples, 0.06%)</title><rect x="1109.4" y="947.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1112.4" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.03%)</title><rect x="1110.1" y="1027.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1113.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (8 samples, 0.23%)</title><rect x="1110.4" y="1027.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1113.4" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.23%)</title><rect x="1110.4" y="1011.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1113.4" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.12%)</title><rect x="1110.8" y="995.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1113.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.12%)</title><rect x="1110.8" y="979.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1113.8" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.09%)</title><rect x="1112.2" y="995.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1115.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.09%)</title><rect x="1112.2" y="979.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1115.2" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.09%)</title><rect x="1113.2" y="1027.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1116.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.09%)</title><rect x="1113.2" y="1011.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1116.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.09%)</title><rect x="1113.2" y="995.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1116.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.09%)</title><rect x="1113.2" y="979.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1116.2" y="990.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.03%)</title><rect x="1113.5" y="963.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1116.5" y="974.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="1113.9" y="963.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1116.9" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (18 samples, 0.52%)</title><rect x="1114.2" y="1059.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1117.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7 samples, 0.20%)</title><rect x="1115.2" y="1043.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1118.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="1117.3" y="1027.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="1117.3" y="1011.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1120.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="1117.3" y="995.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1120.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.06%)</title><rect x="1117.6" y="1043.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1120.6" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.12%)</title><rect x="1118.3" y="1043.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1121.3" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.12%)</title><rect x="1118.3" y="1027.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1121.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.12%)</title><rect x="1118.3" y="1011.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1121.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.09%)</title><rect x="1118.3" y="995.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1121.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (1 samples, 0.03%)</title><rect x="1119.3" y="995.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1122.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.06%)</title><rect x="1119.7" y="1043.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1122.7" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (11 samples, 0.32%)</title><rect x="1120.3" y="1059.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1123.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (10 samples, 0.29%)</title><rect x="1120.3" y="1043.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1123.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (10 samples, 0.29%)</title><rect x="1120.3" y="1027.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1123.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.09%)</title><rect x="1121.7" y="1011.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1124.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.09%)</title><rect x="1121.7" y="995.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1124.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (3 samples, 0.09%)</title><rect x="1121.7" y="979.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1124.7" y="990.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.09%)</title><rect x="1122.7" y="1011.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1125.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.06%)</title><rect x="1123.1" y="995.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1126.1" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (1 samples, 0.03%)</title><rect x="1123.8" y="1043.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1126.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.03%)</title><rect x="1124.1" y="1059.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1127.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.20%)</title><rect x="1124.4" y="1059.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1127.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="1124.4" y="1043.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1127.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.17%)</title><rect x="1124.8" y="1043.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1127.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.17%)</title><rect x="1124.8" y="1027.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1127.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.06%)</title><rect x="1125.1" y="1011.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1128.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.09%)</title><rect x="1125.8" y="1011.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1128.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.09%)</title><rect x="1125.8" y="995.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1128.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (3 samples, 0.09%)</title><rect x="1125.8" y="979.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1128.8" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="1126.8" y="1059.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="1126.8" y="1043.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1129.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1126.8" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1129.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (83 samples, 2.40%)</title><rect x="1127.2" y="1075.0" width="28.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1130.2" y="1086.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (82 samples, 2.37%)</title><rect x="1127.5" y="1059.0" width="28.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1130.5" y="1070.0">o..</text>
</g>
<g>
<title>[unknown] (13 samples, 0.38%)</title><rect x="1129.2" y="1043.0" width="4.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1132.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.38%)</title><rect x="1129.2" y="1027.0" width="4.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1132.2" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.17%)</title><rect x="1129.2" y="1011.0" width="2.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1132.2" y="1022.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="1129.2" y="995.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1132.2" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (1 samples, 0.03%)</title><rect x="1129.6" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1132.6" y="1006.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="1129.9" y="995.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1132.9" y="1006.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.06%)</title><rect x="1130.2" y="995.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1133.2" y="1006.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="1130.6" y="979.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1133.6" y="990.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="1130.9" y="995.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1133.9" y="1006.0"></text>
</g>
<g>
<title>__libc_recv (3 samples, 0.09%)</title><rect x="1131.3" y="1011.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1134.3" y="1022.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="1132.3" y="1011.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1135.3" y="1022.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.09%)</title><rect x="1132.6" y="1011.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1135.6" y="1022.0"></text>
</g>
<g>
<title>__libc_recv (63 samples, 1.82%)</title><rect x="1133.7" y="1043.0" width="21.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1136.7" y="1054.0">_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="1137.4" y="1027.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1140.4" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (51 samples, 1.48%)</title><rect x="1137.8" y="1027.0" width="17.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1140.8" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (51 samples, 1.48%)</title><rect x="1137.8" y="1011.0" width="17.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1140.8" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (48 samples, 1.39%)</title><rect x="1138.8" y="995.0" width="16.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1141.8" y="1006.0"></text>
</g>
<g>
<title>__sys_recvfrom (48 samples, 1.39%)</title><rect x="1138.8" y="979.0" width="16.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1141.8" y="990.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.09%)</title><rect x="1138.8" y="963.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1141.8" y="974.0"></text>
</g>
<g>
<title>inet_recvmsg (38 samples, 1.10%)</title><rect x="1139.8" y="963.0" width="13.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1142.8" y="974.0"></text>
</g>
<g>
<title>tcp_recvmsg (37 samples, 1.07%)</title><rect x="1140.2" y="947.0" width="12.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1143.2" y="958.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.17%)</title><rect x="1143.2" y="931.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1146.2" y="942.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.14%)</title><rect x="1143.2" y="915.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1146.2" y="926.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.14%)</title><rect x="1143.2" y="899.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1146.2" y="910.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.09%)</title><rect x="1143.2" y="883.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1146.2" y="894.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.06%)</title><rect x="1144.2" y="883.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1147.2" y="894.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="1144.9" y="915.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1147.9" y="926.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="1145.3" y="931.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1148.3" y="942.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="1145.6" y="931.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1148.6" y="942.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.09%)</title><rect x="1146.0" y="931.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1149.0" y="942.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.06%)</title><rect x="1146.0" y="915.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1149.0" y="926.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="1146.3" y="899.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1149.3" y="910.0"></text>
</g>
<g>
<title>queued_spin_lock_slowpath (1 samples, 0.03%)</title><rect x="1146.6" y="915.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1149.6" y="926.0"></text>
</g>
<g>
<title>ns_to_timespec64 (1 samples, 0.03%)</title><rect x="1147.0" y="931.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1150.0" y="942.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="1147.3" y="931.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1150.3" y="942.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="1147.3" y="915.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1150.3" y="926.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (13 samples, 0.38%)</title><rect x="1147.7" y="931.0" width="4.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1150.7" y="942.0"></text>
</g>
<g>
<title>__skb_datagram_iter (13 samples, 0.38%)</title><rect x="1147.7" y="915.0" width="4.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1150.7" y="926.0"></text>
</g>
<g>
<title>_copy_to_iter (7 samples, 0.20%)</title><rect x="1147.7" y="899.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1150.7" y="910.0"></text>
</g>
<g>
<title>copyout (7 samples, 0.20%)</title><rect x="1147.7" y="883.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1150.7" y="894.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.17%)</title><rect x="1148.0" y="867.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1151.0" y="878.0"></text>
</g>
<g>
<title>simple_copy_to_iter (6 samples, 0.17%)</title><rect x="1150.1" y="899.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1153.1" y="910.0"></text>
</g>
<g>
<title>__check_object_size (6 samples, 0.17%)</title><rect x="1150.1" y="883.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1153.1" y="894.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.06%)</title><rect x="1151.4" y="867.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1154.4" y="878.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.03%)</title><rect x="1152.1" y="931.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1155.1" y="942.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.03%)</title><rect x="1152.1" y="915.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1155.1" y="926.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.03%)</title><rect x="1152.4" y="931.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1155.4" y="942.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="1152.4" y="915.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1155.4" y="926.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="1152.4" y="899.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1155.4" y="910.0"></text>
</g>
<g>
<title>sock_recvmsg (5 samples, 0.14%)</title><rect x="1152.8" y="963.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1155.8" y="974.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.14%)</title><rect x="1152.8" y="947.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1155.8" y="958.0"></text>
</g>
<g>
<title>sock_has_perm (5 samples, 0.14%)</title><rect x="1152.8" y="931.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1155.8" y="942.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.03%)</title><rect x="1154.1" y="915.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1157.1" y="926.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.06%)</title><rect x="1154.5" y="963.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1157.5" y="974.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="1154.5" y="947.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1157.5" y="958.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="1154.8" y="931.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1157.8" y="942.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="1155.2" y="1043.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1158.2" y="1054.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.06%)</title><rect x="1155.5" y="1091.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1158.5" y="1102.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1155.5" y="1075.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1158.5" y="1086.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="1155.9" y="1075.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1158.9" y="1086.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1155.9" y="1059.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1158.9" y="1070.0"></text>
</g>
<g>
<title>start_thread (99 samples, 2.86%)</title><rect x="1156.2" y="1123.0" width="33.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1159.2" y="1134.0">st..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (99 samples, 2.86%)</title><rect x="1156.2" y="1107.0" width="33.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1159.2" y="1118.0">th..</text>
</g>
<g>
<title>GangWorker::loop() (54 samples, 1.56%)</title><rect x="1156.2" y="1091.0" width="18.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1159.2" y="1102.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (53 samples, 1.53%)</title><rect x="1156.2" y="1075.0" width="18.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1159.2" y="1086.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (9 samples, 0.26%)</title><rect x="1156.2" y="1059.0" width="3.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1159.2" y="1070.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.06%)</title><rect x="1156.2" y="1043.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1159.2" y="1054.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.03%)</title><rect x="1156.2" y="1027.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1159.2" y="1038.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="1156.5" y="1027.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1159.5" y="1038.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (2 samples, 0.06%)</title><rect x="1156.9" y="1043.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1159.9" y="1054.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.14%)</title><rect x="1157.6" y="1043.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1160.6" y="1054.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (41 samples, 1.19%)</title><rect x="1159.3" y="1059.0" width="14.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1162.3" y="1070.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (41 samples, 1.19%)</title><rect x="1159.3" y="1043.0" width="14.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1162.3" y="1054.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (41 samples, 1.19%)</title><rect x="1159.3" y="1027.0" width="14.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1162.3" y="1038.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (41 samples, 1.19%)</title><rect x="1159.3" y="1011.0" width="14.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1162.3" y="1022.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (41 samples, 1.19%)</title><rect x="1159.3" y="995.0" width="14.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1162.3" y="1006.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (29 samples, 0.84%)</title><rect x="1159.3" y="979.0" width="9.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.3" y="990.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (20 samples, 0.58%)</title><rect x="1162.3" y="963.0" width="6.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1165.3" y="974.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.09%)</title><rect x="1168.1" y="947.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.1" y="958.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (12 samples, 0.35%)</title><rect x="1169.2" y="979.0" width="4.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.2" y="990.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (12 samples, 0.35%)</title><rect x="1169.2" y="963.0" width="4.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1172.2" y="974.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (2 samples, 0.06%)</title><rect x="1169.9" y="947.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.9" y="958.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (4 samples, 0.12%)</title><rect x="1170.5" y="947.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.5" y="958.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*, MemRegion) (3 samples, 0.09%)</title><rect x="1171.9" y="947.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.9" y="958.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.06%)</title><rect x="1172.2" y="931.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.2" y="942.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1172.9" y="947.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.9" y="958.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.03%)</title><rect x="1172.9" y="931.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.9" y="942.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="1173.3" y="1059.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.3" y="1070.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.03%)</title><rect x="1173.3" y="1043.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1176.3" y="1054.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.03%)</title><rect x="1173.3" y="1027.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1176.3" y="1038.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (1 samples, 0.03%)</title><rect x="1173.3" y="1011.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.3" y="1022.0"></text>
</g>
<g>
<title>HeapRegionRemSetIterator::HeapRegionRemSetIterator(HeapRegionRemSet*) (1 samples, 0.03%)</title><rect x="1173.3" y="995.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.3" y="1006.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.06%)</title><rect x="1173.6" y="1059.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.6" y="1070.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.03%)</title><rect x="1173.6" y="1043.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1176.6" y="1054.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.03%)</title><rect x="1174.0" y="1043.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.0" y="1054.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="1174.0" y="1027.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1177.0" y="1038.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="1174.0" y="1011.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.0" y="1022.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (1 samples, 0.03%)</title><rect x="1174.0" y="995.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1177.0" y="1006.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (1 samples, 0.03%)</title><rect x="1174.0" y="979.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.0" y="990.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.03%)</title><rect x="1174.0" y="963.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1177.0" y="974.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.03%)</title><rect x="1174.0" y="947.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1177.0" y="958.0"></text>
</g>
<g>
<title>G1PLABAllocator::allocate_direct_or_new_plab(InCSetState, unsigned long, bool*) (1 samples, 0.03%)</title><rect x="1174.0" y="931.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.0" y="942.0"></text>
</g>
<g>
<title>G1Allocator::survivor_attempt_allocation(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="1174.0" y="915.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1177.0" y="926.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="1174.0" y="899.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1177.0" y="910.0"></text>
</g>
<g>
<title>Monitor::TrySpin(Thread*) [clone .part.23] (1 samples, 0.03%)</title><rect x="1174.0" y="883.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.0" y="894.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="1174.3" y="1075.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1177.3" y="1086.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.03%)</title><rect x="1174.3" y="1059.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1177.3" y="1070.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.63] (1 samples, 0.03%)</title><rect x="1174.3" y="1043.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1177.3" y="1054.0"></text>
</g>
<g>
<title>frame::nmethods_do(CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="1174.3" y="1027.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1177.3" y="1038.0"></text>
</g>
<g>
<title>JavaThread::run() (39 samples, 1.13%)</title><rect x="1174.6" y="1091.0" width="13.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1177.6" y="1102.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (39 samples, 1.13%)</title><rect x="1174.6" y="1075.0" width="13.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1177.6" y="1086.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (39 samples, 1.13%)</title><rect x="1174.6" y="1059.0" width="13.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.6" y="1070.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (39 samples, 1.13%)</title><rect x="1174.6" y="1043.0" width="13.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.6" y="1054.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (36 samples, 1.04%)</title><rect x="1174.6" y="1027.0" width="12.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1177.6" y="1038.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (36 samples, 1.04%)</title><rect x="1174.6" y="1011.0" width="12.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.6" y="1022.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (23 samples, 0.67%)</title><rect x="1174.6" y="995.0" width="7.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1177.6" y="1006.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.03%)</title><rect x="1174.6" y="979.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.6" y="990.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.03%)</title><rect x="1174.6" y="963.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1177.6" y="974.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (3 samples, 0.09%)</title><rect x="1175.0" y="979.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.0" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (1 samples, 0.03%)</title><rect x="1175.0" y="963.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.0" y="974.0"></text>
</g>
<g>
<title>PhaseCFG::do_DFS(Tarjan*, unsigned int) (1 samples, 0.03%)</title><rect x="1175.0" y="947.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.0" y="958.0"></text>
</g>
<g>
<title>Block_Stack::most_frequent_successor(Block*) (1 samples, 0.03%)</title><rect x="1175.0" y="931.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.0" y="942.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.06%)</title><rect x="1175.3" y="963.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1178.3" y="974.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.03%)</title><rect x="1175.3" y="947.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.3" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.03%)</title><rect x="1175.7" y="947.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.7" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (19 samples, 0.55%)</title><rect x="1176.0" y="979.0" width="6.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.0" y="990.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.03%)</title><rect x="1176.0" y="963.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.0" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.03%)</title><rect x="1176.3" y="963.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.3" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (4 samples, 0.12%)</title><rect x="1176.7" y="963.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.7" y="974.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.03%)</title><rect x="1177.4" y="947.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1180.4" y="958.0"></text>
</g>
<g>
<title>rRegPOper::type() const (1 samples, 0.03%)</title><rect x="1177.4" y="931.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1180.4" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.03%)</title><rect x="1177.7" y="947.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.7" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (1 samples, 0.03%)</title><rect x="1177.7" y="931.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.7" y="942.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.03%)</title><rect x="1177.7" y="915.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1180.7" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (3 samples, 0.09%)</title><rect x="1178.0" y="963.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.0" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.03%)</title><rect x="1178.4" y="947.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.4" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.03%)</title><rect x="1178.7" y="947.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.7" y="958.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="1178.7" y="931.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.7" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.03%)</title><rect x="1179.1" y="963.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.1" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.03%)</title><rect x="1179.4" y="963.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.4" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.06%)</title><rect x="1179.8" y="963.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.8" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.03%)</title><rect x="1180.1" y="947.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.1" y="958.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.03%)</title><rect x="1180.4" y="963.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.4" y="974.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.03%)</title><rect x="1180.8" y="963.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.8" y="974.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.03%)</title><rect x="1180.8" y="947.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.8" y="958.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (4 samples, 0.12%)</title><rect x="1181.1" y="963.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.1" y="974.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.03%)</title><rect x="1181.1" y="947.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.1" y="958.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (3 samples, 0.09%)</title><rect x="1181.5" y="947.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.5" y="958.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="1182.1" y="931.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.1" y="942.0"></text>
</g>
<g>
<title>Compile::Optimize() (8 samples, 0.23%)</title><rect x="1182.5" y="995.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.5" y="1006.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.03%)</title><rect x="1182.5" y="979.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.5" y="990.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.03%)</title><rect x="1182.5" y="963.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.5" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (4 samples, 0.12%)</title><rect x="1182.8" y="979.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.8" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.03%)</title><rect x="1182.8" y="963.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.8" y="974.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.03%)</title><rect x="1182.8" y="947.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.8" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.03%)</title><rect x="1183.2" y="963.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.2" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (2 samples, 0.06%)</title><rect x="1183.5" y="963.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.5" y="974.0"></text>
</g>
<g>
<title>LoadNNode::Opcode() const (1 samples, 0.03%)</title><rect x="1183.5" y="947.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.5" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (1 samples, 0.03%)</title><rect x="1183.9" y="947.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.9" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (1 samples, 0.03%)</title><rect x="1183.9" y="931.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.9" y="942.0"></text>
</g>
<g>
<title>SubNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1183.9" y="915.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.9" y="926.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.06%)</title><rect x="1184.2" y="979.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.2" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.06%)</title><rect x="1184.2" y="963.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.2" y="974.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.03%)</title><rect x="1184.2" y="947.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.2" y="958.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1184.5" y="947.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.5" y="958.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.03%)</title><rect x="1184.5" y="931.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.5" y="942.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.03%)</title><rect x="1184.5" y="915.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.5" y="926.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.03%)</title><rect x="1184.5" y="899.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.5" y="910.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.03%)</title><rect x="1184.9" y="979.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.9" y="990.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (1 samples, 0.03%)</title><rect x="1184.9" y="963.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.9" y="974.0"></text>
</g>
<g>
<title>PhaseMacroExpand::initialize_object(AllocateNode*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.03%)</title><rect x="1184.9" y="947.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.9" y="958.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="1184.9" y="931.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1187.9" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.14%)</title><rect x="1185.2" y="995.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.2" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.14%)</title><rect x="1185.2" y="979.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.2" y="990.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.14%)</title><rect x="1185.2" y="963.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.2" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.14%)</title><rect x="1185.2" y="947.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.2" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.14%)</title><rect x="1185.2" y="931.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.2" y="942.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.14%)</title><rect x="1185.2" y="915.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.2" y="926.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1185.2" y="899.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.2" y="910.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1185.2" y="883.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.2" y="894.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.03%)</title><rect x="1185.2" y="867.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.2" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.03%)</title><rect x="1185.2" y="851.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.2" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.03%)</title><rect x="1185.2" y="835.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.2" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1185.2" y="819.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.2" y="830.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1185.2" y="803.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.2" y="814.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="1185.2" y="787.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.2" y="798.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.03%)</title><rect x="1185.2" y="771.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.2" y="782.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="1185.2" y="755.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.2" y="766.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1185.2" y="739.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.2" y="750.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1185.2" y="723.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.2" y="734.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1185.2" y="707.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.2" y="718.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1185.2" y="691.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.2" y="702.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1185.2" y="675.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.2" y="686.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.03%)</title><rect x="1185.2" y="659.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.2" y="670.0"></text>
</g>
<g>
<title>SignatureStream::as_symbol(Thread*) (1 samples, 0.03%)</title><rect x="1185.2" y="643.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.2" y="654.0"></text>
</g>
<g>
<title>SymbolTable::lookup(Symbol const*, int, int, Thread*) (1 samples, 0.03%)</title><rect x="1185.2" y="627.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.2" y="638.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.03%)</title><rect x="1185.2" y="611.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.2" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.12%)</title><rect x="1185.6" y="899.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.6" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.12%)</title><rect x="1185.6" y="883.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.6" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.12%)</title><rect x="1185.6" y="867.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.6" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.12%)</title><rect x="1185.6" y="851.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.6" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.12%)</title><rect x="1185.6" y="835.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.6" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.12%)</title><rect x="1185.6" y="819.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.6" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.09%)</title><rect x="1185.6" y="803.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.6" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.09%)</title><rect x="1185.6" y="787.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.6" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.09%)</title><rect x="1185.6" y="771.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.6" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.09%)</title><rect x="1185.6" y="755.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.6" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.09%)</title><rect x="1185.6" y="739.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.6" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.09%)</title><rect x="1185.6" y="723.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.6" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.09%)</title><rect x="1185.6" y="707.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.6" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.09%)</title><rect x="1185.6" y="691.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.6" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="1185.9" y="675.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="1185.9" y="659.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.9" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="1185.9" y="643.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.9" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.06%)</title><rect x="1185.9" y="627.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.9" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="1185.9" y="611.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.9" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="1185.9" y="595.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.9" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="1185.9" y="579.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.9" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="1185.9" y="563.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.9" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="1185.9" y="547.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.9" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.06%)</title><rect x="1185.9" y="531.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.9" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="1185.9" y="515.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.9" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="1185.9" y="499.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.9" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="1185.9" y="483.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.9" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="1185.9" y="467.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.9" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="1185.9" y="451.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.9" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.06%)</title><rect x="1185.9" y="435.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.9" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="1185.9" y="419.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.9" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="1185.9" y="403.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.9" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="1185.9" y="387.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.9" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="1185.9" y="371.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.9" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="1185.9" y="355.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.9" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.06%)</title><rect x="1185.9" y="339.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.9" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.06%)</title><rect x="1185.9" y="323.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.9" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.06%)</title><rect x="1185.9" y="307.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.9" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.06%)</title><rect x="1185.9" y="291.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.9" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.06%)</title><rect x="1185.9" y="275.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.9" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.06%)</title><rect x="1185.9" y="259.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.9" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1185.9" y="243.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.9" y="254.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1185.9" y="227.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.9" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1185.9" y="211.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.9" y="222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1185.9" y="195.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.9" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1185.9" y="179.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.9" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1185.9" y="163.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.9" y="174.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1185.9" y="147.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.9" y="158.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1185.9" y="131.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.9" y="142.0"></text>
</g>
<g>
<title>JVMState::of_depth(int) const (1 samples, 0.03%)</title><rect x="1185.9" y="115.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.9" y="126.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.03%)</title><rect x="1186.2" y="243.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.2" y="254.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.03%)</title><rect x="1186.2" y="227.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.2" y="238.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.03%)</title><rect x="1186.2" y="211.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.2" y="222.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.03%)</title><rect x="1186.2" y="195.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.2" y="206.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.03%)</title><rect x="1186.2" y="179.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.2" y="190.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool) (1 samples, 0.03%)</title><rect x="1186.2" y="163.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.2" y="174.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1186.2" y="147.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.2" y="158.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1186.2" y="131.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.2" y="142.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.138] (1 samples, 0.03%)</title><rect x="1186.2" y="115.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.2" y="126.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1186.2" y="99.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.2" y="110.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.131] (1 samples, 0.03%)</title><rect x="1186.2" y="83.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.2" y="94.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1186.2" y="67.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.2" y="78.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1186.6" y="803.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.6" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1186.6" y="787.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.6" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1186.6" y="771.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.6" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1186.6" y="755.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.6" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1186.6" y="739.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.6" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1186.6" y="723.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.6" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1186.6" y="707.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.6" y="718.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1186.6" y="691.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.6" y="702.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1186.6" y="675.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.6" y="686.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1186.6" y="659.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.6" y="670.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.03%)</title><rect x="1186.6" y="643.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.6" y="654.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.03%)</title><rect x="1186.6" y="627.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.6" y="638.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.03%)</title><rect x="1186.6" y="611.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.6" y="622.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1186.6" y="595.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.6" y="606.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1186.6" y="579.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.6" y="590.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="1186.6" y="563.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.6" y="574.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.03%)</title><rect x="1186.6" y="547.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.6" y="558.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="1186.6" y="531.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.6" y="542.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1186.6" y="515.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.6" y="526.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1186.6" y="499.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.6" y="510.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1186.6" y="483.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.6" y="494.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1186.6" y="467.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.6" y="478.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1186.6" y="451.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.6" y="462.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.03%)</title><rect x="1186.6" y="435.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.6" y="446.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.03%)</title><rect x="1186.6" y="419.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.6" y="430.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (3 samples, 0.09%)</title><rect x="1186.9" y="1027.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.9" y="1038.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (3 samples, 0.09%)</title><rect x="1186.9" y="1011.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.9" y="1022.0"></text>
</g>
<g>
<title>Compilation::compile_method() (3 samples, 0.09%)</title><rect x="1186.9" y="995.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.9" y="1006.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (3 samples, 0.09%)</title><rect x="1186.9" y="979.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.9" y="990.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (2 samples, 0.06%)</title><rect x="1186.9" y="963.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.9" y="974.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (2 samples, 0.06%)</title><rect x="1186.9" y="947.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.9" y="958.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (2 samples, 0.06%)</title><rect x="1186.9" y="931.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.9" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (2 samples, 0.06%)</title><rect x="1186.9" y="915.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.9" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.06%)</title><rect x="1186.9" y="899.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.9" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.06%)</title><rect x="1186.9" y="883.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.9" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1186.9" y="867.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.9" y="878.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.03%)</title><rect x="1186.9" y="851.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.9" y="862.0"></text>
</g>
<g>
<title>ciField::will_link(ciMethod*, Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1186.9" y="835.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.9" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1187.3" y="867.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.3" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1187.3" y="851.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.3" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1187.3" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.3" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.03%)</title><rect x="1187.3" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.3" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.03%)</title><rect x="1187.3" y="803.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.3" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1187.3" y="787.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.3" y="798.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (1 samples, 0.03%)</title><rect x="1187.3" y="771.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.3" y="782.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name(ciKlass*, ciSymbol*, bool) (1 samples, 0.03%)</title><rect x="1187.3" y="755.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.3" y="766.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.03%)</title><rect x="1187.3" y="739.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.3" y="750.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1187.3" y="723.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.3" y="734.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.03%)</title><rect x="1187.6" y="963.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.6" y="974.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.03%)</title><rect x="1187.6" y="947.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.6" y="958.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (1 samples, 0.03%)</title><rect x="1187.6" y="931.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.6" y="942.0"></text>
</g>
<g>
<title>LinearScan::add_use(int, int, int, IntervalUseKind, BasicType) (1 samples, 0.03%)</title><rect x="1187.6" y="915.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.6" y="926.0"></text>
</g>
<g>
<title>Interval::add_range(int, int) (1 samples, 0.03%)</title><rect x="1187.6" y="899.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.6" y="910.0"></text>
</g>
<g>
<title>VMThread::run() (5 samples, 0.14%)</title><rect x="1188.0" y="1091.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.0" y="1102.0"></text>
</g>
<g>
<title>VMThread::loop() (5 samples, 0.14%)</title><rect x="1188.0" y="1075.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.0" y="1086.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (2 samples, 0.06%)</title><rect x="1188.0" y="1059.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.0" y="1070.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.03%)</title><rect x="1188.3" y="1043.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.3" y="1054.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (1 samples, 0.03%)</title><rect x="1188.3" y="1027.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.3" y="1038.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.03%)</title><rect x="1188.3" y="1011.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.3" y="1022.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (1 samples, 0.03%)</title><rect x="1188.3" y="995.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1191.3" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1188.3" y="979.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1191.3" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1188.3" y="963.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1191.3" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="1188.3" y="947.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1191.3" y="958.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="1188.3" y="931.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1191.3" y="942.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="1188.3" y="915.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1191.3" y="926.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="1188.3" y="899.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1191.3" y="910.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.54] (1 samples, 0.03%)</title><rect x="1188.6" y="1059.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.6" y="1070.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.03%)</title><rect x="1188.6" y="1043.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.6" y="1054.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.03%)</title><rect x="1188.6" y="1027.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.6" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.03%)</title><rect x="1188.6" y="1011.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.6" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (1 samples, 0.03%)</title><rect x="1188.6" y="995.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.6" y="1006.0"></text>
</g>
<g>
<title>WeakProcessor::weak_oops_do(BoolObjectClosure*, OopClosure*) (1 samples, 0.03%)</title><rect x="1188.6" y="979.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.6" y="990.0"></text>
</g>
<g>
<title>JvmtiTagMap::weak_oops_do(BoolObjectClosure*, OopClosure*) (1 samples, 0.03%)</title><rect x="1188.6" y="963.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.6" y="974.0"></text>
</g>
<g>
<title>JvmtiTagMap::do_weak_oops(BoolObjectClosure*, OopClosure*) (1 samples, 0.03%)</title><rect x="1188.6" y="947.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.6" y="958.0"></text>
</g>
<g>
<title>__GI_sched_yield (2 samples, 0.06%)</title><rect x="1189.0" y="1059.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1192.0" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="1189.0" y="1043.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1192.0" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.06%)</title><rect x="1189.0" y="1027.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1192.0" y="1038.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.03%)</title><rect x="1189.7" y="1091.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.7" y="1102.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (1 samples, 0.03%)</title><rect x="1189.7" y="1075.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.7" y="1086.0"></text>
</g>
</g>
</svg>
