<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1093"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1093"> </text>
<g id="frames">
<g>
<title>all (4,081 samples, 100.00%)</title><rect x="10.0" y="1059.0" width="1180.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="1070.0">all</text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (2 samples, 0.05%)</title><rect x="10.0" y="1043.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.0" y="1054.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.02%)</title><rect x="10.6" y="1043.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.6" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="10.9" y="1043.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.9" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.05%)</title><rect x="10.9" y="1027.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.9" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="10.9" y="1011.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.9" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="10.9" y="995.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.9" y="1006.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="10.9" y="979.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.9" y="990.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="11.2" y="979.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="14.2" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="11.4" y="1043.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="14.4" y="1054.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.05%)</title><rect x="11.4" y="1027.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.4" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="11.4" y="1011.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="14.4" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="11.4" y="995.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="14.4" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="11.4" y="979.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.4" y="990.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="11.4" y="963.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.4" y="974.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="11.4" y="947.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="14.4" y="958.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.02%)</title><rect x="11.4" y="931.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="14.4" y="942.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.02%)</title><rect x="11.7" y="979.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="14.7" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (7 samples, 0.17%)</title><rect x="12.0" y="1043.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.0" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.15%)</title><rect x="12.3" y="1027.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.3" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.12%)</title><rect x="12.6" y="1011.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="15.6" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.12%)</title><rect x="12.6" y="995.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.6" y="1006.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="12.9" y="979.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="15.9" y="990.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.02%)</title><rect x="12.9" y="963.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="15.9" y="974.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.02%)</title><rect x="13.2" y="979.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="16.2" y="990.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="13.5" y="979.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="16.5" y="990.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.02%)</title><rect x="13.5" y="963.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="16.5" y="974.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="13.5" y="947.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.5" y="958.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="13.8" y="979.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="16.8" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (243 samples, 5.95%)</title><rect x="14.0" y="1043.0" width="70.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="17.0" y="1054.0">SharedRu..</text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (241 samples, 5.91%)</title><rect x="14.6" y="1027.0" width="69.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="17.6" y="1038.0">ObjectS..</text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.02%)</title><rect x="14.9" y="1011.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="17.9" y="1022.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (1 samples, 0.02%)</title><rect x="15.2" y="1011.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="18.2" y="1022.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (1 samples, 0.02%)</title><rect x="15.5" y="1011.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="18.5" y="1022.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (169 samples, 4.14%)</title><rect x="15.8" y="1011.0" width="48.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="18.8" y="1022.0">Obje..</text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (143 samples, 3.50%)</title><rect x="15.8" y="995.0" width="41.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="18.8" y="1006.0">Obj..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="56.8" y="979.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="59.8" y="990.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="56.8" y="963.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="59.8" y="974.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="56.8" y="947.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="59.8" y="958.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="56.8" y="931.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="59.8" y="942.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="56.8" y="915.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="59.8" y="926.0"></text>
</g>
<g>
<title>SpinPause (26 samples, 0.64%)</title><rect x="57.1" y="995.0" width="7.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="60.1" y="1006.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.97] (68 samples, 1.67%)</title><rect x="64.6" y="1011.0" width="19.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="67.6" y="1022.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (65 samples, 1.59%)</title><rect x="64.9" y="995.0" width="18.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="67.9" y="1006.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (50 samples, 1.23%)</title><rect x="65.2" y="979.0" width="14.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="68.2" y="990.0"></text>
</g>
<g>
<title>SpinPause (8 samples, 0.20%)</title><rect x="79.7" y="979.0" width="2.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="82.7" y="990.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.15%)</title><rect x="82.0" y="979.0" width="1.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="85.0" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="82.6" y="963.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="85.6" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.10%)</title><rect x="82.6" y="947.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="85.6" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.07%)</title><rect x="82.9" y="931.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="85.9" y="942.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="83.2" y="915.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="86.2" y="926.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="83.2" y="899.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="86.2" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.75] (1 samples, 0.02%)</title><rect x="83.7" y="995.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="86.7" y="1006.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="84.0" y="995.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="87.0" y="1006.0"></text>
</g>
<g>
<title>[not_walkable] (45 samples, 1.10%)</title><rect x="84.3" y="1043.0" width="13.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="87.3" y="1054.0"></text>
</g>
<g>
<title>[not_walkable_Java] (13 samples, 0.32%)</title><rect x="97.3" y="1043.0" width="3.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="100.3" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.12%)</title><rect x="97.3" y="1027.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="100.3" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (5 samples, 0.12%)</title><rect x="97.3" y="1011.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="100.3" y="1022.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.05%)</title><rect x="97.3" y="995.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="100.3" y="1006.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.05%)</title><rect x="97.3" y="979.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="100.3" y="990.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.07%)</title><rect x="97.9" y="995.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="100.9" y="1006.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.02%)</title><rect x="97.9" y="979.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="100.9" y="990.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.05%)</title><rect x="98.2" y="979.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="101.2" y="990.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="98.5" y="963.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="101.5" y="974.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="98.5" y="947.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="101.5" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.07%)</title><rect x="98.8" y="1027.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="101.8" y="1038.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (2 samples, 0.05%)</title><rect x="98.8" y="1011.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="101.8" y="1022.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (1 samples, 0.02%)</title><rect x="99.3" y="1011.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="102.3" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="99.6" y="1027.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="102.6" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (3 samples, 0.07%)</title><rect x="99.9" y="1027.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="102.9" y="1038.0"></text>
</g>
<g>
<title>__GI___clock_gettime (1 samples, 0.02%)</title><rect x="100.8" y="1027.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="103.8" y="1038.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="100.8" y="1011.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="103.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.34%)</title><rect x="101.1" y="1043.0" width="4.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="104.1" y="1054.0"></text>
</g>
<g>
<title>__GI___clock_gettime (1 samples, 0.02%)</title><rect x="101.1" y="1027.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="104.1" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (5 samples, 0.12%)</title><rect x="101.4" y="1027.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="104.4" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="101.9" y="1011.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="104.9" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="101.9" y="995.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="104.9" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.07%)</title><rect x="101.9" y="979.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="104.9" y="990.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="101.9" y="963.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="104.9" y="974.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.07%)</title><rect x="101.9" y="947.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="104.9" y="958.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="102.5" y="931.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="105.5" y="942.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="102.5" y="915.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="105.5" y="926.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="102.5" y="899.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="105.5" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.12%)</title><rect x="102.8" y="1027.0" width="1.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="105.8" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="103.4" y="1011.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="106.4" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="103.4" y="995.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="106.4" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="103.4" y="979.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="106.4" y="990.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="103.4" y="963.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="106.4" y="974.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.05%)</title><rect x="103.4" y="947.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="106.4" y="958.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.05%)</title><rect x="103.4" y="931.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="106.4" y="942.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="103.4" y="915.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="106.4" y="926.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="103.4" y="899.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="106.4" y="910.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="104.0" y="979.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="107.0" y="990.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="104.3" y="1027.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="107.3" y="1038.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (1 samples, 0.02%)</title><rect x="104.6" y="1027.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="107.6" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="104.6" y="1011.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="107.6" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="104.6" y="995.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="107.6" y="1006.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.02%)</title><rect x="104.8" y="1027.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="107.8" y="1038.0"></text>
</g>
<g>
<title>[unknown_Java] (69 samples, 1.69%)</title><rect x="105.1" y="1043.0" width="20.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="108.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="117.6" y="1027.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="120.6" y="1038.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.02%)</title><rect x="117.6" y="1011.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="120.6" y="1022.0"></text>
</g>
<g>
<title>__GI___clock_gettime (1 samples, 0.02%)</title><rect x="117.9" y="1027.0" width="0.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="120.9" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (21 samples, 0.51%)</title><rect x="118.1" y="1027.0" width="6.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="121.1" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.42%)</title><rect x="119.3" y="1011.0" width="4.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="122.3" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.42%)</title><rect x="119.3" y="995.0" width="4.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="122.3" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.39%)</title><rect x="119.6" y="979.0" width="4.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="122.6" y="990.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.39%)</title><rect x="119.6" y="963.0" width="4.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="122.6" y="974.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.39%)</title><rect x="119.6" y="947.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="122.6" y="958.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="120.2" y="931.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="123.2" y="942.0"></text>
</g>
<g>
<title>wake_up_q (13 samples, 0.32%)</title><rect x="120.5" y="931.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="123.5" y="942.0"></text>
</g>
<g>
<title>try_to_wake_up (13 samples, 0.32%)</title><rect x="120.5" y="915.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="123.5" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.29%)</title><rect x="120.7" y="899.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="123.7" y="910.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.07%)</title><rect x="124.2" y="1027.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="127.2" y="1038.0"></text>
</g>
<g>
<title>_IO_getline_info (1 samples, 0.02%)</title><rect x="125.1" y="1043.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="128.1" y="1054.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.02%)</title><rect x="125.4" y="1043.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="128.4" y="1054.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="125.7" y="1043.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="128.7" y="1054.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="125.7" y="1027.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="128.7" y="1038.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="125.7" y="1011.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="128.7" y="1022.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="125.7" y="995.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="128.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,995 samples, 48.89%)</title><rect x="125.9" y="1043.0" width="576.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.9" y="1054.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,995 samples, 48.89%)</title><rect x="125.9" y="1027.0" width="576.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.9" y="1038.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,995 samples, 48.89%)</title><rect x="125.9" y="1011.0" width="576.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="128.9" y="1022.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (644 samples, 15.78%)</title><rect x="127.4" y="995.0" width="186.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="130.4" y="1006.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (644 samples, 15.78%)</title><rect x="127.4" y="979.0" width="186.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.4" y="990.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (642 samples, 15.73%)</title><rect x="127.7" y="963.0" width="185.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="130.7" y="974.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.05%)</title><rect x="127.7" y="947.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="130.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="128.0" y="931.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.02%)</title><rect x="128.0" y="915.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1 samples, 0.02%)</title><rect x="128.0" y="899.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="131.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.02%)</title><rect x="128.0" y="883.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.0" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="128.0" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="131.0" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="128.0" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/1711595431.apply (640 samples, 15.68%)</title><rect x="128.3" y="947.0" width="185.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.3" y="958.0">jdk/internal/net/http/Mu..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (640 samples, 15.68%)</title><rect x="128.3" y="931.0" width="185.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.3" y="942.0">jdk/internal/net/http/Mu..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (640 samples, 15.68%)</title><rect x="128.3" y="915.0" width="185.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.3" y="926.0">jdk/internal/net/http/Mu..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (628 samples, 15.39%)</title><rect x="128.8" y="899.0" width="181.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="131.8" y="910.0">jdk/internal/net/http/E..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (628 samples, 15.39%)</title><rect x="128.8" y="883.0" width="181.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.8" y="894.0">jdk/internal/net/http/E..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (628 samples, 15.39%)</title><rect x="128.8" y="867.0" width="181.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="131.8" y="878.0">jdk/internal/net/http/E..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (136 samples, 3.33%)</title><rect x="129.4" y="851.0" width="39.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.4" y="862.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (136 samples, 3.33%)</title><rect x="129.4" y="835.0" width="39.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.4" y="846.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (135 samples, 3.31%)</title><rect x="129.7" y="819.0" width="39.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.7" y="830.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.10%)</title><rect x="129.7" y="803.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.10%)</title><rect x="129.7" y="787.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (4 samples, 0.10%)</title><rect x="129.7" y="771.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="132.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (4 samples, 0.10%)</title><rect x="129.7" y="755.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="132.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="129.7" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="132.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="129.7" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.07%)</title><rect x="130.0" y="739.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$174/1093022843.apply (2 samples, 0.05%)</title><rect x="130.3" y="723.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="133.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$174/1093022843.apply (131 samples, 3.21%)</title><rect x="130.9" y="803.0" width="37.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="133.9" y="814.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (130 samples, 3.19%)</title><rect x="131.2" y="787.0" width="37.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="134.2" y="798.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (130 samples, 3.19%)</title><rect x="131.2" y="771.0" width="37.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.2" y="782.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/1035318298.apply (130 samples, 3.19%)</title><rect x="131.2" y="755.0" width="37.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.2" y="766.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (128 samples, 3.14%)</title><rect x="131.7" y="739.0" width="37.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="134.7" y="750.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.02%)</title><rect x="131.7" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.02%)</title><rect x="131.7" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.02%)</title><rect x="131.7" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="131.7" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="134.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="131.7" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="134.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.02%)</title><rect x="131.7" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="134.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.02%)</title><rect x="131.7" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="134.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.02%)</title><rect x="131.7" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (127 samples, 3.11%)</title><rect x="132.0" y="723.0" width="36.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.0" y="734.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (115 samples, 2.82%)</title><rect x="132.0" y="707.0" width="33.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.0" y="718.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (115 samples, 2.82%)</title><rect x="132.0" y="691.0" width="33.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="135.0" y="702.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.10%)</title><rect x="132.0" y="675.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$189/1784125001.apply (2 samples, 0.05%)</title><rect x="132.3" y="659.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="135.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$190/1202798011.apply (1 samples, 0.02%)</title><rect x="132.9" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$189/1784125001.apply (110 samples, 2.70%)</title><rect x="133.2" y="675.0" width="31.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.2" y="686.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (110 samples, 2.70%)</title><rect x="133.2" y="659.0" width="31.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.2" y="670.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="134.0" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="137.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="134.0" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="137.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (6 samples, 0.15%)</title><rect x="134.3" y="643.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (6 samples, 0.15%)</title><rect x="134.3" y="627.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="137.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.15%)</title><rect x="134.3" y="611.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="137.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.15%)</title><rect x="134.3" y="595.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="137.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.15%)</title><rect x="134.3" y="579.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.15%)</title><rect x="134.3" y="563.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="137.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5 samples, 0.12%)</title><rect x="134.3" y="547.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="137.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (3 samples, 0.07%)</title><rect x="134.9" y="531.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="137.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.02%)</title><rect x="134.9" y="515.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="137.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.02%)</title><rect x="134.9" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.02%)</title><rect x="134.9" y="483.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="137.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.05%)</title><rect x="135.2" y="515.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.05%)</title><rect x="135.2" y="499.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (2 samples, 0.05%)</title><rect x="135.2" y="483.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (2 samples, 0.05%)</title><rect x="135.2" y="467.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (2 samples, 0.05%)</title><rect x="135.2" y="451.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.2" y="462.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (2 samples, 0.05%)</title><rect x="135.2" y="435.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="138.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.05%)</title><rect x="135.2" y="419.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.2" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.05%)</title><rect x="135.2" y="403.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.2" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.05%)</title><rect x="135.2" y="387.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.2" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (2 samples, 0.05%)</title><rect x="135.2" y="371.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (2 samples, 0.05%)</title><rect x="135.2" y="355.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.2" y="366.0"></text>
</g>
<g>
<title>.annobin_writev.c (2 samples, 0.05%)</title><rect x="135.2" y="339.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="138.2" y="350.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="135.2" y="323.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="138.2" y="334.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="135.2" y="307.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="138.2" y="318.0"></text>
</g>
<g>
<title>do_writev (2 samples, 0.05%)</title><rect x="135.2" y="291.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="138.2" y="302.0"></text>
</g>
<g>
<title>vfs_writev (2 samples, 0.05%)</title><rect x="135.2" y="275.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="138.2" y="286.0"></text>
</g>
<g>
<title>do_iter_write (2 samples, 0.05%)</title><rect x="135.2" y="259.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="138.2" y="270.0"></text>
</g>
<g>
<title>do_iter_readv_writev (2 samples, 0.05%)</title><rect x="135.2" y="243.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="138.2" y="254.0"></text>
</g>
<g>
<title>sock_write_iter (2 samples, 0.05%)</title><rect x="135.2" y="227.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="138.2" y="238.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.02%)</title><rect x="135.5" y="211.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="138.5" y="222.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.02%)</title><rect x="135.5" y="195.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="138.5" y="206.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.02%)</title><rect x="135.5" y="179.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="138.5" y="190.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.02%)</title><rect x="135.5" y="163.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="138.5" y="174.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="135.5" y="147.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="138.5" y="158.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="135.5" y="131.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="138.5" y="142.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="135.5" y="115.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="138.5" y="126.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.02%)</title><rect x="135.5" y="99.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="138.5" y="110.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="135.5" y="83.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="138.5" y="94.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="135.5" y="67.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="138.5" y="78.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="135.5" y="51.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="138.5" y="62.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="135.5" y="35.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="138.5" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="135.8" y="547.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="138.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (34 samples, 0.83%)</title><rect x="136.1" y="643.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (34 samples, 0.83%)</title><rect x="136.1" y="627.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (7 samples, 0.17%)</title><rect x="136.4" y="611.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="139.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5 samples, 0.12%)</title><rect x="136.9" y="595.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="139.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (5 samples, 0.12%)</title><rect x="136.9" y="579.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="139.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.02%)</title><rect x="136.9" y="563.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.02%)</title><rect x="136.9" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="139.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (4 samples, 0.10%)</title><rect x="137.2" y="563.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (26 samples, 0.64%)</title><rect x="138.4" y="611.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (26 samples, 0.64%)</title><rect x="138.4" y="595.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="141.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (24 samples, 0.59%)</title><rect x="138.4" y="579.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="141.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (23 samples, 0.56%)</title><rect x="138.4" y="563.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (23 samples, 0.56%)</title><rect x="138.4" y="547.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.4" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="138.7" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="141.7" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="138.7" y="515.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="141.7" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="138.7" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="141.7" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="138.7" y="483.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="141.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.02%)</title><rect x="138.7" y="467.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="141.7" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (21 samples, 0.51%)</title><rect x="139.0" y="531.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="142.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (15 samples, 0.37%)</title><rect x="140.7" y="515.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.7" y="526.0"></text>
</g>
<g>
<title>__libc_write (14 samples, 0.34%)</title><rect x="140.7" y="499.0" width="4.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="143.7" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.29%)</title><rect x="141.3" y="483.0" width="3.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="144.3" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.29%)</title><rect x="141.3" y="467.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="144.3" y="478.0"></text>
</g>
<g>
<title>ksys_write (12 samples, 0.29%)</title><rect x="141.3" y="451.0" width="3.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="144.3" y="462.0"></text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.12%)</title><rect x="141.3" y="435.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="144.3" y="446.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.12%)</title><rect x="141.3" y="419.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="144.3" y="430.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.10%)</title><rect x="141.6" y="403.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="144.6" y="414.0"></text>
</g>
<g>
<title>vfs_write (7 samples, 0.17%)</title><rect x="142.7" y="435.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="145.7" y="446.0"></text>
</g>
<g>
<title>new_sync_write (5 samples, 0.12%)</title><rect x="143.0" y="419.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="146.0" y="430.0"></text>
</g>
<g>
<title>pipe_write (5 samples, 0.12%)</title><rect x="143.0" y="403.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="146.0" y="414.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.07%)</title><rect x="143.0" y="387.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="146.0" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="143.0" y="371.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="146.0" y="382.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.02%)</title><rect x="143.9" y="387.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="146.9" y="398.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="143.9" y="371.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="146.9" y="382.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.02%)</title><rect x="144.2" y="387.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="147.2" y="398.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.02%)</title><rect x="144.5" y="419.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="147.5" y="430.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.02%)</title><rect x="144.5" y="403.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="147.5" y="414.0"></text>
</g>
<g>
<title>__inode_security_revalidate (1 samples, 0.02%)</title><rect x="144.5" y="387.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="147.5" y="398.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="144.7" y="499.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="147.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (1 samples, 0.02%)</title><rect x="145.0" y="563.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="148.0" y="574.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="145.0" y="547.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="148.0" y="558.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.02%)</title><rect x="145.0" y="531.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="148.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.02%)</title><rect x="145.3" y="579.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (1 samples, 0.02%)</title><rect x="145.6" y="579.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="148.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (66 samples, 1.62%)</title><rect x="145.9" y="643.0" width="19.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.9" y="654.0"></text>
</g>
<g>
<title>java/lang/Long.toString (1 samples, 0.02%)</title><rect x="145.9" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.9" y="638.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1 samples, 0.02%)</title><rect x="145.9" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="148.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="146.2" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.2" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="146.2" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="149.2" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.02%)</title><rect x="146.2" y="595.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.2" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.newCapacity (1 samples, 0.02%)</title><rect x="146.2" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.02%)</title><rect x="146.5" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.5" y="638.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.isLatin1 (1 samples, 0.02%)</title><rect x="146.5" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="149.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (46 samples, 1.13%)</title><rect x="146.8" y="627.0" width="13.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="146.8" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.8" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="146.8" y="595.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.8" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.isLatin1 (1 samples, 0.02%)</title><rect x="146.8" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="149.8" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.02%)</title><rect x="147.1" y="611.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="150.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (3 samples, 0.07%)</title><rect x="147.3" y="611.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.3" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.07%)</title><rect x="147.3" y="595.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="150.3" y="606.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.07%)</title><rect x="147.3" y="579.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.3" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.07%)</title><rect x="147.3" y="563.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.3" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.05%)</title><rect x="147.6" y="547.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.6" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.02%)</title><rect x="147.9" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="150.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (19 samples, 0.47%)</title><rect x="148.2" y="611.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="149.9" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="152.9" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="149.9" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.9" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.02%)</title><rect x="149.9" y="563.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="149.9" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="152.9" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.02%)</title><rect x="150.2" y="595.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.2" y="606.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.02%)</title><rect x="150.2" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.2" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.02%)</title><rect x="150.2" y="563.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.2" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.02%)</title><rect x="150.2" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.2" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.02%)</title><rect x="150.2" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.2" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.02%)</title><rect x="150.2" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.2" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (1 samples, 0.02%)</title><rect x="150.5" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="153.5" y="606.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="150.5" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.5" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (1 samples, 0.02%)</title><rect x="150.5" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="153.5" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.02%)</title><rect x="150.5" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.5" y="558.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$203/1479694379.test (8 samples, 0.20%)</title><rect x="150.8" y="595.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.8" y="606.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (7 samples, 0.17%)</title><rect x="151.1" y="579.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/1464555023.test (6 samples, 0.15%)</title><rect x="151.4" y="563.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="154.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (6 samples, 0.15%)</title><rect x="151.4" y="547.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="154.4" y="558.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/254801937.test (6 samples, 0.15%)</title><rect x="151.4" y="531.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.4" y="542.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (6 samples, 0.15%)</title><rect x="151.4" y="515.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="154.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/270056930.test (6 samples, 0.15%)</title><rect x="151.4" y="499.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (6 samples, 0.15%)</title><rect x="151.4" y="483.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="154.4" y="494.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.15%)</title><rect x="151.4" y="467.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.4" y="478.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.15%)</title><rect x="151.4" y="451.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="154.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.15%)</title><rect x="151.4" y="435.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="154.4" y="446.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.07%)</title><rect x="151.4" y="419.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.4" y="430.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.07%)</title><rect x="151.4" y="403.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.4" y="414.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.02%)</title><rect x="151.7" y="387.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.7" y="398.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="152.0" y="387.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.0" y="398.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.02%)</title><rect x="152.0" y="371.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="155.0" y="382.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.07%)</title><rect x="152.3" y="419.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="155.3" y="430.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (3 samples, 0.07%)</title><rect x="152.3" y="403.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.3" y="414.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.02%)</title><rect x="152.3" y="387.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.3" y="398.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="152.5" y="387.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="155.5" y="398.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="153.1" y="595.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="156.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (22 samples, 0.54%)</title><rect x="153.7" y="611.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.7" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (22 samples, 0.54%)</title><rect x="153.7" y="595.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.7" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (22 samples, 0.54%)</title><rect x="153.7" y="579.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="156.7" y="590.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="154.0" y="563.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="157.0" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (20 samples, 0.49%)</title><rect x="154.3" y="563.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.3" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.accept (19 samples, 0.47%)</title><rect x="154.6" y="547.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.6" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (18 samples, 0.44%)</title><rect x="154.9" y="531.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.9" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (9 samples, 0.22%)</title><rect x="155.2" y="515.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.2" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.accept (8 samples, 0.20%)</title><rect x="155.2" y="499.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (8 samples, 0.20%)</title><rect x="155.2" y="483.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="158.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.17%)</title><rect x="155.4" y="467.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.4" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.17%)</title><rect x="155.4" y="451.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.17%)</title><rect x="155.4" y="435.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.4" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.17%)</title><rect x="155.4" y="419.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.4" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.17%)</title><rect x="155.4" y="403.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="158.4" y="414.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.07%)</title><rect x="155.7" y="387.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="158.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$62/938545229.test (3 samples, 0.07%)</title><rect x="156.6" y="387.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="159.6" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="157.5" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.5" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.20%)</title><rect x="157.8" y="515.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="160.8" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.05%)</title><rect x="159.5" y="499.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="162.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (5 samples, 0.12%)</title><rect x="160.1" y="627.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.12%)</title><rect x="160.1" y="611.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="163.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (5 samples, 0.12%)</title><rect x="160.1" y="595.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.1" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/667821226.invoke (5 samples, 0.12%)</title><rect x="160.1" y="579.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="163.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.12%)</title><rect x="160.1" y="563.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="163.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (4 samples, 0.10%)</title><rect x="160.4" y="547.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="163.4" y="558.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.07%)</title><rect x="160.6" y="531.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="163.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1 samples, 0.02%)</title><rect x="161.2" y="515.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="164.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (2 samples, 0.05%)</title><rect x="161.5" y="627.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="164.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (2 samples, 0.05%)</title><rect x="161.5" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="164.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (2 samples, 0.05%)</title><rect x="161.5" y="595.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="164.5" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="161.8" y="579.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="164.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (9 samples, 0.22%)</title><rect x="162.1" y="627.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.1" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="162.1" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="165.1" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="162.1" y="595.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="165.1" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="162.4" y="611.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="165.4" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="162.4" y="595.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.4" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.05%)</title><rect x="162.4" y="579.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="165.4" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="163.0" y="579.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="166.0" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="163.0" y="563.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.0" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.12%)</title><rect x="163.2" y="611.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="164.1" y="595.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="167.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="164.1" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="167.1" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="164.1" y="563.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="167.1" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.02%)</title><rect x="164.4" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="167.4" y="606.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="164.7" y="627.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="167.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$190/1202798011.apply (1 samples, 0.02%)</title><rect x="165.0" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="168.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (9 samples, 0.22%)</title><rect x="165.3" y="707.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="168.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="165.3" y="691.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="168.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="165.3" y="675.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="168.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.internalMemberName (2 samples, 0.05%)</title><rect x="165.3" y="659.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="168.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (5 samples, 0.12%)</title><rect x="165.8" y="691.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="168.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.12%)</title><rect x="165.8" y="675.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="168.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.12%)</title><rect x="165.8" y="659.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="168.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.12%)</title><rect x="165.8" y="643.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.12%)</title><rect x="165.8" y="627.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="168.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.02%)</title><rect x="165.8" y="611.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="168.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="165.8" y="595.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.10%)</title><rect x="166.1" y="611.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="169.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (3 samples, 0.07%)</title><rect x="166.4" y="595.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="169.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.07%)</title><rect x="166.4" y="579.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="169.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.05%)</title><rect x="166.4" y="563.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="169.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (2 samples, 0.05%)</title><rect x="166.4" y="547.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.02%)</title><rect x="166.7" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="169.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1 samples, 0.02%)</title><rect x="166.7" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="169.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1 samples, 0.02%)</title><rect x="166.7" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="169.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (1 samples, 0.02%)</title><rect x="166.7" y="483.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="169.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1 samples, 0.02%)</title><rect x="167.0" y="563.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.02%)</title><rect x="167.0" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.05%)</title><rect x="167.3" y="691.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="170.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.05%)</title><rect x="167.3" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="170.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (2 samples, 0.05%)</title><rect x="167.3" y="659.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="170.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (2 samples, 0.05%)</title><rect x="167.3" y="643.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="170.3" y="654.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (2 samples, 0.05%)</title><rect x="167.3" y="627.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connectAsync (3 samples, 0.07%)</title><rect x="167.9" y="707.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3 samples, 0.07%)</title><rect x="167.9" y="691.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="170.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.07%)</title><rect x="167.9" y="675.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="170.9" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="167.9" y="659.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="170.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="167.9" y="643.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="170.9" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="168.2" y="627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="171.2" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="168.2" y="611.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="171.2" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="168.5" y="595.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="171.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="168.7" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="168.7" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="171.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.02%)</title><rect x="168.7" y="819.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="171.7" y="830.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="168.7" y="803.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="171.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (489 samples, 11.98%)</title><rect x="169.0" y="851.0" width="141.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="172.0" y="862.0">jdk/internal/net/h..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.07%)</title><rect x="169.0" y="835.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="172.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="169.3" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="172.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.05%)</title><rect x="169.3" y="803.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="172.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="169.3" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="172.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="169.3" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.02%)</title><rect x="169.3" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="172.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.02%)</title><rect x="169.3" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="172.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="169.3" y="723.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="172.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="169.3" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.3" y="718.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="169.3" y="691.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="172.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$169/1136125206.accept (1 samples, 0.02%)</title><rect x="169.6" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$1 (1 samples, 0.02%)</title><rect x="169.6" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="172.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (486 samples, 11.91%)</title><rect x="169.9" y="835.0" width="140.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="172.9" y="846.0">jdk/internal/net/h..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (479 samples, 11.74%)</title><rect x="169.9" y="819.0" width="138.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="172.9" y="830.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (479 samples, 11.74%)</title><rect x="169.9" y="803.0" width="138.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="172.9" y="814.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (479 samples, 11.74%)</title><rect x="169.9" y="787.0" width="138.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="172.9" y="798.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.05%)</title><rect x="170.2" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="173.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.05%)</title><rect x="170.2" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2 samples, 0.05%)</title><rect x="170.2" y="739.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="173.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.05%)</title><rect x="170.2" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="173.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.05%)</title><rect x="170.2" y="707.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="173.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$144/821458659.apply (1 samples, 0.02%)</title><rect x="170.5" y="691.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="173.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$144/821458659.apply (476 samples, 11.66%)</title><rect x="170.8" y="771.0" width="137.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.8" y="782.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (476 samples, 11.66%)</title><rect x="170.8" y="755.0" width="137.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.8" y="766.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (476 samples, 11.66%)</title><rect x="170.8" y="739.0" width="137.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="173.8" y="750.0">jdk/internal/net/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (73 samples, 1.79%)</title><rect x="170.8" y="723.0" width="21.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="173.8" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (72 samples, 1.76%)</title><rect x="171.1" y="707.0" width="20.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (72 samples, 1.76%)</title><rect x="171.1" y="691.0" width="20.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="174.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$168/346584917.apply (72 samples, 1.76%)</title><rect x="171.1" y="675.0" width="20.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (72 samples, 1.76%)</title><rect x="171.1" y="659.0" width="20.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="174.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (72 samples, 1.76%)</title><rect x="171.1" y="643.0" width="20.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (72 samples, 1.76%)</title><rect x="171.1" y="627.0" width="20.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (58 samples, 1.42%)</title><rect x="171.1" y="611.0" width="16.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.1" y="622.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (4 samples, 0.10%)</title><rect x="171.1" y="595.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="174.1" y="606.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (4 samples, 0.10%)</title><rect x="171.1" y="579.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.1" y="590.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (4 samples, 0.10%)</title><rect x="171.1" y="563.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.1" y="574.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeBlock (4 samples, 0.10%)</title><rect x="171.1" y="547.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (47 samples, 1.15%)</title><rect x="172.2" y="595.0" width="13.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="175.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (44 samples, 1.08%)</title><rect x="172.2" y="579.0" width="12.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (44 samples, 1.08%)</title><rect x="172.2" y="563.0" width="12.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="175.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (2 samples, 0.05%)</title><rect x="172.5" y="547.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="175.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="172.5" y="531.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="175.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.get$Lambda (2 samples, 0.05%)</title><rect x="172.5" y="515.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="175.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.&lt;init&gt; (2 samples, 0.05%)</title><rect x="172.5" y="499.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="175.5" y="510.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (41 samples, 1.00%)</title><rect x="173.1" y="547.0" width="11.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="176.1" y="558.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (33 samples, 0.81%)</title><rect x="173.4" y="531.0" width="9.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="176.4" y="542.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.02%)</title><rect x="173.9" y="515.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="176.9" y="526.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.05%)</title><rect x="174.2" y="515.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="177.2" y="526.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (2 samples, 0.05%)</title><rect x="174.2" y="499.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="177.2" y="510.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (8 samples, 0.20%)</title><rect x="174.8" y="515.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="177.8" y="526.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.05%)</title><rect x="176.0" y="499.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="179.0" y="510.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.05%)</title><rect x="176.0" y="483.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="179.0" y="494.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.02%)</title><rect x="176.5" y="499.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="179.5" y="510.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.02%)</title><rect x="176.8" y="499.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="179.8" y="510.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.05%)</title><rect x="177.1" y="515.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="180.1" y="526.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.02%)</title><rect x="177.7" y="515.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="180.7" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (1 samples, 0.02%)</title><rect x="178.0" y="515.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="181.0" y="526.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (8 samples, 0.20%)</title><rect x="178.3" y="515.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="181.3" y="526.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.12%)</title><rect x="178.9" y="499.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="181.9" y="510.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.10%)</title><rect x="178.9" y="483.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="181.9" y="494.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.05%)</title><rect x="179.4" y="467.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="182.4" y="478.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.02%)</title><rect x="180.0" y="483.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="183.0" y="494.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="180.3" y="499.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="183.3" y="510.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="180.3" y="483.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="183.3" y="494.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="180.3" y="467.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="183.3" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="180.3" y="451.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="183.3" y="462.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="180.3" y="435.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="183.3" y="446.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="180.3" y="419.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="183.3" y="430.0"></text>
</g>
<g>
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="180.3" y="403.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="183.3" y="414.0"></text>
</g>
<g>
<title>tcp_write_timer_handler (1 samples, 0.02%)</title><rect x="180.3" y="387.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="183.3" y="398.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (8 samples, 0.20%)</title><rect x="180.6" y="515.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="183.6" y="526.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.02%)</title><rect x="181.8" y="499.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="184.8" y="510.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.02%)</title><rect x="181.8" y="483.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="184.8" y="494.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.05%)</title><rect x="182.0" y="499.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="185.0" y="510.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="182.6" y="499.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="185.6" y="510.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (1 samples, 0.02%)</title><rect x="182.9" y="531.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="185.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.run (6 samples, 0.15%)</title><rect x="183.2" y="531.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="186.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (6 samples, 0.15%)</title><rect x="183.2" y="515.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="186.2" y="526.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (6 samples, 0.15%)</title><rect x="183.2" y="499.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.2" y="510.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.02%)</title><rect x="183.5" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.5" y="494.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.02%)</title><rect x="183.5" y="467.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="186.5" y="478.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.02%)</title><rect x="183.5" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="183.5" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="183.5" y="419.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.5" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="183.5" y="403.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.5" y="414.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.10%)</title><rect x="183.8" y="483.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.10%)</title><rect x="183.8" y="467.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.05%)</title><rect x="184.4" y="451.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="187.4" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.05%)</title><rect x="184.4" y="435.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="187.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (3 samples, 0.07%)</title><rect x="184.9" y="579.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="187.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (3 samples, 0.07%)</title><rect x="184.9" y="563.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="187.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (3 samples, 0.07%)</title><rect x="184.9" y="547.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="187.9" y="558.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.05%)</title><rect x="185.2" y="531.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="188.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (7 samples, 0.17%)</title><rect x="185.8" y="595.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="188.8" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="185.8" y="579.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="188.8" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="185.8" y="563.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="188.8" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="185.8" y="547.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="188.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="186.1" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="189.1" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="186.1" y="515.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="189.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="186.1" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="189.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.length (1 samples, 0.02%)</title><rect x="186.4" y="579.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="189.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteBuffer (4 samples, 0.10%)</title><rect x="186.7" y="579.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="189.7" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putInt (2 samples, 0.05%)</title><rect x="186.7" y="563.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putIntUnaligned (2 samples, 0.05%)</title><rect x="186.7" y="547.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="189.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (1 samples, 0.02%)</title><rect x="187.0" y="531.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.0" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putShort (2 samples, 0.05%)</title><rect x="187.2" y="563.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="190.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putShortUnaligned (2 samples, 0.05%)</title><rect x="187.2" y="547.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="190.2" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="187.5" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (14 samples, 0.34%)</title><rect x="187.8" y="611.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="190.8" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.12%)</title><rect x="188.7" y="595.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.7" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.12%)</title><rect x="188.7" y="579.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.7" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.12%)</title><rect x="188.7" y="563.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.7" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.12%)</title><rect x="188.7" y="547.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.7" y="558.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (1 samples, 0.02%)</title><rect x="189.6" y="531.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.6" y="542.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="189.8" y="531.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="192.8" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.15%)</title><rect x="190.1" y="595.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="193.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="190.4" y="579.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="193.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="190.4" y="563.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.4" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.05%)</title><rect x="190.4" y="547.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="193.4" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.05%)</title><rect x="191.0" y="579.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="194.0" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.02%)</title><rect x="191.6" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="194.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (403 samples, 9.88%)</title><rect x="191.9" y="723.0" width="116.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="194.9" y="734.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (402 samples, 9.85%)</title><rect x="191.9" y="707.0" width="116.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="194.9" y="718.0">jdk/internal/n..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.02%)</title><rect x="193.0" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="196.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (5 samples, 0.12%)</title><rect x="193.3" y="691.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="196.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (350 samples, 8.58%)</title><rect x="194.8" y="691.0" width="101.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="197.8" y="702.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (341 samples, 8.36%)</title><rect x="195.1" y="675.0" width="98.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.1" y="686.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (339 samples, 8.31%)</title><rect x="195.6" y="659.0" width="98.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.6" y="670.0">jdk/internal..</text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.10%)</title><rect x="195.9" y="643.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.9" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.07%)</title><rect x="195.9" y="627.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="198.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (3 samples, 0.07%)</title><rect x="195.9" y="611.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="198.9" y="622.0"></text>
</g>
<g>
<title>java/util/Objects.equals (3 samples, 0.07%)</title><rect x="195.9" y="595.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.9" y="606.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (3 samples, 0.07%)</title><rect x="195.9" y="579.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.9" y="590.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (2 samples, 0.05%)</title><rect x="196.2" y="563.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="199.2" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="196.8" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.02%)</title><rect x="196.8" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="199.8" y="622.0"></text>
</g>
<g>
<title>java/util/Objects.hash (1 samples, 0.02%)</title><rect x="196.8" y="595.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="199.8" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (1 samples, 0.02%)</title><rect x="196.8" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="199.8" y="590.0"></text>
</g>
<g>
<title>java/util/LinkedList.removeFirst (1 samples, 0.02%)</title><rect x="197.1" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="200.1" y="654.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (1 samples, 0.02%)</title><rect x="197.4" y="643.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="200.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (332 samples, 8.14%)</title><rect x="197.7" y="643.0" width="96.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="200.7" y="654.0">jdk/interna..</text>
</g>
<g>
<title>java/util/AbstractList.listIterator (332 samples, 8.14%)</title><rect x="197.7" y="627.0" width="96.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="200.7" y="638.0">java/util/A..</text>
</g>
<g>
<title>java/util/LinkedList.listIterator (332 samples, 8.14%)</title><rect x="197.7" y="611.0" width="96.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="200.7" y="622.0">java/util/L..</text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (332 samples, 8.14%)</title><rect x="197.7" y="595.0" width="96.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.7" y="606.0">java/util/L..</text>
</g>
<g>
<title>java/util/LinkedList.node (332 samples, 8.14%)</title><rect x="197.7" y="579.0" width="96.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="200.7" y="590.0">java/util/L..</text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.05%)</title><rect x="292.8" y="563.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="295.8" y="574.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="292.8" y="547.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="295.8" y="558.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.05%)</title><rect x="292.8" y="531.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="295.8" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.05%)</title><rect x="292.8" y="515.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="295.8" y="526.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="292.8" y="499.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="295.8" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="292.8" y="483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="295.8" y="494.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="293.1" y="499.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="296.1" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="293.4" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="296.4" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="293.4" y="547.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="296.4" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="293.4" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="296.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getPlainConnection (2 samples, 0.05%)</title><rect x="293.7" y="675.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="296.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.&lt;init&gt; (2 samples, 0.05%)</title><rect x="293.7" y="659.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.getReceiveBufferSize (2 samples, 0.05%)</title><rect x="293.7" y="643.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (2 samples, 0.05%)</title><rect x="293.7" y="627.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.isFinished (2 samples, 0.05%)</title><rect x="293.7" y="611.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="296.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (6 samples, 0.15%)</title><rect x="294.2" y="675.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="297.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (2 samples, 0.05%)</title><rect x="295.1" y="659.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="298.1" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="295.4" y="643.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="298.4" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.84] (1 samples, 0.02%)</title><rect x="295.4" y="627.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="298.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.isFinished (1 samples, 0.02%)</title><rect x="295.7" y="659.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (42 samples, 1.03%)</title><rect x="296.0" y="691.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="299.0" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (41 samples, 1.00%)</title><rect x="296.3" y="675.0" width="11.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="299.3" y="686.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="296.8" y="659.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="299.8" y="670.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (28 samples, 0.69%)</title><rect x="297.1" y="659.0" width="8.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="300.1" y="670.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.02%)</title><rect x="297.7" y="643.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="300.7" y="654.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.02%)</title><rect x="298.0" y="643.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="301.0" y="654.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (8 samples, 0.20%)</title><rect x="298.3" y="643.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="301.3" y="654.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.02%)</title><rect x="298.6" y="627.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="301.6" y="638.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.07%)</title><rect x="298.9" y="627.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="301.9" y="638.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.02%)</title><rect x="299.1" y="611.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="302.1" y="622.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.02%)</title><rect x="299.4" y="611.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="302.4" y="622.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (3 samples, 0.07%)</title><rect x="299.7" y="627.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="302.7" y="638.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.02%)</title><rect x="300.3" y="611.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="303.3" y="622.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.02%)</title><rect x="300.6" y="643.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="303.6" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (2 samples, 0.05%)</title><rect x="300.9" y="643.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="303.9" y="654.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.02%)</title><rect x="301.5" y="643.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="304.5" y="654.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (9 samples, 0.22%)</title><rect x="301.7" y="643.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="304.7" y="654.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="301.7" y="627.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="304.7" y="638.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (8 samples, 0.20%)</title><rect x="302.0" y="627.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="305.0" y="638.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.10%)</title><rect x="302.3" y="611.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="305.3" y="622.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.05%)</title><rect x="302.9" y="595.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="305.9" y="606.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="303.2" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="306.2" y="590.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="303.2" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="306.2" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="303.2" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="306.2" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="303.2" y="531.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="306.2" y="542.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="303.5" y="611.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="306.5" y="622.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.05%)</title><rect x="303.8" y="611.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="306.8" y="622.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (3 samples, 0.07%)</title><rect x="304.3" y="643.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="307.3" y="654.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.02%)</title><rect x="304.6" y="627.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="307.6" y="638.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="304.9" y="627.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="307.9" y="638.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.02%)</title><rect x="305.2" y="659.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="308.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$147/2025473808.run (9 samples, 0.22%)</title><rect x="305.5" y="659.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (8 samples, 0.20%)</title><rect x="305.8" y="643.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="308.8" y="654.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (8 samples, 0.20%)</title><rect x="305.8" y="627.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="308.8" y="638.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (8 samples, 0.20%)</title><rect x="305.8" y="611.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="308.8" y="622.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (8 samples, 0.20%)</title><rect x="305.8" y="595.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="308.8" y="606.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (8 samples, 0.20%)</title><rect x="305.8" y="579.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="308.8" y="590.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (7 samples, 0.17%)</title><rect x="306.1" y="563.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="309.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.05%)</title><rect x="306.1" y="547.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="309.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.02%)</title><rect x="306.1" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="309.1" y="542.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="306.4" y="531.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="309.4" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="306.4" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="309.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (5 samples, 0.12%)</title><rect x="306.7" y="547.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="309.7" y="558.0"></text>
</g>
<g>
<title>__GI___clock_gettime (1 samples, 0.02%)</title><rect x="307.8" y="531.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="310.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.02%)</title><rect x="308.1" y="707.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="311.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="308.1" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="311.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="308.1" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="311.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.10%)</title><rect x="308.4" y="819.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="311.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.10%)</title><rect x="308.4" y="803.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="311.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.10%)</title><rect x="308.4" y="787.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="311.4" y="798.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.07%)</title><rect x="308.7" y="771.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="311.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (3 samples, 0.07%)</title><rect x="309.6" y="819.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="312.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.05%)</title><rect x="309.6" y="803.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="312.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.05%)</title><rect x="309.6" y="787.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="312.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.05%)</title><rect x="309.6" y="771.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="312.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (1 samples, 0.02%)</title><rect x="310.1" y="803.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="313.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (1 samples, 0.02%)</title><rect x="310.1" y="787.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="313.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1970105444.linkToTargetMethod (1 samples, 0.02%)</title><rect x="310.1" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="313.1" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/561564308.invoke (1 samples, 0.02%)</title><rect x="310.1" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="313.1" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1681140543.invoke (1 samples, 0.02%)</title><rect x="310.1" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="313.1" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1852584274.invoke (1 samples, 0.02%)</title><rect x="310.1" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="313.1" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="310.1" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="313.1" y="718.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.02%)</title><rect x="310.1" y="691.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="313.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="310.1" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="313.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (1 samples, 0.02%)</title><rect x="310.4" y="899.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (9 samples, 0.22%)</title><rect x="310.7" y="899.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (7 samples, 0.17%)</title><rect x="311.3" y="883.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="314.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (1 samples, 0.02%)</title><rect x="311.6" y="867.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="314.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (5 samples, 0.12%)</title><rect x="311.9" y="867.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="314.9" y="878.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (3 samples, 0.07%)</title><rect x="312.4" y="851.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="315.4" y="862.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (2 samples, 0.05%)</title><rect x="312.4" y="835.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="315.4" y="846.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.02%)</title><rect x="313.0" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="316.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$135/1446303203.get (1 samples, 0.02%)</title><rect x="313.3" y="963.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="316.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1 samples, 0.02%)</title><rect x="313.6" y="995.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="316.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.02%)</title><rect x="313.6" y="979.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="313.6" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="316.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.02%)</title><rect x="313.6" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="316.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (12 samples, 0.29%)</title><rect x="313.9" y="995.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="316.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.29%)</title><rect x="313.9" y="979.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="316.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.29%)</title><rect x="313.9" y="963.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="316.9" y="974.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="315.3" y="947.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="318.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1 samples, 0.02%)</title><rect x="315.9" y="947.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="318.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$205/1532762392.run (1 samples, 0.02%)</title><rect x="316.2" y="947.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="319.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.05%)</title><rect x="316.5" y="947.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="319.5" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="317.1" y="947.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="320.1" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="317.1" y="931.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="320.1" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="317.1" y="915.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="320.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (329 samples, 8.06%)</title><rect x="317.4" y="995.0" width="95.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="320.4" y="1006.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (314 samples, 7.69%)</title><rect x="317.7" y="979.0" width="90.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="320.7" y="990.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (251 samples, 6.15%)</title><rect x="317.7" y="963.0" width="72.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="320.7" y="974.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (10 samples, 0.25%)</title><rect x="317.7" y="947.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="320.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (10 samples, 0.25%)</title><rect x="317.7" y="931.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="320.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.25%)</title><rect x="317.7" y="915.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="320.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (30 samples, 0.74%)</title><rect x="320.5" y="947.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="323.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (30 samples, 0.74%)</title><rect x="320.5" y="931.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="323.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 0.47%)</title><rect x="323.1" y="915.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="326.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.47%)</title><rect x="323.1" y="899.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.44%)</title><rect x="323.4" y="883.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="326.4" y="894.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="323.4" y="867.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="326.4" y="878.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="323.7" y="867.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="326.7" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="324.0" y="851.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="327.0" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (15 samples, 0.37%)</title><rect x="324.3" y="867.0" width="4.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="327.3" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.37%)</title><rect x="324.3" y="851.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="327.3" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.37%)</title><rect x="324.3" y="835.0" width="4.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="327.3" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.37%)</title><rect x="324.3" y="819.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="327.3" y="830.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.37%)</title><rect x="324.3" y="803.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="327.3" y="814.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.37%)</title><rect x="324.3" y="787.0" width="4.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="327.3" y="798.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="325.2" y="771.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="328.2" y="782.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.27%)</title><rect x="325.5" y="771.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="328.5" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.25%)</title><rect x="325.7" y="755.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="328.7" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.25%)</title><rect x="325.7" y="739.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="328.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.05%)</title><rect x="328.6" y="915.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (3 samples, 0.07%)</title><rect x="329.2" y="947.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="332.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (3 samples, 0.07%)</title><rect x="329.2" y="931.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="332.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (3 samples, 0.07%)</title><rect x="329.2" y="915.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="332.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (208 samples, 5.10%)</title><rect x="330.1" y="947.0" width="60.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="333.1" y="958.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (198 samples, 4.85%)</title><rect x="333.0" y="931.0" width="57.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="336.0" y="942.0">jdk/in..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.02%)</title><rect x="333.3" y="915.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="336.3" y="926.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="333.6" y="915.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="336.6" y="926.0"></text>
</g>
<g>
<title>Unsafe_Park (77 samples, 1.89%)</title><rect x="333.8" y="915.0" width="22.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="336.8" y="926.0">U..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="334.1" y="899.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="337.1" y="910.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (29 samples, 0.71%)</title><rect x="334.4" y="899.0" width="8.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="337.4" y="910.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="336.7" y="883.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="339.7" y="894.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (9 samples, 0.22%)</title><rect x="337.0" y="883.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="340.0" y="894.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.02%)</title><rect x="339.0" y="867.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="342.0" y="878.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.02%)</title><rect x="339.3" y="867.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="342.3" y="878.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.05%)</title><rect x="339.6" y="883.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="342.6" y="894.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.17%)</title><rect x="340.2" y="883.0" width="2.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="343.2" y="894.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.05%)</title><rect x="342.2" y="883.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="345.2" y="894.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.07%)</title><rect x="342.8" y="899.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="345.8" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.02%)</title><rect x="343.7" y="899.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="346.7" y="910.0"></text>
</g>
<g>
<title>__lll_unlock_wake (32 samples, 0.78%)</title><rect x="344.0" y="899.0" width="9.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="347.0" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.32%)</title><rect x="349.5" y="883.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="352.5" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.32%)</title><rect x="349.5" y="867.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="352.5" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.20%)</title><rect x="350.9" y="851.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="353.9" y="862.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.20%)</title><rect x="350.9" y="835.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="353.9" y="846.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.20%)</title><rect x="350.9" y="819.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="353.9" y="830.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="352.3" y="803.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="355.3" y="814.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="352.3" y="787.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="355.3" y="798.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.05%)</title><rect x="352.6" y="803.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="355.6" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="353.2" y="899.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="356.2" y="910.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="353.5" y="899.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="356.5" y="910.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.07%)</title><rect x="354.1" y="899.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="357.1" y="910.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="354.9" y="899.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="357.9" y="910.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="355.5" y="899.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="358.5" y="910.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="355.8" y="899.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="358.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (114 samples, 2.79%)</title><rect x="356.1" y="915.0" width="33.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="359.1" y="926.0">[u..</text>
</g>
<g>
<title>.annobin_pthread_cond_wait.c (1 samples, 0.02%)</title><rect x="356.1" y="899.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="359.1" y="910.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (2 samples, 0.05%)</title><rect x="356.4" y="899.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="359.4" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_wait (102 samples, 2.50%)</title><rect x="357.0" y="899.0" width="29.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="360.0" y="910.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (80 samples, 1.96%)</title><rect x="363.3" y="883.0" width="23.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="366.3" y="894.0">e..</text>
</g>
<g>
<title>do_syscall_64 (80 samples, 1.96%)</title><rect x="363.3" y="867.0" width="23.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="366.3" y="878.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (70 samples, 1.72%)</title><rect x="366.2" y="851.0" width="20.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="369.2" y="862.0"></text>
</g>
<g>
<title>do_futex (70 samples, 1.72%)</title><rect x="366.2" y="835.0" width="20.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="369.2" y="846.0"></text>
</g>
<g>
<title>futex_wait (65 samples, 1.59%)</title><rect x="367.7" y="819.0" width="18.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="370.7" y="830.0"></text>
</g>
<g>
<title>futex_wait_queue_me (46 samples, 1.13%)</title><rect x="371.1" y="803.0" width="13.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="374.1" y="814.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.05%)</title><rect x="373.2" y="787.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="376.2" y="798.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="373.5" y="771.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="376.5" y="782.0"></text>
</g>
<g>
<title>plist_add (6 samples, 0.15%)</title><rect x="373.7" y="787.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="376.7" y="798.0"></text>
</g>
<g>
<title>__list_add_valid (4 samples, 0.10%)</title><rect x="374.3" y="771.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="377.3" y="782.0"></text>
</g>
<g>
<title>schedule (31 samples, 0.76%)</title><rect x="375.5" y="787.0" width="8.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="378.5" y="798.0"></text>
</g>
<g>
<title>__sched_text_start (28 samples, 0.69%)</title><rect x="376.3" y="771.0" width="8.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="379.3" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (24 samples, 0.59%)</title><rect x="377.5" y="755.0" width="6.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="380.5" y="766.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.05%)</title><rect x="383.9" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="386.9" y="750.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="383.9" y="723.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="386.9" y="734.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.05%)</title><rect x="383.9" y="707.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="386.9" y="718.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.05%)</title><rect x="383.9" y="691.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="386.9" y="702.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.02%)</title><rect x="383.9" y="675.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="386.9" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="383.9" y="659.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="386.9" y="670.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="384.2" y="675.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="387.2" y="686.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="384.2" y="659.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="387.2" y="670.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_r13 (1 samples, 0.02%)</title><rect x="384.2" y="643.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="387.2" y="654.0"></text>
</g>
<g>
<title>futex_wait_setup (7 samples, 0.17%)</title><rect x="384.4" y="803.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="387.4" y="814.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="385.6" y="787.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="388.6" y="798.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="385.9" y="787.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="388.9" y="798.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="385.9" y="771.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="388.9" y="782.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.02%)</title><rect x="386.2" y="787.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="389.2" y="798.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.10%)</title><rect x="386.5" y="899.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="389.5" y="910.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="387.6" y="899.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="390.6" y="910.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="387.9" y="899.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="390.9" y="910.0"></text>
</g>
<g>
<title>update_get_addr (3 samples, 0.07%)</title><rect x="388.2" y="899.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="391.2" y="910.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.02%)</title><rect x="389.1" y="915.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="392.1" y="926.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.07%)</title><rect x="389.4" y="915.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="392.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.10%)</title><rect x="390.2" y="963.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="393.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.10%)</title><rect x="390.2" y="947.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.10%)</title><rect x="390.2" y="931.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="393.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.02%)</title><rect x="391.1" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="394.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.02%)</title><rect x="391.1" y="899.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="394.1" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.02%)</title><rect x="391.1" y="883.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.1" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.02%)</title><rect x="391.1" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="394.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="391.4" y="963.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="394.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (6 samples, 0.15%)</title><rect x="391.7" y="963.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="394.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (6 samples, 0.15%)</title><rect x="391.7" y="947.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="394.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (6 samples, 0.15%)</title><rect x="391.7" y="931.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5 samples, 0.12%)</title><rect x="391.7" y="915.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.12%)</title><rect x="391.7" y="899.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="394.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.12%)</title><rect x="391.7" y="883.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="394.7" y="894.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="391.7" y="867.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="394.7" y="878.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.02%)</title><rect x="391.7" y="851.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="394.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="392.0" y="867.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="395.0" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.10%)</title><rect x="392.0" y="851.0" width="1.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="395.0" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="392.0" y="835.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="395.0" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.10%)</title><rect x="392.0" y="819.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="395.0" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.10%)</title><rect x="392.0" y="803.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="395.0" y="814.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.10%)</title><rect x="392.0" y="787.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="395.0" y="798.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.10%)</title><rect x="392.0" y="771.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="395.0" y="782.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.05%)</title><rect x="392.0" y="755.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="395.0" y="766.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.02%)</title><rect x="392.0" y="739.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="395.0" y="750.0"></text>
</g>
<g>
<title>__list_add_valid (1 samples, 0.02%)</title><rect x="392.0" y="723.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="395.0" y="734.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="392.2" y="739.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="395.2" y="750.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="392.2" y="723.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="395.2" y="734.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.05%)</title><rect x="392.5" y="755.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="395.5" y="766.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="392.5" y="739.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="395.5" y="750.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="392.5" y="723.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="395.5" y="734.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.02%)</title><rect x="392.8" y="739.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="395.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="393.1" y="915.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="396.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (52 samples, 1.27%)</title><rect x="393.4" y="963.0" width="15.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="396.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (52 samples, 1.27%)</title><rect x="393.4" y="947.0" width="15.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="396.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (52 samples, 1.27%)</title><rect x="393.4" y="931.0" width="15.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="396.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (50 samples, 1.23%)</title><rect x="394.0" y="915.0" width="14.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (50 samples, 1.23%)</title><rect x="394.0" y="899.0" width="14.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="397.0" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.15%)</title><rect x="394.3" y="883.0" width="1.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="397.3" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.02%)</title><rect x="394.3" y="867.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="397.3" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.05%)</title><rect x="394.6" y="867.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="397.6" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="395.1" y="867.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="398.1" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="395.7" y="867.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="398.7" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (43 samples, 1.05%)</title><rect x="396.0" y="883.0" width="12.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="399.0" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.93%)</title><rect x="397.5" y="867.0" width="10.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="400.5" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.93%)</title><rect x="397.5" y="851.0" width="10.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="400.5" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (34 samples, 0.83%)</title><rect x="398.6" y="835.0" width="9.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="401.6" y="846.0"></text>
</g>
<g>
<title>do_futex (34 samples, 0.83%)</title><rect x="398.6" y="819.0" width="9.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="401.6" y="830.0"></text>
</g>
<g>
<title>futex_wake (34 samples, 0.83%)</title><rect x="398.6" y="803.0" width="9.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="401.6" y="814.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="398.9" y="787.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="401.9" y="798.0"></text>
</g>
<g>
<title>wake_q_add_safe (3 samples, 0.07%)</title><rect x="399.2" y="787.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="402.2" y="798.0"></text>
</g>
<g>
<title>wake_up_q (29 samples, 0.71%)</title><rect x="400.1" y="787.0" width="8.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="403.1" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (29 samples, 0.71%)</title><rect x="400.1" y="771.0" width="8.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="403.1" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (29 samples, 0.71%)</title><rect x="400.1" y="755.0" width="8.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="403.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (14 samples, 0.34%)</title><rect x="408.4" y="979.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="411.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (14 samples, 0.34%)</title><rect x="408.4" y="963.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.02%)</title><rect x="408.4" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="411.4" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.02%)</title><rect x="408.4" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="411.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (13 samples, 0.32%)</title><rect x="408.7" y="947.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.7" y="958.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.02%)</title><rect x="408.7" y="931.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="411.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (12 samples, 0.29%)</title><rect x="409.0" y="931.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="412.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.29%)</title><rect x="409.0" y="915.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="412.0" y="926.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 0.20%)</title><rect x="409.0" y="899.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="412.0" y="910.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.05%)</title><rect x="409.3" y="883.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="412.3" y="894.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="409.6" y="867.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="412.6" y="878.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.10%)</title><rect x="409.9" y="883.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="412.9" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="410.5" y="867.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="413.5" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="410.5" y="851.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="413.5" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="410.5" y="835.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="413.5" y="846.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="410.5" y="819.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="413.5" y="830.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="410.5" y="803.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="413.5" y="814.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="410.8" y="787.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="413.8" y="798.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="410.8" y="771.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="413.8" y="782.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="411.0" y="883.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="414.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="411.3" y="899.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="414.3" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (3 samples, 0.07%)</title><rect x="411.3" y="883.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="414.3" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="411.6" y="867.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="414.6" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="411.6" y="851.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="414.6" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="411.6" y="835.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="414.6" y="846.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="411.6" y="819.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="414.6" y="830.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.05%)</title><rect x="411.6" y="803.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="414.6" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.05%)</title><rect x="411.6" y="787.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="414.6" y="798.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="411.6" y="771.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="414.6" y="782.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="411.6" y="755.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="414.6" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="411.6" y="739.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="414.6" y="750.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="411.9" y="723.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="414.9" y="734.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="411.9" y="707.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="414.9" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="411.9" y="691.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="414.9" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="411.9" y="675.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="414.9" y="686.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="411.9" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="414.9" y="670.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="411.9" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="414.9" y="654.0"></text>
</g>
<g>
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="411.9" y="627.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="414.9" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="411.9" y="611.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="414.9" y="622.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.02%)</title><rect x="412.2" y="883.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="415.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$205/1532762392.run (273 samples, 6.69%)</title><rect x="412.5" y="995.0" width="78.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="415.5" y="1006.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (273 samples, 6.69%)</title><rect x="412.5" y="979.0" width="78.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="415.5" y="990.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (272 samples, 6.67%)</title><rect x="412.8" y="963.0" width="78.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.8" y="974.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (264 samples, 6.47%)</title><rect x="414.8" y="947.0" width="76.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.8" y="958.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (264 samples, 6.47%)</title><rect x="414.8" y="931.0" width="76.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.8" y="942.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (263 samples, 6.44%)</title><rect x="415.1" y="915.0" width="76.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="418.1" y="926.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (263 samples, 6.44%)</title><rect x="415.1" y="899.0" width="76.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="418.1" y="910.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (263 samples, 6.44%)</title><rect x="415.1" y="883.0" width="76.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="418.1" y="894.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (263 samples, 6.44%)</title><rect x="415.1" y="867.0" width="76.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="418.1" y="878.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (263 samples, 6.44%)</title><rect x="415.1" y="851.0" width="76.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="418.1" y="862.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (263 samples, 6.44%)</title><rect x="415.1" y="835.0" width="76.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.1" y="846.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (21 samples, 0.51%)</title><rect x="415.1" y="819.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="418.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (13 samples, 0.32%)</title><rect x="415.4" y="803.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="418.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.32%)</title><rect x="415.4" y="787.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="418.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (13 samples, 0.32%)</title><rect x="415.4" y="771.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="418.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13 samples, 0.32%)</title><rect x="415.4" y="755.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="418.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (6 samples, 0.15%)</title><rect x="415.7" y="739.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="418.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="415.7" y="723.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="418.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="415.7" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="418.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.02%)</title><rect x="415.7" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="418.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1 samples, 0.02%)</title><rect x="415.7" y="675.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="418.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/1211777603.apply (4 samples, 0.10%)</title><rect x="416.0" y="723.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="419.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (4 samples, 0.10%)</title><rect x="416.0" y="707.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="419.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (4 samples, 0.10%)</title><rect x="416.0" y="691.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="419.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (4 samples, 0.10%)</title><rect x="416.0" y="675.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="419.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (4 samples, 0.10%)</title><rect x="416.0" y="659.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="419.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4 samples, 0.10%)</title><rect x="416.0" y="643.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="419.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (4 samples, 0.10%)</title><rect x="416.0" y="627.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$168/346584917.apply (4 samples, 0.10%)</title><rect x="416.0" y="611.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (4 samples, 0.10%)</title><rect x="416.0" y="595.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="419.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (4 samples, 0.10%)</title><rect x="416.0" y="579.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="419.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (4 samples, 0.10%)</title><rect x="416.0" y="563.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="419.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (4 samples, 0.10%)</title><rect x="416.0" y="547.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="419.0" y="558.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (4 samples, 0.10%)</title><rect x="416.0" y="531.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="419.0" y="542.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (4 samples, 0.10%)</title><rect x="416.0" y="515.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="419.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$134/2113557447.apply (1 samples, 0.02%)</title><rect x="417.1" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="420.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1 samples, 0.02%)</title><rect x="417.1" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="420.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1 samples, 0.02%)</title><rect x="417.1" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="420.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1 samples, 0.02%)</title><rect x="417.1" y="675.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1 samples, 0.02%)</title><rect x="417.1" y="659.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="420.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="417.1" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="420.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$232/853075107.run (1 samples, 0.02%)</title><rect x="417.1" y="627.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1 samples, 0.02%)</title><rect x="417.1" y="611.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.02%)</title><rect x="417.1" y="595.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="420.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="417.1" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="420.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="417.1" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="420.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.02%)</title><rect x="417.1" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.02%)</title><rect x="417.1" y="531.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="420.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.02%)</title><rect x="417.1" y="515.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="420.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (1 samples, 0.02%)</title><rect x="417.1" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="420.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.02%)</title><rect x="417.1" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="420.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.02%)</title><rect x="417.1" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="420.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.02%)</title><rect x="417.1" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="420.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.02%)</title><rect x="417.1" y="435.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="420.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$233/1245151766.run (1 samples, 0.02%)</title><rect x="417.1" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.02%)</title><rect x="417.1" y="403.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="420.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.02%)</title><rect x="417.1" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="420.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.02%)</title><rect x="417.1" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.02%)</title><rect x="417.1" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="420.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1 samples, 0.02%)</title><rect x="417.1" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="420.1" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (6 samples, 0.15%)</title><rect x="417.4" y="739.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="420.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6 samples, 0.15%)</title><rect x="417.4" y="723.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="420.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="417.4" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="417.4" y="691.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="420.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.02%)</title><rect x="417.4" y="675.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="420.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.02%)</title><rect x="417.4" y="659.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="420.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.02%)</title><rect x="417.4" y="643.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="420.4" y="654.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="417.4" y="627.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="420.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$191/2106603000.apply (5 samples, 0.12%)</title><rect x="417.7" y="707.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="420.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.02%)</title><rect x="417.7" y="691.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="420.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (4 samples, 0.10%)</title><rect x="418.0" y="691.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (4 samples, 0.10%)</title><rect x="418.0" y="675.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="421.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/87340014.apply (4 samples, 0.10%)</title><rect x="418.0" y="659.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (4 samples, 0.10%)</title><rect x="418.0" y="643.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="421.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (4 samples, 0.10%)</title><rect x="418.0" y="627.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="421.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (1 samples, 0.02%)</title><rect x="418.3" y="611.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="421.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="418.3" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="421.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (1 samples, 0.02%)</title><rect x="418.3" y="579.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.3" y="590.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="418.3" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="421.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="418.6" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.02%)</title><rect x="418.6" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="421.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.02%)</title><rect x="418.6" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.02%)</title><rect x="418.6" y="563.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="421.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.02%)</title><rect x="418.6" y="547.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="421.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.02%)</title><rect x="418.6" y="531.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="421.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque$Node.&lt;init&gt; (1 samples, 0.02%)</title><rect x="418.6" y="515.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="421.6" y="526.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="418.6" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="421.6" y="510.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.02%)</title><rect x="418.6" y="483.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="421.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (1 samples, 0.02%)</title><rect x="418.9" y="611.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="421.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (1 samples, 0.02%)</title><rect x="418.9" y="595.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="421.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (1 samples, 0.02%)</title><rect x="418.9" y="579.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="421.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.02%)</title><rect x="418.9" y="563.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="421.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (5 samples, 0.12%)</title><rect x="419.1" y="803.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="422.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (4 samples, 0.10%)</title><rect x="419.4" y="787.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="422.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (3 samples, 0.07%)</title><rect x="419.7" y="771.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (1 samples, 0.02%)</title><rect x="420.0" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="423.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.updateTail (1 samples, 0.02%)</title><rect x="420.3" y="755.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="423.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.05%)</title><rect x="420.6" y="803.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="423.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$220/969401326.run (2 samples, 0.05%)</title><rect x="420.6" y="787.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="423.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (2 samples, 0.05%)</title><rect x="420.6" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="423.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (242 samples, 5.93%)</title><rect x="421.2" y="819.0" width="69.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="424.2" y="830.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (242 samples, 5.93%)</title><rect x="421.2" y="803.0" width="69.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="424.2" y="814.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (241 samples, 5.91%)</title><rect x="421.5" y="787.0" width="69.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="424.5" y="798.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (239 samples, 5.86%)</title><rect x="421.7" y="771.0" width="69.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="424.7" y="782.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$219/200333958.run (3 samples, 0.07%)</title><rect x="422.3" y="755.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (3 samples, 0.07%)</title><rect x="422.3" y="739.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="425.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2 samples, 0.05%)</title><rect x="422.6" y="723.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (234 samples, 5.73%)</title><rect x="423.2" y="755.0" width="67.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="426.2" y="766.0">jdk/int..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (231 samples, 5.66%)</title><rect x="423.2" y="739.0" width="66.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.2" y="750.0">java/ni..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (231 samples, 5.66%)</title><rect x="423.2" y="723.0" width="66.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="426.2" y="734.0">sun/nio..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="423.2" y="707.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="426.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="423.2" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="426.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="423.2" y="675.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="426.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="423.5" y="707.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="426.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="423.5" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="426.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="423.5" y="675.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="426.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (229 samples, 5.61%)</title><rect x="423.8" y="707.0" width="66.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="426.8" y="718.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (229 samples, 5.61%)</title><rect x="423.8" y="691.0" width="66.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="426.8" y="702.0">sun/nio..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.02%)</title><rect x="423.8" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="426.8" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (1 samples, 0.02%)</title><rect x="423.8" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="426.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (4 samples, 0.10%)</title><rect x="424.1" y="675.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="427.1" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.07%)</title><rect x="424.3" y="659.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.3" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.07%)</title><rect x="424.3" y="643.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="427.3" y="654.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="424.6" y="627.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="427.6" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (220 samples, 5.39%)</title><rect x="425.2" y="675.0" width="63.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="428.2" y="686.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (219 samples, 5.37%)</title><rect x="425.5" y="659.0" width="63.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="428.5" y="670.0">sun/nio..</text>
</g>
<g>
<title>.annobin_writev.c (216 samples, 5.29%)</title><rect x="426.1" y="643.0" width="62.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="429.1" y="654.0">.annob..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="428.7" y="627.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="431.7" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (205 samples, 5.02%)</title><rect x="429.0" y="627.0" width="59.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="432.0" y="638.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (205 samples, 5.02%)</title><rect x="429.0" y="611.0" width="59.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="432.0" y="622.0">do_sys..</text>
</g>
<g>
<title>do_writev (202 samples, 4.95%)</title><rect x="429.5" y="595.0" width="58.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="432.5" y="606.0">do_wri..</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="429.5" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="432.5" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="429.5" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="432.5" y="574.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="429.5" y="547.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="432.5" y="558.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="429.8" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="432.8" y="590.0"></text>
</g>
<g>
<title>vfs_writev (200 samples, 4.90%)</title><rect x="430.1" y="579.0" width="57.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="433.1" y="590.0">vfs_wr..</text>
</g>
<g>
<title>do_iter_write (198 samples, 4.85%)</title><rect x="430.7" y="563.0" width="57.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="433.7" y="574.0">do_ite..</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.02%)</title><rect x="430.7" y="547.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="433.7" y="558.0"></text>
</g>
<g>
<title>do_iter_readv_writev (192 samples, 4.70%)</title><rect x="431.0" y="547.0" width="55.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="434.0" y="558.0">do_it..</text>
</g>
<g>
<title>sock_write_iter (192 samples, 4.70%)</title><rect x="431.0" y="531.0" width="55.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="434.0" y="542.0">sock_..</text>
</g>
<g>
<title>sock_sendmsg (192 samples, 4.70%)</title><rect x="431.0" y="515.0" width="55.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="434.0" y="526.0">sock_..</text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.02%)</title><rect x="431.0" y="499.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="434.0" y="510.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.07%)</title><rect x="431.3" y="499.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="434.3" y="510.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.07%)</title><rect x="431.3" y="483.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="434.3" y="494.0"></text>
</g>
<g>
<title>tcp_sendmsg (188 samples, 4.61%)</title><rect x="432.2" y="499.0" width="54.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="435.2" y="510.0">tcp_s..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="432.2" y="483.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="435.2" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="432.2" y="467.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="435.2" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (187 samples, 4.58%)</title><rect x="432.4" y="483.0" width="54.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="435.4" y="494.0">tcp_s..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="433.3" y="467.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="436.3" y="478.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (169 samples, 4.14%)</title><rect x="433.6" y="467.0" width="48.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="436.6" y="478.0">__tc..</text>
</g>
<g>
<title>tcp_write_xmit (169 samples, 4.14%)</title><rect x="433.6" y="451.0" width="48.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="436.6" y="462.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (165 samples, 4.04%)</title><rect x="434.5" y="435.0" width="47.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="437.5" y="446.0">__tc..</text>
</g>
<g>
<title>__ip_queue_xmit (159 samples, 3.90%)</title><rect x="434.8" y="419.0" width="45.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="437.8" y="430.0">__ip..</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.05%)</title><rect x="435.0" y="403.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="438.0" y="414.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="435.3" y="387.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="438.3" y="398.0"></text>
</g>
<g>
<title>ip_local_out (27 samples, 0.66%)</title><rect x="435.6" y="403.0" width="7.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="438.6" y="414.0"></text>
</g>
<g>
<title>__ip_local_out (27 samples, 0.66%)</title><rect x="435.6" y="387.0" width="7.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="438.6" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (27 samples, 0.66%)</title><rect x="435.6" y="371.0" width="7.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="438.6" y="382.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.20%)</title><rect x="435.9" y="355.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="438.9" y="366.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.05%)</title><rect x="438.2" y="355.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="441.2" y="366.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (3 samples, 0.07%)</title><rect x="438.8" y="355.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="441.8" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (1 samples, 0.02%)</title><rect x="439.4" y="339.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="442.4" y="350.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (2 samples, 0.05%)</title><rect x="439.7" y="355.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="442.7" y="366.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (10 samples, 0.25%)</title><rect x="440.2" y="355.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="443.2" y="366.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (2 samples, 0.05%)</title><rect x="440.5" y="339.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="443.5" y="350.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="440.8" y="323.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="443.8" y="334.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="440.8" y="307.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="443.8" y="318.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="440.8" y="291.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="443.8" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="440.8" y="275.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="443.8" y="286.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="440.8" y="259.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="443.8" y="270.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="440.8" y="243.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="443.8" y="254.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="440.8" y="227.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="443.8" y="238.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="440.8" y="211.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="443.8" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="440.8" y="195.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="443.8" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="440.8" y="179.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="443.8" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (1 samples, 0.02%)</title><rect x="440.8" y="163.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="443.8" y="174.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (1 samples, 0.02%)</title><rect x="440.8" y="147.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="443.8" y="158.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (2 samples, 0.05%)</title><rect x="441.1" y="339.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="444.1" y="350.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (5 samples, 0.12%)</title><rect x="441.7" y="339.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="444.7" y="350.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (1 samples, 0.02%)</title><rect x="442.8" y="323.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="445.8" y="334.0"></text>
</g>
<g>
<title>selinux_ipv4_output (1 samples, 0.02%)</title><rect x="443.1" y="355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="446.1" y="366.0"></text>
</g>
<g>
<title>ip_output (129 samples, 3.16%)</title><rect x="443.4" y="403.0" width="37.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="446.4" y="414.0">ip_..</text>
</g>
<g>
<title>ip_finish_output2 (120 samples, 2.94%)</title><rect x="443.4" y="387.0" width="34.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="446.4" y="398.0">ip..</text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.07%)</title><rect x="444.6" y="371.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="447.6" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="444.9" y="355.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="447.9" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="444.9" y="339.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="447.9" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.02%)</title><rect x="444.9" y="323.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="447.9" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="444.9" y="307.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="447.9" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="444.9" y="291.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="447.9" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="445.2" y="355.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="448.2" y="366.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.02%)</title><rect x="445.2" y="339.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="448.2" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (113 samples, 2.77%)</title><rect x="445.5" y="371.0" width="32.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="448.5" y="382.0">__..</text>
</g>
<g>
<title>do_softirq.part.0 (113 samples, 2.77%)</title><rect x="445.5" y="355.0" width="32.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="448.5" y="366.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (112 samples, 2.74%)</title><rect x="445.7" y="339.0" width="32.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="448.7" y="350.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (112 samples, 2.74%)</title><rect x="445.7" y="323.0" width="32.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="448.7" y="334.0">__..</text>
</g>
<g>
<title>net_rx_action (108 samples, 2.65%)</title><rect x="446.6" y="307.0" width="31.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="449.6" y="318.0">ne..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.05%)</title><rect x="446.9" y="291.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="449.9" y="302.0"></text>
</g>
<g>
<title>process_backlog (105 samples, 2.57%)</title><rect x="447.5" y="291.0" width="30.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="450.5" y="302.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (101 samples, 2.47%)</title><rect x="448.6" y="275.0" width="29.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="451.6" y="286.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.05%)</title><rect x="448.6" y="259.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="451.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv (99 samples, 2.43%)</title><rect x="449.2" y="259.0" width="28.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="452.2" y="270.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (83 samples, 2.03%)</title><rect x="449.2" y="243.0" width="24.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="452.2" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (76 samples, 1.86%)</title><rect x="449.5" y="227.0" width="22.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="452.5" y="238.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (75 samples, 1.84%)</title><rect x="449.8" y="211.0" width="21.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="452.8" y="222.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (75 samples, 1.84%)</title><rect x="449.8" y="195.0" width="21.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="452.8" y="206.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.10%)</title><rect x="450.9" y="179.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="453.9" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.05%)</title><rect x="452.1" y="179.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="455.1" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="452.4" y="163.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="455.4" y="174.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (1 samples, 0.02%)</title><rect x="452.4" y="147.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="455.4" y="158.0"></text>
</g>
<g>
<title>selinux_peerlbl_enabled (1 samples, 0.02%)</title><rect x="452.4" y="131.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="455.4" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (65 samples, 1.59%)</title><rect x="452.7" y="179.0" width="18.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="455.7" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (65 samples, 1.59%)</title><rect x="452.7" y="163.0" width="18.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="455.7" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="453.0" y="147.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="456.0" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.10%)</title><rect x="453.3" y="147.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="456.3" y="158.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.10%)</title><rect x="453.3" y="131.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="456.3" y="142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.10%)</title><rect x="453.3" y="115.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="456.3" y="126.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.07%)</title><rect x="454.4" y="147.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="457.4" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (55 samples, 1.35%)</title><rect x="455.3" y="147.0" width="15.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="458.3" y="158.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="455.3" y="131.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="458.3" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (52 samples, 1.27%)</title><rect x="455.6" y="131.0" width="15.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="458.6" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (49 samples, 1.20%)</title><rect x="456.4" y="115.0" width="14.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="459.4" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (49 samples, 1.20%)</title><rect x="456.4" y="99.0" width="14.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="459.4" y="110.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="470.6" y="131.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="473.6" y="142.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.0 (1 samples, 0.02%)</title><rect x="470.9" y="131.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="473.9" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="471.2" y="147.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="474.2" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.15%)</title><rect x="471.5" y="227.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="474.5" y="238.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.10%)</title><rect x="471.5" y="211.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="474.5" y="222.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (2 samples, 0.05%)</title><rect x="472.1" y="195.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="475.1" y="206.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (1 samples, 0.02%)</title><rect x="472.6" y="211.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="475.6" y="222.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="472.9" y="211.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="475.9" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (16 samples, 0.39%)</title><rect x="473.2" y="243.0" width="4.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="476.2" y="254.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (2 samples, 0.05%)</title><rect x="473.5" y="227.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="476.5" y="238.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (12 samples, 0.29%)</title><rect x="474.1" y="227.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="477.1" y="238.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (1 samples, 0.02%)</title><rect x="477.5" y="227.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="480.5" y="238.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="477.8" y="307.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="480.8" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.22%)</title><rect x="478.1" y="387.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="481.1" y="398.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.07%)</title><rect x="478.1" y="371.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="481.1" y="382.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (1 samples, 0.02%)</title><rect x="479.0" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="482.0" y="382.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (2 samples, 0.05%)</title><rect x="479.3" y="371.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="482.3" y="382.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (2 samples, 0.05%)</title><rect x="479.9" y="371.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="482.9" y="382.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (1 samples, 0.02%)</title><rect x="480.4" y="371.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="483.4" y="382.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.05%)</title><rect x="480.7" y="419.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="483.7" y="430.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="481.0" y="403.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="484.0" y="414.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="481.3" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="484.3" y="430.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.05%)</title><rect x="481.6" y="419.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="484.6" y="430.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.02%)</title><rect x="482.2" y="435.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="485.2" y="446.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="482.2" y="419.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="485.2" y="430.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="482.2" y="403.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="485.2" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="482.2" y="387.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="485.2" y="398.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.15%)</title><rect x="482.5" y="467.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="485.5" y="478.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.12%)</title><rect x="482.5" y="451.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="485.5" y="462.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.05%)</title><rect x="483.0" y="435.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="486.0" y="446.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.05%)</title><rect x="483.0" y="419.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="486.0" y="430.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="483.3" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="486.3" y="414.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="483.6" y="435.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="486.6" y="446.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="483.9" y="451.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="486.9" y="462.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.05%)</title><rect x="484.2" y="467.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="487.2" y="478.0"></text>
</g>
<g>
<title>tcp_cwnd_restart (1 samples, 0.02%)</title><rect x="484.8" y="467.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="487.8" y="478.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="484.8" y="451.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="487.8" y="462.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="485.1" y="467.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="488.1" y="478.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.05%)</title><rect x="485.4" y="467.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="488.4" y="478.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.02%)</title><rect x="485.6" y="451.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="488.6" y="462.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.05%)</title><rect x="485.9" y="467.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="488.9" y="478.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="486.5" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="489.5" y="558.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.10%)</title><rect x="486.8" y="547.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="489.8" y="558.0"></text>
</g>
<g>
<title>selinux_file_permission (4 samples, 0.10%)</title><rect x="486.8" y="531.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="489.8" y="542.0"></text>
</g>
<g>
<title>__inode_security_revalidate (1 samples, 0.02%)</title><rect x="487.7" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="490.7" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="488.0" y="595.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="491.0" y="606.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="488.0" y="579.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="491.0" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="488.2" y="627.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="491.2" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="488.2" y="611.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="491.2" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="488.2" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="491.2" y="606.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="488.2" y="579.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="491.2" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="488.2" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="491.2" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="488.2" y="547.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="491.2" y="558.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="488.5" y="643.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="491.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="488.8" y="675.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerLastTemporaryDirectBuffer (3 samples, 0.07%)</title><rect x="489.1" y="675.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="492.1" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="489.7" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.7" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.02%)</title><rect x="489.7" y="643.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="492.7" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.02%)</title><rect x="489.7" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="492.7" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.05%)</title><rect x="490.0" y="739.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (1 samples, 0.02%)</title><rect x="490.6" y="739.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="493.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (1 samples, 0.02%)</title><rect x="490.8" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="493.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.02%)</title><rect x="490.8" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="493.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (1 samples, 0.02%)</title><rect x="491.1" y="947.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="494.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (671 samples, 16.44%)</title><rect x="491.4" y="995.0" width="194.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.4" y="1006.0">jdk/internal/net/http/com..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (671 samples, 16.44%)</title><rect x="491.4" y="979.0" width="194.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.4" y="990.0">jdk/internal/net/http/com..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.02%)</title><rect x="491.4" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="491.4" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="494.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (169 samples, 4.14%)</title><rect x="491.7" y="963.0" width="48.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.7" y="974.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (168 samples, 4.12%)</title><rect x="492.0" y="947.0" width="48.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.0" y="958.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (168 samples, 4.12%)</title><rect x="492.0" y="931.0" width="48.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="495.0" y="942.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (1 samples, 0.02%)</title><rect x="492.0" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="495.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.02%)</title><rect x="492.0" y="899.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (22 samples, 0.54%)</title><rect x="492.3" y="915.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="495.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (22 samples, 0.54%)</title><rect x="492.3" y="899.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="495.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (22 samples, 0.54%)</title><rect x="492.3" y="883.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="495.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (21 samples, 0.51%)</title><rect x="492.6" y="867.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="495.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (19 samples, 0.47%)</title><rect x="493.2" y="851.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="496.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (19 samples, 0.47%)</title><rect x="493.2" y="835.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="496.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (16 samples, 0.39%)</title><rect x="494.0" y="819.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (12 samples, 0.29%)</title><rect x="495.2" y="803.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="498.2" y="814.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.02%)</title><rect x="495.2" y="787.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="498.2" y="798.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.02%)</title><rect x="495.2" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="498.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.05%)</title><rect x="495.5" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="498.5" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.05%)</title><rect x="495.5" y="771.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="498.5" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.05%)</title><rect x="495.5" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="498.5" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="495.5" y="739.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="498.5" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="495.8" y="739.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="498.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (9 samples, 0.22%)</title><rect x="496.1" y="787.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="499.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (9 samples, 0.22%)</title><rect x="496.1" y="771.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (9 samples, 0.22%)</title><rect x="496.1" y="755.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="499.1" y="766.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.02%)</title><rect x="496.1" y="739.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="499.1" y="750.0"></text>
</g>
<g>
<title>__libc_write (8 samples, 0.20%)</title><rect x="496.3" y="739.0" width="2.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="499.3" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.20%)</title><rect x="496.3" y="723.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="499.3" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.20%)</title><rect x="496.3" y="707.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="499.3" y="718.0"></text>
</g>
<g>
<title>ksys_write (8 samples, 0.20%)</title><rect x="496.3" y="691.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="499.3" y="702.0"></text>
</g>
<g>
<title>vfs_write (7 samples, 0.17%)</title><rect x="496.6" y="675.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="499.6" y="686.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.02%)</title><rect x="496.6" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="499.6" y="670.0"></text>
</g>
<g>
<title>new_sync_write (5 samples, 0.12%)</title><rect x="496.9" y="659.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="499.9" y="670.0"></text>
</g>
<g>
<title>pipe_write (5 samples, 0.12%)</title><rect x="496.9" y="643.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="499.9" y="654.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.02%)</title><rect x="496.9" y="627.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="499.9" y="638.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.07%)</title><rect x="497.2" y="627.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="500.2" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="497.2" y="611.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="500.2" y="622.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.02%)</title><rect x="498.1" y="627.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="501.1" y="638.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="498.1" y="611.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="501.1" y="622.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="498.1" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="501.1" y="606.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.02%)</title><rect x="498.4" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="501.4" y="670.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.02%)</title><rect x="498.4" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="501.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (145 samples, 3.55%)</title><rect x="498.7" y="915.0" width="41.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.7" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.02%)</title><rect x="500.1" y="899.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="503.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (139 samples, 3.41%)</title><rect x="500.4" y="899.0" width="40.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="503.4" y="910.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (139 samples, 3.41%)</title><rect x="500.4" y="883.0" width="40.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="503.4" y="894.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (139 samples, 3.41%)</title><rect x="500.4" y="867.0" width="40.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.4" y="878.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (79 samples, 1.94%)</title><rect x="500.4" y="851.0" width="22.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="503.4" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (79 samples, 1.94%)</title><rect x="500.4" y="835.0" width="22.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="503.4" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (78 samples, 1.91%)</title><rect x="500.7" y="819.0" width="22.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="503.7" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (78 samples, 1.91%)</title><rect x="500.7" y="803.0" width="22.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="503.7" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.05%)</title><rect x="501.0" y="787.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="504.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (75 samples, 1.84%)</title><rect x="501.5" y="787.0" width="21.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="504.5" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (74 samples, 1.81%)</title><rect x="501.8" y="771.0" width="21.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.8" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (74 samples, 1.81%)</title><rect x="501.8" y="755.0" width="21.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="504.8" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (64 samples, 1.57%)</title><rect x="501.8" y="739.0" width="18.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (64 samples, 1.57%)</title><rect x="501.8" y="723.0" width="18.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="504.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (56 samples, 1.37%)</title><rect x="502.4" y="707.0" width="16.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.10%)</title><rect x="502.7" y="691.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="505.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.02%)</title><rect x="503.0" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="506.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.05%)</title><rect x="503.3" y="675.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="506.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2 samples, 0.05%)</title><rect x="503.3" y="659.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2 samples, 0.05%)</title><rect x="503.3" y="643.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="506.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.&lt;init&gt; (1 samples, 0.02%)</title><rect x="503.3" y="627.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="506.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="503.3" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="506.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.02%)</title><rect x="503.6" y="627.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="506.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="503.6" y="611.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="506.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="503.6" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="506.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$218/709564748.apply (1 samples, 0.02%)</title><rect x="503.9" y="691.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="506.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (1 samples, 0.02%)</title><rect x="503.9" y="675.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="506.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (1 samples, 0.02%)</title><rect x="503.9" y="659.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="506.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.02%)</title><rect x="503.9" y="643.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="506.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="503.9" y="627.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="506.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="503.9" y="611.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="506.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$134/2113557447.apply (42 samples, 1.03%)</title><rect x="504.1" y="691.0" width="12.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="507.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (42 samples, 1.03%)</title><rect x="504.1" y="675.0" width="12.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="507.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1 samples, 0.02%)</title><rect x="504.1" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="507.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.02%)</title><rect x="504.1" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="507.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (1 samples, 0.02%)</title><rect x="504.1" y="627.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="507.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$168/346584917.apply (1 samples, 0.02%)</title><rect x="504.1" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="507.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (1 samples, 0.02%)</title><rect x="504.1" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="507.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (1 samples, 0.02%)</title><rect x="504.1" y="579.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="507.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (1 samples, 0.02%)</title><rect x="504.1" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="507.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (1 samples, 0.02%)</title><rect x="504.1" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="507.1" y="558.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (1 samples, 0.02%)</title><rect x="504.1" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="507.1" y="542.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (1 samples, 0.02%)</title><rect x="504.1" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="507.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (41 samples, 1.00%)</title><rect x="504.4" y="659.0" width="11.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="507.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="504.4" y="643.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="507.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="504.4" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="507.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (40 samples, 0.98%)</title><rect x="504.7" y="643.0" width="11.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="507.7" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$129/1384033106.apply (4 samples, 0.10%)</title><rect x="504.7" y="627.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="507.7" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (4 samples, 0.10%)</title><rect x="504.7" y="611.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="507.7" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (4 samples, 0.10%)</title><rect x="504.7" y="595.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="507.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (4 samples, 0.10%)</title><rect x="504.7" y="579.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="507.7" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.10%)</title><rect x="504.7" y="563.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="507.7" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (4 samples, 0.10%)</title><rect x="504.7" y="547.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.7" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (4 samples, 0.10%)</title><rect x="504.7" y="531.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="507.7" y="542.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="505.6" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.6" y="526.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.02%)</title><rect x="505.6" y="499.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="508.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (36 samples, 0.88%)</title><rect x="505.9" y="627.0" width="10.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.9" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (10 samples, 0.25%)</title><rect x="505.9" y="611.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.9" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.02%)</title><rect x="505.9" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="508.9" y="606.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.02%)</title><rect x="505.9" y="579.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="508.9" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.02%)</title><rect x="505.9" y="563.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="508.9" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="505.9" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.9" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.02%)</title><rect x="505.9" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.9" y="542.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="505.9" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="508.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="505.9" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.9" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="505.9" y="483.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="508.9" y="494.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.05%)</title><rect x="506.2" y="595.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.2" y="606.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.05%)</title><rect x="506.2" y="579.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="509.2" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (2 samples, 0.05%)</title><rect x="506.2" y="563.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.05%)</title><rect x="506.2" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="509.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.05%)</title><rect x="506.2" y="531.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (7 samples, 0.17%)</title><rect x="506.8" y="595.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="509.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.15%)</title><rect x="506.8" y="579.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="509.8" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (3 samples, 0.07%)</title><rect x="506.8" y="563.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="509.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.getOpFlags (3 samples, 0.07%)</title><rect x="506.8" y="547.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="509.8" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.07%)</title><rect x="507.6" y="563.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="510.6" y="574.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.05%)</title><rect x="507.6" y="547.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="510.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.05%)</title><rect x="507.6" y="531.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="510.6" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.02%)</title><rect x="507.9" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="510.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.02%)</title><rect x="507.9" y="499.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="510.9" y="510.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.02%)</title><rect x="507.9" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (1 samples, 0.02%)</title><rect x="507.9" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="510.9" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$227/453644104.applyAsLong (1 samples, 0.02%)</title><rect x="507.9" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.9" y="462.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.02%)</title><rect x="507.9" y="435.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="510.9" y="446.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.02%)</title><rect x="507.9" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.9" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.02%)</title><rect x="508.2" y="547.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="511.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.02%)</title><rect x="508.2" y="531.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="511.2" y="542.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (1 samples, 0.02%)</title><rect x="508.2" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="511.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.opIsStateful (1 samples, 0.02%)</title><rect x="508.5" y="579.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="511.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.07%)</title><rect x="508.8" y="611.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="511.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="508.8" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="511.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="509.1" y="595.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="509.4" y="579.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.fixupContentLen (1 samples, 0.02%)</title><rect x="509.6" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="512.6" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.02%)</title><rect x="509.6" y="595.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="512.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (22 samples, 0.54%)</title><rect x="509.9" y="611.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="512.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$232/853075107.run (22 samples, 0.54%)</title><rect x="509.9" y="595.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (22 samples, 0.54%)</title><rect x="509.9" y="579.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="512.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (4 samples, 0.10%)</title><rect x="509.9" y="563.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="512.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.07%)</title><rect x="510.2" y="547.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="513.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.07%)</title><rect x="510.2" y="531.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="513.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.02%)</title><rect x="510.8" y="515.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.acquire (1 samples, 0.02%)</title><rect x="511.1" y="563.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="514.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (8 samples, 0.20%)</title><rect x="511.4" y="563.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (8 samples, 0.20%)</title><rect x="511.4" y="547.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="514.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="511.4" y="531.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="514.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="511.4" y="515.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="514.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$238/632069876.get$Lambda (1 samples, 0.02%)</title><rect x="511.4" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="514.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$238/632069876.&lt;init&gt; (1 samples, 0.02%)</title><rect x="511.4" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.4" y="494.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (7 samples, 0.17%)</title><rect x="511.7" y="531.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.7" y="542.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (5 samples, 0.12%)</title><rect x="512.0" y="515.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.0" y="526.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (5 samples, 0.12%)</title><rect x="512.0" y="499.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.0" y="510.0"></text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.07%)</title><rect x="512.5" y="483.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="515.5" y="494.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="512.5" y="467.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="515.5" y="478.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="512.8" y="467.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="515.8" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="513.1" y="467.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="516.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="513.4" y="515.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="516.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (9 samples, 0.22%)</title><rect x="513.7" y="563.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="516.7" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="516.0" y="547.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="519.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$192/1158665635.apply (8 samples, 0.20%)</title><rect x="516.3" y="691.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (8 samples, 0.20%)</title><rect x="516.3" y="675.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (6 samples, 0.15%)</title><rect x="516.3" y="659.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="519.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (1 samples, 0.02%)</title><rect x="516.6" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="519.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (1 samples, 0.02%)</title><rect x="516.6" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.handleResponse (1 samples, 0.02%)</title><rect x="516.9" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.response (3 samples, 0.07%)</title><rect x="517.2" y="643.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="520.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.05%)</title><rect x="518.0" y="659.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="521.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.05%)</title><rect x="518.0" y="643.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="521.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.05%)</title><rect x="518.0" y="627.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="521.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (1 samples, 0.02%)</title><rect x="518.3" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="521.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1 samples, 0.02%)</title><rect x="518.6" y="707.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="521.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.02%)</title><rect x="518.6" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="521.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$193/194868316.apply (1 samples, 0.02%)</title><rect x="518.6" y="675.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="521.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (1 samples, 0.02%)</title><rect x="518.6" y="659.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="521.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.02%)</title><rect x="518.6" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="518.6" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="521.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="518.6" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="521.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (4 samples, 0.10%)</title><rect x="518.9" y="707.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="521.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (2 samples, 0.05%)</title><rect x="519.5" y="691.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.05%)</title><rect x="519.5" y="675.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.05%)</title><rect x="519.5" y="659.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.5" y="670.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="520.1" y="707.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="523.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$222/1425534080.apply (10 samples, 0.25%)</title><rect x="520.3" y="739.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="523.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (10 samples, 0.25%)</title><rect x="520.3" y="723.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="523.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.02%)</title><rect x="521.5" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (5 samples, 0.12%)</title><rect x="521.8" y="707.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="524.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (3 samples, 0.07%)</title><rect x="522.4" y="691.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="525.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (1 samples, 0.02%)</title><rect x="522.9" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="525.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (58 samples, 1.42%)</title><rect x="523.2" y="851.0" width="16.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="526.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (6 samples, 0.15%)</title><rect x="525.0" y="835.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="528.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (3 samples, 0.07%)</title><rect x="526.7" y="835.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="529.7" y="846.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.07%)</title><rect x="526.7" y="819.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="529.7" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.07%)</title><rect x="526.7" y="803.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="529.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (8 samples, 0.20%)</title><rect x="527.6" y="835.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="530.6" y="846.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.12%)</title><rect x="527.9" y="819.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.9" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.12%)</title><rect x="527.9" y="803.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="530.9" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.07%)</title><rect x="528.4" y="787.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="531.4" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.05%)</title><rect x="529.3" y="819.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.3" y="830.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="529.6" y="803.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="532.6" y="814.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="529.6" y="787.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="532.6" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="529.6" y="771.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="532.6" y="782.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="529.6" y="755.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="532.6" y="766.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="529.6" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="532.6" y="750.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="529.6" y="723.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="532.6" y="734.0"></text>
</g>
<g>
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="529.6" y="707.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="532.6" y="718.0"></text>
</g>
<g>
<title>tcp_write_timer_handler (1 samples, 0.02%)</title><rect x="529.6" y="691.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="532.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (8 samples, 0.20%)</title><rect x="529.9" y="835.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="532.9" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8 samples, 0.20%)</title><rect x="529.9" y="819.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="532.9" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8 samples, 0.20%)</title><rect x="529.9" y="803.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="532.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (8 samples, 0.20%)</title><rect x="529.9" y="787.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.9" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.accept (7 samples, 0.17%)</title><rect x="530.2" y="771.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.2" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (7 samples, 0.17%)</title><rect x="530.2" y="755.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="533.2" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.10%)</title><rect x="530.5" y="739.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.5" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.accept (3 samples, 0.07%)</title><rect x="530.5" y="723.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="533.5" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.07%)</title><rect x="530.5" y="707.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="533.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.05%)</title><rect x="530.7" y="691.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="533.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.05%)</title><rect x="530.7" y="675.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="533.7" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="530.7" y="659.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="533.7" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.05%)</title><rect x="530.7" y="643.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="533.7" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="531.3" y="723.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="534.3" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="531.6" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.6" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.02%)</title><rect x="531.6" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="534.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="531.6" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="531.6" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="534.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="531.6" y="675.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.6" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="531.9" y="739.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="534.9" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="531.9" y="723.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="534.9" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="531.9" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="534.9" y="718.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="531.9" y="691.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="534.9" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="531.9" y="675.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="534.9" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="531.9" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="534.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (26 samples, 0.64%)</title><rect x="532.2" y="835.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="535.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (26 samples, 0.64%)</title><rect x="532.2" y="819.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="535.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.10%)</title><rect x="532.2" y="803.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="535.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.10%)</title><rect x="532.2" y="787.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="535.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.10%)</title><rect x="532.2" y="771.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="535.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (2 samples, 0.05%)</title><rect x="533.4" y="803.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="536.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (11 samples, 0.27%)</title><rect x="533.9" y="803.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="536.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (6 samples, 0.15%)</title><rect x="535.1" y="787.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="538.1" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="536.8" y="787.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="539.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.trim (6 samples, 0.15%)</title><rect x="537.1" y="803.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="540.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (6 samples, 0.15%)</title><rect x="537.1" y="787.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="540.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.02%)</title><rect x="538.6" y="771.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="541.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (3 samples, 0.07%)</title><rect x="538.8" y="803.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="541.8" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="538.8" y="787.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="541.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="538.8" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="541.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="538.8" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.02%)</title><rect x="539.1" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="542.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$226/54037925.apply (1 samples, 0.02%)</title><rect x="539.4" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="542.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (1 samples, 0.02%)</title><rect x="539.4" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="542.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="539.4" y="755.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="542.4" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="539.7" y="835.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="542.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$179/379159333.accept (2 samples, 0.05%)</title><rect x="540.0" y="851.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (2 samples, 0.05%)</title><rect x="540.0" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (2 samples, 0.05%)</title><rect x="540.0" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="543.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (501 samples, 12.28%)</title><rect x="540.6" y="963.0" width="144.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="543.6" y="974.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (500 samples, 12.25%)</title><rect x="540.9" y="947.0" width="144.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.9" y="958.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (500 samples, 12.25%)</title><rect x="540.9" y="931.0" width="144.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.9" y="942.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (499 samples, 12.23%)</title><rect x="541.2" y="915.0" width="144.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.2" y="926.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (498 samples, 12.20%)</title><rect x="541.4" y="899.0" width="144.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="544.4" y="910.0">jdk/internal/net/h..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (3 samples, 0.07%)</title><rect x="541.4" y="883.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.07%)</title><rect x="541.4" y="867.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="544.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (492 samples, 12.06%)</title><rect x="542.3" y="883.0" width="142.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="545.3" y="894.0">jdk/internal/net/h..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.05%)</title><rect x="542.9" y="867.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="545.9" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.05%)</title><rect x="542.9" y="851.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="545.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$185/1905563662.get$Lambda (2 samples, 0.05%)</title><rect x="542.9" y="835.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="545.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$185/1905563662.&lt;init&gt; (2 samples, 0.05%)</title><rect x="542.9" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="545.9" y="830.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$33/433287555.apply (2 samples, 0.05%)</title><rect x="542.9" y="803.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="545.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (4 samples, 0.10%)</title><rect x="543.5" y="867.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (2 samples, 0.05%)</title><rect x="544.1" y="851.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="547.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (2 samples, 0.05%)</title><rect x="544.1" y="835.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.1" y="846.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="544.1" y="819.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="547.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (1 samples, 0.02%)</title><rect x="544.1" y="803.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.&lt;init&gt; (1 samples, 0.02%)</title><rect x="544.3" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (484 samples, 11.86%)</title><rect x="544.6" y="867.0" width="140.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="547.6" y="878.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (482 samples, 11.81%)</title><rect x="545.2" y="851.0" width="139.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="548.2" y="862.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$233/1245151766.run (404 samples, 9.90%)</title><rect x="545.2" y="835.0" width="116.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="548.2" y="846.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (404 samples, 9.90%)</title><rect x="545.2" y="819.0" width="116.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="548.2" y="830.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (402 samples, 9.85%)</title><rect x="545.2" y="803.0" width="116.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="548.2" y="814.0">jdk/internal/n..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (8 samples, 0.20%)</title><rect x="545.2" y="787.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="548.2" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.10%)</title><rect x="545.2" y="771.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="548.2" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.07%)</title><rect x="545.2" y="755.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.2" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.05%)</title><rect x="545.5" y="739.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="548.5" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="545.8" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="548.8" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.02%)</title><rect x="545.8" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="545.8" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="548.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="545.8" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="548.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="545.8" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="548.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.02%)</title><rect x="546.1" y="755.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="549.1" y="766.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.05%)</title><rect x="546.4" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="549.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.05%)</title><rect x="546.4" y="755.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="549.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (2 samples, 0.05%)</title><rect x="546.4" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="549.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.05%)</title><rect x="546.4" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="549.4" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.05%)</title><rect x="546.4" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="549.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.05%)</title><rect x="546.9" y="771.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="549.9" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.05%)</title><rect x="546.9" y="755.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.9" y="766.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.05%)</title><rect x="546.9" y="739.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.05%)</title><rect x="546.9" y="723.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="549.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.05%)</title><rect x="546.9" y="707.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="549.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.02%)</title><rect x="546.9" y="691.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="549.9" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.02%)</title><rect x="546.9" y="675.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="549.9" y="686.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (1 samples, 0.02%)</title><rect x="546.9" y="659.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="549.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.02%)</title><rect x="547.2" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.2" y="702.0"></text>
</g>
<g>
<title>java/util/Optional.map (1 samples, 0.02%)</title><rect x="547.5" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="550.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$$Lambda$246/950231617.apply (1 samples, 0.02%)</title><rect x="547.5" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="550.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.lambda$closeOrReturnToCache$2 (1 samples, 0.02%)</title><rect x="547.5" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="550.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="547.5" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="547.5" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="550.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (390 samples, 9.56%)</title><rect x="547.8" y="787.0" width="112.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="550.8" y="798.0">jdk/internal/n..</text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.05%)</title><rect x="548.1" y="771.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.1" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.05%)</title><rect x="548.1" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="551.1" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.02%)</title><rect x="548.1" y="739.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="551.1" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.02%)</title><rect x="548.1" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="551.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.02%)</title><rect x="548.4" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="551.4" y="750.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.02%)</title><rect x="548.4" y="723.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="551.4" y="734.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.02%)</title><rect x="548.4" y="707.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="551.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (387 samples, 9.48%)</title><rect x="548.7" y="771.0" width="111.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="551.7" y="782.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (349 samples, 8.55%)</title><rect x="548.7" y="755.0" width="100.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="551.7" y="766.0">jdk/internal..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="647.0" y="739.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="650.0" y="750.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="647.0" y="723.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="650.0" y="734.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="647.0" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="650.0" y="718.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="647.0" y="691.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="650.0" y="702.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="647.0" y="675.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="650.0" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="647.0" y="659.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="650.0" y="670.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (3 samples, 0.07%)</title><rect x="647.3" y="739.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="650.3" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (3 samples, 0.07%)</title><rect x="647.3" y="723.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="650.3" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.add (3 samples, 0.07%)</title><rect x="648.1" y="739.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="651.1" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkBefore (2 samples, 0.05%)</title><rect x="648.4" y="723.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="651.4" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="649.0" y="739.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="652.0" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="649.0" y="723.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="652.0" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="649.0" y="707.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="652.0" y="718.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="649.3" y="691.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="652.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (38 samples, 0.93%)</title><rect x="649.6" y="755.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="652.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.&lt;init&gt; (1 samples, 0.02%)</title><rect x="649.6" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="652.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="649.6" y="723.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="652.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (37 samples, 0.91%)</title><rect x="649.9" y="739.0" width="10.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="652.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (5 samples, 0.12%)</title><rect x="649.9" y="723.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="652.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5 samples, 0.12%)</title><rect x="649.9" y="707.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="652.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (5 samples, 0.12%)</title><rect x="649.9" y="691.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="652.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3 samples, 0.07%)</title><rect x="649.9" y="675.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="652.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.07%)</title><rect x="649.9" y="659.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="652.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.07%)</title><rect x="649.9" y="643.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (2 samples, 0.05%)</title><rect x="650.7" y="675.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="653.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (32 samples, 0.78%)</title><rect x="651.3" y="723.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (32 samples, 0.78%)</title><rect x="651.3" y="707.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (30 samples, 0.74%)</title><rect x="651.6" y="691.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (27 samples, 0.66%)</title><rect x="651.6" y="675.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="654.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (27 samples, 0.66%)</title><rect x="651.6" y="659.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.6" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (27 samples, 0.66%)</title><rect x="651.6" y="643.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="654.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (18 samples, 0.44%)</title><rect x="653.9" y="627.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="656.9" y="638.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.02%)</title><rect x="653.9" y="611.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="656.9" y="622.0"></text>
</g>
<g>
<title>__libc_write (17 samples, 0.42%)</title><rect x="654.2" y="611.0" width="4.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="657.2" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.37%)</title><rect x="654.8" y="595.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="657.8" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.37%)</title><rect x="654.8" y="579.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="657.8" y="590.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="655.1" y="563.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="658.1" y="574.0"></text>
</g>
<g>
<title>ksys_write (13 samples, 0.32%)</title><rect x="655.4" y="563.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="658.4" y="574.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="655.4" y="547.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="658.4" y="558.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="655.4" y="531.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="658.4" y="542.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="655.7" y="547.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="658.7" y="558.0"></text>
</g>
<g>
<title>vfs_write (11 samples, 0.27%)</title><rect x="655.9" y="547.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="658.9" y="558.0"></text>
</g>
<g>
<title>new_sync_write (9 samples, 0.22%)</title><rect x="655.9" y="531.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="658.9" y="542.0"></text>
</g>
<g>
<title>pipe_write (7 samples, 0.17%)</title><rect x="656.5" y="515.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="659.5" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.17%)</title><rect x="656.5" y="499.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="659.5" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.17%)</title><rect x="656.5" y="483.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="659.5" y="494.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.05%)</title><rect x="658.6" y="531.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="661.6" y="542.0"></text>
</g>
<g>
<title>selinux_file_permission (1 samples, 0.02%)</title><rect x="658.8" y="515.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="661.8" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="659.1" y="627.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="662.1" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="659.1" y="611.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="662.1" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="659.1" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="662.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (3 samples, 0.07%)</title><rect x="659.4" y="675.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.4" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.07%)</title><rect x="659.4" y="659.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="662.4" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.02%)</title><rect x="659.4" y="643.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="662.4" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.05%)</title><rect x="659.7" y="643.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="662.7" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.84] (2 samples, 0.05%)</title><rect x="659.7" y="627.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="662.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.02%)</title><rect x="660.3" y="691.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="663.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (3 samples, 0.07%)</title><rect x="660.6" y="787.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.6" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.07%)</title><rect x="660.6" y="771.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="663.6" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.05%)</title><rect x="660.9" y="755.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="663.9" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.02%)</title><rect x="660.9" y="739.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="663.9" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.84] (1 samples, 0.02%)</title><rect x="661.2" y="739.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="664.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.logTrace (2 samples, 0.05%)</title><rect x="661.4" y="803.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="664.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.trace (2 samples, 0.05%)</title><rect x="661.4" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="664.4" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.characteristics (1 samples, 0.02%)</title><rect x="661.7" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="664.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$234/1815637731.accept (12 samples, 0.29%)</title><rect x="662.0" y="835.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="665.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (12 samples, 0.29%)</title><rect x="662.0" y="819.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="665.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (12 samples, 0.29%)</title><rect x="662.0" y="803.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="665.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (12 samples, 0.29%)</title><rect x="662.0" y="787.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.29%)</title><rect x="662.0" y="771.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="665.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (12 samples, 0.29%)</title><rect x="662.0" y="755.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (12 samples, 0.29%)</title><rect x="662.0" y="739.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.12%)</title><rect x="662.0" y="723.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.12%)</title><rect x="662.0" y="707.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="665.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (5 samples, 0.12%)</title><rect x="662.0" y="691.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 0.12%)</title><rect x="662.0" y="675.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="665.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.07%)</title><rect x="662.3" y="659.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.07%)</title><rect x="662.3" y="643.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="665.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$237/952850743.accept (2 samples, 0.05%)</title><rect x="662.3" y="627.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="665.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$238/632069876.accept (1 samples, 0.02%)</title><rect x="662.9" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.02%)</title><rect x="663.2" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="666.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$237/952850743.accept (2 samples, 0.05%)</title><rect x="663.5" y="723.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (2 samples, 0.05%)</title><rect x="663.5" y="707.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (2 samples, 0.05%)</title><rect x="663.5" y="691.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.02%)</title><rect x="663.8" y="675.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="666.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.02%)</title><rect x="663.8" y="659.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$238/632069876.accept (5 samples, 0.12%)</title><rect x="664.0" y="723.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="667.0" y="734.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (1 samples, 0.02%)</title><rect x="664.3" y="707.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="667.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (3 samples, 0.07%)</title><rect x="664.6" y="707.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="667.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (3 samples, 0.07%)</title><rect x="664.6" y="691.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.6" y="702.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (1 samples, 0.02%)</title><rect x="665.2" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="668.2" y="686.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (1 samples, 0.02%)</title><rect x="665.2" y="659.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (66 samples, 1.62%)</title><rect x="665.5" y="835.0" width="19.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="668.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (66 samples, 1.62%)</title><rect x="665.5" y="819.0" width="19.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (66 samples, 1.62%)</title><rect x="665.5" y="803.0" width="19.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (66 samples, 1.62%)</title><rect x="665.5" y="787.0" width="19.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="668.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (66 samples, 1.62%)</title><rect x="665.5" y="771.0" width="19.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="668.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (66 samples, 1.62%)</title><rect x="665.5" y="755.0" width="19.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (65 samples, 1.59%)</title><rect x="665.8" y="739.0" width="18.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="668.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.05%)</title><rect x="665.8" y="723.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="668.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.05%)</title><rect x="665.8" y="707.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="668.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2 samples, 0.05%)</title><rect x="665.8" y="691.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="668.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.05%)</title><rect x="665.8" y="675.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.05%)</title><rect x="665.8" y="659.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="668.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.05%)</title><rect x="665.8" y="643.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="668.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$241/404297872.accept (2 samples, 0.05%)</title><rect x="665.8" y="627.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$241/404297872.accept (63 samples, 1.54%)</title><rect x="666.4" y="723.0" width="18.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (61 samples, 1.49%)</title><rect x="666.9" y="707.0" width="17.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (61 samples, 1.49%)</title><rect x="666.9" y="691.0" width="17.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (61 samples, 1.49%)</title><rect x="666.9" y="675.0" width="17.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="669.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (59 samples, 1.45%)</title><rect x="667.5" y="659.0" width="17.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="670.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (59 samples, 1.45%)</title><rect x="667.5" y="643.0" width="17.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="670.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (58 samples, 1.42%)</title><rect x="667.5" y="627.0" width="16.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="670.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (48 samples, 1.18%)</title><rect x="667.8" y="611.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (48 samples, 1.18%)</title><rect x="667.8" y="595.0" width="13.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="670.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (48 samples, 1.18%)</title><rect x="667.8" y="579.0" width="13.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="670.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (48 samples, 1.18%)</title><rect x="667.8" y="563.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="670.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (48 samples, 1.18%)</title><rect x="667.8" y="547.0" width="13.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (48 samples, 1.18%)</title><rect x="667.8" y="531.0" width="13.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="670.8" y="542.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.20%)</title><rect x="667.8" y="515.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="670.8" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.02%)</title><rect x="668.1" y="499.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="671.1" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.07%)</title><rect x="668.4" y="499.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="671.4" y="510.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.05%)</title><rect x="669.3" y="499.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="672.3" y="510.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="669.8" y="499.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="672.8" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_signal (40 samples, 0.98%)</title><rect x="670.1" y="515.0" width="11.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="673.1" y="526.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="673.3" y="499.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="676.3" y="510.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="673.3" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="676.3" y="494.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="673.3" y="467.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="676.3" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="673.3" y="451.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="676.3" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.69%)</title><rect x="673.6" y="499.0" width="8.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="676.6" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.69%)</title><rect x="673.6" y="483.0" width="8.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="676.6" y="494.0"></text>
</g>
<g>
<title>__x64_sys_futex (25 samples, 0.61%)</title><rect x="674.5" y="467.0" width="7.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="677.5" y="478.0"></text>
</g>
<g>
<title>do_futex (23 samples, 0.56%)</title><rect x="675.0" y="451.0" width="6.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="678.0" y="462.0"></text>
</g>
<g>
<title>futex_wake (23 samples, 0.56%)</title><rect x="675.0" y="435.0" width="6.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="678.0" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="675.0" y="419.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="678.0" y="430.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="675.3" y="419.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="678.3" y="430.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="675.6" y="403.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="678.6" y="414.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 0.49%)</title><rect x="675.9" y="419.0" width="5.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="678.9" y="430.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 0.49%)</title><rect x="675.9" y="403.0" width="5.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="678.9" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.49%)</title><rect x="675.9" y="387.0" width="5.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="678.9" y="398.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="681.4" y="371.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="684.4" y="382.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="681.4" y="355.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="684.4" y="366.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="681.4" y="339.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="684.4" y="350.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="681.4" y="323.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="684.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.22%)</title><rect x="681.7" y="611.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (7 samples, 0.17%)</title><rect x="682.3" y="595.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="685.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7 samples, 0.17%)</title><rect x="682.3" y="579.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.05%)</title><rect x="682.8" y="563.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="683.1" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$136/1535178212.accept (1 samples, 0.02%)</title><rect x="683.1" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.07%)</title><rect x="683.4" y="563.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.02%)</title><rect x="684.0" y="547.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="687.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$136/1535178212.accept (1 samples, 0.02%)</title><rect x="684.3" y="627.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (1 samples, 0.02%)</title><rect x="684.3" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="687.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.02%)</title><rect x="684.3" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.02%)</title><rect x="684.3" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (3 samples, 0.07%)</title><rect x="684.6" y="883.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="687.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.05%)</title><rect x="684.9" y="867.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="687.9" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$273/1186486267.run (60 samples, 1.47%)</title><rect x="685.4" y="995.0" width="17.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="688.4" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (60 samples, 1.47%)</title><rect x="685.4" y="979.0" width="17.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="688.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.delete (52 samples, 1.27%)</title><rect x="685.4" y="963.0" width="15.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="688.4" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="685.7" y="947.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="688.7" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="685.7" y="931.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.7" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$275/2078872434.get$Lambda (1 samples, 0.02%)</title><rect x="685.7" y="915.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="688.7" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$278/375266651.get$Lambda (2 samples, 0.05%)</title><rect x="686.0" y="915.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="689.0" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$278/375266651.&lt;init&gt; (2 samples, 0.05%)</title><rect x="686.0" y="899.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="689.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2 samples, 0.05%)</title><rect x="686.6" y="947.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="689.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2 samples, 0.05%)</title><rect x="686.6" y="931.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="689.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.&lt;init&gt; (1 samples, 0.02%)</title><rect x="686.9" y="915.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="686.9" y="899.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="689.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="686.9" y="883.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="689.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (21 samples, 0.51%)</title><rect x="687.2" y="947.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="690.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (21 samples, 0.51%)</title><rect x="687.2" y="931.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (21 samples, 0.51%)</title><rect x="687.2" y="915.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="690.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (20 samples, 0.49%)</title><rect x="687.5" y="899.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="690.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (18 samples, 0.44%)</title><rect x="688.0" y="883.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (2 samples, 0.05%)</title><rect x="688.0" y="867.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (16 samples, 0.39%)</title><rect x="688.6" y="867.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.37%)</title><rect x="688.9" y="851.0" width="4.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.37%)</title><rect x="688.9" y="835.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="691.9" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="689.2" y="819.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="692.2" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="689.2" y="803.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="692.2" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="689.5" y="803.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="692.5" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.29%)</title><rect x="689.8" y="819.0" width="3.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="692.8" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.20%)</title><rect x="690.9" y="803.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="693.9" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.20%)</title><rect x="690.9" y="787.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="693.9" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.20%)</title><rect x="690.9" y="771.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="693.9" y="782.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.17%)</title><rect x="691.2" y="755.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="694.2" y="766.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.17%)</title><rect x="691.2" y="739.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="694.2" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="691.2" y="723.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="694.2" y="734.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.12%)</title><rect x="691.8" y="723.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="694.8" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.12%)</title><rect x="691.8" y="707.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="694.8" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.12%)</title><rect x="691.8" y="691.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="694.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.handleLocally (15 samples, 0.37%)</title><rect x="693.2" y="947.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (15 samples, 0.37%)</title><rect x="693.2" y="931.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="696.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (15 samples, 0.37%)</title><rect x="693.2" y="915.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="696.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (15 samples, 0.37%)</title><rect x="693.2" y="899.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (15 samples, 0.37%)</title><rect x="693.2" y="883.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="696.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (14 samples, 0.34%)</title><rect x="693.5" y="867.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="696.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (14 samples, 0.34%)</title><rect x="693.5" y="851.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="696.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.32%)</title><rect x="693.8" y="835.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.32%)</title><rect x="693.8" y="819.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="696.8" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="693.8" y="803.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="696.8" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.07%)</title><rect x="694.1" y="803.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="697.1" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="694.4" y="787.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="697.4" y="798.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="694.7" y="787.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="697.7" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.22%)</title><rect x="695.0" y="803.0" width="2.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="698.0" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.20%)</title><rect x="695.3" y="787.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="698.3" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.20%)</title><rect x="695.3" y="771.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="698.3" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.17%)</title><rect x="695.6" y="755.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="698.6" y="766.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.17%)</title><rect x="695.6" y="739.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="698.6" y="750.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.17%)</title><rect x="695.6" y="723.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="698.6" y="734.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.17%)</title><rect x="695.6" y="707.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="698.6" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.17%)</title><rect x="695.6" y="691.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="698.6" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.17%)</title><rect x="695.6" y="675.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="698.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (10 samples, 0.25%)</title><rect x="697.6" y="947.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.6" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.02%)</title><rect x="697.6" y="931.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="700.6" y="942.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="697.6" y="915.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="700.6" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (1 samples, 0.02%)</title><rect x="697.6" y="899.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.6" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (1 samples, 0.02%)</title><rect x="697.6" y="883.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.6" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (1 samples, 0.02%)</title><rect x="697.6" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="700.6" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.02%)</title><rect x="697.6" y="851.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="700.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="697.6" y="835.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (9 samples, 0.22%)</title><rect x="697.9" y="931.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="700.9" y="942.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (5 samples, 0.12%)</title><rect x="697.9" y="915.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.9" y="926.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (4 samples, 0.10%)</title><rect x="697.9" y="899.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.9" y="910.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (4 samples, 0.10%)</title><rect x="697.9" y="883.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="700.9" y="894.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (4 samples, 0.10%)</title><rect x="697.9" y="867.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.9" y="878.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (4 samples, 0.10%)</title><rect x="697.9" y="851.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="700.9" y="862.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (4 samples, 0.10%)</title><rect x="697.9" y="835.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.9" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.10%)</title><rect x="697.9" y="819.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.9" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.10%)</title><rect x="697.9" y="803.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="700.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.10%)</title><rect x="697.9" y="787.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.9" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.10%)</title><rect x="697.9" y="771.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="700.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="698.5" y="755.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="701.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="698.7" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="701.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="698.7" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="701.7" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="698.7" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="701.7" y="734.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (1 samples, 0.02%)</title><rect x="699.0" y="899.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.0" y="910.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.munch (1 samples, 0.02%)</title><rect x="699.0" y="883.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="702.0" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.compact (1 samples, 0.02%)</title><rect x="699.0" y="867.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.0" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="699.0" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.0" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="699.0" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="702.0" y="846.0"></text>
</g>
<g>
<title>com/google/common/hash/HashCode$BytesHashCode.asLong (1 samples, 0.02%)</title><rect x="699.3" y="915.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="702.3" y="926.0"></text>
</g>
<g>
<title>com/google/common/hash/HashCode$BytesHashCode.padToLong (1 samples, 0.02%)</title><rect x="699.3" y="899.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="702.3" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="699.3" y="883.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.3" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (3 samples, 0.07%)</title><rect x="699.6" y="915.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="702.6" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (3 samples, 0.07%)</title><rect x="699.6" y="899.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.6" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.05%)</title><rect x="699.9" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.9" y="894.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (2 samples, 0.05%)</title><rect x="699.9" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="702.9" y="878.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (2 samples, 0.05%)</title><rect x="699.9" y="851.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="702.9" y="862.0"></text>
</g>
<g>
<title>java/lang/Long.compare (2 samples, 0.05%)</title><rect x="699.9" y="835.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="702.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/MetaRequest.&lt;init&gt; (8 samples, 0.20%)</title><rect x="700.5" y="963.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.5" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.15%)</title><rect x="701.1" y="947.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="704.1" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="701.3" y="931.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="704.3" y="942.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.10%)</title><rect x="701.6" y="931.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="704.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (879 samples, 21.54%)</title><rect x="702.8" y="1043.0" width="254.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.8" y="1054.0">java/util/concurrent/ForkJoinWorke..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (879 samples, 21.54%)</title><rect x="702.8" y="1027.0" width="254.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.8" y="1038.0">java/util/concurrent/ForkJoinPool...</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (687 samples, 16.83%)</title><rect x="704.8" y="1011.0" width="198.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="707.8" y="1022.0">java/util/concurrent/ForkJ..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (673 samples, 16.49%)</title><rect x="707.7" y="995.0" width="194.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="710.7" y="1006.0">java/util/concurrent/Fork..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (3 samples, 0.07%)</title><rect x="708.0" y="979.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="711.0" y="990.0"></text>
</g>
<g>
<title>java/lang/Thread.yield (1 samples, 0.02%)</title><rect x="708.6" y="963.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="711.6" y="974.0"></text>
</g>
<g>
<title>__GI_sched_yield (1 samples, 0.02%)</title><rect x="708.6" y="947.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="711.6" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="708.6" y="931.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="711.6" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="708.6" y="915.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="711.6" y="926.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.02%)</title><rect x="708.6" y="899.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="711.6" y="910.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="708.6" y="883.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="711.6" y="894.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="708.6" y="867.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="711.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (669 samples, 16.39%)</title><rect x="708.9" y="979.0" width="193.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="711.9" y="990.0">java/util/concurrent/Fork..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.exec (311 samples, 7.62%)</title><rect x="709.2" y="963.0" width="89.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.2" y="974.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (311 samples, 7.62%)</title><rect x="709.2" y="947.0" width="89.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.2" y="958.0">java/util/..</text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="709.7" y="931.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="712.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.07%)</title><rect x="710.0" y="931.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.0" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="710.3" y="915.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="713.3" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="710.3" y="899.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="713.3" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="710.3" y="883.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="713.3" y="894.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="710.6" y="915.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="713.6" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$278/375266651.run (305 samples, 7.47%)</title><rect x="710.9" y="931.0" width="88.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="713.9" y="942.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$delete$16 (305 samples, 7.47%)</title><rect x="710.9" y="915.0" width="88.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="713.9" y="926.0">ru/mail/po..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="710.9" y="899.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="713.9" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="711.2" y="899.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="714.2" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="711.2" y="883.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.2" y="894.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="711.2" y="867.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="714.2" y="878.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="711.2" y="851.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="714.2" y="862.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="711.2" y="835.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="714.2" y="846.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="711.2" y="819.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="714.2" y="830.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="711.2" y="803.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="714.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.02%)</title><rect x="711.5" y="899.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.5" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (48 samples, 1.18%)</title><rect x="711.8" y="899.0" width="13.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.8" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (48 samples, 1.18%)</title><rect x="711.8" y="883.0" width="13.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="714.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (4 samples, 0.10%)</title><rect x="712.0" y="867.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.10%)</title><rect x="712.0" y="851.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="715.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.05%)</title><rect x="712.0" y="835.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="715.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.02%)</title><rect x="712.3" y="819.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="715.3" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="712.3" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="715.3" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="712.3" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquire (2 samples, 0.05%)</title><rect x="712.6" y="835.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="715.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.02%)</title><rect x="712.6" y="819.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="715.6" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="712.6" y="803.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="715.6" y="814.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="712.6" y="787.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="715.6" y="798.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="712.6" y="771.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="715.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="712.9" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.9" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="712.9" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.9" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="712.9" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.02%)</title><rect x="712.9" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock (2 samples, 0.05%)</title><rect x="713.2" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="716.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.05%)</title><rect x="713.2" y="851.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="716.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.05%)</title><rect x="713.2" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="716.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.05%)</title><rect x="713.2" y="819.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="716.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.05%)</title><rect x="713.2" y="803.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="716.2" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.05%)</title><rect x="713.2" y="787.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="716.2" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="713.2" y="771.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="716.2" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="713.2" y="755.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="716.2" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="713.5" y="739.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="716.5" y="750.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="713.5" y="723.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="716.5" y="734.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="713.5" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="716.5" y="718.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="713.5" y="691.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="716.5" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="713.5" y="675.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="716.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (41 samples, 1.00%)</title><rect x="713.8" y="867.0" width="11.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="716.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (38 samples, 0.93%)</title><rect x="714.1" y="851.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (38 samples, 0.93%)</title><rect x="714.1" y="835.0" width="11.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (1 samples, 0.02%)</title><rect x="714.6" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="717.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (1 samples, 0.02%)</title><rect x="714.6" y="803.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="717.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="714.9" y="819.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="717.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (34 samples, 0.83%)</title><rect x="715.2" y="819.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="718.2" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.34%)</title><rect x="721.0" y="803.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="724.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.27%)</title><rect x="721.9" y="787.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="724.9" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.02%)</title><rect x="722.2" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.2" y="782.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.22%)</title><rect x="722.5" y="771.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="725.5" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.05%)</title><rect x="724.5" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="727.5" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.05%)</title><rect x="724.5" y="739.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="727.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.getData (1 samples, 0.02%)</title><rect x="725.1" y="851.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="728.1" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.tombstone (1 samples, 0.02%)</title><rect x="725.3" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="728.3" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.&lt;init&gt; (1 samples, 0.02%)</title><rect x="725.3" y="835.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="728.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (254 samples, 6.22%)</title><rect x="725.6" y="899.0" width="73.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="728.6" y="910.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (254 samples, 6.22%)</title><rect x="725.6" y="883.0" width="73.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="728.6" y="894.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (250 samples, 6.13%)</title><rect x="726.2" y="867.0" width="72.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="729.2" y="878.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.15%)</title><rect x="726.2" y="851.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="729.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.15%)</title><rect x="726.2" y="835.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.02%)</title><rect x="726.2" y="819.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="729.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.02%)</title><rect x="726.2" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="729.2" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (5 samples, 0.12%)</title><rect x="726.5" y="819.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="729.5" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="727.7" y="803.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="730.7" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (244 samples, 5.98%)</title><rect x="727.9" y="851.0" width="70.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="730.9" y="862.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (244 samples, 5.98%)</title><rect x="727.9" y="835.0" width="70.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="730.9" y="846.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1 samples, 0.02%)</title><rect x="727.9" y="819.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="730.9" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (243 samples, 5.95%)</title><rect x="728.2" y="819.0" width="70.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="731.2" y="830.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (242 samples, 5.93%)</title><rect x="728.5" y="803.0" width="70.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="731.5" y="814.0">one/nio..</text>
</g>
<g>
<title>.annobin_send.c (238 samples, 5.83%)</title><rect x="729.1" y="787.0" width="68.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="732.1" y="798.0">.annobi..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (231 samples, 5.66%)</title><rect x="731.1" y="771.0" width="66.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="734.1" y="782.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (231 samples, 5.66%)</title><rect x="731.1" y="755.0" width="66.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="734.1" y="766.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_sendto (229 samples, 5.61%)</title><rect x="731.7" y="739.0" width="66.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="734.7" y="750.0">__x64_s..</text>
</g>
<g>
<title>__sys_sendto (229 samples, 5.61%)</title><rect x="731.7" y="723.0" width="66.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="734.7" y="734.0">__sys_s..</text>
</g>
<g>
<title>sock_sendmsg (225 samples, 5.51%)</title><rect x="732.0" y="707.0" width="65.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="735.0" y="718.0">sock_se..</text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.05%)</title><rect x="732.3" y="691.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="735.3" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg (222 samples, 5.44%)</title><rect x="732.9" y="691.0" width="64.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="735.9" y="702.0">tcp_sen..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="732.9" y="675.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="735.9" y="686.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="733.2" y="675.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="736.2" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="733.2" y="659.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="736.2" y="670.0"></text>
</g>
<g>
<title>release_sock (16 samples, 0.39%)</title><rect x="733.4" y="675.0" width="4.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="736.4" y="686.0"></text>
</g>
<g>
<title>__release_sock (16 samples, 0.39%)</title><rect x="733.4" y="659.0" width="4.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="736.4" y="670.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="733.4" y="643.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="736.4" y="654.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (15 samples, 0.37%)</title><rect x="733.7" y="643.0" width="4.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="736.7" y="654.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="734.0" y="627.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="737.0" y="638.0"></text>
</g>
<g>
<title>tcp_rcv_established (13 samples, 0.32%)</title><rect x="734.3" y="627.0" width="3.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="737.3" y="638.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="734.3" y="611.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="737.3" y="622.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.20%)</title><rect x="734.9" y="611.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="737.9" y="622.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="736.0" y="595.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="739.0" y="606.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="736.0" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="739.0" y="590.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="736.3" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="739.3" y="606.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.02%)</title><rect x="736.6" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="739.6" y="606.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.02%)</title><rect x="736.9" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="739.9" y="606.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.07%)</title><rect x="737.2" y="611.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="740.2" y="622.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.05%)</title><rect x="737.5" y="595.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="740.5" y="606.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="737.5" y="579.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="740.5" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (204 samples, 5.00%)</title><rect x="738.1" y="675.0" width="59.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="741.1" y="686.0">tcp_se..</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.10%)</title><rect x="738.4" y="659.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="741.4" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.07%)</title><rect x="738.6" y="643.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="741.6" y="654.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (189 samples, 4.63%)</title><rect x="739.5" y="659.0" width="54.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="742.5" y="670.0">__tcp..</text>
</g>
<g>
<title>tcp_write_xmit (189 samples, 4.63%)</title><rect x="739.5" y="643.0" width="54.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="742.5" y="654.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (181 samples, 4.44%)</title><rect x="739.8" y="627.0" width="52.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="742.8" y="638.0">__tcp..</text>
</g>
<g>
<title>__ip_queue_xmit (179 samples, 4.39%)</title><rect x="740.1" y="611.0" width="51.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="743.1" y="622.0">__ip_..</text>
</g>
<g>
<title>ip_local_out (27 samples, 0.66%)</title><rect x="740.1" y="595.0" width="7.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="743.1" y="606.0"></text>
</g>
<g>
<title>__ip_local_out (27 samples, 0.66%)</title><rect x="740.1" y="579.0" width="7.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="743.1" y="590.0"></text>
</g>
<g>
<title>nf_hook_slow (27 samples, 0.66%)</title><rect x="740.1" y="563.0" width="7.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="743.1" y="574.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.12%)</title><rect x="740.1" y="547.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="743.1" y="558.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (5 samples, 0.12%)</title><rect x="741.5" y="547.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="744.5" y="558.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.10%)</title><rect x="741.8" y="531.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="744.8" y="542.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (2 samples, 0.05%)</title><rect x="743.0" y="547.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="746.0" y="558.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (13 samples, 0.32%)</title><rect x="743.6" y="547.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="746.6" y="558.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (6 samples, 0.15%)</title><rect x="743.6" y="531.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="746.6" y="542.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (1 samples, 0.02%)</title><rect x="745.3" y="531.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="748.3" y="542.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (3 samples, 0.07%)</title><rect x="745.6" y="531.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="748.6" y="542.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (2 samples, 0.05%)</title><rect x="745.9" y="515.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="748.9" y="526.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (3 samples, 0.07%)</title><rect x="746.5" y="531.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="749.5" y="542.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="747.3" y="547.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="750.3" y="558.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="747.3" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="750.3" y="542.0"></text>
</g>
<g>
<title>selinux_ipv4_output (1 samples, 0.02%)</title><rect x="747.6" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="750.6" y="558.0"></text>
</g>
<g>
<title>netlbl_enabled (1 samples, 0.02%)</title><rect x="747.6" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="750.6" y="542.0"></text>
</g>
<g>
<title>ip_output (152 samples, 3.72%)</title><rect x="747.9" y="595.0" width="43.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="750.9" y="606.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output2 (145 samples, 3.55%)</title><rect x="748.8" y="579.0" width="41.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="751.8" y="590.0">ip_..</text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 0.25%)</title><rect x="749.1" y="563.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="752.1" y="574.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.20%)</title><rect x="749.1" y="547.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="752.1" y="558.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.15%)</title><rect x="749.6" y="531.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="752.6" y="542.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.07%)</title><rect x="749.9" y="515.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="752.9" y="526.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.07%)</title><rect x="749.9" y="499.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="752.9" y="510.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.05%)</title><rect x="750.2" y="483.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="753.2" y="494.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="750.8" y="515.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="753.8" y="526.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="751.1" y="515.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="754.1" y="526.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="751.4" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="754.4" y="558.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="751.7" y="547.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="754.7" y="558.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (134 samples, 3.28%)</title><rect x="751.9" y="563.0" width="38.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="754.9" y="574.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (133 samples, 3.26%)</title><rect x="752.2" y="547.0" width="38.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="755.2" y="558.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (131 samples, 3.21%)</title><rect x="752.8" y="531.0" width="37.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="755.8" y="542.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (131 samples, 3.21%)</title><rect x="752.8" y="515.0" width="37.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="755.8" y="526.0">__s..</text>
</g>
<g>
<title>net_rx_action (126 samples, 3.09%)</title><rect x="754.3" y="499.0" width="36.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="757.3" y="510.0">net..</text>
</g>
<g>
<title>process_backlog (125 samples, 3.06%)</title><rect x="754.5" y="483.0" width="36.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="757.5" y="494.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (125 samples, 3.06%)</title><rect x="754.5" y="467.0" width="36.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="757.5" y="478.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.05%)</title><rect x="754.5" y="451.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="757.5" y="462.0"></text>
</g>
<g>
<title>ip_rcv (123 samples, 3.01%)</title><rect x="755.1" y="451.0" width="35.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="758.1" y="462.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (96 samples, 2.35%)</title><rect x="755.1" y="435.0" width="27.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="758.1" y="446.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (83 samples, 2.03%)</title><rect x="755.1" y="419.0" width="24.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="758.1" y="430.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (83 samples, 2.03%)</title><rect x="755.1" y="403.0" width="24.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="758.1" y="414.0">i..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.05%)</title><rect x="755.4" y="387.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="758.4" y="398.0"></text>
</g>
<g>
<title>tcp_v4_rcv (80 samples, 1.96%)</title><rect x="756.0" y="387.0" width="23.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="759.0" y="398.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.12%)</title><rect x="756.3" y="371.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="759.3" y="382.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.02%)</title><rect x="757.4" y="355.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="760.4" y="366.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="757.7" y="371.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="760.7" y="382.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="758.0" y="371.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="761.0" y="382.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="758.0" y="355.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="761.0" y="366.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (1 samples, 0.02%)</title><rect x="758.0" y="339.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="761.0" y="350.0"></text>
</g>
<g>
<title>tcp_add_backlog (4 samples, 0.10%)</title><rect x="758.3" y="371.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="761.3" y="382.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.05%)</title><rect x="758.9" y="355.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="761.9" y="366.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (67 samples, 1.64%)</title><rect x="759.5" y="371.0" width="19.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="762.5" y="382.0"></text>
</g>
<g>
<title>tcp_rcv_established (67 samples, 1.64%)</title><rect x="759.5" y="355.0" width="19.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="762.5" y="366.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (1 samples, 0.02%)</title><rect x="760.0" y="339.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="763.0" y="350.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.02%)</title><rect x="760.0" y="323.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="763.0" y="334.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="760.0" y="307.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="763.0" y="318.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (29 samples, 0.71%)</title><rect x="760.3" y="339.0" width="8.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="763.3" y="350.0"></text>
</g>
<g>
<title>__ip_queue_xmit (25 samples, 0.61%)</title><rect x="760.3" y="323.0" width="7.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="763.3" y="334.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.05%)</title><rect x="760.3" y="307.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="763.3" y="318.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="760.3" y="291.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="763.3" y="302.0"></text>
</g>
<g>
<title>ip_local_out (19 samples, 0.47%)</title><rect x="760.9" y="307.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="763.9" y="318.0"></text>
</g>
<g>
<title>__ip_local_out (19 samples, 0.47%)</title><rect x="760.9" y="291.0" width="5.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="763.9" y="302.0"></text>
</g>
<g>
<title>nf_hook_slow (19 samples, 0.47%)</title><rect x="760.9" y="275.0" width="5.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="763.9" y="286.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (10 samples, 0.25%)</title><rect x="760.9" y="259.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="763.9" y="270.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (1 samples, 0.02%)</title><rect x="763.8" y="259.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="766.8" y="270.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.05%)</title><rect x="764.1" y="259.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="767.1" y="270.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (2 samples, 0.05%)</title><rect x="764.1" y="243.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="767.1" y="254.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (1 samples, 0.02%)</title><rect x="764.7" y="259.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="767.7" y="270.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (1 samples, 0.02%)</title><rect x="765.0" y="259.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="768.0" y="270.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (1 samples, 0.02%)</title><rect x="765.0" y="243.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="768.0" y="254.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="765.0" y="227.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="768.0" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (2 samples, 0.05%)</title><rect x="765.2" y="259.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="768.2" y="270.0"></text>
</g>
<g>
<title>selinux_ipv4_output (2 samples, 0.05%)</title><rect x="765.8" y="259.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="768.8" y="270.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.10%)</title><rect x="766.4" y="307.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="769.4" y="318.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="766.4" y="291.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="769.4" y="302.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="766.4" y="275.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="769.4" y="286.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="766.4" y="259.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="769.4" y="270.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="766.4" y="243.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="769.4" y="254.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.02%)</title><rect x="766.4" y="227.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="769.4" y="238.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="766.4" y="211.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="769.4" y="222.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="766.4" y="195.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="769.4" y="206.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="766.7" y="291.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="769.7" y="302.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="766.7" y="275.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="769.7" y="286.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.05%)</title><rect x="767.0" y="291.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="770.0" y="302.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (1 samples, 0.02%)</title><rect x="767.0" y="275.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="770.0" y="286.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (1 samples, 0.02%)</title><rect x="767.3" y="275.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="770.3" y="286.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (1 samples, 0.02%)</title><rect x="767.3" y="259.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="770.3" y="270.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="767.6" y="323.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="770.6" y="334.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.05%)</title><rect x="767.8" y="323.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="770.8" y="334.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="768.4" y="323.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="771.4" y="334.0"></text>
</g>
<g>
<title>tcp_ack (13 samples, 0.32%)</title><rect x="768.7" y="339.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="771.7" y="350.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.10%)</title><rect x="770.5" y="323.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="773.5" y="334.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="770.5" y="307.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="773.5" y="318.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="770.7" y="307.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="773.7" y="318.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="771.0" y="307.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="774.0" y="318.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="771.6" y="323.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="774.6" y="334.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="771.9" y="323.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="774.9" y="334.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="771.9" y="307.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="774.9" y="318.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="772.5" y="339.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="775.5" y="350.0"></text>
</g>
<g>
<title>tcp_data_queue (19 samples, 0.47%)</title><rect x="772.8" y="339.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="775.8" y="350.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="772.8" y="323.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="775.8" y="334.0"></text>
</g>
<g>
<title>sock_def_readable (17 samples, 0.42%)</title><rect x="773.1" y="323.0" width="4.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="776.1" y="334.0"></text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 0.37%)</title><rect x="773.6" y="307.0" width="4.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="776.6" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.34%)</title><rect x="773.9" y="291.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="776.9" y="302.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="778.0" y="323.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="781.0" y="334.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="778.3" y="339.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="781.3" y="350.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="778.3" y="323.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="781.3" y="334.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="778.3" y="307.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="781.3" y="318.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.02%)</title><rect x="778.5" y="339.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="781.5" y="350.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="778.8" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="781.8" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.32%)</title><rect x="779.1" y="419.0" width="3.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="782.1" y="430.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (9 samples, 0.22%)</title><rect x="779.4" y="403.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="782.4" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="781.7" y="387.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="784.7" y="398.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (1 samples, 0.02%)</title><rect x="782.0" y="403.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="785.0" y="414.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (1 samples, 0.02%)</title><rect x="782.3" y="403.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="785.3" y="414.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="782.6" y="403.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="785.6" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (27 samples, 0.66%)</title><rect x="782.9" y="435.0" width="7.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="785.9" y="446.0"></text>
</g>
<g>
<title>ip_sabotage_in	[br_netfilter] (1 samples, 0.02%)</title><rect x="783.2" y="419.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="786.2" y="430.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (21 samples, 0.51%)</title><rect x="783.5" y="419.0" width="6.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="786.5" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="789.2" y="403.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="792.2" y="414.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (1 samples, 0.02%)</title><rect x="789.5" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="792.5" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (1 samples, 0.02%)</title><rect x="789.8" y="419.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="792.8" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (1 samples, 0.02%)</title><rect x="790.1" y="419.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="793.1" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat] (1 samples, 0.02%)</title><rect x="790.4" y="419.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="793.4" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="790.4" y="403.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="793.4" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.10%)</title><rect x="790.7" y="579.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="793.7" y="590.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (2 samples, 0.05%)</title><rect x="790.7" y="563.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="793.7" y="574.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat] (2 samples, 0.05%)</title><rect x="791.3" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="794.3" y="574.0"></text>
</g>
<g>
<title>nf_nat_inet_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="791.6" y="547.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="794.6" y="558.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.02%)</title><rect x="791.8" y="611.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="794.8" y="622.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="791.8" y="595.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="794.8" y="606.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.07%)</title><rect x="792.1" y="627.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="795.1" y="638.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.07%)</title><rect x="792.1" y="611.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="795.1" y="622.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.10%)</title><rect x="793.0" y="627.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="796.0" y="638.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.10%)</title><rect x="793.0" y="611.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="796.0" y="622.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.10%)</title><rect x="793.0" y="595.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="796.0" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="793.3" y="579.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="796.3" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.07%)</title><rect x="794.2" y="659.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="797.2" y="670.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.07%)</title><rect x="794.2" y="643.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="797.2" y="654.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="794.7" y="627.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="797.7" y="638.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="794.7" y="611.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="797.7" y="622.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.07%)</title><rect x="795.0" y="659.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="798.0" y="670.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.10%)</title><rect x="795.9" y="659.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="798.9" y="670.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.07%)</title><rect x="796.2" y="643.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="799.2" y="654.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="796.8" y="627.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="799.8" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.07%)</title><rect x="797.1" y="707.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="800.1" y="718.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="797.1" y="691.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="800.1" y="702.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="797.1" y="675.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="800.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="797.9" y="787.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="800.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="797.9" y="771.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="800.9" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="797.9" y="755.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="800.9" y="766.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="798.2" y="787.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="801.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="798.5" y="867.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="801.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="798.5" y="851.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="801.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="798.5" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="801.5" y="846.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="798.8" y="867.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="801.8" y="878.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="798.8" y="851.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="801.8" y="862.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="798.8" y="835.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="801.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (52 samples, 1.27%)</title><rect x="799.1" y="963.0" width="15.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="802.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (52 samples, 1.27%)</title><rect x="799.1" y="947.0" width="15.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="802.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (18 samples, 0.44%)</title><rect x="799.4" y="931.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="802.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (17 samples, 0.42%)</title><rect x="799.7" y="915.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="802.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (17 samples, 0.42%)</title><rect x="799.7" y="899.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="802.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (15 samples, 0.37%)</title><rect x="799.7" y="883.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="802.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (15 samples, 0.37%)</title><rect x="799.7" y="867.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="802.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (15 samples, 0.37%)</title><rect x="799.7" y="851.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="802.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (15 samples, 0.37%)</title><rect x="799.7" y="835.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="802.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.37%)</title><rect x="799.7" y="819.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.37%)</title><rect x="799.7" y="803.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="802.7" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.10%)</title><rect x="799.9" y="787.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="802.9" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="799.9" y="771.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="802.9" y="782.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (3 samples, 0.07%)</title><rect x="800.2" y="771.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="803.2" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.25%)</title><rect x="801.1" y="787.0" width="2.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="804.1" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.20%)</title><rect x="801.7" y="771.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="804.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.20%)</title><rect x="801.7" y="755.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="804.7" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.20%)</title><rect x="801.7" y="739.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="804.7" y="750.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.20%)</title><rect x="801.7" y="723.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="804.7" y="734.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.20%)</title><rect x="801.7" y="707.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="804.7" y="718.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="802.3" y="691.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="805.3" y="702.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.12%)</title><rect x="802.5" y="691.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="805.5" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.12%)</title><rect x="802.5" y="675.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="805.5" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.12%)</title><rect x="802.5" y="659.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="805.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.05%)</title><rect x="804.0" y="883.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="807.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2 samples, 0.05%)</title><rect x="804.0" y="867.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="807.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2 samples, 0.05%)</title><rect x="804.0" y="851.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="807.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="804.3" y="835.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="804.3" y="819.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="807.3" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="804.3" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="807.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$111/1101527014.get (33 samples, 0.81%)</title><rect x="804.6" y="931.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="807.6" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$handleLocally$24 (33 samples, 0.81%)</title><rect x="804.6" y="915.0" width="9.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.6" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.contains (1 samples, 0.02%)</title><rect x="804.9" y="899.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.9" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOf (1 samples, 0.02%)</title><rect x="804.9" y="883.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="807.9" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOfRange (1 samples, 0.02%)</title><rect x="804.9" y="867.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.9" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$274/448387530.run (31 samples, 0.76%)</title><rect x="805.1" y="899.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="808.1" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$delete$18 (31 samples, 0.76%)</title><rect x="805.1" y="883.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="808.1" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.removeFromDao (31 samples, 0.76%)</title><rect x="805.1" y="867.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="808.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="805.4" y="851.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.4" y="862.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.02%)</title><rect x="805.4" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="808.4" y="846.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (1 samples, 0.02%)</title><rect x="805.4" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="808.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (29 samples, 0.71%)</title><rect x="805.7" y="851.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="808.7" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (29 samples, 0.71%)</title><rect x="805.7" y="835.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="808.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (1 samples, 0.02%)</title><rect x="806.0" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="809.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="806.0" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="806.0" y="787.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="809.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.02%)</title><rect x="806.0" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.02%)</title><rect x="806.0" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="809.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="806.0" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.0" y="750.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.02%)</title><rect x="806.0" y="723.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="809.0" y="734.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="806.0" y="707.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="809.0" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="806.0" y="691.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="809.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="806.0" y="675.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="809.0" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="806.0" y="659.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="809.0" y="670.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="806.0" y="643.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="809.0" y="654.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="806.0" y="627.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="809.0" y="638.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="806.0" y="611.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="809.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock (2 samples, 0.05%)</title><rect x="806.3" y="819.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="809.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.05%)</title><rect x="806.3" y="803.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="809.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.05%)</title><rect x="806.3" y="787.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.05%)</title><rect x="806.3" y="771.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="809.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.05%)</title><rect x="806.3" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.3" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.05%)</title><rect x="806.3" y="739.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="809.3" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="806.3" y="723.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="809.3" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="806.3" y="707.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="809.3" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="806.3" y="691.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="809.3" y="702.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="806.3" y="675.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="809.3" y="686.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="806.3" y="659.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="809.3" y="670.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.05%)</title><rect x="806.3" y="643.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="809.3" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.05%)</title><rect x="806.3" y="627.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="809.3" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="806.3" y="611.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="809.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (23 samples, 0.56%)</title><rect x="806.9" y="819.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (23 samples, 0.56%)</title><rect x="806.9" y="803.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="809.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (23 samples, 0.56%)</title><rect x="806.9" y="787.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="809.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.02%)</title><rect x="806.9" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.02%)</title><rect x="806.9" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="806.9" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="806.9" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="809.9" y="734.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.02%)</title><rect x="806.9" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (22 samples, 0.54%)</title><rect x="807.2" y="771.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="810.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 0.29%)</title><rect x="810.1" y="755.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.20%)</title><rect x="811.2" y="739.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.2" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="811.5" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="814.5" y="734.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.12%)</title><rect x="811.8" y="723.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="814.8" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="812.7" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="815.7" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="812.7" y="691.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="815.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/util/ArraysSupport.vectorizedMismatch (1 samples, 0.02%)</title><rect x="813.0" y="707.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="816.0" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="813.2" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="816.2" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="813.2" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="816.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.setToFlush (2 samples, 0.05%)</title><rect x="813.5" y="819.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="816.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (305 samples, 7.47%)</title><rect x="814.1" y="963.0" width="88.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="817.1" y="974.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (118 samples, 2.89%)</title><rect x="815.0" y="947.0" width="34.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="818.0" y="958.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$275/2078872434.apply (118 samples, 2.89%)</title><rect x="815.0" y="931.0" width="34.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="818.0" y="942.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$delete$19 (118 samples, 2.89%)</title><rect x="815.0" y="915.0" width="34.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="818.0" y="926.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getResponsesFromReplicas (118 samples, 2.89%)</title><rect x="815.0" y="899.0" width="34.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="818.0" y="910.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="815.6" y="883.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="818.6" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1000975683.invoke (1 samples, 0.02%)</title><rect x="815.6" y="867.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="818.6" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="815.6" y="851.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="818.6" y="862.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.02%)</title><rect x="815.6" y="835.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="818.6" y="846.0"></text>
</g>
<g>
<title>java/net/URI.create (19 samples, 0.47%)</title><rect x="815.8" y="883.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="818.8" y="894.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (19 samples, 0.47%)</title><rect x="815.8" y="867.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.8" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.&lt;init&gt; (1 samples, 0.02%)</title><rect x="815.8" y="851.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="818.8" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (18 samples, 0.44%)</title><rect x="816.1" y="851.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.1" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (18 samples, 0.44%)</title><rect x="816.1" y="835.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="819.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="816.4" y="819.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="819.4" y="830.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.02%)</title><rect x="816.7" y="819.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="819.7" y="830.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.02%)</title><rect x="816.7" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="819.7" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (12 samples, 0.29%)</title><rect x="817.0" y="819.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="820.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="818.2" y="803.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="818.2" y="787.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.2" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="818.2" y="771.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="821.2" y="782.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (2 samples, 0.05%)</title><rect x="818.4" y="803.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="821.4" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.02%)</title><rect x="818.4" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="821.4" y="798.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.02%)</title><rect x="818.4" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="821.4" y="782.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (1 samples, 0.02%)</title><rect x="818.7" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="818.7" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="821.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="818.7" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="821.7" y="766.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.07%)</title><rect x="819.0" y="803.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="822.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.07%)</title><rect x="819.0" y="787.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.05%)</title><rect x="819.3" y="771.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="822.3" y="782.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="819.9" y="803.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="822.9" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="820.2" y="803.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="823.2" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.07%)</title><rect x="820.5" y="819.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.05%)</title><rect x="820.8" y="803.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="823.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="821.1" y="787.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.1" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (2 samples, 0.05%)</title><rect x="821.3" y="883.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="824.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (2 samples, 0.05%)</title><rect x="821.3" y="867.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="824.3" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.02%)</title><rect x="821.9" y="883.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="824.9" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.checkForComodification (1 samples, 0.02%)</title><rect x="821.9" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="824.9" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.02%)</title><rect x="822.2" y="883.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="825.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (67 samples, 1.64%)</title><rect x="822.5" y="883.0" width="19.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (67 samples, 1.64%)</title><rect x="822.5" y="867.0" width="19.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="825.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (67 samples, 1.64%)</title><rect x="822.5" y="851.0" width="19.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="825.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (67 samples, 1.64%)</title><rect x="822.5" y="835.0" width="19.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="825.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (44 samples, 1.08%)</title><rect x="823.4" y="819.0" width="12.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.4" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.map (1 samples, 0.02%)</title><rect x="825.1" y="803.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="828.1" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8 samples, 0.20%)</title><rect x="825.4" y="803.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="828.4" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8 samples, 0.20%)</title><rect x="825.4" y="787.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="828.4" y="798.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (6 samples, 0.15%)</title><rect x="826.0" y="771.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="829.0" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (6 samples, 0.15%)</title><rect x="826.0" y="755.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="829.0" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.accept (6 samples, 0.15%)</title><rect x="826.0" y="739.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="829.0" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.15%)</title><rect x="826.0" y="723.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="829.0" y="734.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (6 samples, 0.15%)</title><rect x="826.0" y="707.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.0" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.accept (6 samples, 0.15%)</title><rect x="826.0" y="691.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.0" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (6 samples, 0.15%)</title><rect x="826.0" y="675.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="829.0" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="826.0" y="659.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.0" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="826.0" y="643.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="829.0" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="826.0" y="627.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="829.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="826.0" y="611.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="829.0" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="826.0" y="595.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.0" y="606.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="826.0" y="579.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="829.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$64/1610702581.test (4 samples, 0.10%)</title><rect x="826.5" y="659.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="829.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (4 samples, 0.10%)</title><rect x="826.5" y="643.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="829.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1433666880.test (3 samples, 0.07%)</title><rect x="826.5" y="627.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="829.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (3 samples, 0.07%)</title><rect x="826.5" y="611.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="829.5" y="622.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (3 samples, 0.07%)</title><rect x="826.5" y="595.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="829.5" y="606.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (3 samples, 0.07%)</title><rect x="826.5" y="579.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.5" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (3 samples, 0.07%)</title><rect x="826.5" y="563.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="829.5" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.05%)</title><rect x="826.8" y="547.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="829.8" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.05%)</title><rect x="826.8" y="531.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="829.8" y="542.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="826.8" y="515.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="829.8" y="526.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.05%)</title><rect x="826.8" y="499.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="829.8" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.05%)</title><rect x="826.8" y="483.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="829.8" y="494.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.02%)</title><rect x="827.1" y="467.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (1 samples, 0.02%)</title><rect x="827.4" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (27 samples, 0.66%)</title><rect x="827.7" y="803.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="830.7" y="814.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (27 samples, 0.66%)</title><rect x="827.7" y="787.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.7" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (27 samples, 0.66%)</title><rect x="827.7" y="771.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.7" y="782.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (19 samples, 0.47%)</title><rect x="827.7" y="755.0" width="5.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="830.7" y="766.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (2 samples, 0.05%)</title><rect x="828.0" y="739.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="831.0" y="750.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.02%)</title><rect x="828.6" y="739.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="831.6" y="750.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.02%)</title><rect x="828.9" y="739.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="831.9" y="750.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.05%)</title><rect x="829.1" y="739.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="832.1" y="750.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.02%)</title><rect x="829.7" y="739.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="832.7" y="750.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="830.0" y="739.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="833.0" y="750.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="830.0" y="723.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="833.0" y="734.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="830.0" y="707.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="833.0" y="718.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (10 samples, 0.25%)</title><rect x="830.3" y="739.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="833.3" y="750.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (5 samples, 0.12%)</title><rect x="831.2" y="723.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="834.2" y="734.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.05%)</title><rect x="832.0" y="707.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="835.0" y="718.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.02%)</title><rect x="832.6" y="723.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="835.6" y="734.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="832.9" y="723.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="835.9" y="734.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.02%)</title><rect x="832.9" y="707.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="835.9" y="718.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="832.9" y="691.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="835.9" y="702.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.05%)</title><rect x="833.2" y="755.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="836.2" y="766.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (6 samples, 0.15%)</title><rect x="833.8" y="755.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="836.8" y="766.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (6 samples, 0.15%)</title><rect x="833.8" y="739.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="836.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.10%)</title><rect x="833.8" y="723.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="836.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.10%)</title><rect x="833.8" y="707.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="836.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.10%)</title><rect x="833.8" y="691.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="836.8" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="834.4" y="675.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="837.4" y="686.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (2 samples, 0.05%)</title><rect x="834.9" y="723.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="837.9" y="734.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.02%)</title><rect x="834.9" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="837.9" y="718.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.02%)</title><rect x="834.9" y="691.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="837.9" y="702.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.02%)</title><rect x="834.9" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="837.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="834.9" y="659.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="837.9" y="670.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.02%)</title><rect x="835.2" y="707.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="838.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="835.2" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="838.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="835.2" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="838.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="835.2" y="659.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="838.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="835.5" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="838.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (1 samples, 0.02%)</title><rect x="835.8" y="803.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="838.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (12 samples, 0.29%)</title><rect x="836.1" y="819.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (4 samples, 0.10%)</title><rect x="836.4" y="803.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="839.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (7 samples, 0.17%)</title><rect x="837.5" y="803.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="840.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (7 samples, 0.17%)</title><rect x="837.5" y="787.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="840.5" y="798.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (2 samples, 0.05%)</title><rect x="837.5" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="840.5" y="782.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (2 samples, 0.05%)</title><rect x="837.5" y="755.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (2 samples, 0.05%)</title><rect x="837.5" y="739.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="840.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (1 samples, 0.02%)</title><rect x="837.8" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.8" y="734.0"></text>
</g>
<g>
<title>java/lang/ref/SoftReference.get (1 samples, 0.02%)</title><rect x="837.8" y="707.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="840.8" y="718.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (3 samples, 0.07%)</title><rect x="838.1" y="771.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="841.1" y="782.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (2 samples, 0.05%)</title><rect x="838.4" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="841.4" y="766.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (2 samples, 0.05%)</title><rect x="838.4" y="739.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.4" y="750.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (2 samples, 0.05%)</title><rect x="838.4" y="723.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="841.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (2 samples, 0.05%)</title><rect x="838.4" y="707.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="841.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (1 samples, 0.02%)</title><rect x="838.7" y="691.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="841.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (1 samples, 0.02%)</title><rect x="839.0" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="842.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (1 samples, 0.02%)</title><rect x="839.3" y="771.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="842.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (8 samples, 0.20%)</title><rect x="839.6" y="819.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="842.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (6 samples, 0.15%)</title><rect x="839.6" y="803.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.15%)</title><rect x="839.6" y="787.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="842.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.15%)</title><rect x="839.6" y="771.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="842.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.10%)</title><rect x="839.6" y="755.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="842.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.10%)</title><rect x="839.6" y="739.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="842.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.10%)</title><rect x="839.6" y="723.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="842.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.10%)</title><rect x="839.6" y="707.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="842.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.10%)</title><rect x="839.6" y="691.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="842.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.10%)</title><rect x="839.6" y="675.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="842.6" y="686.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.02%)</title><rect x="839.6" y="659.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="842.6" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="839.6" y="643.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="842.6" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.07%)</title><rect x="839.8" y="659.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="842.8" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="840.4" y="643.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="843.4" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="840.4" y="627.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="843.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="840.7" y="755.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="843.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="840.7" y="739.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="843.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.05%)</title><rect x="840.7" y="723.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="843.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (2 samples, 0.05%)</title><rect x="841.3" y="803.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="844.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="841.3" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="844.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="841.3" y="771.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.05%)</title><rect x="841.3" y="755.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.PUT (1 samples, 0.02%)</title><rect x="841.9" y="883.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="844.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.method0 (1 samples, 0.02%)</title><rect x="841.9" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (6 samples, 0.15%)</title><rect x="842.2" y="883.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="845.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (6 samples, 0.15%)</title><rect x="842.2" y="867.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.2" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6 samples, 0.15%)</title><rect x="842.2" y="851.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="845.2" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6 samples, 0.15%)</title><rect x="842.2" y="835.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.2" y="846.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="842.4" y="819.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="845.4" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (4 samples, 0.10%)</title><rect x="842.7" y="819.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="845.7" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.accept (4 samples, 0.10%)</title><rect x="842.7" y="803.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="845.7" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.10%)</title><rect x="842.7" y="787.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="845.7" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.10%)</title><rect x="842.7" y="771.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="845.7" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.accept (4 samples, 0.10%)</title><rect x="842.7" y="755.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="845.7" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.10%)</title><rect x="842.7" y="739.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="845.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="843.0" y="723.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="846.0" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="843.0" y="707.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="846.0" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="843.0" y="691.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="846.0" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="843.0" y="675.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.0" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="843.0" y="659.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="846.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1433666880.test (1 samples, 0.02%)</title><rect x="843.3" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="846.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1433666880.test (1 samples, 0.02%)</title><rect x="843.6" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="846.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.02%)</title><rect x="843.6" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.6" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.02%)</title><rect x="843.6" y="691.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.6" y="702.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.02%)</title><rect x="843.6" y="675.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="846.6" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.02%)</title><rect x="843.6" y="659.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="846.6" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="843.6" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="846.6" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.02%)</title><rect x="843.6" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="846.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="843.6" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="843.6" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="846.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="843.6" y="579.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="846.6" y="590.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="843.6" y="563.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="846.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="843.6" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="846.6" y="558.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="843.6" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="846.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (3 samples, 0.07%)</title><rect x="843.9" y="883.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="846.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (3 samples, 0.07%)</title><rect x="843.9" y="867.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="846.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (2 samples, 0.05%)</title><rect x="843.9" y="851.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1433666880.test (1 samples, 0.02%)</title><rect x="843.9" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="846.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.02%)</title><rect x="843.9" y="819.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.9" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.02%)</title><rect x="843.9" y="803.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="846.9" y="814.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.02%)</title><rect x="843.9" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="846.9" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.02%)</title><rect x="843.9" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="846.9" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="843.9" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.9" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.02%)</title><rect x="843.9" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="846.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="843.9" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (1 samples, 0.02%)</title><rect x="844.2" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="847.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.02%)</title><rect x="844.5" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="847.5" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="844.5" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="847.5" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getFirstResponses (15 samples, 0.37%)</title><rect x="844.8" y="883.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="847.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (12 samples, 0.29%)</title><rect x="844.8" y="867.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="847.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (12 samples, 0.29%)</title><rect x="844.8" y="851.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (12 samples, 0.29%)</title><rect x="844.8" y="835.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="847.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (12 samples, 0.29%)</title><rect x="844.8" y="819.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="847.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (11 samples, 0.27%)</title><rect x="845.1" y="803.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="848.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (11 samples, 0.27%)</title><rect x="845.1" y="787.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="848.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (11 samples, 0.27%)</title><rect x="845.1" y="771.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="845.1" y="755.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="848.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="845.1" y="739.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="848.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="845.1" y="723.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="848.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.25%)</title><rect x="845.3" y="755.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="848.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.25%)</title><rect x="845.3" y="739.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="848.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.25%)</title><rect x="845.3" y="723.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="848.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.25%)</title><rect x="845.3" y="707.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="848.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.25%)</title><rect x="845.3" y="691.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="848.3" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.02%)</title><rect x="845.3" y="675.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="848.3" y="686.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="845.3" y="659.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="848.3" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.22%)</title><rect x="845.6" y="675.0" width="2.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="848.6" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.20%)</title><rect x="845.9" y="659.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="848.9" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.20%)</title><rect x="845.9" y="643.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="848.9" y="654.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.17%)</title><rect x="846.2" y="627.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="849.2" y="638.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.17%)</title><rect x="846.2" y="611.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="849.2" y="622.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.17%)</title><rect x="846.2" y="595.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="849.2" y="606.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.17%)</title><rect x="846.2" y="579.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="849.2" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.17%)</title><rect x="846.2" y="563.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="849.2" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.15%)</title><rect x="846.5" y="547.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="849.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (3 samples, 0.07%)</title><rect x="848.2" y="867.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="851.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.07%)</title><rect x="848.2" y="851.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="851.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (184 samples, 4.51%)</title><rect x="849.1" y="947.0" width="53.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="852.1" y="958.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (56 samples, 1.37%)</title><rect x="849.4" y="931.0" width="16.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="852.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (52 samples, 1.27%)</title><rect x="850.5" y="915.0" width="15.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="853.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (49 samples, 1.20%)</title><rect x="851.4" y="899.0" width="14.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="854.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="851.7" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="854.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="851.7" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="854.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.02%)</title><rect x="851.7" y="851.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (47 samples, 1.15%)</title><rect x="852.0" y="883.0" width="13.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="855.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (7 samples, 0.17%)</title><rect x="852.0" y="867.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (7 samples, 0.17%)</title><rect x="852.0" y="851.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="855.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (7 samples, 0.17%)</title><rect x="852.0" y="835.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="855.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (7 samples, 0.17%)</title><rect x="852.0" y="819.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (7 samples, 0.17%)</title><rect x="852.0" y="803.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.siftDown (1 samples, 0.02%)</title><rect x="852.9" y="787.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="853.1" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="856.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="853.1" y="771.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.05%)</title><rect x="853.1" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="856.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="853.7" y="787.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="856.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="853.7" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="853.7" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="856.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (40 samples, 0.98%)</title><rect x="854.0" y="867.0" width="11.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="857.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (38 samples, 0.93%)</title><rect x="854.0" y="851.0" width="11.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="857.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (38 samples, 0.93%)</title><rect x="854.0" y="835.0" width="11.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="857.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (38 samples, 0.93%)</title><rect x="854.0" y="819.0" width="11.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="857.0" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_V (1 samples, 0.02%)</title><rect x="854.0" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="857.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (37 samples, 0.91%)</title><rect x="854.3" y="803.0" width="10.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="857.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (37 samples, 0.91%)</title><rect x="854.3" y="787.0" width="10.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="857.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (37 samples, 0.91%)</title><rect x="854.3" y="771.0" width="10.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="857.3" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.07%)</title><rect x="854.3" y="755.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="857.3" y="766.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="854.3" y="739.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="857.3" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="854.6" y="739.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="857.6" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="854.9" y="739.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="857.9" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (34 samples, 0.83%)</title><rect x="855.2" y="755.0" width="9.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="858.2" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.71%)</title><rect x="856.6" y="739.0" width="8.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="859.6" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.71%)</title><rect x="856.6" y="723.0" width="8.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="859.6" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (27 samples, 0.66%)</title><rect x="857.2" y="707.0" width="7.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="860.2" y="718.0"></text>
</g>
<g>
<title>do_futex (27 samples, 0.66%)</title><rect x="857.2" y="691.0" width="7.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="860.2" y="702.0"></text>
</g>
<g>
<title>futex_wake (27 samples, 0.66%)</title><rect x="857.2" y="675.0" width="7.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="860.2" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="857.8" y="659.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="860.8" y="670.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="858.1" y="659.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="861.1" y="670.0"></text>
</g>
<g>
<title>wake_up_q (23 samples, 0.56%)</title><rect x="858.4" y="659.0" width="6.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="861.4" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (22 samples, 0.54%)</title><rect x="858.6" y="643.0" width="6.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="861.6" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (22 samples, 0.54%)</title><rect x="858.6" y="627.0" width="6.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="861.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.05%)</title><rect x="865.0" y="851.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="868.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2 samples, 0.05%)</title><rect x="865.0" y="835.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="868.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.02%)</title><rect x="865.3" y="819.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="868.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="865.3" y="803.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="868.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="865.3" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="868.3" y="798.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="865.3" y="771.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="868.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (127 samples, 3.11%)</title><rect x="865.6" y="931.0" width="36.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="868.6" y="942.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.07%)</title><rect x="865.6" y="915.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="868.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.07%)</title><rect x="865.6" y="899.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="868.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3 samples, 0.07%)</title><rect x="865.6" y="883.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="868.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.07%)</title><rect x="865.6" y="867.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="868.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.05%)</title><rect x="865.6" y="851.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="868.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.05%)</title><rect x="865.6" y="835.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="868.6" y="846.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="865.6" y="819.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="868.6" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$142/147332196.accept (1 samples, 0.02%)</title><rect x="865.9" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="868.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.02%)</title><rect x="866.2" y="851.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="869.2" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$142/147332196.accept (11 samples, 0.27%)</title><rect x="866.4" y="915.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="869.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$getFirstResponses$25 (11 samples, 0.27%)</title><rect x="866.4" y="899.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="869.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (9 samples, 0.22%)</title><rect x="867.0" y="883.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="870.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.22%)</title><rect x="867.0" y="867.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="870.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (8 samples, 0.20%)</title><rect x="867.3" y="851.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="870.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (8 samples, 0.20%)</title><rect x="867.3" y="835.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="870.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8 samples, 0.20%)</title><rect x="867.3" y="819.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="870.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.17%)</title><rect x="867.3" y="803.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="870.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.17%)</title><rect x="867.3" y="787.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="870.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (7 samples, 0.17%)</title><rect x="867.3" y="771.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="870.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.17%)</title><rect x="867.3" y="755.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="870.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.17%)</title><rect x="867.3" y="739.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="870.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.17%)</title><rect x="867.3" y="723.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="870.3" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.02%)</title><rect x="867.3" y="707.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="870.3" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="867.3" y="691.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="870.3" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.15%)</title><rect x="867.6" y="707.0" width="1.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="870.6" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.12%)</title><rect x="867.9" y="691.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="870.9" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.12%)</title><rect x="867.9" y="675.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="870.9" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.07%)</title><rect x="868.5" y="659.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="871.5" y="670.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="868.5" y="643.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="871.5" y="654.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.07%)</title><rect x="868.5" y="627.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="871.5" y="638.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.05%)</title><rect x="868.8" y="611.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="871.8" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.05%)</title><rect x="868.8" y="595.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="871.8" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="868.8" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="871.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="869.3" y="803.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="872.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.02%)</title><rect x="869.3" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="872.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.02%)</title><rect x="869.3" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="872.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$276/306258906.accept (113 samples, 2.77%)</title><rect x="869.6" y="915.0" width="32.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="872.6" y="926.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$delete$22 (113 samples, 2.77%)</title><rect x="869.6" y="899.0" width="32.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="872.6" y="910.0">ru..</text>
</g>
<g>
<title>java/util/ArrayList.contains (1 samples, 0.02%)</title><rect x="869.9" y="883.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="872.9" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOf (1 samples, 0.02%)</title><rect x="869.9" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="872.9" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOfRange (1 samples, 0.02%)</title><rect x="869.9" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="872.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.02%)</title><rect x="869.9" y="835.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="872.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.handleResponses (110 samples, 2.70%)</title><rect x="870.2" y="883.0" width="31.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="873.2" y="894.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (110 samples, 2.70%)</title><rect x="870.2" y="867.0" width="31.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.2" y="878.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (110 samples, 2.70%)</title><rect x="870.2" y="851.0" width="31.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="873.2" y="862.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (106 samples, 2.60%)</title><rect x="870.8" y="835.0" width="30.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="873.8" y="846.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.20%)</title><rect x="870.8" y="819.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="873.8" y="830.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.20%)</title><rect x="870.8" y="803.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="873.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.02%)</title><rect x="870.8" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="873.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.02%)</title><rect x="870.8" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="873.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (7 samples, 0.17%)</title><rect x="871.1" y="787.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="874.1" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (98 samples, 2.40%)</title><rect x="873.1" y="819.0" width="28.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="876.1" y="830.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (98 samples, 2.40%)</title><rect x="873.1" y="803.0" width="28.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="876.1" y="814.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (97 samples, 2.38%)</title><rect x="873.4" y="787.0" width="28.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="876.4" y="798.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (97 samples, 2.38%)</title><rect x="873.4" y="771.0" width="28.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="876.4" y="782.0">on..</text>
</g>
<g>
<title>.annobin_send.c (93 samples, 2.28%)</title><rect x="873.7" y="755.0" width="26.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="876.7" y="766.0">...</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (92 samples, 2.25%)</title><rect x="874.0" y="739.0" width="26.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="877.0" y="750.0">e..</text>
</g>
<g>
<title>do_syscall_64 (92 samples, 2.25%)</title><rect x="874.0" y="723.0" width="26.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="877.0" y="734.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (91 samples, 2.23%)</title><rect x="874.3" y="707.0" width="26.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="877.3" y="718.0">_..</text>
</g>
<g>
<title>__sys_sendto (91 samples, 2.23%)</title><rect x="874.3" y="691.0" width="26.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="877.3" y="702.0">_..</text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="874.5" y="675.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="877.5" y="686.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="874.8" y="675.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="877.8" y="686.0"></text>
</g>
<g>
<title>sock_sendmsg (84 samples, 2.06%)</title><rect x="875.1" y="675.0" width="24.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="878.1" y="686.0">s..</text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.05%)</title><rect x="875.1" y="659.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="878.1" y="670.0"></text>
</g>
<g>
<title>sock_has_perm (2 samples, 0.05%)</title><rect x="875.1" y="643.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="878.1" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg (82 samples, 2.01%)</title><rect x="875.7" y="659.0" width="23.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="878.7" y="670.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (82 samples, 2.01%)</title><rect x="875.7" y="643.0" width="23.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="878.7" y="654.0">t..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="876.0" y="627.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="879.0" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="876.0" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="879.0" y="622.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (76 samples, 1.86%)</title><rect x="876.3" y="627.0" width="22.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="879.3" y="638.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (76 samples, 1.86%)</title><rect x="876.3" y="611.0" width="22.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="879.3" y="622.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (71 samples, 1.74%)</title><rect x="876.6" y="595.0" width="20.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="879.6" y="606.0"></text>
</g>
<g>
<title>__ip_queue_xmit (67 samples, 1.64%)</title><rect x="876.9" y="579.0" width="19.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="879.9" y="590.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="876.9" y="563.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="879.9" y="574.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="876.9" y="547.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="879.9" y="558.0"></text>
</g>
<g>
<title>ip_local_out (17 samples, 0.42%)</title><rect x="877.1" y="563.0" width="5.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="880.1" y="574.0"></text>
</g>
<g>
<title>__ip_local_out (17 samples, 0.42%)</title><rect x="877.1" y="547.0" width="5.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="880.1" y="558.0"></text>
</g>
<g>
<title>nf_hook_slow (17 samples, 0.42%)</title><rect x="877.1" y="531.0" width="5.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="880.1" y="542.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.12%)</title><rect x="877.1" y="515.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="880.1" y="526.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (1 samples, 0.02%)</title><rect x="878.6" y="515.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="881.6" y="526.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (1 samples, 0.02%)</title><rect x="878.6" y="499.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="881.6" y="510.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (1 samples, 0.02%)</title><rect x="878.9" y="515.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="881.9" y="526.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack] (1 samples, 0.02%)</title><rect x="879.2" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="882.2" y="526.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (7 samples, 0.17%)</title><rect x="879.5" y="515.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="882.5" y="526.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (5 samples, 0.12%)</title><rect x="879.5" y="499.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="882.5" y="510.0"></text>
</g>
<g>
<title>get_l4proto	[nf_conntrack] (1 samples, 0.02%)</title><rect x="880.9" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="883.9" y="510.0"></text>
</g>
<g>
<title>nf_conntrack_tcp_packet	[nf_conntrack] (1 samples, 0.02%)</title><rect x="881.2" y="499.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="884.2" y="510.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (1 samples, 0.02%)</title><rect x="881.2" y="483.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="884.2" y="494.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat] (1 samples, 0.02%)</title><rect x="881.5" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="884.5" y="526.0"></text>
</g>
<g>
<title>selinux_ipv4_output (1 samples, 0.02%)</title><rect x="881.8" y="515.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="884.8" y="526.0"></text>
</g>
<g>
<title>netlbl_enabled (1 samples, 0.02%)</title><rect x="881.8" y="499.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="884.8" y="510.0"></text>
</g>
<g>
<title>ip_output (49 samples, 1.20%)</title><rect x="882.1" y="563.0" width="14.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="885.1" y="574.0"></text>
</g>
<g>
<title>ip_finish_output2 (46 samples, 1.13%)</title><rect x="882.3" y="547.0" width="13.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="885.3" y="558.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.07%)</title><rect x="882.6" y="531.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="885.6" y="542.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.05%)</title><rect x="882.9" y="515.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="885.9" y="526.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.05%)</title><rect x="882.9" y="499.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="885.9" y="510.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.05%)</title><rect x="882.9" y="483.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="885.9" y="494.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.05%)</title><rect x="882.9" y="467.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="885.9" y="478.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.05%)</title><rect x="882.9" y="451.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="885.9" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (42 samples, 1.03%)</title><rect x="883.5" y="531.0" width="12.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="886.5" y="542.0"></text>
</g>
<g>
<title>do_softirq.part.0 (42 samples, 1.03%)</title><rect x="883.5" y="515.0" width="12.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="886.5" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (41 samples, 1.00%)</title><rect x="883.8" y="499.0" width="11.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="886.8" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (41 samples, 1.00%)</title><rect x="883.8" y="483.0" width="11.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="886.8" y="494.0"></text>
</g>
<g>
<title>net_rx_action (40 samples, 0.98%)</title><rect x="884.1" y="467.0" width="11.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="887.1" y="478.0"></text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.05%)</title><rect x="884.1" y="451.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="887.1" y="462.0"></text>
</g>
<g>
<title>process_backlog (38 samples, 0.93%)</title><rect x="884.7" y="451.0" width="11.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="887.7" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (37 samples, 0.91%)</title><rect x="885.0" y="435.0" width="10.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="888.0" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="885.0" y="419.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="888.0" y="430.0"></text>
</g>
<g>
<title>ip_rcv (36 samples, 0.88%)</title><rect x="885.2" y="419.0" width="10.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="888.2" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver (30 samples, 0.74%)</title><rect x="885.2" y="403.0" width="8.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="888.2" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (26 samples, 0.64%)</title><rect x="885.2" y="387.0" width="7.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="888.2" y="398.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (26 samples, 0.64%)</title><rect x="885.2" y="371.0" width="7.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="888.2" y="382.0"></text>
</g>
<g>
<title>tcp_v4_rcv (26 samples, 0.64%)</title><rect x="885.2" y="355.0" width="7.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="888.2" y="366.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.05%)</title><rect x="885.2" y="339.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="888.2" y="350.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="885.8" y="339.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="888.8" y="350.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (23 samples, 0.56%)</title><rect x="886.1" y="339.0" width="6.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="889.1" y="350.0"></text>
</g>
<g>
<title>tcp_rcv_established (23 samples, 0.56%)</title><rect x="886.1" y="323.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="889.1" y="334.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="886.4" y="307.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="889.4" y="318.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="886.4" y="291.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="889.4" y="302.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="886.4" y="275.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="889.4" y="286.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="886.7" y="307.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="889.7" y="318.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="886.7" y="291.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="889.7" y="302.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="886.7" y="275.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="889.7" y="286.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.15%)</title><rect x="887.0" y="307.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="890.0" y="318.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.07%)</title><rect x="887.3" y="291.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="890.3" y="302.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.07%)</title><rect x="887.3" y="275.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="890.3" y="286.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="888.1" y="291.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="891.1" y="302.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="888.4" y="291.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="891.4" y="302.0"></text>
</g>
<g>
<title>tcp_data_queue (13 samples, 0.32%)</title><rect x="888.7" y="307.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="891.7" y="318.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="889.0" y="291.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="892.0" y="302.0"></text>
</g>
<g>
<title>sock_def_readable (11 samples, 0.27%)</title><rect x="889.3" y="291.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="892.3" y="302.0"></text>
</g>
<g>
<title>__wake_up_common_lock (11 samples, 0.27%)</title><rect x="889.3" y="275.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="892.3" y="286.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.27%)</title><rect x="889.3" y="259.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="892.3" y="270.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="892.5" y="307.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="895.5" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (4 samples, 0.10%)</title><rect x="892.8" y="387.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="895.8" y="398.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.10%)</title><rect x="892.8" y="371.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="895.8" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="893.6" y="355.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="896.6" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (6 samples, 0.15%)</title><rect x="893.9" y="403.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="896.9" y="414.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.15%)</title><rect x="893.9" y="387.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="896.9" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.05%)</title><rect x="895.7" y="547.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="898.7" y="558.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (2 samples, 0.05%)</title><rect x="895.7" y="531.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="898.7" y="542.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.02%)</title><rect x="896.2" y="579.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="899.2" y="590.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="896.2" y="563.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="899.2" y="574.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="896.5" y="579.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="899.5" y="590.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="896.8" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="899.8" y="590.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.05%)</title><rect x="897.1" y="595.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="900.1" y="606.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="897.4" y="579.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="900.4" y="590.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.05%)</title><rect x="897.7" y="595.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="900.7" y="606.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="898.0" y="579.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="901.0" y="590.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="898.0" y="563.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="901.0" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.07%)</title><rect x="898.3" y="627.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="901.3" y="638.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.07%)</title><rect x="898.3" y="611.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="901.3" y="622.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.02%)</title><rect x="898.3" y="595.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="901.3" y="606.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="898.3" y="579.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="901.3" y="590.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.05%)</title><rect x="898.5" y="595.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="901.5" y="606.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.02%)</title><rect x="899.1" y="627.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="902.1" y="638.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.02%)</title><rect x="899.1" y="611.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="902.1" y="622.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="899.1" y="595.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="902.1" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.10%)</title><rect x="899.4" y="675.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="902.4" y="686.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="899.7" y="659.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="902.7" y="670.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="900.3" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="903.3" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.05%)</title><rect x="900.6" y="755.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="903.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="901.1" y="755.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="904.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="901.1" y="739.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="904.1" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.02%)</title><rect x="901.1" y="723.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="904.1" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="901.1" y="707.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="904.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="901.4" y="835.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="904.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="901.4" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="904.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="901.4" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="904.4" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="901.7" y="835.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="904.7" y="846.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="901.7" y="819.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="904.7" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/MetaRequest.getRf (1 samples, 0.02%)</title><rect x="902.0" y="883.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.10%)</title><rect x="902.3" y="995.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="905.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.07%)</title><rect x="902.6" y="979.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.07%)</title><rect x="902.6" y="963.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.6" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.07%)</title><rect x="902.6" y="947.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="905.6" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="902.6" y="931.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="905.6" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="902.6" y="915.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="905.6" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.07%)</title><rect x="902.6" y="899.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="905.6" y="910.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="902.6" y="883.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="905.6" y="894.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.07%)</title><rect x="902.6" y="867.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="905.6" y="878.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="902.6" y="851.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="905.6" y="862.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.02%)</title><rect x="902.6" y="835.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="905.6" y="846.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.05%)</title><rect x="902.9" y="851.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="905.9" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.05%)</title><rect x="902.9" y="835.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="905.9" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="902.9" y="819.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="905.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (47 samples, 1.15%)</title><rect x="903.5" y="1011.0" width="13.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.5" y="1022.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="904.0" y="995.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="907.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (3 samples, 0.07%)</title><rect x="904.6" y="995.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="907.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (40 samples, 0.98%)</title><rect x="905.5" y="995.0" width="11.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="908.5" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Park (9 samples, 0.22%)</title><rect x="905.5" y="979.0" width="2.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="908.5" y="990.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.05%)</title><rect x="905.5" y="963.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="908.5" y="974.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="905.8" y="947.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="908.8" y="958.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.15%)</title><rect x="906.1" y="963.0" width="1.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="909.1" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="907.2" y="947.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="910.2" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="907.2" y="931.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="910.2" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="907.2" y="915.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="910.2" y="926.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="907.2" y="899.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="910.2" y="910.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="907.2" y="883.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="910.2" y="894.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="907.8" y="963.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="910.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.76%)</title><rect x="908.1" y="979.0" width="8.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="911.1" y="990.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.02%)</title><rect x="908.1" y="963.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="911.1" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_wait (27 samples, 0.66%)</title><rect x="908.4" y="963.0" width="7.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="911.4" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.42%)</title><rect x="911.0" y="947.0" width="4.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="914.0" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.42%)</title><rect x="911.0" y="931.0" width="4.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="914.0" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.34%)</title><rect x="911.8" y="915.0" width="4.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="914.8" y="926.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.32%)</title><rect x="912.1" y="899.0" width="3.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="915.1" y="910.0"></text>
</g>
<g>
<title>futex_wait (10 samples, 0.25%)</title><rect x="913.0" y="883.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="916.0" y="894.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.17%)</title><rect x="913.3" y="867.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="916.3" y="878.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.02%)</title><rect x="914.2" y="851.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="917.2" y="862.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.07%)</title><rect x="914.4" y="851.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="917.4" y="862.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.05%)</title><rect x="914.7" y="835.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="917.7" y="846.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="914.7" y="819.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="917.7" y="830.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.05%)</title><rect x="915.3" y="867.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="918.3" y="878.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.02%)</title><rect x="915.6" y="851.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="918.6" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="915.9" y="947.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="918.9" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="915.9" y="931.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="918.9" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="915.9" y="915.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="918.9" y="926.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="916.2" y="963.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="919.2" y="974.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="916.5" y="963.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="919.5" y="974.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.02%)</title><rect x="916.8" y="963.0" width="0.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="919.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (138 samples, 3.38%)</title><rect x="917.0" y="1011.0" width="39.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="920.0" y="1022.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (138 samples, 3.38%)</title><rect x="917.0" y="995.0" width="39.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="920.0" y="1006.0">jdk..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="917.3" y="979.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="920.3" y="990.0"></text>
</g>
<g>
<title>Unsafe_Park (58 samples, 1.42%)</title><rect x="917.6" y="979.0" width="16.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="920.6" y="990.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (19 samples, 0.47%)</title><rect x="918.8" y="963.0" width="5.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="921.8" y="974.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.07%)</title><rect x="922.3" y="947.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="925.3" y="958.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="923.1" y="947.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="926.1" y="958.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="923.7" y="947.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="926.7" y="958.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.02%)</title><rect x="924.0" y="947.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="927.0" y="958.0"></text>
</g>
<g>
<title>__lll_unlock_wake (29 samples, 0.71%)</title><rect x="924.3" y="963.0" width="8.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="927.3" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.29%)</title><rect x="929.2" y="947.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="932.2" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.29%)</title><rect x="929.2" y="931.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="932.2" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.15%)</title><rect x="930.9" y="915.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="933.9" y="926.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.15%)</title><rect x="930.9" y="899.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="933.9" y="910.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.15%)</title><rect x="930.9" y="883.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="933.9" y="894.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="932.1" y="867.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="935.1" y="878.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.02%)</title><rect x="932.4" y="851.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="935.4" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.02%)</title><rect x="932.7" y="963.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="935.7" y="974.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="933.0" y="963.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="936.0" y="974.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="933.5" y="963.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="936.5" y="974.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="933.8" y="963.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="936.8" y="974.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="934.1" y="963.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="937.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 1.91%)</title><rect x="934.4" y="979.0" width="22.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="937.4" y="990.0">[..</text>
</g>
<g>
<title>__condvar_dec_grefs (3 samples, 0.07%)</title><rect x="934.4" y="963.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="937.4" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (73 samples, 1.79%)</title><rect x="935.3" y="963.0" width="21.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="938.3" y="974.0">_..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="939.6" y="947.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="942.6" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (57 samples, 1.40%)</title><rect x="939.9" y="947.0" width="16.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="942.9" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (57 samples, 1.40%)</title><rect x="939.9" y="931.0" width="16.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="942.9" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (51 samples, 1.25%)</title><rect x="941.6" y="915.0" width="14.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="944.6" y="926.0"></text>
</g>
<g>
<title>do_futex (49 samples, 1.20%)</title><rect x="941.9" y="899.0" width="14.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="944.9" y="910.0"></text>
</g>
<g>
<title>futex_wait (46 samples, 1.13%)</title><rect x="942.8" y="883.0" width="13.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="945.8" y="894.0"></text>
</g>
<g>
<title>__hrtimer_init (2 samples, 0.05%)</title><rect x="943.9" y="867.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="946.9" y="878.0"></text>
</g>
<g>
<title>futex_wait_queue_me (24 samples, 0.59%)</title><rect x="944.5" y="867.0" width="7.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="947.5" y="878.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (3 samples, 0.07%)</title><rect x="946.3" y="851.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="949.3" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="946.3" y="835.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="949.3" y="846.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.05%)</title><rect x="947.1" y="851.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="950.1" y="862.0"></text>
</g>
<g>
<title>__list_add_valid (1 samples, 0.02%)</title><rect x="947.4" y="835.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="950.4" y="846.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.32%)</title><rect x="947.7" y="851.0" width="3.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="950.7" y="862.0"></text>
</g>
<g>
<title>__sched_text_start (13 samples, 0.32%)</title><rect x="947.7" y="835.0" width="3.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="950.7" y="846.0"></text>
</g>
<g>
<title>finish_task_switch (12 samples, 0.29%)</title><rect x="948.0" y="819.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="951.0" y="830.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.05%)</title><rect x="950.9" y="803.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="953.9" y="814.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="950.9" y="787.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="953.9" y="798.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.05%)</title><rect x="950.9" y="771.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="953.9" y="782.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.05%)</title><rect x="950.9" y="755.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="953.9" y="766.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="950.9" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="953.9" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="950.9" y="723.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="953.9" y="734.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="951.2" y="739.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="954.2" y="750.0"></text>
</g>
<g>
<title>futex_wait_setup (8 samples, 0.20%)</title><rect x="951.5" y="867.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="954.5" y="878.0"></text>
</g>
<g>
<title>get_futex_value_locked (4 samples, 0.10%)</title><rect x="952.6" y="851.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="955.6" y="862.0"></text>
</g>
<g>
<title>hrtimer_cancel (7 samples, 0.17%)</title><rect x="953.8" y="867.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="956.8" y="878.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (7 samples, 0.17%)</title><rect x="953.8" y="851.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="956.8" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.10%)</title><rect x="953.8" y="835.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="956.8" y="846.0"></text>
</g>
<g>
<title>hrtimer_active (2 samples, 0.05%)</title><rect x="954.9" y="835.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="957.9" y="846.0"></text>
</g>
<g>
<title>lock_hrtimer_base.isra.0 (1 samples, 0.02%)</title><rect x="955.5" y="835.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="958.5" y="846.0"></text>
</g>
<g>
<title>ktime_add_safe (1 samples, 0.02%)</title><rect x="955.8" y="867.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="958.8" y="878.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.02%)</title><rect x="956.1" y="899.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="959.1" y="910.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.02%)</title><rect x="956.1" y="883.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="959.1" y="894.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="956.4" y="963.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="959.4" y="974.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="956.7" y="963.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="959.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (340 samples, 8.33%)</title><rect x="956.9" y="1043.0" width="98.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="959.9" y="1054.0">jdk/internal..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (4 samples, 0.10%)</title><rect x="959.0" y="1027.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="962.0" y="1038.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (3 samples, 0.07%)</title><rect x="959.3" y="1011.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="962.3" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1 samples, 0.02%)</title><rect x="960.1" y="1027.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="963.1" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (3 samples, 0.07%)</title><rect x="960.4" y="1027.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="963.4" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="961.3" y="1027.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="964.3" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="961.3" y="1011.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="964.3" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="961.3" y="995.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="964.3" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="961.3" y="979.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="964.3" y="990.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="961.3" y="963.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="964.3" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (2 samples, 0.05%)</title><rect x="961.6" y="1027.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="964.6" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (86 samples, 2.11%)</title><rect x="962.2" y="1027.0" width="24.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="965.2" y="1038.0">j..</text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="962.2" y="1011.0" width="0.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="965.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$198/1799291049.accept (81 samples, 1.98%)</title><rect x="962.4" y="1011.0" width="23.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="965.4" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (81 samples, 1.98%)</title><rect x="962.4" y="995.0" width="23.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="965.4" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (81 samples, 1.98%)</title><rect x="962.4" y="979.0" width="23.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="965.4" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (81 samples, 1.98%)</title><rect x="962.4" y="963.0" width="23.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="965.4" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (81 samples, 1.98%)</title><rect x="962.4" y="947.0" width="23.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="965.4" y="958.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.05%)</title><rect x="962.4" y="931.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="965.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.05%)</title><rect x="962.4" y="915.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="965.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.05%)</title><rect x="962.4" y="899.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="965.4" y="910.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.05%)</title><rect x="962.4" y="883.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="965.4" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.05%)</title><rect x="962.4" y="867.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.4" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.05%)</title><rect x="962.4" y="851.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="965.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (79 samples, 1.94%)</title><rect x="963.0" y="931.0" width="22.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="966.0" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (79 samples, 1.94%)</title><rect x="963.0" y="915.0" width="22.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="966.0" y="926.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (79 samples, 1.94%)</title><rect x="963.0" y="899.0" width="22.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="966.0" y="910.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (79 samples, 1.94%)</title><rect x="963.0" y="883.0" width="22.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="966.0" y="894.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (79 samples, 1.94%)</title><rect x="963.0" y="867.0" width="22.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="966.0" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$157/1360780123.run (78 samples, 1.91%)</title><rect x="963.3" y="851.0" width="22.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="966.3" y="862.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (78 samples, 1.91%)</title><rect x="963.3" y="835.0" width="22.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="966.3" y="846.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (9 samples, 0.22%)</title><rect x="964.8" y="819.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="967.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (9 samples, 0.22%)</title><rect x="964.8" y="803.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="967.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (9 samples, 0.22%)</title><rect x="964.8" y="787.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="967.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.22%)</title><rect x="964.8" y="771.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="967.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.22%)</title><rect x="964.8" y="755.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.22%)</title><rect x="964.8" y="739.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="967.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.22%)</title><rect x="964.8" y="723.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="967.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.22%)</title><rect x="964.8" y="707.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (7 samples, 0.17%)</title><rect x="964.8" y="691.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="967.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.15%)</title><rect x="965.0" y="675.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="968.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.15%)</title><rect x="965.0" y="659.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.15%)</title><rect x="965.0" y="643.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="968.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.15%)</title><rect x="965.0" y="627.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="968.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.15%)</title><rect x="965.0" y="611.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="968.0" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.15%)</title><rect x="965.0" y="595.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="968.0" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.12%)</title><rect x="965.3" y="579.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="968.3" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.12%)</title><rect x="965.3" y="563.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="968.3" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.12%)</title><rect x="965.3" y="547.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="968.3" y="558.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.12%)</title><rect x="965.3" y="531.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="968.3" y="542.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.12%)</title><rect x="965.3" y="515.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="968.3" y="526.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.12%)</title><rect x="965.3" y="499.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="968.3" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.12%)</title><rect x="965.3" y="483.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="968.3" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.12%)</title><rect x="965.3" y="467.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="968.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="966.8" y="691.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="969.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="966.8" y="675.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="969.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.05%)</title><rect x="966.8" y="659.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="969.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.02%)</title><rect x="967.4" y="819.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="970.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.02%)</title><rect x="967.4" y="803.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="970.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.02%)</title><rect x="967.4" y="787.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (63 samples, 1.54%)</title><rect x="967.6" y="819.0" width="18.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="970.6" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (63 samples, 1.54%)</title><rect x="967.6" y="803.0" width="18.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="970.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="967.6" y="787.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="970.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="967.6" y="771.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="970.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.05%)</title><rect x="967.6" y="755.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="970.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.10%)</title><rect x="968.2" y="787.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="971.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.10%)</title><rect x="968.2" y="771.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="971.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.10%)</title><rect x="968.2" y="755.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="971.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.07%)</title><rect x="968.2" y="739.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="971.2" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.02%)</title><rect x="969.1" y="739.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="972.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (57 samples, 1.40%)</title><rect x="969.4" y="787.0" width="16.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="972.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (57 samples, 1.40%)</title><rect x="969.4" y="771.0" width="16.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="972.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (52 samples, 1.27%)</title><rect x="969.4" y="755.0" width="15.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="972.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (52 samples, 1.27%)</title><rect x="969.4" y="739.0" width="15.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="972.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (52 samples, 1.27%)</title><rect x="969.4" y="723.0" width="15.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="972.4" y="734.0"></text>
</g>
<g>
<title>__errno_location (1 samples, 0.02%)</title><rect x="969.7" y="707.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="972.7" y="718.0"></text>
</g>
<g>
<title>__libc_read (47 samples, 1.15%)</title><rect x="970.0" y="707.0" width="13.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="973.0" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.81%)</title><rect x="974.0" y="691.0" width="9.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="977.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.81%)</title><rect x="974.0" y="675.0" width="9.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="977.0" y="686.0"></text>
</g>
<g>
<title>ksys_read (30 samples, 0.74%)</title><rect x="974.9" y="659.0" width="8.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="977.9" y="670.0"></text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.10%)</title><rect x="974.9" y="643.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="977.9" y="654.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.10%)</title><rect x="974.9" y="627.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="977.9" y="638.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.05%)</title><rect x="975.5" y="611.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="978.5" y="622.0"></text>
</g>
<g>
<title>vfs_read (26 samples, 0.64%)</title><rect x="976.0" y="643.0" width="7.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="979.0" y="654.0"></text>
</g>
<g>
<title>new_sync_read (17 samples, 0.42%)</title><rect x="976.0" y="627.0" width="4.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="979.0" y="638.0"></text>
</g>
<g>
<title>sock_read_iter (15 samples, 0.37%)</title><rect x="976.6" y="611.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="979.6" y="622.0"></text>
</g>
<g>
<title>inet_recvmsg (14 samples, 0.34%)</title><rect x="976.6" y="595.0" width="4.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="979.6" y="606.0"></text>
</g>
<g>
<title>tcp_recvmsg (14 samples, 0.34%)</title><rect x="976.6" y="579.0" width="4.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="979.6" y="590.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.05%)</title><rect x="977.2" y="563.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="980.2" y="574.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="977.2" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="980.2" y="558.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="977.5" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="980.5" y="558.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="977.5" y="531.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="980.5" y="542.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.02%)</title><rect x="977.5" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="980.5" y="526.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.07%)</title><rect x="977.8" y="563.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="980.8" y="574.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="978.3" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="981.3" y="558.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.05%)</title><rect x="978.6" y="563.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="981.6" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="978.6" y="547.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="981.6" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="978.9" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="981.9" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.12%)</title><rect x="979.2" y="563.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="982.2" y="574.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.12%)</title><rect x="979.2" y="547.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="982.2" y="558.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.10%)</title><rect x="979.2" y="531.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="982.2" y="542.0"></text>
</g>
<g>
<title>copyout (4 samples, 0.10%)</title><rect x="979.2" y="515.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="982.2" y="526.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.10%)</title><rect x="979.2" y="499.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="982.2" y="510.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.02%)</title><rect x="980.4" y="531.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="983.4" y="542.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="980.4" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="983.4" y="526.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="980.4" y="499.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="983.4" y="510.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.02%)</title><rect x="980.7" y="595.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="983.7" y="606.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.02%)</title><rect x="980.7" y="579.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="983.7" y="590.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (1 samples, 0.02%)</title><rect x="980.7" y="563.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="983.7" y="574.0"></text>
</g>
<g>
<title>security_file_permission (9 samples, 0.22%)</title><rect x="980.9" y="627.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="983.9" y="638.0"></text>
</g>
<g>
<title>file_has_perm (3 samples, 0.07%)</title><rect x="981.2" y="611.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="984.2" y="622.0"></text>
</g>
<g>
<title>avc_has_perm (1 samples, 0.02%)</title><rect x="981.5" y="595.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="984.5" y="606.0"></text>
</g>
<g>
<title>inode_has_perm (1 samples, 0.02%)</title><rect x="981.8" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="984.8" y="606.0"></text>
</g>
<g>
<title>selinux_file_permission (5 samples, 0.12%)</title><rect x="982.1" y="611.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="985.1" y="622.0"></text>
</g>
<g>
<title>__inode_security_revalidate (3 samples, 0.07%)</title><rect x="982.7" y="595.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="985.7" y="606.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="983.6" y="707.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="986.6" y="718.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="983.8" y="707.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="986.8" y="718.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.02%)</title><rect x="984.1" y="707.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="987.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.12%)</title><rect x="984.4" y="755.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="987.4" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.10%)</title><rect x="984.4" y="739.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="987.4" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.10%)</title><rect x="984.4" y="723.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="987.4" y="734.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="985.0" y="707.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="988.0" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="985.3" y="707.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="988.3" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.02%)</title><rect x="985.6" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="988.6" y="750.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.02%)</title><rect x="985.6" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="988.6" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.02%)</title><rect x="985.6" y="707.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="988.6" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (1 samples, 0.02%)</title><rect x="985.6" y="691.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="988.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$201/1629457336.accept (4 samples, 0.10%)</title><rect x="985.9" y="1011.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="988.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (3 samples, 0.07%)</title><rect x="986.2" y="995.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="989.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$197/2022555883.run (3 samples, 0.07%)</title><rect x="986.2" y="979.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="989.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (3 samples, 0.07%)</title><rect x="986.2" y="963.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="989.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (3 samples, 0.07%)</title><rect x="986.2" y="947.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="989.2" y="958.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.02%)</title><rect x="986.4" y="931.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="989.4" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.remove (1 samples, 0.02%)</title><rect x="986.7" y="931.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="989.7" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.removeNode (1 samples, 0.02%)</title><rect x="986.7" y="915.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="989.7" y="926.0"></text>
</g>
<g>
<title>java/lang/Integer.equals (1 samples, 0.02%)</title><rect x="986.7" y="899.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="989.7" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.02%)</title><rect x="987.0" y="1027.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="990.0" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (22 samples, 0.54%)</title><rect x="987.3" y="1027.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="990.3" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (22 samples, 0.54%)</title><rect x="987.3" y="1011.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="990.3" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (21 samples, 0.51%)</title><rect x="987.3" y="995.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="990.3" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (21 samples, 0.51%)</title><rect x="987.3" y="979.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="990.3" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (16 samples, 0.39%)</title><rect x="987.3" y="963.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="990.3" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (16 samples, 0.39%)</title><rect x="987.3" y="947.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="990.3" y="958.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="991.4" y="931.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="994.4" y="942.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="991.4" y="915.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="994.4" y="926.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="991.4" y="899.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="994.4" y="910.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="991.4" y="883.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="994.4" y="894.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="991.4" y="867.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="994.4" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="991.6" y="931.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="994.6" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="991.6" y="915.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="994.6" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="991.6" y="899.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="994.6" y="910.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="991.6" y="883.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="994.6" y="894.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="991.6" y="867.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="994.6" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="991.6" y="851.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="994.6" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (5 samples, 0.12%)</title><rect x="991.9" y="963.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="994.9" y="974.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.02%)</title><rect x="993.4" y="995.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="996.4" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.02%)</title><rect x="993.4" y="979.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="996.4" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.02%)</title><rect x="993.4" y="963.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="996.4" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.02%)</title><rect x="993.4" y="947.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="996.4" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.02%)</title><rect x="993.4" y="931.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="996.4" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.02%)</title><rect x="993.4" y="915.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="996.4" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (1 samples, 0.02%)</title><rect x="993.4" y="899.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="996.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$196/1558914017.accept (1 samples, 0.02%)</title><rect x="993.4" y="883.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="996.4" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="993.4" y="867.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="996.4" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="993.4" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="996.4" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="993.4" y="835.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="996.4" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="993.4" y="819.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="996.4" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.02%)</title><rect x="993.4" y="803.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="996.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (56 samples, 1.37%)</title><rect x="993.7" y="1027.0" width="16.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="996.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$159/717507571.run (35 samples, 0.86%)</title><rect x="993.7" y="1011.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="996.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (35 samples, 0.86%)</title><rect x="993.7" y="995.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="996.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (35 samples, 0.86%)</title><rect x="993.7" y="979.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="996.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 0.83%)</title><rect x="994.0" y="963.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="997.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.07%)</title><rect x="994.0" y="947.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="997.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1 samples, 0.02%)</title><rect x="994.0" y="931.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="997.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.05%)</title><rect x="994.2" y="931.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="997.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (31 samples, 0.76%)</title><rect x="994.8" y="947.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="997.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (31 samples, 0.76%)</title><rect x="994.8" y="931.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="997.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$157/1360780123.run (30 samples, 0.74%)</title><rect x="995.1" y="915.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="998.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (30 samples, 0.74%)</title><rect x="995.1" y="899.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="998.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (30 samples, 0.74%)</title><rect x="995.1" y="883.0" width="8.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="998.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (30 samples, 0.74%)</title><rect x="995.1" y="867.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="998.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (29 samples, 0.71%)</title><rect x="995.1" y="851.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="998.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (29 samples, 0.71%)</title><rect x="995.1" y="835.0" width="8.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="998.1" y="846.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="998.3" y="819.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1001.3" y="830.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="998.3" y="803.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1001.3" y="814.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="998.3" y="787.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1001.3" y="798.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="998.3" y="771.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1001.3" y="782.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="998.3" y="755.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1001.3" y="766.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="998.3" y="739.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1001.3" y="750.0"></text>
</g>
<g>
<title>tcp_write_timer (1 samples, 0.02%)</title><rect x="998.3" y="723.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1001.3" y="734.0"></text>
</g>
<g>
<title>__sk_mem_reduce_allocated (1 samples, 0.02%)</title><rect x="998.3" y="707.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1001.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (17 samples, 0.42%)</title><rect x="998.6" y="819.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1001.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="998.6" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1001.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (16 samples, 0.39%)</title><rect x="998.9" y="803.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1001.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.37%)</title><rect x="998.9" y="787.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1001.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (15 samples, 0.37%)</title><rect x="998.9" y="771.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1001.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (14 samples, 0.34%)</title><rect x="998.9" y="755.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1001.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.29%)</title><rect x="999.5" y="739.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1002.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.29%)</title><rect x="999.5" y="723.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1002.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.29%)</title><rect x="999.5" y="707.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1002.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.29%)</title><rect x="999.5" y="691.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1002.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.29%)</title><rect x="999.5" y="675.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1002.5" y="686.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="999.5" y="659.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1002.5" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.02%)</title><rect x="999.5" y="643.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1002.5" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="999.7" y="643.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1002.7" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.25%)</title><rect x="1000.0" y="659.0" width="2.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1003.0" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.17%)</title><rect x="1000.9" y="643.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1003.9" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.17%)</title><rect x="1000.9" y="627.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1003.9" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.15%)</title><rect x="1001.2" y="611.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1004.2" y="622.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.15%)</title><rect x="1001.2" y="595.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1004.2" y="606.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.15%)</title><rect x="1001.2" y="579.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1004.2" y="590.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.15%)</title><rect x="1001.2" y="563.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1004.2" y="574.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.15%)</title><rect x="1001.2" y="547.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1004.2" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.15%)</title><rect x="1001.2" y="531.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1004.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="1002.9" y="755.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1005.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="1002.9" y="739.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1005.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="1002.9" y="723.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1005.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.02%)</title><rect x="1003.2" y="787.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1006.2" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1003.5" y="851.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1006.5" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1003.5" y="835.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1006.5" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1003.5" y="819.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1006.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$161/782771317.run (21 samples, 0.51%)</title><rect x="1003.8" y="1011.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1006.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (21 samples, 0.51%)</title><rect x="1003.8" y="995.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1006.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (21 samples, 0.51%)</title><rect x="1003.8" y="979.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1006.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (19 samples, 0.47%)</title><rect x="1003.8" y="963.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1006.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (19 samples, 0.47%)</title><rect x="1003.8" y="947.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1006.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (16 samples, 0.39%)</title><rect x="1004.4" y="931.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1007.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="1004.9" y="915.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1007.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.02%)</title><rect x="1004.9" y="899.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1007.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.02%)</title><rect x="1004.9" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1007.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (13 samples, 0.32%)</title><rect x="1005.2" y="915.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1008.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.32%)</title><rect x="1005.2" y="899.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1008.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.32%)</title><rect x="1005.2" y="883.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1008.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.32%)</title><rect x="1005.2" y="867.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1008.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.32%)</title><rect x="1005.2" y="851.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1008.2" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="1005.2" y="835.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1008.2" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="1005.2" y="819.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1008.2" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="1005.5" y="819.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1008.5" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.27%)</title><rect x="1005.8" y="835.0" width="3.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1008.8" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.17%)</title><rect x="1007.0" y="819.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1010.0" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.17%)</title><rect x="1007.0" y="803.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1010.0" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.17%)</title><rect x="1007.0" y="787.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1010.0" y="798.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.17%)</title><rect x="1007.0" y="771.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1010.0" y="782.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.17%)</title><rect x="1007.0" y="755.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1010.0" y="766.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.17%)</title><rect x="1007.0" y="739.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1010.0" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.17%)</title><rect x="1007.0" y="723.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1010.0" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.17%)</title><rect x="1007.0" y="707.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1010.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="1009.0" y="931.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1012.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="1009.0" y="915.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1012.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="1009.0" y="899.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1012.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$205/1532762392.run (2 samples, 0.05%)</title><rect x="1009.3" y="963.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1012.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (2 samples, 0.05%)</title><rect x="1009.3" y="947.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1012.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2 samples, 0.05%)</title><rect x="1009.3" y="931.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1012.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (11 samples, 0.27%)</title><rect x="1009.9" y="1027.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1012.9" y="1038.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.07%)</title><rect x="1009.9" y="1011.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1012.9" y="1022.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.07%)</title><rect x="1009.9" y="995.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1012.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.07%)</title><rect x="1009.9" y="979.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1012.9" y="990.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.07%)</title><rect x="1009.9" y="963.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1012.9" y="974.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="1009.9" y="947.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1012.9" y="958.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.02%)</title><rect x="1010.4" y="947.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1013.4" y="958.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="1010.4" y="931.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1013.4" y="942.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="1010.4" y="915.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1013.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (8 samples, 0.20%)</title><rect x="1010.7" y="1011.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1013.7" y="1022.0"></text>
</g>
<g>
<title>java/time/Instant.until (1 samples, 0.02%)</title><rect x="1011.9" y="995.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1014.9" y="1006.0"></text>
</g>
<g>
<title>java/time/Instant.from (1 samples, 0.02%)</title><rect x="1011.9" y="979.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (3 samples, 0.07%)</title><rect x="1012.2" y="995.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1015.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (4 samples, 0.10%)</title><rect x="1013.0" y="1027.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1016.0" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeSet.isEmpty (1 samples, 0.02%)</title><rect x="1013.9" y="1011.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1016.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.channel (1 samples, 0.02%)</title><rect x="1014.2" y="1027.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1017.2" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (112 samples, 2.74%)</title><rect x="1014.5" y="1027.0" width="32.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1017.5" y="1038.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (112 samples, 2.74%)</title><rect x="1014.5" y="1011.0" width="32.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1017.5" y="1022.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (110 samples, 2.70%)</title><rect x="1015.1" y="995.0" width="31.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1018.1" y="1006.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (53 samples, 1.30%)</title><rect x="1015.4" y="979.0" width="15.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1018.4" y="990.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (48 samples, 1.18%)</title><rect x="1016.2" y="963.0" width="13.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1019.2" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.91%)</title><rect x="1019.1" y="947.0" width="10.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1022.1" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 0.91%)</title><rect x="1019.1" y="931.0" width="10.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1022.1" y="942.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (33 samples, 0.81%)</title><rect x="1020.3" y="915.0" width="9.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1023.3" y="926.0"></text>
</g>
<g>
<title>do_epoll_wait (33 samples, 0.81%)</title><rect x="1020.3" y="899.0" width="9.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1023.3" y="910.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="1020.3" y="883.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1023.3" y="894.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="1020.6" y="867.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1023.6" y="878.0"></text>
</g>
<g>
<title>ep_poll (31 samples, 0.76%)</title><rect x="1020.9" y="883.0" width="8.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1023.9" y="894.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (15 samples, 0.37%)</title><rect x="1022.0" y="867.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1025.0" y="878.0"></text>
</g>
<g>
<title>ep_send_events_proc (15 samples, 0.37%)</title><rect x="1022.0" y="851.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1025.0" y="862.0"></text>
</g>
<g>
<title>__list_del_entry_valid (1 samples, 0.02%)</title><rect x="1023.2" y="835.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1026.2" y="846.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (10 samples, 0.25%)</title><rect x="1023.5" y="835.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1026.5" y="846.0"></text>
</g>
<g>
<title>pipe_poll (2 samples, 0.05%)</title><rect x="1023.7" y="819.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1026.7" y="830.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.17%)</title><rect x="1024.3" y="819.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1027.3" y="830.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.05%)</title><rect x="1025.8" y="803.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1028.8" y="814.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (12 samples, 0.29%)</title><rect x="1026.3" y="867.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1029.3" y="878.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.02%)</title><rect x="1026.6" y="851.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1029.6" y="862.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (5 samples, 0.12%)</title><rect x="1026.9" y="851.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1029.9" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.12%)</title><rect x="1026.9" y="835.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1029.9" y="846.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.02%)</title><rect x="1028.4" y="851.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1031.4" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1028.4" y="835.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1031.4" y="846.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.10%)</title><rect x="1028.7" y="851.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1031.7" y="862.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.07%)</title><rect x="1028.9" y="835.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1031.9" y="846.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.07%)</title><rect x="1028.9" y="819.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1031.9" y="830.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1029.5" y="803.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1032.5" y="814.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1029.5" y="787.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1032.5" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1029.5" y="771.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1032.5" y="782.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1029.5" y="755.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1032.5" y="766.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1029.5" y="739.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1032.5" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1029.8" y="947.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1032.8" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1029.8" y="931.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1032.8" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1029.8" y="915.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1032.8" y="926.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1029.8" y="899.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1032.8" y="910.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="1029.8" y="883.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1032.8" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1029.8" y="867.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1032.8" y="878.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (1 samples, 0.02%)</title><rect x="1030.1" y="963.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1033.1" y="974.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="1030.4" y="963.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1033.4" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (47 samples, 1.15%)</title><rect x="1030.7" y="979.0" width="13.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1033.7" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="1030.7" y="963.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1033.7" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="1030.7" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1033.7" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (42 samples, 1.03%)</title><rect x="1031.0" y="963.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1034.0" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (41 samples, 1.00%)</title><rect x="1031.3" y="947.0" width="11.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1034.3" y="958.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (2 samples, 0.05%)</title><rect x="1031.5" y="931.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1034.5" y="942.0"></text>
</g>
<g>
<title>__libc_read (36 samples, 0.88%)</title><rect x="1032.1" y="931.0" width="10.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1035.1" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.61%)</title><rect x="1035.0" y="915.0" width="7.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1038.0" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.61%)</title><rect x="1035.0" y="899.0" width="7.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1038.0" y="910.0"></text>
</g>
<g>
<title>ksys_read (19 samples, 0.47%)</title><rect x="1036.8" y="883.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1039.8" y="894.0"></text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.10%)</title><rect x="1037.0" y="867.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1040.0" y="878.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.10%)</title><rect x="1037.0" y="851.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1040.0" y="862.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="1037.3" y="835.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1040.3" y="846.0"></text>
</g>
<g>
<title>vfs_read (14 samples, 0.34%)</title><rect x="1038.2" y="867.0" width="4.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1041.2" y="878.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.02%)</title><rect x="1038.5" y="851.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1041.5" y="862.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="1038.8" y="851.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1041.8" y="862.0"></text>
</g>
<g>
<title>new_sync_read (11 samples, 0.27%)</title><rect x="1039.1" y="851.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1042.1" y="862.0"></text>
</g>
<g>
<title>pipe_read (11 samples, 0.27%)</title><rect x="1039.1" y="835.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1042.1" y="846.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.05%)</title><rect x="1039.6" y="819.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1042.6" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="1039.6" y="803.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1042.6" y="814.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (3 samples, 0.07%)</title><rect x="1040.2" y="819.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1043.2" y="830.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1040.8" y="803.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1043.8" y="814.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1040.8" y="787.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1043.8" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1040.8" y="771.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1043.8" y="782.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1040.8" y="755.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1043.8" y="766.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1040.8" y="739.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1043.8" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1040.8" y="723.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1043.8" y="734.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.07%)</title><rect x="1041.1" y="819.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1044.1" y="830.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1041.4" y="803.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1044.4" y="814.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.02%)</title><rect x="1041.7" y="803.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1044.7" y="814.0"></text>
</g>
<g>
<title>generic_pipe_buf_confirm (1 samples, 0.02%)</title><rect x="1042.0" y="819.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1045.0" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1042.2" y="915.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1045.2" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1042.2" y="899.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1045.2" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1042.2" y="883.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1045.2" y="894.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.05%)</title><rect x="1042.5" y="931.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1045.5" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (4 samples, 0.10%)</title><rect x="1043.1" y="963.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1046.1" y="974.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.07%)</title><rect x="1043.1" y="947.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1046.1" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.07%)</title><rect x="1043.1" y="931.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1046.1" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.07%)</title><rect x="1043.1" y="915.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1046.1" y="926.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.02%)</title><rect x="1044.0" y="947.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1047.0" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.02%)</title><rect x="1044.0" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1047.0" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="1044.0" y="915.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1047.0" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (6 samples, 0.15%)</title><rect x="1044.3" y="979.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1047.3" y="990.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (6 samples, 0.15%)</title><rect x="1044.3" y="963.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1047.3" y="974.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.15%)</title><rect x="1044.3" y="947.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1047.3" y="958.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (6 samples, 0.15%)</title><rect x="1044.3" y="931.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1047.3" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (6 samples, 0.15%)</title><rect x="1044.3" y="915.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1047.3" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.05%)</title><rect x="1046.0" y="979.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1049.0" y="990.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (1 samples, 0.02%)</title><rect x="1046.3" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1049.3" y="974.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.02%)</title><rect x="1046.3" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1049.3" y="958.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.02%)</title><rect x="1046.3" y="931.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1049.3" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.02%)</title><rect x="1046.3" y="915.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1049.3" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.02%)</title><rect x="1046.6" y="979.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1049.6" y="990.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.cancelledKeys (1 samples, 0.02%)</title><rect x="1046.6" y="963.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1049.6" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (12 samples, 0.29%)</title><rect x="1046.9" y="1027.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1049.9" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (11 samples, 0.27%)</title><rect x="1047.2" y="1011.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1050.2" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (11 samples, 0.27%)</title><rect x="1047.2" y="995.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1050.2" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (7 samples, 0.17%)</title><rect x="1047.2" y="979.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1050.2" y="990.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (7 samples, 0.17%)</title><rect x="1047.2" y="963.0" width="2.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1050.2" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.12%)</title><rect x="1047.7" y="947.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1050.7" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.12%)</title><rect x="1047.7" y="931.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1050.7" y="942.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 0.10%)</title><rect x="1048.0" y="915.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1051.0" y="926.0"></text>
</g>
<g>
<title>do_epoll_wait (4 samples, 0.10%)</title><rect x="1048.0" y="899.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1051.0" y="910.0"></text>
</g>
<g>
<title>ep_poll (4 samples, 0.10%)</title><rect x="1048.0" y="883.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1051.0" y="894.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (4 samples, 0.10%)</title><rect x="1048.0" y="867.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1051.0" y="878.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.05%)</title><rect x="1048.3" y="851.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1051.3" y="862.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.05%)</title><rect x="1048.3" y="835.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1051.3" y="846.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.02%)</title><rect x="1048.6" y="819.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1051.6" y="830.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.02%)</title><rect x="1048.6" y="803.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1051.6" y="814.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="1048.6" y="787.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1051.6" y="798.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="1048.9" y="851.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1051.9" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (3 samples, 0.07%)</title><rect x="1049.2" y="979.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1052.2" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.05%)</title><rect x="1049.2" y="963.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1052.2" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.05%)</title><rect x="1049.2" y="947.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1052.2" y="958.0"></text>
</g>
<g>
<title>java/lang/Integer.equals (2 samples, 0.05%)</title><rect x="1049.2" y="931.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1052.2" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (1 samples, 0.02%)</title><rect x="1049.8" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1052.8" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (1 samples, 0.02%)</title><rect x="1050.1" y="979.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1053.1" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (9 samples, 0.22%)</title><rect x="1050.3" y="1027.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1053.3" y="1038.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (9 samples, 0.22%)</title><rect x="1050.3" y="1011.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1053.3" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (9 samples, 0.22%)</title><rect x="1050.3" y="995.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1053.3" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (8 samples, 0.20%)</title><rect x="1052.9" y="1027.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1055.9" y="1038.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (7 samples, 0.17%)</title><rect x="1053.2" y="1011.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1056.2" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (7 samples, 0.17%)</title><rect x="1053.2" y="995.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1056.2" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1054.7" y="979.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1057.7" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1054.7" y="963.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1057.7" y="974.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (326 samples, 7.99%)</title><rect x="1055.3" y="1043.0" width="94.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1058.3" y="1054.0">one/nio/ser..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1055.5" y="1027.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1058.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1055.5" y="1011.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1058.5" y="1022.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="1055.5" y="995.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1058.5" y="1006.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="1055.8" y="1027.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1058.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (66 samples, 1.62%)</title><rect x="1056.1" y="1027.0" width="19.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1059.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (64 samples, 1.57%)</title><rect x="1056.7" y="1011.0" width="18.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1059.7" y="1022.0"></text>
</g>
<g>
<title>.annobin_epoll_wait.c (51 samples, 1.25%)</title><rect x="1057.9" y="995.0" width="14.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1060.9" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 1.08%)</title><rect x="1059.9" y="979.0" width="12.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1062.9" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 1.08%)</title><rect x="1059.9" y="963.0" width="12.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1062.9" y="974.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (41 samples, 1.00%)</title><rect x="1060.8" y="947.0" width="11.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1063.8" y="958.0"></text>
</g>
<g>
<title>do_epoll_wait (41 samples, 1.00%)</title><rect x="1060.8" y="931.0" width="11.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1063.8" y="942.0"></text>
</g>
<g>
<title>ep_poll (41 samples, 1.00%)</title><rect x="1060.8" y="915.0" width="11.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1063.8" y="926.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (23 samples, 0.56%)</title><rect x="1062.8" y="899.0" width="6.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1065.8" y="910.0"></text>
</g>
<g>
<title>ep_send_events_proc (10 samples, 0.25%)</title><rect x="1064.5" y="883.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1067.5" y="894.0"></text>
</g>
<g>
<title>__list_del_entry_valid (1 samples, 0.02%)</title><rect x="1064.8" y="867.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1067.8" y="878.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (8 samples, 0.20%)</title><rect x="1065.1" y="867.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1068.1" y="878.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.15%)</title><rect x="1065.7" y="851.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1068.7" y="862.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.07%)</title><rect x="1066.5" y="835.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1069.5" y="846.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.05%)</title><rect x="1066.8" y="819.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1069.8" y="830.0"></text>
</g>
<g>
<title>mutex_lock (7 samples, 0.17%)</title><rect x="1067.4" y="883.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1070.4" y="894.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1069.1" y="867.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1072.1" y="878.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1069.1" y="851.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1072.1" y="862.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (11 samples, 0.27%)</title><rect x="1069.4" y="899.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1072.4" y="910.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.25%)</title><rect x="1069.7" y="883.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1072.7" y="894.0"></text>
</g>
<g>
<title>__sched_text_start (8 samples, 0.20%)</title><rect x="1070.3" y="867.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1073.3" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.17%)</title><rect x="1070.6" y="851.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1073.6" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.05%)</title><rect x="1072.6" y="995.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1075.6" y="1006.0"></text>
</g>
<g>
<title>__GI___clock_gettime (5 samples, 0.12%)</title><rect x="1073.2" y="995.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1076.2" y="1006.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="1073.8" y="979.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1076.8" y="990.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="1074.6" y="995.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1077.6" y="1006.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="1074.9" y="995.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1077.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (255 samples, 6.25%)</title><rect x="1075.2" y="1027.0" width="73.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1078.2" y="1038.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (251 samples, 6.15%)</title><rect x="1076.4" y="1011.0" width="72.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1079.4" y="1022.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (170 samples, 4.17%)</title><rect x="1076.7" y="995.0" width="49.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1079.7" y="1006.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3 samples, 0.07%)</title><rect x="1076.9" y="979.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.9" y="990.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.10%)</title><rect x="1077.8" y="979.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1080.8" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (148 samples, 3.63%)</title><rect x="1079.0" y="979.0" width="42.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1082.0" y="990.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (147 samples, 3.60%)</title><rect x="1079.3" y="963.0" width="42.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1082.3" y="974.0">one/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (131 samples, 3.21%)</title><rect x="1079.8" y="947.0" width="37.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1082.8" y="958.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.10%)</title><rect x="1079.8" y="931.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1082.8" y="942.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="1080.1" y="915.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1083.1" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="1080.1" y="899.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1083.1" y="910.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.05%)</title><rect x="1080.4" y="915.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1083.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1080.7" y="899.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1083.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1080.7" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1083.7" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="1080.7" y="867.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1083.7" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (127 samples, 3.11%)</title><rect x="1081.0" y="931.0" width="36.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1084.0" y="942.0">ru/..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.12%)</title><rect x="1081.6" y="915.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1084.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="1082.4" y="899.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1085.4" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="1082.4" y="883.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1085.4" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (72 samples, 1.76%)</title><rect x="1083.0" y="915.0" width="20.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1086.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (69 samples, 1.69%)</title><rect x="1083.9" y="899.0" width="19.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1086.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (69 samples, 1.69%)</title><rect x="1083.9" y="883.0" width="19.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1086.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (68 samples, 1.67%)</title><rect x="1083.9" y="867.0" width="19.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1086.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.07%)</title><rect x="1084.2" y="851.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1087.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.07%)</title><rect x="1084.2" y="835.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1087.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.07%)</title><rect x="1084.2" y="819.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1087.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.02%)</title><rect x="1084.8" y="803.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1087.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.02%)</title><rect x="1084.8" y="787.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1087.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.02%)</title><rect x="1084.8" y="771.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1087.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.02%)</title><rect x="1084.8" y="755.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1087.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="1085.0" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1088.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="1085.0" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1088.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="1085.0" y="819.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1088.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (63 samples, 1.54%)</title><rect x="1085.3" y="851.0" width="18.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1088.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (63 samples, 1.54%)</title><rect x="1085.3" y="835.0" width="18.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1088.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (63 samples, 1.54%)</title><rect x="1085.3" y="819.0" width="18.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1088.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (62 samples, 1.52%)</title><rect x="1085.6" y="803.0" width="17.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1088.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (62 samples, 1.52%)</title><rect x="1085.6" y="787.0" width="17.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1088.6" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (1 samples, 0.02%)</title><rect x="1085.9" y="771.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1088.9" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.15%)</title><rect x="1086.2" y="771.0" width="1.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1089.2" y="782.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.07%)</title><rect x="1086.2" y="755.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1089.2" y="766.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_lock (2 samples, 0.05%)</title><rect x="1087.1" y="755.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1090.1" y="766.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="1087.6" y="755.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1090.6" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (53 samples, 1.30%)</title><rect x="1087.9" y="771.0" width="15.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1090.9" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 1.10%)</title><rect x="1090.2" y="755.0" width="13.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1093.2" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 1.10%)</title><rect x="1090.2" y="739.0" width="13.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1093.2" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (42 samples, 1.03%)</title><rect x="1091.1" y="723.0" width="12.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1094.1" y="734.0"></text>
</g>
<g>
<title>do_futex (41 samples, 1.00%)</title><rect x="1091.4" y="707.0" width="11.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1094.4" y="718.0"></text>
</g>
<g>
<title>futex_wake (40 samples, 0.98%)</title><rect x="1091.7" y="691.0" width="11.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1094.7" y="702.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.05%)</title><rect x="1092.0" y="675.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1095.0" y="686.0"></text>
</g>
<g>
<title>wake_up_q (37 samples, 0.91%)</title><rect x="1092.6" y="675.0" width="10.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1095.6" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (37 samples, 0.91%)</title><rect x="1092.6" y="659.0" width="10.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1095.6" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (36 samples, 0.88%)</title><rect x="1092.8" y="643.0" width="10.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1095.8" y="654.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="1103.3" y="771.0" width="0.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1106.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="1103.5" y="867.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1106.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.02%)</title><rect x="1103.5" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1106.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.02%)</title><rect x="1103.5" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1106.5" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (28 samples, 0.69%)</title><rect x="1103.8" y="915.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1106.8" y="926.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (28 samples, 0.69%)</title><rect x="1103.8" y="899.0" width="8.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1106.8" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.02%)</title><rect x="1104.1" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1107.1" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (8 samples, 0.20%)</title><rect x="1104.4" y="883.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1107.4" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (6 samples, 0.15%)</title><rect x="1104.7" y="867.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1107.7" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (6 samples, 0.15%)</title><rect x="1104.7" y="851.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1107.7" y="862.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.02%)</title><rect x="1106.4" y="867.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1109.4" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.02%)</title><rect x="1106.4" y="851.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1109.4" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1106.4" y="835.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1109.4" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1106.4" y="819.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1109.4" y="830.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (16 samples, 0.39%)</title><rect x="1106.7" y="883.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1109.7" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (15 samples, 0.37%)</title><rect x="1107.0" y="867.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1110.0" y="878.0"></text>
</g>
<g>
<title>java/util/HashSet.add (10 samples, 0.25%)</title><rect x="1107.0" y="851.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1110.0" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.put (10 samples, 0.25%)</title><rect x="1107.0" y="835.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1110.0" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="1107.0" y="819.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1110.0" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (9 samples, 0.22%)</title><rect x="1107.3" y="819.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1110.3" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.05%)</title><rect x="1107.9" y="803.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1110.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (4 samples, 0.10%)</title><rect x="1108.5" y="803.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1111.5" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.hasNext (1 samples, 0.02%)</title><rect x="1109.6" y="803.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1112.6" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (3 samples, 0.07%)</title><rect x="1109.9" y="851.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1112.9" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (3 samples, 0.07%)</title><rect x="1109.9" y="835.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1112.9" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (3 samples, 0.07%)</title><rect x="1109.9" y="819.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1112.9" y="830.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (2 samples, 0.05%)</title><rect x="1110.8" y="851.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1113.8" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.02%)</title><rect x="1111.1" y="835.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1114.1" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.02%)</title><rect x="1111.1" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1114.1" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.02%)</title><rect x="1111.1" y="803.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1114.1" y="814.0"></text>
</g>
<g>
<title>java/util/Set.of (2 samples, 0.05%)</title><rect x="1111.4" y="883.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1114.4" y="894.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1111.4" y="867.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1114.4" y="878.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.probe (2 samples, 0.05%)</title><rect x="1111.4" y="851.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1114.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="1111.6" y="835.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1114.6" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="1111.6" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1114.6" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (20 samples, 0.49%)</title><rect x="1111.9" y="915.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1114.9" y="926.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1 samples, 0.02%)</title><rect x="1112.5" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1115.5" y="910.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (1 samples, 0.02%)</title><rect x="1112.5" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1115.5" y="894.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (17 samples, 0.42%)</title><rect x="1112.8" y="899.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1115.8" y="910.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (7 samples, 0.17%)</title><rect x="1114.0" y="883.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1117.0" y="894.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (7 samples, 0.17%)</title><rect x="1114.0" y="867.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1117.0" y="878.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (7 samples, 0.17%)</title><rect x="1114.0" y="851.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1117.0" y="862.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (7 samples, 0.17%)</title><rect x="1114.0" y="835.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (7 samples, 0.17%)</title><rect x="1114.0" y="819.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1117.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.17%)</title><rect x="1114.0" y="803.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1117.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.17%)</title><rect x="1114.0" y="787.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1117.0" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1115.7" y="771.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1118.7" y="782.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (3 samples, 0.07%)</title><rect x="1116.0" y="883.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1119.0" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="1116.8" y="883.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1119.8" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="1116.8" y="867.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1119.8" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="1116.8" y="851.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1119.8" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="1116.8" y="835.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1119.8" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.07%)</title><rect x="1116.8" y="819.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1119.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.15%)</title><rect x="1117.7" y="947.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1120.7" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.15%)</title><rect x="1117.7" y="931.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1120.7" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.07%)</title><rect x="1118.0" y="915.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1121.0" y="926.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.02%)</title><rect x="1118.6" y="899.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1121.6" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.05%)</title><rect x="1118.9" y="915.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1121.9" y="926.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.05%)</title><rect x="1118.9" y="899.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1121.9" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.05%)</title><rect x="1118.9" y="883.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1121.9" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.20%)</title><rect x="1119.4" y="947.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1122.4" y="958.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.20%)</title><rect x="1119.4" y="931.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1122.4" y="942.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.02%)</title><rect x="1119.4" y="915.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1122.4" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.17%)</title><rect x="1119.7" y="915.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1122.7" y="926.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1119.7" y="899.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1122.7" y="910.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1120.0" y="883.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1123.0" y="894.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (5 samples, 0.12%)</title><rect x="1120.3" y="899.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1123.3" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.17%)</title><rect x="1121.8" y="979.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.8" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1121.8" y="963.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1124.8" y="974.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1122.3" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1125.3" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1122.3" y="931.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1125.3" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="1122.3" y="915.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1125.3" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.10%)</title><rect x="1122.6" y="963.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1125.6" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.10%)</title><rect x="1122.6" y="947.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1125.6" y="958.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1123.5" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1126.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (1 samples, 0.02%)</title><rect x="1123.5" y="915.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1126.5" y="926.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (1 samples, 0.02%)</title><rect x="1123.5" y="899.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1126.5" y="910.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1123.5" y="883.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1126.5" y="894.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1123.5" y="867.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1126.5" y="878.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1123.5" y="851.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1126.5" y="862.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1123.5" y="835.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1126.5" y="846.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1123.5" y="819.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1126.5" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1123.5" y="803.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1126.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5 samples, 0.12%)</title><rect x="1123.8" y="979.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1126.8" y="990.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.12%)</title><rect x="1123.8" y="963.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1126.8" y="974.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.12%)</title><rect x="1123.8" y="947.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1126.8" y="958.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.02%)</title><rect x="1124.4" y="931.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1127.4" y="942.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.02%)</title><rect x="1124.4" y="915.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1127.4" y="926.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.02%)</title><rect x="1124.4" y="899.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1127.4" y="910.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="1124.7" y="931.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.7" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="1124.7" y="915.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1127.7" y="926.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="1124.9" y="931.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1127.9" y="942.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="1124.9" y="915.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1127.9" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getBody (1 samples, 0.02%)</title><rect x="1125.2" y="979.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1128.2" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="1125.5" y="979.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1128.5" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (80 samples, 1.96%)</title><rect x="1125.8" y="995.0" width="23.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1128.8" y="1006.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (77 samples, 1.89%)</title><rect x="1126.4" y="979.0" width="22.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1129.4" y="990.0">o..</text>
</g>
<g>
<title>[unknown] (13 samples, 0.32%)</title><rect x="1127.0" y="963.0" width="3.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1130.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.32%)</title><rect x="1127.0" y="947.0" width="3.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1130.0" y="958.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (12 samples, 0.29%)</title><rect x="1127.0" y="931.0" width="3.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1130.0" y="942.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="1127.8" y="915.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1130.8" y="926.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1128.1" y="915.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1131.1" y="926.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.15%)</title><rect x="1128.4" y="915.0" width="1.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1131.4" y="926.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="1129.3" y="899.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1132.3" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.195] (2 samples, 0.05%)</title><rect x="1129.6" y="899.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1132.6" y="910.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="1130.1" y="915.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1133.1" y="926.0"></text>
</g>
<g>
<title>__libc_recv (1 samples, 0.02%)</title><rect x="1130.4" y="931.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1133.4" y="942.0"></text>
</g>
<g>
<title>__libc_recv (62 samples, 1.52%)</title><rect x="1130.7" y="963.0" width="18.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1133.7" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (49 samples, 1.20%)</title><rect x="1134.5" y="947.0" width="14.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1137.5" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (49 samples, 1.20%)</title><rect x="1134.5" y="931.0" width="14.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1137.5" y="942.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (44 samples, 1.08%)</title><rect x="1135.9" y="915.0" width="12.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1138.9" y="926.0"></text>
</g>
<g>
<title>__sys_recvfrom (44 samples, 1.08%)</title><rect x="1135.9" y="899.0" width="12.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1138.9" y="910.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.05%)</title><rect x="1136.2" y="883.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1139.2" y="894.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="1136.5" y="867.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1139.5" y="878.0"></text>
</g>
<g>
<title>inet_recvmsg (31 samples, 0.76%)</title><rect x="1136.8" y="883.0" width="9.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1139.8" y="894.0"></text>
</g>
<g>
<title>tcp_recvmsg (31 samples, 0.76%)</title><rect x="1136.8" y="867.0" width="9.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1139.8" y="878.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.25%)</title><rect x="1138.2" y="851.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1141.2" y="862.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.22%)</title><rect x="1138.2" y="835.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1141.2" y="846.0"></text>
</g>
<g>
<title>skb_release_head_state (8 samples, 0.20%)</title><rect x="1138.5" y="819.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1141.5" y="830.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.05%)</title><rect x="1138.8" y="803.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1141.8" y="814.0"></text>
</g>
<g>
<title>sock_rfree (5 samples, 0.12%)</title><rect x="1139.4" y="803.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1142.4" y="814.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1140.8" y="835.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1143.8" y="846.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (9 samples, 0.22%)</title><rect x="1141.1" y="851.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1144.1" y="862.0"></text>
</g>
<g>
<title>__ip_queue_xmit (9 samples, 0.22%)</title><rect x="1141.1" y="835.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1144.1" y="846.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.07%)</title><rect x="1141.1" y="819.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1144.1" y="830.0"></text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.07%)</title><rect x="1141.1" y="803.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1144.1" y="814.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.07%)</title><rect x="1141.1" y="787.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1144.1" y="798.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (1 samples, 0.02%)</title><rect x="1141.1" y="771.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1144.1" y="782.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (1 samples, 0.02%)</title><rect x="1141.4" y="771.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1144.4" y="782.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (1 samples, 0.02%)</title><rect x="1141.4" y="755.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1144.4" y="766.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (1 samples, 0.02%)</title><rect x="1141.7" y="771.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1144.7" y="782.0"></text>
</g>
<g>
<title>ip_output (6 samples, 0.15%)</title><rect x="1142.0" y="819.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1145.0" y="830.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 0.12%)</title><rect x="1142.0" y="803.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1145.0" y="814.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="1142.3" y="787.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1145.3" y="798.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.07%)</title><rect x="1142.6" y="787.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1145.6" y="798.0"></text>
</g>
<g>
<title>do_softirq.part.0 (3 samples, 0.07%)</title><rect x="1142.6" y="771.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1145.6" y="782.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.07%)</title><rect x="1142.6" y="755.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1145.6" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.07%)</title><rect x="1142.6" y="739.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1145.6" y="750.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.07%)</title><rect x="1142.6" y="723.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1145.6" y="734.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.07%)</title><rect x="1142.6" y="707.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1145.6" y="718.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.05%)</title><rect x="1142.9" y="691.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1145.9" y="702.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.05%)</title><rect x="1142.9" y="675.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1145.9" y="686.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.05%)</title><rect x="1142.9" y="659.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1145.9" y="670.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1142.9" y="643.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1145.9" y="654.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="1142.9" y="627.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1145.9" y="638.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1142.9" y="611.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1145.9" y="622.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1142.9" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1145.9" y="606.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1142.9" y="579.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1145.9" y="590.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="1142.9" y="563.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1145.9" y="574.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="1143.2" y="643.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1146.2" y="654.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (1 samples, 0.02%)</title><rect x="1143.2" y="627.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1146.2" y="638.0"></text>
</g>
<g>
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="1143.4" y="803.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1146.4" y="814.0"></text>
</g>
<g>
<title>nf_confirm	[nf_conntrack] (1 samples, 0.02%)</title><rect x="1143.4" y="787.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1146.4" y="798.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (1 samples, 0.02%)</title><rect x="1143.4" y="771.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1146.4" y="782.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.15%)</title><rect x="1143.7" y="851.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1146.7" y="862.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.15%)</title><rect x="1143.7" y="835.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1146.7" y="846.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.10%)</title><rect x="1143.7" y="819.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1146.7" y="830.0"></text>
</g>
<g>
<title>copyout (3 samples, 0.07%)</title><rect x="1144.0" y="803.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1147.0" y="814.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.07%)</title><rect x="1144.0" y="787.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1147.0" y="798.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.05%)</title><rect x="1144.9" y="819.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1147.9" y="830.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.05%)</title><rect x="1144.9" y="803.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1147.9" y="814.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="1145.2" y="787.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1148.2" y="798.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="1145.5" y="851.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1148.5" y="862.0"></text>
</g>
<g>
<title>sock_recvmsg (6 samples, 0.15%)</title><rect x="1145.8" y="883.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1148.8" y="894.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.15%)</title><rect x="1145.8" y="867.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1148.8" y="878.0"></text>
</g>
<g>
<title>sock_has_perm (6 samples, 0.15%)</title><rect x="1145.8" y="851.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1148.8" y="862.0"></text>
</g>
<g>
<title>avc_has_perm (2 samples, 0.05%)</title><rect x="1146.9" y="835.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1149.9" y="846.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.10%)</title><rect x="1147.5" y="883.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1150.5" y="894.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="1147.5" y="867.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1150.5" y="878.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="1147.8" y="867.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1150.8" y="878.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="1147.8" y="851.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1150.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.02%)</title><rect x="1148.7" y="979.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1151.7" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.listen (1 samples, 0.02%)</title><rect x="1148.7" y="963.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1151.7" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.02%)</title><rect x="1148.7" y="947.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1151.7" y="958.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="1148.9" y="1027.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1151.9" y="1038.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="1148.9" y="1011.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1151.9" y="1022.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="1148.9" y="995.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1151.9" y="1006.0"></text>
</g>
<g>
<title>start_thread (140 samples, 3.43%)</title><rect x="1149.5" y="1043.0" width="40.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1152.5" y="1054.0">sta..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (140 samples, 3.43%)</title><rect x="1149.5" y="1027.0" width="40.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1152.5" y="1038.0">thr..</text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.02%)</title><rect x="1149.5" y="1011.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1152.5" y="1022.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.02%)</title><rect x="1149.5" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.5" y="1006.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.02%)</title><rect x="1149.5" y="979.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1152.5" y="990.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="1149.5" y="963.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1152.5" y="974.0"></text>
</g>
<g>
<title>OtherRegionsTable::occupied() const (1 samples, 0.02%)</title><rect x="1149.5" y="947.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.5" y="958.0"></text>
</g>
<g>
<title>GangWorker::loop() (62 samples, 1.52%)</title><rect x="1149.8" y="1011.0" width="17.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1152.8" y="1022.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (61 samples, 1.49%)</title><rect x="1149.8" y="995.0" width="17.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.8" y="1006.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.07%)</title><rect x="1149.8" y="979.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.8" y="990.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.02%)</title><rect x="1149.8" y="963.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1152.8" y="974.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="1150.1" y="963.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1153.1" y="974.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (58 samples, 1.42%)</title><rect x="1150.7" y="979.0" width="16.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1153.7" y="990.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (58 samples, 1.42%)</title><rect x="1150.7" y="963.0" width="16.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1153.7" y="974.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (58 samples, 1.42%)</title><rect x="1150.7" y="947.0" width="16.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1153.7" y="958.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (58 samples, 1.42%)</title><rect x="1150.7" y="931.0" width="16.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1153.7" y="942.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (57 samples, 1.40%)</title><rect x="1151.0" y="915.0" width="16.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1154.0" y="926.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (39 samples, 0.96%)</title><rect x="1151.3" y="899.0" width="11.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1154.3" y="910.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (26 samples, 0.64%)</title><rect x="1155.0" y="883.0" width="7.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1158.0" y="894.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (7 samples, 0.17%)</title><rect x="1160.5" y="867.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.5" y="878.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.121] (17 samples, 0.42%)</title><rect x="1162.5" y="899.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1165.5" y="910.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (16 samples, 0.39%)</title><rect x="1162.5" y="883.0" width="4.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.5" y="894.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (3 samples, 0.07%)</title><rect x="1162.8" y="867.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1165.8" y="878.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.02%)</title><rect x="1163.7" y="867.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.7" y="878.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.02%)</title><rect x="1164.0" y="867.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1167.0" y="878.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.05%)</title><rect x="1164.3" y="867.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1167.3" y="878.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (1 samples, 0.02%)</title><rect x="1164.8" y="867.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1167.8" y="878.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (4 samples, 0.10%)</title><rect x="1165.1" y="867.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1168.1" y="878.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*, MemRegion) (1 samples, 0.02%)</title><rect x="1166.3" y="867.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1169.3" y="878.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (2 samples, 0.05%)</title><rect x="1166.6" y="867.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1169.6" y="878.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.02%)</title><rect x="1166.9" y="851.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.9" y="862.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.02%)</title><rect x="1167.2" y="883.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1170.2" y="894.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1167.4" y="995.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1170.4" y="1006.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.02%)</title><rect x="1167.4" y="979.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1170.4" y="990.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.63] (1 samples, 0.02%)</title><rect x="1167.4" y="963.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1170.4" y="974.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="1167.4" y="947.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1170.4" y="958.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.02%)</title><rect x="1167.4" y="931.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1170.4" y="942.0"></text>
</g>
<g>
<title>JavaThread::run() (75 samples, 1.84%)</title><rect x="1167.7" y="1011.0" width="21.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1170.7" y="1022.0">J..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (75 samples, 1.84%)</title><rect x="1167.7" y="995.0" width="21.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1170.7" y="1006.0">J..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (75 samples, 1.84%)</title><rect x="1167.7" y="979.0" width="21.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1170.7" y="990.0">C..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (75 samples, 1.84%)</title><rect x="1167.7" y="963.0" width="21.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1170.7" y="974.0">C..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (70 samples, 1.72%)</title><rect x="1167.7" y="947.0" width="20.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1170.7" y="958.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (70 samples, 1.72%)</title><rect x="1167.7" y="931.0" width="20.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1170.7" y="942.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (40 samples, 0.98%)</title><rect x="1167.7" y="915.0" width="11.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.7" y="926.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.02%)</title><rect x="1167.7" y="899.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.7" y="910.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.02%)</title><rect x="1167.7" y="883.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1170.7" y="894.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.02%)</title><rect x="1168.0" y="899.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.0" y="910.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (1 samples, 0.02%)</title><rect x="1168.0" y="883.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.0" y="894.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.02%)</title><rect x="1168.0" y="867.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1171.0" y="878.0"></text>
</g>
<g>
<title>Matcher::match() (3 samples, 0.07%)</title><rect x="1168.3" y="899.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.3" y="910.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (3 samples, 0.07%)</title><rect x="1168.3" y="883.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1171.3" y="894.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.02%)</title><rect x="1168.9" y="867.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1171.9" y="878.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.02%)</title><rect x="1168.9" y="851.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.9" y="862.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.02%)</title><rect x="1168.9" y="835.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.9" y="846.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.02%)</title><rect x="1168.9" y="819.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.9" y="830.0"></text>
</g>
<g>
<title>State::_sub_Op_Binary(Node const*) (1 samples, 0.02%)</title><rect x="1168.9" y="803.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.9" y="814.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (6 samples, 0.15%)</title><rect x="1169.2" y="899.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1172.2" y="910.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (6 samples, 0.15%)</title><rect x="1169.2" y="883.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.2" y="894.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (3 samples, 0.07%)</title><rect x="1169.2" y="867.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.2" y="878.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (1 samples, 0.02%)</title><rect x="1169.2" y="851.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.2" y="862.0"></text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.02%)</title><rect x="1169.2" y="835.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.2" y="846.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (1 samples, 0.02%)</title><rect x="1169.5" y="851.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.5" y="862.0"></text>
</g>
<g>
<title>MachNode::adr_type() const (1 samples, 0.02%)</title><rect x="1169.5" y="835.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.5" y="846.0"></text>
</g>
<g>
<title>indOffset32Oper::constant_disp() const (1 samples, 0.02%)</title><rect x="1169.5" y="819.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1172.5" y="830.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (1 samples, 0.02%)</title><rect x="1169.8" y="851.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.8" y="862.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.02%)</title><rect x="1170.0" y="867.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.0" y="878.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (1 samples, 0.02%)</title><rect x="1170.0" y="851.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.0" y="862.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.05%)</title><rect x="1170.3" y="867.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.3" y="878.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.02%)</title><rect x="1170.6" y="851.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.6" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (29 samples, 0.71%)</title><rect x="1170.9" y="899.0" width="8.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.9" y="910.0"></text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.02%)</title><rect x="1170.9" y="883.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1173.9" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (2 samples, 0.05%)</title><rect x="1171.2" y="883.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1174.2" y="894.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (2 samples, 0.05%)</title><rect x="1171.2" y="867.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.2" y="878.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1171.5" y="851.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1174.5" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (5 samples, 0.12%)</title><rect x="1171.8" y="883.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.8" y="894.0"></text>
</g>
<g>
<title>testI_regNode::rule() const (1 samples, 0.02%)</title><rect x="1172.9" y="867.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1175.9" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (8 samples, 0.20%)</title><rect x="1173.2" y="883.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.2" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (4 samples, 0.10%)</title><rect x="1173.8" y="867.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1176.8" y="878.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.05%)</title><rect x="1174.4" y="851.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1177.4" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (2 samples, 0.05%)</title><rect x="1175.0" y="867.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1178.0" y="878.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (2 samples, 0.05%)</title><rect x="1175.0" y="851.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.0" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (2 samples, 0.05%)</title><rect x="1175.5" y="883.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.5" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.05%)</title><rect x="1175.5" y="867.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1178.5" y="878.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1175.8" y="851.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.8" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.05%)</title><rect x="1176.1" y="883.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.1" y="894.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.02%)</title><rect x="1176.4" y="867.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.4" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (1 samples, 0.02%)</title><rect x="1176.7" y="883.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1179.7" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (4 samples, 0.10%)</title><rect x="1177.0" y="883.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.0" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (2 samples, 0.05%)</title><rect x="1177.6" y="867.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1180.6" y="878.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.02%)</title><rect x="1178.1" y="883.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.1" y="894.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.02%)</title><rect x="1178.1" y="867.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.1" y="878.0"></text>
</g>
<g>
<title>PhaseIFG::effective_degree(unsigned int) const (1 samples, 0.02%)</title><rect x="1178.1" y="851.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.1" y="862.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.02%)</title><rect x="1178.4" y="883.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.4" y="894.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.02%)</title><rect x="1178.7" y="883.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.7" y="894.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1178.7" y="867.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.7" y="878.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="1179.0" y="883.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1182.0" y="894.0"></text>
</g>
<g>
<title>Compile::Optimize() (18 samples, 0.44%)</title><rect x="1179.3" y="915.0" width="5.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.3" y="926.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.02%)</title><rect x="1179.3" y="899.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.3" y="910.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.02%)</title><rect x="1179.3" y="883.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1182.3" y="894.0"></text>
</g>
<g>
<title>ConnectionGraph::add_field(Node*, PointsToNode::EscapeState, int) [clone .part.171] (1 samples, 0.02%)</title><rect x="1179.3" y="867.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.3" y="878.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.02%)</title><rect x="1179.3" y="851.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.3" y="862.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (2 samples, 0.05%)</title><rect x="1179.6" y="899.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.6" y="910.0"></text>
</g>
<g>
<title>VectorSet::operator&gt;&gt;=(unsigned int) (1 samples, 0.02%)</title><rect x="1179.9" y="883.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.9" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (11 samples, 0.27%)</title><rect x="1180.2" y="899.0" width="3.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.2" y="910.0"></text>
</g>
<g>
<title>IdealLoopTree::beautify_loops(PhaseIdealLoop*) (1 samples, 0.02%)</title><rect x="1180.2" y="883.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.2" y="894.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1180.2" y="867.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.2" y="878.0"></text>
</g>
<g>
<title>TypeInstPtr::hash() const (1 samples, 0.02%)</title><rect x="1180.2" y="851.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.2" y="862.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.02%)</title><rect x="1180.5" y="883.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.5" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.72] (1 samples, 0.02%)</title><rect x="1180.5" y="867.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.5" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1180.5" y="851.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.5" y="862.0"></text>
</g>
<g>
<title>PathFrequency::to(Node*) (1 samples, 0.02%)</title><rect x="1180.5" y="835.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.5" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.05%)</title><rect x="1180.7" y="883.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.7" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1181.0" y="867.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1184.0" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1181.0" y="851.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1184.0" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1181.0" y="835.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1184.0" y="846.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1181.0" y="819.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1184.0" y="830.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="1181.0" y="803.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1184.0" y="814.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1181.0" y="787.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1184.0" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (4 samples, 0.10%)</title><rect x="1181.3" y="883.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.3" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (4 samples, 0.10%)</title><rect x="1181.3" y="867.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.3" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (4 samples, 0.10%)</title><rect x="1181.3" y="851.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.3" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (4 samples, 0.10%)</title><rect x="1181.3" y="835.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.3" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (2 samples, 0.05%)</title><rect x="1182.5" y="883.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.5" y="894.0"></text>
</g>
<g>
<title>SafePointNode::pinned() const (1 samples, 0.02%)</title><rect x="1183.1" y="883.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.1" y="894.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.10%)</title><rect x="1183.3" y="899.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.3" y="910.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.07%)</title><rect x="1183.6" y="883.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.6" y="894.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1183.9" y="867.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.9" y="878.0"></text>
</g>
<g>
<title>NodeHash::hash_delete(Node const*) (1 samples, 0.02%)</title><rect x="1183.9" y="851.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.9" y="862.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1184.2" y="867.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.2" y="878.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.138] (1 samples, 0.02%)</title><rect x="1184.2" y="851.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.2" y="862.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1184.2" y="835.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.2" y="846.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1184.2" y="819.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.2" y="830.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.131] (1 samples, 0.02%)</title><rect x="1184.2" y="803.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.2" y="814.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1184.2" y="787.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.2" y="798.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (1 samples, 0.02%)</title><rect x="1184.5" y="915.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.5" y="926.0"></text>
</g>
<g>
<title>PhaseStringOpts::PhaseStringOpts(PhaseGVN*, Unique_Node_List*) (1 samples, 0.02%)</title><rect x="1184.5" y="899.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.5" y="910.0"></text>
</g>
<g>
<title>PhaseStringOpts::replace_string_concat(StringConcat*) (1 samples, 0.02%)</title><rect x="1184.5" y="883.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.5" y="894.0"></text>
</g>
<g>
<title>ciInstance::field_value_by_offset(int) (1 samples, 0.02%)</title><rect x="1184.5" y="867.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.5" y="878.0"></text>
</g>
<g>
<title>ciInstance::field_value_impl(BasicType, int) (1 samples, 0.02%)</title><rect x="1184.5" y="851.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.5" y="862.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.02%)</title><rect x="1184.5" y="835.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1187.5" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.25%)</title><rect x="1184.8" y="915.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.8" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.25%)</title><rect x="1184.8" y="899.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.8" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.25%)</title><rect x="1184.8" y="883.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.8" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.25%)</title><rect x="1184.8" y="867.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.8" y="878.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.02%)</title><rect x="1184.8" y="851.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.8" y="862.0"></text>
</g>
<g>
<title>Parse::catch_inline_exceptions(SafePointNode*) (1 samples, 0.02%)</title><rect x="1184.8" y="835.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.8" y="846.0"></text>
</g>
<g>
<title>Parse::throw_to_exit(SafePointNode*) (1 samples, 0.02%)</title><rect x="1184.8" y="819.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.8" y="830.0"></text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (1 samples, 0.02%)</title><rect x="1184.8" y="803.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.8" y="814.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.02%)</title><rect x="1184.8" y="787.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.8" y="798.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.02%)</title><rect x="1184.8" y="771.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.22%)</title><rect x="1185.1" y="851.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.1" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.22%)</title><rect x="1185.1" y="835.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.1" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.15%)</title><rect x="1185.1" y="819.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.1" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.15%)</title><rect x="1185.1" y="803.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.1" y="814.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.02%)</title><rect x="1185.1" y="787.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.1" y="798.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.02%)</title><rect x="1185.1" y="771.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.1" y="782.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*, Node*) (1 samples, 0.02%)</title><rect x="1185.1" y="755.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.1" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.12%)</title><rect x="1185.4" y="787.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.4" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.12%)</title><rect x="1185.4" y="771.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.4" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.12%)</title><rect x="1185.4" y="755.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.12%)</title><rect x="1185.4" y="739.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.4" y="750.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1185.4" y="723.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.4" y="734.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1185.4" y="707.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.4" y="718.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1185.4" y="691.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.4" y="702.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1185.4" y="675.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.4" y="686.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1185.4" y="659.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.4" y="670.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1185.4" y="643.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.4" y="654.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1185.4" y="627.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.4" y="638.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1185.4" y="611.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.4" y="622.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_putstatic(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1185.4" y="595.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.4" y="606.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.02%)</title><rect x="1185.4" y="579.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.4" y="590.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1185.4" y="563.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.4" y="574.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1185.4" y="547.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.4" y="558.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1185.4" y="531.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.4" y="542.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.02%)</title><rect x="1185.4" y="515.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.4" y="526.0"></text>
</g>
<g>
<title>SystemDictionary::find_instance_or_array_klass(Symbol*, Handle, Handle, Thread*) (1 samples, 0.02%)</title><rect x="1185.4" y="499.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.4" y="510.0"></text>
</g>
<g>
<title>java_lang_ClassLoader::non_reflection_class_loader(oopDesc*) (1 samples, 0.02%)</title><rect x="1185.4" y="483.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.4" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.10%)</title><rect x="1185.7" y="723.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.7" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.10%)</title><rect x="1185.7" y="707.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.7" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.10%)</title><rect x="1185.7" y="691.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.7" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.10%)</title><rect x="1185.7" y="675.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.7" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.10%)</title><rect x="1185.7" y="659.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.7" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.10%)</title><rect x="1185.7" y="643.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.7" y="654.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1185.7" y="627.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.7" y="638.0"></text>
</g>
<g>
<title>GraphKit::set_results_for_java_call(CallJavaNode*, bool) (1 samples, 0.02%)</title><rect x="1185.7" y="611.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.7" y="622.0"></text>
</g>
<g>
<title>GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool) [clone .part.177] (1 samples, 0.02%)</title><rect x="1185.7" y="595.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.7" y="606.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1185.7" y="579.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.7" y="590.0"></text>
</g>
<g>
<title>CatchProjNode::cmp(Node const&amp;) const (1 samples, 0.02%)</title><rect x="1185.7" y="563.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.7" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1186.0" y="627.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.0" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="1186.0" y="611.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.0" y="622.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.02%)</title><rect x="1186.0" y="595.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.0" y="606.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1186.0" y="579.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.0" y="590.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1186.0" y="563.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.0" y="574.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1186.0" y="547.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.0" y="558.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1186.0" y="531.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.0" y="542.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1186.0" y="515.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.0" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1186.2" y="595.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.2" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1186.2" y="579.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.2" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="1186.2" y="563.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.2" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.2" y="547.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.2" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.2" y="531.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.2" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.2" y="515.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.2" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.2" y="499.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.2" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.2" y="483.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.2" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.2" y="467.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.2" y="478.0"></text>
</g>
<g>
<title>Parse::do_new() (1 samples, 0.02%)</title><rect x="1186.2" y="451.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.2" y="462.0"></text>
</g>
<g>
<title>GraphKit::new_instance(Node*, Node*, Node**, bool) (1 samples, 0.02%)</title><rect x="1186.2" y="435.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.2" y="446.0"></text>
</g>
<g>
<title>GraphKit::set_output_for_allocation(AllocateNode*, TypeOopPtr const*, bool) (1 samples, 0.02%)</title><rect x="1186.2" y="419.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.2" y="430.0"></text>
</g>
<g>
<title>GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool) [clone .part.177] (1 samples, 0.02%)</title><rect x="1186.2" y="403.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.2" y="414.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1186.2" y="387.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.2" y="398.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.02%)</title><rect x="1186.2" y="371.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.2" y="382.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1186.5" y="547.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.5" y="558.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1186.5" y="531.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.5" y="542.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1186.5" y="515.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.5" y="526.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1186.5" y="499.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.5" y="510.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1186.5" y="483.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.5" y="494.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1186.5" y="467.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.5" y="478.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool) (1 samples, 0.02%)</title><rect x="1186.5" y="451.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.5" y="462.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1186.5" y="435.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.5" y="446.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1186.5" y="419.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.5" y="430.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.138] (1 samples, 0.02%)</title><rect x="1186.5" y="403.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.5" y="414.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1186.5" y="387.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.5" y="398.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1186.5" y="371.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.5" y="382.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1186.5" y="355.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.5" y="366.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1186.5" y="339.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.5" y="350.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1186.5" y="323.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.5" y="334.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1186.5" y="307.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.5" y="318.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.131] (1 samples, 0.02%)</title><rect x="1186.5" y="291.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.5" y="302.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1186.5" y="275.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.5" y="286.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1186.8" y="819.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.8" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1186.8" y="803.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.8" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="1186.8" y="787.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.8" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.07%)</title><rect x="1186.8" y="771.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.07%)</title><rect x="1186.8" y="755.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.07%)</title><rect x="1186.8" y="739.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.07%)</title><rect x="1186.8" y="723.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.8" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1186.8" y="707.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.8" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="1186.8" y="691.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.8" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.07%)</title><rect x="1186.8" y="675.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.8" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.07%)</title><rect x="1186.8" y="659.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.07%)</title><rect x="1186.8" y="643.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.8" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1186.8" y="627.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.8" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1186.8" y="611.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.8" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1186.8" y="595.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.8" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1186.8" y="579.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.8" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1186.8" y="563.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.8" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="1186.8" y="547.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.8" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.05%)</title><rect x="1186.8" y="531.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.8" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.05%)</title><rect x="1186.8" y="515.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.8" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.05%)</title><rect x="1186.8" y="499.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.8" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.05%)</title><rect x="1186.8" y="483.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.8" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.05%)</title><rect x="1186.8" y="467.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.8" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.05%)</title><rect x="1186.8" y="451.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.8" y="462.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.02%)</title><rect x="1186.8" y="435.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.8" y="446.0"></text>
</g>
<g>
<title>Parse::Block::successor_for_bci(int) (1 samples, 0.02%)</title><rect x="1186.8" y="419.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.8" y="430.0"></text>
</g>
<g>
<title>Parse::do_instanceof() (1 samples, 0.02%)</title><rect x="1187.1" y="435.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.1" y="446.0"></text>
</g>
<g>
<title>GraphKit::gen_instanceof(Node*, Node*, bool) (1 samples, 0.02%)</title><rect x="1187.1" y="419.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.1" y="430.0"></text>
</g>
<g>
<title>GraphKit::record_profile_for_speculation(Node*, ciKlass*, ProfilePtrKind) (1 samples, 0.02%)</title><rect x="1187.1" y="403.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.1" y="414.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1187.1" y="387.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.1" y="398.0"></text>
</g>
<g>
<title>CheckCastPPNode::Identity(PhaseGVN*) (1 samples, 0.02%)</title><rect x="1187.1" y="371.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.1" y="382.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1187.4" y="627.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.4" y="638.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1187.4" y="611.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.4" y="622.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1187.4" y="595.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.4" y="606.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1187.4" y="579.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.4" y="590.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1187.4" y="563.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.4" y="574.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.02%)</title><rect x="1187.4" y="547.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.4" y="558.0"></text>
</g>
<g>
<title>GraphKit::insert_mem_bar(int, Node*) (1 samples, 0.02%)</title><rect x="1187.4" y="531.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.4" y="542.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1187.4" y="515.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.4" y="526.0"></text>
</g>
<g>
<title>MemBarNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1187.4" y="499.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.4" y="510.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.02%)</title><rect x="1187.7" y="915.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.7" y="926.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (5 samples, 0.12%)</title><rect x="1188.0" y="947.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.0" y="958.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (5 samples, 0.12%)</title><rect x="1188.0" y="931.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.0" y="942.0"></text>
</g>
<g>
<title>Compilation::compile_method() (5 samples, 0.12%)</title><rect x="1188.0" y="915.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.0" y="926.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (5 samples, 0.12%)</title><rect x="1188.0" y="899.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.0" y="910.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (2 samples, 0.05%)</title><rect x="1188.0" y="883.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.0" y="894.0"></text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (1 samples, 0.02%)</title><rect x="1188.0" y="867.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.0" y="878.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.02%)</title><rect x="1188.3" y="867.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.3" y="878.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.02%)</title><rect x="1188.3" y="851.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.3" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.02%)</title><rect x="1188.3" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.3" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.02%)</title><rect x="1188.3" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.3" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.02%)</title><rect x="1188.3" y="803.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.3" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.02%)</title><rect x="1188.3" y="787.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.3" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="1188.3" y="771.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.3" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="1188.3" y="755.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.3" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.02%)</title><rect x="1188.3" y="739.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.3" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.02%)</title><rect x="1188.3" y="723.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.3" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="1188.3" y="707.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.3" y="718.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (1 samples, 0.02%)</title><rect x="1188.6" y="883.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.6" y="894.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (1 samples, 0.02%)</title><rect x="1188.6" y="867.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.6" y="878.0"></text>
</g>
<g>
<title>LIR_OpAllocObj::emit_code(LIR_Assembler*) (1 samples, 0.02%)</title><rect x="1188.6" y="851.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.6" y="862.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_alloc_obj(LIR_OpAllocObj*) (1 samples, 0.02%)</title><rect x="1188.6" y="835.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.6" y="846.0"></text>
</g>
<g>
<title>C1_MacroAssembler::initialize_object(RegisterImpl*, RegisterImpl*, RegisterImpl*, int, RegisterImpl*, RegisterImpl*, bool) (1 samples, 0.02%)</title><rect x="1188.6" y="819.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.6" y="830.0"></text>
</g>
<g>
<title>C1_MacroAssembler::initialize_header(RegisterImpl*, RegisterImpl*, RegisterImpl*, RegisterImpl*, RegisterImpl*) (1 samples, 0.02%)</title><rect x="1188.6" y="803.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.6" y="814.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (2 samples, 0.05%)</title><rect x="1188.8" y="883.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.8" y="894.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (2 samples, 0.05%)</title><rect x="1188.8" y="867.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.8" y="878.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (1 samples, 0.02%)</title><rect x="1188.8" y="851.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.8" y="862.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (1 samples, 0.02%)</title><rect x="1188.8" y="835.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.8" y="846.0"></text>
</g>
<g>
<title>LIRGenerator::is_vreg_flag_set(int, LIRGenerator::VregFlag) (1 samples, 0.02%)</title><rect x="1188.8" y="819.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.8" y="830.0"></text>
</g>
<g>
<title>LinearScan::eliminate_spill_moves() (1 samples, 0.02%)</title><rect x="1189.1" y="851.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.1" y="862.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.02%)</title><rect x="1189.4" y="1011.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.4" y="1022.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.02%)</title><rect x="1189.4" y="995.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.4" y="1006.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.02%)</title><rect x="1189.4" y="979.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.4" y="990.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.02%)</title><rect x="1189.4" y="963.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.4" y="974.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (1 samples, 0.02%)</title><rect x="1189.4" y="947.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.4" y="958.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.02%)</title><rect x="1189.4" y="931.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.4" y="942.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (1 samples, 0.02%)</title><rect x="1189.4" y="915.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1192.4" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1189.4" y="899.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1192.4" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1189.4" y="883.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1192.4" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1189.4" y="867.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1192.4" y="878.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1189.4" y="851.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1192.4" y="862.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1189.4" y="835.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1192.4" y="846.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.02%)</title><rect x="1189.7" y="1011.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.7" y="1022.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.02%)</title><rect x="1189.7" y="995.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.7" y="1006.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.02%)</title><rect x="1189.7" y="979.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.7" y="990.0"></text>
</g>
<g>
<title>Thread::muxAcquire(long volatile*, char const*) (1 samples, 0.02%)</title><rect x="1189.7" y="963.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.7" y="974.0"></text>
</g>
</g>
</svg>
