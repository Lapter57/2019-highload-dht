<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="901"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="901"> </text>
<g id="frames">
<g>
<title>all (42,221 samples, 100.00%)</title><rect x="10.0" y="867.0" width="1180.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="13.0" y="878.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (28,032 samples, 66.39%)</title><rect x="10.0" y="851.0" width="783.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="862.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (28,032 samples, 66.39%)</title><rect x="10.0" y="835.0" width="783.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="846.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (28,032 samples, 66.39%)</title><rect x="10.0" y="819.0" width="783.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="830.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (10,265 samples, 24.31%)</title><rect x="10.0" y="803.0" width="286.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/util/concurrent/CompletableFuture..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10,265 samples, 24.31%)</title><rect x="10.0" y="787.0" width="286.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/CompletableFuture..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (10,265 samples, 24.31%)</title><rect x="10.0" y="771.0" width="286.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/CompletableFuture..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1729551726.apply (10,265 samples, 24.31%)</title><rect x="10.0" y="755.0" width="286.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="766.0">jdk/internal/net/http/MultiExchange$$L..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (10,265 samples, 24.31%)</title><rect x="10.0" y="739.0" width="286.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="750.0">jdk/internal/net/http/MultiExchange.la..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (10,265 samples, 24.31%)</title><rect x="10.0" y="723.0" width="286.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="734.0">jdk/internal/net/http/MultiExchange.re..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (10,213 samples, 24.19%)</title><rect x="10.0" y="707.0" width="285.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="718.0">jdk/internal/net/http/Exchange.respons..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (10,213 samples, 24.19%)</title><rect x="10.0" y="691.0" width="285.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="702.0">jdk/internal/net/http/Exchange.respons..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (10,213 samples, 24.19%)</title><rect x="10.0" y="675.0" width="285.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="686.0">jdk/internal/net/http/Exchange.respons..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (9,371 samples, 22.20%)</title><rect x="10.0" y="659.0" width="261.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/CompletableFut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (9,371 samples, 22.20%)</title><rect x="10.0" y="643.0" width="261.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurrent/CompletableFut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9,371 samples, 22.20%)</title><rect x="10.0" y="627.0" width="261.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/concurrent/CompletableFut..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$209/384755526.apply (9,371 samples, 22.20%)</title><rect x="10.0" y="611.0" width="261.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="622.0">jdk/internal/net/http/Exchange$$Lam..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (9,371 samples, 22.20%)</title><rect x="10.0" y="595.0" width="261.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="606.0">jdk/internal/net/http/Exchange.lamb..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (9,371 samples, 22.20%)</title><rect x="10.0" y="579.0" width="261.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="590.0">jdk/internal/net/http/Exchange.chec..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$149/2119912657.apply (9,371 samples, 22.20%)</title><rect x="10.0" y="563.0" width="261.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="574.0">jdk/internal/net/http/Exchange$$Lam..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (9,371 samples, 22.20%)</title><rect x="10.0" y="547.0" width="261.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="558.0">jdk/internal/net/http/Exchange.lamb..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (9,371 samples, 22.20%)</title><rect x="10.0" y="531.0" width="261.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="542.0">jdk/internal/net/http/Http1Exchange..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (9,371 samples, 22.20%)</title><rect x="10.0" y="515.0" width="261.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent/CompletableFut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (9,371 samples, 22.20%)</title><rect x="10.0" y="499.0" width="261.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/CompletableFut..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$232/1335640103.apply (9,371 samples, 22.20%)</title><rect x="10.0" y="483.0" width="261.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="494.0">jdk/internal/net/http/Http1Exchange..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (9,371 samples, 22.20%)</title><rect x="10.0" y="467.0" width="261.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/net/http/Http1Exchange..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (9,371 samples, 22.20%)</title><rect x="10.0" y="451.0" width="261.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/internal/net/http/Http1Exchange..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (9,371 samples, 22.20%)</title><rect x="10.0" y="435.0" width="261.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="446.0">jdk/internal/net/http/SocketTube.co..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (2,101 samples, 4.98%)</title><rect x="10.0" y="419.0" width="58.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="430.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2,101 samples, 4.98%)</title><rect x="10.0" y="403.0" width="58.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="414.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2,101 samples, 4.98%)</title><rect x="10.0" y="387.0" width="58.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="398.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2,101 samples, 4.98%)</title><rect x="10.0" y="371.0" width="58.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="382.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2,101 samples, 4.98%)</title><rect x="10.0" y="355.0" width="58.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="366.0">jdk/in..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,594 samples, 3.78%)</title><rect x="10.0" y="339.0" width="44.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="13.0" y="350.0">jdk...</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (507 samples, 1.20%)</title><rect x="54.5" y="339.0" width="14.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.5" y="350.0"></text>
</g>
<g>
<title>java.lang.Object (507 samples, 1.20%)</title><rect x="54.5" y="323.0" width="14.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="57.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (7,270 samples, 17.22%)</title><rect x="68.7" y="419.0" width="203.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.7" y="430.0">jdk/internal/net/http/Socke..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (7,270 samples, 17.22%)</title><rect x="68.7" y="403.0" width="203.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="71.7" y="414.0">jdk/internal/net/http/Socke..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (7,270 samples, 17.22%)</title><rect x="68.7" y="387.0" width="203.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="71.7" y="398.0">jdk/internal/net/http/Socke..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (7,270 samples, 17.22%)</title><rect x="68.7" y="371.0" width="203.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.7" y="382.0">jdk/internal/net/http/HttpC..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (7,270 samples, 17.22%)</title><rect x="68.7" y="355.0" width="203.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.7" y="366.0">jdk/internal/net/http/HttpC..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (6,353 samples, 15.05%)</title><rect x="68.7" y="339.0" width="177.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="71.7" y="350.0">jdk.internal.net.http.H..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (917 samples, 2.17%)</title><rect x="246.3" y="339.0" width="25.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="249.3" y="350.0">s..</text>
</g>
<g>
<title>java.lang.Object (917 samples, 2.17%)</title><rect x="246.3" y="323.0" width="25.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="249.3" y="334.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (842 samples, 1.99%)</title><rect x="271.9" y="659.0" width="23.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.9" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (842 samples, 1.99%)</title><rect x="271.9" y="643.0" width="23.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="274.9" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (828 samples, 1.96%)</title><rect x="271.9" y="627.0" width="23.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.9" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (828 samples, 1.96%)</title><rect x="271.9" y="611.0" width="23.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.9" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (828 samples, 1.96%)</title><rect x="271.9" y="595.0" width="23.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="274.9" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$154/1584594711.apply (828 samples, 1.96%)</title><rect x="271.9" y="579.0" width="23.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.9" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (828 samples, 1.96%)</title><rect x="271.9" y="563.0" width="23.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.9" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (828 samples, 1.96%)</title><rect x="271.9" y="547.0" width="23.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.9" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (828 samples, 1.96%)</title><rect x="271.9" y="531.0" width="23.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="274.9" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (828 samples, 1.96%)</title><rect x="271.9" y="515.0" width="23.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="274.9" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (827 samples, 1.96%)</title><rect x="271.9" y="499.0" width="23.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="274.9" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (827 samples, 1.96%)</title><rect x="271.9" y="483.0" width="23.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.9" y="494.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (827 samples, 1.96%)</title><rect x="271.9" y="467.0" width="23.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="274.9" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (14 samples, 0.03%)</title><rect x="295.0" y="627.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="298.0" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http2ClientImpl (14 samples, 0.03%)</title><rect x="295.0" y="611.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="298.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (52 samples, 0.12%)</title><rect x="295.4" y="707.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="298.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (52 samples, 0.12%)</title><rect x="295.4" y="691.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (12 samples, 0.03%)</title><rect x="295.4" y="675.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.4" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter$Cache (12 samples, 0.03%)</title><rect x="295.4" y="659.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="298.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (40 samples, 0.09%)</title><rect x="295.8" y="675.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="298.8" y="686.0"></text>
</g>
<g>
<title>java.lang.Class (40 samples, 0.09%)</title><rect x="295.8" y="659.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="298.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,943 samples, 6.97%)</title><rect x="296.9" y="803.0" width="82.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="299.9" y="814.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2,940 samples, 6.96%)</title><rect x="296.9" y="787.0" width="82.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="299.9" y="798.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (393 samples, 0.93%)</title><rect x="296.9" y="771.0" width="11.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="299.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (393 samples, 0.93%)</title><rect x="296.9" y="755.0" width="11.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (393 samples, 0.93%)</title><rect x="296.9" y="739.0" width="11.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="299.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (393 samples, 0.93%)</title><rect x="296.9" y="723.0" width="11.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (393 samples, 0.93%)</title><rect x="296.9" y="707.0" width="11.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="299.9" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (393 samples, 0.93%)</title><rect x="296.9" y="691.0" width="11.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="299.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2,547 samples, 6.03%)</title><rect x="307.9" y="771.0" width="71.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="310.9" y="782.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2,547 samples, 6.03%)</title><rect x="307.9" y="755.0" width="71.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="310.9" y="766.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2,547 samples, 6.03%)</title><rect x="307.9" y="739.0" width="71.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.9" y="750.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,547 samples, 6.03%)</title><rect x="307.9" y="723.0" width="71.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="310.9" y="734.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,547 samples, 6.03%)</title><rect x="307.9" y="707.0" width="71.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="310.9" y="718.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,547 samples, 6.03%)</title><rect x="307.9" y="691.0" width="71.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="310.9" y="702.0">jdk/inte..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,547 samples, 6.03%)</title><rect x="307.9" y="675.0" width="71.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="310.9" y="686.0">java.uti..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$247/1271722553.run (48 samples, 0.11%)</title><rect x="379.1" y="803.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (48 samples, 0.11%)</title><rect x="379.1" y="787.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="382.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (48 samples, 0.11%)</title><rect x="379.1" y="771.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="382.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (48 samples, 0.11%)</title><rect x="379.1" y="755.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="382.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (48 samples, 0.11%)</title><rect x="379.1" y="739.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (48 samples, 0.11%)</title><rect x="379.1" y="723.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="382.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (48 samples, 0.11%)</title><rect x="379.1" y="707.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="382.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (48 samples, 0.11%)</title><rect x="379.1" y="691.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="382.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (48 samples, 0.11%)</title><rect x="379.1" y="675.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="382.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (48 samples, 0.11%)</title><rect x="379.1" y="659.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (48 samples, 0.11%)</title><rect x="379.1" y="643.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (48 samples, 0.11%)</title><rect x="379.1" y="627.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (48 samples, 0.11%)</title><rect x="379.1" y="611.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (48 samples, 0.11%)</title><rect x="379.1" y="595.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (48 samples, 0.11%)</title><rect x="379.1" y="579.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (48 samples, 0.11%)</title><rect x="379.1" y="563.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="382.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (48 samples, 0.11%)</title><rect x="379.1" y="547.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$132/1112562714.apply (48 samples, 0.11%)</title><rect x="379.1" y="531.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (48 samples, 0.11%)</title><rect x="379.1" y="515.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (48 samples, 0.11%)</title><rect x="379.1" y="499.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (48 samples, 0.11%)</title><rect x="379.1" y="483.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (48 samples, 0.11%)</title><rect x="379.1" y="467.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="382.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (48 samples, 0.11%)</title><rect x="379.1" y="451.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="382.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1452226218.run (48 samples, 0.11%)</title><rect x="379.1" y="435.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="382.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (48 samples, 0.11%)</title><rect x="379.1" y="419.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (48 samples, 0.11%)</title><rect x="379.1" y="403.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (48 samples, 0.11%)</title><rect x="379.1" y="387.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (48 samples, 0.11%)</title><rect x="379.1" y="371.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (48 samples, 0.11%)</title><rect x="379.1" y="355.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="382.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (48 samples, 0.11%)</title><rect x="379.1" y="339.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (48 samples, 0.11%)</title><rect x="379.1" y="323.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (48 samples, 0.11%)</title><rect x="379.1" y="307.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (48 samples, 0.11%)</title><rect x="379.1" y="291.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (48 samples, 0.11%)</title><rect x="379.1" y="275.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="382.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (48 samples, 0.11%)</title><rect x="379.1" y="259.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="382.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (48 samples, 0.11%)</title><rect x="379.1" y="243.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1089333161.run (48 samples, 0.11%)</title><rect x="379.1" y="227.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="382.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (48 samples, 0.11%)</title><rect x="379.1" y="211.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (48 samples, 0.11%)</title><rect x="379.1" y="195.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (48 samples, 0.11%)</title><rect x="379.1" y="179.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (48 samples, 0.11%)</title><rect x="379.1" y="163.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="382.1" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (13 samples, 0.03%)</title><rect x="379.1" y="147.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="382.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (35 samples, 0.08%)</title><rect x="379.5" y="147.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="382.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (35 samples, 0.08%)</title><rect x="379.5" y="131.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="382.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (33 samples, 0.08%)</title><rect x="379.6" y="115.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (33 samples, 0.08%)</title><rect x="379.6" y="99.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="382.6" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (33 samples, 0.08%)</title><rect x="379.6" y="83.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.6" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (33 samples, 0.08%)</title><rect x="379.6" y="67.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="382.6" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (33 samples, 0.08%)</title><rect x="379.6" y="51.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="382.6" y="62.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (31 samples, 0.07%)</title><rect x="379.6" y="35.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="382.6" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (13,069 samples, 30.95%)</title><rect x="380.5" y="803.0" width="365.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="383.5" y="814.0">jdk/internal/net/http/common/SequentialScheduler$S..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (13,069 samples, 30.95%)</title><rect x="380.5" y="787.0" width="365.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="383.5" y="798.0">jdk/internal/net/http/common/SequentialScheduler$C..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5,259 samples, 12.46%)</title><rect x="380.5" y="771.0" width="147.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="383.5" y="782.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (5,259 samples, 12.46%)</title><rect x="380.5" y="755.0" width="147.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="383.5" y="766.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5,259 samples, 12.46%)</title><rect x="380.5" y="739.0" width="147.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.5" y="750.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (5,158 samples, 12.22%)</title><rect x="380.5" y="723.0" width="144.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="383.5" y="734.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (5,158 samples, 12.22%)</title><rect x="380.5" y="707.0" width="144.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="383.5" y="718.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (5,158 samples, 12.22%)</title><rect x="380.5" y="691.0" width="144.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="383.5" y="702.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (5,158 samples, 12.22%)</title><rect x="380.5" y="675.0" width="144.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="383.5" y="686.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (5,158 samples, 12.22%)</title><rect x="380.5" y="659.0" width="144.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="383.5" y="670.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (5,158 samples, 12.22%)</title><rect x="380.5" y="643.0" width="144.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="383.5" y="654.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5,158 samples, 12.22%)</title><rect x="380.5" y="627.0" width="144.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="383.5" y="638.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (5,158 samples, 12.22%)</title><rect x="380.5" y="611.0" width="144.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="383.5" y="622.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5,158 samples, 12.22%)</title><rect x="380.5" y="595.0" width="144.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="383.5" y="606.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (4,509 samples, 10.68%)</title><rect x="380.5" y="579.0" width="126.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="383.5" y="590.0">jdk.internal.net..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (649 samples, 1.54%)</title><rect x="506.5" y="579.0" width="18.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="509.5" y="590.0"></text>
</g>
<g>
<title>java.lang.Object (649 samples, 1.54%)</title><rect x="506.5" y="563.0" width="18.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="509.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (101 samples, 0.24%)</title><rect x="524.6" y="723.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="527.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (101 samples, 0.24%)</title><rect x="524.6" y="707.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (101 samples, 0.24%)</title><rect x="524.6" y="691.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="527.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (101 samples, 0.24%)</title><rect x="524.6" y="675.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="527.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (101 samples, 0.24%)</title><rect x="524.6" y="659.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="527.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (101 samples, 0.24%)</title><rect x="524.6" y="643.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="527.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (101 samples, 0.24%)</title><rect x="524.6" y="627.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="527.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (101 samples, 0.24%)</title><rect x="524.6" y="611.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="527.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (101 samples, 0.24%)</title><rect x="524.6" y="595.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="527.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (101 samples, 0.24%)</title><rect x="524.6" y="579.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="527.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (101 samples, 0.24%)</title><rect x="524.6" y="563.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="527.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (101 samples, 0.24%)</title><rect x="524.6" y="547.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="527.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (101 samples, 0.24%)</title><rect x="524.6" y="531.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="527.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (101 samples, 0.24%)</title><rect x="524.6" y="515.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="527.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/388216554.apply (101 samples, 0.24%)</title><rect x="524.6" y="499.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="527.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (101 samples, 0.24%)</title><rect x="524.6" y="483.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="527.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (101 samples, 0.24%)</title><rect x="524.6" y="467.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="527.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (101 samples, 0.24%)</title><rect x="524.6" y="451.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="527.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (101 samples, 0.24%)</title><rect x="524.6" y="435.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="527.6" y="446.0"></text>
</g>
<g>
<title>java.lang.Class (101 samples, 0.24%)</title><rect x="524.6" y="419.0" width="2.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="527.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (7,810 samples, 18.50%)</title><rect x="527.5" y="771.0" width="218.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="530.5" y="782.0">jdk/internal/net/http/common/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (7,810 samples, 18.50%)</title><rect x="527.5" y="755.0" width="218.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="530.5" y="766.0">jdk/internal/net/http/common/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (7,810 samples, 18.50%)</title><rect x="527.5" y="739.0" width="218.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="530.5" y="750.0">jdk/internal/net/http/common/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$199/1509846524.run (7,810 samples, 18.50%)</title><rect x="527.5" y="723.0" width="218.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.5" y="734.0">jdk/internal/net/http/Http1As..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (7,810 samples, 18.50%)</title><rect x="527.5" y="707.0" width="218.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="530.5" y="718.0">jdk/internal/net/http/Http1As..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (7,808 samples, 18.49%)</title><rect x="527.5" y="691.0" width="218.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="530.5" y="702.0">jdk/internal/net/http/Http1As..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (7,808 samples, 18.49%)</title><rect x="527.5" y="675.0" width="218.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="530.5" y="686.0">jdk/internal/net/http/Http1Re..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (7,808 samples, 18.49%)</title><rect x="527.5" y="659.0" width="218.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.5" y="670.0">jdk/internal/net/http/Respons..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1089333161.run (7,808 samples, 18.49%)</title><rect x="527.5" y="643.0" width="218.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="530.5" y="654.0">jdk/internal/net/http/Http1Re..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (7,808 samples, 18.49%)</title><rect x="527.5" y="627.0" width="218.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.5" y="638.0">jdk/internal/net/http/Http1Re..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (7,808 samples, 18.49%)</title><rect x="527.5" y="611.0" width="218.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.5" y="622.0">jdk/internal/net/http/HttpCon..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (7,808 samples, 18.49%)</title><rect x="527.5" y="595.0" width="218.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="530.5" y="606.0">jdk/internal/net/http/Connect..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (7,808 samples, 18.49%)</title><rect x="527.5" y="579.0" width="218.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="530.5" y="590.0">jdk/internal/net/http/Connect..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (2,364 samples, 5.60%)</title><rect x="527.5" y="563.0" width="66.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="530.5" y="574.0">jdk.int..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (5,444 samples, 12.89%)</title><rect x="593.5" y="563.0" width="152.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="596.5" y="574.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (5,444 samples, 12.89%)</title><rect x="593.5" y="547.0" width="152.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.5" y="558.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1,209 samples, 2.86%)</title><rect x="593.5" y="531.0" width="33.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="596.5" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1,209 samples, 2.86%)</title><rect x="593.5" y="515.0" width="33.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="596.5" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1,209 samples, 2.86%)</title><rect x="593.5" y="499.0" width="33.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="596.5" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1,209 samples, 2.86%)</title><rect x="593.5" y="483.0" width="33.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.5" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,209 samples, 2.86%)</title><rect x="593.5" y="467.0" width="33.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.5" y="478.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (804 samples, 1.90%)</title><rect x="593.5" y="451.0" width="22.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="596.5" y="462.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (405 samples, 0.96%)</title><rect x="616.0" y="451.0" width="11.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="619.0" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (405 samples, 0.96%)</title><rect x="616.0" y="435.0" width="11.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="619.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (4,235 samples, 10.03%)</title><rect x="627.3" y="531.0" width="118.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="630.3" y="542.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (4,235 samples, 10.03%)</title><rect x="627.3" y="515.0" width="118.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.3" y="526.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (4,235 samples, 10.03%)</title><rect x="627.3" y="499.0" width="118.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="630.3" y="510.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4,235 samples, 10.03%)</title><rect x="627.3" y="483.0" width="118.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="630.3" y="494.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4,235 samples, 10.03%)</title><rect x="627.3" y="467.0" width="118.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="630.3" y="478.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (3,698 samples, 8.76%)</title><rect x="627.3" y="451.0" width="103.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="630.3" y="462.0">jdk.internal..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (537 samples, 1.27%)</title><rect x="730.7" y="451.0" width="15.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.7" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (537 samples, 1.27%)</title><rect x="730.7" y="435.0" width="15.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="733.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$107/2098846329.run (1,707 samples, 4.04%)</title><rect x="745.7" y="803.0" width="47.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="748.7" y="814.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$328/1195073115.run (1,707 samples, 4.04%)</title><rect x="745.7" y="787.0" width="47.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="748.7" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (1,707 samples, 4.04%)</title><rect x="745.7" y="771.0" width="47.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="748.7" y="782.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.delete (1,707 samples, 4.04%)</title><rect x="745.7" y="755.0" width="47.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="748.7" y="766.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (1,478 samples, 3.50%)</title><rect x="745.7" y="739.0" width="41.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="748.7" y="750.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (1,478 samples, 3.50%)</title><rect x="745.7" y="723.0" width="41.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.7" y="734.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (1,478 samples, 3.50%)</title><rect x="745.7" y="707.0" width="41.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.7" y="718.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,478 samples, 3.50%)</title><rect x="745.7" y="691.0" width="41.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="748.7" y="702.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,478 samples, 3.50%)</title><rect x="745.7" y="675.0" width="41.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.7" y="686.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,478 samples, 3.50%)</title><rect x="745.7" y="659.0" width="41.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="748.7" y="670.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,478 samples, 3.50%)</title><rect x="745.7" y="643.0" width="41.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="748.7" y="654.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,478 samples, 3.50%)</title><rect x="745.7" y="627.0" width="41.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="748.7" y="638.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (1,478 samples, 3.50%)</title><rect x="745.7" y="611.0" width="41.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="748.7" y="622.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getResponsesFromReplicas (162 samples, 0.38%)</title><rect x="787.0" y="739.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="790.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (93 samples, 0.22%)</title><rect x="787.0" y="723.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="790.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (93 samples, 0.22%)</title><rect x="787.0" y="707.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="790.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (93 samples, 0.22%)</title><rect x="787.0" y="691.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="790.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (93 samples, 0.22%)</title><rect x="787.0" y="675.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="790.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (93 samples, 0.22%)</title><rect x="787.0" y="659.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="790.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (93 samples, 0.22%)</title><rect x="787.0" y="643.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="790.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (93 samples, 0.22%)</title><rect x="787.0" y="627.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="790.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (93 samples, 0.22%)</title><rect x="787.0" y="611.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="790.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (19 samples, 0.05%)</title><rect x="787.0" y="595.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="790.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (19 samples, 0.05%)</title><rect x="787.0" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="790.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (19 samples, 0.05%)</title><rect x="787.0" y="563.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="790.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (19 samples, 0.05%)</title><rect x="787.0" y="547.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="790.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (19 samples, 0.05%)</title><rect x="787.0" y="531.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (19 samples, 0.05%)</title><rect x="787.0" y="515.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="790.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (19 samples, 0.05%)</title><rect x="787.0" y="499.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="790.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (19 samples, 0.05%)</title><rect x="787.0" y="483.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="790.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (74 samples, 0.18%)</title><rect x="787.6" y="595.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (74 samples, 0.18%)</title><rect x="787.6" y="579.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="790.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (74 samples, 0.18%)</title><rect x="787.6" y="563.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="790.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (74 samples, 0.18%)</title><rect x="787.6" y="547.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (74 samples, 0.18%)</title><rect x="787.6" y="531.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="790.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (74 samples, 0.18%)</title><rect x="787.6" y="515.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="790.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (74 samples, 0.18%)</title><rect x="787.6" y="499.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="790.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getFirstResponses (69 samples, 0.16%)</title><rect x="789.6" y="723.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="792.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (69 samples, 0.16%)</title><rect x="789.6" y="707.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="792.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (69 samples, 0.16%)</title><rect x="789.6" y="691.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="792.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (69 samples, 0.16%)</title><rect x="789.6" y="675.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="792.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (69 samples, 0.16%)</title><rect x="789.6" y="659.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="792.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (69 samples, 0.16%)</title><rect x="789.6" y="643.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="792.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (69 samples, 0.16%)</title><rect x="789.6" y="627.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="792.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (69 samples, 0.16%)</title><rect x="789.6" y="611.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="792.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (69 samples, 0.16%)</title><rect x="789.6" y="595.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="792.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (69 samples, 0.16%)</title><rect x="789.6" y="579.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="792.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (69 samples, 0.16%)</title><rect x="789.6" y="563.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="792.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (69 samples, 0.16%)</title><rect x="789.6" y="547.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="792.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (69 samples, 0.16%)</title><rect x="789.6" y="531.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="792.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (69 samples, 0.16%)</title><rect x="789.6" y="515.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="792.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (69 samples, 0.16%)</title><rect x="789.6" y="499.0" width="2.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="792.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (67 samples, 0.16%)</title><rect x="791.6" y="739.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="794.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (67 samples, 0.16%)</title><rect x="791.6" y="723.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="794.6" y="734.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (67 samples, 0.16%)</title><rect x="791.6" y="707.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="794.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (40 samples, 0.09%)</title><rect x="793.4" y="851.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="796.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (40 samples, 0.09%)</title><rect x="793.4" y="835.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="796.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (40 samples, 0.09%)</title><rect x="793.4" y="819.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="796.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (40 samples, 0.09%)</title><rect x="793.4" y="803.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="796.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (40 samples, 0.09%)</title><rect x="793.4" y="787.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="796.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (40 samples, 0.09%)</title><rect x="793.4" y="771.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="796.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (40 samples, 0.09%)</title><rect x="793.4" y="755.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (38 samples, 0.09%)</title><rect x="793.4" y="739.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="796.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (38 samples, 0.09%)</title><rect x="793.4" y="723.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (38 samples, 0.09%)</title><rect x="793.4" y="707.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (38 samples, 0.09%)</title><rect x="793.4" y="691.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="796.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (38 samples, 0.09%)</title><rect x="793.4" y="675.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (38 samples, 0.09%)</title><rect x="793.4" y="659.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="796.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (38 samples, 0.09%)</title><rect x="793.4" y="643.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="796.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (38 samples, 0.09%)</title><rect x="793.4" y="627.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (38 samples, 0.09%)</title><rect x="793.4" y="611.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="796.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (38 samples, 0.09%)</title><rect x="793.4" y="595.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (38 samples, 0.09%)</title><rect x="793.4" y="579.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="796.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (38 samples, 0.09%)</title><rect x="793.4" y="563.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (38 samples, 0.09%)</title><rect x="793.4" y="547.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (38 samples, 0.09%)</title><rect x="793.4" y="531.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="796.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (38 samples, 0.09%)</title><rect x="793.4" y="515.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="796.4" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (38 samples, 0.09%)</title><rect x="793.4" y="499.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="796.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (14,076 samples, 33.34%)</title><rect x="794.6" y="851.0" width="393.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="797.6" y="862.0">jdk/internal/net/http/HttpClientImpl$SelectorManager.run</text>
</g>
<g>
<title>java/util/ArrayList.forEach (61 samples, 0.14%)</title><rect x="794.6" y="835.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="797.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/404115466.accept (61 samples, 0.14%)</title><rect x="794.6" y="819.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="797.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (61 samples, 0.14%)</title><rect x="794.6" y="803.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="797.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (61 samples, 0.14%)</title><rect x="794.6" y="787.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="797.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (61 samples, 0.14%)</title><rect x="794.6" y="771.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (61 samples, 0.14%)</title><rect x="794.6" y="755.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="797.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (61 samples, 0.14%)</title><rect x="794.6" y="739.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="797.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (61 samples, 0.14%)</title><rect x="794.6" y="723.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="797.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (61 samples, 0.14%)</title><rect x="794.6" y="707.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="797.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (61 samples, 0.14%)</title><rect x="794.6" y="691.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="797.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (61 samples, 0.14%)</title><rect x="794.6" y="675.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="797.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/1894615385.run (61 samples, 0.14%)</title><rect x="794.6" y="659.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="797.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (61 samples, 0.14%)</title><rect x="794.6" y="643.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="797.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (59 samples, 0.14%)</title><rect x="794.6" y="627.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="797.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (59 samples, 0.14%)</title><rect x="794.6" y="611.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="797.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (59 samples, 0.14%)</title><rect x="794.6" y="595.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="797.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (59 samples, 0.14%)</title><rect x="794.6" y="579.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (59 samples, 0.14%)</title><rect x="794.6" y="563.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="797.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (59 samples, 0.14%)</title><rect x="794.6" y="547.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="797.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (59 samples, 0.14%)</title><rect x="794.6" y="531.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (59 samples, 0.14%)</title><rect x="794.6" y="515.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="797.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (57 samples, 0.14%)</title><rect x="794.6" y="499.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="797.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (57 samples, 0.14%)</title><rect x="794.6" y="483.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="797.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (57 samples, 0.14%)</title><rect x="794.6" y="467.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="797.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (57 samples, 0.14%)</title><rect x="794.6" y="451.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="797.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (57 samples, 0.14%)</title><rect x="794.6" y="435.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="797.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (57 samples, 0.14%)</title><rect x="794.6" y="419.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="797.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (57 samples, 0.14%)</title><rect x="794.6" y="403.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="797.6" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (57 samples, 0.14%)</title><rect x="794.6" y="387.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="797.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (12,554 samples, 29.73%)</title><rect x="796.3" y="835.0" width="350.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="799.3" y="846.0">jdk.internal.net.http.HttpClientImpl$SelectorMan..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (225 samples, 0.53%)</title><rect x="1147.1" y="835.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1150.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$188/903113097.run (70 samples, 0.17%)</title><rect x="1147.1" y="819.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1150.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (70 samples, 0.17%)</title><rect x="1147.1" y="803.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1150.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (70 samples, 0.17%)</title><rect x="1147.1" y="787.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1150.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (70 samples, 0.17%)</title><rect x="1147.1" y="771.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1150.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (70 samples, 0.17%)</title><rect x="1147.1" y="755.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1150.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (70 samples, 0.17%)</title><rect x="1147.1" y="739.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1150.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/1894615385.run (70 samples, 0.17%)</title><rect x="1147.1" y="723.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1150.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (70 samples, 0.17%)</title><rect x="1147.1" y="707.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1150.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (70 samples, 0.17%)</title><rect x="1147.1" y="691.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1150.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (70 samples, 0.17%)</title><rect x="1147.1" y="675.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1150.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (70 samples, 0.17%)</title><rect x="1147.1" y="659.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1150.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (70 samples, 0.17%)</title><rect x="1147.1" y="643.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1150.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (70 samples, 0.17%)</title><rect x="1147.1" y="627.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1150.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (70 samples, 0.17%)</title><rect x="1147.1" y="611.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1150.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (70 samples, 0.17%)</title><rect x="1147.1" y="595.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1150.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (70 samples, 0.17%)</title><rect x="1147.1" y="579.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1150.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (59 samples, 0.14%)</title><rect x="1147.1" y="563.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1150.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (59 samples, 0.14%)</title><rect x="1147.1" y="547.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1150.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (59 samples, 0.14%)</title><rect x="1147.1" y="531.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1150.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (59 samples, 0.14%)</title><rect x="1147.1" y="515.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1150.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (59 samples, 0.14%)</title><rect x="1147.1" y="499.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1150.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (59 samples, 0.14%)</title><rect x="1147.1" y="483.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1150.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (59 samples, 0.14%)</title><rect x="1147.1" y="467.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1150.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (59 samples, 0.14%)</title><rect x="1147.1" y="451.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1150.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (11 samples, 0.03%)</title><rect x="1148.8" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1151.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (11 samples, 0.03%)</title><rect x="1148.8" y="547.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1151.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (11 samples, 0.03%)</title><rect x="1148.8" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1151.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (11 samples, 0.03%)</title><rect x="1148.8" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1151.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11 samples, 0.03%)</title><rect x="1148.8" y="499.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1151.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 0.03%)</title><rect x="1148.8" y="483.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1151.8" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (11 samples, 0.03%)</title><rect x="1148.8" y="467.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1151.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$192/1926392655.run (155 samples, 0.37%)</title><rect x="1149.1" y="819.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1152.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (155 samples, 0.37%)</title><rect x="1149.1" y="803.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1152.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (155 samples, 0.37%)</title><rect x="1149.1" y="787.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1152.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (155 samples, 0.37%)</title><rect x="1149.1" y="771.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1152.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (155 samples, 0.37%)</title><rect x="1149.1" y="755.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1152.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (133 samples, 0.32%)</title><rect x="1149.1" y="739.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1152.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (133 samples, 0.32%)</title><rect x="1149.1" y="723.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1152.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (133 samples, 0.32%)</title><rect x="1149.1" y="707.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1152.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (133 samples, 0.32%)</title><rect x="1149.1" y="691.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1152.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (133 samples, 0.32%)</title><rect x="1149.1" y="675.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1152.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (133 samples, 0.32%)</title><rect x="1149.1" y="659.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1152.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (133 samples, 0.32%)</title><rect x="1149.1" y="643.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1152.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (133 samples, 0.32%)</title><rect x="1149.1" y="627.0" width="3.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1152.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (22 samples, 0.05%)</title><rect x="1152.8" y="739.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1155.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (22 samples, 0.05%)</title><rect x="1152.8" y="723.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1155.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (22 samples, 0.05%)</title><rect x="1152.8" y="707.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1155.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (22 samples, 0.05%)</title><rect x="1152.8" y="691.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1155.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (22 samples, 0.05%)</title><rect x="1152.8" y="675.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1155.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (22 samples, 0.05%)</title><rect x="1152.8" y="659.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1155.8" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (22 samples, 0.05%)</title><rect x="1152.8" y="643.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1155.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (846 samples, 2.00%)</title><rect x="1153.4" y="835.0" width="23.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1156.4" y="846.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (846 samples, 2.00%)</title><rect x="1153.4" y="819.0" width="23.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1156.4" y="830.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (846 samples, 2.00%)</title><rect x="1153.4" y="803.0" width="23.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1156.4" y="814.0">j..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (379 samples, 0.90%)</title><rect x="1177.1" y="835.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1180.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (379 samples, 0.90%)</title><rect x="1177.1" y="819.0" width="10.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1180.1" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (379 samples, 0.90%)</title><rect x="1177.1" y="803.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1180.1" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (379 samples, 0.90%)</title><rect x="1177.1" y="787.0" width="10.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1180.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (379 samples, 0.90%)</title><rect x="1177.1" y="771.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1180.1" y="782.0"></text>
</g>
<g>
<title>java.lang.Object (379 samples, 0.90%)</title><rect x="1177.1" y="755.0" width="10.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1180.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (11 samples, 0.03%)</title><rect x="1187.7" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1190.7" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (11 samples, 0.03%)</title><rect x="1187.7" y="819.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1190.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (11 samples, 0.03%)</title><rect x="1187.7" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1190.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (11 samples, 0.03%)</title><rect x="1187.7" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1190.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (11 samples, 0.03%)</title><rect x="1187.7" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1190.7" y="782.0"></text>
</g>
<g>
<title>java.lang.Object (11 samples, 0.03%)</title><rect x="1187.7" y="755.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1190.7" y="766.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (73 samples, 0.17%)</title><rect x="1188.0" y="851.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1191.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (73 samples, 0.17%)</title><rect x="1188.0" y="835.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1191.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (73 samples, 0.17%)</title><rect x="1188.0" y="819.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1191.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (73 samples, 0.17%)</title><rect x="1188.0" y="803.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1191.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (73 samples, 0.17%)</title><rect x="1188.0" y="787.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1191.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (73 samples, 0.17%)</title><rect x="1188.0" y="771.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1191.0" y="782.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (73 samples, 0.17%)</title><rect x="1188.0" y="755.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1191.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (73 samples, 0.17%)</title><rect x="1188.0" y="739.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1191.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (73 samples, 0.17%)</title><rect x="1188.0" y="723.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1191.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (73 samples, 0.17%)</title><rect x="1188.0" y="707.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1191.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (73 samples, 0.17%)</title><rect x="1188.0" y="691.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1191.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (72 samples, 0.17%)</title><rect x="1188.0" y="675.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1191.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (72 samples, 0.17%)</title><rect x="1188.0" y="659.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1191.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (72 samples, 0.17%)</title><rect x="1188.0" y="643.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1191.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (72 samples, 0.17%)</title><rect x="1188.0" y="627.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (72 samples, 0.17%)</title><rect x="1188.0" y="611.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (72 samples, 0.17%)</title><rect x="1188.0" y="595.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1191.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (72 samples, 0.17%)</title><rect x="1188.0" y="579.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1191.0" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (72 samples, 0.17%)</title><rect x="1188.0" y="563.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1191.0" y="574.0"></text>
</g>
</g>
</svg>
