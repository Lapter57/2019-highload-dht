<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="901"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="901"> </text>
<g id="frames">
<g>
<title>all (48,659 samples, 100.00%)</title><rect x="10.0" y="867.0" width="1180.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.0" y="878.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (30,544 samples, 62.77%)</title><rect x="10.0" y="851.0" width="740.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="862.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (30,544 samples, 62.77%)</title><rect x="10.0" y="835.0" width="740.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="846.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (30,544 samples, 62.77%)</title><rect x="10.0" y="819.0" width="740.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="830.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (12,593 samples, 25.88%)</title><rect x="10.0" y="803.0" width="305.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/util/concurrent/CompletableFuture$As..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12,593 samples, 25.88%)</title><rect x="10.0" y="787.0" width="305.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/CompletableFuture.po..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (12,593 samples, 25.88%)</title><rect x="10.0" y="771.0" width="305.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/CompletableFuture$Un..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/1711595431.apply (12,593 samples, 25.88%)</title><rect x="10.0" y="755.0" width="305.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="766.0">jdk/internal/net/http/MultiExchange$$Lamb..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (12,593 samples, 25.88%)</title><rect x="10.0" y="739.0" width="305.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="750.0">jdk/internal/net/http/MultiExchange.lambd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (12,593 samples, 25.88%)</title><rect x="10.0" y="723.0" width="305.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="734.0">jdk/internal/net/http/MultiExchange.respo..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (12,573 samples, 25.84%)</title><rect x="10.0" y="707.0" width="304.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="718.0">jdk/internal/net/http/Exchange.responseAs..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (12,573 samples, 25.84%)</title><rect x="10.0" y="691.0" width="304.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="702.0">jdk/internal/net/http/Exchange.responseAs..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (12,573 samples, 25.84%)</title><rect x="10.0" y="675.0" width="304.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="686.0">jdk/internal/net/http/Exchange.responseAs..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,973 samples, 6.11%)</title><rect x="10.0" y="659.0" width="72.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,973 samples, 6.11%)</title><rect x="10.0" y="643.0" width="72.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,973 samples, 6.11%)</title><rect x="10.0" y="627.0" width="72.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$174/1093022843.apply (2,973 samples, 6.11%)</title><rect x="10.0" y="611.0" width="72.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="622.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (2,973 samples, 6.11%)</title><rect x="10.0" y="595.0" width="72.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="606.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2,973 samples, 6.11%)</title><rect x="10.0" y="579.0" width="72.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="590.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/1035318298.apply (2,973 samples, 6.11%)</title><rect x="10.0" y="563.0" width="72.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="574.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2,973 samples, 6.11%)</title><rect x="10.0" y="547.0" width="72.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (2,973 samples, 6.11%)</title><rect x="10.0" y="531.0" width="72.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="542.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,973 samples, 6.11%)</title><rect x="10.0" y="515.0" width="72.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,973 samples, 6.11%)</title><rect x="10.0" y="499.0" width="72.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$189/1784125001.apply (2,973 samples, 6.11%)</title><rect x="10.0" y="483.0" width="72.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="494.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (2,973 samples, 6.11%)</title><rect x="10.0" y="467.0" width="72.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (2,973 samples, 6.11%)</title><rect x="10.0" y="451.0" width="72.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2,973 samples, 6.11%)</title><rect x="10.0" y="435.0" width="72.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="446.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (847 samples, 1.74%)</title><rect x="10.0" y="419.0" width="20.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (847 samples, 1.74%)</title><rect x="10.0" y="403.0" width="20.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (847 samples, 1.74%)</title><rect x="10.0" y="387.0" width="20.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (847 samples, 1.74%)</title><rect x="10.0" y="371.0" width="20.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (847 samples, 1.74%)</title><rect x="10.0" y="355.0" width="20.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (463 samples, 0.95%)</title><rect x="10.0" y="339.0" width="11.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (384 samples, 0.79%)</title><rect x="21.2" y="339.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.2" y="350.0"></text>
</g>
<g>
<title>java.lang.Object (384 samples, 0.79%)</title><rect x="21.2" y="323.0" width="9.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="24.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2,126 samples, 4.37%)</title><rect x="30.5" y="419.0" width="51.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.5" y="430.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2,126 samples, 4.37%)</title><rect x="30.5" y="403.0" width="51.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="33.5" y="414.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (2,126 samples, 4.37%)</title><rect x="30.5" y="387.0" width="51.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="33.5" y="398.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2,126 samples, 4.37%)</title><rect x="30.5" y="371.0" width="51.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="33.5" y="382.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2,126 samples, 4.37%)</title><rect x="30.5" y="355.0" width="51.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.5" y="366.0">jdk/i..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,561 samples, 3.21%)</title><rect x="30.5" y="339.0" width="37.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="33.5" y="350.0">jdk..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (565 samples, 1.16%)</title><rect x="68.4" y="339.0" width="13.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.4" y="350.0"></text>
</g>
<g>
<title>java.lang.Object (565 samples, 1.16%)</title><rect x="68.4" y="323.0" width="13.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="71.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (9,600 samples, 19.73%)</title><rect x="82.1" y="659.0" width="232.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.1" y="670.0">jdk/internal/net/http/Exchange...</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (9,600 samples, 19.73%)</title><rect x="82.1" y="643.0" width="232.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.1" y="654.0">jdk/internal/net/http/ExchangeI..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (9,586 samples, 19.70%)</title><rect x="82.1" y="627.0" width="232.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.1" y="638.0">java/util/concurrent/Completabl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (9,586 samples, 19.70%)</title><rect x="82.1" y="611.0" width="232.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.1" y="622.0">java/util/concurrent/Completabl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9,586 samples, 19.70%)</title><rect x="82.1" y="595.0" width="232.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.1" y="606.0">java/util/concurrent/Completabl..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$144/821458659.apply (9,586 samples, 19.70%)</title><rect x="82.1" y="579.0" width="232.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.1" y="590.0">jdk/internal/net/http/ExchangeI..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (9,586 samples, 19.70%)</title><rect x="82.1" y="563.0" width="232.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="85.1" y="574.0">jdk/internal/net/http/ExchangeI..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (9,586 samples, 19.70%)</title><rect x="82.1" y="547.0" width="232.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.1" y="558.0">jdk/internal/net/http/ExchangeI..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (9,586 samples, 19.70%)</title><rect x="82.1" y="531.0" width="232.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.1" y="542.0">jdk/internal/net/http/ExchangeI..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (9,586 samples, 19.70%)</title><rect x="82.1" y="515.0" width="232.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="85.1" y="526.0">jdk/internal/net/http/Http1Exch..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (9,582 samples, 19.69%)</title><rect x="82.1" y="499.0" width="232.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.1" y="510.0">jdk/internal/net/http/HttpConne..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (9,582 samples, 19.69%)</title><rect x="82.1" y="483.0" width="232.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="85.1" y="494.0">jdk/internal/net/http/Connectio..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (9,582 samples, 19.69%)</title><rect x="82.1" y="467.0" width="232.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="85.1" y="478.0">jdk.internal.net.http.Connectio..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (14 samples, 0.03%)</title><rect x="314.6" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.6" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http2ClientImpl (14 samples, 0.03%)</title><rect x="314.6" y="611.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="317.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (20 samples, 0.04%)</title><rect x="314.9" y="707.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="317.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (20 samples, 0.04%)</title><rect x="314.9" y="691.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="317.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (20 samples, 0.04%)</title><rect x="314.9" y="675.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.9" y="686.0"></text>
</g>
<g>
<title>java.lang.Class (20 samples, 0.04%)</title><rect x="314.9" y="659.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="317.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,919 samples, 3.94%)</title><rect x="315.4" y="803.0" width="46.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.4" y="814.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,916 samples, 3.94%)</title><rect x="315.4" y="787.0" width="46.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="318.4" y="798.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (331 samples, 0.68%)</title><rect x="315.4" y="771.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="318.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (331 samples, 0.68%)</title><rect x="315.4" y="755.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="318.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (331 samples, 0.68%)</title><rect x="315.4" y="739.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (331 samples, 0.68%)</title><rect x="315.4" y="723.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="318.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (331 samples, 0.68%)</title><rect x="315.4" y="707.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="318.4" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (331 samples, 0.68%)</title><rect x="315.4" y="691.0" width="8.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="318.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,585 samples, 3.26%)</title><rect x="323.4" y="771.0" width="38.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.4" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,585 samples, 3.26%)</title><rect x="323.4" y="755.0" width="38.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="326.4" y="766.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,585 samples, 3.26%)</title><rect x="323.4" y="739.0" width="38.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="326.4" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,585 samples, 3.26%)</title><rect x="323.4" y="723.0" width="38.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="326.4" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,585 samples, 3.26%)</title><rect x="323.4" y="707.0" width="38.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="326.4" y="718.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,585 samples, 3.26%)</title><rect x="323.4" y="691.0" width="38.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="326.4" y="702.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,585 samples, 3.26%)</title><rect x="323.4" y="675.0" width="38.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="326.4" y="686.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$205/1532762392.run (51 samples, 0.10%)</title><rect x="361.9" y="803.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="364.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (51 samples, 0.10%)</title><rect x="361.9" y="787.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="364.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (51 samples, 0.10%)</title><rect x="361.9" y="771.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="364.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (51 samples, 0.10%)</title><rect x="361.9" y="755.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="364.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (51 samples, 0.10%)</title><rect x="361.9" y="739.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="364.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (51 samples, 0.10%)</title><rect x="361.9" y="723.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="364.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (51 samples, 0.10%)</title><rect x="361.9" y="707.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="364.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (51 samples, 0.10%)</title><rect x="361.9" y="691.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="364.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (51 samples, 0.10%)</title><rect x="361.9" y="675.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="364.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (51 samples, 0.10%)</title><rect x="361.9" y="659.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="364.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (51 samples, 0.10%)</title><rect x="361.9" y="643.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="364.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (51 samples, 0.10%)</title><rect x="361.9" y="627.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="364.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (51 samples, 0.10%)</title><rect x="361.9" y="611.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="364.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (51 samples, 0.10%)</title><rect x="361.9" y="595.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="364.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (51 samples, 0.10%)</title><rect x="361.9" y="579.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="364.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (51 samples, 0.10%)</title><rect x="361.9" y="563.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="364.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (51 samples, 0.10%)</title><rect x="361.9" y="547.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="364.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$134/2113557447.apply (51 samples, 0.10%)</title><rect x="361.9" y="531.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="364.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (51 samples, 0.10%)</title><rect x="361.9" y="515.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="364.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (51 samples, 0.10%)</title><rect x="361.9" y="499.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="364.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (51 samples, 0.10%)</title><rect x="361.9" y="483.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="364.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (51 samples, 0.10%)</title><rect x="361.9" y="467.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="364.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (51 samples, 0.10%)</title><rect x="361.9" y="451.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="364.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$232/853075107.run (51 samples, 0.10%)</title><rect x="361.9" y="435.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="364.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (51 samples, 0.10%)</title><rect x="361.9" y="419.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="364.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (51 samples, 0.10%)</title><rect x="361.9" y="403.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="364.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (51 samples, 0.10%)</title><rect x="361.9" y="387.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="364.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (51 samples, 0.10%)</title><rect x="361.9" y="371.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="364.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (51 samples, 0.10%)</title><rect x="361.9" y="355.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="364.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (51 samples, 0.10%)</title><rect x="361.9" y="339.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="364.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (51 samples, 0.10%)</title><rect x="361.9" y="323.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="364.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (51 samples, 0.10%)</title><rect x="361.9" y="307.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="364.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (51 samples, 0.10%)</title><rect x="361.9" y="291.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="364.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (51 samples, 0.10%)</title><rect x="361.9" y="275.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="364.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (51 samples, 0.10%)</title><rect x="361.9" y="259.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="364.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (51 samples, 0.10%)</title><rect x="361.9" y="243.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="364.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$233/1245151766.run (51 samples, 0.10%)</title><rect x="361.9" y="227.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="364.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (51 samples, 0.10%)</title><rect x="361.9" y="211.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="364.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (51 samples, 0.10%)</title><rect x="361.9" y="195.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="364.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (51 samples, 0.10%)</title><rect x="361.9" y="179.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="364.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (51 samples, 0.10%)</title><rect x="361.9" y="163.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="364.9" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (27 samples, 0.06%)</title><rect x="361.9" y="147.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="364.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (24 samples, 0.05%)</title><rect x="362.6" y="147.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="365.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (24 samples, 0.05%)</title><rect x="362.6" y="131.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (17 samples, 0.03%)</title><rect x="362.7" y="115.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="365.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (17 samples, 0.03%)</title><rect x="362.7" y="99.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="365.7" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (17 samples, 0.03%)</title><rect x="362.7" y="83.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.7" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (17 samples, 0.03%)</title><rect x="362.7" y="67.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="365.7" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (17 samples, 0.03%)</title><rect x="362.7" y="51.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="365.7" y="62.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (16 samples, 0.03%)</title><rect x="362.7" y="35.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="365.7" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (15,981 samples, 32.84%)</title><rect x="363.2" y="803.0" width="387.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="366.2" y="814.0">jdk/internal/net/http/common/SequentialScheduler$Sche..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (15,981 samples, 32.84%)</title><rect x="363.2" y="787.0" width="387.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="366.2" y="798.0">jdk/internal/net/http/common/SequentialScheduler$Comp..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,303 samples, 4.73%)</title><rect x="363.2" y="771.0" width="55.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.2" y="782.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (2,303 samples, 4.73%)</title><rect x="363.2" y="755.0" width="55.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="366.2" y="766.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,303 samples, 4.73%)</title><rect x="363.2" y="739.0" width="55.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.2" y="750.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (2,271 samples, 4.67%)</title><rect x="363.2" y="723.0" width="55.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.2" y="734.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (2,271 samples, 4.67%)</title><rect x="363.2" y="707.0" width="55.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="366.2" y="718.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2,271 samples, 4.67%)</title><rect x="363.2" y="691.0" width="55.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="366.2" y="702.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2,271 samples, 4.67%)</title><rect x="363.2" y="675.0" width="55.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="366.2" y="686.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2,271 samples, 4.67%)</title><rect x="363.2" y="659.0" width="55.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="366.2" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2,271 samples, 4.67%)</title><rect x="363.2" y="643.0" width="55.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="366.2" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2,271 samples, 4.67%)</title><rect x="363.2" y="627.0" width="55.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="366.2" y="638.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2,271 samples, 4.67%)</title><rect x="363.2" y="611.0" width="55.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.2" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2,271 samples, 4.67%)</title><rect x="363.2" y="595.0" width="55.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="366.2" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,886 samples, 3.88%)</title><rect x="363.2" y="579.0" width="45.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="366.2" y="590.0">jdk...</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (385 samples, 0.79%)</title><rect x="408.9" y="579.0" width="9.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.9" y="590.0"></text>
</g>
<g>
<title>java.lang.Object (385 samples, 0.79%)</title><rect x="408.9" y="563.0" width="9.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="411.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (32 samples, 0.07%)</title><rect x="418.2" y="723.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="421.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (32 samples, 0.07%)</title><rect x="418.2" y="707.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="421.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (32 samples, 0.07%)</title><rect x="418.2" y="691.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="421.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (32 samples, 0.07%)</title><rect x="418.2" y="675.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="421.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (32 samples, 0.07%)</title><rect x="418.2" y="659.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="421.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (32 samples, 0.07%)</title><rect x="418.2" y="643.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="421.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (32 samples, 0.07%)</title><rect x="418.2" y="627.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (32 samples, 0.07%)</title><rect x="418.2" y="611.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (32 samples, 0.07%)</title><rect x="418.2" y="595.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="421.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (32 samples, 0.07%)</title><rect x="418.2" y="579.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="421.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (32 samples, 0.07%)</title><rect x="418.2" y="563.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="421.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (32 samples, 0.07%)</title><rect x="418.2" y="547.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="421.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (32 samples, 0.07%)</title><rect x="418.2" y="531.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="421.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (32 samples, 0.07%)</title><rect x="418.2" y="515.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="421.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$192/1158665635.apply (32 samples, 0.07%)</title><rect x="418.2" y="499.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="421.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (32 samples, 0.07%)</title><rect x="418.2" y="483.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="421.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (32 samples, 0.07%)</title><rect x="418.2" y="467.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (32 samples, 0.07%)</title><rect x="418.2" y="451.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="421.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (32 samples, 0.07%)</title><rect x="418.2" y="435.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.2" y="446.0"></text>
</g>
<g>
<title>java.lang.Class (32 samples, 0.07%)</title><rect x="418.2" y="419.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="421.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (13,678 samples, 28.11%)</title><rect x="419.0" y="771.0" width="331.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.0" y="782.0">jdk/internal/net/http/common/SequentialSchedu..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (13,678 samples, 28.11%)</title><rect x="419.0" y="755.0" width="331.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="422.0" y="766.0">jdk/internal/net/http/common/SequentialSchedu..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (13,678 samples, 28.11%)</title><rect x="419.0" y="739.0" width="331.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.0" y="750.0">jdk/internal/net/http/common/SequentialSchedu..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (13,678 samples, 28.11%)</title><rect x="419.0" y="723.0" width="331.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="422.0" y="734.0">jdk/internal/net/http/Http1AsyncReceiver$$Lam..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (13,678 samples, 28.11%)</title><rect x="419.0" y="707.0" width="331.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.0" y="718.0">jdk/internal/net/http/Http1AsyncReceiver.flush</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (13,678 samples, 28.11%)</title><rect x="419.0" y="691.0" width="331.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="422.0" y="702.0">jdk/internal/net/http/Http1AsyncReceiver.hand..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (13,678 samples, 28.11%)</title><rect x="419.0" y="675.0" width="331.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="422.0" y="686.0">jdk/internal/net/http/Http1Response$BodyReade..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (13,678 samples, 28.11%)</title><rect x="419.0" y="659.0" width="331.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="422.0" y="670.0">jdk/internal/net/http/ResponseContent$FixedLe..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$233/1245151766.run (13,678 samples, 28.11%)</title><rect x="419.0" y="643.0" width="331.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="422.0" y="654.0">jdk/internal/net/http/Http1Response$$Lambda$2..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (13,678 samples, 28.11%)</title><rect x="419.0" y="627.0" width="331.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.0" y="638.0">jdk/internal/net/http/Http1Response.onFinished</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (13,678 samples, 28.11%)</title><rect x="419.0" y="611.0" width="331.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="422.0" y="622.0">jdk/internal/net/http/HttpConnection.closeOrR..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (13,678 samples, 28.11%)</title><rect x="419.0" y="595.0" width="331.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.0" y="606.0">jdk/internal/net/http/ConnectionPool.returnTo..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (13,678 samples, 28.11%)</title><rect x="419.0" y="579.0" width="331.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.0" y="590.0">jdk/internal/net/http/ConnectionPool.returnTo..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (10,305 samples, 21.18%)</title><rect x="419.0" y="563.0" width="249.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="422.0" y="574.0">jdk.internal.net.http.ConnectionP..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (3,373 samples, 6.93%)</title><rect x="668.9" y="563.0" width="81.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="671.9" y="574.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (3,373 samples, 6.93%)</title><rect x="668.9" y="547.0" width="81.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="671.9" y="558.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (835 samples, 1.72%)</title><rect x="668.9" y="531.0" width="20.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (835 samples, 1.72%)</title><rect x="668.9" y="515.0" width="20.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (835 samples, 1.72%)</title><rect x="668.9" y="499.0" width="20.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="671.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (835 samples, 1.72%)</title><rect x="668.9" y="483.0" width="20.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="671.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (835 samples, 1.72%)</title><rect x="668.9" y="467.0" width="20.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="671.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (586 samples, 1.20%)</title><rect x="668.9" y="451.0" width="14.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="671.9" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (249 samples, 0.51%)</title><rect x="683.1" y="451.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.1" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (249 samples, 0.51%)</title><rect x="683.1" y="435.0" width="6.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="686.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2,538 samples, 5.22%)</title><rect x="689.2" y="531.0" width="61.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="692.2" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2,538 samples, 5.22%)</title><rect x="689.2" y="515.0" width="61.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.2" y="526.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (2,538 samples, 5.22%)</title><rect x="689.2" y="499.0" width="61.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.2" y="510.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2,538 samples, 5.22%)</title><rect x="689.2" y="483.0" width="61.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="692.2" y="494.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2,538 samples, 5.22%)</title><rect x="689.2" y="467.0" width="61.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.2" y="478.0">jdk/in..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (2,154 samples, 4.43%)</title><rect x="689.2" y="451.0" width="52.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="692.2" y="462.0">jdk.i..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (384 samples, 0.79%)</title><rect x="741.4" y="451.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="744.4" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (384 samples, 0.79%)</title><rect x="741.4" y="435.0" width="9.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="744.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (3,146 samples, 6.47%)</title><rect x="750.7" y="851.0" width="76.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.7" y="862.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (3,146 samples, 6.47%)</title><rect x="750.7" y="835.0" width="76.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.7" y="846.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (3,146 samples, 6.47%)</title><rect x="750.7" y="819.0" width="76.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="753.7" y="830.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (3,146 samples, 6.47%)</title><rect x="750.7" y="803.0" width="76.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="753.7" y="814.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (3,146 samples, 6.47%)</title><rect x="750.7" y="787.0" width="76.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="753.7" y="798.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.exec (1,700 samples, 3.49%)</title><rect x="750.7" y="771.0" width="41.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="753.7" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (1,700 samples, 3.49%)</title><rect x="750.7" y="755.0" width="41.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.7" y="766.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$278/375266651.run (1,700 samples, 3.49%)</title><rect x="750.7" y="739.0" width="41.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.7" y="750.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$delete$16 (1,700 samples, 3.49%)</title><rect x="750.7" y="723.0" width="41.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.7" y="734.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (1,687 samples, 3.47%)</title><rect x="750.7" y="707.0" width="40.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.7" y="718.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (1,687 samples, 3.47%)</title><rect x="750.7" y="691.0" width="40.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.7" y="702.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (1,687 samples, 3.47%)</title><rect x="750.7" y="675.0" width="40.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.7" y="686.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,687 samples, 3.47%)</title><rect x="750.7" y="659.0" width="40.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="753.7" y="670.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,687 samples, 3.47%)</title><rect x="750.7" y="643.0" width="40.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="753.7" y="654.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,687 samples, 3.47%)</title><rect x="750.7" y="627.0" width="40.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="753.7" y="638.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,687 samples, 3.47%)</title><rect x="750.7" y="611.0" width="40.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.7" y="622.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,687 samples, 3.47%)</title><rect x="750.7" y="595.0" width="40.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="753.7" y="606.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (1,687 samples, 3.47%)</title><rect x="750.7" y="579.0" width="40.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="753.7" y="590.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (13 samples, 0.03%)</title><rect x="791.6" y="707.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (13 samples, 0.03%)</title><rect x="791.6" y="691.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="794.6" y="702.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.StorageSession (13 samples, 0.03%)</title><rect x="791.6" y="675.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="794.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (1,296 samples, 2.66%)</title><rect x="791.9" y="771.0" width="31.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="794.9" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,296 samples, 2.66%)</title><rect x="791.9" y="755.0" width="31.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="794.9" y="766.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$111/1101527014.get (1,296 samples, 2.66%)</title><rect x="791.9" y="739.0" width="31.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="794.9" y="750.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$handleLocally$24 (1,296 samples, 2.66%)</title><rect x="791.9" y="723.0" width="31.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="794.9" y="734.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$274/448387530.run (1,296 samples, 2.66%)</title><rect x="791.9" y="707.0" width="31.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="794.9" y="718.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$delete$18 (1,296 samples, 2.66%)</title><rect x="791.9" y="691.0" width="31.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="794.9" y="702.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.removeFromDao (1,296 samples, 2.66%)</title><rect x="791.9" y="675.0" width="31.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.9" y="686.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (1,296 samples, 2.66%)</title><rect x="791.9" y="659.0" width="31.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="794.9" y="670.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (1,296 samples, 2.66%)</title><rect x="791.9" y="643.0" width="31.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="794.9" y="654.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (1,296 samples, 2.66%)</title><rect x="791.9" y="627.0" width="31.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="794.9" y="638.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,296 samples, 2.66%)</title><rect x="791.9" y="611.0" width="31.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="794.9" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,296 samples, 2.66%)</title><rect x="791.9" y="595.0" width="31.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="794.9" y="606.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,296 samples, 2.66%)</title><rect x="791.9" y="579.0" width="31.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="794.9" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,296 samples, 2.66%)</title><rect x="791.9" y="563.0" width="31.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="794.9" y="574.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,296 samples, 2.66%)</title><rect x="791.9" y="547.0" width="31.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="794.9" y="558.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync (1,296 samples, 2.66%)</title><rect x="791.9" y="531.0" width="31.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="794.9" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (150 samples, 0.31%)</title><rect x="823.4" y="771.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="826.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (125 samples, 0.26%)</title><rect x="823.4" y="755.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="826.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$275/2078872434.apply (125 samples, 0.26%)</title><rect x="823.4" y="739.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="826.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$delete$19 (125 samples, 0.26%)</title><rect x="823.4" y="723.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="826.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getResponsesFromReplicas (125 samples, 0.26%)</title><rect x="823.4" y="707.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (68 samples, 0.14%)</title><rect x="823.4" y="691.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="826.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (68 samples, 0.14%)</title><rect x="823.4" y="675.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="826.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (68 samples, 0.14%)</title><rect x="823.4" y="659.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="826.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (68 samples, 0.14%)</title><rect x="823.4" y="643.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="826.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (68 samples, 0.14%)</title><rect x="823.4" y="627.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="826.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (68 samples, 0.14%)</title><rect x="823.4" y="611.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (68 samples, 0.14%)</title><rect x="823.4" y="595.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="826.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (68 samples, 0.14%)</title><rect x="823.4" y="579.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (13 samples, 0.03%)</title><rect x="823.4" y="563.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="826.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (13 samples, 0.03%)</title><rect x="823.4" y="547.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="826.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (13 samples, 0.03%)</title><rect x="823.4" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (13 samples, 0.03%)</title><rect x="823.4" y="515.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (13 samples, 0.03%)</title><rect x="823.4" y="499.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="826.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (13 samples, 0.03%)</title><rect x="823.4" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="826.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.03%)</title><rect x="823.4" y="467.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="826.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (13 samples, 0.03%)</title><rect x="823.4" y="451.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="826.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (55 samples, 0.11%)</title><rect x="823.7" y="563.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="826.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (55 samples, 0.11%)</title><rect x="823.7" y="547.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="826.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (55 samples, 0.11%)</title><rect x="823.7" y="531.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="826.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (55 samples, 0.11%)</title><rect x="823.7" y="515.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="826.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (55 samples, 0.11%)</title><rect x="823.7" y="499.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="826.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (55 samples, 0.11%)</title><rect x="823.7" y="483.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="826.7" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (55 samples, 0.11%)</title><rect x="823.7" y="467.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="826.7" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getFirstResponses (57 samples, 0.12%)</title><rect x="825.0" y="691.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="828.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (57 samples, 0.12%)</title><rect x="825.0" y="675.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="828.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (57 samples, 0.12%)</title><rect x="825.0" y="659.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="828.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (57 samples, 0.12%)</title><rect x="825.0" y="643.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="828.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (57 samples, 0.12%)</title><rect x="825.0" y="627.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="828.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (57 samples, 0.12%)</title><rect x="825.0" y="611.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="828.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (57 samples, 0.12%)</title><rect x="825.0" y="595.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="828.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (57 samples, 0.12%)</title><rect x="825.0" y="579.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="828.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (57 samples, 0.12%)</title><rect x="825.0" y="563.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="828.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (57 samples, 0.12%)</title><rect x="825.0" y="547.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="828.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (57 samples, 0.12%)</title><rect x="825.0" y="531.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="828.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (57 samples, 0.12%)</title><rect x="825.0" y="515.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="828.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (57 samples, 0.12%)</title><rect x="825.0" y="499.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="828.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (57 samples, 0.12%)</title><rect x="825.0" y="483.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="828.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (57 samples, 0.12%)</title><rect x="825.0" y="467.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="828.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (25 samples, 0.05%)</title><rect x="826.4" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="829.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (23 samples, 0.05%)</title><rect x="826.4" y="739.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="829.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (23 samples, 0.05%)</title><rect x="826.4" y="723.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="829.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (23 samples, 0.05%)</title><rect x="826.4" y="707.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (23 samples, 0.05%)</title><rect x="826.4" y="691.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (23 samples, 0.05%)</title><rect x="826.4" y="675.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="829.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (23 samples, 0.05%)</title><rect x="826.4" y="659.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="829.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (23 samples, 0.05%)</title><rect x="826.4" y="643.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="829.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (23 samples, 0.05%)</title><rect x="826.4" y="627.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (23 samples, 0.05%)</title><rect x="826.4" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="829.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (23 samples, 0.05%)</title><rect x="826.4" y="595.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="829.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (23 samples, 0.05%)</title><rect x="826.4" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="829.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (23 samples, 0.05%)</title><rect x="826.4" y="563.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="829.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (23 samples, 0.05%)</title><rect x="826.4" y="547.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="829.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (23 samples, 0.05%)</title><rect x="826.4" y="531.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="829.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (23 samples, 0.05%)</title><rect x="826.4" y="515.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="829.4" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (23 samples, 0.05%)</title><rect x="826.4" y="499.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="829.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (14,822 samples, 30.46%)</title><rect x="827.0" y="851.0" width="359.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="830.0" y="862.0">jdk/internal/net/http/HttpClientImpl$SelectorMana..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (36 samples, 0.07%)</title><rect x="827.0" y="835.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$198/1799291049.accept (36 samples, 0.07%)</title><rect x="827.0" y="819.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (36 samples, 0.07%)</title><rect x="827.0" y="803.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="830.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (36 samples, 0.07%)</title><rect x="827.0" y="787.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (36 samples, 0.07%)</title><rect x="827.0" y="771.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (36 samples, 0.07%)</title><rect x="827.0" y="755.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (36 samples, 0.07%)</title><rect x="827.0" y="739.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (36 samples, 0.07%)</title><rect x="827.0" y="723.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (36 samples, 0.07%)</title><rect x="827.0" y="707.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (36 samples, 0.07%)</title><rect x="827.0" y="691.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="830.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (36 samples, 0.07%)</title><rect x="827.0" y="675.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="830.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$157/1360780123.run (36 samples, 0.07%)</title><rect x="827.0" y="659.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="830.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (36 samples, 0.07%)</title><rect x="827.0" y="643.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="830.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (35 samples, 0.07%)</title><rect x="827.0" y="627.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="830.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (35 samples, 0.07%)</title><rect x="827.0" y="611.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="830.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (35 samples, 0.07%)</title><rect x="827.0" y="595.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (35 samples, 0.07%)</title><rect x="827.0" y="579.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="830.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (35 samples, 0.07%)</title><rect x="827.0" y="563.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="830.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (35 samples, 0.07%)</title><rect x="827.0" y="547.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="830.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (35 samples, 0.07%)</title><rect x="827.0" y="531.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (35 samples, 0.07%)</title><rect x="827.0" y="515.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (32 samples, 0.07%)</title><rect x="827.0" y="499.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (32 samples, 0.07%)</title><rect x="827.0" y="483.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (32 samples, 0.07%)</title><rect x="827.0" y="467.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (32 samples, 0.07%)</title><rect x="827.0" y="451.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (32 samples, 0.07%)</title><rect x="827.0" y="435.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (32 samples, 0.07%)</title><rect x="827.0" y="419.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (32 samples, 0.07%)</title><rect x="827.0" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.0" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (32 samples, 0.07%)</title><rect x="827.0" y="387.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="830.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (6,748 samples, 13.87%)</title><rect x="827.9" y="835.0" width="163.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="830.9" y="846.0">jdk.internal.net.http..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (148 samples, 0.30%)</title><rect x="991.5" y="835.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="994.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$159/717507571.run (40 samples, 0.08%)</title><rect x="991.5" y="819.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="994.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (40 samples, 0.08%)</title><rect x="991.5" y="803.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="994.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.08%)</title><rect x="991.5" y="787.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="994.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.08%)</title><rect x="991.5" y="771.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="994.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (40 samples, 0.08%)</title><rect x="991.5" y="755.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="994.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (40 samples, 0.08%)</title><rect x="991.5" y="739.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="994.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$157/1360780123.run (40 samples, 0.08%)</title><rect x="991.5" y="723.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="994.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (40 samples, 0.08%)</title><rect x="991.5" y="707.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="994.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (40 samples, 0.08%)</title><rect x="991.5" y="691.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="994.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (40 samples, 0.08%)</title><rect x="991.5" y="675.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="994.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (40 samples, 0.08%)</title><rect x="991.5" y="659.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="994.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.08%)</title><rect x="991.5" y="643.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="994.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (40 samples, 0.08%)</title><rect x="991.5" y="627.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="994.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (40 samples, 0.08%)</title><rect x="991.5" y="611.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="994.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (40 samples, 0.08%)</title><rect x="991.5" y="595.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="994.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (40 samples, 0.08%)</title><rect x="991.5" y="579.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="994.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (35 samples, 0.07%)</title><rect x="991.5" y="563.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="994.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (35 samples, 0.07%)</title><rect x="991.5" y="547.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="994.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (35 samples, 0.07%)</title><rect x="991.5" y="531.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="994.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (35 samples, 0.07%)</title><rect x="991.5" y="515.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="994.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (35 samples, 0.07%)</title><rect x="991.5" y="499.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="994.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (35 samples, 0.07%)</title><rect x="991.5" y="483.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="994.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (35 samples, 0.07%)</title><rect x="991.5" y="467.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="994.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (35 samples, 0.07%)</title><rect x="991.5" y="451.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="994.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$161/782771317.run (108 samples, 0.22%)</title><rect x="992.5" y="819.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="995.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (108 samples, 0.22%)</title><rect x="992.5" y="803.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="995.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (108 samples, 0.22%)</title><rect x="992.5" y="787.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="995.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (108 samples, 0.22%)</title><rect x="992.5" y="771.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="995.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (108 samples, 0.22%)</title><rect x="992.5" y="755.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="995.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (104 samples, 0.21%)</title><rect x="992.5" y="739.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="995.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (104 samples, 0.21%)</title><rect x="992.5" y="723.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="995.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (104 samples, 0.21%)</title><rect x="992.5" y="707.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="995.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (104 samples, 0.21%)</title><rect x="992.5" y="691.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="995.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (104 samples, 0.21%)</title><rect x="992.5" y="675.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="995.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (104 samples, 0.21%)</title><rect x="992.5" y="659.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="995.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (104 samples, 0.21%)</title><rect x="992.5" y="643.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="995.5" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (104 samples, 0.21%)</title><rect x="992.5" y="627.0" width="2.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="995.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (7,418 samples, 15.24%)</title><rect x="995.1" y="835.0" width="179.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="998.1" y="846.0">jdk/internal/net/http/C..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (7,418 samples, 15.24%)</title><rect x="995.1" y="819.0" width="179.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="998.1" y="830.0">jdk/internal/net/http/C..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (7,418 samples, 15.24%)</title><rect x="995.1" y="803.0" width="179.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="998.1" y="814.0">jdk.internal.net.http.C..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (463 samples, 0.95%)</title><rect x="1175.0" y="835.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1178.0" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (463 samples, 0.95%)</title><rect x="1175.0" y="819.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1178.0" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (463 samples, 0.95%)</title><rect x="1175.0" y="803.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1178.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (463 samples, 0.95%)</title><rect x="1175.0" y="787.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1178.0" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (463 samples, 0.95%)</title><rect x="1175.0" y="771.0" width="11.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1178.0" y="782.0"></text>
</g>
<g>
<title>java.lang.Object (463 samples, 0.95%)</title><rect x="1175.0" y="755.0" width="11.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1178.0" y="766.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (147 samples, 0.30%)</title><rect x="1186.4" y="851.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1189.4" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (147 samples, 0.30%)</title><rect x="1186.4" y="835.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1189.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (145 samples, 0.30%)</title><rect x="1186.4" y="819.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1189.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (145 samples, 0.30%)</title><rect x="1186.4" y="803.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1189.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (145 samples, 0.30%)</title><rect x="1186.4" y="787.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1189.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (145 samples, 0.30%)</title><rect x="1186.4" y="771.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1189.4" y="782.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (145 samples, 0.30%)</title><rect x="1186.4" y="755.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1189.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (145 samples, 0.30%)</title><rect x="1186.4" y="739.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1189.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (145 samples, 0.30%)</title><rect x="1186.4" y="723.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1189.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (145 samples, 0.30%)</title><rect x="1186.4" y="707.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1189.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (145 samples, 0.30%)</title><rect x="1186.4" y="691.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1189.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (144 samples, 0.30%)</title><rect x="1186.4" y="675.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1189.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (144 samples, 0.30%)</title><rect x="1186.4" y="659.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1189.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (144 samples, 0.30%)</title><rect x="1186.4" y="643.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1189.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (144 samples, 0.30%)</title><rect x="1186.4" y="627.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1189.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (144 samples, 0.30%)</title><rect x="1186.4" y="611.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1189.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (144 samples, 0.30%)</title><rect x="1186.4" y="595.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1189.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (144 samples, 0.30%)</title><rect x="1186.4" y="579.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1189.4" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (144 samples, 0.30%)</title><rect x="1186.4" y="563.0" width="3.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1189.4" y="574.0"></text>
</g>
</g>
</svg>
