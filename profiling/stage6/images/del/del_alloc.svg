<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (26,668 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (15,352 samples, 57.57%)</title><rect x="10.0" y="691.0" width="679.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (15,352 samples, 57.57%)</title><rect x="10.0" y="675.0" width="679.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (15,352 samples, 57.57%)</title><rect x="10.0" y="659.0" width="679.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2,263 samples, 8.49%)</title><rect x="10.0" y="643.0" width="100.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,263 samples, 8.49%)</title><rect x="10.0" y="627.0" width="100.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,263 samples, 8.49%)</title><rect x="10.0" y="611.0" width="100.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util/co..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (6 samples, 0.02%)</title><rect x="10.0" y="595.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/1711595431.apply (2,257 samples, 8.46%)</title><rect x="10.3" y="595.0" width="99.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.3" y="606.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (2,257 samples, 8.46%)</title><rect x="10.3" y="579.0" width="99.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.3" y="590.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (2,257 samples, 8.46%)</title><rect x="10.3" y="563.0" width="99.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.3" y="574.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="10.3" y="547.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="10.3" y="531.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$192/1158665635.get$Lambda (10 samples, 0.04%)</title><rect x="10.3" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$192 (10 samples, 0.04%)</title><rect x="10.3" y="499.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="13.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (24 samples, 0.09%)</title><rect x="10.8" y="547.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (24 samples, 0.09%)</title><rect x="10.8" y="531.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (11 samples, 0.04%)</title><rect x="10.8" y="515.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="13.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.05%)</title><rect x="11.3" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.05%)</title><rect x="11.3" y="499.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.05%)</title><rect x="11.3" y="483.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="14.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (46 samples, 0.17%)</title><rect x="11.9" y="547.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="14.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (46 samples, 0.17%)</title><rect x="11.9" y="531.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (25 samples, 0.09%)</title><rect x="11.9" y="515.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="14.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.08%)</title><rect x="13.0" y="515.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="16.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.08%)</title><rect x="13.0" y="499.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.08%)</title><rect x="13.0" y="483.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="16.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (2,175 samples, 8.16%)</title><rect x="13.9" y="547.0" width="96.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.9" y="558.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (2,175 samples, 8.16%)</title><rect x="13.9" y="531.0" width="96.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.9" y="542.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (2,175 samples, 8.16%)</title><rect x="13.9" y="515.0" width="96.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="16.9" y="526.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.08%)</title><rect x="13.9" y="499.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="16.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.08%)</title><rect x="13.9" y="483.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="16.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/87340014.get$Lambda (11 samples, 0.04%)</title><rect x="13.9" y="467.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="16.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$137 (11 samples, 0.04%)</title><rect x="13.9" y="451.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="16.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/1035318298.get$Lambda (7 samples, 0.03%)</title><rect x="14.4" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$139 (7 samples, 0.03%)</title><rect x="14.4" y="451.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="17.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,318 samples, 4.94%)</title><rect x="14.9" y="499.0" width="58.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.9" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,318 samples, 4.94%)</title><rect x="14.9" y="483.0" width="58.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.9" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,301 samples, 4.88%)</title><rect x="14.9" y="467.0" width="57.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.9" y="478.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$174/1093022843.apply (1,301 samples, 4.88%)</title><rect x="14.9" y="451.0" width="57.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.9" y="462.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (1,301 samples, 4.88%)</title><rect x="14.9" y="435.0" width="57.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.9" y="446.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,301 samples, 4.88%)</title><rect x="14.9" y="419.0" width="57.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.9" y="430.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$139/1035318298.apply (1,301 samples, 4.88%)</title><rect x="14.9" y="403.0" width="57.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.9" y="414.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1,301 samples, 4.88%)</title><rect x="14.9" y="387.0" width="57.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.9" y="398.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.02%)</title><rect x="14.9" y="371.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.02%)</title><rect x="14.9" y="355.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$191/2106603000.get$Lambda (6 samples, 0.02%)</title><rect x="14.9" y="339.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$191 (6 samples, 0.02%)</title><rect x="14.9" y="323.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="17.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (28 samples, 0.10%)</title><rect x="15.1" y="371.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (28 samples, 0.10%)</title><rect x="15.1" y="355.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.1" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (13 samples, 0.05%)</title><rect x="15.1" y="339.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="18.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="15.9" y="339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="15.9" y="323.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="15.9" y="307.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="18.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (17 samples, 0.06%)</title><rect x="16.4" y="371.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="19.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (17 samples, 0.06%)</title><rect x="16.4" y="355.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (12 samples, 0.04%)</title><rect x="16.4" y="339.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="19.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1,250 samples, 4.69%)</title><rect x="17.1" y="371.0" width="55.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="20.1" y="382.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="17.1" y="355.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="17.1" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$189/1784125001.get$Lambda (6 samples, 0.02%)</title><rect x="17.1" y="323.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$189 (6 samples, 0.02%)</title><rect x="17.1" y="307.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="20.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$190/1202798011.get$Lambda (6 samples, 0.02%)</title><rect x="17.4" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$190 (6 samples, 0.02%)</title><rect x="17.4" y="307.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="20.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,087 samples, 4.08%)</title><rect x="17.7" y="355.0" width="48.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="20.7" y="366.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,087 samples, 4.08%)</title><rect x="17.7" y="339.0" width="48.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="20.7" y="350.0">java..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (12 samples, 0.04%)</title><rect x="17.7" y="323.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="20.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$189/1784125001.apply (1,056 samples, 3.96%)</title><rect x="18.2" y="323.0" width="46.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.2" y="334.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (1,056 samples, 3.96%)</title><rect x="18.2" y="307.0" width="46.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="21.2" y="318.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (28 samples, 0.10%)</title><rect x="18.4" y="291.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="21.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (28 samples, 0.10%)</title><rect x="18.4" y="275.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.4" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (10 samples, 0.04%)</title><rect x="18.4" y="259.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="21.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.07%)</title><rect x="18.8" y="259.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="21.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.07%)</title><rect x="18.8" y="243.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.8" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.07%)</title><rect x="18.8" y="227.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="21.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="19.6" y="291.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="22.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (17 samples, 0.06%)</title><rect x="20.2" y="291.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (6 samples, 0.02%)</title><rect x="20.2" y="275.0" width="0.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="23.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (11 samples, 0.04%)</title><rect x="20.4" y="275.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="23.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (9 samples, 0.03%)</title><rect x="20.4" y="259.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (9 samples, 0.03%)</title><rect x="20.4" y="243.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (9 samples, 0.03%)</title><rect x="20.4" y="227.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (9 samples, 0.03%)</title><rect x="20.4" y="211.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.4" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (9 samples, 0.03%)</title><rect x="20.4" y="195.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="23.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (35 samples, 0.13%)</title><rect x="20.9" y="291.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (35 samples, 0.13%)</title><rect x="20.9" y="275.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (16 samples, 0.06%)</title><rect x="20.9" y="259.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="23.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (16 samples, 0.06%)</title><rect x="20.9" y="243.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (16 samples, 0.06%)</title><rect x="20.9" y="227.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (16 samples, 0.06%)</title><rect x="20.9" y="211.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="23.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (19 samples, 0.07%)</title><rect x="21.6" y="259.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (19 samples, 0.07%)</title><rect x="21.6" y="243.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (16 samples, 0.06%)</title><rect x="21.6" y="227.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="24.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (959 samples, 3.60%)</title><rect x="22.5" y="291.0" width="42.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.5" y="302.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (7 samples, 0.03%)</title><rect x="22.5" y="275.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="25.5" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (90 samples, 0.34%)</title><rect x="22.8" y="275.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (90 samples, 0.34%)</title><rect x="22.8" y="259.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (90 samples, 0.34%)</title><rect x="22.8" y="243.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="25.8" y="254.0"></text>
</g>
<g>
<title>byte[] (90 samples, 0.34%)</title><rect x="22.8" y="227.0" width="4.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="25.8" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (20 samples, 0.07%)</title><rect x="26.8" y="275.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="29.8" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (20 samples, 0.07%)</title><rect x="26.8" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="29.8" y="270.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.07%)</title><rect x="26.8" y="243.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="29.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (109 samples, 0.41%)</title><rect x="27.7" y="275.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="30.7" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (109 samples, 0.41%)</title><rect x="27.7" y="259.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="30.7" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (109 samples, 0.41%)</title><rect x="27.7" y="243.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.7" y="254.0"></text>
</g>
<g>
<title>byte[] (109 samples, 0.41%)</title><rect x="27.7" y="227.0" width="4.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="30.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.09%)</title><rect x="32.5" y="275.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="35.5" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.09%)</title><rect x="32.5" y="259.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.5" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.09%)</title><rect x="32.5" y="243.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="35.5" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (8 samples, 0.03%)</title><rect x="33.5" y="275.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="36.5" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (8 samples, 0.03%)</title><rect x="33.5" y="259.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="36.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (593 samples, 2.22%)</title><rect x="33.9" y="275.0" width="26.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="36.9" y="286.0">j..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (6 samples, 0.02%)</title><rect x="33.9" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.02%)</title><rect x="33.9" y="243.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="36.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.02%)</title><rect x="33.9" y="227.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="36.9" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$203/1479694379.get$Lambda (6 samples, 0.02%)</title><rect x="33.9" y="211.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.9" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$203 (6 samples, 0.02%)</title><rect x="33.9" y="195.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="36.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (284 samples, 1.06%)</title><rect x="34.2" y="259.0" width="12.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (151 samples, 0.57%)</title><rect x="34.2" y="243.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.2" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (151 samples, 0.57%)</title><rect x="34.2" y="227.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.2" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (151 samples, 0.57%)</title><rect x="34.2" y="211.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="37.2" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (151 samples, 0.57%)</title><rect x="34.2" y="195.0" width="6.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="37.2" y="206.0"></text>
</g>
<g>
<title>byte[] (151 samples, 0.57%)</title><rect x="34.2" y="179.0" width="6.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="37.2" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (18 samples, 0.07%)</title><rect x="40.8" y="243.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.8" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (18 samples, 0.07%)</title><rect x="40.8" y="227.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="43.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (18 samples, 0.07%)</title><rect x="40.8" y="211.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (18 samples, 0.07%)</title><rect x="40.8" y="195.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="43.8" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (28 samples, 0.10%)</title><rect x="41.6" y="243.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="44.6" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (13 samples, 0.05%)</title><rect x="41.6" y="227.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="44.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (15 samples, 0.06%)</title><rect x="42.2" y="227.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.2" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (15 samples, 0.06%)</title><rect x="42.2" y="211.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="45.2" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$203/1479694379.test (87 samples, 0.33%)</title><rect x="42.9" y="243.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="45.9" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (87 samples, 0.33%)</title><rect x="42.9" y="227.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/1464555023.test (87 samples, 0.33%)</title><rect x="42.9" y="211.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="45.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (87 samples, 0.33%)</title><rect x="42.9" y="195.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="45.9" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/254801937.test (87 samples, 0.33%)</title><rect x="42.9" y="179.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.9" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (87 samples, 0.33%)</title><rect x="42.9" y="163.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/270056930.test (87 samples, 0.33%)</title><rect x="42.9" y="147.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (87 samples, 0.33%)</title><rect x="42.9" y="131.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.9" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (87 samples, 0.33%)</title><rect x="42.9" y="115.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.9" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (87 samples, 0.33%)</title><rect x="42.9" y="99.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.15%)</title><rect x="42.9" y="83.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="45.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (46 samples, 0.17%)</title><rect x="44.7" y="83.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.7" y="94.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.17%)</title><rect x="44.7" y="67.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="47.7" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (303 samples, 1.14%)</title><rect x="46.7" y="259.0" width="13.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.7" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (303 samples, 1.14%)</title><rect x="46.7" y="243.0" width="13.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.7" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (303 samples, 1.14%)</title><rect x="46.7" y="227.0" width="13.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.7" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (8 samples, 0.03%)</title><rect x="46.9" y="211.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="49.9" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (13 samples, 0.05%)</title><rect x="47.2" y="211.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="50.2" y="222.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (8 samples, 0.03%)</title><rect x="48.1" y="211.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="51.1" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (8 samples, 0.03%)</title><rect x="48.1" y="195.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="51.1" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (254 samples, 0.95%)</title><rect x="48.5" y="211.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.5" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.accept (254 samples, 0.95%)</title><rect x="48.5" y="195.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.5" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (254 samples, 0.95%)</title><rect x="48.5" y="179.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.18%)</title><rect x="48.5" y="163.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="51.5" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.18%)</title><rect x="48.5" y="147.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.5" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.get$Lambda (48 samples, 0.18%)</title><rect x="48.5" y="131.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="51.5" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (48 samples, 0.18%)</title><rect x="48.5" y="115.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="51.5" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (22 samples, 0.08%)</title><rect x="50.6" y="163.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.6" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.accept (22 samples, 0.08%)</title><rect x="50.6" y="147.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.6" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (22 samples, 0.08%)</title><rect x="50.6" y="131.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.6" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (22 samples, 0.08%)</title><rect x="50.6" y="115.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.6" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (22 samples, 0.08%)</title><rect x="50.6" y="99.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.6" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (22 samples, 0.08%)</title><rect x="50.6" y="83.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.6" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (22 samples, 0.08%)</title><rect x="50.6" y="67.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="53.6" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.08%)</title><rect x="50.6" y="51.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.6" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.08%)</title><rect x="50.6" y="35.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="53.6" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (112 samples, 0.42%)</title><rect x="51.5" y="163.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.5" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (112 samples, 0.42%)</title><rect x="51.5" y="147.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.5" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (62 samples, 0.23%)</title><rect x="51.5" y="131.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="54.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (62 samples, 0.23%)</title><rect x="51.5" y="115.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="54.5" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (62 samples, 0.23%)</title><rect x="51.5" y="99.0" width="2.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="54.5" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (50 samples, 0.19%)</title><rect x="54.3" y="131.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.3" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (50 samples, 0.19%)</title><rect x="54.3" y="115.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="57.3" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (72 samples, 0.27%)</title><rect x="56.5" y="163.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="59.5" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (72 samples, 0.27%)</title><rect x="56.5" y="147.0" width="3.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="59.5" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (10 samples, 0.04%)</title><rect x="59.7" y="211.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.7" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (10 samples, 0.04%)</title><rect x="59.7" y="195.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="62.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (26 samples, 0.10%)</title><rect x="60.1" y="275.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.1" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (10 samples, 0.04%)</title><rect x="60.1" y="259.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="63.1" y="270.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="60.1" y="243.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="63.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.06%)</title><rect x="60.6" y="259.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (16 samples, 0.06%)</title><rect x="60.6" y="243.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="63.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/667821226.invoke (16 samples, 0.06%)</title><rect x="60.6" y="227.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.06%)</title><rect x="60.6" y="211.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (10 samples, 0.04%)</title><rect x="60.6" y="195.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="63.6" y="206.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.04%)</title><rect x="60.6" y="179.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="63.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (6 samples, 0.02%)</title><rect x="61.0" y="195.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (6 samples, 0.02%)</title><rect x="61.0" y="179.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.0" y="190.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.02%)</title><rect x="61.0" y="163.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="64.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (25 samples, 0.09%)</title><rect x="61.3" y="275.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (25 samples, 0.09%)</title><rect x="61.3" y="259.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.09%)</title><rect x="61.3" y="243.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (25 samples, 0.09%)</title><rect x="61.3" y="227.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/667821226.invoke (25 samples, 0.09%)</title><rect x="61.3" y="211.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="64.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.09%)</title><rect x="61.3" y="195.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (20 samples, 0.07%)</title><rect x="61.5" y="179.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (20 samples, 0.07%)</title><rect x="61.5" y="163.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.5" y="174.0"></text>
</g>
<g>
<title>byte[] (20 samples, 0.07%)</title><rect x="61.5" y="147.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="64.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (57 samples, 0.21%)</title><rect x="62.4" y="275.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.4" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (14 samples, 0.05%)</title><rect x="62.4" y="259.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="65.4" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (13 samples, 0.05%)</title><rect x="63.0" y="259.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.0" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.05%)</title><rect x="63.0" y="243.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="66.0" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (30 samples, 0.11%)</title><rect x="63.6" y="259.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="66.6" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (30 samples, 0.11%)</title><rect x="63.6" y="243.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="66.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.07%)</title><rect x="64.9" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.07%)</title><rect x="64.9" y="307.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.07%)</title><rect x="64.9" y="291.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="67.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (29 samples, 0.11%)</title><rect x="65.8" y="355.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="68.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.04%)</title><rect x="67.0" y="355.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="70.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (111 samples, 0.42%)</title><rect x="67.5" y="355.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.05%)</title><rect x="67.5" y="339.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.05%)</title><rect x="67.5" y="323.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="70.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$179/379159333.get$Lambda (7 samples, 0.03%)</title><rect x="67.5" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="70.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$179 (7 samples, 0.03%)</title><rect x="67.5" y="291.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="70.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$181/624620704.get$Lambda (6 samples, 0.02%)</title><rect x="67.8" y="307.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="70.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$181 (6 samples, 0.02%)</title><rect x="67.8" y="291.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="70.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (9 samples, 0.03%)</title><rect x="68.1" y="339.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="71.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (11 samples, 0.04%)</title><rect x="68.5" y="339.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="71.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (6 samples, 0.02%)</title><rect x="69.0" y="339.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="72.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (38 samples, 0.14%)</title><rect x="69.2" y="339.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (38 samples, 0.14%)</title><rect x="69.2" y="323.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (38 samples, 0.14%)</title><rect x="69.2" y="307.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (38 samples, 0.14%)</title><rect x="69.2" y="291.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (38 samples, 0.14%)</title><rect x="69.2" y="275.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (38 samples, 0.14%)</title><rect x="69.2" y="259.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (38 samples, 0.14%)</title><rect x="69.2" y="243.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (38 samples, 0.14%)</title><rect x="69.2" y="227.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (38 samples, 0.14%)</title><rect x="69.2" y="211.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="69.2" y="195.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="72.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="69.2" y="179.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="72.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$185/1905563662.get$Lambda (6 samples, 0.02%)</title><rect x="69.4" y="163.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.4" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$185 (6 samples, 0.02%)</title><rect x="69.4" y="147.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="72.4" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (18 samples, 0.07%)</title><rect x="69.6" y="195.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="72.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (11 samples, 0.04%)</title><rect x="70.4" y="195.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (11 samples, 0.04%)</title><rect x="70.4" y="179.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (7 samples, 0.03%)</title><rect x="70.6" y="163.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.6" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (7 samples, 0.03%)</title><rect x="70.6" y="147.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="73.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (25 samples, 0.09%)</title><rect x="70.9" y="339.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="73.9" y="350.0"></text>
</g>
<g>
<title>java.util.HashMap (10 samples, 0.04%)</title><rect x="71.2" y="323.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="74.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (10 samples, 0.04%)</title><rect x="71.6" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.6" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (10 samples, 0.04%)</title><rect x="71.6" y="307.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.6" y="318.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.04%)</title><rect x="71.6" y="291.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="74.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (9 samples, 0.03%)</title><rect x="72.0" y="339.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="75.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.03%)</title><rect x="72.0" y="323.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="75.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.06%)</title><rect x="72.4" y="467.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="75.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.06%)</title><rect x="72.4" y="451.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="75.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.06%)</title><rect x="72.4" y="435.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="75.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (31 samples, 0.12%)</title><rect x="73.2" y="499.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (31 samples, 0.12%)</title><rect x="73.2" y="483.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="76.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (18 samples, 0.07%)</title><rect x="73.2" y="467.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="76.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.05%)</title><rect x="74.0" y="467.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.05%)</title><rect x="74.0" y="451.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.05%)</title><rect x="74.0" y="435.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="77.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (805 samples, 3.02%)</title><rect x="74.6" y="499.0" width="35.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.6" y="510.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.05%)</title><rect x="74.6" y="483.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.05%)</title><rect x="74.6" y="467.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="77.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$169/1136125206.get$Lambda (9 samples, 0.03%)</title><rect x="74.6" y="451.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$169 (9 samples, 0.03%)</title><rect x="74.6" y="435.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="77.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (16 samples, 0.06%)</title><rect x="75.2" y="483.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (16 samples, 0.06%)</title><rect x="75.2" y="467.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$172/1143403672.apply (10 samples, 0.04%)</title><rect x="75.2" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (10 samples, 0.04%)</title><rect x="75.2" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (10 samples, 0.04%)</title><rect x="75.2" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="75.2" y="403.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="78.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.02%)</title><rect x="75.6" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.02%)</title><rect x="75.6" y="435.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.02%)</title><rect x="75.6" y="419.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="78.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (12 samples, 0.04%)</title><rect x="75.9" y="483.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (12 samples, 0.04%)</title><rect x="75.9" y="467.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="75.9" y="451.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="75.9" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="75.9" y="419.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="78.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (763 samples, 2.86%)</title><rect x="76.4" y="483.0" width="33.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.4" y="494.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.05%)</title><rect x="76.4" y="467.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="79.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.05%)</title><rect x="76.4" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="79.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$144/821458659.get$Lambda (13 samples, 0.05%)</title><rect x="76.4" y="435.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="79.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$144 (13 samples, 0.05%)</title><rect x="76.4" y="419.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="79.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (722 samples, 2.71%)</title><rect x="77.0" y="467.0" width="31.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.0" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (722 samples, 2.71%)</title><rect x="77.0" y="451.0" width="31.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.0" y="462.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (710 samples, 2.66%)</title><rect x="77.0" y="435.0" width="31.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="80.0" y="446.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$144/821458659.apply (710 samples, 2.66%)</title><rect x="77.0" y="419.0" width="31.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.0" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (710 samples, 2.66%)</title><rect x="77.0" y="403.0" width="31.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.0" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (710 samples, 2.66%)</title><rect x="77.0" y="387.0" width="31.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.0" y="398.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (280 samples, 1.05%)</title><rect x="77.2" y="371.0" width="12.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="80.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (280 samples, 1.05%)</title><rect x="77.2" y="355.0" width="12.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (280 samples, 1.05%)</title><rect x="77.2" y="339.0" width="12.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$168/346584917.apply (269 samples, 1.01%)</title><rect x="77.2" y="323.0" width="11.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="80.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (269 samples, 1.01%)</title><rect x="77.2" y="307.0" width="11.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (269 samples, 1.01%)</title><rect x="77.2" y="291.0" width="11.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (269 samples, 1.01%)</title><rect x="77.2" y="275.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (175 samples, 0.66%)</title><rect x="77.2" y="259.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.2" y="270.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (53 samples, 0.20%)</title><rect x="77.2" y="243.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="80.2" y="254.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.03%)</title><rect x="77.2" y="227.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="80.2" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.08%)</title><rect x="77.5" y="227.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.5" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.08%)</title><rect x="77.5" y="211.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.5" y="222.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.08%)</title><rect x="77.5" y="195.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="80.5" y="206.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (23 samples, 0.09%)</title><rect x="78.5" y="227.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="81.5" y="238.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.09%)</title><rect x="78.5" y="211.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="81.5" y="222.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (12 samples, 0.04%)</title><rect x="79.5" y="243.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="82.5" y="254.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (12 samples, 0.04%)</title><rect x="79.5" y="227.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="82.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (80 samples, 0.30%)</title><rect x="80.0" y="243.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.frame.SettingsFrame (6 samples, 0.02%)</title><rect x="80.0" y="227.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="83.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (51 samples, 0.19%)</title><rect x="80.3" y="227.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (51 samples, 0.19%)</title><rect x="80.3" y="211.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="83.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (34 samples, 0.13%)</title><rect x="80.3" y="195.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="83.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.13%)</title><rect x="80.3" y="179.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.get$Lambda (34 samples, 0.13%)</title><rect x="80.3" y="163.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.3" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$61 (34 samples, 0.13%)</title><rect x="80.3" y="147.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="83.3" y="158.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (17 samples, 0.06%)</title><rect x="81.8" y="195.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.8" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/1212772528.run (17 samples, 0.06%)</title><rect x="81.8" y="179.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (17 samples, 0.06%)</title><rect x="81.8" y="163.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.8" y="174.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (17 samples, 0.06%)</title><rect x="81.8" y="147.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.8" y="158.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (17 samples, 0.06%)</title><rect x="81.8" y="131.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="84.8" y="142.0"></text>
</g>
<g>
<title>java.lang.Integer (17 samples, 0.06%)</title><rect x="81.8" y="115.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="84.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (23 samples, 0.09%)</title><rect x="82.6" y="227.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (23 samples, 0.09%)</title><rect x="82.6" y="211.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="85.6" y="222.0"></text>
</g>
<g>
<title>int[] (23 samples, 0.09%)</title><rect x="82.6" y="195.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="85.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (30 samples, 0.11%)</title><rect x="83.6" y="243.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.6" y="254.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.04%)</title><rect x="83.6" y="227.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="86.6" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 0.07%)</title><rect x="84.1" y="227.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.1" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (19 samples, 0.07%)</title><rect x="84.1" y="211.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.1" y="222.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 0.07%)</title><rect x="84.1" y="195.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="87.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (94 samples, 0.35%)</title><rect x="84.9" y="259.0" width="4.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.9" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (25 samples, 0.09%)</title><rect x="84.9" y="243.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="87.9" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (17 samples, 0.06%)</title><rect x="86.0" y="243.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="89.0" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 0.06%)</title><rect x="86.0" y="227.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="89.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (52 samples, 0.19%)</title><rect x="86.8" y="243.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.8" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (52 samples, 0.19%)</title><rect x="86.8" y="227.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="89.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.04%)</title><rect x="89.1" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="92.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.04%)</title><rect x="89.1" y="307.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="92.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.04%)</title><rect x="89.1" y="291.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="92.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (426 samples, 1.60%)</title><rect x="89.6" y="371.0" width="18.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="92.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (30 samples, 0.11%)</title><rect x="89.6" y="355.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="92.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (379 samples, 1.42%)</title><rect x="90.9" y="355.0" width="16.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.9" y="366.0"></text>
</g>
<g>
<title>java.lang.Object (6 samples, 0.02%)</title><rect x="90.9" y="339.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="93.9" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList (16 samples, 0.06%)</title><rect x="91.2" y="339.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="94.2" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (11 samples, 0.04%)</title><rect x="91.9" y="339.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="94.9" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (10 samples, 0.04%)</title><rect x="92.3" y="339.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.3" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (10 samples, 0.04%)</title><rect x="92.3" y="323.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="95.3" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (10 samples, 0.04%)</title><rect x="92.3" y="307.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="95.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (11 samples, 0.04%)</title><rect x="92.8" y="339.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="95.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (11 samples, 0.04%)</title><rect x="92.8" y="323.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="95.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (19 samples, 0.07%)</title><rect x="93.3" y="339.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="96.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (20 samples, 0.07%)</title><rect x="94.1" y="339.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="97.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (21 samples, 0.08%)</title><rect x="95.0" y="339.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="98.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.09%)</title><rect x="95.9" y="339.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="98.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (102 samples, 0.38%)</title><rect x="97.0" y="339.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="100.0" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (7 samples, 0.03%)</title><rect x="97.0" y="323.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="100.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (6 samples, 0.02%)</title><rect x="97.3" y="323.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="100.3" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (10 samples, 0.04%)</title><rect x="97.6" y="323.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="100.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (9 samples, 0.03%)</title><rect x="98.5" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="101.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (9 samples, 0.03%)</title><rect x="98.5" y="307.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="101.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (8 samples, 0.03%)</title><rect x="98.9" y="323.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="101.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="99.2" y="323.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="102.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (44 samples, 0.16%)</title><rect x="99.6" y="323.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="102.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (14 samples, 0.05%)</title><rect x="99.6" y="307.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="102.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (11 samples, 0.04%)</title><rect x="100.2" y="307.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="103.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (16 samples, 0.06%)</title><rect x="100.8" y="307.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="103.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (8 samples, 0.03%)</title><rect x="101.0" y="291.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="104.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (72 samples, 0.27%)</title><rect x="101.5" y="339.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (8 samples, 0.03%)</title><rect x="101.5" y="323.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="104.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (7 samples, 0.03%)</title><rect x="101.9" y="323.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="104.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (12 samples, 0.04%)</title><rect x="102.4" y="323.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (12 samples, 0.04%)</title><rect x="102.4" y="307.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="105.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (41 samples, 0.15%)</title><rect x="102.9" y="323.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (18 samples, 0.07%)</title><rect x="102.9" y="307.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="105.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (14 samples, 0.05%)</title><rect x="104.1" y="307.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="107.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (23 samples, 0.09%)</title><rect x="104.7" y="339.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="107.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (23 samples, 0.09%)</title><rect x="104.7" y="323.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (23 samples, 0.09%)</title><rect x="104.7" y="307.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.7" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (23 samples, 0.09%)</title><rect x="104.7" y="291.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.7" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (23 samples, 0.09%)</title><rect x="104.7" y="275.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="107.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (23 samples, 0.09%)</title><rect x="104.7" y="259.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="107.7" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (23 samples, 0.09%)</title><rect x="104.7" y="243.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="107.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (43 samples, 0.16%)</title><rect x="105.8" y="339.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (7 samples, 0.03%)</title><rect x="105.8" y="323.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="105.8" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$147/2025473808.get$Lambda (7 samples, 0.03%)</title><rect x="105.8" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$147 (7 samples, 0.03%)</title><rect x="105.8" y="275.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="108.8" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (36 samples, 0.13%)</title><rect x="106.1" y="323.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$147/2025473808.run (36 samples, 0.13%)</title><rect x="106.1" y="307.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (36 samples, 0.13%)</title><rect x="106.1" y="291.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="109.1" y="302.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (10 samples, 0.04%)</title><rect x="106.1" y="275.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="109.1" y="286.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (26 samples, 0.10%)</title><rect x="106.5" y="275.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="109.5" y="286.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (10 samples, 0.04%)</title><rect x="106.5" y="259.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="109.5" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (16 samples, 0.06%)</title><rect x="106.9" y="259.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.9" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (16 samples, 0.06%)</title><rect x="106.9" y="243.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="109.9" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (16 samples, 0.06%)</title><rect x="106.9" y="227.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="109.9" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (16 samples, 0.06%)</title><rect x="106.9" y="211.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="109.9" y="222.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (16 samples, 0.06%)</title><rect x="106.9" y="195.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="109.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (17 samples, 0.06%)</title><rect x="107.7" y="355.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.06%)</title><rect x="107.7" y="339.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="110.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="108.4" y="435.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="108.4" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="108.4" y="403.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="111.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (11 samples, 0.04%)</title><rect x="108.9" y="467.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="111.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (11 samples, 0.04%)</title><rect x="108.9" y="451.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.04%)</title><rect x="108.9" y="435.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.04%)</title><rect x="108.9" y="419.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.04%)</title><rect x="108.9" y="403.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="111.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (17 samples, 0.06%)</title><rect x="109.4" y="467.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (11 samples, 0.04%)</title><rect x="109.4" y="451.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (11 samples, 0.04%)</title><rect x="109.4" y="435.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="112.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1970105444.linkToTargetMethod (11 samples, 0.04%)</title><rect x="109.4" y="419.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="112.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/561564308.invoke (11 samples, 0.04%)</title><rect x="109.4" y="403.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1681140543.invoke (11 samples, 0.04%)</title><rect x="109.4" y="387.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.04%)</title><rect x="109.4" y="371.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="112.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (11 samples, 0.04%)</title><rect x="109.4" y="355.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (11 samples, 0.04%)</title><rect x="109.4" y="339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.4" y="350.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.04%)</title><rect x="109.4" y="323.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="112.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (6 samples, 0.02%)</title><rect x="109.9" y="451.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (6 samples, 0.02%)</title><rect x="109.9" y="435.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="112.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,025 samples, 3.84%)</title><rect x="110.2" y="643.0" width="45.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="113.2" y="654.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (894 samples, 3.35%)</title><rect x="110.2" y="627.0" width="39.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.2" y="638.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (890 samples, 3.34%)</title><rect x="110.2" y="611.0" width="39.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.2" y="622.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (890 samples, 3.34%)</title><rect x="110.2" y="595.0" width="39.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.2" y="606.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (890 samples, 3.34%)</title><rect x="110.2" y="579.0" width="39.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="113.2" y="590.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (131 samples, 0.49%)</title><rect x="149.7" y="627.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="152.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (131 samples, 0.49%)</title><rect x="149.7" y="611.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="152.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (131 samples, 0.49%)</title><rect x="149.7" y="595.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="152.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (131 samples, 0.49%)</title><rect x="149.7" y="579.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="152.7" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (131 samples, 0.49%)</title><rect x="149.7" y="563.0" width="5.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="152.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$205/1532762392.run (200 samples, 0.75%)</title><rect x="155.5" y="643.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="158.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (200 samples, 0.75%)</title><rect x="155.5" y="627.0" width="8.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="158.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (200 samples, 0.75%)</title><rect x="155.5" y="611.0" width="8.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (200 samples, 0.75%)</title><rect x="155.5" y="595.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="158.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (200 samples, 0.75%)</title><rect x="155.5" y="579.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="158.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (200 samples, 0.75%)</title><rect x="155.5" y="563.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="158.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (200 samples, 0.75%)</title><rect x="155.5" y="547.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="158.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (200 samples, 0.75%)</title><rect x="155.5" y="531.0" width="8.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="158.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (200 samples, 0.75%)</title><rect x="155.5" y="515.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="158.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (200 samples, 0.75%)</title><rect x="155.5" y="499.0" width="8.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (200 samples, 0.75%)</title><rect x="155.5" y="483.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (182 samples, 0.68%)</title><rect x="155.5" y="467.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="158.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.09%)</title><rect x="155.5" y="451.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="158.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.09%)</title><rect x="155.5" y="435.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="158.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$221/36607840.get$Lambda (18 samples, 0.07%)</title><rect x="155.8" y="419.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$221 (18 samples, 0.07%)</title><rect x="155.8" y="403.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="158.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (159 samples, 0.60%)</title><rect x="156.5" y="451.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (15 samples, 0.06%)</title><rect x="156.5" y="435.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="159.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (144 samples, 0.54%)</title><rect x="157.2" y="435.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (144 samples, 0.54%)</title><rect x="157.2" y="419.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="160.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (144 samples, 0.54%)</title><rect x="157.2" y="403.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (50 samples, 0.19%)</title><rect x="157.2" y="387.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="160.2" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (15 samples, 0.06%)</title><rect x="157.2" y="371.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="160.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/1211777603.apply (33 samples, 0.12%)</title><rect x="157.9" y="371.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="160.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (33 samples, 0.12%)</title><rect x="157.9" y="355.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (33 samples, 0.12%)</title><rect x="157.9" y="339.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="160.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (29 samples, 0.11%)</title><rect x="158.1" y="323.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="161.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.02%)</title><rect x="158.1" y="307.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.02%)</title><rect x="158.1" y="291.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$222/1425534080.get$Lambda (6 samples, 0.02%)</title><rect x="158.1" y="275.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="161.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$222 (6 samples, 0.02%)</title><rect x="158.1" y="259.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="161.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (23 samples, 0.09%)</title><rect x="158.3" y="307.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="161.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (23 samples, 0.09%)</title><rect x="158.3" y="291.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="161.3" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (11 samples, 0.04%)</title><rect x="158.3" y="275.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="161.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="158.8" y="275.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="158.8" y="259.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="161.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="158.8" y="243.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="161.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (94 samples, 0.35%)</title><rect x="159.4" y="387.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (94 samples, 0.35%)</title><rect x="159.4" y="371.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$191/2106603000.apply (94 samples, 0.35%)</title><rect x="159.4" y="355.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="162.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (94 samples, 0.35%)</title><rect x="159.4" y="339.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (94 samples, 0.35%)</title><rect x="159.4" y="323.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="162.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/87340014.apply (94 samples, 0.35%)</title><rect x="159.4" y="307.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (94 samples, 0.35%)</title><rect x="159.4" y="291.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="162.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="159.4" y="275.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="162.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="159.4" y="259.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="162.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/1211777603.get$Lambda (10 samples, 0.04%)</title><rect x="159.4" y="243.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$217 (10 samples, 0.04%)</title><rect x="159.4" y="227.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="162.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (19 samples, 0.07%)</title><rect x="159.9" y="275.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="162.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (19 samples, 0.07%)</title><rect x="159.9" y="259.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="162.9" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (7 samples, 0.03%)</title><rect x="159.9" y="243.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="162.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="160.2" y="243.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="160.2" y="227.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="163.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="160.2" y="211.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="163.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (28 samples, 0.10%)</title><rect x="160.7" y="275.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.03%)</title><rect x="160.7" y="259.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.03%)</title><rect x="160.7" y="243.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$218/709564748.get$Lambda (7 samples, 0.03%)</title><rect x="160.7" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$218 (7 samples, 0.03%)</title><rect x="160.7" y="211.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="163.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (21 samples, 0.08%)</title><rect x="161.0" y="259.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (21 samples, 0.08%)</title><rect x="161.0" y="243.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="164.0" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (7 samples, 0.03%)</title><rect x="161.0" y="227.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="164.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.05%)</title><rect x="161.3" y="227.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="164.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.05%)</title><rect x="161.3" y="211.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="164.3" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.05%)</title><rect x="161.3" y="195.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="164.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (37 samples, 0.14%)</title><rect x="161.9" y="275.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (19 samples, 0.07%)</title><rect x="161.9" y="259.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (6 samples, 0.02%)</title><rect x="161.9" y="243.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="164.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (13 samples, 0.05%)</title><rect x="162.2" y="243.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="165.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (13 samples, 0.05%)</title><rect x="162.2" y="227.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.05%)</title><rect x="162.2" y="211.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="165.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (18 samples, 0.07%)</title><rect x="162.8" y="259.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (8 samples, 0.03%)</title><rect x="162.8" y="243.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="165.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (10 samples, 0.04%)</title><rect x="163.1" y="243.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="166.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (10 samples, 0.04%)</title><rect x="163.1" y="227.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (10 samples, 0.04%)</title><rect x="163.1" y="211.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (10 samples, 0.04%)</title><rect x="163.1" y="195.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="166.1" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (10 samples, 0.04%)</title><rect x="163.1" y="179.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.1" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (10 samples, 0.04%)</title><rect x="163.1" y="163.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="166.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (18 samples, 0.07%)</title><rect x="163.6" y="467.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (18 samples, 0.07%)</title><rect x="163.6" y="451.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (18 samples, 0.07%)</title><rect x="163.6" y="435.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (18 samples, 0.07%)</title><rect x="163.6" y="419.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (18 samples, 0.07%)</title><rect x="163.6" y="403.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.6" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (18 samples, 0.07%)</title><rect x="163.6" y="387.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.6" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (7 samples, 0.03%)</title><rect x="163.6" y="371.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.6" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (7 samples, 0.03%)</title><rect x="163.6" y="355.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="166.6" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (11 samples, 0.04%)</title><rect x="163.9" y="371.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.9" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (11 samples, 0.04%)</title><rect x="163.9" y="355.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="166.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,348 samples, 5.05%)</title><rect x="164.4" y="643.0" width="59.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="167.4" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,348 samples, 5.05%)</title><rect x="164.4" y="627.0" width="59.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="167.4" y="638.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,120 samples, 4.20%)</title><rect x="164.4" y="611.0" width="49.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="167.4" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (1,120 samples, 4.20%)</title><rect x="164.4" y="595.0" width="49.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="167.4" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,120 samples, 4.20%)</title><rect x="164.4" y="579.0" width="49.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="167.4" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (27 samples, 0.10%)</title><rect x="164.4" y="563.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="167.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (27 samples, 0.10%)</title><rect x="164.4" y="547.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (27 samples, 0.10%)</title><rect x="164.4" y="531.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="167.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (27 samples, 0.10%)</title><rect x="164.4" y="515.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="167.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/623247230.linkToTargetMethod (19 samples, 0.07%)</title><rect x="164.4" y="499.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="167.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/773662650.invoke (19 samples, 0.07%)</title><rect x="164.4" y="483.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="167.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.07%)</title><rect x="164.4" y="467.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="167.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (19 samples, 0.07%)</title><rect x="164.4" y="451.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="167.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (19 samples, 0.07%)</title><rect x="164.4" y="435.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="167.4" y="446.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.07%)</title><rect x="164.4" y="419.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="167.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (8 samples, 0.03%)</title><rect x="165.2" y="499.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="168.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.03%)</title><rect x="165.2" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="168.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.03%)</title><rect x="165.2" y="467.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206/1914759753.get$Lambda (8 samples, 0.03%)</title><rect x="165.2" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206 (8 samples, 0.03%)</title><rect x="165.2" y="435.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="168.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,093 samples, 4.10%)</title><rect x="165.6" y="563.0" width="48.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="168.6" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,093 samples, 4.10%)</title><rect x="165.6" y="547.0" width="48.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="168.6" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,093 samples, 4.10%)</title><rect x="165.6" y="531.0" width="48.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="168.6" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,093 samples, 4.10%)</title><rect x="165.6" y="515.0" width="48.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.6" y="526.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (493 samples, 1.85%)</title><rect x="165.6" y="499.0" width="21.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="168.6" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (493 samples, 1.85%)</title><rect x="165.6" y="483.0" width="21.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.6" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (493 samples, 1.85%)</title><rect x="165.6" y="467.0" width="21.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.6" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (493 samples, 1.85%)</title><rect x="165.6" y="451.0" width="21.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="168.6" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (493 samples, 1.85%)</title><rect x="165.6" y="435.0" width="21.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="168.6" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (493 samples, 1.85%)</title><rect x="165.6" y="419.0" width="21.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="168.6" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (493 samples, 1.85%)</title><rect x="165.6" y="403.0" width="21.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="168.6" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (476 samples, 1.78%)</title><rect x="165.6" y="387.0" width="21.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.6" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (476 samples, 1.78%)</title><rect x="165.6" y="371.0" width="21.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="168.6" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (468 samples, 1.75%)</title><rect x="165.6" y="355.0" width="20.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="168.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (10 samples, 0.04%)</title><rect x="165.6" y="339.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="168.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$218/709564748.apply (10 samples, 0.04%)</title><rect x="166.0" y="339.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (10 samples, 0.04%)</title><rect x="166.0" y="323.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="169.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (10 samples, 0.04%)</title><rect x="166.0" y="307.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="169.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (10 samples, 0.04%)</title><rect x="166.0" y="291.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="169.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="166.0" y="275.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="169.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$134/2113557447.apply (423 samples, 1.59%)</title><rect x="166.5" y="339.0" width="18.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (423 samples, 1.59%)</title><rect x="166.5" y="323.0" width="18.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (22 samples, 0.08%)</title><rect x="166.7" y="307.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="169.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (22 samples, 0.08%)</title><rect x="166.7" y="291.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.7" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (13 samples, 0.05%)</title><rect x="166.7" y="275.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="169.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="167.3" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="167.3" y="259.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="170.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.03%)</title><rect x="167.3" y="243.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="170.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (396 samples, 1.48%)</title><rect x="167.7" y="307.0" width="17.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="170.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.02%)</title><rect x="167.7" y="291.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="170.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.02%)</title><rect x="167.7" y="275.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$244/1781446394.get$Lambda (6 samples, 0.02%)</title><rect x="167.7" y="259.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="170.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$244 (6 samples, 0.02%)</title><rect x="167.7" y="243.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="170.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (20 samples, 0.07%)</title><rect x="167.9" y="291.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (20 samples, 0.07%)</title><rect x="167.9" y="275.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.9" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (10 samples, 0.04%)</title><rect x="167.9" y="259.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="170.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="168.4" y="259.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="168.4" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="171.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="168.4" y="227.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="171.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (370 samples, 1.39%)</title><rect x="168.8" y="291.0" width="16.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="171.8" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$129/1384033106.apply (42 samples, 0.16%)</title><rect x="168.8" y="275.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.8" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (42 samples, 0.16%)</title><rect x="168.8" y="259.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="171.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (42 samples, 0.16%)</title><rect x="168.8" y="243.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="171.8" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (12 samples, 0.04%)</title><rect x="168.8" y="227.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="171.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (30 samples, 0.11%)</title><rect x="169.3" y="227.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.3" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.04%)</title><rect x="169.3" y="211.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="172.3" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.07%)</title><rect x="169.9" y="211.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="172.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (328 samples, 1.23%)</title><rect x="170.7" y="275.0" width="14.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="173.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="170.7" y="259.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="173.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="170.7" y="243.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/525165928.linkToTargetMethod (13 samples, 0.05%)</title><rect x="171.1" y="259.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="174.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1057221162.invokeStatic (13 samples, 0.05%)</title><rect x="171.1" y="243.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="174.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$232/853075107.get$Lambda (13 samples, 0.05%)</title><rect x="171.1" y="227.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="174.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$232 (13 samples, 0.05%)</title><rect x="171.1" y="211.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="174.1" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (63 samples, 0.24%)</title><rect x="171.7" y="259.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="174.7" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (17 samples, 0.06%)</title><rect x="171.7" y="243.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="174.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (12 samples, 0.04%)</title><rect x="171.9" y="227.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="174.9" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (12 samples, 0.04%)</title><rect x="171.9" y="211.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="174.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (23 samples, 0.09%)</title><rect x="172.4" y="243.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="175.4" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (23 samples, 0.09%)</title><rect x="172.4" y="227.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.4" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (23 samples, 0.09%)</title><rect x="172.4" y="211.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="175.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (8 samples, 0.03%)</title><rect x="172.4" y="195.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="175.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (8 samples, 0.03%)</title><rect x="172.4" y="179.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="175.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (8 samples, 0.03%)</title><rect x="172.4" y="163.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="175.4" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (8 samples, 0.03%)</title><rect x="172.4" y="147.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="175.4" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$229/722914434.get (6 samples, 0.02%)</title><rect x="172.8" y="195.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="175.8" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (6 samples, 0.02%)</title><rect x="172.8" y="179.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="175.8" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (9 samples, 0.03%)</title><rect x="173.1" y="195.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="176.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (9 samples, 0.03%)</title><rect x="173.1" y="179.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="176.1" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (9 samples, 0.03%)</title><rect x="173.1" y="163.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="176.1" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (9 samples, 0.03%)</title><rect x="173.1" y="147.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="176.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (23 samples, 0.09%)</title><rect x="173.5" y="243.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.5" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (23 samples, 0.09%)</title><rect x="173.5" y="227.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="176.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (42 samples, 0.16%)</title><rect x="174.5" y="259.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="177.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (19 samples, 0.07%)</title><rect x="174.5" y="243.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.5" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (11 samples, 0.04%)</title><rect x="174.5" y="227.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="177.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="175.0" y="227.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="178.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.03%)</title><rect x="175.0" y="211.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="175.0" y="195.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="178.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (23 samples, 0.09%)</title><rect x="175.3" y="243.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="178.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (23 samples, 0.09%)</title><rect x="175.3" y="227.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="178.3" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (14 samples, 0.05%)</title><rect x="175.3" y="211.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="178.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="175.9" y="211.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="175.9" y="195.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="178.9" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.03%)</title><rect x="175.9" y="179.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="178.9" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (8 samples, 0.03%)</title><rect x="176.3" y="259.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="179.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (8 samples, 0.03%)</title><rect x="176.7" y="259.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="179.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="177.0" y="259.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="180.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (171 samples, 0.64%)</title><rect x="177.6" y="259.0" width="7.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$232/853075107.run (171 samples, 0.64%)</title><rect x="177.6" y="243.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (171 samples, 0.64%)</title><rect x="177.6" y="227.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="180.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.09%)</title><rect x="177.6" y="211.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="180.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.09%)</title><rect x="177.6" y="195.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$233/1245151766.get$Lambda (9 samples, 0.03%)</title><rect x="177.6" y="179.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.6" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$233 (9 samples, 0.03%)</title><rect x="177.6" y="163.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="180.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$237/952850743.get$Lambda (10 samples, 0.04%)</title><rect x="178.2" y="179.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.2" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$237 (10 samples, 0.04%)</title><rect x="178.2" y="163.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="181.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (21 samples, 0.08%)</title><rect x="178.6" y="211.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="181.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (21 samples, 0.08%)</title><rect x="178.6" y="195.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="181.6" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (11 samples, 0.04%)</title><rect x="178.6" y="179.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="181.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="179.1" y="179.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="182.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.04%)</title><rect x="179.1" y="163.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="182.1" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="179.1" y="147.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="182.1" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (14 samples, 0.05%)</title><rect x="179.6" y="211.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="182.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (10 samples, 0.04%)</title><rect x="180.2" y="211.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="183.2" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.04%)</title><rect x="180.2" y="195.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="183.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (23 samples, 0.09%)</title><rect x="180.6" y="211.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="183.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (23 samples, 0.09%)</title><rect x="180.6" y="195.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="183.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (19 samples, 0.07%)</title><rect x="180.8" y="179.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="183.8" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (19 samples, 0.07%)</title><rect x="180.8" y="163.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="183.8" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (19 samples, 0.07%)</title><rect x="180.8" y="147.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="183.8" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (12 samples, 0.04%)</title><rect x="180.8" y="131.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="183.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.03%)</title><rect x="181.3" y="131.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="184.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (7 samples, 0.03%)</title><rect x="181.3" y="115.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="184.3" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (7 samples, 0.03%)</title><rect x="181.3" y="99.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="184.3" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (28 samples, 0.10%)</title><rect x="181.6" y="211.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="184.6" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.10%)</title><rect x="181.6" y="195.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="184.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1357563986.invoke (28 samples, 0.10%)</title><rect x="181.6" y="179.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="184.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.10%)</title><rect x="181.6" y="163.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="184.6" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (7 samples, 0.03%)</title><rect x="181.6" y="147.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="184.6" y="158.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.03%)</title><rect x="181.6" y="131.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="184.6" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (21 samples, 0.08%)</title><rect x="181.9" y="147.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="184.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (21 samples, 0.08%)</title><rect x="181.9" y="131.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="184.9" y="142.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.08%)</title><rect x="181.9" y="115.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="184.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (52 samples, 0.19%)</title><rect x="182.9" y="211.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="185.9" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (14 samples, 0.05%)</title><rect x="182.9" y="195.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="185.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (38 samples, 0.14%)</title><rect x="183.5" y="195.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.14%)</title><rect x="183.5" y="179.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="186.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1357563986.invoke (38 samples, 0.14%)</title><rect x="183.5" y="163.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.5" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.14%)</title><rect x="183.5" y="147.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="186.5" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (6 samples, 0.02%)</title><rect x="183.5" y="131.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.5" y="142.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 0.02%)</title><rect x="183.5" y="115.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="186.5" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (32 samples, 0.12%)</title><rect x="183.8" y="131.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (32 samples, 0.12%)</title><rect x="183.8" y="115.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="186.8" y="126.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.12%)</title><rect x="183.8" y="99.0" width="1.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="186.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$192/1158665635.apply (25 samples, 0.09%)</title><rect x="185.2" y="339.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="188.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (25 samples, 0.09%)</title><rect x="185.2" y="323.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="188.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (11 samples, 0.04%)</title><rect x="185.2" y="307.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="188.2" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (11 samples, 0.04%)</title><rect x="185.2" y="291.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="188.2" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (11 samples, 0.04%)</title><rect x="185.2" y="275.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="188.2" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (11 samples, 0.04%)</title><rect x="185.2" y="259.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="188.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (14 samples, 0.05%)</title><rect x="185.7" y="307.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="188.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.05%)</title><rect x="185.7" y="291.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="188.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (8 samples, 0.03%)</title><rect x="186.3" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="189.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (8 samples, 0.03%)</title><rect x="186.3" y="339.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="189.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$193/194868316.apply (8 samples, 0.03%)</title><rect x="186.3" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (8 samples, 0.03%)</title><rect x="186.3" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="189.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (8 samples, 0.03%)</title><rect x="186.3" y="291.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="189.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.03%)</title><rect x="186.3" y="275.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="189.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$222/1425534080.apply (17 samples, 0.06%)</title><rect x="186.6" y="387.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="189.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (17 samples, 0.06%)</title><rect x="186.6" y="371.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="189.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (17 samples, 0.06%)</title><rect x="186.6" y="355.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="189.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (600 samples, 2.25%)</title><rect x="187.4" y="499.0" width="26.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.4" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (42 samples, 0.16%)</title><rect x="187.4" y="483.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (42 samples, 0.16%)</title><rect x="187.4" y="467.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.4" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (42 samples, 0.16%)</title><rect x="187.4" y="451.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="190.4" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (42 samples, 0.16%)</title><rect x="187.4" y="435.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="190.4" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (42 samples, 0.16%)</title><rect x="187.4" y="419.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.4" y="430.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.16%)</title><rect x="187.4" y="403.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="190.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (22 samples, 0.08%)</title><rect x="189.2" y="483.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (22 samples, 0.08%)</title><rect x="189.2" y="467.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="192.2" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (22 samples, 0.08%)</title><rect x="189.2" y="451.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.2" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (22 samples, 0.08%)</title><rect x="189.2" y="435.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="192.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.08%)</title><rect x="189.2" y="419.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.2" y="430.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.08%)</title><rect x="189.2" y="403.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="192.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (52 samples, 0.19%)</title><rect x="190.2" y="483.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.2" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (8 samples, 0.03%)</title><rect x="190.2" y="467.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="193.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.02%)</title><rect x="190.6" y="467.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.02%)</title><rect x="190.6" y="451.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.6" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (6 samples, 0.02%)</title><rect x="190.6" y="435.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="193.6" y="446.0"></text>
</g>
<g>
<title>byte[] (6 samples, 0.02%)</title><rect x="190.6" y="419.0" width="0.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="193.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (11 samples, 0.04%)</title><rect x="190.8" y="467.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="193.8" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (11 samples, 0.04%)</title><rect x="190.8" y="451.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.8" y="462.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.04%)</title><rect x="190.8" y="435.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="193.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (27 samples, 0.10%)</title><rect x="191.3" y="467.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="194.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (27 samples, 0.10%)</title><rect x="191.3" y="451.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="194.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String (9 samples, 0.03%)</title><rect x="191.3" y="435.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="194.3" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.07%)</title><rect x="191.7" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="194.7" y="446.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.07%)</title><rect x="191.7" y="419.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="194.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (149 samples, 0.56%)</title><rect x="192.5" y="483.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (149 samples, 0.56%)</title><rect x="192.5" y="467.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="195.5" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (149 samples, 0.56%)</title><rect x="192.5" y="451.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.5" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (10 samples, 0.04%)</title><rect x="192.9" y="435.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="195.9" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (10 samples, 0.04%)</title><rect x="193.4" y="435.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="196.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="193.8" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="196.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="193.8" y="419.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.8" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.get$Lambda (12 samples, 0.04%)</title><rect x="193.8" y="403.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.8" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$126 (12 samples, 0.04%)</title><rect x="193.8" y="387.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="196.8" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (12 samples, 0.04%)</title><rect x="194.3" y="435.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="197.3" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (12 samples, 0.04%)</title><rect x="194.3" y="419.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="197.3" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (82 samples, 0.31%)</title><rect x="194.9" y="435.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.accept (82 samples, 0.31%)</title><rect x="194.9" y="419.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="197.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (82 samples, 0.31%)</title><rect x="194.9" y="403.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="197.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="194.9" y="387.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="197.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="194.9" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="197.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.get$Lambda (12 samples, 0.04%)</title><rect x="194.9" y="355.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.9" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (12 samples, 0.04%)</title><rect x="194.9" y="339.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="197.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (21 samples, 0.08%)</title><rect x="195.4" y="387.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="198.4" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.accept (21 samples, 0.08%)</title><rect x="195.4" y="371.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="198.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (21 samples, 0.08%)</title><rect x="195.4" y="355.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (21 samples, 0.08%)</title><rect x="195.4" y="339.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (21 samples, 0.08%)</title><rect x="195.4" y="323.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="198.4" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (21 samples, 0.08%)</title><rect x="195.4" y="307.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.4" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (21 samples, 0.08%)</title><rect x="195.4" y="291.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="198.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (21 samples, 0.08%)</title><rect x="195.4" y="275.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="198.4" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (21 samples, 0.08%)</title><rect x="195.4" y="259.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="198.4" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (30 samples, 0.11%)</title><rect x="196.3" y="387.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.3" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (30 samples, 0.11%)</title><rect x="196.3" y="371.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="199.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (12 samples, 0.04%)</title><rect x="196.3" y="355.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.3" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.04%)</title><rect x="196.3" y="339.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="199.3" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.04%)</title><rect x="196.3" y="323.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="199.3" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (18 samples, 0.07%)</title><rect x="196.9" y="355.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="199.9" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (18 samples, 0.07%)</title><rect x="196.9" y="339.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="199.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (19 samples, 0.07%)</title><rect x="197.7" y="387.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.7" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (19 samples, 0.07%)</title><rect x="197.7" y="371.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="200.7" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (14 samples, 0.05%)</title><rect x="198.5" y="435.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="201.5" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (14 samples, 0.05%)</title><rect x="198.5" y="419.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="201.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (335 samples, 1.26%)</title><rect x="199.1" y="483.0" width="14.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="202.1" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (21 samples, 0.08%)</title><rect x="199.1" y="467.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="202.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (23 samples, 0.09%)</title><rect x="200.0" y="467.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.0" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (23 samples, 0.09%)</title><rect x="200.0" y="451.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="203.0" y="462.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.09%)</title><rect x="200.0" y="435.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="203.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (36 samples, 0.13%)</title><rect x="201.1" y="467.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (36 samples, 0.13%)</title><rect x="201.1" y="451.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.06%)</title><rect x="201.1" y="435.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="204.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.08%)</title><rect x="201.7" y="435.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.7" y="446.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.08%)</title><rect x="201.7" y="419.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="204.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (255 samples, 0.96%)</title><rect x="202.7" y="467.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="205.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (67 samples, 0.25%)</title><rect x="202.7" y="451.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="205.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (67 samples, 0.25%)</title><rect x="202.7" y="435.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="205.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.12%)</title><rect x="202.7" y="419.0" width="1.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="205.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (35 samples, 0.13%)</title><rect x="204.1" y="419.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="207.1" y="430.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.13%)</title><rect x="204.1" y="403.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="207.1" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (39 samples, 0.15%)</title><rect x="205.6" y="451.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="208.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (39 samples, 0.15%)</title><rect x="205.6" y="435.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="208.6" y="446.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.06%)</title><rect x="205.6" y="419.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="208.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.09%)</title><rect x="206.3" y="419.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="209.3" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (32 samples, 0.12%)</title><rect x="207.3" y="451.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (32 samples, 0.12%)</title><rect x="207.3" y="435.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="210.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.12%)</title><rect x="207.3" y="419.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="210.3" y="430.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.07%)</title><rect x="207.3" y="403.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="210.3" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.05%)</title><rect x="208.2" y="403.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="211.2" y="414.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.05%)</title><rect x="208.2" y="387.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="211.2" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (46 samples, 0.17%)</title><rect x="208.8" y="451.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (46 samples, 0.17%)</title><rect x="208.8" y="435.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="211.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (46 samples, 0.17%)</title><rect x="208.8" y="419.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="211.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (46 samples, 0.17%)</title><rect x="208.8" y="403.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="211.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (46 samples, 0.17%)</title><rect x="208.8" y="387.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="211.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (46 samples, 0.17%)</title><rect x="208.8" y="371.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="211.8" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (71 samples, 0.27%)</title><rect x="210.8" y="451.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="213.8" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (25 samples, 0.09%)</title><rect x="210.8" y="435.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="213.8" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (25 samples, 0.09%)</title><rect x="210.8" y="419.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="213.8" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (25 samples, 0.09%)</title><rect x="211.9" y="435.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.9" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (25 samples, 0.09%)</title><rect x="211.9" y="419.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="214.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$226/54037925.apply (21 samples, 0.08%)</title><rect x="213.0" y="435.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (21 samples, 0.08%)</title><rect x="213.0" y="419.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.0" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (21 samples, 0.08%)</title><rect x="213.0" y="403.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="216.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (228 samples, 0.85%)</title><rect x="213.9" y="611.0" width="10.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="216.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (228 samples, 0.85%)</title><rect x="213.9" y="595.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (228 samples, 0.85%)</title><rect x="213.9" y="579.0" width="10.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$166/1615159449.run (228 samples, 0.85%)</title><rect x="213.9" y="563.0" width="10.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="216.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (228 samples, 0.85%)</title><rect x="213.9" y="547.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="216.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (226 samples, 0.85%)</title><rect x="213.9" y="531.0" width="10.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="216.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.05%)</title><rect x="213.9" y="515.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="216.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.05%)</title><rect x="213.9" y="499.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$185/1905563662.get$Lambda (10 samples, 0.04%)</title><rect x="214.1" y="483.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="217.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$185 (10 samples, 0.04%)</title><rect x="214.1" y="467.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="217.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (11 samples, 0.04%)</title><rect x="214.6" y="515.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="217.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (19 samples, 0.07%)</title><rect x="215.0" y="515.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="218.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (19 samples, 0.07%)</title><rect x="215.0" y="499.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="218.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (11 samples, 0.04%)</title><rect x="215.0" y="483.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="218.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (8 samples, 0.03%)</title><rect x="215.5" y="483.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="218.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (8 samples, 0.03%)</title><rect x="215.5" y="467.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="218.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (182 samples, 0.68%)</title><rect x="215.9" y="515.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="218.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (182 samples, 0.68%)</title><rect x="215.9" y="499.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="218.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$233/1245151766.run (153 samples, 0.57%)</title><rect x="215.9" y="483.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="218.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (153 samples, 0.57%)</title><rect x="215.9" y="467.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="218.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (153 samples, 0.57%)</title><rect x="215.9" y="451.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="218.9" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (55 samples, 0.21%)</title><rect x="215.9" y="435.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.9" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (39 samples, 0.15%)</title><rect x="215.9" y="419.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="218.9" y="430.0"></text>
</g>
<g>
<title>java/util/List.spliterator (13 samples, 0.05%)</title><rect x="215.9" y="403.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="218.9" y="414.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (13 samples, 0.05%)</title><rect x="215.9" y="387.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="218.9" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (26 samples, 0.10%)</title><rect x="216.5" y="403.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.5" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (26 samples, 0.10%)</title><rect x="216.5" y="387.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="219.5" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (16 samples, 0.06%)</title><rect x="217.6" y="419.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="220.6" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (16 samples, 0.06%)</title><rect x="217.6" y="403.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (16 samples, 0.06%)</title><rect x="217.6" y="387.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="220.6" y="398.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/78204644.get (13 samples, 0.05%)</title><rect x="217.6" y="371.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="220.6" y="382.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (13 samples, 0.05%)</title><rect x="217.6" y="355.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="220.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (98 samples, 0.37%)</title><rect x="218.3" y="435.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="221.3" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.now (7 samples, 0.03%)</title><rect x="218.3" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="221.3" y="430.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (7 samples, 0.03%)</title><rect x="218.3" y="403.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="221.3" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (7 samples, 0.03%)</title><rect x="218.3" y="387.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="221.3" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.create (7 samples, 0.03%)</title><rect x="218.3" y="371.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="221.3" y="382.0"></text>
</g>
<g>
<title>java.time.Instant (7 samples, 0.03%)</title><rect x="218.3" y="355.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="221.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (91 samples, 0.34%)</title><rect x="218.6" y="419.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="221.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (25 samples, 0.09%)</title><rect x="218.6" y="403.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="221.6" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.plus (6 samples, 0.02%)</title><rect x="218.6" y="387.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.6" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (6 samples, 0.02%)</title><rect x="218.6" y="371.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.6" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.plus (6 samples, 0.02%)</title><rect x="218.6" y="355.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="221.6" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (6 samples, 0.02%)</title><rect x="218.6" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="221.6" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (6 samples, 0.02%)</title><rect x="218.6" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="221.6" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (6 samples, 0.02%)</title><rect x="218.6" y="307.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="221.6" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (6 samples, 0.02%)</title><rect x="218.9" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.9" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (6 samples, 0.02%)</title><rect x="218.9" y="371.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="221.9" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.plus (6 samples, 0.02%)</title><rect x="218.9" y="355.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="221.9" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (6 samples, 0.02%)</title><rect x="218.9" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="221.9" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (6 samples, 0.02%)</title><rect x="218.9" y="323.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="221.9" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (6 samples, 0.02%)</title><rect x="218.9" y="307.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="221.9" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.add (6 samples, 0.02%)</title><rect x="219.2" y="387.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="222.2" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkBefore (6 samples, 0.02%)</title><rect x="219.2" y="371.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.2" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (6 samples, 0.02%)</title><rect x="219.2" y="355.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="222.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (7 samples, 0.03%)</title><rect x="219.4" y="387.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="222.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (26 samples, 0.10%)</title><rect x="219.7" y="403.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.7" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (17 samples, 0.06%)</title><rect x="219.7" y="387.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="222.7" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (17 samples, 0.06%)</title><rect x="219.7" y="371.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="222.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (17 samples, 0.06%)</title><rect x="219.7" y="355.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.7" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (17 samples, 0.06%)</title><rect x="219.7" y="339.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="222.7" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (9 samples, 0.03%)</title><rect x="220.5" y="387.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="223.5" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (9 samples, 0.03%)</title><rect x="220.5" y="371.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.5" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (9 samples, 0.03%)</title><rect x="220.5" y="355.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="223.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (40 samples, 0.15%)</title><rect x="220.9" y="403.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="223.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (35 samples, 0.13%)</title><rect x="221.1" y="387.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="224.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (12 samples, 0.04%)</title><rect x="221.1" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="224.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (12 samples, 0.04%)</title><rect x="221.1" y="355.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="224.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (12 samples, 0.04%)</title><rect x="221.1" y="339.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="224.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (12 samples, 0.04%)</title><rect x="221.1" y="323.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="224.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (23 samples, 0.09%)</title><rect x="221.6" y="371.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="224.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (23 samples, 0.09%)</title><rect x="221.6" y="355.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="224.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (19 samples, 0.07%)</title><rect x="221.6" y="339.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="224.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (29 samples, 0.11%)</title><rect x="222.7" y="483.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="225.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (29 samples, 0.11%)</title><rect x="222.7" y="467.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="225.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (29 samples, 0.11%)</title><rect x="222.7" y="451.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="225.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (24 samples, 0.09%)</title><rect x="222.7" y="435.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="225.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (24 samples, 0.09%)</title><rect x="222.7" y="419.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="225.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (24 samples, 0.09%)</title><rect x="222.7" y="403.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (24 samples, 0.09%)</title><rect x="222.7" y="387.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="225.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$241/404297872.accept (24 samples, 0.09%)</title><rect x="222.7" y="371.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (24 samples, 0.09%)</title><rect x="222.7" y="355.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="225.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (24 samples, 0.09%)</title><rect x="222.7" y="339.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="225.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (24 samples, 0.09%)</title><rect x="222.7" y="323.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="225.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (24 samples, 0.09%)</title><rect x="222.7" y="307.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="225.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$245/917709507.apply (24 samples, 0.09%)</title><rect x="222.7" y="291.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="225.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (24 samples, 0.09%)</title><rect x="222.7" y="275.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="225.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (24 samples, 0.09%)</title><rect x="222.7" y="259.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="225.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$273/1186486267.run (10,516 samples, 39.43%)</title><rect x="224.0" y="643.0" width="465.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="227.0" y="654.0">ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$273/..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entity$2 (10,516 samples, 39.43%)</title><rect x="224.0" y="627.0" width="465.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.0" y="638.0">ru/mail/polis/service/shakhmin/ReplicatedHttpServer.lambda$entit..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.MetaRequest (1,085 samples, 4.07%)</title><rect x="224.0" y="611.0" width="48.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="227.0" y="622.0">ru.m..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.delete (5,704 samples, 21.39%)</title><rect x="272.0" y="611.0" width="252.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="275.0" y="622.0">ru/mail/polis/service/shakhmin/Htt..</text>
</g>
<g>
<title>java/lang/String.getBytes (61 samples, 0.23%)</title><rect x="272.0" y="595.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="275.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (61 samples, 0.23%)</title><rect x="272.0" y="579.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="275.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (61 samples, 0.23%)</title><rect x="272.0" y="563.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="275.0" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (61 samples, 0.23%)</title><rect x="272.0" y="547.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="275.0" y="558.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.23%)</title><rect x="272.0" y="531.0" width="2.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="275.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (746 samples, 2.80%)</title><rect x="274.7" y="595.0" width="33.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="277.7" y="606.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (746 samples, 2.80%)</title><rect x="274.7" y="579.0" width="33.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="277.7" y="590.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$274/448387530.get$Lambda (71 samples, 0.27%)</title><rect x="274.7" y="563.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="277.7" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$274 (71 samples, 0.27%)</title><rect x="274.7" y="547.0" width="3.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="277.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$275/2078872434.get$Lambda (75 samples, 0.28%)</title><rect x="277.9" y="563.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.9" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$275 (75 samples, 0.28%)</title><rect x="277.9" y="547.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="280.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$276/306258906.get$Lambda (90 samples, 0.34%)</title><rect x="281.2" y="563.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.2" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$276 (90 samples, 0.34%)</title><rect x="281.2" y="547.0" width="4.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="284.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$278/375266651.get$Lambda (510 samples, 1.91%)</title><rect x="285.2" y="563.0" width="22.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="288.2" y="574.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$278 (510 samples, 1.91%)</title><rect x="285.2" y="547.0" width="22.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="288.2" y="558.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (135 samples, 0.51%)</title><rect x="307.7" y="595.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="310.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (135 samples, 0.51%)</title><rect x="307.7" y="579.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="310.7" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (135 samples, 0.51%)</title><rect x="307.7" y="563.0" width="6.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="310.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (1,594 samples, 5.98%)</title><rect x="313.7" y="595.0" width="70.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="316.7" y="606.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (1,594 samples, 5.98%)</title><rect x="313.7" y="579.0" width="70.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="316.7" y="590.0">java/uti..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (1,015 samples, 3.81%)</title><rect x="313.7" y="563.0" width="44.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="316.7" y="574.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (579 samples, 2.17%)</title><rect x="358.6" y="563.0" width="25.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="361.6" y="574.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (579 samples, 2.17%)</title><rect x="358.6" y="547.0" width="25.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="361.6" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (1,041 samples, 3.90%)</title><rect x="384.2" y="595.0" width="46.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="387.2" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (1,041 samples, 3.90%)</title><rect x="384.2" y="579.0" width="46.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="387.2" y="590.0">java..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncRun (523 samples, 1.96%)</title><rect x="384.2" y="563.0" width="23.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="387.2" y="574.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (518 samples, 1.94%)</title><rect x="407.4" y="563.0" width="22.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="410.4" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenComposeAsync (197 samples, 0.74%)</title><rect x="430.3" y="595.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="433.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (197 samples, 0.74%)</title><rect x="430.3" y="579.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="433.3" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (123 samples, 0.46%)</title><rect x="430.3" y="563.0" width="5.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="433.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (74 samples, 0.28%)</title><rect x="435.8" y="563.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (74 samples, 0.28%)</title><rect x="435.8" y="547.0" width="3.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="438.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (187 samples, 0.70%)</title><rect x="439.0" y="595.0" width="8.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="442.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (187 samples, 0.70%)</title><rect x="439.0" y="579.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="442.0" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (128 samples, 0.48%)</title><rect x="439.0" y="563.0" width="5.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="442.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (59 samples, 0.22%)</title><rect x="444.7" y="563.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="447.7" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (59 samples, 0.22%)</title><rect x="444.7" y="547.0" width="2.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="447.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.handleLocally (210 samples, 0.79%)</title><rect x="447.3" y="595.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="450.3" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (73 samples, 0.27%)</title><rect x="447.3" y="579.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="450.3" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (73 samples, 0.27%)</title><rect x="447.3" y="563.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="450.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$111/1101527014.get$Lambda (73 samples, 0.27%)</title><rect x="447.3" y="547.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="450.3" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$111 (73 samples, 0.27%)</title><rect x="447.3" y="531.0" width="3.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="450.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (137 samples, 0.51%)</title><rect x="450.5" y="579.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (137 samples, 0.51%)</title><rect x="450.5" y="563.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="453.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (70 samples, 0.26%)</title><rect x="450.5" y="547.0" width="3.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="453.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (67 samples, 0.25%)</title><rect x="453.6" y="547.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="456.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.replicas (1,533 samples, 5.75%)</title><rect x="456.6" y="595.0" width="67.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="459.6" y="606.0">ru/mail..</text>
</g>
<g>
<title>java.util.ArrayList (74 samples, 0.28%)</title><rect x="456.6" y="579.0" width="3.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="459.6" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (287 samples, 1.08%)</title><rect x="459.9" y="579.0" width="12.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="462.9" y="590.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (73 samples, 0.27%)</title><rect x="459.9" y="563.0" width="3.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="462.9" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (214 samples, 0.80%)</title><rect x="463.1" y="563.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.1" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (126 samples, 0.47%)</title><rect x="463.1" y="547.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.1" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (126 samples, 0.47%)</title><rect x="463.1" y="531.0" width="5.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="466.1" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (88 samples, 0.33%)</title><rect x="468.7" y="547.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="471.7" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (88 samples, 0.33%)</title><rect x="468.7" y="531.0" width="3.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="471.7" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (55 samples, 0.21%)</title><rect x="472.6" y="579.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="475.6" y="590.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2 (55 samples, 0.21%)</title><rect x="472.6" y="563.0" width="2.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="475.6" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (191 samples, 0.72%)</title><rect x="475.0" y="579.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.0" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (191 samples, 0.72%)</title><rect x="475.0" y="563.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="478.0" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (191 samples, 0.72%)</title><rect x="475.0" y="547.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="478.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (191 samples, 0.72%)</title><rect x="475.0" y="531.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="478.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (191 samples, 0.72%)</title><rect x="475.0" y="515.0" width="8.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="478.0" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (191 samples, 0.72%)</title><rect x="475.0" y="499.0" width="8.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="478.0" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (7 samples, 0.03%)</title><rect x="483.5" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="486.5" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (7 samples, 0.03%)</title><rect x="483.5" y="563.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="486.5" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (153 samples, 0.57%)</title><rect x="483.8" y="579.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.8" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (153 samples, 0.57%)</title><rect x="483.8" y="563.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.8" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (153 samples, 0.57%)</title><rect x="483.8" y="547.0" width="6.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="486.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.firstReplica (766 samples, 2.87%)</title><rect x="490.5" y="579.0" width="33.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="493.5" y="590.0">ru..</text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (619 samples, 2.32%)</title><rect x="490.5" y="563.0" width="27.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="493.5" y="574.0">c..</text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (381 samples, 1.43%)</title><rect x="490.5" y="547.0" width="16.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="493.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (381 samples, 1.43%)</title><rect x="490.5" y="531.0" width="16.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="493.5" y="542.0"></text>
</g>
<g>
<title>com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher (137 samples, 0.51%)</title><rect x="490.5" y="515.0" width="6.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="493.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (244 samples, 0.91%)</title><rect x="496.6" y="515.0" width="10.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="499.6" y="526.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (244 samples, 0.91%)</title><rect x="496.6" y="499.0" width="10.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="499.6" y="510.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (244 samples, 0.91%)</title><rect x="496.6" y="483.0" width="10.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.6" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (244 samples, 0.91%)</title><rect x="496.6" y="467.0" width="10.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.6" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (131 samples, 0.49%)</title><rect x="496.6" y="451.0" width="5.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="499.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (113 samples, 0.42%)</title><rect x="502.4" y="451.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="505.4" y="462.0"></text>
</g>
<g>
<title>byte[] (113 samples, 0.42%)</title><rect x="502.4" y="435.0" width="5.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="505.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (238 samples, 0.89%)</title><rect x="507.4" y="547.0" width="10.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="510.4" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (238 samples, 0.89%)</title><rect x="507.4" y="531.0" width="10.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="510.4" y="542.0"></text>
</g>
<g>
<title>byte[] (89 samples, 0.33%)</title><rect x="507.4" y="515.0" width="3.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="510.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (149 samples, 0.56%)</title><rect x="511.3" y="515.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="514.3" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (149 samples, 0.56%)</title><rect x="511.3" y="499.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="514.3" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (149 samples, 0.56%)</title><rect x="511.3" y="483.0" width="6.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="514.3" y="494.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (72 samples, 0.27%)</title><rect x="517.9" y="563.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.9" y="574.0"></text>
</g>
<g>
<title>java.lang.Long (72 samples, 0.27%)</title><rect x="517.9" y="547.0" width="3.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="520.9" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (71 samples, 0.27%)</title><rect x="521.1" y="563.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="524.1" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (71 samples, 0.27%)</title><rect x="521.1" y="547.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.1" y="558.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (71 samples, 0.27%)</title><rect x="521.1" y="531.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="524.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/MetaRequest.&lt;init&gt; (3,727 samples, 13.98%)</title><rect x="524.4" y="611.0" width="164.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="527.4" y="622.0">ru/mail/polis/service..</text>
</g>
<g>
<title>java/lang/String.substring (1,199 samples, 4.50%)</title><rect x="524.4" y="595.0" width="53.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="527.4" y="606.0">java/..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,199 samples, 4.50%)</title><rect x="524.4" y="579.0" width="53.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="527.4" y="590.0">java/..</text>
</g>
<g>
<title>java.lang.String (591 samples, 2.22%)</title><rect x="524.4" y="563.0" width="26.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="527.4" y="574.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (608 samples, 2.28%)</title><rect x="550.6" y="563.0" width="26.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="553.6" y="574.0">j..</text>
</g>
<g>
<title>byte[] (608 samples, 2.28%)</title><rect x="550.6" y="547.0" width="26.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="553.6" y="558.0">b..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (192 samples, 0.72%)</title><rect x="577.5" y="595.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.5" y="606.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (149 samples, 0.56%)</title><rect x="577.5" y="579.0" width="6.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="580.5" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (43 samples, 0.16%)</title><rect x="584.1" y="579.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="587.1" y="590.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.16%)</title><rect x="584.1" y="563.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="587.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,104 samples, 4.14%)</title><rect x="586.0" y="595.0" width="48.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="589.0" y="606.0">java..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,104 samples, 4.14%)</title><rect x="586.0" y="579.0" width="48.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.0" y="590.0">java..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,104 samples, 4.14%)</title><rect x="586.0" y="563.0" width="48.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="589.0" y="574.0">java..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,232 samples, 4.62%)</title><rect x="634.8" y="595.0" width="54.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.8" y="606.0">one/n..</text>
</g>
<g>
<title>java/lang/String.substring (1,232 samples, 4.62%)</title><rect x="634.8" y="579.0" width="54.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.8" y="590.0">java/..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,232 samples, 4.62%)</title><rect x="634.8" y="563.0" width="54.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.8" y="574.0">java/..</text>
</g>
<g>
<title>java.lang.String (572 samples, 2.14%)</title><rect x="634.8" y="547.0" width="25.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="637.8" y="558.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (660 samples, 2.47%)</title><rect x="660.1" y="547.0" width="29.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.1" y="558.0">ja..</text>
</g>
<g>
<title>byte[] (660 samples, 2.47%)</title><rect x="660.1" y="531.0" width="29.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="663.1" y="542.0">by..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (2,134 samples, 8.00%)</title><rect x="689.3" y="691.0" width="94.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="692.3" y="702.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (2,134 samples, 8.00%)</title><rect x="689.3" y="675.0" width="94.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="692.3" y="686.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (2,134 samples, 8.00%)</title><rect x="689.3" y="659.0" width="94.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="692.3" y="670.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (2,134 samples, 8.00%)</title><rect x="689.3" y="643.0" width="94.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.3" y="654.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (2,134 samples, 8.00%)</title><rect x="689.3" y="627.0" width="94.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="692.3" y="638.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.exec (242 samples, 0.91%)</title><rect x="689.3" y="611.0" width="10.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="692.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (242 samples, 0.91%)</title><rect x="689.3" y="595.0" width="10.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="692.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$278/375266651.run (242 samples, 0.91%)</title><rect x="689.3" y="579.0" width="10.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="692.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$delete$16 (242 samples, 0.91%)</title><rect x="689.3" y="563.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="692.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (22 samples, 0.08%)</title><rect x="689.3" y="547.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (22 samples, 0.08%)</title><rect x="689.3" y="531.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="692.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (22 samples, 0.08%)</title><rect x="689.3" y="515.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.08%)</title><rect x="689.3" y="499.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="692.3" y="510.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.08%)</title><rect x="689.3" y="483.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="692.3" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (35 samples, 0.13%)</title><rect x="690.3" y="547.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.3" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (35 samples, 0.13%)</title><rect x="690.3" y="531.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="693.3" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (35 samples, 0.13%)</title><rect x="690.3" y="515.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="693.3" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Response (13 samples, 0.05%)</title><rect x="691.9" y="547.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="694.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (51 samples, 0.19%)</title><rect x="692.4" y="547.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.4" y="558.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.09%)</title><rect x="692.4" y="531.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="695.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 0.06%)</title><rect x="693.5" y="531.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="696.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.04%)</title><rect x="694.2" y="531.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="697.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (29 samples, 0.11%)</title><rect x="694.7" y="547.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="697.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (29 samples, 0.11%)</title><rect x="694.7" y="531.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (29 samples, 0.11%)</title><rect x="694.7" y="515.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.tombstone (12 samples, 0.04%)</title><rect x="694.7" y="499.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.7" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (12 samples, 0.04%)</title><rect x="694.7" y="483.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="697.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (17 samples, 0.06%)</title><rect x="695.2" y="499.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="698.2" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (17 samples, 0.06%)</title><rect x="695.2" y="483.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="698.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (92 samples, 0.34%)</title><rect x="696.0" y="547.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.0" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (92 samples, 0.34%)</title><rect x="696.0" y="531.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (63 samples, 0.24%)</title><rect x="696.0" y="515.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (43 samples, 0.16%)</title><rect x="696.0" y="499.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.0" y="510.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (43 samples, 0.16%)</title><rect x="696.0" y="483.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.0" y="494.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.16%)</title><rect x="696.0" y="467.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="699.0" y="478.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (20 samples, 0.07%)</title><rect x="697.9" y="499.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="700.9" y="510.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (20 samples, 0.07%)</title><rect x="697.9" y="483.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="700.9" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (29 samples, 0.11%)</title><rect x="698.8" y="515.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="701.8" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (29 samples, 0.11%)</title><rect x="698.8" y="499.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="701.8" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.11%)</title><rect x="698.8" y="483.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.8" y="494.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.04%)</title><rect x="698.8" y="467.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="701.8" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (19 samples, 0.07%)</title><rect x="699.2" y="467.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="702.2" y="478.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.07%)</title><rect x="699.2" y="451.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="702.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.exec (42 samples, 0.16%)</title><rect x="700.0" y="611.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="703.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (42 samples, 0.16%)</title><rect x="700.0" y="595.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="703.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$111/1101527014.get (42 samples, 0.16%)</title><rect x="700.0" y="579.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="703.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$handleLocally$24 (42 samples, 0.16%)</title><rect x="700.0" y="563.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="703.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$274/448387530.run (42 samples, 0.16%)</title><rect x="700.0" y="547.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="703.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$delete$18 (42 samples, 0.16%)</title><rect x="700.0" y="531.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="703.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.removeFromDao (42 samples, 0.16%)</title><rect x="700.0" y="515.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="703.0" y="526.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (17 samples, 0.06%)</title><rect x="700.0" y="499.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="703.0" y="510.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (17 samples, 0.06%)</title><rect x="700.0" y="483.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="703.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (17 samples, 0.06%)</title><rect x="700.0" y="467.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="703.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (17 samples, 0.06%)</title><rect x="700.0" y="451.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="703.0" y="462.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.06%)</title><rect x="700.0" y="435.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="703.0" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.04%)</title><rect x="700.8" y="499.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="703.8" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.04%)</title><rect x="700.8" y="483.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.8" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (10 samples, 0.04%)</title><rect x="700.8" y="467.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="703.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/LSMDao.remove (15 samples, 0.06%)</title><rect x="701.2" y="499.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="704.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTablePool.remove (15 samples, 0.06%)</title><rect x="701.2" y="483.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/MemTable.remove (15 samples, 0.06%)</title><rect x="701.2" y="467.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Cell.tombstone (8 samples, 0.03%)</title><rect x="701.2" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="704.2" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Cell (8 samples, 0.03%)</title><rect x="701.2" y="435.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="704.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/shakhmin/Row.of (7 samples, 0.03%)</title><rect x="701.6" y="451.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="704.6" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.shakhmin.Row (7 samples, 0.03%)</title><rect x="701.6" y="435.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="704.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (1,850 samples, 6.94%)</title><rect x="701.9" y="611.0" width="81.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.9" y="622.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,755 samples, 6.58%)</title><rect x="701.9" y="595.0" width="77.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="704.9" y="606.0">java/util..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (11 samples, 0.04%)</title><rect x="701.9" y="579.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="704.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$275/2078872434.apply (1,744 samples, 6.54%)</title><rect x="702.4" y="579.0" width="77.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.4" y="590.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$delete$19 (1,744 samples, 6.54%)</title><rect x="702.4" y="563.0" width="77.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="705.4" y="574.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getResponsesFromReplicas (1,744 samples, 6.54%)</title><rect x="702.4" y="547.0" width="77.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.4" y="558.0">ru/mail/p..</text>
</g>
<g>
<title>java.util.ArrayList (6 samples, 0.02%)</title><rect x="702.4" y="531.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="705.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (47 samples, 0.18%)</title><rect x="702.7" y="531.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="705.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1000975683.invoke (47 samples, 0.18%)</title><rect x="702.7" y="515.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="705.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (47 samples, 0.18%)</title><rect x="702.7" y="499.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (14 samples, 0.05%)</title><rect x="702.7" y="483.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.7" y="494.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.05%)</title><rect x="702.7" y="467.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="705.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (33 samples, 0.12%)</title><rect x="703.3" y="483.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="706.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (33 samples, 0.12%)</title><rect x="703.3" y="467.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="706.3" y="478.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.12%)</title><rect x="703.3" y="451.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="706.3" y="462.0"></text>
</g>
<g>
<title>java/net/URI.create (193 samples, 0.72%)</title><rect x="704.7" y="531.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.7" y="542.0"></text>
</g>
<g>
<title>java.net.URI (41 samples, 0.15%)</title><rect x="704.7" y="515.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="707.7" y="526.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (152 samples, 0.57%)</title><rect x="706.5" y="515.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.5" y="526.0"></text>
</g>
<g>
<title>java.net.URI$Parser (14 samples, 0.05%)</title><rect x="706.5" y="499.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="709.5" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (138 samples, 0.52%)</title><rect x="707.2" y="499.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="710.2" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (24 samples, 0.09%)</title><rect x="707.2" y="483.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="710.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (24 samples, 0.09%)</title><rect x="707.2" y="467.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.2" y="478.0"></text>
</g>
<g>
<title>java.lang.String (7 samples, 0.03%)</title><rect x="707.2" y="451.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="710.2" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.06%)</title><rect x="707.5" y="451.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.5" y="462.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.06%)</title><rect x="707.5" y="435.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="710.5" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (114 samples, 0.43%)</title><rect x="708.2" y="483.0" width="5.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="711.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (60 samples, 0.22%)</title><rect x="708.2" y="467.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="711.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (60 samples, 0.22%)</title><rect x="708.2" y="451.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.2" y="462.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.09%)</title><rect x="708.2" y="435.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="711.2" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (36 samples, 0.13%)</title><rect x="709.3" y="435.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.3" y="446.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.13%)</title><rect x="709.3" y="419.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="712.3" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (54 samples, 0.20%)</title><rect x="710.9" y="467.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="713.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (29 samples, 0.11%)</title><rect x="710.9" y="451.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="713.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.11%)</title><rect x="710.9" y="435.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="713.9" y="446.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.06%)</title><rect x="710.9" y="419.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="713.9" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (14 samples, 0.05%)</title><rect x="711.5" y="419.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="714.5" y="430.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.05%)</title><rect x="711.5" y="403.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="714.5" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (25 samples, 0.09%)</title><rect x="712.2" y="451.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="715.2" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (25 samples, 0.09%)</title><rect x="712.2" y="435.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="715.2" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (25 samples, 0.09%)</title><rect x="712.2" y="419.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="715.2" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (25 samples, 0.09%)</title><rect x="712.2" y="403.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="715.2" y="414.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.05%)</title><rect x="712.2" y="387.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="715.2" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (12 samples, 0.04%)</title><rect x="712.7" y="387.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="715.7" y="398.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.04%)</title><rect x="712.7" y="371.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="715.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (56 samples, 0.21%)</title><rect x="713.3" y="531.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="716.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (23 samples, 0.09%)</title><rect x="713.3" y="515.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="716.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (33 samples, 0.12%)</title><rect x="714.3" y="515.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="717.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (10 samples, 0.04%)</title><rect x="714.3" y="499.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="717.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (23 samples, 0.09%)</title><rect x="714.7" y="499.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="717.7" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (23 samples, 0.09%)</title><rect x="714.7" y="483.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="717.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.04%)</title><rect x="715.8" y="531.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.04%)</title><rect x="715.8" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="718.8" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.04%)</title><rect x="715.8" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="718.8" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (12 samples, 0.04%)</title><rect x="715.8" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="718.8" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (12 samples, 0.04%)</title><rect x="715.8" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.8" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.04%)</title><rect x="715.8" y="451.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="718.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (965 samples, 3.62%)</title><rect x="716.3" y="531.0" width="42.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.3" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (965 samples, 3.62%)</title><rect x="716.3" y="515.0" width="42.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.3" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (965 samples, 3.62%)</title><rect x="716.3" y="499.0" width="42.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.3" y="510.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (965 samples, 3.62%)</title><rect x="716.3" y="483.0" width="42.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.3" y="494.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (35 samples, 0.13%)</title><rect x="716.4" y="467.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="719.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (35 samples, 0.13%)</title><rect x="716.4" y="451.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (20 samples, 0.07%)</title><rect x="716.4" y="435.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="719.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.06%)</title><rect x="717.3" y="435.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.06%)</title><rect x="717.3" y="419.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.06%)</title><rect x="717.3" y="403.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="720.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (45 samples, 0.17%)</title><rect x="718.0" y="467.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="721.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (45 samples, 0.17%)</title><rect x="718.0" y="451.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="721.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (15 samples, 0.06%)</title><rect x="718.0" y="435.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="721.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.11%)</title><rect x="718.6" y="435.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="721.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.11%)</title><rect x="718.6" y="419.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="721.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.11%)</title><rect x="718.6" y="403.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="721.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (23 samples, 0.09%)</title><rect x="720.0" y="467.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="723.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (53 samples, 0.20%)</title><rect x="721.0" y="467.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="724.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (460 samples, 1.72%)</title><rect x="723.3" y="467.0" width="20.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="726.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (64 samples, 0.24%)</title><rect x="723.3" y="451.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="726.3" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (46 samples, 0.17%)</title><rect x="723.3" y="435.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="726.3" y="446.0"></text>
</g>
<g>
<title>java/util/List.spliterator (19 samples, 0.07%)</title><rect x="723.3" y="419.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="726.3" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (19 samples, 0.07%)</title><rect x="723.3" y="403.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="726.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (27 samples, 0.10%)</title><rect x="724.2" y="419.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="727.2" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (27 samples, 0.10%)</title><rect x="724.2" y="403.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="727.2" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (18 samples, 0.07%)</title><rect x="725.4" y="435.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="728.4" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (18 samples, 0.07%)</title><rect x="725.4" y="419.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="728.4" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (18 samples, 0.07%)</title><rect x="725.4" y="403.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="728.4" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/78204644.get (18 samples, 0.07%)</title><rect x="725.4" y="387.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="728.4" y="398.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (18 samples, 0.07%)</title><rect x="725.4" y="371.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="728.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (186 samples, 0.70%)</title><rect x="726.2" y="451.0" width="8.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="729.2" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (186 samples, 0.70%)</title><rect x="726.2" y="435.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="729.2" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (7 samples, 0.03%)</title><rect x="726.2" y="419.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="729.2" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.04%)</title><rect x="726.5" y="419.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="729.5" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (24 samples, 0.09%)</title><rect x="726.9" y="419.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="729.9" y="430.0"></text>
</g>
<g>
<title>java.util.TreeSet (6 samples, 0.02%)</title><rect x="728.0" y="419.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="731.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.07%)</title><rect x="728.2" y="419.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="731.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.07%)</title><rect x="728.2" y="403.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.2" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.get$Lambda (18 samples, 0.07%)</title><rect x="728.2" y="387.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="731.2" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$126 (18 samples, 0.07%)</title><rect x="728.2" y="371.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="731.2" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (78 samples, 0.29%)</title><rect x="729.0" y="419.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.0" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (78 samples, 0.29%)</title><rect x="729.0" y="403.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="732.0" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.accept (78 samples, 0.29%)</title><rect x="729.0" y="387.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="732.0" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (78 samples, 0.29%)</title><rect x="729.0" y="371.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.0" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (30 samples, 0.11%)</title><rect x="729.0" y="355.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.0" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.accept (30 samples, 0.11%)</title><rect x="729.0" y="339.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="732.0" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (30 samples, 0.11%)</title><rect x="729.0" y="323.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="732.0" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (30 samples, 0.11%)</title><rect x="729.0" y="307.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="732.0" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (30 samples, 0.11%)</title><rect x="729.0" y="291.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="732.0" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (30 samples, 0.11%)</title><rect x="729.0" y="275.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.0" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (30 samples, 0.11%)</title><rect x="729.0" y="259.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="732.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (30 samples, 0.11%)</title><rect x="729.0" y="243.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="732.0" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (30 samples, 0.11%)</title><rect x="729.0" y="227.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="732.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="730.4" y="355.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="730.4" y="339.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="733.4" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.get$Lambda (9 samples, 0.03%)</title><rect x="730.4" y="323.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="733.4" y="334.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (9 samples, 0.03%)</title><rect x="730.4" y="307.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="733.4" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (18 samples, 0.07%)</title><rect x="730.8" y="355.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.8" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (18 samples, 0.07%)</title><rect x="730.8" y="339.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="733.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (13 samples, 0.05%)</title><rect x="730.8" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.8" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.05%)</title><rect x="730.8" y="307.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.05%)</title><rect x="730.8" y="291.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="733.8" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (21 samples, 0.08%)</title><rect x="731.5" y="355.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="734.5" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (21 samples, 0.08%)</title><rect x="731.5" y="339.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="734.5" y="350.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (16 samples, 0.06%)</title><rect x="732.5" y="419.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.5" y="430.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (16 samples, 0.06%)</title><rect x="732.5" y="403.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="735.5" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (27 samples, 0.10%)</title><rect x="733.2" y="419.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="736.2" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (27 samples, 0.10%)</title><rect x="733.2" y="403.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="736.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (6 samples, 0.02%)</title><rect x="734.4" y="451.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="737.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (146 samples, 0.55%)</title><rect x="734.6" y="451.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="737.6" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (146 samples, 0.55%)</title><rect x="734.6" y="435.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="737.6" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (131 samples, 0.49%)</title><rect x="734.6" y="419.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="737.6" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (131 samples, 0.49%)</title><rect x="734.6" y="403.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.6" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (131 samples, 0.49%)</title><rect x="734.6" y="387.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="737.6" y="398.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (32 samples, 0.12%)</title><rect x="734.6" y="371.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="737.6" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (44 samples, 0.16%)</title><rect x="736.1" y="371.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="739.1" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (44 samples, 0.16%)</title><rect x="736.1" y="355.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="739.1" y="366.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.16%)</title><rect x="736.1" y="339.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="739.1" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (55 samples, 0.21%)</title><rect x="738.0" y="371.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="741.0" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (55 samples, 0.21%)</title><rect x="738.0" y="355.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="741.0" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (55 samples, 0.21%)</title><rect x="738.0" y="339.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="741.0" y="350.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.21%)</title><rect x="738.0" y="323.0" width="2.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="741.0" y="334.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (15 samples, 0.06%)</title><rect x="740.4" y="419.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="743.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (20 samples, 0.07%)</title><rect x="741.1" y="451.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.1" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (20 samples, 0.07%)</title><rect x="741.1" y="435.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="744.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (38 samples, 0.14%)</title><rect x="742.0" y="451.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="745.0" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (17 samples, 0.06%)</title><rect x="742.0" y="435.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="745.0" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (16 samples, 0.06%)</title><rect x="743.0" y="435.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="746.0" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (16 samples, 0.06%)</title><rect x="743.0" y="419.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="746.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (229 samples, 0.86%)</title><rect x="743.7" y="467.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.7" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (9 samples, 0.03%)</title><rect x="743.7" y="451.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="746.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (36 samples, 0.13%)</title><rect x="744.1" y="451.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="747.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (10 samples, 0.04%)</title><rect x="745.7" y="451.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="748.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (10 samples, 0.04%)</title><rect x="745.7" y="435.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="748.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (174 samples, 0.65%)</title><rect x="746.1" y="451.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="749.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (174 samples, 0.65%)</title><rect x="746.1" y="435.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="749.1" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.06%)</title><rect x="746.1" y="419.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="749.1" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList (10 samples, 0.04%)</title><rect x="746.8" y="419.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="749.8" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (102 samples, 0.38%)</title><rect x="747.2" y="419.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="750.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (102 samples, 0.38%)</title><rect x="747.2" y="403.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="750.2" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (102 samples, 0.38%)</title><rect x="747.2" y="387.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.2" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (102 samples, 0.38%)</title><rect x="747.2" y="371.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="750.2" y="382.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (102 samples, 0.38%)</title><rect x="747.2" y="355.0" width="4.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="750.2" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (27 samples, 0.10%)</title><rect x="751.7" y="419.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="754.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (27 samples, 0.10%)</title><rect x="751.7" y="403.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (9 samples, 0.03%)</title><rect x="751.7" y="387.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="754.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (9 samples, 0.03%)</title><rect x="751.7" y="371.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="754.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (18 samples, 0.07%)</title><rect x="752.1" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="755.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (18 samples, 0.07%)</title><rect x="752.1" y="371.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="755.1" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (20 samples, 0.07%)</title><rect x="752.9" y="419.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="755.9" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (20 samples, 0.07%)</title><rect x="752.9" y="403.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="755.9" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (20 samples, 0.07%)</title><rect x="752.9" y="387.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="755.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (117 samples, 0.44%)</title><rect x="753.8" y="467.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="756.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (17 samples, 0.06%)</title><rect x="753.8" y="451.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="756.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.04%)</title><rect x="754.0" y="435.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="757.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 0.04%)</title><rect x="754.0" y="419.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="757.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (12 samples, 0.04%)</title><rect x="754.0" y="403.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="757.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.05%)</title><rect x="754.6" y="451.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="757.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (87 samples, 0.33%)</title><rect x="755.1" y="451.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="758.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.07%)</title><rect x="755.1" y="435.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="758.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.07%)</title><rect x="755.1" y="419.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="758.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/1711595431.get$Lambda (12 samples, 0.04%)</title><rect x="755.1" y="403.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="758.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$133 (12 samples, 0.04%)</title><rect x="755.1" y="387.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="758.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$134/2113557447.get$Lambda (7 samples, 0.03%)</title><rect x="755.7" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="758.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$134 (7 samples, 0.03%)</title><rect x="755.7" y="387.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="758.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (68 samples, 0.25%)</title><rect x="756.0" y="435.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (68 samples, 0.25%)</title><rect x="756.0" y="419.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (40 samples, 0.15%)</title><rect x="756.0" y="403.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="759.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.10%)</title><rect x="757.7" y="403.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="760.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.10%)</title><rect x="757.7" y="387.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="760.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.10%)</title><rect x="757.7" y="371.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="760.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (224 samples, 0.84%)</title><rect x="759.0" y="531.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (17 samples, 0.06%)</title><rect x="759.0" y="515.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="762.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (207 samples, 0.78%)</title><rect x="759.7" y="515.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.7" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (207 samples, 0.78%)</title><rect x="759.7" y="499.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="762.7" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (207 samples, 0.78%)</title><rect x="759.7" y="483.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.7" y="494.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (13 samples, 0.05%)</title><rect x="759.7" y="467.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="762.7" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (16 samples, 0.06%)</title><rect x="760.3" y="467.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="763.3" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (18 samples, 0.07%)</title><rect x="761.0" y="467.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="764.0" y="478.0"></text>
</g>
<g>
<title>java.util.TreeSet (10 samples, 0.04%)</title><rect x="761.8" y="467.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="764.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.05%)</title><rect x="762.3" y="467.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="765.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.05%)</title><rect x="762.3" y="451.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="765.3" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.get$Lambda (14 samples, 0.05%)</title><rect x="762.3" y="435.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="765.3" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$126 (14 samples, 0.05%)</title><rect x="762.3" y="419.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="765.3" y="430.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (15 samples, 0.06%)</title><rect x="762.9" y="467.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="765.9" y="478.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (15 samples, 0.06%)</title><rect x="762.9" y="451.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="765.9" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (94 samples, 0.35%)</title><rect x="763.5" y="467.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="766.5" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$126/1936481830.accept (94 samples, 0.35%)</title><rect x="763.5" y="451.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="766.5" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (94 samples, 0.35%)</title><rect x="763.5" y="435.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="766.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.04%)</title><rect x="763.5" y="419.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="766.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.04%)</title><rect x="763.5" y="403.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.5" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.get$Lambda (11 samples, 0.04%)</title><rect x="763.5" y="387.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="766.5" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$128 (11 samples, 0.04%)</title><rect x="763.5" y="371.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="766.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (50 samples, 0.19%)</title><rect x="764.0" y="419.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="767.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$128/2001978515.accept (50 samples, 0.19%)</title><rect x="764.0" y="403.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="767.0" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (50 samples, 0.19%)</title><rect x="764.0" y="387.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="767.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (50 samples, 0.19%)</title><rect x="764.0" y="371.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="767.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (50 samples, 0.19%)</title><rect x="764.0" y="355.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="767.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (50 samples, 0.19%)</title><rect x="764.0" y="339.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="767.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (50 samples, 0.19%)</title><rect x="764.0" y="323.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="767.0" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (50 samples, 0.19%)</title><rect x="764.0" y="307.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="767.0" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (50 samples, 0.19%)</title><rect x="764.0" y="291.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="767.0" y="302.0"></text>
</g>
<g>
<title>java/util/List.copyOf (21 samples, 0.08%)</title><rect x="766.2" y="419.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="769.2" y="430.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (21 samples, 0.08%)</title><rect x="766.2" y="403.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="769.2" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (10 samples, 0.04%)</title><rect x="766.2" y="387.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="769.2" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (10 samples, 0.04%)</title><rect x="766.2" y="371.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="769.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.04%)</title><rect x="766.2" y="355.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="769.2" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (11 samples, 0.04%)</title><rect x="766.7" y="387.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.7" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (11 samples, 0.04%)</title><rect x="766.7" y="371.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="769.7" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (12 samples, 0.04%)</title><rect x="767.2" y="419.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="770.2" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (12 samples, 0.04%)</title><rect x="767.2" y="403.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="770.2" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (27 samples, 0.10%)</title><rect x="767.7" y="467.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.7" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (27 samples, 0.10%)</title><rect x="767.7" y="451.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="770.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (39 samples, 0.15%)</title><rect x="768.9" y="531.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (39 samples, 0.15%)</title><rect x="768.9" y="515.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="771.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (39 samples, 0.15%)</title><rect x="768.9" y="499.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.9" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.04%)</title><rect x="768.9" y="483.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="771.9" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (14 samples, 0.05%)</title><rect x="769.3" y="483.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="772.3" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.05%)</title><rect x="769.3" y="467.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="772.3" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (15 samples, 0.06%)</title><rect x="770.0" y="483.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="773.0" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (15 samples, 0.06%)</title><rect x="770.0" y="467.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="773.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.getFirstResponses (202 samples, 0.76%)</title><rect x="770.6" y="531.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (6 samples, 0.02%)</title><rect x="771.1" y="515.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="774.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1809201726.linkToTargetMethod (8 samples, 0.03%)</title><rect x="771.3" y="515.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1600727716.invokeStatic (8 samples, 0.03%)</title><rect x="771.3" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="774.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$142/147332196.get$Lambda (8 samples, 0.03%)</title><rect x="771.3" y="483.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="774.3" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.HttpService$$Lambda$142 (8 samples, 0.03%)</title><rect x="771.3" y="467.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="774.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (40 samples, 0.15%)</title><rect x="771.7" y="515.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (40 samples, 0.15%)</title><rect x="771.7" y="499.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="774.7" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (23 samples, 0.09%)</title><rect x="771.7" y="483.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="774.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.06%)</title><rect x="772.7" y="483.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="775.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.06%)</title><rect x="772.7" y="467.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="775.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.06%)</title><rect x="772.7" y="451.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="775.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (98 samples, 0.37%)</title><rect x="773.5" y="515.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="776.5" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Canceller (15 samples, 0.06%)</title><rect x="773.5" y="499.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="776.5" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Timeout (7 samples, 0.03%)</title><rect x="774.1" y="499.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="777.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (34 samples, 0.13%)</title><rect x="774.4" y="499.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="777.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (34 samples, 0.13%)</title><rect x="774.4" y="483.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="777.4" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask (26 samples, 0.10%)</title><rect x="774.4" y="467.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="777.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.&lt;init&gt; (8 samples, 0.03%)</title><rect x="775.6" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="778.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (8 samples, 0.03%)</title><rect x="775.6" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="778.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors.callable (8 samples, 0.03%)</title><rect x="775.6" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="778.6" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.Executors$RunnableAdapter (8 samples, 0.03%)</title><rect x="775.6" y="419.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="778.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (42 samples, 0.16%)</title><rect x="775.9" y="499.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (42 samples, 0.16%)</title><rect x="775.9" y="483.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="778.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (21 samples, 0.08%)</title><rect x="775.9" y="467.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="778.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.08%)</title><rect x="776.9" y="467.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="779.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.08%)</title><rect x="776.9" y="451.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.08%)</title><rect x="776.9" y="435.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="779.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (32 samples, 0.12%)</title><rect x="777.8" y="515.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="780.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (32 samples, 0.12%)</title><rect x="777.8" y="499.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="780.8" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (19 samples, 0.07%)</title><rect x="777.8" y="483.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="780.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.05%)</title><rect x="778.6" y="483.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.05%)</title><rect x="778.6" y="467.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="781.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.05%)</title><rect x="778.6" y="451.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="781.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (8 samples, 0.03%)</title><rect x="779.2" y="515.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="782.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (95 samples, 0.36%)</title><rect x="779.6" y="595.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="782.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (95 samples, 0.36%)</title><rect x="779.6" y="579.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$142/147332196.accept (22 samples, 0.08%)</title><rect x="779.6" y="563.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="782.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$getFirstResponses$25 (22 samples, 0.08%)</title><rect x="779.6" y="547.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="782.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (22 samples, 0.08%)</title><rect x="779.6" y="531.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="782.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.08%)</title><rect x="779.6" y="515.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="782.6" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.08%)</title><rect x="779.6" y="499.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="782.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$276/306258906.accept (73 samples, 0.27%)</title><rect x="780.5" y="563.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="783.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$delete$22 (73 samples, 0.27%)</title><rect x="780.5" y="547.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="783.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.handleResponses (73 samples, 0.27%)</title><rect x="780.5" y="531.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="783.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService$$Lambda$284/193388807.get (39 samples, 0.15%)</title><rect x="780.5" y="515.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="783.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.lambda$delete$21 (39 samples, 0.15%)</title><rect x="780.5" y="499.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="783.5" y="510.0"></text>
</g>
<g>
<title>one.nio.http.Response (6 samples, 0.02%)</title><rect x="780.5" y="483.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="783.5" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (33 samples, 0.12%)</title><rect x="780.8" y="483.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="783.8" y="494.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.06%)</title><rect x="780.8" y="467.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="783.8" y="478.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.04%)</title><rect x="781.5" y="467.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="784.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/HttpService.sendResponse (34 samples, 0.13%)</title><rect x="782.3" y="515.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="785.3" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (34 samples, 0.13%)</title><rect x="782.3" y="499.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="785.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (34 samples, 0.13%)</title><rect x="782.3" y="483.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="785.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (22 samples, 0.08%)</title><rect x="782.3" y="467.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="785.3" y="478.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (22 samples, 0.08%)</title><rect x="782.3" y="451.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="785.3" y="462.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.08%)</title><rect x="782.3" y="435.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="785.3" y="446.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (12 samples, 0.04%)</title><rect x="783.2" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="786.2" y="478.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (12 samples, 0.04%)</title><rect x="783.2" y="451.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="786.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (742 samples, 2.78%)</title><rect x="783.8" y="691.0" width="32.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="786.8" y="702.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.10%)</title><rect x="783.8" y="675.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="786.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.10%)</title><rect x="783.8" y="659.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="786.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$196/1558914017.get$Lambda (15 samples, 0.06%)</title><rect x="783.8" y="643.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="786.8" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$196 (15 samples, 0.06%)</title><rect x="783.8" y="627.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="786.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$200/1924589327.get$Lambda (7 samples, 0.03%)</title><rect x="784.6" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="787.6" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$200 (7 samples, 0.03%)</title><rect x="784.6" y="627.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="787.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/896644936.linkToTargetMethod (18 samples, 0.07%)</title><rect x="784.9" y="675.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="787.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.07%)</title><rect x="784.9" y="659.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="787.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$197/2022555883.get$Lambda (18 samples, 0.07%)</title><rect x="784.9" y="643.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="787.9" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$197 (18 samples, 0.07%)</title><rect x="784.9" y="627.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="787.9" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (143 samples, 0.54%)</title><rect x="785.7" y="675.0" width="6.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$198/1799291049.accept (114 samples, 0.43%)</title><rect x="785.7" y="659.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="788.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (114 samples, 0.43%)</title><rect x="785.7" y="643.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="788.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (114 samples, 0.43%)</title><rect x="785.7" y="627.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="788.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (114 samples, 0.43%)</title><rect x="785.7" y="611.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="788.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (114 samples, 0.43%)</title><rect x="785.7" y="595.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (114 samples, 0.43%)</title><rect x="785.7" y="579.0" width="5.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="788.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (114 samples, 0.43%)</title><rect x="785.7" y="563.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (114 samples, 0.43%)</title><rect x="785.7" y="547.0" width="5.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (114 samples, 0.43%)</title><rect x="785.7" y="531.0" width="5.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (114 samples, 0.43%)</title><rect x="785.7" y="515.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$157/1360780123.run (114 samples, 0.43%)</title><rect x="785.7" y="499.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="788.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (114 samples, 0.43%)</title><rect x="785.7" y="483.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (31 samples, 0.12%)</title><rect x="785.7" y="467.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (31 samples, 0.12%)</title><rect x="785.7" y="451.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (31 samples, 0.12%)</title><rect x="785.7" y="435.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="788.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (18 samples, 0.07%)</title><rect x="785.7" y="419.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="788.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (18 samples, 0.07%)</title><rect x="785.7" y="403.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.7" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (18 samples, 0.07%)</title><rect x="785.7" y="387.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="788.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (18 samples, 0.07%)</title><rect x="785.7" y="371.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.7" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (18 samples, 0.07%)</title><rect x="785.7" y="355.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="788.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.05%)</title><rect x="786.5" y="419.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="789.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.05%)</title><rect x="786.5" y="403.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.05%)</title><rect x="786.5" y="387.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="789.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.05%)</title><rect x="786.5" y="371.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (13 samples, 0.05%)</title><rect x="786.5" y="355.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (13 samples, 0.05%)</title><rect x="786.5" y="339.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="789.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (77 samples, 0.29%)</title><rect x="787.3" y="467.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="790.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (57 samples, 0.21%)</title><rect x="787.3" y="451.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="790.3" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (39 samples, 0.15%)</title><rect x="787.3" y="435.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="790.3" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (39 samples, 0.15%)</title><rect x="787.3" y="419.0" width="1.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="790.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (18 samples, 0.07%)</title><rect x="789.1" y="435.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="792.1" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (18 samples, 0.07%)</title><rect x="789.1" y="419.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="792.1" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (18 samples, 0.07%)</title><rect x="789.1" y="403.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="792.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (20 samples, 0.07%)</title><rect x="789.9" y="451.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="792.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$153/24269577.get (20 samples, 0.07%)</title><rect x="789.9" y="435.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="792.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (20 samples, 0.07%)</title><rect x="789.9" y="419.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (20 samples, 0.07%)</title><rect x="789.9" y="403.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="792.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (20 samples, 0.07%)</title><rect x="789.9" y="387.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="792.9" y="398.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.06%)</title><rect x="790.1" y="371.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="793.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$201/1629457336.accept (29 samples, 0.11%)</title><rect x="790.8" y="659.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="793.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (29 samples, 0.11%)</title><rect x="790.8" y="643.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="793.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$197/2022555883.run (29 samples, 0.11%)</title><rect x="790.8" y="627.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="793.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (29 samples, 0.11%)</title><rect x="790.8" y="611.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="793.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (29 samples, 0.11%)</title><rect x="790.8" y="595.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="793.8" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (29 samples, 0.11%)</title><rect x="790.8" y="579.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="793.8" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (29 samples, 0.11%)</title><rect x="790.8" y="563.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="793.8" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (29 samples, 0.11%)</title><rect x="790.8" y="547.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="793.8" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (109 samples, 0.41%)</title><rect x="792.0" y="675.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.0" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (109 samples, 0.41%)</title><rect x="792.0" y="659.0" width="4.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="795.0" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (30 samples, 0.11%)</title><rect x="796.9" y="675.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (14 samples, 0.05%)</title><rect x="796.9" y="659.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="799.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (14 samples, 0.05%)</title><rect x="796.9" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="799.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (14 samples, 0.05%)</title><rect x="796.9" y="627.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="799.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (14 samples, 0.05%)</title><rect x="796.9" y="611.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="799.9" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (14 samples, 0.05%)</title><rect x="796.9" y="595.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (14 samples, 0.05%)</title><rect x="796.9" y="579.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.9" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (14 samples, 0.05%)</title><rect x="796.9" y="563.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="799.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (16 samples, 0.06%)</title><rect x="797.5" y="659.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="800.5" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (16 samples, 0.06%)</title><rect x="797.5" y="643.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="800.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (117 samples, 0.44%)</title><rect x="798.2" y="675.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="801.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$159/717507571.run (58 samples, 0.22%)</title><rect x="798.2" y="659.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="801.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (58 samples, 0.22%)</title><rect x="798.2" y="643.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (58 samples, 0.22%)</title><rect x="798.2" y="627.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="801.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (58 samples, 0.22%)</title><rect x="798.2" y="611.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="801.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (58 samples, 0.22%)</title><rect x="798.2" y="595.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="801.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (58 samples, 0.22%)</title><rect x="798.2" y="579.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="801.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$157/1360780123.run (58 samples, 0.22%)</title><rect x="798.2" y="563.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="801.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (58 samples, 0.22%)</title><rect x="798.2" y="547.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="801.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (58 samples, 0.22%)</title><rect x="798.2" y="531.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="801.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (58 samples, 0.22%)</title><rect x="798.2" y="515.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="801.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (43 samples, 0.16%)</title><rect x="798.2" y="499.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="801.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (43 samples, 0.16%)</title><rect x="798.2" y="483.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="801.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (43 samples, 0.16%)</title><rect x="798.2" y="467.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="801.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/623247230.linkToTargetMethod (33 samples, 0.12%)</title><rect x="798.2" y="451.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="801.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/773662650.invoke (33 samples, 0.12%)</title><rect x="798.2" y="435.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="801.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.12%)</title><rect x="798.2" y="419.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="801.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (33 samples, 0.12%)</title><rect x="798.2" y="403.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (33 samples, 0.12%)</title><rect x="798.2" y="387.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="801.2" y="398.0"></text>
</g>
<g>
<title>byte[] (33 samples, 0.12%)</title><rect x="798.2" y="371.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="801.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (10 samples, 0.04%)</title><rect x="799.6" y="451.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="802.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.04%)</title><rect x="799.6" y="435.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="802.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.04%)</title><rect x="799.6" y="419.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="802.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206/1914759753.get$Lambda (10 samples, 0.04%)</title><rect x="799.6" y="403.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="802.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$206 (10 samples, 0.04%)</title><rect x="799.6" y="387.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="802.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (15 samples, 0.06%)</title><rect x="800.1" y="499.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="803.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.06%)</title><rect x="800.1" y="483.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="803.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.06%)</title><rect x="800.1" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="803.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (15 samples, 0.06%)</title><rect x="800.1" y="451.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="803.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.06%)</title><rect x="800.1" y="435.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="803.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (15 samples, 0.06%)</title><rect x="800.1" y="419.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="803.1" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (15 samples, 0.06%)</title><rect x="800.1" y="403.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="803.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$161/782771317.run (59 samples, 0.22%)</title><rect x="800.8" y="659.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="803.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (59 samples, 0.22%)</title><rect x="800.8" y="643.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="803.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.07%)</title><rect x="800.8" y="627.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="803.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.07%)</title><rect x="800.8" y="611.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="803.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$205/1532762392.get$Lambda (20 samples, 0.07%)</title><rect x="800.8" y="595.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="803.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$205 (20 samples, 0.07%)</title><rect x="800.8" y="579.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="803.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (39 samples, 0.15%)</title><rect x="801.6" y="627.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="804.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (39 samples, 0.15%)</title><rect x="801.6" y="611.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="804.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (39 samples, 0.15%)</title><rect x="801.6" y="595.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="804.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (38 samples, 0.14%)</title><rect x="801.6" y="579.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="804.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (129 samples, 0.48%)</title><rect x="803.4" y="675.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="806.4" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (19 samples, 0.07%)</title><rect x="803.4" y="659.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="806.4" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (19 samples, 0.07%)</title><rect x="803.4" y="643.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="806.4" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (19 samples, 0.07%)</title><rect x="803.4" y="627.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="806.4" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (19 samples, 0.07%)</title><rect x="803.4" y="611.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="806.4" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (19 samples, 0.07%)</title><rect x="803.4" y="595.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="806.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (110 samples, 0.41%)</title><rect x="804.2" y="659.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.05%)</title><rect x="804.2" y="643.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.05%)</title><rect x="804.2" y="627.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="807.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$247/693251949.get$Lambda (13 samples, 0.05%)</title><rect x="804.2" y="611.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="807.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$247 (13 samples, 0.05%)</title><rect x="804.2" y="595.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="807.2" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (30 samples, 0.11%)</title><rect x="804.8" y="643.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="807.8" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (30 samples, 0.11%)</title><rect x="804.8" y="627.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="807.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (10 samples, 0.04%)</title><rect x="806.1" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.1" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (10 samples, 0.04%)</title><rect x="806.1" y="627.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.1" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (10 samples, 0.04%)</title><rect x="806.1" y="611.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="809.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (57 samples, 0.21%)</title><rect x="806.5" y="643.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.5" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (25 samples, 0.09%)</title><rect x="806.5" y="627.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="809.5" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (32 samples, 0.12%)</title><rect x="807.7" y="627.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="810.7" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (32 samples, 0.12%)</title><rect x="807.7" y="611.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="810.7" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (32 samples, 0.12%)</title><rect x="807.7" y="595.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="810.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (122 samples, 0.46%)</title><rect x="809.1" y="675.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="812.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="809.1" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="812.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="809.1" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="812.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$195/395347517.get$Lambda (9 samples, 0.03%)</title><rect x="809.1" y="627.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.1" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$195 (9 samples, 0.03%)</title><rect x="809.1" y="611.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="812.1" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (66 samples, 0.25%)</title><rect x="809.5" y="659.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (29 samples, 0.11%)</title><rect x="809.5" y="643.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.5" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (29 samples, 0.11%)</title><rect x="809.5" y="627.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="812.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (37 samples, 0.14%)</title><rect x="810.8" y="643.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.8" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (37 samples, 0.14%)</title><rect x="810.8" y="627.0" width="1.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="813.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (47 samples, 0.18%)</title><rect x="812.4" y="659.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="815.4" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (47 samples, 0.18%)</title><rect x="812.4" y="643.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="815.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (24 samples, 0.09%)</title><rect x="814.5" y="675.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="817.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (24 samples, 0.09%)</title><rect x="814.5" y="659.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="817.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (24 samples, 0.09%)</title><rect x="814.5" y="643.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="817.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (24 samples, 0.09%)</title><rect x="814.5" y="627.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="817.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (7 samples, 0.03%)</title><rect x="814.5" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="817.5" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (7 samples, 0.03%)</title><rect x="814.5" y="595.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="817.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (17 samples, 0.06%)</title><rect x="814.8" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="817.8" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (17 samples, 0.06%)</title><rect x="814.8" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="817.8" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (17 samples, 0.06%)</title><rect x="814.8" y="579.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="817.8" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (17 samples, 0.06%)</title><rect x="814.8" y="563.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="817.8" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (17 samples, 0.06%)</title><rect x="814.8" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="817.8" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (17 samples, 0.06%)</title><rect x="814.8" y="531.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="817.8" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (16 samples, 0.06%)</title><rect x="815.5" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (16 samples, 0.06%)</title><rect x="815.5" y="659.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="818.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (16 samples, 0.06%)</title><rect x="815.5" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="818.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (16 samples, 0.06%)</title><rect x="815.5" y="627.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="818.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (14 samples, 0.05%)</title><rect x="815.5" y="611.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="818.5" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (14 samples, 0.05%)</title><rect x="815.5" y="595.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="818.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (8 samples, 0.03%)</title><rect x="816.2" y="675.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="819.2" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (8 samples, 0.03%)</title><rect x="816.2" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="819.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (8 samples, 0.03%)</title><rect x="816.2" y="643.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="819.2" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (8 samples, 0.03%)</title><rect x="816.2" y="627.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="819.2" y="638.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (130 samples, 0.49%)</title><rect x="816.6" y="691.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="819.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.createSession (130 samples, 0.49%)</title><rect x="816.6" y="675.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="819.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.createSession (130 samples, 0.49%)</title><rect x="816.6" y="659.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="819.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/StorageSession.&lt;init&gt; (129 samples, 0.48%)</title><rect x="816.6" y="643.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="819.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (129 samples, 0.48%)</title><rect x="816.6" y="627.0" width="5.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="819.6" y="638.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.03%)</title><rect x="816.6" y="611.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="819.6" y="622.0"></text>
</g>
<g>
<title>byte[] (120 samples, 0.45%)</title><rect x="817.0" y="611.0" width="5.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="820.0" y="622.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (8,309 samples, 31.16%)</title><rect x="822.3" y="691.0" width="367.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="825.3" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (106 samples, 0.40%)</title><rect x="822.3" y="675.0" width="4.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="825.3" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (106 samples, 0.40%)</title><rect x="822.3" y="659.0" width="4.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="825.3" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (8,203 samples, 30.76%)</title><rect x="827.0" y="675.0" width="363.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="830.0" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8,203 samples, 30.76%)</title><rect x="827.0" y="659.0" width="363.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="830.0" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (8,195 samples, 30.73%)</title><rect x="827.0" y="643.0" width="362.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="830.0" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,149 samples, 15.56%)</title><rect x="827.0" y="627.0" width="183.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.0" y="638.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,149 samples, 15.56%)</title><rect x="827.0" y="611.0" width="183.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="830.0" y="622.0">one/nio/http/HttpServer...</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3,898 samples, 14.62%)</title><rect x="827.0" y="595.0" width="172.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.0" y="606.0">RequestHandler1_entity..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (397 samples, 1.49%)</title><rect x="827.0" y="579.0" width="17.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (397 samples, 1.49%)</title><rect x="827.0" y="563.0" width="17.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="830.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (397 samples, 1.49%)</title><rect x="827.0" y="547.0" width="17.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String (173 samples, 0.65%)</title><rect x="827.0" y="531.0" width="7.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="830.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (224 samples, 0.84%)</title><rect x="834.7" y="531.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="837.7" y="542.0"></text>
</g>
<g>
<title>byte[] (224 samples, 0.84%)</title><rect x="834.7" y="515.0" width="9.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="837.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.entity (3,501 samples, 13.13%)</title><rect x="844.6" y="579.0" width="154.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="847.6" y="590.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1167829160.linkToTargetMethod (138 samples, 0.52%)</title><rect x="844.6" y="563.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="847.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1899887676.invokeStatic (138 samples, 0.52%)</title><rect x="844.6" y="547.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="847.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer$$Lambda$273/1186486267.get$Lambda (138 samples, 0.52%)</title><rect x="844.6" y="531.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="847.6" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.ReplicatedHttpServer$$Lambda$273 (138 samples, 0.52%)</title><rect x="844.6" y="515.0" width="6.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="847.6" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (65 samples, 0.24%)</title><rect x="850.7" y="563.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="853.7" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (65 samples, 0.24%)</title><rect x="850.7" y="547.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="853.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (65 samples, 0.24%)</title><rect x="850.7" y="531.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="853.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.15%)</title><rect x="850.7" y="515.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="853.7" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (25 samples, 0.09%)</title><rect x="852.5" y="515.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.5" y="526.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.09%)</title><rect x="852.5" y="499.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="855.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/ReplicatedHttpServer.executeAsync (84 samples, 0.31%)</title><rect x="853.6" y="563.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="856.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (84 samples, 0.31%)</title><rect x="853.6" y="547.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="856.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (84 samples, 0.31%)</title><rect x="853.6" y="531.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (83 samples, 0.31%)</title><rect x="853.6" y="515.0" width="3.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="856.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/ConsistentHashImpl.all (1,770 samples, 6.64%)</title><rect x="857.3" y="563.0" width="78.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="860.3" y="574.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/Set.copyOf (1,770 samples, 6.64%)</title><rect x="857.3" y="547.0" width="78.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="860.3" y="558.0">java/util..</text>
</g>
<g>
<title>java.util.HashSet (54 samples, 0.20%)</title><rect x="857.3" y="531.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="860.3" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (372 samples, 1.39%)</title><rect x="859.7" y="531.0" width="16.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="862.7" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (137 samples, 0.51%)</title><rect x="859.7" y="515.0" width="6.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="862.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (235 samples, 0.88%)</title><rect x="865.8" y="515.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="868.8" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (187 samples, 0.70%)</title><rect x="865.8" y="499.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="868.8" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (187 samples, 0.70%)</title><rect x="865.8" y="483.0" width="8.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="868.8" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (48 samples, 0.18%)</title><rect x="874.0" y="499.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="877.0" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (48 samples, 0.18%)</title><rect x="874.0" y="483.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="877.0" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1,055 samples, 3.96%)</title><rect x="876.2" y="531.0" width="46.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="879.2" y="542.0">java..</text>
</g>
<g>
<title>java.util.HashMap (194 samples, 0.73%)</title><rect x="876.2" y="515.0" width="8.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="879.2" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (861 samples, 3.23%)</title><rect x="884.7" y="515.0" width="38.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="887.7" y="526.0">jav..</text>
</g>
<g>
<title>java/util/HashSet.add (714 samples, 2.68%)</title><rect x="884.7" y="499.0" width="31.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.7" y="510.0">ja..</text>
</g>
<g>
<title>java/util/HashMap.put (714 samples, 2.68%)</title><rect x="884.7" y="483.0" width="31.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="887.7" y="494.0">ja..</text>
</g>
<g>
<title>java/util/HashMap.putVal (714 samples, 2.68%)</title><rect x="884.7" y="467.0" width="31.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="887.7" y="478.0">ja..</text>
</g>
<g>
<title>java/util/HashMap.newNode (384 samples, 1.44%)</title><rect x="884.7" y="451.0" width="17.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="887.7" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (384 samples, 1.44%)</title><rect x="884.7" y="435.0" width="17.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="887.7" y="446.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (330 samples, 1.24%)</title><rect x="901.7" y="451.0" width="14.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="904.7" y="462.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (330 samples, 1.24%)</title><rect x="901.7" y="435.0" width="14.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="904.7" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (147 samples, 0.55%)</title><rect x="916.3" y="499.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="919.3" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (147 samples, 0.55%)</title><rect x="916.3" y="483.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="919.3" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (147 samples, 0.55%)</title><rect x="916.3" y="467.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="919.3" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (147 samples, 0.55%)</title><rect x="916.3" y="451.0" width="6.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="919.3" y="462.0"></text>
</g>
<g>
<title>java/util/Set.of (289 samples, 1.08%)</title><rect x="922.8" y="531.0" width="12.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="925.8" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$SetN (101 samples, 0.38%)</title><rect x="922.8" y="515.0" width="4.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="925.8" y="526.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (188 samples, 0.70%)</title><rect x="927.3" y="515.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="930.3" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (188 samples, 0.70%)</title><rect x="927.3" y="499.0" width="8.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="930.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/shakhmin/topology/RF.from (1,444 samples, 5.41%)</title><rect x="935.6" y="563.0" width="63.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="938.6" y="574.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/base/Splitter.on (252 samples, 0.94%)</title><rect x="935.6" y="547.0" width="11.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="938.6" y="558.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (55 samples, 0.21%)</title><rect x="935.6" y="531.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="938.6" y="542.0"></text>
</g>
<g>
<title>com.google.common.base.CharMatcher$Is (55 samples, 0.21%)</title><rect x="935.6" y="515.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="938.6" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (197 samples, 0.74%)</title><rect x="938.1" y="531.0" width="8.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="941.1" y="542.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1 (56 samples, 0.21%)</title><rect x="938.1" y="515.0" width="2.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="941.1" y="526.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter (141 samples, 0.53%)</title><rect x="940.5" y="515.0" width="6.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="943.5" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1,105 samples, 4.14%)</title><rect x="946.8" y="547.0" width="48.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="949.8" y="558.0">com/..</text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (456 samples, 1.71%)</title><rect x="946.8" y="531.0" width="20.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="949.8" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (456 samples, 1.71%)</title><rect x="946.8" y="515.0" width="20.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="949.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (456 samples, 1.71%)</title><rect x="946.8" y="499.0" width="20.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="949.8" y="510.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (456 samples, 1.71%)</title><rect x="946.8" y="483.0" width="20.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="949.8" y="494.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (456 samples, 1.71%)</title><rect x="946.8" y="467.0" width="20.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="949.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (456 samples, 1.71%)</title><rect x="946.8" y="451.0" width="20.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="949.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (456 samples, 1.71%)</title><rect x="946.8" y="435.0" width="20.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="949.8" y="446.0"></text>
</g>
<g>
<title>java.lang.String (215 samples, 0.81%)</title><rect x="946.8" y="419.0" width="9.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="949.8" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (241 samples, 0.90%)</title><rect x="956.3" y="419.0" width="10.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="959.3" y="430.0"></text>
</g>
<g>
<title>byte[] (241 samples, 0.90%)</title><rect x="956.3" y="403.0" width="10.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="959.3" y="414.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (216 samples, 0.81%)</title><rect x="966.9" y="531.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="969.9" y="542.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (216 samples, 0.81%)</title><rect x="966.9" y="515.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="969.9" y="526.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (216 samples, 0.81%)</title><rect x="966.9" y="499.0" width="9.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="969.9" y="510.0"></text>
</g>
<g>
<title>com.google.common.base.Splitter$1$1 (216 samples, 0.81%)</title><rect x="966.9" y="483.0" width="9.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="969.9" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (102 samples, 0.38%)</title><rect x="976.5" y="531.0" width="4.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="979.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (227 samples, 0.85%)</title><rect x="981.0" y="531.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="984.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (227 samples, 0.85%)</title><rect x="981.0" y="515.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="984.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (227 samples, 0.85%)</title><rect x="981.0" y="499.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="984.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (227 samples, 0.85%)</title><rect x="981.0" y="483.0" width="10.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="984.0" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (227 samples, 0.85%)</title><rect x="981.0" y="467.0" width="10.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="984.0" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (227 samples, 0.85%)</title><rect x="981.0" y="451.0" width="10.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="984.0" y="462.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (104 samples, 0.39%)</title><rect x="991.1" y="531.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="994.1" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableRandomAccessList (104 samples, 0.39%)</title><rect x="991.1" y="515.0" width="4.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="994.1" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.shakhmin.topology.RF (87 samples, 0.33%)</title><rect x="995.7" y="547.0" width="3.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="998.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (251 samples, 0.94%)</title><rect x="999.5" y="595.0" width="11.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1002.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (251 samples, 0.94%)</title><rect x="999.5" y="579.0" width="11.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1002.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (251 samples, 0.94%)</title><rect x="999.5" y="563.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1002.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (96 samples, 0.36%)</title><rect x="999.5" y="547.0" width="4.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1002.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (155 samples, 0.58%)</title><rect x="1003.8" y="547.0" width="6.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1006.8" y="558.0"></text>
</g>
<g>
<title>byte[] (155 samples, 0.58%)</title><rect x="1003.8" y="531.0" width="6.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1006.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,380 samples, 5.17%)</title><rect x="1010.6" y="627.0" width="61.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1013.6" y="638.0">one/ni..</text>
</g>
<g>
<title>one.nio.http.Request (127 samples, 0.48%)</title><rect x="1010.6" y="611.0" width="5.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1013.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (348 samples, 1.30%)</title><rect x="1016.2" y="611.0" width="15.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1019.2" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (348 samples, 1.30%)</title><rect x="1016.2" y="595.0" width="15.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1019.2" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (905 samples, 3.39%)</title><rect x="1031.6" y="611.0" width="40.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1034.6" y="622.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (905 samples, 3.39%)</title><rect x="1031.6" y="595.0" width="40.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1034.6" y="606.0">one..</text>
</g>
<g>
<title>char[] (525 samples, 1.97%)</title><rect x="1031.6" y="579.0" width="23.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1034.6" y="590.0">c..</text>
</g>
<g>
<title>java.lang.String (133 samples, 0.50%)</title><rect x="1054.9" y="579.0" width="5.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1057.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (247 samples, 0.93%)</title><rect x="1060.8" y="579.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1063.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (247 samples, 0.93%)</title><rect x="1060.8" y="563.0" width="10.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1063.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (247 samples, 0.93%)</title><rect x="1060.8" y="547.0" width="10.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1063.8" y="558.0"></text>
</g>
<g>
<title>byte[] (247 samples, 0.93%)</title><rect x="1060.8" y="531.0" width="10.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1063.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (46 samples, 0.17%)</title><rect x="1071.7" y="627.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1074.7" y="638.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.17%)</title><rect x="1071.7" y="611.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1074.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (114 samples, 0.43%)</title><rect x="1073.7" y="627.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1076.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (114 samples, 0.43%)</title><rect x="1073.7" y="611.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1076.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (114 samples, 0.43%)</title><rect x="1073.7" y="595.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1076.7" y="606.0"></text>
</g>
<g>
<title>java.lang.String (59 samples, 0.22%)</title><rect x="1073.7" y="579.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1076.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (55 samples, 0.21%)</title><rect x="1076.3" y="579.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1079.3" y="590.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.21%)</title><rect x="1076.3" y="563.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1079.3" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,506 samples, 9.40%)</title><rect x="1078.8" y="627.0" width="110.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1081.8" y="638.0">one/nio/util/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,506 samples, 9.40%)</title><rect x="1078.8" y="611.0" width="110.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1081.8" y="622.0">one/nio/util/..</text>
</g>
<g>
<title>char[] (1,225 samples, 4.59%)</title><rect x="1078.8" y="595.0" width="54.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1081.8" y="606.0">char[]</text>
</g>
<g>
<title>java.lang.String (487 samples, 1.83%)</title><rect x="1133.0" y="595.0" width="21.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1136.0" y="606.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (794 samples, 2.98%)</title><rect x="1154.5" y="595.0" width="35.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1157.5" y="606.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (794 samples, 2.98%)</title><rect x="1154.5" y="579.0" width="35.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1157.5" y="590.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (794 samples, 2.98%)</title><rect x="1154.5" y="563.0" width="35.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1157.5" y="574.0">jav..</text>
</g>
<g>
<title>byte[] (794 samples, 2.98%)</title><rect x="1154.5" y="547.0" width="35.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1157.5" y="558.0">byt..</text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 0.03%)</title><rect x="1189.6" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.6" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (8 samples, 0.03%)</title><rect x="1189.6" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1192.6" y="638.0"></text>
</g>
<g>
<title>one/nio/net/SocketClosedException.&lt;init&gt; (8 samples, 0.03%)</title><rect x="1189.6" y="611.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1192.6" y="622.0"></text>
</g>
<g>
<title>java/net/SocketException.&lt;init&gt; (8 samples, 0.03%)</title><rect x="1189.6" y="595.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.6" y="606.0"></text>
</g>
<g>
<title>java/io/IOException.&lt;init&gt; (8 samples, 0.03%)</title><rect x="1189.6" y="579.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1192.6" y="590.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (8 samples, 0.03%)</title><rect x="1189.6" y="563.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1192.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (8 samples, 0.03%)</title><rect x="1189.6" y="547.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1192.6" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (8 samples, 0.03%)</title><rect x="1189.6" y="531.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1192.6" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (8 samples, 0.03%)</title><rect x="1189.6" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1192.6" y="526.0"></text>
</g>
</g>
</svg>
